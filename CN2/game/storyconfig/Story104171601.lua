return {
	Play417161001 = function(arg_1_0, arg_1_1)
		arg_1_1.time_ = 0
		arg_1_1.frameCnt_ = 0
		arg_1_1.state_ = "playing"
		arg_1_1.curTalkId_ = 417161001
		arg_1_1.duration_ = 10.4

		SetActive(arg_1_1.tipsGo_, false)

		function arg_1_1.onSingleLineFinish_()
			arg_1_1.onSingleLineUpdate_ = nil
			arg_1_1.onSingleLineFinish_ = nil
			arg_1_1.state_ = "waiting"
		end

		function arg_1_1.playNext_(arg_3_0)
			if arg_3_0 == 1 then
				arg_1_0:Play417161002(arg_1_1)
			end
		end

		function arg_1_1.onSingleLineUpdate_(arg_4_0)
			local var_4_0 = 7.4

			if var_4_0 < arg_1_1.time_ and arg_1_1.time_ <= var_4_0 + arg_4_0 then
				arg_1_1.allBtn_.enabled = false
			end

			local var_4_1 = 0.0666666666666669

			if arg_1_1.time_ >= var_4_0 + var_4_1 and arg_1_1.time_ < var_4_0 + var_4_1 + arg_4_0 then
				arg_1_1.allBtn_.enabled = true
			end

			local var_4_2 = 0
			local var_4_3 = 5
			local var_4_4 = "ST73"

			if var_4_2 < arg_1_1.time_ and arg_1_1.time_ <= var_4_2 + arg_4_0 then
				arg_1_1.timestampController_:SetSelectedState("show")
				arg_1_1.timestampAni_:Play("in")

				arg_1_1.timeTicketbgImg_.sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_4_4)

				arg_1_1.timestampColorController_:SetSelectedState("cold")

				local var_4_5 = arg_1_1:GetWordFromCfg(501051)
				local var_4_6 = arg_1_1:FormatText(var_4_5.content)

				arg_1_1.text_timeText_.text = var_4_6

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_timeText_)

				local var_4_7 = arg_1_1:GetWordFromCfg(501052)
				local var_4_8 = arg_1_1:FormatText(var_4_7.content)

				arg_1_1.text_siteText_.text = var_4_8

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_siteText_)
			end

			if arg_1_1.time_ >= var_4_2 + var_4_3 and arg_1_1.time_ < var_4_2 + var_4_3 + arg_4_0 then
				AnimatorTools.PlayAnimationWithCallback(arg_1_1.timestampAni_, "out", function()
					arg_1_1.timestampController_:SetSelectedState("hide")
				end)
			end

			local var_4_9 = 5

			if var_4_9 < arg_1_1.time_ and arg_1_1.time_ <= var_4_9 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = false

				arg_1_1:SetGaussion(false)
			end

			local var_4_10 = 1.2

			if var_4_9 <= arg_1_1.time_ and arg_1_1.time_ < var_4_9 + var_4_10 then
				local var_4_11 = (arg_1_1.time_ - var_4_9) / var_4_10
				local var_4_12 = Color.New(0, 0, 0)

				var_4_12.a = Mathf.Lerp(0, 1, var_4_11)
				arg_1_1.mask_.color = var_4_12
			end

			if arg_1_1.time_ >= var_4_9 + var_4_10 and arg_1_1.time_ < var_4_9 + var_4_10 + arg_4_0 then
				local var_4_13 = Color.New(0, 0, 0)

				var_4_13.a = 1
				arg_1_1.mask_.color = var_4_13
			end

			local var_4_14 = 6.2

			if var_4_14 < arg_1_1.time_ and arg_1_1.time_ <= var_4_14 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = false

				arg_1_1:SetGaussion(false)
			end

			local var_4_15 = 1.2

			if var_4_14 <= arg_1_1.time_ and arg_1_1.time_ < var_4_14 + var_4_15 then
				local var_4_16 = (arg_1_1.time_ - var_4_14) / var_4_15
				local var_4_17 = Color.New(0, 0, 0)

				var_4_17.a = Mathf.Lerp(1, 0, var_4_16)
				arg_1_1.mask_.color = var_4_17
			end

			if arg_1_1.time_ >= var_4_14 + var_4_15 and arg_1_1.time_ < var_4_14 + var_4_15 + arg_4_0 then
				local var_4_18 = Color.New(0, 0, 0)
				local var_4_19 = 0

				arg_1_1.mask_.enabled = false
				var_4_18.a = var_4_19
				arg_1_1.mask_.color = var_4_18
			end

			local var_4_20 = "ST73"

			if arg_1_1.bgs_[var_4_20] == nil then
				local var_4_21 = Object.Instantiate(arg_1_1.paintGo_)

				var_4_21:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_4_20)
				var_4_21.name = var_4_20
				var_4_21.transform.parent = arg_1_1.stage_.transform
				var_4_21.transform.localPosition = Vector3.New(0, 100, 0)
				arg_1_1.bgs_[var_4_20] = var_4_21
			end

			local var_4_22 = 0

			if var_4_22 < arg_1_1.time_ and arg_1_1.time_ <= var_4_22 + arg_4_0 then
				local var_4_23 = manager.ui.mainCamera.transform.localPosition
				local var_4_24 = Vector3.New(0, 0, 10) + Vector3.New(var_4_23.x, var_4_23.y, 0)
				local var_4_25 = arg_1_1.bgs_.ST73

				var_4_25.transform.localPosition = var_4_24
				var_4_25.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_4_26 = var_4_25:GetComponent("SpriteRenderer")

				if var_4_26 and var_4_26.sprite then
					local var_4_27 = (var_4_25.transform.localPosition - var_4_23).z
					local var_4_28 = manager.ui.mainCameraCom_
					local var_4_29 = 2 * var_4_27 * Mathf.Tan(var_4_28.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_4_30 = var_4_29 * var_4_28.aspect
					local var_4_31 = var_4_26.sprite.bounds.size.x
					local var_4_32 = var_4_26.sprite.bounds.size.y
					local var_4_33 = var_4_30 / var_4_31
					local var_4_34 = var_4_29 / var_4_32
					local var_4_35 = var_4_34 < var_4_33 and var_4_33 or var_4_34

					var_4_25.transform.localScale = Vector3.New(var_4_35, var_4_35, 0)
				end

				for iter_4_0, iter_4_1 in pairs(arg_1_1.bgs_) do
					if iter_4_0 ~= "ST73" then
						iter_4_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_4_36 = 0

			if var_4_36 < arg_1_1.time_ and arg_1_1.time_ <= var_4_36 + arg_4_0 then
				arg_1_1.allBtn_.enabled = false
			end

			local var_4_37 = 6.2

			if arg_1_1.time_ >= var_4_36 + var_4_37 and arg_1_1.time_ < var_4_36 + var_4_37 + arg_4_0 then
				arg_1_1.allBtn_.enabled = true
			end

			local var_4_38 = 0

			if var_4_38 < arg_1_1.time_ and arg_1_1.time_ <= var_4_38 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = false

				arg_1_1:SetGaussion(false)
			end

			local var_4_39 = 1

			if var_4_38 <= arg_1_1.time_ and arg_1_1.time_ < var_4_38 + var_4_39 then
				local var_4_40 = (arg_1_1.time_ - var_4_38) / var_4_39
				local var_4_41 = Color.New(0, 0, 0)

				var_4_41.a = Mathf.Lerp(1, 0, var_4_40)
				arg_1_1.mask_.color = var_4_41
			end

			if arg_1_1.time_ >= var_4_38 + var_4_39 and arg_1_1.time_ < var_4_38 + var_4_39 + arg_4_0 then
				local var_4_42 = Color.New(0, 0, 0)
				local var_4_43 = 0

				arg_1_1.mask_.enabled = false
				var_4_42.a = var_4_43
				arg_1_1.mask_.color = var_4_42
			end

			local var_4_44 = 0
			local var_4_45 = 0.2

			if var_4_44 < arg_1_1.time_ and arg_1_1.time_ <= var_4_44 + arg_4_0 then
				local var_4_46 = "play"
				local var_4_47 = "music"

				arg_1_1:AudioAction(var_4_46, var_4_47, "ui_battle", "ui_battle_stopbgm", "")

				local var_4_48 = ""
				local var_4_49 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_4_49 ~= "" then
					if arg_1_1.bgmTxt_.text ~= var_4_49 and arg_1_1.bgmTxt_.text ~= "" then
						if arg_1_1.bgmTxt2_.text ~= "" then
							arg_1_1.bgmTxt_.text = arg_1_1.bgmTxt2_.text
						end

						arg_1_1.bgmTxt2_.text = var_4_49

						arg_1_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_1_1.bgmTxt_.text = var_4_49
					end

					if arg_1_1.bgmTimer then
						arg_1_1.bgmTimer:Stop()

						arg_1_1.bgmTimer = nil
					end

					if arg_1_1.settingData.show_music_name == 1 then
						arg_1_1.musicController:SetSelectedState("show")
						arg_1_1.musicAnimator_:Play("open", 0, 0)

						if arg_1_1.settingData.music_time ~= 0 then
							arg_1_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_1_1.settingData.music_time), function()
								if arg_1_1 == nil or isNil(arg_1_1.bgmTxt_) then
									return
								end

								arg_1_1.musicController:SetSelectedState("hide")
								arg_1_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_4_50 = 5.2
			local var_4_51 = 1

			if var_4_50 < arg_1_1.time_ and arg_1_1.time_ <= var_4_50 + arg_4_0 then
				local var_4_52 = "play"
				local var_4_53 = "music"

				arg_1_1:AudioAction(var_4_52, var_4_53, "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base.awb")

				local var_4_54 = ""
				local var_4_55 = manager.audio:GetAudioName("bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base")

				if var_4_55 ~= "" then
					if arg_1_1.bgmTxt_.text ~= var_4_55 and arg_1_1.bgmTxt_.text ~= "" then
						if arg_1_1.bgmTxt2_.text ~= "" then
							arg_1_1.bgmTxt_.text = arg_1_1.bgmTxt2_.text
						end

						arg_1_1.bgmTxt2_.text = var_4_55

						arg_1_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_1_1.bgmTxt_.text = var_4_55
					end

					if arg_1_1.bgmTimer then
						arg_1_1.bgmTimer:Stop()

						arg_1_1.bgmTimer = nil
					end

					if arg_1_1.settingData.show_music_name == 1 then
						arg_1_1.musicController:SetSelectedState("show")
						arg_1_1.musicAnimator_:Play("open", 0, 0)

						if arg_1_1.settingData.music_time ~= 0 then
							arg_1_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_1_1.settingData.music_time), function()
								if arg_1_1 == nil or isNil(arg_1_1.bgmTxt_) then
									return
								end

								arg_1_1.musicController:SetSelectedState("hide")
								arg_1_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			if arg_1_1.frameCnt_ <= 1 then
				arg_1_1.dialog_:SetActive(false)
			end

			local var_4_56 = 7.4
			local var_4_57 = 0.175

			if var_4_56 < arg_1_1.time_ and arg_1_1.time_ <= var_4_56 + arg_4_0 then
				arg_1_1.talkMaxDuration = 0

				arg_1_1.dialog_:SetActive(true)

				local var_4_58 = LeanTween.value(arg_1_1.dialog_, 0, 1, 0.3)

				var_4_58:setOnUpdate(LuaHelper.FloatAction(function(arg_8_0)
					arg_1_1.dialogCg_.alpha = arg_8_0
				end))
				var_4_58:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_1_1.dialog_)
					var_4_58:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_1_1.duration_ = arg_1_1.duration_ + 0.3

				SetActive(arg_1_1.leftNameGo_, true)

				local var_4_59 = arg_1_1:FormatText(StoryNameCfg[1110].name)

				arg_1_1.leftNameTxt_.text = var_4_59

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_1_1.leftNameTxt_.transform)

				arg_1_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_1_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_1_1:RecordName(arg_1_1.leftNameTxt_.text)
				SetActive(arg_1_1.iconTrs_.gameObject, true)
				arg_1_1.iconController_:SetSelectedState("hero")

				arg_1_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_1_1.callingController_:SetSelectedState("normal")

				arg_1_1.keyicon_.color = Color.New(1, 1, 1)
				arg_1_1.icon_.color = Color.New(1, 1, 1)

				local var_4_60 = arg_1_1:GetWordFromCfg(417161001)
				local var_4_61 = arg_1_1:FormatText(var_4_60.content)

				arg_1_1.text_.text = var_4_61

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_)

				local var_4_62 = 7
				local var_4_63 = utf8.len(var_4_61)
				local var_4_64 = var_4_62 <= 0 and var_4_57 or var_4_57 * (var_4_63 / var_4_62)

				if var_4_64 > 0 and var_4_57 < var_4_64 then
					arg_1_1.talkMaxDuration = var_4_64
					var_4_56 = var_4_56 + 0.3

					if var_4_64 + var_4_56 > arg_1_1.duration_ then
						arg_1_1.duration_ = var_4_64 + var_4_56
					end
				end

				arg_1_1.text_.text = var_4_61
				arg_1_1.typewritter.percent = 0

				arg_1_1.typewritter:SetDirty()
				arg_1_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161001", "story_v_out_417161.awb") ~= 0 then
					local var_4_65 = manager.audio:GetVoiceLength("story_v_out_417161", "417161001", "story_v_out_417161.awb") / 1000

					if var_4_65 + var_4_56 > arg_1_1.duration_ then
						arg_1_1.duration_ = var_4_65 + var_4_56
					end

					if var_4_60.prefab_name ~= "" and arg_1_1.actors_[var_4_60.prefab_name] ~= nil then
						local var_4_66 = LuaForUtil.PlayVoiceWithCriLipsync(arg_1_1.actors_[var_4_60.prefab_name].transform, "story_v_out_417161", "417161001", "story_v_out_417161.awb")

						arg_1_1:RecordAudio("417161001", var_4_66)
						arg_1_1:RecordAudio("417161001", var_4_66)
					else
						arg_1_1:AudioAction("play", "voice", "story_v_out_417161", "417161001", "story_v_out_417161.awb")
					end

					arg_1_1:RecordHistoryTalkVoice("story_v_out_417161", "417161001", "story_v_out_417161.awb")
				end

				arg_1_1:RecordContent(arg_1_1.text_.text)
			end

			local var_4_67 = var_4_56 + 0.3
			local var_4_68 = math.max(var_4_57, arg_1_1.talkMaxDuration)

			if var_4_67 <= arg_1_1.time_ and arg_1_1.time_ < var_4_67 + var_4_68 then
				arg_1_1.typewritter.percent = (arg_1_1.time_ - var_4_67) / var_4_68

				arg_1_1.typewritter:SetDirty()
			end

			if arg_1_1.time_ >= var_4_67 + var_4_68 and arg_1_1.time_ < var_4_67 + var_4_68 + arg_4_0 then
				arg_1_1.typewritter.percent = 1

				arg_1_1.typewritter:SetDirty()
				arg_1_1:ShowNextGo(true)
			end
		end
	end,
	Play417161002 = function(arg_10_0, arg_10_1)
		arg_10_1.time_ = 0
		arg_10_1.frameCnt_ = 0
		arg_10_1.state_ = "playing"
		arg_10_1.curTalkId_ = 417161002
		arg_10_1.duration_ = 3.2

		SetActive(arg_10_1.tipsGo_, false)

		function arg_10_1.onSingleLineFinish_()
			arg_10_1.onSingleLineUpdate_ = nil
			arg_10_1.onSingleLineFinish_ = nil
			arg_10_1.state_ = "waiting"
		end

		function arg_10_1.playNext_(arg_12_0)
			if arg_12_0 == 1 then
				arg_10_0:Play417161003(arg_10_1)
			end
		end

		function arg_10_1.onSingleLineUpdate_(arg_13_0)
			local var_13_0 = "10128"

			if arg_10_1.actors_[var_13_0] == nil then
				local var_13_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10128")

				if not isNil(var_13_1) then
					local var_13_2 = Object.Instantiate(var_13_1, arg_10_1.canvasGo_.transform)

					var_13_2.transform:SetSiblingIndex(1)

					var_13_2.name = var_13_0
					var_13_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_10_1.actors_[var_13_0] = var_13_2

					local var_13_3 = var_13_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_10_1.isInRecall_ then
						for iter_13_0, iter_13_1 in ipairs(var_13_3) do
							iter_13_1.color = arg_10_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_13_4 = arg_10_1.actors_["10128"]
			local var_13_5 = 0

			if var_13_5 < arg_10_1.time_ and arg_10_1.time_ <= var_13_5 + arg_13_0 and not isNil(var_13_4) and arg_10_1.var_.actorSpriteComps10128 == nil then
				arg_10_1.var_.actorSpriteComps10128 = var_13_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_13_6 = 0.2

			if var_13_5 <= arg_10_1.time_ and arg_10_1.time_ < var_13_5 + var_13_6 and not isNil(var_13_4) then
				local var_13_7 = (arg_10_1.time_ - var_13_5) / var_13_6

				if arg_10_1.var_.actorSpriteComps10128 then
					for iter_13_2, iter_13_3 in pairs(arg_10_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_13_3 then
							if arg_10_1.isInRecall_ then
								local var_13_8 = Mathf.Lerp(iter_13_3.color.r, arg_10_1.hightColor1.r, var_13_7)
								local var_13_9 = Mathf.Lerp(iter_13_3.color.g, arg_10_1.hightColor1.g, var_13_7)
								local var_13_10 = Mathf.Lerp(iter_13_3.color.b, arg_10_1.hightColor1.b, var_13_7)

								iter_13_3.color = Color.New(var_13_8, var_13_9, var_13_10)
							else
								local var_13_11 = Mathf.Lerp(iter_13_3.color.r, 1, var_13_7)

								iter_13_3.color = Color.New(var_13_11, var_13_11, var_13_11)
							end
						end
					end
				end
			end

			if arg_10_1.time_ >= var_13_5 + var_13_6 and arg_10_1.time_ < var_13_5 + var_13_6 + arg_13_0 and not isNil(var_13_4) and arg_10_1.var_.actorSpriteComps10128 then
				for iter_13_4, iter_13_5 in pairs(arg_10_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_13_5 then
						if arg_10_1.isInRecall_ then
							iter_13_5.color = arg_10_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_13_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_10_1.var_.actorSpriteComps10128 = nil
			end

			local var_13_12 = arg_10_1.actors_["10128"].transform
			local var_13_13 = 0

			if var_13_13 < arg_10_1.time_ and arg_10_1.time_ <= var_13_13 + arg_13_0 then
				arg_10_1.var_.moveOldPos10128 = var_13_12.localPosition
				var_13_12.localScale = Vector3.New(1, 1, 1)

				arg_10_1:CheckSpriteTmpPos("10128", 3)

				local var_13_14 = var_13_12.childCount

				for iter_13_6 = 0, var_13_14 - 1 do
					local var_13_15 = var_13_12:GetChild(iter_13_6)

					if var_13_15.name == "" or not string.find(var_13_15.name, "split") then
						var_13_15.gameObject:SetActive(true)
					else
						var_13_15.gameObject:SetActive(false)
					end
				end
			end

			local var_13_16 = 0.001

			if var_13_13 <= arg_10_1.time_ and arg_10_1.time_ < var_13_13 + var_13_16 then
				local var_13_17 = (arg_10_1.time_ - var_13_13) / var_13_16
				local var_13_18 = Vector3.New(0, -347, -300)

				var_13_12.localPosition = Vector3.Lerp(arg_10_1.var_.moveOldPos10128, var_13_18, var_13_17)
			end

			if arg_10_1.time_ >= var_13_13 + var_13_16 and arg_10_1.time_ < var_13_13 + var_13_16 + arg_13_0 then
				var_13_12.localPosition = Vector3.New(0, -347, -300)
			end

			local var_13_19 = 0
			local var_13_20 = 0.35

			if var_13_19 < arg_10_1.time_ and arg_10_1.time_ <= var_13_19 + arg_13_0 then
				arg_10_1.talkMaxDuration = 0
				arg_10_1.dialogCg_.alpha = 1

				arg_10_1.dialog_:SetActive(true)
				SetActive(arg_10_1.leftNameGo_, true)

				local var_13_21 = arg_10_1:FormatText(StoryNameCfg[595].name)

				arg_10_1.leftNameTxt_.text = var_13_21

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_10_1.leftNameTxt_.transform)

				arg_10_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_10_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_10_1:RecordName(arg_10_1.leftNameTxt_.text)
				SetActive(arg_10_1.iconTrs_.gameObject, false)
				arg_10_1.callingController_:SetSelectedState("normal")

				local var_13_22 = arg_10_1:GetWordFromCfg(417161002)
				local var_13_23 = arg_10_1:FormatText(var_13_22.content)

				arg_10_1.text_.text = var_13_23

				LuaForUtil.ClearLinePrefixSymbol(arg_10_1.text_)

				local var_13_24 = 14
				local var_13_25 = utf8.len(var_13_23)
				local var_13_26 = var_13_24 <= 0 and var_13_20 or var_13_20 * (var_13_25 / var_13_24)

				if var_13_26 > 0 and var_13_20 < var_13_26 then
					arg_10_1.talkMaxDuration = var_13_26

					if var_13_26 + var_13_19 > arg_10_1.duration_ then
						arg_10_1.duration_ = var_13_26 + var_13_19
					end
				end

				arg_10_1.text_.text = var_13_23
				arg_10_1.typewritter.percent = 0

				arg_10_1.typewritter:SetDirty()
				arg_10_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161002", "story_v_out_417161.awb") ~= 0 then
					local var_13_27 = manager.audio:GetVoiceLength("story_v_out_417161", "417161002", "story_v_out_417161.awb") / 1000

					if var_13_27 + var_13_19 > arg_10_1.duration_ then
						arg_10_1.duration_ = var_13_27 + var_13_19
					end

					if var_13_22.prefab_name ~= "" and arg_10_1.actors_[var_13_22.prefab_name] ~= nil then
						local var_13_28 = LuaForUtil.PlayVoiceWithCriLipsync(arg_10_1.actors_[var_13_22.prefab_name].transform, "story_v_out_417161", "417161002", "story_v_out_417161.awb")

						arg_10_1:RecordAudio("417161002", var_13_28)
						arg_10_1:RecordAudio("417161002", var_13_28)
					else
						arg_10_1:AudioAction("play", "voice", "story_v_out_417161", "417161002", "story_v_out_417161.awb")
					end

					arg_10_1:RecordHistoryTalkVoice("story_v_out_417161", "417161002", "story_v_out_417161.awb")
				end

				arg_10_1:RecordContent(arg_10_1.text_.text)
			end

			local var_13_29 = math.max(var_13_20, arg_10_1.talkMaxDuration)

			if var_13_19 <= arg_10_1.time_ and arg_10_1.time_ < var_13_19 + var_13_29 then
				arg_10_1.typewritter.percent = (arg_10_1.time_ - var_13_19) / var_13_29

				arg_10_1.typewritter:SetDirty()
			end

			if arg_10_1.time_ >= var_13_19 + var_13_29 and arg_10_1.time_ < var_13_19 + var_13_29 + arg_13_0 then
				arg_10_1.typewritter.percent = 1

				arg_10_1.typewritter:SetDirty()
				arg_10_1:ShowNextGo(true)
			end
		end
	end,
	Play417161003 = function(arg_14_0, arg_14_1)
		arg_14_1.time_ = 0
		arg_14_1.frameCnt_ = 0
		arg_14_1.state_ = "playing"
		arg_14_1.curTalkId_ = 417161003
		arg_14_1.duration_ = 5

		SetActive(arg_14_1.tipsGo_, false)

		function arg_14_1.onSingleLineFinish_()
			arg_14_1.onSingleLineUpdate_ = nil
			arg_14_1.onSingleLineFinish_ = nil
			arg_14_1.state_ = "waiting"
		end

		function arg_14_1.playNext_(arg_16_0)
			if arg_16_0 == 1 then
				arg_14_0:Play417161004(arg_14_1)
			end
		end

		function arg_14_1.onSingleLineUpdate_(arg_17_0)
			local var_17_0 = arg_14_1.actors_["10128"].transform
			local var_17_1 = 0

			if var_17_1 < arg_14_1.time_ and arg_14_1.time_ <= var_17_1 + arg_17_0 then
				arg_14_1.var_.moveOldPos10128 = var_17_0.localPosition
				var_17_0.localScale = Vector3.New(1, 1, 1)

				arg_14_1:CheckSpriteTmpPos("10128", 7)

				local var_17_2 = var_17_0.childCount

				for iter_17_0 = 0, var_17_2 - 1 do
					local var_17_3 = var_17_0:GetChild(iter_17_0)

					if var_17_3.name == "" or not string.find(var_17_3.name, "split") then
						var_17_3.gameObject:SetActive(true)
					else
						var_17_3.gameObject:SetActive(false)
					end
				end
			end

			local var_17_4 = 0.001

			if var_17_1 <= arg_14_1.time_ and arg_14_1.time_ < var_17_1 + var_17_4 then
				local var_17_5 = (arg_14_1.time_ - var_17_1) / var_17_4
				local var_17_6 = Vector3.New(0, -2000, -300)

				var_17_0.localPosition = Vector3.Lerp(arg_14_1.var_.moveOldPos10128, var_17_6, var_17_5)
			end

			if arg_14_1.time_ >= var_17_1 + var_17_4 and arg_14_1.time_ < var_17_1 + var_17_4 + arg_17_0 then
				var_17_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_17_7 = 0
			local var_17_8 = 1.275

			if var_17_7 < arg_14_1.time_ and arg_14_1.time_ <= var_17_7 + arg_17_0 then
				arg_14_1.talkMaxDuration = 0
				arg_14_1.dialogCg_.alpha = 1

				arg_14_1.dialog_:SetActive(true)
				SetActive(arg_14_1.leftNameGo_, false)

				arg_14_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_14_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_14_1:RecordName(arg_14_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_14_1.iconTrs_.gameObject, false)
				arg_14_1.callingController_:SetSelectedState("normal")

				local var_17_9 = arg_14_1:GetWordFromCfg(417161003)
				local var_17_10 = arg_14_1:FormatText(var_17_9.content)

				arg_14_1.text_.text = var_17_10

				LuaForUtil.ClearLinePrefixSymbol(arg_14_1.text_)

				local var_17_11 = 51
				local var_17_12 = utf8.len(var_17_10)
				local var_17_13 = var_17_11 <= 0 and var_17_8 or var_17_8 * (var_17_12 / var_17_11)

				if var_17_13 > 0 and var_17_8 < var_17_13 then
					arg_14_1.talkMaxDuration = var_17_13

					if var_17_13 + var_17_7 > arg_14_1.duration_ then
						arg_14_1.duration_ = var_17_13 + var_17_7
					end
				end

				arg_14_1.text_.text = var_17_10
				arg_14_1.typewritter.percent = 0

				arg_14_1.typewritter:SetDirty()
				arg_14_1:ShowNextGo(false)
				arg_14_1:RecordContent(arg_14_1.text_.text)
			end

			local var_17_14 = math.max(var_17_8, arg_14_1.talkMaxDuration)

			if var_17_7 <= arg_14_1.time_ and arg_14_1.time_ < var_17_7 + var_17_14 then
				arg_14_1.typewritter.percent = (arg_14_1.time_ - var_17_7) / var_17_14

				arg_14_1.typewritter:SetDirty()
			end

			if arg_14_1.time_ >= var_17_7 + var_17_14 and arg_14_1.time_ < var_17_7 + var_17_14 + arg_17_0 then
				arg_14_1.typewritter.percent = 1

				arg_14_1.typewritter:SetDirty()
				arg_14_1:ShowNextGo(true)
			end
		end
	end,
	Play417161004 = function(arg_18_0, arg_18_1)
		arg_18_1.time_ = 0
		arg_18_1.frameCnt_ = 0
		arg_18_1.state_ = "playing"
		arg_18_1.curTalkId_ = 417161004
		arg_18_1.duration_ = 5

		SetActive(arg_18_1.tipsGo_, false)

		function arg_18_1.onSingleLineFinish_()
			arg_18_1.onSingleLineUpdate_ = nil
			arg_18_1.onSingleLineFinish_ = nil
			arg_18_1.state_ = "waiting"
		end

		function arg_18_1.playNext_(arg_20_0)
			if arg_20_0 == 1 then
				arg_18_0:Play417161005(arg_18_1)
			end
		end

		function arg_18_1.onSingleLineUpdate_(arg_21_0)
			local var_21_0 = 0
			local var_21_1 = 1

			if var_21_0 < arg_18_1.time_ and arg_18_1.time_ <= var_21_0 + arg_21_0 then
				local var_21_2 = "play"
				local var_21_3 = "effect"

				arg_18_1:AudioAction(var_21_2, var_21_3, "se_story_1310", "se_story_1310_footstep07", "")
			end

			local var_21_4 = 0
			local var_21_5 = 1.175

			if var_21_4 < arg_18_1.time_ and arg_18_1.time_ <= var_21_4 + arg_21_0 then
				arg_18_1.talkMaxDuration = 0
				arg_18_1.dialogCg_.alpha = 1

				arg_18_1.dialog_:SetActive(true)
				SetActive(arg_18_1.leftNameGo_, false)

				arg_18_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_18_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_18_1:RecordName(arg_18_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_18_1.iconTrs_.gameObject, false)
				arg_18_1.callingController_:SetSelectedState("normal")

				local var_21_6 = arg_18_1:GetWordFromCfg(417161004)
				local var_21_7 = arg_18_1:FormatText(var_21_6.content)

				arg_18_1.text_.text = var_21_7

				LuaForUtil.ClearLinePrefixSymbol(arg_18_1.text_)

				local var_21_8 = 47
				local var_21_9 = utf8.len(var_21_7)
				local var_21_10 = var_21_8 <= 0 and var_21_5 or var_21_5 * (var_21_9 / var_21_8)

				if var_21_10 > 0 and var_21_5 < var_21_10 then
					arg_18_1.talkMaxDuration = var_21_10

					if var_21_10 + var_21_4 > arg_18_1.duration_ then
						arg_18_1.duration_ = var_21_10 + var_21_4
					end
				end

				arg_18_1.text_.text = var_21_7
				arg_18_1.typewritter.percent = 0

				arg_18_1.typewritter:SetDirty()
				arg_18_1:ShowNextGo(false)
				arg_18_1:RecordContent(arg_18_1.text_.text)
			end

			local var_21_11 = math.max(var_21_5, arg_18_1.talkMaxDuration)

			if var_21_4 <= arg_18_1.time_ and arg_18_1.time_ < var_21_4 + var_21_11 then
				arg_18_1.typewritter.percent = (arg_18_1.time_ - var_21_4) / var_21_11

				arg_18_1.typewritter:SetDirty()
			end

			if arg_18_1.time_ >= var_21_4 + var_21_11 and arg_18_1.time_ < var_21_4 + var_21_11 + arg_21_0 then
				arg_18_1.typewritter.percent = 1

				arg_18_1.typewritter:SetDirty()
				arg_18_1:ShowNextGo(true)
			end
		end
	end,
	Play417161005 = function(arg_22_0, arg_22_1)
		arg_22_1.time_ = 0
		arg_22_1.frameCnt_ = 0
		arg_22_1.state_ = "playing"
		arg_22_1.curTalkId_ = 417161005
		arg_22_1.duration_ = 3.6

		SetActive(arg_22_1.tipsGo_, false)

		function arg_22_1.onSingleLineFinish_()
			arg_22_1.onSingleLineUpdate_ = nil
			arg_22_1.onSingleLineFinish_ = nil
			arg_22_1.state_ = "waiting"
		end

		function arg_22_1.playNext_(arg_24_0)
			if arg_24_0 == 1 then
				arg_22_0:Play417161006(arg_22_1)
			end
		end

		function arg_22_1.onSingleLineUpdate_(arg_25_0)
			local var_25_0 = 0
			local var_25_1 = 0.45

			if var_25_0 < arg_22_1.time_ and arg_22_1.time_ <= var_25_0 + arg_25_0 then
				arg_22_1.talkMaxDuration = 0
				arg_22_1.dialogCg_.alpha = 1

				arg_22_1.dialog_:SetActive(true)
				SetActive(arg_22_1.leftNameGo_, true)

				local var_25_2 = arg_22_1:FormatText(StoryNameCfg[1110].name)

				arg_22_1.leftNameTxt_.text = var_25_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_22_1.leftNameTxt_.transform)

				arg_22_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_22_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_22_1:RecordName(arg_22_1.leftNameTxt_.text)
				SetActive(arg_22_1.iconTrs_.gameObject, true)
				arg_22_1.iconController_:SetSelectedState("hero")

				arg_22_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_22_1.callingController_:SetSelectedState("normal")

				arg_22_1.keyicon_.color = Color.New(1, 1, 1)
				arg_22_1.icon_.color = Color.New(1, 1, 1)

				local var_25_3 = arg_22_1:GetWordFromCfg(417161005)
				local var_25_4 = arg_22_1:FormatText(var_25_3.content)

				arg_22_1.text_.text = var_25_4

				LuaForUtil.ClearLinePrefixSymbol(arg_22_1.text_)

				local var_25_5 = 18
				local var_25_6 = utf8.len(var_25_4)
				local var_25_7 = var_25_5 <= 0 and var_25_1 or var_25_1 * (var_25_6 / var_25_5)

				if var_25_7 > 0 and var_25_1 < var_25_7 then
					arg_22_1.talkMaxDuration = var_25_7

					if var_25_7 + var_25_0 > arg_22_1.duration_ then
						arg_22_1.duration_ = var_25_7 + var_25_0
					end
				end

				arg_22_1.text_.text = var_25_4
				arg_22_1.typewritter.percent = 0

				arg_22_1.typewritter:SetDirty()
				arg_22_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161005", "story_v_out_417161.awb") ~= 0 then
					local var_25_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161005", "story_v_out_417161.awb") / 1000

					if var_25_8 + var_25_0 > arg_22_1.duration_ then
						arg_22_1.duration_ = var_25_8 + var_25_0
					end

					if var_25_3.prefab_name ~= "" and arg_22_1.actors_[var_25_3.prefab_name] ~= nil then
						local var_25_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_22_1.actors_[var_25_3.prefab_name].transform, "story_v_out_417161", "417161005", "story_v_out_417161.awb")

						arg_22_1:RecordAudio("417161005", var_25_9)
						arg_22_1:RecordAudio("417161005", var_25_9)
					else
						arg_22_1:AudioAction("play", "voice", "story_v_out_417161", "417161005", "story_v_out_417161.awb")
					end

					arg_22_1:RecordHistoryTalkVoice("story_v_out_417161", "417161005", "story_v_out_417161.awb")
				end

				arg_22_1:RecordContent(arg_22_1.text_.text)
			end

			local var_25_10 = math.max(var_25_1, arg_22_1.talkMaxDuration)

			if var_25_0 <= arg_22_1.time_ and arg_22_1.time_ < var_25_0 + var_25_10 then
				arg_22_1.typewritter.percent = (arg_22_1.time_ - var_25_0) / var_25_10

				arg_22_1.typewritter:SetDirty()
			end

			if arg_22_1.time_ >= var_25_0 + var_25_10 and arg_22_1.time_ < var_25_0 + var_25_10 + arg_25_0 then
				arg_22_1.typewritter.percent = 1

				arg_22_1.typewritter:SetDirty()
				arg_22_1:ShowNextGo(true)
			end
		end
	end,
	Play417161006 = function(arg_26_0, arg_26_1)
		arg_26_1.time_ = 0
		arg_26_1.frameCnt_ = 0
		arg_26_1.state_ = "playing"
		arg_26_1.curTalkId_ = 417161006
		arg_26_1.duration_ = 5.8

		SetActive(arg_26_1.tipsGo_, false)

		function arg_26_1.onSingleLineFinish_()
			arg_26_1.onSingleLineUpdate_ = nil
			arg_26_1.onSingleLineFinish_ = nil
			arg_26_1.state_ = "waiting"
		end

		function arg_26_1.playNext_(arg_28_0)
			if arg_28_0 == 1 then
				arg_26_0:Play417161007(arg_26_1)
			end
		end

		function arg_26_1.onSingleLineUpdate_(arg_29_0)
			local var_29_0 = arg_26_1.actors_["10128"]
			local var_29_1 = 0

			if var_29_1 < arg_26_1.time_ and arg_26_1.time_ <= var_29_1 + arg_29_0 and not isNil(var_29_0) and arg_26_1.var_.actorSpriteComps10128 == nil then
				arg_26_1.var_.actorSpriteComps10128 = var_29_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_29_2 = 0.2

			if var_29_1 <= arg_26_1.time_ and arg_26_1.time_ < var_29_1 + var_29_2 and not isNil(var_29_0) then
				local var_29_3 = (arg_26_1.time_ - var_29_1) / var_29_2

				if arg_26_1.var_.actorSpriteComps10128 then
					for iter_29_0, iter_29_1 in pairs(arg_26_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_29_1 then
							if arg_26_1.isInRecall_ then
								local var_29_4 = Mathf.Lerp(iter_29_1.color.r, arg_26_1.hightColor1.r, var_29_3)
								local var_29_5 = Mathf.Lerp(iter_29_1.color.g, arg_26_1.hightColor1.g, var_29_3)
								local var_29_6 = Mathf.Lerp(iter_29_1.color.b, arg_26_1.hightColor1.b, var_29_3)

								iter_29_1.color = Color.New(var_29_4, var_29_5, var_29_6)
							else
								local var_29_7 = Mathf.Lerp(iter_29_1.color.r, 1, var_29_3)

								iter_29_1.color = Color.New(var_29_7, var_29_7, var_29_7)
							end
						end
					end
				end
			end

			if arg_26_1.time_ >= var_29_1 + var_29_2 and arg_26_1.time_ < var_29_1 + var_29_2 + arg_29_0 and not isNil(var_29_0) and arg_26_1.var_.actorSpriteComps10128 then
				for iter_29_2, iter_29_3 in pairs(arg_26_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_29_3 then
						if arg_26_1.isInRecall_ then
							iter_29_3.color = arg_26_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_29_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_26_1.var_.actorSpriteComps10128 = nil
			end

			local var_29_8 = arg_26_1.actors_["10128"].transform
			local var_29_9 = 0

			if var_29_9 < arg_26_1.time_ and arg_26_1.time_ <= var_29_9 + arg_29_0 then
				arg_26_1.var_.moveOldPos10128 = var_29_8.localPosition
				var_29_8.localScale = Vector3.New(1, 1, 1)

				arg_26_1:CheckSpriteTmpPos("10128", 3)

				local var_29_10 = var_29_8.childCount

				for iter_29_4 = 0, var_29_10 - 1 do
					local var_29_11 = var_29_8:GetChild(iter_29_4)

					if var_29_11.name == "" or not string.find(var_29_11.name, "split") then
						var_29_11.gameObject:SetActive(true)
					else
						var_29_11.gameObject:SetActive(false)
					end
				end
			end

			local var_29_12 = 0.001

			if var_29_9 <= arg_26_1.time_ and arg_26_1.time_ < var_29_9 + var_29_12 then
				local var_29_13 = (arg_26_1.time_ - var_29_9) / var_29_12
				local var_29_14 = Vector3.New(0, -347, -300)

				var_29_8.localPosition = Vector3.Lerp(arg_26_1.var_.moveOldPos10128, var_29_14, var_29_13)
			end

			if arg_26_1.time_ >= var_29_9 + var_29_12 and arg_26_1.time_ < var_29_9 + var_29_12 + arg_29_0 then
				var_29_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_29_15 = 0
			local var_29_16 = 0.375

			if var_29_15 < arg_26_1.time_ and arg_26_1.time_ <= var_29_15 + arg_29_0 then
				arg_26_1.talkMaxDuration = 0
				arg_26_1.dialogCg_.alpha = 1

				arg_26_1.dialog_:SetActive(true)
				SetActive(arg_26_1.leftNameGo_, true)

				local var_29_17 = arg_26_1:FormatText(StoryNameCfg[595].name)

				arg_26_1.leftNameTxt_.text = var_29_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_26_1.leftNameTxt_.transform)

				arg_26_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_26_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_26_1:RecordName(arg_26_1.leftNameTxt_.text)
				SetActive(arg_26_1.iconTrs_.gameObject, false)
				arg_26_1.callingController_:SetSelectedState("normal")

				local var_29_18 = arg_26_1:GetWordFromCfg(417161006)
				local var_29_19 = arg_26_1:FormatText(var_29_18.content)

				arg_26_1.text_.text = var_29_19

				LuaForUtil.ClearLinePrefixSymbol(arg_26_1.text_)

				local var_29_20 = 15
				local var_29_21 = utf8.len(var_29_19)
				local var_29_22 = var_29_20 <= 0 and var_29_16 or var_29_16 * (var_29_21 / var_29_20)

				if var_29_22 > 0 and var_29_16 < var_29_22 then
					arg_26_1.talkMaxDuration = var_29_22

					if var_29_22 + var_29_15 > arg_26_1.duration_ then
						arg_26_1.duration_ = var_29_22 + var_29_15
					end
				end

				arg_26_1.text_.text = var_29_19
				arg_26_1.typewritter.percent = 0

				arg_26_1.typewritter:SetDirty()
				arg_26_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161006", "story_v_out_417161.awb") ~= 0 then
					local var_29_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161006", "story_v_out_417161.awb") / 1000

					if var_29_23 + var_29_15 > arg_26_1.duration_ then
						arg_26_1.duration_ = var_29_23 + var_29_15
					end

					if var_29_18.prefab_name ~= "" and arg_26_1.actors_[var_29_18.prefab_name] ~= nil then
						local var_29_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_26_1.actors_[var_29_18.prefab_name].transform, "story_v_out_417161", "417161006", "story_v_out_417161.awb")

						arg_26_1:RecordAudio("417161006", var_29_24)
						arg_26_1:RecordAudio("417161006", var_29_24)
					else
						arg_26_1:AudioAction("play", "voice", "story_v_out_417161", "417161006", "story_v_out_417161.awb")
					end

					arg_26_1:RecordHistoryTalkVoice("story_v_out_417161", "417161006", "story_v_out_417161.awb")
				end

				arg_26_1:RecordContent(arg_26_1.text_.text)
			end

			local var_29_25 = math.max(var_29_16, arg_26_1.talkMaxDuration)

			if var_29_15 <= arg_26_1.time_ and arg_26_1.time_ < var_29_15 + var_29_25 then
				arg_26_1.typewritter.percent = (arg_26_1.time_ - var_29_15) / var_29_25

				arg_26_1.typewritter:SetDirty()
			end

			if arg_26_1.time_ >= var_29_15 + var_29_25 and arg_26_1.time_ < var_29_15 + var_29_25 + arg_29_0 then
				arg_26_1.typewritter.percent = 1

				arg_26_1.typewritter:SetDirty()
				arg_26_1:ShowNextGo(true)
			end
		end
	end,
	Play417161007 = function(arg_30_0, arg_30_1)
		arg_30_1.time_ = 0
		arg_30_1.frameCnt_ = 0
		arg_30_1.state_ = "playing"
		arg_30_1.curTalkId_ = 417161007
		arg_30_1.duration_ = 9.9

		SetActive(arg_30_1.tipsGo_, false)

		function arg_30_1.onSingleLineFinish_()
			arg_30_1.onSingleLineUpdate_ = nil
			arg_30_1.onSingleLineFinish_ = nil
			arg_30_1.state_ = "waiting"
		end

		function arg_30_1.playNext_(arg_32_0)
			if arg_32_0 == 1 then
				arg_30_0:Play417161008(arg_30_1)
			end
		end

		function arg_30_1.onSingleLineUpdate_(arg_33_0)
			local var_33_0 = 0
			local var_33_1 = 1.3

			if var_33_0 < arg_30_1.time_ and arg_30_1.time_ <= var_33_0 + arg_33_0 then
				arg_30_1.talkMaxDuration = 0
				arg_30_1.dialogCg_.alpha = 1

				arg_30_1.dialog_:SetActive(true)
				SetActive(arg_30_1.leftNameGo_, true)

				local var_33_2 = arg_30_1:FormatText(StoryNameCfg[595].name)

				arg_30_1.leftNameTxt_.text = var_33_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_30_1.leftNameTxt_.transform)

				arg_30_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_30_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_30_1:RecordName(arg_30_1.leftNameTxt_.text)
				SetActive(arg_30_1.iconTrs_.gameObject, false)
				arg_30_1.callingController_:SetSelectedState("normal")

				local var_33_3 = arg_30_1:GetWordFromCfg(417161007)
				local var_33_4 = arg_30_1:FormatText(var_33_3.content)

				arg_30_1.text_.text = var_33_4

				LuaForUtil.ClearLinePrefixSymbol(arg_30_1.text_)

				local var_33_5 = 52
				local var_33_6 = utf8.len(var_33_4)
				local var_33_7 = var_33_5 <= 0 and var_33_1 or var_33_1 * (var_33_6 / var_33_5)

				if var_33_7 > 0 and var_33_1 < var_33_7 then
					arg_30_1.talkMaxDuration = var_33_7

					if var_33_7 + var_33_0 > arg_30_1.duration_ then
						arg_30_1.duration_ = var_33_7 + var_33_0
					end
				end

				arg_30_1.text_.text = var_33_4
				arg_30_1.typewritter.percent = 0

				arg_30_1.typewritter:SetDirty()
				arg_30_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161007", "story_v_out_417161.awb") ~= 0 then
					local var_33_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161007", "story_v_out_417161.awb") / 1000

					if var_33_8 + var_33_0 > arg_30_1.duration_ then
						arg_30_1.duration_ = var_33_8 + var_33_0
					end

					if var_33_3.prefab_name ~= "" and arg_30_1.actors_[var_33_3.prefab_name] ~= nil then
						local var_33_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_30_1.actors_[var_33_3.prefab_name].transform, "story_v_out_417161", "417161007", "story_v_out_417161.awb")

						arg_30_1:RecordAudio("417161007", var_33_9)
						arg_30_1:RecordAudio("417161007", var_33_9)
					else
						arg_30_1:AudioAction("play", "voice", "story_v_out_417161", "417161007", "story_v_out_417161.awb")
					end

					arg_30_1:RecordHistoryTalkVoice("story_v_out_417161", "417161007", "story_v_out_417161.awb")
				end

				arg_30_1:RecordContent(arg_30_1.text_.text)
			end

			local var_33_10 = math.max(var_33_1, arg_30_1.talkMaxDuration)

			if var_33_0 <= arg_30_1.time_ and arg_30_1.time_ < var_33_0 + var_33_10 then
				arg_30_1.typewritter.percent = (arg_30_1.time_ - var_33_0) / var_33_10

				arg_30_1.typewritter:SetDirty()
			end

			if arg_30_1.time_ >= var_33_0 + var_33_10 and arg_30_1.time_ < var_33_0 + var_33_10 + arg_33_0 then
				arg_30_1.typewritter.percent = 1

				arg_30_1.typewritter:SetDirty()
				arg_30_1:ShowNextGo(true)
			end
		end
	end,
	Play417161008 = function(arg_34_0, arg_34_1)
		arg_34_1.time_ = 0
		arg_34_1.frameCnt_ = 0
		arg_34_1.state_ = "playing"
		arg_34_1.curTalkId_ = 417161008
		arg_34_1.duration_ = 8.63

		SetActive(arg_34_1.tipsGo_, false)

		function arg_34_1.onSingleLineFinish_()
			arg_34_1.onSingleLineUpdate_ = nil
			arg_34_1.onSingleLineFinish_ = nil
			arg_34_1.state_ = "waiting"
		end

		function arg_34_1.playNext_(arg_36_0)
			if arg_36_0 == 1 then
				arg_34_0:Play417161009(arg_34_1)
			end
		end

		function arg_34_1.onSingleLineUpdate_(arg_37_0)
			local var_37_0 = 0
			local var_37_1 = 1.125

			if var_37_0 < arg_34_1.time_ and arg_34_1.time_ <= var_37_0 + arg_37_0 then
				arg_34_1.talkMaxDuration = 0
				arg_34_1.dialogCg_.alpha = 1

				arg_34_1.dialog_:SetActive(true)
				SetActive(arg_34_1.leftNameGo_, true)

				local var_37_2 = arg_34_1:FormatText(StoryNameCfg[595].name)

				arg_34_1.leftNameTxt_.text = var_37_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_34_1.leftNameTxt_.transform)

				arg_34_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_34_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_34_1:RecordName(arg_34_1.leftNameTxt_.text)
				SetActive(arg_34_1.iconTrs_.gameObject, false)
				arg_34_1.callingController_:SetSelectedState("normal")

				local var_37_3 = arg_34_1:GetWordFromCfg(417161008)
				local var_37_4 = arg_34_1:FormatText(var_37_3.content)

				arg_34_1.text_.text = var_37_4

				LuaForUtil.ClearLinePrefixSymbol(arg_34_1.text_)

				local var_37_5 = 45
				local var_37_6 = utf8.len(var_37_4)
				local var_37_7 = var_37_5 <= 0 and var_37_1 or var_37_1 * (var_37_6 / var_37_5)

				if var_37_7 > 0 and var_37_1 < var_37_7 then
					arg_34_1.talkMaxDuration = var_37_7

					if var_37_7 + var_37_0 > arg_34_1.duration_ then
						arg_34_1.duration_ = var_37_7 + var_37_0
					end
				end

				arg_34_1.text_.text = var_37_4
				arg_34_1.typewritter.percent = 0

				arg_34_1.typewritter:SetDirty()
				arg_34_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161008", "story_v_out_417161.awb") ~= 0 then
					local var_37_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161008", "story_v_out_417161.awb") / 1000

					if var_37_8 + var_37_0 > arg_34_1.duration_ then
						arg_34_1.duration_ = var_37_8 + var_37_0
					end

					if var_37_3.prefab_name ~= "" and arg_34_1.actors_[var_37_3.prefab_name] ~= nil then
						local var_37_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_34_1.actors_[var_37_3.prefab_name].transform, "story_v_out_417161", "417161008", "story_v_out_417161.awb")

						arg_34_1:RecordAudio("417161008", var_37_9)
						arg_34_1:RecordAudio("417161008", var_37_9)
					else
						arg_34_1:AudioAction("play", "voice", "story_v_out_417161", "417161008", "story_v_out_417161.awb")
					end

					arg_34_1:RecordHistoryTalkVoice("story_v_out_417161", "417161008", "story_v_out_417161.awb")
				end

				arg_34_1:RecordContent(arg_34_1.text_.text)
			end

			local var_37_10 = math.max(var_37_1, arg_34_1.talkMaxDuration)

			if var_37_0 <= arg_34_1.time_ and arg_34_1.time_ < var_37_0 + var_37_10 then
				arg_34_1.typewritter.percent = (arg_34_1.time_ - var_37_0) / var_37_10

				arg_34_1.typewritter:SetDirty()
			end

			if arg_34_1.time_ >= var_37_0 + var_37_10 and arg_34_1.time_ < var_37_0 + var_37_10 + arg_37_0 then
				arg_34_1.typewritter.percent = 1

				arg_34_1.typewritter:SetDirty()
				arg_34_1:ShowNextGo(true)
			end
		end
	end,
	Play417161009 = function(arg_38_0, arg_38_1)
		arg_38_1.time_ = 0
		arg_38_1.frameCnt_ = 0
		arg_38_1.state_ = "playing"
		arg_38_1.curTalkId_ = 417161009
		arg_38_1.duration_ = 4.07

		SetActive(arg_38_1.tipsGo_, false)

		function arg_38_1.onSingleLineFinish_()
			arg_38_1.onSingleLineUpdate_ = nil
			arg_38_1.onSingleLineFinish_ = nil
			arg_38_1.state_ = "waiting"
		end

		function arg_38_1.playNext_(arg_40_0)
			if arg_40_0 == 1 then
				arg_38_0:Play417161010(arg_38_1)
			end
		end

		function arg_38_1.onSingleLineUpdate_(arg_41_0)
			local var_41_0 = 0
			local var_41_1 = 0.55

			if var_41_0 < arg_38_1.time_ and arg_38_1.time_ <= var_41_0 + arg_41_0 then
				arg_38_1.talkMaxDuration = 0
				arg_38_1.dialogCg_.alpha = 1

				arg_38_1.dialog_:SetActive(true)
				SetActive(arg_38_1.leftNameGo_, true)

				local var_41_2 = arg_38_1:FormatText(StoryNameCfg[595].name)

				arg_38_1.leftNameTxt_.text = var_41_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_38_1.leftNameTxt_.transform)

				arg_38_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_38_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_38_1:RecordName(arg_38_1.leftNameTxt_.text)
				SetActive(arg_38_1.iconTrs_.gameObject, false)
				arg_38_1.callingController_:SetSelectedState("normal")

				local var_41_3 = arg_38_1:GetWordFromCfg(417161009)
				local var_41_4 = arg_38_1:FormatText(var_41_3.content)

				arg_38_1.text_.text = var_41_4

				LuaForUtil.ClearLinePrefixSymbol(arg_38_1.text_)

				local var_41_5 = 22
				local var_41_6 = utf8.len(var_41_4)
				local var_41_7 = var_41_5 <= 0 and var_41_1 or var_41_1 * (var_41_6 / var_41_5)

				if var_41_7 > 0 and var_41_1 < var_41_7 then
					arg_38_1.talkMaxDuration = var_41_7

					if var_41_7 + var_41_0 > arg_38_1.duration_ then
						arg_38_1.duration_ = var_41_7 + var_41_0
					end
				end

				arg_38_1.text_.text = var_41_4
				arg_38_1.typewritter.percent = 0

				arg_38_1.typewritter:SetDirty()
				arg_38_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161009", "story_v_out_417161.awb") ~= 0 then
					local var_41_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161009", "story_v_out_417161.awb") / 1000

					if var_41_8 + var_41_0 > arg_38_1.duration_ then
						arg_38_1.duration_ = var_41_8 + var_41_0
					end

					if var_41_3.prefab_name ~= "" and arg_38_1.actors_[var_41_3.prefab_name] ~= nil then
						local var_41_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_38_1.actors_[var_41_3.prefab_name].transform, "story_v_out_417161", "417161009", "story_v_out_417161.awb")

						arg_38_1:RecordAudio("417161009", var_41_9)
						arg_38_1:RecordAudio("417161009", var_41_9)
					else
						arg_38_1:AudioAction("play", "voice", "story_v_out_417161", "417161009", "story_v_out_417161.awb")
					end

					arg_38_1:RecordHistoryTalkVoice("story_v_out_417161", "417161009", "story_v_out_417161.awb")
				end

				arg_38_1:RecordContent(arg_38_1.text_.text)
			end

			local var_41_10 = math.max(var_41_1, arg_38_1.talkMaxDuration)

			if var_41_0 <= arg_38_1.time_ and arg_38_1.time_ < var_41_0 + var_41_10 then
				arg_38_1.typewritter.percent = (arg_38_1.time_ - var_41_0) / var_41_10

				arg_38_1.typewritter:SetDirty()
			end

			if arg_38_1.time_ >= var_41_0 + var_41_10 and arg_38_1.time_ < var_41_0 + var_41_10 + arg_41_0 then
				arg_38_1.typewritter.percent = 1

				arg_38_1.typewritter:SetDirty()
				arg_38_1:ShowNextGo(true)
			end
		end
	end,
	Play417161010 = function(arg_42_0, arg_42_1)
		arg_42_1.time_ = 0
		arg_42_1.frameCnt_ = 0
		arg_42_1.state_ = "playing"
		arg_42_1.curTalkId_ = 417161010
		arg_42_1.duration_ = 5

		SetActive(arg_42_1.tipsGo_, false)

		function arg_42_1.onSingleLineFinish_()
			arg_42_1.onSingleLineUpdate_ = nil
			arg_42_1.onSingleLineFinish_ = nil
			arg_42_1.state_ = "waiting"
		end

		function arg_42_1.playNext_(arg_44_0)
			if arg_44_0 == 1 then
				arg_42_0:Play417161011(arg_42_1)
			end
		end

		function arg_42_1.onSingleLineUpdate_(arg_45_0)
			local var_45_0 = arg_42_1.actors_["10128"].transform
			local var_45_1 = 0

			if var_45_1 < arg_42_1.time_ and arg_42_1.time_ <= var_45_1 + arg_45_0 then
				arg_42_1.var_.moveOldPos10128 = var_45_0.localPosition
				var_45_0.localScale = Vector3.New(1, 1, 1)

				arg_42_1:CheckSpriteTmpPos("10128", 7)

				local var_45_2 = var_45_0.childCount

				for iter_45_0 = 0, var_45_2 - 1 do
					local var_45_3 = var_45_0:GetChild(iter_45_0)

					if var_45_3.name == "" or not string.find(var_45_3.name, "split") then
						var_45_3.gameObject:SetActive(true)
					else
						var_45_3.gameObject:SetActive(false)
					end
				end
			end

			local var_45_4 = 0.001

			if var_45_1 <= arg_42_1.time_ and arg_42_1.time_ < var_45_1 + var_45_4 then
				local var_45_5 = (arg_42_1.time_ - var_45_1) / var_45_4
				local var_45_6 = Vector3.New(0, -2000, -300)

				var_45_0.localPosition = Vector3.Lerp(arg_42_1.var_.moveOldPos10128, var_45_6, var_45_5)
			end

			if arg_42_1.time_ >= var_45_1 + var_45_4 and arg_42_1.time_ < var_45_1 + var_45_4 + arg_45_0 then
				var_45_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_45_7 = 0
			local var_45_8 = 1.35

			if var_45_7 < arg_42_1.time_ and arg_42_1.time_ <= var_45_7 + arg_45_0 then
				arg_42_1.talkMaxDuration = 0
				arg_42_1.dialogCg_.alpha = 1

				arg_42_1.dialog_:SetActive(true)
				SetActive(arg_42_1.leftNameGo_, false)

				arg_42_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_42_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_42_1:RecordName(arg_42_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_42_1.iconTrs_.gameObject, false)
				arg_42_1.callingController_:SetSelectedState("normal")

				local var_45_9 = arg_42_1:GetWordFromCfg(417161010)
				local var_45_10 = arg_42_1:FormatText(var_45_9.content)

				arg_42_1.text_.text = var_45_10

				LuaForUtil.ClearLinePrefixSymbol(arg_42_1.text_)

				local var_45_11 = 54
				local var_45_12 = utf8.len(var_45_10)
				local var_45_13 = var_45_11 <= 0 and var_45_8 or var_45_8 * (var_45_12 / var_45_11)

				if var_45_13 > 0 and var_45_8 < var_45_13 then
					arg_42_1.talkMaxDuration = var_45_13

					if var_45_13 + var_45_7 > arg_42_1.duration_ then
						arg_42_1.duration_ = var_45_13 + var_45_7
					end
				end

				arg_42_1.text_.text = var_45_10
				arg_42_1.typewritter.percent = 0

				arg_42_1.typewritter:SetDirty()
				arg_42_1:ShowNextGo(false)
				arg_42_1:RecordContent(arg_42_1.text_.text)
			end

			local var_45_14 = math.max(var_45_8, arg_42_1.talkMaxDuration)

			if var_45_7 <= arg_42_1.time_ and arg_42_1.time_ < var_45_7 + var_45_14 then
				arg_42_1.typewritter.percent = (arg_42_1.time_ - var_45_7) / var_45_14

				arg_42_1.typewritter:SetDirty()
			end

			if arg_42_1.time_ >= var_45_7 + var_45_14 and arg_42_1.time_ < var_45_7 + var_45_14 + arg_45_0 then
				arg_42_1.typewritter.percent = 1

				arg_42_1.typewritter:SetDirty()
				arg_42_1:ShowNextGo(true)
			end
		end
	end,
	Play417161011 = function(arg_46_0, arg_46_1)
		arg_46_1.time_ = 0
		arg_46_1.frameCnt_ = 0
		arg_46_1.state_ = "playing"
		arg_46_1.curTalkId_ = 417161011
		arg_46_1.duration_ = 4

		SetActive(arg_46_1.tipsGo_, false)

		function arg_46_1.onSingleLineFinish_()
			arg_46_1.onSingleLineUpdate_ = nil
			arg_46_1.onSingleLineFinish_ = nil
			arg_46_1.state_ = "waiting"
		end

		function arg_46_1.playNext_(arg_48_0)
			if arg_48_0 == 1 then
				arg_46_0:Play417161012(arg_46_1)
			end
		end

		function arg_46_1.onSingleLineUpdate_(arg_49_0)
			local var_49_0 = 0
			local var_49_1 = 0.475

			if var_49_0 < arg_46_1.time_ and arg_46_1.time_ <= var_49_0 + arg_49_0 then
				arg_46_1.talkMaxDuration = 0
				arg_46_1.dialogCg_.alpha = 1

				arg_46_1.dialog_:SetActive(true)
				SetActive(arg_46_1.leftNameGo_, true)

				local var_49_2 = arg_46_1:FormatText(StoryNameCfg[1110].name)

				arg_46_1.leftNameTxt_.text = var_49_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_46_1.leftNameTxt_.transform)

				arg_46_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_46_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_46_1:RecordName(arg_46_1.leftNameTxt_.text)
				SetActive(arg_46_1.iconTrs_.gameObject, true)
				arg_46_1.iconController_:SetSelectedState("hero")

				arg_46_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_46_1.callingController_:SetSelectedState("normal")

				arg_46_1.keyicon_.color = Color.New(1, 1, 1)
				arg_46_1.icon_.color = Color.New(1, 1, 1)

				local var_49_3 = arg_46_1:GetWordFromCfg(417161011)
				local var_49_4 = arg_46_1:FormatText(var_49_3.content)

				arg_46_1.text_.text = var_49_4

				LuaForUtil.ClearLinePrefixSymbol(arg_46_1.text_)

				local var_49_5 = 19
				local var_49_6 = utf8.len(var_49_4)
				local var_49_7 = var_49_5 <= 0 and var_49_1 or var_49_1 * (var_49_6 / var_49_5)

				if var_49_7 > 0 and var_49_1 < var_49_7 then
					arg_46_1.talkMaxDuration = var_49_7

					if var_49_7 + var_49_0 > arg_46_1.duration_ then
						arg_46_1.duration_ = var_49_7 + var_49_0
					end
				end

				arg_46_1.text_.text = var_49_4
				arg_46_1.typewritter.percent = 0

				arg_46_1.typewritter:SetDirty()
				arg_46_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161011", "story_v_out_417161.awb") ~= 0 then
					local var_49_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161011", "story_v_out_417161.awb") / 1000

					if var_49_8 + var_49_0 > arg_46_1.duration_ then
						arg_46_1.duration_ = var_49_8 + var_49_0
					end

					if var_49_3.prefab_name ~= "" and arg_46_1.actors_[var_49_3.prefab_name] ~= nil then
						local var_49_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_46_1.actors_[var_49_3.prefab_name].transform, "story_v_out_417161", "417161011", "story_v_out_417161.awb")

						arg_46_1:RecordAudio("417161011", var_49_9)
						arg_46_1:RecordAudio("417161011", var_49_9)
					else
						arg_46_1:AudioAction("play", "voice", "story_v_out_417161", "417161011", "story_v_out_417161.awb")
					end

					arg_46_1:RecordHistoryTalkVoice("story_v_out_417161", "417161011", "story_v_out_417161.awb")
				end

				arg_46_1:RecordContent(arg_46_1.text_.text)
			end

			local var_49_10 = math.max(var_49_1, arg_46_1.talkMaxDuration)

			if var_49_0 <= arg_46_1.time_ and arg_46_1.time_ < var_49_0 + var_49_10 then
				arg_46_1.typewritter.percent = (arg_46_1.time_ - var_49_0) / var_49_10

				arg_46_1.typewritter:SetDirty()
			end

			if arg_46_1.time_ >= var_49_0 + var_49_10 and arg_46_1.time_ < var_49_0 + var_49_10 + arg_49_0 then
				arg_46_1.typewritter.percent = 1

				arg_46_1.typewritter:SetDirty()
				arg_46_1:ShowNextGo(true)
			end
		end
	end,
	Play417161012 = function(arg_50_0, arg_50_1)
		arg_50_1.time_ = 0
		arg_50_1.frameCnt_ = 0
		arg_50_1.state_ = "playing"
		arg_50_1.curTalkId_ = 417161012
		arg_50_1.duration_ = 4.6

		SetActive(arg_50_1.tipsGo_, false)

		function arg_50_1.onSingleLineFinish_()
			arg_50_1.onSingleLineUpdate_ = nil
			arg_50_1.onSingleLineFinish_ = nil
			arg_50_1.state_ = "waiting"
		end

		function arg_50_1.playNext_(arg_52_0)
			if arg_52_0 == 1 then
				arg_50_0:Play417161013(arg_50_1)
			end
		end

		function arg_50_1.onSingleLineUpdate_(arg_53_0)
			local var_53_0 = arg_50_1.actors_["10128"]
			local var_53_1 = 0

			if var_53_1 < arg_50_1.time_ and arg_50_1.time_ <= var_53_1 + arg_53_0 and not isNil(var_53_0) and arg_50_1.var_.actorSpriteComps10128 == nil then
				arg_50_1.var_.actorSpriteComps10128 = var_53_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_53_2 = 0.2

			if var_53_1 <= arg_50_1.time_ and arg_50_1.time_ < var_53_1 + var_53_2 and not isNil(var_53_0) then
				local var_53_3 = (arg_50_1.time_ - var_53_1) / var_53_2

				if arg_50_1.var_.actorSpriteComps10128 then
					for iter_53_0, iter_53_1 in pairs(arg_50_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_53_1 then
							if arg_50_1.isInRecall_ then
								local var_53_4 = Mathf.Lerp(iter_53_1.color.r, arg_50_1.hightColor1.r, var_53_3)
								local var_53_5 = Mathf.Lerp(iter_53_1.color.g, arg_50_1.hightColor1.g, var_53_3)
								local var_53_6 = Mathf.Lerp(iter_53_1.color.b, arg_50_1.hightColor1.b, var_53_3)

								iter_53_1.color = Color.New(var_53_4, var_53_5, var_53_6)
							else
								local var_53_7 = Mathf.Lerp(iter_53_1.color.r, 1, var_53_3)

								iter_53_1.color = Color.New(var_53_7, var_53_7, var_53_7)
							end
						end
					end
				end
			end

			if arg_50_1.time_ >= var_53_1 + var_53_2 and arg_50_1.time_ < var_53_1 + var_53_2 + arg_53_0 and not isNil(var_53_0) and arg_50_1.var_.actorSpriteComps10128 then
				for iter_53_2, iter_53_3 in pairs(arg_50_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_53_3 then
						if arg_50_1.isInRecall_ then
							iter_53_3.color = arg_50_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_53_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_50_1.var_.actorSpriteComps10128 = nil
			end

			local var_53_8 = arg_50_1.actors_["10128"].transform
			local var_53_9 = 0

			if var_53_9 < arg_50_1.time_ and arg_50_1.time_ <= var_53_9 + arg_53_0 then
				arg_50_1.var_.moveOldPos10128 = var_53_8.localPosition
				var_53_8.localScale = Vector3.New(1, 1, 1)

				arg_50_1:CheckSpriteTmpPos("10128", 3)

				local var_53_10 = var_53_8.childCount

				for iter_53_4 = 0, var_53_10 - 1 do
					local var_53_11 = var_53_8:GetChild(iter_53_4)

					if var_53_11.name == "split_1" or not string.find(var_53_11.name, "split") then
						var_53_11.gameObject:SetActive(true)
					else
						var_53_11.gameObject:SetActive(false)
					end
				end
			end

			local var_53_12 = 0.001

			if var_53_9 <= arg_50_1.time_ and arg_50_1.time_ < var_53_9 + var_53_12 then
				local var_53_13 = (arg_50_1.time_ - var_53_9) / var_53_12
				local var_53_14 = Vector3.New(0, -347, -300)

				var_53_8.localPosition = Vector3.Lerp(arg_50_1.var_.moveOldPos10128, var_53_14, var_53_13)
			end

			if arg_50_1.time_ >= var_53_9 + var_53_12 and arg_50_1.time_ < var_53_9 + var_53_12 + arg_53_0 then
				var_53_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_53_15 = 0
			local var_53_16 = 0.6

			if var_53_15 < arg_50_1.time_ and arg_50_1.time_ <= var_53_15 + arg_53_0 then
				arg_50_1.talkMaxDuration = 0
				arg_50_1.dialogCg_.alpha = 1

				arg_50_1.dialog_:SetActive(true)
				SetActive(arg_50_1.leftNameGo_, true)

				local var_53_17 = arg_50_1:FormatText(StoryNameCfg[595].name)

				arg_50_1.leftNameTxt_.text = var_53_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_50_1.leftNameTxt_.transform)

				arg_50_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_50_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_50_1:RecordName(arg_50_1.leftNameTxt_.text)
				SetActive(arg_50_1.iconTrs_.gameObject, false)
				arg_50_1.callingController_:SetSelectedState("normal")

				local var_53_18 = arg_50_1:GetWordFromCfg(417161012)
				local var_53_19 = arg_50_1:FormatText(var_53_18.content)

				arg_50_1.text_.text = var_53_19

				LuaForUtil.ClearLinePrefixSymbol(arg_50_1.text_)

				local var_53_20 = 24
				local var_53_21 = utf8.len(var_53_19)
				local var_53_22 = var_53_20 <= 0 and var_53_16 or var_53_16 * (var_53_21 / var_53_20)

				if var_53_22 > 0 and var_53_16 < var_53_22 then
					arg_50_1.talkMaxDuration = var_53_22

					if var_53_22 + var_53_15 > arg_50_1.duration_ then
						arg_50_1.duration_ = var_53_22 + var_53_15
					end
				end

				arg_50_1.text_.text = var_53_19
				arg_50_1.typewritter.percent = 0

				arg_50_1.typewritter:SetDirty()
				arg_50_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161012", "story_v_out_417161.awb") ~= 0 then
					local var_53_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161012", "story_v_out_417161.awb") / 1000

					if var_53_23 + var_53_15 > arg_50_1.duration_ then
						arg_50_1.duration_ = var_53_23 + var_53_15
					end

					if var_53_18.prefab_name ~= "" and arg_50_1.actors_[var_53_18.prefab_name] ~= nil then
						local var_53_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_50_1.actors_[var_53_18.prefab_name].transform, "story_v_out_417161", "417161012", "story_v_out_417161.awb")

						arg_50_1:RecordAudio("417161012", var_53_24)
						arg_50_1:RecordAudio("417161012", var_53_24)
					else
						arg_50_1:AudioAction("play", "voice", "story_v_out_417161", "417161012", "story_v_out_417161.awb")
					end

					arg_50_1:RecordHistoryTalkVoice("story_v_out_417161", "417161012", "story_v_out_417161.awb")
				end

				arg_50_1:RecordContent(arg_50_1.text_.text)
			end

			local var_53_25 = math.max(var_53_16, arg_50_1.talkMaxDuration)

			if var_53_15 <= arg_50_1.time_ and arg_50_1.time_ < var_53_15 + var_53_25 then
				arg_50_1.typewritter.percent = (arg_50_1.time_ - var_53_15) / var_53_25

				arg_50_1.typewritter:SetDirty()
			end

			if arg_50_1.time_ >= var_53_15 + var_53_25 and arg_50_1.time_ < var_53_15 + var_53_25 + arg_53_0 then
				arg_50_1.typewritter.percent = 1

				arg_50_1.typewritter:SetDirty()
				arg_50_1:ShowNextGo(true)
			end
		end
	end,
	Play417161013 = function(arg_54_0, arg_54_1)
		arg_54_1.time_ = 0
		arg_54_1.frameCnt_ = 0
		arg_54_1.state_ = "playing"
		arg_54_1.curTalkId_ = 417161013
		arg_54_1.duration_ = 2.93

		SetActive(arg_54_1.tipsGo_, false)

		function arg_54_1.onSingleLineFinish_()
			arg_54_1.onSingleLineUpdate_ = nil
			arg_54_1.onSingleLineFinish_ = nil
			arg_54_1.state_ = "waiting"
		end

		function arg_54_1.playNext_(arg_56_0)
			if arg_56_0 == 1 then
				arg_54_0:Play417161014(arg_54_1)
			end
		end

		function arg_54_1.onSingleLineUpdate_(arg_57_0)
			local var_57_0 = arg_54_1.actors_["10128"]
			local var_57_1 = 0

			if var_57_1 < arg_54_1.time_ and arg_54_1.time_ <= var_57_1 + arg_57_0 and not isNil(var_57_0) and arg_54_1.var_.actorSpriteComps10128 == nil then
				arg_54_1.var_.actorSpriteComps10128 = var_57_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_57_2 = 0.2

			if var_57_1 <= arg_54_1.time_ and arg_54_1.time_ < var_57_1 + var_57_2 and not isNil(var_57_0) then
				local var_57_3 = (arg_54_1.time_ - var_57_1) / var_57_2

				if arg_54_1.var_.actorSpriteComps10128 then
					for iter_57_0, iter_57_1 in pairs(arg_54_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_57_1 then
							if arg_54_1.isInRecall_ then
								local var_57_4 = Mathf.Lerp(iter_57_1.color.r, arg_54_1.hightColor2.r, var_57_3)
								local var_57_5 = Mathf.Lerp(iter_57_1.color.g, arg_54_1.hightColor2.g, var_57_3)
								local var_57_6 = Mathf.Lerp(iter_57_1.color.b, arg_54_1.hightColor2.b, var_57_3)

								iter_57_1.color = Color.New(var_57_4, var_57_5, var_57_6)
							else
								local var_57_7 = Mathf.Lerp(iter_57_1.color.r, 0.5, var_57_3)

								iter_57_1.color = Color.New(var_57_7, var_57_7, var_57_7)
							end
						end
					end
				end
			end

			if arg_54_1.time_ >= var_57_1 + var_57_2 and arg_54_1.time_ < var_57_1 + var_57_2 + arg_57_0 and not isNil(var_57_0) and arg_54_1.var_.actorSpriteComps10128 then
				for iter_57_2, iter_57_3 in pairs(arg_54_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_57_3 then
						if arg_54_1.isInRecall_ then
							iter_57_3.color = arg_54_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_57_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_54_1.var_.actorSpriteComps10128 = nil
			end

			local var_57_8 = 0
			local var_57_9 = 0.25

			if var_57_8 < arg_54_1.time_ and arg_54_1.time_ <= var_57_8 + arg_57_0 then
				arg_54_1.talkMaxDuration = 0
				arg_54_1.dialogCg_.alpha = 1

				arg_54_1.dialog_:SetActive(true)
				SetActive(arg_54_1.leftNameGo_, true)

				local var_57_10 = arg_54_1:FormatText(StoryNameCfg[1110].name)

				arg_54_1.leftNameTxt_.text = var_57_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_54_1.leftNameTxt_.transform)

				arg_54_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_54_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_54_1:RecordName(arg_54_1.leftNameTxt_.text)
				SetActive(arg_54_1.iconTrs_.gameObject, true)
				arg_54_1.iconController_:SetSelectedState("hero")

				arg_54_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_54_1.callingController_:SetSelectedState("normal")

				arg_54_1.keyicon_.color = Color.New(1, 1, 1)
				arg_54_1.icon_.color = Color.New(1, 1, 1)

				local var_57_11 = arg_54_1:GetWordFromCfg(417161013)
				local var_57_12 = arg_54_1:FormatText(var_57_11.content)

				arg_54_1.text_.text = var_57_12

				LuaForUtil.ClearLinePrefixSymbol(arg_54_1.text_)

				local var_57_13 = 10
				local var_57_14 = utf8.len(var_57_12)
				local var_57_15 = var_57_13 <= 0 and var_57_9 or var_57_9 * (var_57_14 / var_57_13)

				if var_57_15 > 0 and var_57_9 < var_57_15 then
					arg_54_1.talkMaxDuration = var_57_15

					if var_57_15 + var_57_8 > arg_54_1.duration_ then
						arg_54_1.duration_ = var_57_15 + var_57_8
					end
				end

				arg_54_1.text_.text = var_57_12
				arg_54_1.typewritter.percent = 0

				arg_54_1.typewritter:SetDirty()
				arg_54_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161013", "story_v_out_417161.awb") ~= 0 then
					local var_57_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161013", "story_v_out_417161.awb") / 1000

					if var_57_16 + var_57_8 > arg_54_1.duration_ then
						arg_54_1.duration_ = var_57_16 + var_57_8
					end

					if var_57_11.prefab_name ~= "" and arg_54_1.actors_[var_57_11.prefab_name] ~= nil then
						local var_57_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_54_1.actors_[var_57_11.prefab_name].transform, "story_v_out_417161", "417161013", "story_v_out_417161.awb")

						arg_54_1:RecordAudio("417161013", var_57_17)
						arg_54_1:RecordAudio("417161013", var_57_17)
					else
						arg_54_1:AudioAction("play", "voice", "story_v_out_417161", "417161013", "story_v_out_417161.awb")
					end

					arg_54_1:RecordHistoryTalkVoice("story_v_out_417161", "417161013", "story_v_out_417161.awb")
				end

				arg_54_1:RecordContent(arg_54_1.text_.text)
			end

			local var_57_18 = math.max(var_57_9, arg_54_1.talkMaxDuration)

			if var_57_8 <= arg_54_1.time_ and arg_54_1.time_ < var_57_8 + var_57_18 then
				arg_54_1.typewritter.percent = (arg_54_1.time_ - var_57_8) / var_57_18

				arg_54_1.typewritter:SetDirty()
			end

			if arg_54_1.time_ >= var_57_8 + var_57_18 and arg_54_1.time_ < var_57_8 + var_57_18 + arg_57_0 then
				arg_54_1.typewritter.percent = 1

				arg_54_1.typewritter:SetDirty()
				arg_54_1:ShowNextGo(true)
			end
		end
	end,
	Play417161014 = function(arg_58_0, arg_58_1)
		arg_58_1.time_ = 0
		arg_58_1.frameCnt_ = 0
		arg_58_1.state_ = "playing"
		arg_58_1.curTalkId_ = 417161014
		arg_58_1.duration_ = 9.53

		SetActive(arg_58_1.tipsGo_, false)

		function arg_58_1.onSingleLineFinish_()
			arg_58_1.onSingleLineUpdate_ = nil
			arg_58_1.onSingleLineFinish_ = nil
			arg_58_1.state_ = "waiting"
		end

		function arg_58_1.playNext_(arg_60_0)
			if arg_60_0 == 1 then
				arg_58_0:Play417161015(arg_58_1)
			end
		end

		function arg_58_1.onSingleLineUpdate_(arg_61_0)
			local var_61_0 = arg_58_1.actors_["10128"]
			local var_61_1 = 0

			if var_61_1 < arg_58_1.time_ and arg_58_1.time_ <= var_61_1 + arg_61_0 and not isNil(var_61_0) and arg_58_1.var_.actorSpriteComps10128 == nil then
				arg_58_1.var_.actorSpriteComps10128 = var_61_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_61_2 = 0.2

			if var_61_1 <= arg_58_1.time_ and arg_58_1.time_ < var_61_1 + var_61_2 and not isNil(var_61_0) then
				local var_61_3 = (arg_58_1.time_ - var_61_1) / var_61_2

				if arg_58_1.var_.actorSpriteComps10128 then
					for iter_61_0, iter_61_1 in pairs(arg_58_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_61_1 then
							if arg_58_1.isInRecall_ then
								local var_61_4 = Mathf.Lerp(iter_61_1.color.r, arg_58_1.hightColor1.r, var_61_3)
								local var_61_5 = Mathf.Lerp(iter_61_1.color.g, arg_58_1.hightColor1.g, var_61_3)
								local var_61_6 = Mathf.Lerp(iter_61_1.color.b, arg_58_1.hightColor1.b, var_61_3)

								iter_61_1.color = Color.New(var_61_4, var_61_5, var_61_6)
							else
								local var_61_7 = Mathf.Lerp(iter_61_1.color.r, 1, var_61_3)

								iter_61_1.color = Color.New(var_61_7, var_61_7, var_61_7)
							end
						end
					end
				end
			end

			if arg_58_1.time_ >= var_61_1 + var_61_2 and arg_58_1.time_ < var_61_1 + var_61_2 + arg_61_0 and not isNil(var_61_0) and arg_58_1.var_.actorSpriteComps10128 then
				for iter_61_2, iter_61_3 in pairs(arg_58_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_61_3 then
						if arg_58_1.isInRecall_ then
							iter_61_3.color = arg_58_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_61_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_58_1.var_.actorSpriteComps10128 = nil
			end

			local var_61_8 = 0
			local var_61_9 = 1.05

			if var_61_8 < arg_58_1.time_ and arg_58_1.time_ <= var_61_8 + arg_61_0 then
				arg_58_1.talkMaxDuration = 0
				arg_58_1.dialogCg_.alpha = 1

				arg_58_1.dialog_:SetActive(true)
				SetActive(arg_58_1.leftNameGo_, true)

				local var_61_10 = arg_58_1:FormatText(StoryNameCfg[595].name)

				arg_58_1.leftNameTxt_.text = var_61_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_58_1.leftNameTxt_.transform)

				arg_58_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_58_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_58_1:RecordName(arg_58_1.leftNameTxt_.text)
				SetActive(arg_58_1.iconTrs_.gameObject, false)
				arg_58_1.callingController_:SetSelectedState("normal")

				local var_61_11 = arg_58_1:GetWordFromCfg(417161014)
				local var_61_12 = arg_58_1:FormatText(var_61_11.content)

				arg_58_1.text_.text = var_61_12

				LuaForUtil.ClearLinePrefixSymbol(arg_58_1.text_)

				local var_61_13 = 42
				local var_61_14 = utf8.len(var_61_12)
				local var_61_15 = var_61_13 <= 0 and var_61_9 or var_61_9 * (var_61_14 / var_61_13)

				if var_61_15 > 0 and var_61_9 < var_61_15 then
					arg_58_1.talkMaxDuration = var_61_15

					if var_61_15 + var_61_8 > arg_58_1.duration_ then
						arg_58_1.duration_ = var_61_15 + var_61_8
					end
				end

				arg_58_1.text_.text = var_61_12
				arg_58_1.typewritter.percent = 0

				arg_58_1.typewritter:SetDirty()
				arg_58_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161014", "story_v_out_417161.awb") ~= 0 then
					local var_61_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161014", "story_v_out_417161.awb") / 1000

					if var_61_16 + var_61_8 > arg_58_1.duration_ then
						arg_58_1.duration_ = var_61_16 + var_61_8
					end

					if var_61_11.prefab_name ~= "" and arg_58_1.actors_[var_61_11.prefab_name] ~= nil then
						local var_61_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_58_1.actors_[var_61_11.prefab_name].transform, "story_v_out_417161", "417161014", "story_v_out_417161.awb")

						arg_58_1:RecordAudio("417161014", var_61_17)
						arg_58_1:RecordAudio("417161014", var_61_17)
					else
						arg_58_1:AudioAction("play", "voice", "story_v_out_417161", "417161014", "story_v_out_417161.awb")
					end

					arg_58_1:RecordHistoryTalkVoice("story_v_out_417161", "417161014", "story_v_out_417161.awb")
				end

				arg_58_1:RecordContent(arg_58_1.text_.text)
			end

			local var_61_18 = math.max(var_61_9, arg_58_1.talkMaxDuration)

			if var_61_8 <= arg_58_1.time_ and arg_58_1.time_ < var_61_8 + var_61_18 then
				arg_58_1.typewritter.percent = (arg_58_1.time_ - var_61_8) / var_61_18

				arg_58_1.typewritter:SetDirty()
			end

			if arg_58_1.time_ >= var_61_8 + var_61_18 and arg_58_1.time_ < var_61_8 + var_61_18 + arg_61_0 then
				arg_58_1.typewritter.percent = 1

				arg_58_1.typewritter:SetDirty()
				arg_58_1:ShowNextGo(true)
			end
		end
	end,
	Play417161015 = function(arg_62_0, arg_62_1)
		arg_62_1.time_ = 0
		arg_62_1.frameCnt_ = 0
		arg_62_1.state_ = "playing"
		arg_62_1.curTalkId_ = 417161015
		arg_62_1.duration_ = 5

		SetActive(arg_62_1.tipsGo_, false)

		function arg_62_1.onSingleLineFinish_()
			arg_62_1.onSingleLineUpdate_ = nil
			arg_62_1.onSingleLineFinish_ = nil
			arg_62_1.state_ = "waiting"
		end

		function arg_62_1.playNext_(arg_64_0)
			if arg_64_0 == 1 then
				arg_62_0:Play417161016(arg_62_1)
			end
		end

		function arg_62_1.onSingleLineUpdate_(arg_65_0)
			local var_65_0 = arg_62_1.actors_["10128"].transform
			local var_65_1 = 0

			if var_65_1 < arg_62_1.time_ and arg_62_1.time_ <= var_65_1 + arg_65_0 then
				arg_62_1.var_.moveOldPos10128 = var_65_0.localPosition
				var_65_0.localScale = Vector3.New(1, 1, 1)

				arg_62_1:CheckSpriteTmpPos("10128", 7)

				local var_65_2 = var_65_0.childCount

				for iter_65_0 = 0, var_65_2 - 1 do
					local var_65_3 = var_65_0:GetChild(iter_65_0)

					if var_65_3.name == "" or not string.find(var_65_3.name, "split") then
						var_65_3.gameObject:SetActive(true)
					else
						var_65_3.gameObject:SetActive(false)
					end
				end
			end

			local var_65_4 = 0.001

			if var_65_1 <= arg_62_1.time_ and arg_62_1.time_ < var_65_1 + var_65_4 then
				local var_65_5 = (arg_62_1.time_ - var_65_1) / var_65_4
				local var_65_6 = Vector3.New(0, -2000, -300)

				var_65_0.localPosition = Vector3.Lerp(arg_62_1.var_.moveOldPos10128, var_65_6, var_65_5)
			end

			if arg_62_1.time_ >= var_65_1 + var_65_4 and arg_62_1.time_ < var_65_1 + var_65_4 + arg_65_0 then
				var_65_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_65_7 = 0
			local var_65_8 = 1.35

			if var_65_7 < arg_62_1.time_ and arg_62_1.time_ <= var_65_7 + arg_65_0 then
				arg_62_1.talkMaxDuration = 0
				arg_62_1.dialogCg_.alpha = 1

				arg_62_1.dialog_:SetActive(true)
				SetActive(arg_62_1.leftNameGo_, false)

				arg_62_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_62_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_62_1:RecordName(arg_62_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_62_1.iconTrs_.gameObject, false)
				arg_62_1.callingController_:SetSelectedState("normal")

				local var_65_9 = arg_62_1:GetWordFromCfg(417161015)
				local var_65_10 = arg_62_1:FormatText(var_65_9.content)

				arg_62_1.text_.text = var_65_10

				LuaForUtil.ClearLinePrefixSymbol(arg_62_1.text_)

				local var_65_11 = 54
				local var_65_12 = utf8.len(var_65_10)
				local var_65_13 = var_65_11 <= 0 and var_65_8 or var_65_8 * (var_65_12 / var_65_11)

				if var_65_13 > 0 and var_65_8 < var_65_13 then
					arg_62_1.talkMaxDuration = var_65_13

					if var_65_13 + var_65_7 > arg_62_1.duration_ then
						arg_62_1.duration_ = var_65_13 + var_65_7
					end
				end

				arg_62_1.text_.text = var_65_10
				arg_62_1.typewritter.percent = 0

				arg_62_1.typewritter:SetDirty()
				arg_62_1:ShowNextGo(false)
				arg_62_1:RecordContent(arg_62_1.text_.text)
			end

			local var_65_14 = math.max(var_65_8, arg_62_1.talkMaxDuration)

			if var_65_7 <= arg_62_1.time_ and arg_62_1.time_ < var_65_7 + var_65_14 then
				arg_62_1.typewritter.percent = (arg_62_1.time_ - var_65_7) / var_65_14

				arg_62_1.typewritter:SetDirty()
			end

			if arg_62_1.time_ >= var_65_7 + var_65_14 and arg_62_1.time_ < var_65_7 + var_65_14 + arg_65_0 then
				arg_62_1.typewritter.percent = 1

				arg_62_1.typewritter:SetDirty()
				arg_62_1:ShowNextGo(true)
			end
		end
	end,
	Play417161016 = function(arg_66_0, arg_66_1)
		arg_66_1.time_ = 0
		arg_66_1.frameCnt_ = 0
		arg_66_1.state_ = "playing"
		arg_66_1.curTalkId_ = 417161016
		arg_66_1.duration_ = 5

		SetActive(arg_66_1.tipsGo_, false)

		function arg_66_1.onSingleLineFinish_()
			arg_66_1.onSingleLineUpdate_ = nil
			arg_66_1.onSingleLineFinish_ = nil
			arg_66_1.state_ = "waiting"
		end

		function arg_66_1.playNext_(arg_68_0)
			if arg_68_0 == 1 then
				arg_66_0:Play417161017(arg_66_1)
			end
		end

		function arg_66_1.onSingleLineUpdate_(arg_69_0)
			local var_69_0 = 0
			local var_69_1 = 0.775

			if var_69_0 < arg_66_1.time_ and arg_66_1.time_ <= var_69_0 + arg_69_0 then
				arg_66_1.talkMaxDuration = 0
				arg_66_1.dialogCg_.alpha = 1

				arg_66_1.dialog_:SetActive(true)
				SetActive(arg_66_1.leftNameGo_, false)

				arg_66_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_66_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_66_1:RecordName(arg_66_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_66_1.iconTrs_.gameObject, false)
				arg_66_1.callingController_:SetSelectedState("normal")

				local var_69_2 = arg_66_1:GetWordFromCfg(417161016)
				local var_69_3 = arg_66_1:FormatText(var_69_2.content)

				arg_66_1.text_.text = var_69_3

				LuaForUtil.ClearLinePrefixSymbol(arg_66_1.text_)

				local var_69_4 = 31
				local var_69_5 = utf8.len(var_69_3)
				local var_69_6 = var_69_4 <= 0 and var_69_1 or var_69_1 * (var_69_5 / var_69_4)

				if var_69_6 > 0 and var_69_1 < var_69_6 then
					arg_66_1.talkMaxDuration = var_69_6

					if var_69_6 + var_69_0 > arg_66_1.duration_ then
						arg_66_1.duration_ = var_69_6 + var_69_0
					end
				end

				arg_66_1.text_.text = var_69_3
				arg_66_1.typewritter.percent = 0

				arg_66_1.typewritter:SetDirty()
				arg_66_1:ShowNextGo(false)
				arg_66_1:RecordContent(arg_66_1.text_.text)
			end

			local var_69_7 = math.max(var_69_1, arg_66_1.talkMaxDuration)

			if var_69_0 <= arg_66_1.time_ and arg_66_1.time_ < var_69_0 + var_69_7 then
				arg_66_1.typewritter.percent = (arg_66_1.time_ - var_69_0) / var_69_7

				arg_66_1.typewritter:SetDirty()
			end

			if arg_66_1.time_ >= var_69_0 + var_69_7 and arg_66_1.time_ < var_69_0 + var_69_7 + arg_69_0 then
				arg_66_1.typewritter.percent = 1

				arg_66_1.typewritter:SetDirty()
				arg_66_1:ShowNextGo(true)
			end
		end
	end,
	Play417161017 = function(arg_70_0, arg_70_1)
		arg_70_1.time_ = 0
		arg_70_1.frameCnt_ = 0
		arg_70_1.state_ = "playing"
		arg_70_1.curTalkId_ = 417161017
		arg_70_1.duration_ = 1.93

		SetActive(arg_70_1.tipsGo_, false)

		function arg_70_1.onSingleLineFinish_()
			arg_70_1.onSingleLineUpdate_ = nil
			arg_70_1.onSingleLineFinish_ = nil
			arg_70_1.state_ = "waiting"
		end

		function arg_70_1.playNext_(arg_72_0)
			if arg_72_0 == 1 then
				arg_70_0:Play417161018(arg_70_1)
			end
		end

		function arg_70_1.onSingleLineUpdate_(arg_73_0)
			local var_73_0 = arg_70_1.actors_["10128"]
			local var_73_1 = 0

			if var_73_1 < arg_70_1.time_ and arg_70_1.time_ <= var_73_1 + arg_73_0 and not isNil(var_73_0) and arg_70_1.var_.actorSpriteComps10128 == nil then
				arg_70_1.var_.actorSpriteComps10128 = var_73_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_73_2 = 0.2

			if var_73_1 <= arg_70_1.time_ and arg_70_1.time_ < var_73_1 + var_73_2 and not isNil(var_73_0) then
				local var_73_3 = (arg_70_1.time_ - var_73_1) / var_73_2

				if arg_70_1.var_.actorSpriteComps10128 then
					for iter_73_0, iter_73_1 in pairs(arg_70_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_73_1 then
							if arg_70_1.isInRecall_ then
								local var_73_4 = Mathf.Lerp(iter_73_1.color.r, arg_70_1.hightColor1.r, var_73_3)
								local var_73_5 = Mathf.Lerp(iter_73_1.color.g, arg_70_1.hightColor1.g, var_73_3)
								local var_73_6 = Mathf.Lerp(iter_73_1.color.b, arg_70_1.hightColor1.b, var_73_3)

								iter_73_1.color = Color.New(var_73_4, var_73_5, var_73_6)
							else
								local var_73_7 = Mathf.Lerp(iter_73_1.color.r, 1, var_73_3)

								iter_73_1.color = Color.New(var_73_7, var_73_7, var_73_7)
							end
						end
					end
				end
			end

			if arg_70_1.time_ >= var_73_1 + var_73_2 and arg_70_1.time_ < var_73_1 + var_73_2 + arg_73_0 and not isNil(var_73_0) and arg_70_1.var_.actorSpriteComps10128 then
				for iter_73_2, iter_73_3 in pairs(arg_70_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_73_3 then
						if arg_70_1.isInRecall_ then
							iter_73_3.color = arg_70_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_73_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_70_1.var_.actorSpriteComps10128 = nil
			end

			local var_73_8 = arg_70_1.actors_["10128"].transform
			local var_73_9 = 0

			if var_73_9 < arg_70_1.time_ and arg_70_1.time_ <= var_73_9 + arg_73_0 then
				arg_70_1.var_.moveOldPos10128 = var_73_8.localPosition
				var_73_8.localScale = Vector3.New(1, 1, 1)

				arg_70_1:CheckSpriteTmpPos("10128", 3)

				local var_73_10 = var_73_8.childCount

				for iter_73_4 = 0, var_73_10 - 1 do
					local var_73_11 = var_73_8:GetChild(iter_73_4)

					if var_73_11.name == "split_6" or not string.find(var_73_11.name, "split") then
						var_73_11.gameObject:SetActive(true)
					else
						var_73_11.gameObject:SetActive(false)
					end
				end
			end

			local var_73_12 = 0.001

			if var_73_9 <= arg_70_1.time_ and arg_70_1.time_ < var_73_9 + var_73_12 then
				local var_73_13 = (arg_70_1.time_ - var_73_9) / var_73_12
				local var_73_14 = Vector3.New(0, -347, -300)

				var_73_8.localPosition = Vector3.Lerp(arg_70_1.var_.moveOldPos10128, var_73_14, var_73_13)
			end

			if arg_70_1.time_ >= var_73_9 + var_73_12 and arg_70_1.time_ < var_73_9 + var_73_12 + arg_73_0 then
				var_73_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_73_15 = 0
			local var_73_16 = 0.225

			if var_73_15 < arg_70_1.time_ and arg_70_1.time_ <= var_73_15 + arg_73_0 then
				arg_70_1.talkMaxDuration = 0
				arg_70_1.dialogCg_.alpha = 1

				arg_70_1.dialog_:SetActive(true)
				SetActive(arg_70_1.leftNameGo_, true)

				local var_73_17 = arg_70_1:FormatText(StoryNameCfg[595].name)

				arg_70_1.leftNameTxt_.text = var_73_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_70_1.leftNameTxt_.transform)

				arg_70_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_70_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_70_1:RecordName(arg_70_1.leftNameTxt_.text)
				SetActive(arg_70_1.iconTrs_.gameObject, false)
				arg_70_1.callingController_:SetSelectedState("normal")

				local var_73_18 = arg_70_1:GetWordFromCfg(417161017)
				local var_73_19 = arg_70_1:FormatText(var_73_18.content)

				arg_70_1.text_.text = var_73_19

				LuaForUtil.ClearLinePrefixSymbol(arg_70_1.text_)

				local var_73_20 = 9
				local var_73_21 = utf8.len(var_73_19)
				local var_73_22 = var_73_20 <= 0 and var_73_16 or var_73_16 * (var_73_21 / var_73_20)

				if var_73_22 > 0 and var_73_16 < var_73_22 then
					arg_70_1.talkMaxDuration = var_73_22

					if var_73_22 + var_73_15 > arg_70_1.duration_ then
						arg_70_1.duration_ = var_73_22 + var_73_15
					end
				end

				arg_70_1.text_.text = var_73_19
				arg_70_1.typewritter.percent = 0

				arg_70_1.typewritter:SetDirty()
				arg_70_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161017", "story_v_out_417161.awb") ~= 0 then
					local var_73_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161017", "story_v_out_417161.awb") / 1000

					if var_73_23 + var_73_15 > arg_70_1.duration_ then
						arg_70_1.duration_ = var_73_23 + var_73_15
					end

					if var_73_18.prefab_name ~= "" and arg_70_1.actors_[var_73_18.prefab_name] ~= nil then
						local var_73_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_70_1.actors_[var_73_18.prefab_name].transform, "story_v_out_417161", "417161017", "story_v_out_417161.awb")

						arg_70_1:RecordAudio("417161017", var_73_24)
						arg_70_1:RecordAudio("417161017", var_73_24)
					else
						arg_70_1:AudioAction("play", "voice", "story_v_out_417161", "417161017", "story_v_out_417161.awb")
					end

					arg_70_1:RecordHistoryTalkVoice("story_v_out_417161", "417161017", "story_v_out_417161.awb")
				end

				arg_70_1:RecordContent(arg_70_1.text_.text)
			end

			local var_73_25 = math.max(var_73_16, arg_70_1.talkMaxDuration)

			if var_73_15 <= arg_70_1.time_ and arg_70_1.time_ < var_73_15 + var_73_25 then
				arg_70_1.typewritter.percent = (arg_70_1.time_ - var_73_15) / var_73_25

				arg_70_1.typewritter:SetDirty()
			end

			if arg_70_1.time_ >= var_73_15 + var_73_25 and arg_70_1.time_ < var_73_15 + var_73_25 + arg_73_0 then
				arg_70_1.typewritter.percent = 1

				arg_70_1.typewritter:SetDirty()
				arg_70_1:ShowNextGo(true)
			end
		end
	end,
	Play417161018 = function(arg_74_0, arg_74_1)
		arg_74_1.time_ = 0
		arg_74_1.frameCnt_ = 0
		arg_74_1.state_ = "playing"
		arg_74_1.curTalkId_ = 417161018
		arg_74_1.duration_ = 6.27

		SetActive(arg_74_1.tipsGo_, false)

		function arg_74_1.onSingleLineFinish_()
			arg_74_1.onSingleLineUpdate_ = nil
			arg_74_1.onSingleLineFinish_ = nil
			arg_74_1.state_ = "waiting"
		end

		function arg_74_1.playNext_(arg_76_0)
			if arg_76_0 == 1 then
				arg_74_0:Play417161019(arg_74_1)
			end
		end

		function arg_74_1.onSingleLineUpdate_(arg_77_0)
			local var_77_0 = arg_74_1.actors_["10128"]
			local var_77_1 = 0

			if var_77_1 < arg_74_1.time_ and arg_74_1.time_ <= var_77_1 + arg_77_0 and not isNil(var_77_0) and arg_74_1.var_.actorSpriteComps10128 == nil then
				arg_74_1.var_.actorSpriteComps10128 = var_77_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_77_2 = 0.2

			if var_77_1 <= arg_74_1.time_ and arg_74_1.time_ < var_77_1 + var_77_2 and not isNil(var_77_0) then
				local var_77_3 = (arg_74_1.time_ - var_77_1) / var_77_2

				if arg_74_1.var_.actorSpriteComps10128 then
					for iter_77_0, iter_77_1 in pairs(arg_74_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_77_1 then
							if arg_74_1.isInRecall_ then
								local var_77_4 = Mathf.Lerp(iter_77_1.color.r, arg_74_1.hightColor2.r, var_77_3)
								local var_77_5 = Mathf.Lerp(iter_77_1.color.g, arg_74_1.hightColor2.g, var_77_3)
								local var_77_6 = Mathf.Lerp(iter_77_1.color.b, arg_74_1.hightColor2.b, var_77_3)

								iter_77_1.color = Color.New(var_77_4, var_77_5, var_77_6)
							else
								local var_77_7 = Mathf.Lerp(iter_77_1.color.r, 0.5, var_77_3)

								iter_77_1.color = Color.New(var_77_7, var_77_7, var_77_7)
							end
						end
					end
				end
			end

			if arg_74_1.time_ >= var_77_1 + var_77_2 and arg_74_1.time_ < var_77_1 + var_77_2 + arg_77_0 and not isNil(var_77_0) and arg_74_1.var_.actorSpriteComps10128 then
				for iter_77_2, iter_77_3 in pairs(arg_74_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_77_3 then
						if arg_74_1.isInRecall_ then
							iter_77_3.color = arg_74_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_77_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_74_1.var_.actorSpriteComps10128 = nil
			end

			local var_77_8 = 0
			local var_77_9 = 0.7

			if var_77_8 < arg_74_1.time_ and arg_74_1.time_ <= var_77_8 + arg_77_0 then
				arg_74_1.talkMaxDuration = 0
				arg_74_1.dialogCg_.alpha = 1

				arg_74_1.dialog_:SetActive(true)
				SetActive(arg_74_1.leftNameGo_, true)

				local var_77_10 = arg_74_1:FormatText(StoryNameCfg[1110].name)

				arg_74_1.leftNameTxt_.text = var_77_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_74_1.leftNameTxt_.transform)

				arg_74_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_74_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_74_1:RecordName(arg_74_1.leftNameTxt_.text)
				SetActive(arg_74_1.iconTrs_.gameObject, true)
				arg_74_1.iconController_:SetSelectedState("hero")

				arg_74_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_74_1.callingController_:SetSelectedState("normal")

				arg_74_1.keyicon_.color = Color.New(1, 1, 1)
				arg_74_1.icon_.color = Color.New(1, 1, 1)

				local var_77_11 = arg_74_1:GetWordFromCfg(417161018)
				local var_77_12 = arg_74_1:FormatText(var_77_11.content)

				arg_74_1.text_.text = var_77_12

				LuaForUtil.ClearLinePrefixSymbol(arg_74_1.text_)

				local var_77_13 = 28
				local var_77_14 = utf8.len(var_77_12)
				local var_77_15 = var_77_13 <= 0 and var_77_9 or var_77_9 * (var_77_14 / var_77_13)

				if var_77_15 > 0 and var_77_9 < var_77_15 then
					arg_74_1.talkMaxDuration = var_77_15

					if var_77_15 + var_77_8 > arg_74_1.duration_ then
						arg_74_1.duration_ = var_77_15 + var_77_8
					end
				end

				arg_74_1.text_.text = var_77_12
				arg_74_1.typewritter.percent = 0

				arg_74_1.typewritter:SetDirty()
				arg_74_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161018", "story_v_out_417161.awb") ~= 0 then
					local var_77_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161018", "story_v_out_417161.awb") / 1000

					if var_77_16 + var_77_8 > arg_74_1.duration_ then
						arg_74_1.duration_ = var_77_16 + var_77_8
					end

					if var_77_11.prefab_name ~= "" and arg_74_1.actors_[var_77_11.prefab_name] ~= nil then
						local var_77_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_74_1.actors_[var_77_11.prefab_name].transform, "story_v_out_417161", "417161018", "story_v_out_417161.awb")

						arg_74_1:RecordAudio("417161018", var_77_17)
						arg_74_1:RecordAudio("417161018", var_77_17)
					else
						arg_74_1:AudioAction("play", "voice", "story_v_out_417161", "417161018", "story_v_out_417161.awb")
					end

					arg_74_1:RecordHistoryTalkVoice("story_v_out_417161", "417161018", "story_v_out_417161.awb")
				end

				arg_74_1:RecordContent(arg_74_1.text_.text)
			end

			local var_77_18 = math.max(var_77_9, arg_74_1.talkMaxDuration)

			if var_77_8 <= arg_74_1.time_ and arg_74_1.time_ < var_77_8 + var_77_18 then
				arg_74_1.typewritter.percent = (arg_74_1.time_ - var_77_8) / var_77_18

				arg_74_1.typewritter:SetDirty()
			end

			if arg_74_1.time_ >= var_77_8 + var_77_18 and arg_74_1.time_ < var_77_8 + var_77_18 + arg_77_0 then
				arg_74_1.typewritter.percent = 1

				arg_74_1.typewritter:SetDirty()
				arg_74_1:ShowNextGo(true)
			end
		end
	end,
	Play417161019 = function(arg_78_0, arg_78_1)
		arg_78_1.time_ = 0
		arg_78_1.frameCnt_ = 0
		arg_78_1.state_ = "playing"
		arg_78_1.curTalkId_ = 417161019
		arg_78_1.duration_ = 6.17

		SetActive(arg_78_1.tipsGo_, false)

		function arg_78_1.onSingleLineFinish_()
			arg_78_1.onSingleLineUpdate_ = nil
			arg_78_1.onSingleLineFinish_ = nil
			arg_78_1.state_ = "waiting"
		end

		function arg_78_1.playNext_(arg_80_0)
			if arg_80_0 == 1 then
				arg_78_0:Play417161020(arg_78_1)
			end
		end

		function arg_78_1.onSingleLineUpdate_(arg_81_0)
			local var_81_0 = arg_78_1.actors_["10128"]
			local var_81_1 = 0

			if var_81_1 < arg_78_1.time_ and arg_78_1.time_ <= var_81_1 + arg_81_0 and not isNil(var_81_0) and arg_78_1.var_.actorSpriteComps10128 == nil then
				arg_78_1.var_.actorSpriteComps10128 = var_81_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_81_2 = 0.2

			if var_81_1 <= arg_78_1.time_ and arg_78_1.time_ < var_81_1 + var_81_2 and not isNil(var_81_0) then
				local var_81_3 = (arg_78_1.time_ - var_81_1) / var_81_2

				if arg_78_1.var_.actorSpriteComps10128 then
					for iter_81_0, iter_81_1 in pairs(arg_78_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_81_1 then
							if arg_78_1.isInRecall_ then
								local var_81_4 = Mathf.Lerp(iter_81_1.color.r, arg_78_1.hightColor1.r, var_81_3)
								local var_81_5 = Mathf.Lerp(iter_81_1.color.g, arg_78_1.hightColor1.g, var_81_3)
								local var_81_6 = Mathf.Lerp(iter_81_1.color.b, arg_78_1.hightColor1.b, var_81_3)

								iter_81_1.color = Color.New(var_81_4, var_81_5, var_81_6)
							else
								local var_81_7 = Mathf.Lerp(iter_81_1.color.r, 1, var_81_3)

								iter_81_1.color = Color.New(var_81_7, var_81_7, var_81_7)
							end
						end
					end
				end
			end

			if arg_78_1.time_ >= var_81_1 + var_81_2 and arg_78_1.time_ < var_81_1 + var_81_2 + arg_81_0 and not isNil(var_81_0) and arg_78_1.var_.actorSpriteComps10128 then
				for iter_81_2, iter_81_3 in pairs(arg_78_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_81_3 then
						if arg_78_1.isInRecall_ then
							iter_81_3.color = arg_78_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_81_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_78_1.var_.actorSpriteComps10128 = nil
			end

			local var_81_8 = arg_78_1.actors_["10128"].transform
			local var_81_9 = 0

			if var_81_9 < arg_78_1.time_ and arg_78_1.time_ <= var_81_9 + arg_81_0 then
				arg_78_1.var_.moveOldPos10128 = var_81_8.localPosition
				var_81_8.localScale = Vector3.New(1, 1, 1)

				arg_78_1:CheckSpriteTmpPos("10128", 3)

				local var_81_10 = var_81_8.childCount

				for iter_81_4 = 0, var_81_10 - 1 do
					local var_81_11 = var_81_8:GetChild(iter_81_4)

					if var_81_11.name == "split_2" or not string.find(var_81_11.name, "split") then
						var_81_11.gameObject:SetActive(true)
					else
						var_81_11.gameObject:SetActive(false)
					end
				end
			end

			local var_81_12 = 0.001

			if var_81_9 <= arg_78_1.time_ and arg_78_1.time_ < var_81_9 + var_81_12 then
				local var_81_13 = (arg_78_1.time_ - var_81_9) / var_81_12
				local var_81_14 = Vector3.New(0, -347, -300)

				var_81_8.localPosition = Vector3.Lerp(arg_78_1.var_.moveOldPos10128, var_81_14, var_81_13)
			end

			if arg_78_1.time_ >= var_81_9 + var_81_12 and arg_78_1.time_ < var_81_9 + var_81_12 + arg_81_0 then
				var_81_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_81_15 = 0
			local var_81_16 = 0.725

			if var_81_15 < arg_78_1.time_ and arg_78_1.time_ <= var_81_15 + arg_81_0 then
				arg_78_1.talkMaxDuration = 0
				arg_78_1.dialogCg_.alpha = 1

				arg_78_1.dialog_:SetActive(true)
				SetActive(arg_78_1.leftNameGo_, true)

				local var_81_17 = arg_78_1:FormatText(StoryNameCfg[595].name)

				arg_78_1.leftNameTxt_.text = var_81_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_78_1.leftNameTxt_.transform)

				arg_78_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_78_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_78_1:RecordName(arg_78_1.leftNameTxt_.text)
				SetActive(arg_78_1.iconTrs_.gameObject, false)
				arg_78_1.callingController_:SetSelectedState("normal")

				local var_81_18 = arg_78_1:GetWordFromCfg(417161019)
				local var_81_19 = arg_78_1:FormatText(var_81_18.content)

				arg_78_1.text_.text = var_81_19

				LuaForUtil.ClearLinePrefixSymbol(arg_78_1.text_)

				local var_81_20 = 29
				local var_81_21 = utf8.len(var_81_19)
				local var_81_22 = var_81_20 <= 0 and var_81_16 or var_81_16 * (var_81_21 / var_81_20)

				if var_81_22 > 0 and var_81_16 < var_81_22 then
					arg_78_1.talkMaxDuration = var_81_22

					if var_81_22 + var_81_15 > arg_78_1.duration_ then
						arg_78_1.duration_ = var_81_22 + var_81_15
					end
				end

				arg_78_1.text_.text = var_81_19
				arg_78_1.typewritter.percent = 0

				arg_78_1.typewritter:SetDirty()
				arg_78_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161019", "story_v_out_417161.awb") ~= 0 then
					local var_81_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161019", "story_v_out_417161.awb") / 1000

					if var_81_23 + var_81_15 > arg_78_1.duration_ then
						arg_78_1.duration_ = var_81_23 + var_81_15
					end

					if var_81_18.prefab_name ~= "" and arg_78_1.actors_[var_81_18.prefab_name] ~= nil then
						local var_81_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_78_1.actors_[var_81_18.prefab_name].transform, "story_v_out_417161", "417161019", "story_v_out_417161.awb")

						arg_78_1:RecordAudio("417161019", var_81_24)
						arg_78_1:RecordAudio("417161019", var_81_24)
					else
						arg_78_1:AudioAction("play", "voice", "story_v_out_417161", "417161019", "story_v_out_417161.awb")
					end

					arg_78_1:RecordHistoryTalkVoice("story_v_out_417161", "417161019", "story_v_out_417161.awb")
				end

				arg_78_1:RecordContent(arg_78_1.text_.text)
			end

			local var_81_25 = math.max(var_81_16, arg_78_1.talkMaxDuration)

			if var_81_15 <= arg_78_1.time_ and arg_78_1.time_ < var_81_15 + var_81_25 then
				arg_78_1.typewritter.percent = (arg_78_1.time_ - var_81_15) / var_81_25

				arg_78_1.typewritter:SetDirty()
			end

			if arg_78_1.time_ >= var_81_15 + var_81_25 and arg_78_1.time_ < var_81_15 + var_81_25 + arg_81_0 then
				arg_78_1.typewritter.percent = 1

				arg_78_1.typewritter:SetDirty()
				arg_78_1:ShowNextGo(true)
			end
		end
	end,
	Play417161020 = function(arg_82_0, arg_82_1)
		arg_82_1.time_ = 0
		arg_82_1.frameCnt_ = 0
		arg_82_1.state_ = "playing"
		arg_82_1.curTalkId_ = 417161020
		arg_82_1.duration_ = 8.73

		SetActive(arg_82_1.tipsGo_, false)

		function arg_82_1.onSingleLineFinish_()
			arg_82_1.onSingleLineUpdate_ = nil
			arg_82_1.onSingleLineFinish_ = nil
			arg_82_1.state_ = "waiting"
		end

		function arg_82_1.playNext_(arg_84_0)
			if arg_84_0 == 1 then
				arg_82_0:Play417161021(arg_82_1)
			end
		end

		function arg_82_1.onSingleLineUpdate_(arg_85_0)
			local var_85_0 = 0
			local var_85_1 = 1.125

			if var_85_0 < arg_82_1.time_ and arg_82_1.time_ <= var_85_0 + arg_85_0 then
				arg_82_1.talkMaxDuration = 0
				arg_82_1.dialogCg_.alpha = 1

				arg_82_1.dialog_:SetActive(true)
				SetActive(arg_82_1.leftNameGo_, true)

				local var_85_2 = arg_82_1:FormatText(StoryNameCfg[595].name)

				arg_82_1.leftNameTxt_.text = var_85_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_82_1.leftNameTxt_.transform)

				arg_82_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_82_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_82_1:RecordName(arg_82_1.leftNameTxt_.text)
				SetActive(arg_82_1.iconTrs_.gameObject, false)
				arg_82_1.callingController_:SetSelectedState("normal")

				local var_85_3 = arg_82_1:GetWordFromCfg(417161020)
				local var_85_4 = arg_82_1:FormatText(var_85_3.content)

				arg_82_1.text_.text = var_85_4

				LuaForUtil.ClearLinePrefixSymbol(arg_82_1.text_)

				local var_85_5 = 45
				local var_85_6 = utf8.len(var_85_4)
				local var_85_7 = var_85_5 <= 0 and var_85_1 or var_85_1 * (var_85_6 / var_85_5)

				if var_85_7 > 0 and var_85_1 < var_85_7 then
					arg_82_1.talkMaxDuration = var_85_7

					if var_85_7 + var_85_0 > arg_82_1.duration_ then
						arg_82_1.duration_ = var_85_7 + var_85_0
					end
				end

				arg_82_1.text_.text = var_85_4
				arg_82_1.typewritter.percent = 0

				arg_82_1.typewritter:SetDirty()
				arg_82_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161020", "story_v_out_417161.awb") ~= 0 then
					local var_85_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161020", "story_v_out_417161.awb") / 1000

					if var_85_8 + var_85_0 > arg_82_1.duration_ then
						arg_82_1.duration_ = var_85_8 + var_85_0
					end

					if var_85_3.prefab_name ~= "" and arg_82_1.actors_[var_85_3.prefab_name] ~= nil then
						local var_85_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_82_1.actors_[var_85_3.prefab_name].transform, "story_v_out_417161", "417161020", "story_v_out_417161.awb")

						arg_82_1:RecordAudio("417161020", var_85_9)
						arg_82_1:RecordAudio("417161020", var_85_9)
					else
						arg_82_1:AudioAction("play", "voice", "story_v_out_417161", "417161020", "story_v_out_417161.awb")
					end

					arg_82_1:RecordHistoryTalkVoice("story_v_out_417161", "417161020", "story_v_out_417161.awb")
				end

				arg_82_1:RecordContent(arg_82_1.text_.text)
			end

			local var_85_10 = math.max(var_85_1, arg_82_1.talkMaxDuration)

			if var_85_0 <= arg_82_1.time_ and arg_82_1.time_ < var_85_0 + var_85_10 then
				arg_82_1.typewritter.percent = (arg_82_1.time_ - var_85_0) / var_85_10

				arg_82_1.typewritter:SetDirty()
			end

			if arg_82_1.time_ >= var_85_0 + var_85_10 and arg_82_1.time_ < var_85_0 + var_85_10 + arg_85_0 then
				arg_82_1.typewritter.percent = 1

				arg_82_1.typewritter:SetDirty()
				arg_82_1:ShowNextGo(true)
			end
		end
	end,
	Play417161021 = function(arg_86_0, arg_86_1)
		arg_86_1.time_ = 0
		arg_86_1.frameCnt_ = 0
		arg_86_1.state_ = "playing"
		arg_86_1.curTalkId_ = 417161021
		arg_86_1.duration_ = 5.57

		SetActive(arg_86_1.tipsGo_, false)

		function arg_86_1.onSingleLineFinish_()
			arg_86_1.onSingleLineUpdate_ = nil
			arg_86_1.onSingleLineFinish_ = nil
			arg_86_1.state_ = "waiting"
		end

		function arg_86_1.playNext_(arg_88_0)
			if arg_88_0 == 1 then
				arg_86_0:Play417161022(arg_86_1)
			end
		end

		function arg_86_1.onSingleLineUpdate_(arg_89_0)
			local var_89_0 = 0
			local var_89_1 = 0.7

			if var_89_0 < arg_86_1.time_ and arg_86_1.time_ <= var_89_0 + arg_89_0 then
				arg_86_1.talkMaxDuration = 0
				arg_86_1.dialogCg_.alpha = 1

				arg_86_1.dialog_:SetActive(true)
				SetActive(arg_86_1.leftNameGo_, true)

				local var_89_2 = arg_86_1:FormatText(StoryNameCfg[595].name)

				arg_86_1.leftNameTxt_.text = var_89_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_86_1.leftNameTxt_.transform)

				arg_86_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_86_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_86_1:RecordName(arg_86_1.leftNameTxt_.text)
				SetActive(arg_86_1.iconTrs_.gameObject, false)
				arg_86_1.callingController_:SetSelectedState("normal")

				local var_89_3 = arg_86_1:GetWordFromCfg(417161021)
				local var_89_4 = arg_86_1:FormatText(var_89_3.content)

				arg_86_1.text_.text = var_89_4

				LuaForUtil.ClearLinePrefixSymbol(arg_86_1.text_)

				local var_89_5 = 28
				local var_89_6 = utf8.len(var_89_4)
				local var_89_7 = var_89_5 <= 0 and var_89_1 or var_89_1 * (var_89_6 / var_89_5)

				if var_89_7 > 0 and var_89_1 < var_89_7 then
					arg_86_1.talkMaxDuration = var_89_7

					if var_89_7 + var_89_0 > arg_86_1.duration_ then
						arg_86_1.duration_ = var_89_7 + var_89_0
					end
				end

				arg_86_1.text_.text = var_89_4
				arg_86_1.typewritter.percent = 0

				arg_86_1.typewritter:SetDirty()
				arg_86_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161021", "story_v_out_417161.awb") ~= 0 then
					local var_89_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161021", "story_v_out_417161.awb") / 1000

					if var_89_8 + var_89_0 > arg_86_1.duration_ then
						arg_86_1.duration_ = var_89_8 + var_89_0
					end

					if var_89_3.prefab_name ~= "" and arg_86_1.actors_[var_89_3.prefab_name] ~= nil then
						local var_89_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_86_1.actors_[var_89_3.prefab_name].transform, "story_v_out_417161", "417161021", "story_v_out_417161.awb")

						arg_86_1:RecordAudio("417161021", var_89_9)
						arg_86_1:RecordAudio("417161021", var_89_9)
					else
						arg_86_1:AudioAction("play", "voice", "story_v_out_417161", "417161021", "story_v_out_417161.awb")
					end

					arg_86_1:RecordHistoryTalkVoice("story_v_out_417161", "417161021", "story_v_out_417161.awb")
				end

				arg_86_1:RecordContent(arg_86_1.text_.text)
			end

			local var_89_10 = math.max(var_89_1, arg_86_1.talkMaxDuration)

			if var_89_0 <= arg_86_1.time_ and arg_86_1.time_ < var_89_0 + var_89_10 then
				arg_86_1.typewritter.percent = (arg_86_1.time_ - var_89_0) / var_89_10

				arg_86_1.typewritter:SetDirty()
			end

			if arg_86_1.time_ >= var_89_0 + var_89_10 and arg_86_1.time_ < var_89_0 + var_89_10 + arg_89_0 then
				arg_86_1.typewritter.percent = 1

				arg_86_1.typewritter:SetDirty()
				arg_86_1:ShowNextGo(true)
			end
		end
	end,
	Play417161022 = function(arg_90_0, arg_90_1)
		arg_90_1.time_ = 0
		arg_90_1.frameCnt_ = 0
		arg_90_1.state_ = "playing"
		arg_90_1.curTalkId_ = 417161022
		arg_90_1.duration_ = 5

		SetActive(arg_90_1.tipsGo_, false)

		function arg_90_1.onSingleLineFinish_()
			arg_90_1.onSingleLineUpdate_ = nil
			arg_90_1.onSingleLineFinish_ = nil
			arg_90_1.state_ = "waiting"
		end

		function arg_90_1.playNext_(arg_92_0)
			if arg_92_0 == 1 then
				arg_90_0:Play417161023(arg_90_1)
			end
		end

		function arg_90_1.onSingleLineUpdate_(arg_93_0)
			local var_93_0 = arg_90_1.actors_["10128"].transform
			local var_93_1 = 0

			if var_93_1 < arg_90_1.time_ and arg_90_1.time_ <= var_93_1 + arg_93_0 then
				arg_90_1.var_.moveOldPos10128 = var_93_0.localPosition
				var_93_0.localScale = Vector3.New(1, 1, 1)

				arg_90_1:CheckSpriteTmpPos("10128", 7)

				local var_93_2 = var_93_0.childCount

				for iter_93_0 = 0, var_93_2 - 1 do
					local var_93_3 = var_93_0:GetChild(iter_93_0)

					if var_93_3.name == "" or not string.find(var_93_3.name, "split") then
						var_93_3.gameObject:SetActive(true)
					else
						var_93_3.gameObject:SetActive(false)
					end
				end
			end

			local var_93_4 = 0.001

			if var_93_1 <= arg_90_1.time_ and arg_90_1.time_ < var_93_1 + var_93_4 then
				local var_93_5 = (arg_90_1.time_ - var_93_1) / var_93_4
				local var_93_6 = Vector3.New(0, -2000, -300)

				var_93_0.localPosition = Vector3.Lerp(arg_90_1.var_.moveOldPos10128, var_93_6, var_93_5)
			end

			if arg_90_1.time_ >= var_93_1 + var_93_4 and arg_90_1.time_ < var_93_1 + var_93_4 + arg_93_0 then
				var_93_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_93_7 = 1.36666666666667
			local var_93_8 = 1

			if var_93_7 < arg_90_1.time_ and arg_90_1.time_ <= var_93_7 + arg_93_0 then
				local var_93_9 = "play"
				local var_93_10 = "effect"

				arg_90_1:AudioAction(var_93_9, var_93_10, "se_story_17", "se_story_17_door_close02", "")
			end

			local var_93_11 = 0
			local var_93_12 = 1.175

			if var_93_11 < arg_90_1.time_ and arg_90_1.time_ <= var_93_11 + arg_93_0 then
				arg_90_1.talkMaxDuration = 0
				arg_90_1.dialogCg_.alpha = 1

				arg_90_1.dialog_:SetActive(true)
				SetActive(arg_90_1.leftNameGo_, false)

				arg_90_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_90_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_90_1:RecordName(arg_90_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_90_1.iconTrs_.gameObject, false)
				arg_90_1.callingController_:SetSelectedState("normal")

				local var_93_13 = arg_90_1:GetWordFromCfg(417161022)
				local var_93_14 = arg_90_1:FormatText(var_93_13.content)

				arg_90_1.text_.text = var_93_14

				LuaForUtil.ClearLinePrefixSymbol(arg_90_1.text_)

				local var_93_15 = 47
				local var_93_16 = utf8.len(var_93_14)
				local var_93_17 = var_93_15 <= 0 and var_93_12 or var_93_12 * (var_93_16 / var_93_15)

				if var_93_17 > 0 and var_93_12 < var_93_17 then
					arg_90_1.talkMaxDuration = var_93_17

					if var_93_17 + var_93_11 > arg_90_1.duration_ then
						arg_90_1.duration_ = var_93_17 + var_93_11
					end
				end

				arg_90_1.text_.text = var_93_14
				arg_90_1.typewritter.percent = 0

				arg_90_1.typewritter:SetDirty()
				arg_90_1:ShowNextGo(false)
				arg_90_1:RecordContent(arg_90_1.text_.text)
			end

			local var_93_18 = math.max(var_93_12, arg_90_1.talkMaxDuration)

			if var_93_11 <= arg_90_1.time_ and arg_90_1.time_ < var_93_11 + var_93_18 then
				arg_90_1.typewritter.percent = (arg_90_1.time_ - var_93_11) / var_93_18

				arg_90_1.typewritter:SetDirty()
			end

			if arg_90_1.time_ >= var_93_11 + var_93_18 and arg_90_1.time_ < var_93_11 + var_93_18 + arg_93_0 then
				arg_90_1.typewritter.percent = 1

				arg_90_1.typewritter:SetDirty()
				arg_90_1:ShowNextGo(true)
			end
		end
	end,
	Play417161023 = function(arg_94_0, arg_94_1)
		arg_94_1.time_ = 0
		arg_94_1.frameCnt_ = 0
		arg_94_1.state_ = "playing"
		arg_94_1.curTalkId_ = 417161023
		arg_94_1.duration_ = 5

		SetActive(arg_94_1.tipsGo_, false)

		function arg_94_1.onSingleLineFinish_()
			arg_94_1.onSingleLineUpdate_ = nil
			arg_94_1.onSingleLineFinish_ = nil
			arg_94_1.state_ = "waiting"
		end

		function arg_94_1.playNext_(arg_96_0)
			if arg_96_0 == 1 then
				arg_94_0:Play417161024(arg_94_1)
			end
		end

		function arg_94_1.onSingleLineUpdate_(arg_97_0)
			local var_97_0 = 0
			local var_97_1 = 1.275

			if var_97_0 < arg_94_1.time_ and arg_94_1.time_ <= var_97_0 + arg_97_0 then
				arg_94_1.talkMaxDuration = 0
				arg_94_1.dialogCg_.alpha = 1

				arg_94_1.dialog_:SetActive(true)
				SetActive(arg_94_1.leftNameGo_, false)

				arg_94_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_94_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_94_1:RecordName(arg_94_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_94_1.iconTrs_.gameObject, false)
				arg_94_1.callingController_:SetSelectedState("normal")

				local var_97_2 = arg_94_1:GetWordFromCfg(417161023)
				local var_97_3 = arg_94_1:FormatText(var_97_2.content)

				arg_94_1.text_.text = var_97_3

				LuaForUtil.ClearLinePrefixSymbol(arg_94_1.text_)

				local var_97_4 = 51
				local var_97_5 = utf8.len(var_97_3)
				local var_97_6 = var_97_4 <= 0 and var_97_1 or var_97_1 * (var_97_5 / var_97_4)

				if var_97_6 > 0 and var_97_1 < var_97_6 then
					arg_94_1.talkMaxDuration = var_97_6

					if var_97_6 + var_97_0 > arg_94_1.duration_ then
						arg_94_1.duration_ = var_97_6 + var_97_0
					end
				end

				arg_94_1.text_.text = var_97_3
				arg_94_1.typewritter.percent = 0

				arg_94_1.typewritter:SetDirty()
				arg_94_1:ShowNextGo(false)
				arg_94_1:RecordContent(arg_94_1.text_.text)
			end

			local var_97_7 = math.max(var_97_1, arg_94_1.talkMaxDuration)

			if var_97_0 <= arg_94_1.time_ and arg_94_1.time_ < var_97_0 + var_97_7 then
				arg_94_1.typewritter.percent = (arg_94_1.time_ - var_97_0) / var_97_7

				arg_94_1.typewritter:SetDirty()
			end

			if arg_94_1.time_ >= var_97_0 + var_97_7 and arg_94_1.time_ < var_97_0 + var_97_7 + arg_97_0 then
				arg_94_1.typewritter.percent = 1

				arg_94_1.typewritter:SetDirty()
				arg_94_1:ShowNextGo(true)
			end
		end
	end,
	Play417161024 = function(arg_98_0, arg_98_1)
		arg_98_1.time_ = 0
		arg_98_1.frameCnt_ = 0
		arg_98_1.state_ = "playing"
		arg_98_1.curTalkId_ = 417161024
		arg_98_1.duration_ = 3.57

		SetActive(arg_98_1.tipsGo_, false)

		function arg_98_1.onSingleLineFinish_()
			arg_98_1.onSingleLineUpdate_ = nil
			arg_98_1.onSingleLineFinish_ = nil
			arg_98_1.state_ = "waiting"
		end

		function arg_98_1.playNext_(arg_100_0)
			if arg_100_0 == 1 then
				arg_98_0:Play417161025(arg_98_1)
			end
		end

		function arg_98_1.onSingleLineUpdate_(arg_101_0)
			local var_101_0 = arg_98_1.actors_["10128"]
			local var_101_1 = 0

			if var_101_1 < arg_98_1.time_ and arg_98_1.time_ <= var_101_1 + arg_101_0 and not isNil(var_101_0) and arg_98_1.var_.actorSpriteComps10128 == nil then
				arg_98_1.var_.actorSpriteComps10128 = var_101_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_101_2 = 0.2

			if var_101_1 <= arg_98_1.time_ and arg_98_1.time_ < var_101_1 + var_101_2 and not isNil(var_101_0) then
				local var_101_3 = (arg_98_1.time_ - var_101_1) / var_101_2

				if arg_98_1.var_.actorSpriteComps10128 then
					for iter_101_0, iter_101_1 in pairs(arg_98_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_101_1 then
							if arg_98_1.isInRecall_ then
								local var_101_4 = Mathf.Lerp(iter_101_1.color.r, arg_98_1.hightColor1.r, var_101_3)
								local var_101_5 = Mathf.Lerp(iter_101_1.color.g, arg_98_1.hightColor1.g, var_101_3)
								local var_101_6 = Mathf.Lerp(iter_101_1.color.b, arg_98_1.hightColor1.b, var_101_3)

								iter_101_1.color = Color.New(var_101_4, var_101_5, var_101_6)
							else
								local var_101_7 = Mathf.Lerp(iter_101_1.color.r, 1, var_101_3)

								iter_101_1.color = Color.New(var_101_7, var_101_7, var_101_7)
							end
						end
					end
				end
			end

			if arg_98_1.time_ >= var_101_1 + var_101_2 and arg_98_1.time_ < var_101_1 + var_101_2 + arg_101_0 and not isNil(var_101_0) and arg_98_1.var_.actorSpriteComps10128 then
				for iter_101_2, iter_101_3 in pairs(arg_98_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_101_3 then
						if arg_98_1.isInRecall_ then
							iter_101_3.color = arg_98_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_101_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_98_1.var_.actorSpriteComps10128 = nil
			end

			local var_101_8 = arg_98_1.actors_["10128"].transform
			local var_101_9 = 0

			if var_101_9 < arg_98_1.time_ and arg_98_1.time_ <= var_101_9 + arg_101_0 then
				arg_98_1.var_.moveOldPos10128 = var_101_8.localPosition
				var_101_8.localScale = Vector3.New(1, 1, 1)

				arg_98_1:CheckSpriteTmpPos("10128", 3)

				local var_101_10 = var_101_8.childCount

				for iter_101_4 = 0, var_101_10 - 1 do
					local var_101_11 = var_101_8:GetChild(iter_101_4)

					if var_101_11.name == "split_6" or not string.find(var_101_11.name, "split") then
						var_101_11.gameObject:SetActive(true)
					else
						var_101_11.gameObject:SetActive(false)
					end
				end
			end

			local var_101_12 = 0.001

			if var_101_9 <= arg_98_1.time_ and arg_98_1.time_ < var_101_9 + var_101_12 then
				local var_101_13 = (arg_98_1.time_ - var_101_9) / var_101_12
				local var_101_14 = Vector3.New(0, -347, -300)

				var_101_8.localPosition = Vector3.Lerp(arg_98_1.var_.moveOldPos10128, var_101_14, var_101_13)
			end

			if arg_98_1.time_ >= var_101_9 + var_101_12 and arg_98_1.time_ < var_101_9 + var_101_12 + arg_101_0 then
				var_101_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_101_15 = 0
			local var_101_16 = 0.3

			if var_101_15 < arg_98_1.time_ and arg_98_1.time_ <= var_101_15 + arg_101_0 then
				arg_98_1.talkMaxDuration = 0
				arg_98_1.dialogCg_.alpha = 1

				arg_98_1.dialog_:SetActive(true)
				SetActive(arg_98_1.leftNameGo_, true)

				local var_101_17 = arg_98_1:FormatText(StoryNameCfg[595].name)

				arg_98_1.leftNameTxt_.text = var_101_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_98_1.leftNameTxt_.transform)

				arg_98_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_98_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_98_1:RecordName(arg_98_1.leftNameTxt_.text)
				SetActive(arg_98_1.iconTrs_.gameObject, false)
				arg_98_1.callingController_:SetSelectedState("normal")

				local var_101_18 = arg_98_1:GetWordFromCfg(417161024)
				local var_101_19 = arg_98_1:FormatText(var_101_18.content)

				arg_98_1.text_.text = var_101_19

				LuaForUtil.ClearLinePrefixSymbol(arg_98_1.text_)

				local var_101_20 = 12
				local var_101_21 = utf8.len(var_101_19)
				local var_101_22 = var_101_20 <= 0 and var_101_16 or var_101_16 * (var_101_21 / var_101_20)

				if var_101_22 > 0 and var_101_16 < var_101_22 then
					arg_98_1.talkMaxDuration = var_101_22

					if var_101_22 + var_101_15 > arg_98_1.duration_ then
						arg_98_1.duration_ = var_101_22 + var_101_15
					end
				end

				arg_98_1.text_.text = var_101_19
				arg_98_1.typewritter.percent = 0

				arg_98_1.typewritter:SetDirty()
				arg_98_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161024", "story_v_out_417161.awb") ~= 0 then
					local var_101_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161024", "story_v_out_417161.awb") / 1000

					if var_101_23 + var_101_15 > arg_98_1.duration_ then
						arg_98_1.duration_ = var_101_23 + var_101_15
					end

					if var_101_18.prefab_name ~= "" and arg_98_1.actors_[var_101_18.prefab_name] ~= nil then
						local var_101_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_98_1.actors_[var_101_18.prefab_name].transform, "story_v_out_417161", "417161024", "story_v_out_417161.awb")

						arg_98_1:RecordAudio("417161024", var_101_24)
						arg_98_1:RecordAudio("417161024", var_101_24)
					else
						arg_98_1:AudioAction("play", "voice", "story_v_out_417161", "417161024", "story_v_out_417161.awb")
					end

					arg_98_1:RecordHistoryTalkVoice("story_v_out_417161", "417161024", "story_v_out_417161.awb")
				end

				arg_98_1:RecordContent(arg_98_1.text_.text)
			end

			local var_101_25 = math.max(var_101_16, arg_98_1.talkMaxDuration)

			if var_101_15 <= arg_98_1.time_ and arg_98_1.time_ < var_101_15 + var_101_25 then
				arg_98_1.typewritter.percent = (arg_98_1.time_ - var_101_15) / var_101_25

				arg_98_1.typewritter:SetDirty()
			end

			if arg_98_1.time_ >= var_101_15 + var_101_25 and arg_98_1.time_ < var_101_15 + var_101_25 + arg_101_0 then
				arg_98_1.typewritter.percent = 1

				arg_98_1.typewritter:SetDirty()
				arg_98_1:ShowNextGo(true)
			end
		end
	end,
	Play417161025 = function(arg_102_0, arg_102_1)
		arg_102_1.time_ = 0
		arg_102_1.frameCnt_ = 0
		arg_102_1.state_ = "playing"
		arg_102_1.curTalkId_ = 417161025
		arg_102_1.duration_ = 3.77

		SetActive(arg_102_1.tipsGo_, false)

		function arg_102_1.onSingleLineFinish_()
			arg_102_1.onSingleLineUpdate_ = nil
			arg_102_1.onSingleLineFinish_ = nil
			arg_102_1.state_ = "waiting"
		end

		function arg_102_1.playNext_(arg_104_0)
			if arg_104_0 == 1 then
				arg_102_0:Play417161026(arg_102_1)
			end
		end

		function arg_102_1.onSingleLineUpdate_(arg_105_0)
			local var_105_0 = arg_102_1.actors_["10128"]
			local var_105_1 = 0

			if var_105_1 < arg_102_1.time_ and arg_102_1.time_ <= var_105_1 + arg_105_0 and not isNil(var_105_0) and arg_102_1.var_.actorSpriteComps10128 == nil then
				arg_102_1.var_.actorSpriteComps10128 = var_105_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_105_2 = 0.2

			if var_105_1 <= arg_102_1.time_ and arg_102_1.time_ < var_105_1 + var_105_2 and not isNil(var_105_0) then
				local var_105_3 = (arg_102_1.time_ - var_105_1) / var_105_2

				if arg_102_1.var_.actorSpriteComps10128 then
					for iter_105_0, iter_105_1 in pairs(arg_102_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_105_1 then
							if arg_102_1.isInRecall_ then
								local var_105_4 = Mathf.Lerp(iter_105_1.color.r, arg_102_1.hightColor2.r, var_105_3)
								local var_105_5 = Mathf.Lerp(iter_105_1.color.g, arg_102_1.hightColor2.g, var_105_3)
								local var_105_6 = Mathf.Lerp(iter_105_1.color.b, arg_102_1.hightColor2.b, var_105_3)

								iter_105_1.color = Color.New(var_105_4, var_105_5, var_105_6)
							else
								local var_105_7 = Mathf.Lerp(iter_105_1.color.r, 0.5, var_105_3)

								iter_105_1.color = Color.New(var_105_7, var_105_7, var_105_7)
							end
						end
					end
				end
			end

			if arg_102_1.time_ >= var_105_1 + var_105_2 and arg_102_1.time_ < var_105_1 + var_105_2 + arg_105_0 and not isNil(var_105_0) and arg_102_1.var_.actorSpriteComps10128 then
				for iter_105_2, iter_105_3 in pairs(arg_102_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_105_3 then
						if arg_102_1.isInRecall_ then
							iter_105_3.color = arg_102_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_105_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_102_1.var_.actorSpriteComps10128 = nil
			end

			local var_105_8 = arg_102_1.actors_["10128"].transform
			local var_105_9 = 0

			if var_105_9 < arg_102_1.time_ and arg_102_1.time_ <= var_105_9 + arg_105_0 then
				arg_102_1.var_.moveOldPos10128 = var_105_8.localPosition
				var_105_8.localScale = Vector3.New(1, 1, 1)

				arg_102_1:CheckSpriteTmpPos("10128", 2)

				local var_105_10 = var_105_8.childCount

				for iter_105_4 = 0, var_105_10 - 1 do
					local var_105_11 = var_105_8:GetChild(iter_105_4)

					if var_105_11.name == "" or not string.find(var_105_11.name, "split") then
						var_105_11.gameObject:SetActive(true)
					else
						var_105_11.gameObject:SetActive(false)
					end
				end
			end

			local var_105_12 = 0.001

			if var_105_9 <= arg_102_1.time_ and arg_102_1.time_ < var_105_9 + var_105_12 then
				local var_105_13 = (arg_102_1.time_ - var_105_9) / var_105_12
				local var_105_14 = Vector3.New(-390, -347, -300)

				var_105_8.localPosition = Vector3.Lerp(arg_102_1.var_.moveOldPos10128, var_105_14, var_105_13)
			end

			if arg_102_1.time_ >= var_105_9 + var_105_12 and arg_102_1.time_ < var_105_9 + var_105_12 + arg_105_0 then
				var_105_8.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_105_15 = "1095"

			if arg_102_1.actors_[var_105_15] == nil then
				local var_105_16 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1095")

				if not isNil(var_105_16) then
					local var_105_17 = Object.Instantiate(var_105_16, arg_102_1.canvasGo_.transform)

					var_105_17.transform:SetSiblingIndex(1)

					var_105_17.name = var_105_15
					var_105_17.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_102_1.actors_[var_105_15] = var_105_17

					local var_105_18 = var_105_17:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_102_1.isInRecall_ then
						for iter_105_5, iter_105_6 in ipairs(var_105_18) do
							iter_105_6.color = arg_102_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_105_19 = arg_102_1.actors_["1095"].transform
			local var_105_20 = 0

			if var_105_20 < arg_102_1.time_ and arg_102_1.time_ <= var_105_20 + arg_105_0 then
				arg_102_1.var_.moveOldPos1095 = var_105_19.localPosition
				var_105_19.localScale = Vector3.New(1, 1, 1)

				arg_102_1:CheckSpriteTmpPos("1095", 4)

				local var_105_21 = var_105_19.childCount

				for iter_105_7 = 0, var_105_21 - 1 do
					local var_105_22 = var_105_19:GetChild(iter_105_7)

					if var_105_22.name == "" or not string.find(var_105_22.name, "split") then
						var_105_22.gameObject:SetActive(true)
					else
						var_105_22.gameObject:SetActive(false)
					end
				end
			end

			local var_105_23 = 0.001

			if var_105_20 <= arg_102_1.time_ and arg_102_1.time_ < var_105_20 + var_105_23 then
				local var_105_24 = (arg_102_1.time_ - var_105_20) / var_105_23
				local var_105_25 = Vector3.New(390, -340, -285)

				var_105_19.localPosition = Vector3.Lerp(arg_102_1.var_.moveOldPos1095, var_105_25, var_105_24)
			end

			if arg_102_1.time_ >= var_105_20 + var_105_23 and arg_102_1.time_ < var_105_20 + var_105_23 + arg_105_0 then
				var_105_19.localPosition = Vector3.New(390, -340, -285)
			end

			local var_105_26 = arg_102_1.actors_["1095"]
			local var_105_27 = 0

			if var_105_27 < arg_102_1.time_ and arg_102_1.time_ <= var_105_27 + arg_105_0 then
				arg_102_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_105_28 = arg_102_1.actors_["1095"]
			local var_105_29 = 0

			if var_105_29 < arg_102_1.time_ and arg_102_1.time_ <= var_105_29 + arg_105_0 then
				local var_105_30 = var_105_28:GetComponentInChildren(typeof(CanvasGroup))

				if var_105_30 then
					arg_102_1.var_.alphaOldValue1095 = var_105_30.alpha
					arg_102_1.var_.characterEffect1095 = var_105_30
				end
			end

			local var_105_31 = 0.2

			if var_105_29 <= arg_102_1.time_ and arg_102_1.time_ < var_105_29 + var_105_31 then
				local var_105_32 = (arg_102_1.time_ - var_105_29) / var_105_31
				local var_105_33 = Mathf.Lerp(arg_102_1.var_.alphaOldValue1095, 0.6, var_105_32)

				if arg_102_1.var_.characterEffect1095 then
					arg_102_1.var_.characterEffect1095.alpha = var_105_33
				end
			end

			if arg_102_1.time_ >= var_105_29 + var_105_31 and arg_102_1.time_ < var_105_29 + var_105_31 + arg_105_0 and arg_102_1.var_.characterEffect1095 then
				arg_102_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_105_34 = 0
			local var_105_35 = 0.45

			if var_105_34 < arg_102_1.time_ and arg_102_1.time_ <= var_105_34 + arg_105_0 then
				arg_102_1.talkMaxDuration = 0
				arg_102_1.dialogCg_.alpha = 1

				arg_102_1.dialog_:SetActive(true)
				SetActive(arg_102_1.leftNameGo_, true)

				local var_105_36 = arg_102_1:FormatText(StoryNameCfg[471].name)

				arg_102_1.leftNameTxt_.text = var_105_36

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_102_1.leftNameTxt_.transform)

				arg_102_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_102_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_102_1:RecordName(arg_102_1.leftNameTxt_.text)
				SetActive(arg_102_1.iconTrs_.gameObject, false)
				arg_102_1.callingController_:SetSelectedState("normal")

				local var_105_37 = arg_102_1:GetWordFromCfg(417161025)
				local var_105_38 = arg_102_1:FormatText(var_105_37.content)

				arg_102_1.text_.text = var_105_38

				LuaForUtil.ClearLinePrefixSymbol(arg_102_1.text_)

				local var_105_39 = 18
				local var_105_40 = utf8.len(var_105_38)
				local var_105_41 = var_105_39 <= 0 and var_105_35 or var_105_35 * (var_105_40 / var_105_39)

				if var_105_41 > 0 and var_105_35 < var_105_41 then
					arg_102_1.talkMaxDuration = var_105_41

					if var_105_41 + var_105_34 > arg_102_1.duration_ then
						arg_102_1.duration_ = var_105_41 + var_105_34
					end
				end

				arg_102_1.text_.text = var_105_38
				arg_102_1.typewritter.percent = 0

				arg_102_1.typewritter:SetDirty()
				arg_102_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161025", "story_v_out_417161.awb") ~= 0 then
					local var_105_42 = manager.audio:GetVoiceLength("story_v_out_417161", "417161025", "story_v_out_417161.awb") / 1000

					if var_105_42 + var_105_34 > arg_102_1.duration_ then
						arg_102_1.duration_ = var_105_42 + var_105_34
					end

					if var_105_37.prefab_name ~= "" and arg_102_1.actors_[var_105_37.prefab_name] ~= nil then
						local var_105_43 = LuaForUtil.PlayVoiceWithCriLipsync(arg_102_1.actors_[var_105_37.prefab_name].transform, "story_v_out_417161", "417161025", "story_v_out_417161.awb")

						arg_102_1:RecordAudio("417161025", var_105_43)
						arg_102_1:RecordAudio("417161025", var_105_43)
					else
						arg_102_1:AudioAction("play", "voice", "story_v_out_417161", "417161025", "story_v_out_417161.awb")
					end

					arg_102_1:RecordHistoryTalkVoice("story_v_out_417161", "417161025", "story_v_out_417161.awb")
				end

				arg_102_1:RecordContent(arg_102_1.text_.text)
			end

			local var_105_44 = math.max(var_105_35, arg_102_1.talkMaxDuration)

			if var_105_34 <= arg_102_1.time_ and arg_102_1.time_ < var_105_34 + var_105_44 then
				arg_102_1.typewritter.percent = (arg_102_1.time_ - var_105_34) / var_105_44

				arg_102_1.typewritter:SetDirty()
			end

			if arg_102_1.time_ >= var_105_34 + var_105_44 and arg_102_1.time_ < var_105_34 + var_105_44 + arg_105_0 then
				arg_102_1.typewritter.percent = 1

				arg_102_1.typewritter:SetDirty()
				arg_102_1:ShowNextGo(true)
			end
		end
	end,
	Play417161026 = function(arg_106_0, arg_106_1)
		arg_106_1.time_ = 0
		arg_106_1.frameCnt_ = 0
		arg_106_1.state_ = "playing"
		arg_106_1.curTalkId_ = 417161026
		arg_106_1.duration_ = 7.47

		SetActive(arg_106_1.tipsGo_, false)

		function arg_106_1.onSingleLineFinish_()
			arg_106_1.onSingleLineUpdate_ = nil
			arg_106_1.onSingleLineFinish_ = nil
			arg_106_1.state_ = "waiting"
		end

		function arg_106_1.playNext_(arg_108_0)
			if arg_108_0 == 1 then
				arg_106_0:Play417161027(arg_106_1)
			end
		end

		function arg_106_1.onSingleLineUpdate_(arg_109_0)
			local var_109_0 = arg_106_1.actors_["10128"]
			local var_109_1 = 0

			if var_109_1 < arg_106_1.time_ and arg_106_1.time_ <= var_109_1 + arg_109_0 and not isNil(var_109_0) and arg_106_1.var_.actorSpriteComps10128 == nil then
				arg_106_1.var_.actorSpriteComps10128 = var_109_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_109_2 = 0.2

			if var_109_1 <= arg_106_1.time_ and arg_106_1.time_ < var_109_1 + var_109_2 and not isNil(var_109_0) then
				local var_109_3 = (arg_106_1.time_ - var_109_1) / var_109_2

				if arg_106_1.var_.actorSpriteComps10128 then
					for iter_109_0, iter_109_1 in pairs(arg_106_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_109_1 then
							if arg_106_1.isInRecall_ then
								local var_109_4 = Mathf.Lerp(iter_109_1.color.r, arg_106_1.hightColor1.r, var_109_3)
								local var_109_5 = Mathf.Lerp(iter_109_1.color.g, arg_106_1.hightColor1.g, var_109_3)
								local var_109_6 = Mathf.Lerp(iter_109_1.color.b, arg_106_1.hightColor1.b, var_109_3)

								iter_109_1.color = Color.New(var_109_4, var_109_5, var_109_6)
							else
								local var_109_7 = Mathf.Lerp(iter_109_1.color.r, 1, var_109_3)

								iter_109_1.color = Color.New(var_109_7, var_109_7, var_109_7)
							end
						end
					end
				end
			end

			if arg_106_1.time_ >= var_109_1 + var_109_2 and arg_106_1.time_ < var_109_1 + var_109_2 + arg_109_0 and not isNil(var_109_0) and arg_106_1.var_.actorSpriteComps10128 then
				for iter_109_2, iter_109_3 in pairs(arg_106_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_109_3 then
						if arg_106_1.isInRecall_ then
							iter_109_3.color = arg_106_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_109_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_106_1.var_.actorSpriteComps10128 = nil
			end

			local var_109_8 = arg_106_1.actors_["1095"]
			local var_109_9 = 0

			if var_109_9 < arg_106_1.time_ and arg_106_1.time_ <= var_109_9 + arg_109_0 and not isNil(var_109_8) and arg_106_1.var_.actorSpriteComps1095 == nil then
				arg_106_1.var_.actorSpriteComps1095 = var_109_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_109_10 = 0.2

			if var_109_9 <= arg_106_1.time_ and arg_106_1.time_ < var_109_9 + var_109_10 and not isNil(var_109_8) then
				local var_109_11 = (arg_106_1.time_ - var_109_9) / var_109_10

				if arg_106_1.var_.actorSpriteComps1095 then
					for iter_109_4, iter_109_5 in pairs(arg_106_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_109_5 then
							if arg_106_1.isInRecall_ then
								local var_109_12 = Mathf.Lerp(iter_109_5.color.r, arg_106_1.hightColor2.r, var_109_11)
								local var_109_13 = Mathf.Lerp(iter_109_5.color.g, arg_106_1.hightColor2.g, var_109_11)
								local var_109_14 = Mathf.Lerp(iter_109_5.color.b, arg_106_1.hightColor2.b, var_109_11)

								iter_109_5.color = Color.New(var_109_12, var_109_13, var_109_14)
							else
								local var_109_15 = Mathf.Lerp(iter_109_5.color.r, 0.5, var_109_11)

								iter_109_5.color = Color.New(var_109_15, var_109_15, var_109_15)
							end
						end
					end
				end
			end

			if arg_106_1.time_ >= var_109_9 + var_109_10 and arg_106_1.time_ < var_109_9 + var_109_10 + arg_109_0 and not isNil(var_109_8) and arg_106_1.var_.actorSpriteComps1095 then
				for iter_109_6, iter_109_7 in pairs(arg_106_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_109_7 then
						if arg_106_1.isInRecall_ then
							iter_109_7.color = arg_106_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_109_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_106_1.var_.actorSpriteComps1095 = nil
			end

			local var_109_16 = 0
			local var_109_17 = 1

			if var_109_16 < arg_106_1.time_ and arg_106_1.time_ <= var_109_16 + arg_109_0 then
				arg_106_1.talkMaxDuration = 0
				arg_106_1.dialogCg_.alpha = 1

				arg_106_1.dialog_:SetActive(true)
				SetActive(arg_106_1.leftNameGo_, true)

				local var_109_18 = arg_106_1:FormatText(StoryNameCfg[595].name)

				arg_106_1.leftNameTxt_.text = var_109_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_106_1.leftNameTxt_.transform)

				arg_106_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_106_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_106_1:RecordName(arg_106_1.leftNameTxt_.text)
				SetActive(arg_106_1.iconTrs_.gameObject, false)
				arg_106_1.callingController_:SetSelectedState("normal")

				local var_109_19 = arg_106_1:GetWordFromCfg(417161026)
				local var_109_20 = arg_106_1:FormatText(var_109_19.content)

				arg_106_1.text_.text = var_109_20

				LuaForUtil.ClearLinePrefixSymbol(arg_106_1.text_)

				local var_109_21 = 40
				local var_109_22 = utf8.len(var_109_20)
				local var_109_23 = var_109_21 <= 0 and var_109_17 or var_109_17 * (var_109_22 / var_109_21)

				if var_109_23 > 0 and var_109_17 < var_109_23 then
					arg_106_1.talkMaxDuration = var_109_23

					if var_109_23 + var_109_16 > arg_106_1.duration_ then
						arg_106_1.duration_ = var_109_23 + var_109_16
					end
				end

				arg_106_1.text_.text = var_109_20
				arg_106_1.typewritter.percent = 0

				arg_106_1.typewritter:SetDirty()
				arg_106_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161026", "story_v_out_417161.awb") ~= 0 then
					local var_109_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161026", "story_v_out_417161.awb") / 1000

					if var_109_24 + var_109_16 > arg_106_1.duration_ then
						arg_106_1.duration_ = var_109_24 + var_109_16
					end

					if var_109_19.prefab_name ~= "" and arg_106_1.actors_[var_109_19.prefab_name] ~= nil then
						local var_109_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_106_1.actors_[var_109_19.prefab_name].transform, "story_v_out_417161", "417161026", "story_v_out_417161.awb")

						arg_106_1:RecordAudio("417161026", var_109_25)
						arg_106_1:RecordAudio("417161026", var_109_25)
					else
						arg_106_1:AudioAction("play", "voice", "story_v_out_417161", "417161026", "story_v_out_417161.awb")
					end

					arg_106_1:RecordHistoryTalkVoice("story_v_out_417161", "417161026", "story_v_out_417161.awb")
				end

				arg_106_1:RecordContent(arg_106_1.text_.text)
			end

			local var_109_26 = math.max(var_109_17, arg_106_1.talkMaxDuration)

			if var_109_16 <= arg_106_1.time_ and arg_106_1.time_ < var_109_16 + var_109_26 then
				arg_106_1.typewritter.percent = (arg_106_1.time_ - var_109_16) / var_109_26

				arg_106_1.typewritter:SetDirty()
			end

			if arg_106_1.time_ >= var_109_16 + var_109_26 and arg_106_1.time_ < var_109_16 + var_109_26 + arg_109_0 then
				arg_106_1.typewritter.percent = 1

				arg_106_1.typewritter:SetDirty()
				arg_106_1:ShowNextGo(true)
			end
		end
	end,
	Play417161027 = function(arg_110_0, arg_110_1)
		arg_110_1.time_ = 0
		arg_110_1.frameCnt_ = 0
		arg_110_1.state_ = "playing"
		arg_110_1.curTalkId_ = 417161027
		arg_110_1.duration_ = 8.33

		SetActive(arg_110_1.tipsGo_, false)

		function arg_110_1.onSingleLineFinish_()
			arg_110_1.onSingleLineUpdate_ = nil
			arg_110_1.onSingleLineFinish_ = nil
			arg_110_1.state_ = "waiting"
		end

		function arg_110_1.playNext_(arg_112_0)
			if arg_112_0 == 1 then
				arg_110_0:Play417161028(arg_110_1)
			end
		end

		function arg_110_1.onSingleLineUpdate_(arg_113_0)
			local var_113_0 = 0
			local var_113_1 = 1.175

			if var_113_0 < arg_110_1.time_ and arg_110_1.time_ <= var_113_0 + arg_113_0 then
				arg_110_1.talkMaxDuration = 0
				arg_110_1.dialogCg_.alpha = 1

				arg_110_1.dialog_:SetActive(true)
				SetActive(arg_110_1.leftNameGo_, true)

				local var_113_2 = arg_110_1:FormatText(StoryNameCfg[595].name)

				arg_110_1.leftNameTxt_.text = var_113_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_110_1.leftNameTxt_.transform)

				arg_110_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_110_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_110_1:RecordName(arg_110_1.leftNameTxt_.text)
				SetActive(arg_110_1.iconTrs_.gameObject, false)
				arg_110_1.callingController_:SetSelectedState("normal")

				local var_113_3 = arg_110_1:GetWordFromCfg(417161027)
				local var_113_4 = arg_110_1:FormatText(var_113_3.content)

				arg_110_1.text_.text = var_113_4

				LuaForUtil.ClearLinePrefixSymbol(arg_110_1.text_)

				local var_113_5 = 47
				local var_113_6 = utf8.len(var_113_4)
				local var_113_7 = var_113_5 <= 0 and var_113_1 or var_113_1 * (var_113_6 / var_113_5)

				if var_113_7 > 0 and var_113_1 < var_113_7 then
					arg_110_1.talkMaxDuration = var_113_7

					if var_113_7 + var_113_0 > arg_110_1.duration_ then
						arg_110_1.duration_ = var_113_7 + var_113_0
					end
				end

				arg_110_1.text_.text = var_113_4
				arg_110_1.typewritter.percent = 0

				arg_110_1.typewritter:SetDirty()
				arg_110_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161027", "story_v_out_417161.awb") ~= 0 then
					local var_113_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161027", "story_v_out_417161.awb") / 1000

					if var_113_8 + var_113_0 > arg_110_1.duration_ then
						arg_110_1.duration_ = var_113_8 + var_113_0
					end

					if var_113_3.prefab_name ~= "" and arg_110_1.actors_[var_113_3.prefab_name] ~= nil then
						local var_113_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_110_1.actors_[var_113_3.prefab_name].transform, "story_v_out_417161", "417161027", "story_v_out_417161.awb")

						arg_110_1:RecordAudio("417161027", var_113_9)
						arg_110_1:RecordAudio("417161027", var_113_9)
					else
						arg_110_1:AudioAction("play", "voice", "story_v_out_417161", "417161027", "story_v_out_417161.awb")
					end

					arg_110_1:RecordHistoryTalkVoice("story_v_out_417161", "417161027", "story_v_out_417161.awb")
				end

				arg_110_1:RecordContent(arg_110_1.text_.text)
			end

			local var_113_10 = math.max(var_113_1, arg_110_1.talkMaxDuration)

			if var_113_0 <= arg_110_1.time_ and arg_110_1.time_ < var_113_0 + var_113_10 then
				arg_110_1.typewritter.percent = (arg_110_1.time_ - var_113_0) / var_113_10

				arg_110_1.typewritter:SetDirty()
			end

			if arg_110_1.time_ >= var_113_0 + var_113_10 and arg_110_1.time_ < var_113_0 + var_113_10 + arg_113_0 then
				arg_110_1.typewritter.percent = 1

				arg_110_1.typewritter:SetDirty()
				arg_110_1:ShowNextGo(true)
			end
		end
	end,
	Play417161028 = function(arg_114_0, arg_114_1)
		arg_114_1.time_ = 0
		arg_114_1.frameCnt_ = 0
		arg_114_1.state_ = "playing"
		arg_114_1.curTalkId_ = 417161028
		arg_114_1.duration_ = 2.8

		SetActive(arg_114_1.tipsGo_, false)

		function arg_114_1.onSingleLineFinish_()
			arg_114_1.onSingleLineUpdate_ = nil
			arg_114_1.onSingleLineFinish_ = nil
			arg_114_1.state_ = "waiting"
		end

		function arg_114_1.playNext_(arg_116_0)
			if arg_116_0 == 1 then
				arg_114_0:Play417161029(arg_114_1)
			end
		end

		function arg_114_1.onSingleLineUpdate_(arg_117_0)
			local var_117_0 = arg_114_1.actors_["10128"]
			local var_117_1 = 0

			if var_117_1 < arg_114_1.time_ and arg_114_1.time_ <= var_117_1 + arg_117_0 and not isNil(var_117_0) and arg_114_1.var_.actorSpriteComps10128 == nil then
				arg_114_1.var_.actorSpriteComps10128 = var_117_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_117_2 = 0.2

			if var_117_1 <= arg_114_1.time_ and arg_114_1.time_ < var_117_1 + var_117_2 and not isNil(var_117_0) then
				local var_117_3 = (arg_114_1.time_ - var_117_1) / var_117_2

				if arg_114_1.var_.actorSpriteComps10128 then
					for iter_117_0, iter_117_1 in pairs(arg_114_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_117_1 then
							if arg_114_1.isInRecall_ then
								local var_117_4 = Mathf.Lerp(iter_117_1.color.r, arg_114_1.hightColor2.r, var_117_3)
								local var_117_5 = Mathf.Lerp(iter_117_1.color.g, arg_114_1.hightColor2.g, var_117_3)
								local var_117_6 = Mathf.Lerp(iter_117_1.color.b, arg_114_1.hightColor2.b, var_117_3)

								iter_117_1.color = Color.New(var_117_4, var_117_5, var_117_6)
							else
								local var_117_7 = Mathf.Lerp(iter_117_1.color.r, 0.5, var_117_3)

								iter_117_1.color = Color.New(var_117_7, var_117_7, var_117_7)
							end
						end
					end
				end
			end

			if arg_114_1.time_ >= var_117_1 + var_117_2 and arg_114_1.time_ < var_117_1 + var_117_2 + arg_117_0 and not isNil(var_117_0) and arg_114_1.var_.actorSpriteComps10128 then
				for iter_117_2, iter_117_3 in pairs(arg_114_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_117_3 then
						if arg_114_1.isInRecall_ then
							iter_117_3.color = arg_114_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_117_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_114_1.var_.actorSpriteComps10128 = nil
			end

			local var_117_8 = arg_114_1.actors_["1095"].transform
			local var_117_9 = 0

			if var_117_9 < arg_114_1.time_ and arg_114_1.time_ <= var_117_9 + arg_117_0 then
				arg_114_1.var_.moveOldPos1095 = var_117_8.localPosition
				var_117_8.localScale = Vector3.New(1, 1, 1)

				arg_114_1:CheckSpriteTmpPos("1095", 4)

				local var_117_10 = var_117_8.childCount

				for iter_117_4 = 0, var_117_10 - 1 do
					local var_117_11 = var_117_8:GetChild(iter_117_4)

					if var_117_11.name == "split_6" or not string.find(var_117_11.name, "split") then
						var_117_11.gameObject:SetActive(true)
					else
						var_117_11.gameObject:SetActive(false)
					end
				end
			end

			local var_117_12 = 0.001

			if var_117_9 <= arg_114_1.time_ and arg_114_1.time_ < var_117_9 + var_117_12 then
				local var_117_13 = (arg_114_1.time_ - var_117_9) / var_117_12
				local var_117_14 = Vector3.New(390, -340, -285)

				var_117_8.localPosition = Vector3.Lerp(arg_114_1.var_.moveOldPos1095, var_117_14, var_117_13)
			end

			if arg_114_1.time_ >= var_117_9 + var_117_12 and arg_114_1.time_ < var_117_9 + var_117_12 + arg_117_0 then
				var_117_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_117_15 = 0
			local var_117_16 = 0.225

			if var_117_15 < arg_114_1.time_ and arg_114_1.time_ <= var_117_15 + arg_117_0 then
				arg_114_1.talkMaxDuration = 0
				arg_114_1.dialogCg_.alpha = 1

				arg_114_1.dialog_:SetActive(true)
				SetActive(arg_114_1.leftNameGo_, true)

				local var_117_17 = arg_114_1:FormatText(StoryNameCfg[471].name)

				arg_114_1.leftNameTxt_.text = var_117_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_114_1.leftNameTxt_.transform)

				arg_114_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_114_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_114_1:RecordName(arg_114_1.leftNameTxt_.text)
				SetActive(arg_114_1.iconTrs_.gameObject, false)
				arg_114_1.callingController_:SetSelectedState("normal")

				local var_117_18 = arg_114_1:GetWordFromCfg(417161028)
				local var_117_19 = arg_114_1:FormatText(var_117_18.content)

				arg_114_1.text_.text = var_117_19

				LuaForUtil.ClearLinePrefixSymbol(arg_114_1.text_)

				local var_117_20 = 9
				local var_117_21 = utf8.len(var_117_19)
				local var_117_22 = var_117_20 <= 0 and var_117_16 or var_117_16 * (var_117_21 / var_117_20)

				if var_117_22 > 0 and var_117_16 < var_117_22 then
					arg_114_1.talkMaxDuration = var_117_22

					if var_117_22 + var_117_15 > arg_114_1.duration_ then
						arg_114_1.duration_ = var_117_22 + var_117_15
					end
				end

				arg_114_1.text_.text = var_117_19
				arg_114_1.typewritter.percent = 0

				arg_114_1.typewritter:SetDirty()
				arg_114_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161028", "story_v_out_417161.awb") ~= 0 then
					local var_117_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161028", "story_v_out_417161.awb") / 1000

					if var_117_23 + var_117_15 > arg_114_1.duration_ then
						arg_114_1.duration_ = var_117_23 + var_117_15
					end

					if var_117_18.prefab_name ~= "" and arg_114_1.actors_[var_117_18.prefab_name] ~= nil then
						local var_117_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_114_1.actors_[var_117_18.prefab_name].transform, "story_v_out_417161", "417161028", "story_v_out_417161.awb")

						arg_114_1:RecordAudio("417161028", var_117_24)
						arg_114_1:RecordAudio("417161028", var_117_24)
					else
						arg_114_1:AudioAction("play", "voice", "story_v_out_417161", "417161028", "story_v_out_417161.awb")
					end

					arg_114_1:RecordHistoryTalkVoice("story_v_out_417161", "417161028", "story_v_out_417161.awb")
				end

				arg_114_1:RecordContent(arg_114_1.text_.text)
			end

			local var_117_25 = math.max(var_117_16, arg_114_1.talkMaxDuration)

			if var_117_15 <= arg_114_1.time_ and arg_114_1.time_ < var_117_15 + var_117_25 then
				arg_114_1.typewritter.percent = (arg_114_1.time_ - var_117_15) / var_117_25

				arg_114_1.typewritter:SetDirty()
			end

			if arg_114_1.time_ >= var_117_15 + var_117_25 and arg_114_1.time_ < var_117_15 + var_117_25 + arg_117_0 then
				arg_114_1.typewritter.percent = 1

				arg_114_1.typewritter:SetDirty()
				arg_114_1:ShowNextGo(true)
			end
		end
	end,
	Play417161029 = function(arg_118_0, arg_118_1)
		arg_118_1.time_ = 0
		arg_118_1.frameCnt_ = 0
		arg_118_1.state_ = "playing"
		arg_118_1.curTalkId_ = 417161029
		arg_118_1.duration_ = 3.93

		SetActive(arg_118_1.tipsGo_, false)

		function arg_118_1.onSingleLineFinish_()
			arg_118_1.onSingleLineUpdate_ = nil
			arg_118_1.onSingleLineFinish_ = nil
			arg_118_1.state_ = "waiting"
		end

		function arg_118_1.playNext_(arg_120_0)
			if arg_120_0 == 1 then
				arg_118_0:Play417161030(arg_118_1)
			end
		end

		function arg_118_1.onSingleLineUpdate_(arg_121_0)
			local var_121_0 = arg_118_1.actors_["10128"]
			local var_121_1 = 0

			if var_121_1 < arg_118_1.time_ and arg_118_1.time_ <= var_121_1 + arg_121_0 and not isNil(var_121_0) and arg_118_1.var_.actorSpriteComps10128 == nil then
				arg_118_1.var_.actorSpriteComps10128 = var_121_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_121_2 = 0.2

			if var_121_1 <= arg_118_1.time_ and arg_118_1.time_ < var_121_1 + var_121_2 and not isNil(var_121_0) then
				local var_121_3 = (arg_118_1.time_ - var_121_1) / var_121_2

				if arg_118_1.var_.actorSpriteComps10128 then
					for iter_121_0, iter_121_1 in pairs(arg_118_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_121_1 then
							if arg_118_1.isInRecall_ then
								local var_121_4 = Mathf.Lerp(iter_121_1.color.r, arg_118_1.hightColor1.r, var_121_3)
								local var_121_5 = Mathf.Lerp(iter_121_1.color.g, arg_118_1.hightColor1.g, var_121_3)
								local var_121_6 = Mathf.Lerp(iter_121_1.color.b, arg_118_1.hightColor1.b, var_121_3)

								iter_121_1.color = Color.New(var_121_4, var_121_5, var_121_6)
							else
								local var_121_7 = Mathf.Lerp(iter_121_1.color.r, 1, var_121_3)

								iter_121_1.color = Color.New(var_121_7, var_121_7, var_121_7)
							end
						end
					end
				end
			end

			if arg_118_1.time_ >= var_121_1 + var_121_2 and arg_118_1.time_ < var_121_1 + var_121_2 + arg_121_0 and not isNil(var_121_0) and arg_118_1.var_.actorSpriteComps10128 then
				for iter_121_2, iter_121_3 in pairs(arg_118_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_121_3 then
						if arg_118_1.isInRecall_ then
							iter_121_3.color = arg_118_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_121_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_118_1.var_.actorSpriteComps10128 = nil
			end

			local var_121_8 = arg_118_1.actors_["1095"]
			local var_121_9 = 0

			if var_121_9 < arg_118_1.time_ and arg_118_1.time_ <= var_121_9 + arg_121_0 and not isNil(var_121_8) and arg_118_1.var_.actorSpriteComps1095 == nil then
				arg_118_1.var_.actorSpriteComps1095 = var_121_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_121_10 = 0.2

			if var_121_9 <= arg_118_1.time_ and arg_118_1.time_ < var_121_9 + var_121_10 and not isNil(var_121_8) then
				local var_121_11 = (arg_118_1.time_ - var_121_9) / var_121_10

				if arg_118_1.var_.actorSpriteComps1095 then
					for iter_121_4, iter_121_5 in pairs(arg_118_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_121_5 then
							if arg_118_1.isInRecall_ then
								local var_121_12 = Mathf.Lerp(iter_121_5.color.r, arg_118_1.hightColor2.r, var_121_11)
								local var_121_13 = Mathf.Lerp(iter_121_5.color.g, arg_118_1.hightColor2.g, var_121_11)
								local var_121_14 = Mathf.Lerp(iter_121_5.color.b, arg_118_1.hightColor2.b, var_121_11)

								iter_121_5.color = Color.New(var_121_12, var_121_13, var_121_14)
							else
								local var_121_15 = Mathf.Lerp(iter_121_5.color.r, 0.5, var_121_11)

								iter_121_5.color = Color.New(var_121_15, var_121_15, var_121_15)
							end
						end
					end
				end
			end

			if arg_118_1.time_ >= var_121_9 + var_121_10 and arg_118_1.time_ < var_121_9 + var_121_10 + arg_121_0 and not isNil(var_121_8) and arg_118_1.var_.actorSpriteComps1095 then
				for iter_121_6, iter_121_7 in pairs(arg_118_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_121_7 then
						if arg_118_1.isInRecall_ then
							iter_121_7.color = arg_118_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_121_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_118_1.var_.actorSpriteComps1095 = nil
			end

			local var_121_16 = 0
			local var_121_17 = 0.55

			if var_121_16 < arg_118_1.time_ and arg_118_1.time_ <= var_121_16 + arg_121_0 then
				arg_118_1.talkMaxDuration = 0
				arg_118_1.dialogCg_.alpha = 1

				arg_118_1.dialog_:SetActive(true)
				SetActive(arg_118_1.leftNameGo_, true)

				local var_121_18 = arg_118_1:FormatText(StoryNameCfg[595].name)

				arg_118_1.leftNameTxt_.text = var_121_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_118_1.leftNameTxt_.transform)

				arg_118_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_118_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_118_1:RecordName(arg_118_1.leftNameTxt_.text)
				SetActive(arg_118_1.iconTrs_.gameObject, false)
				arg_118_1.callingController_:SetSelectedState("normal")

				local var_121_19 = arg_118_1:GetWordFromCfg(417161029)
				local var_121_20 = arg_118_1:FormatText(var_121_19.content)

				arg_118_1.text_.text = var_121_20

				LuaForUtil.ClearLinePrefixSymbol(arg_118_1.text_)

				local var_121_21 = 22
				local var_121_22 = utf8.len(var_121_20)
				local var_121_23 = var_121_21 <= 0 and var_121_17 or var_121_17 * (var_121_22 / var_121_21)

				if var_121_23 > 0 and var_121_17 < var_121_23 then
					arg_118_1.talkMaxDuration = var_121_23

					if var_121_23 + var_121_16 > arg_118_1.duration_ then
						arg_118_1.duration_ = var_121_23 + var_121_16
					end
				end

				arg_118_1.text_.text = var_121_20
				arg_118_1.typewritter.percent = 0

				arg_118_1.typewritter:SetDirty()
				arg_118_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161029", "story_v_out_417161.awb") ~= 0 then
					local var_121_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161029", "story_v_out_417161.awb") / 1000

					if var_121_24 + var_121_16 > arg_118_1.duration_ then
						arg_118_1.duration_ = var_121_24 + var_121_16
					end

					if var_121_19.prefab_name ~= "" and arg_118_1.actors_[var_121_19.prefab_name] ~= nil then
						local var_121_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_118_1.actors_[var_121_19.prefab_name].transform, "story_v_out_417161", "417161029", "story_v_out_417161.awb")

						arg_118_1:RecordAudio("417161029", var_121_25)
						arg_118_1:RecordAudio("417161029", var_121_25)
					else
						arg_118_1:AudioAction("play", "voice", "story_v_out_417161", "417161029", "story_v_out_417161.awb")
					end

					arg_118_1:RecordHistoryTalkVoice("story_v_out_417161", "417161029", "story_v_out_417161.awb")
				end

				arg_118_1:RecordContent(arg_118_1.text_.text)
			end

			local var_121_26 = math.max(var_121_17, arg_118_1.talkMaxDuration)

			if var_121_16 <= arg_118_1.time_ and arg_118_1.time_ < var_121_16 + var_121_26 then
				arg_118_1.typewritter.percent = (arg_118_1.time_ - var_121_16) / var_121_26

				arg_118_1.typewritter:SetDirty()
			end

			if arg_118_1.time_ >= var_121_16 + var_121_26 and arg_118_1.time_ < var_121_16 + var_121_26 + arg_121_0 then
				arg_118_1.typewritter.percent = 1

				arg_118_1.typewritter:SetDirty()
				arg_118_1:ShowNextGo(true)
			end
		end
	end,
	Play417161030 = function(arg_122_0, arg_122_1)
		arg_122_1.time_ = 0
		arg_122_1.frameCnt_ = 0
		arg_122_1.state_ = "playing"
		arg_122_1.curTalkId_ = 417161030
		arg_122_1.duration_ = 4.57

		SetActive(arg_122_1.tipsGo_, false)

		function arg_122_1.onSingleLineFinish_()
			arg_122_1.onSingleLineUpdate_ = nil
			arg_122_1.onSingleLineFinish_ = nil
			arg_122_1.state_ = "waiting"
		end

		function arg_122_1.playNext_(arg_124_0)
			if arg_124_0 == 1 then
				arg_122_0:Play417161031(arg_122_1)
			end
		end

		function arg_122_1.onSingleLineUpdate_(arg_125_0)
			local var_125_0 = arg_122_1.actors_["10128"]
			local var_125_1 = 0

			if var_125_1 < arg_122_1.time_ and arg_122_1.time_ <= var_125_1 + arg_125_0 and not isNil(var_125_0) and arg_122_1.var_.actorSpriteComps10128 == nil then
				arg_122_1.var_.actorSpriteComps10128 = var_125_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_125_2 = 0.2

			if var_125_1 <= arg_122_1.time_ and arg_122_1.time_ < var_125_1 + var_125_2 and not isNil(var_125_0) then
				local var_125_3 = (arg_122_1.time_ - var_125_1) / var_125_2

				if arg_122_1.var_.actorSpriteComps10128 then
					for iter_125_0, iter_125_1 in pairs(arg_122_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_125_1 then
							if arg_122_1.isInRecall_ then
								local var_125_4 = Mathf.Lerp(iter_125_1.color.r, arg_122_1.hightColor2.r, var_125_3)
								local var_125_5 = Mathf.Lerp(iter_125_1.color.g, arg_122_1.hightColor2.g, var_125_3)
								local var_125_6 = Mathf.Lerp(iter_125_1.color.b, arg_122_1.hightColor2.b, var_125_3)

								iter_125_1.color = Color.New(var_125_4, var_125_5, var_125_6)
							else
								local var_125_7 = Mathf.Lerp(iter_125_1.color.r, 0.5, var_125_3)

								iter_125_1.color = Color.New(var_125_7, var_125_7, var_125_7)
							end
						end
					end
				end
			end

			if arg_122_1.time_ >= var_125_1 + var_125_2 and arg_122_1.time_ < var_125_1 + var_125_2 + arg_125_0 and not isNil(var_125_0) and arg_122_1.var_.actorSpriteComps10128 then
				for iter_125_2, iter_125_3 in pairs(arg_122_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_125_3 then
						if arg_122_1.isInRecall_ then
							iter_125_3.color = arg_122_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_125_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_122_1.var_.actorSpriteComps10128 = nil
			end

			local var_125_8 = arg_122_1.actors_["1095"]
			local var_125_9 = 0

			if var_125_9 < arg_122_1.time_ and arg_122_1.time_ <= var_125_9 + arg_125_0 then
				local var_125_10 = var_125_8:GetComponentInChildren(typeof(CanvasGroup))

				if var_125_10 then
					arg_122_1.var_.alphaOldValue1095 = var_125_10.alpha
					arg_122_1.var_.characterEffect1095 = var_125_10
				end
			end

			local var_125_11 = 0.2

			if var_125_9 <= arg_122_1.time_ and arg_122_1.time_ < var_125_9 + var_125_11 then
				local var_125_12 = (arg_122_1.time_ - var_125_9) / var_125_11
				local var_125_13 = Mathf.Lerp(arg_122_1.var_.alphaOldValue1095, 0.6, var_125_12)

				if arg_122_1.var_.characterEffect1095 then
					arg_122_1.var_.characterEffect1095.alpha = var_125_13
				end
			end

			if arg_122_1.time_ >= var_125_9 + var_125_11 and arg_122_1.time_ < var_125_9 + var_125_11 + arg_125_0 and arg_122_1.var_.characterEffect1095 then
				arg_122_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_125_14 = arg_122_1.actors_["1095"]
			local var_125_15 = 0

			if var_125_15 < arg_122_1.time_ and arg_122_1.time_ <= var_125_15 + arg_125_0 then
				arg_122_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_125_16 = 0
			local var_125_17 = 0.6

			if var_125_16 < arg_122_1.time_ and arg_122_1.time_ <= var_125_16 + arg_125_0 then
				arg_122_1.talkMaxDuration = 0
				arg_122_1.dialogCg_.alpha = 1

				arg_122_1.dialog_:SetActive(true)
				SetActive(arg_122_1.leftNameGo_, true)

				local var_125_18 = arg_122_1:FormatText(StoryNameCfg[471].name)

				arg_122_1.leftNameTxt_.text = var_125_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_122_1.leftNameTxt_.transform)

				arg_122_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_122_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_122_1:RecordName(arg_122_1.leftNameTxt_.text)
				SetActive(arg_122_1.iconTrs_.gameObject, false)
				arg_122_1.callingController_:SetSelectedState("normal")

				local var_125_19 = arg_122_1:GetWordFromCfg(417161030)
				local var_125_20 = arg_122_1:FormatText(var_125_19.content)

				arg_122_1.text_.text = var_125_20

				LuaForUtil.ClearLinePrefixSymbol(arg_122_1.text_)

				local var_125_21 = 24
				local var_125_22 = utf8.len(var_125_20)
				local var_125_23 = var_125_21 <= 0 and var_125_17 or var_125_17 * (var_125_22 / var_125_21)

				if var_125_23 > 0 and var_125_17 < var_125_23 then
					arg_122_1.talkMaxDuration = var_125_23

					if var_125_23 + var_125_16 > arg_122_1.duration_ then
						arg_122_1.duration_ = var_125_23 + var_125_16
					end
				end

				arg_122_1.text_.text = var_125_20
				arg_122_1.typewritter.percent = 0

				arg_122_1.typewritter:SetDirty()
				arg_122_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161030", "story_v_out_417161.awb") ~= 0 then
					local var_125_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161030", "story_v_out_417161.awb") / 1000

					if var_125_24 + var_125_16 > arg_122_1.duration_ then
						arg_122_1.duration_ = var_125_24 + var_125_16
					end

					if var_125_19.prefab_name ~= "" and arg_122_1.actors_[var_125_19.prefab_name] ~= nil then
						local var_125_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_122_1.actors_[var_125_19.prefab_name].transform, "story_v_out_417161", "417161030", "story_v_out_417161.awb")

						arg_122_1:RecordAudio("417161030", var_125_25)
						arg_122_1:RecordAudio("417161030", var_125_25)
					else
						arg_122_1:AudioAction("play", "voice", "story_v_out_417161", "417161030", "story_v_out_417161.awb")
					end

					arg_122_1:RecordHistoryTalkVoice("story_v_out_417161", "417161030", "story_v_out_417161.awb")
				end

				arg_122_1:RecordContent(arg_122_1.text_.text)
			end

			local var_125_26 = math.max(var_125_17, arg_122_1.talkMaxDuration)

			if var_125_16 <= arg_122_1.time_ and arg_122_1.time_ < var_125_16 + var_125_26 then
				arg_122_1.typewritter.percent = (arg_122_1.time_ - var_125_16) / var_125_26

				arg_122_1.typewritter:SetDirty()
			end

			if arg_122_1.time_ >= var_125_16 + var_125_26 and arg_122_1.time_ < var_125_16 + var_125_26 + arg_125_0 then
				arg_122_1.typewritter.percent = 1

				arg_122_1.typewritter:SetDirty()
				arg_122_1:ShowNextGo(true)
			end
		end
	end,
	Play417161031 = function(arg_126_0, arg_126_1)
		arg_126_1.time_ = 0
		arg_126_1.frameCnt_ = 0
		arg_126_1.state_ = "playing"
		arg_126_1.curTalkId_ = 417161031
		arg_126_1.duration_ = 4.67

		SetActive(arg_126_1.tipsGo_, false)

		function arg_126_1.onSingleLineFinish_()
			arg_126_1.onSingleLineUpdate_ = nil
			arg_126_1.onSingleLineFinish_ = nil
			arg_126_1.state_ = "waiting"
		end

		function arg_126_1.playNext_(arg_128_0)
			if arg_128_0 == 1 then
				arg_126_0:Play417161032(arg_126_1)
			end
		end

		function arg_126_1.onSingleLineUpdate_(arg_129_0)
			local var_129_0 = arg_126_1.actors_["10128"]
			local var_129_1 = 0

			if var_129_1 < arg_126_1.time_ and arg_126_1.time_ <= var_129_1 + arg_129_0 and not isNil(var_129_0) and arg_126_1.var_.actorSpriteComps10128 == nil then
				arg_126_1.var_.actorSpriteComps10128 = var_129_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_129_2 = 0.2

			if var_129_1 <= arg_126_1.time_ and arg_126_1.time_ < var_129_1 + var_129_2 and not isNil(var_129_0) then
				local var_129_3 = (arg_126_1.time_ - var_129_1) / var_129_2

				if arg_126_1.var_.actorSpriteComps10128 then
					for iter_129_0, iter_129_1 in pairs(arg_126_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_129_1 then
							if arg_126_1.isInRecall_ then
								local var_129_4 = Mathf.Lerp(iter_129_1.color.r, arg_126_1.hightColor1.r, var_129_3)
								local var_129_5 = Mathf.Lerp(iter_129_1.color.g, arg_126_1.hightColor1.g, var_129_3)
								local var_129_6 = Mathf.Lerp(iter_129_1.color.b, arg_126_1.hightColor1.b, var_129_3)

								iter_129_1.color = Color.New(var_129_4, var_129_5, var_129_6)
							else
								local var_129_7 = Mathf.Lerp(iter_129_1.color.r, 1, var_129_3)

								iter_129_1.color = Color.New(var_129_7, var_129_7, var_129_7)
							end
						end
					end
				end
			end

			if arg_126_1.time_ >= var_129_1 + var_129_2 and arg_126_1.time_ < var_129_1 + var_129_2 + arg_129_0 and not isNil(var_129_0) and arg_126_1.var_.actorSpriteComps10128 then
				for iter_129_2, iter_129_3 in pairs(arg_126_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_129_3 then
						if arg_126_1.isInRecall_ then
							iter_129_3.color = arg_126_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_129_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_126_1.var_.actorSpriteComps10128 = nil
			end

			local var_129_8 = arg_126_1.actors_["1095"]
			local var_129_9 = 0

			if var_129_9 < arg_126_1.time_ and arg_126_1.time_ <= var_129_9 + arg_129_0 and not isNil(var_129_8) and arg_126_1.var_.actorSpriteComps1095 == nil then
				arg_126_1.var_.actorSpriteComps1095 = var_129_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_129_10 = 0.2

			if var_129_9 <= arg_126_1.time_ and arg_126_1.time_ < var_129_9 + var_129_10 and not isNil(var_129_8) then
				local var_129_11 = (arg_126_1.time_ - var_129_9) / var_129_10

				if arg_126_1.var_.actorSpriteComps1095 then
					for iter_129_4, iter_129_5 in pairs(arg_126_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_129_5 then
							if arg_126_1.isInRecall_ then
								local var_129_12 = Mathf.Lerp(iter_129_5.color.r, arg_126_1.hightColor2.r, var_129_11)
								local var_129_13 = Mathf.Lerp(iter_129_5.color.g, arg_126_1.hightColor2.g, var_129_11)
								local var_129_14 = Mathf.Lerp(iter_129_5.color.b, arg_126_1.hightColor2.b, var_129_11)

								iter_129_5.color = Color.New(var_129_12, var_129_13, var_129_14)
							else
								local var_129_15 = Mathf.Lerp(iter_129_5.color.r, 0.5, var_129_11)

								iter_129_5.color = Color.New(var_129_15, var_129_15, var_129_15)
							end
						end
					end
				end
			end

			if arg_126_1.time_ >= var_129_9 + var_129_10 and arg_126_1.time_ < var_129_9 + var_129_10 + arg_129_0 and not isNil(var_129_8) and arg_126_1.var_.actorSpriteComps1095 then
				for iter_129_6, iter_129_7 in pairs(arg_126_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_129_7 then
						if arg_126_1.isInRecall_ then
							iter_129_7.color = arg_126_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_129_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_126_1.var_.actorSpriteComps1095 = nil
			end

			local var_129_16 = 0
			local var_129_17 = 0.475

			if var_129_16 < arg_126_1.time_ and arg_126_1.time_ <= var_129_16 + arg_129_0 then
				arg_126_1.talkMaxDuration = 0
				arg_126_1.dialogCg_.alpha = 1

				arg_126_1.dialog_:SetActive(true)
				SetActive(arg_126_1.leftNameGo_, true)

				local var_129_18 = arg_126_1:FormatText(StoryNameCfg[595].name)

				arg_126_1.leftNameTxt_.text = var_129_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_126_1.leftNameTxt_.transform)

				arg_126_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_126_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_126_1:RecordName(arg_126_1.leftNameTxt_.text)
				SetActive(arg_126_1.iconTrs_.gameObject, false)
				arg_126_1.callingController_:SetSelectedState("normal")

				local var_129_19 = arg_126_1:GetWordFromCfg(417161031)
				local var_129_20 = arg_126_1:FormatText(var_129_19.content)

				arg_126_1.text_.text = var_129_20

				LuaForUtil.ClearLinePrefixSymbol(arg_126_1.text_)

				local var_129_21 = 19
				local var_129_22 = utf8.len(var_129_20)
				local var_129_23 = var_129_21 <= 0 and var_129_17 or var_129_17 * (var_129_22 / var_129_21)

				if var_129_23 > 0 and var_129_17 < var_129_23 then
					arg_126_1.talkMaxDuration = var_129_23

					if var_129_23 + var_129_16 > arg_126_1.duration_ then
						arg_126_1.duration_ = var_129_23 + var_129_16
					end
				end

				arg_126_1.text_.text = var_129_20
				arg_126_1.typewritter.percent = 0

				arg_126_1.typewritter:SetDirty()
				arg_126_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161031", "story_v_out_417161.awb") ~= 0 then
					local var_129_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161031", "story_v_out_417161.awb") / 1000

					if var_129_24 + var_129_16 > arg_126_1.duration_ then
						arg_126_1.duration_ = var_129_24 + var_129_16
					end

					if var_129_19.prefab_name ~= "" and arg_126_1.actors_[var_129_19.prefab_name] ~= nil then
						local var_129_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_126_1.actors_[var_129_19.prefab_name].transform, "story_v_out_417161", "417161031", "story_v_out_417161.awb")

						arg_126_1:RecordAudio("417161031", var_129_25)
						arg_126_1:RecordAudio("417161031", var_129_25)
					else
						arg_126_1:AudioAction("play", "voice", "story_v_out_417161", "417161031", "story_v_out_417161.awb")
					end

					arg_126_1:RecordHistoryTalkVoice("story_v_out_417161", "417161031", "story_v_out_417161.awb")
				end

				arg_126_1:RecordContent(arg_126_1.text_.text)
			end

			local var_129_26 = math.max(var_129_17, arg_126_1.talkMaxDuration)

			if var_129_16 <= arg_126_1.time_ and arg_126_1.time_ < var_129_16 + var_129_26 then
				arg_126_1.typewritter.percent = (arg_126_1.time_ - var_129_16) / var_129_26

				arg_126_1.typewritter:SetDirty()
			end

			if arg_126_1.time_ >= var_129_16 + var_129_26 and arg_126_1.time_ < var_129_16 + var_129_26 + arg_129_0 then
				arg_126_1.typewritter.percent = 1

				arg_126_1.typewritter:SetDirty()
				arg_126_1:ShowNextGo(true)
			end
		end
	end,
	Play417161032 = function(arg_130_0, arg_130_1)
		arg_130_1.time_ = 0
		arg_130_1.frameCnt_ = 0
		arg_130_1.state_ = "playing"
		arg_130_1.curTalkId_ = 417161032
		arg_130_1.duration_ = 8.87

		SetActive(arg_130_1.tipsGo_, false)

		function arg_130_1.onSingleLineFinish_()
			arg_130_1.onSingleLineUpdate_ = nil
			arg_130_1.onSingleLineFinish_ = nil
			arg_130_1.state_ = "waiting"
		end

		function arg_130_1.playNext_(arg_132_0)
			if arg_132_0 == 1 then
				arg_130_0:Play417161033(arg_130_1)
			end
		end

		function arg_130_1.onSingleLineUpdate_(arg_133_0)
			local var_133_0 = 0
			local var_133_1 = 1.025

			if var_133_0 < arg_130_1.time_ and arg_130_1.time_ <= var_133_0 + arg_133_0 then
				arg_130_1.talkMaxDuration = 0
				arg_130_1.dialogCg_.alpha = 1

				arg_130_1.dialog_:SetActive(true)
				SetActive(arg_130_1.leftNameGo_, true)

				local var_133_2 = arg_130_1:FormatText(StoryNameCfg[595].name)

				arg_130_1.leftNameTxt_.text = var_133_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_130_1.leftNameTxt_.transform)

				arg_130_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_130_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_130_1:RecordName(arg_130_1.leftNameTxt_.text)
				SetActive(arg_130_1.iconTrs_.gameObject, false)
				arg_130_1.callingController_:SetSelectedState("normal")

				local var_133_3 = arg_130_1:GetWordFromCfg(417161032)
				local var_133_4 = arg_130_1:FormatText(var_133_3.content)

				arg_130_1.text_.text = var_133_4

				LuaForUtil.ClearLinePrefixSymbol(arg_130_1.text_)

				local var_133_5 = 41
				local var_133_6 = utf8.len(var_133_4)
				local var_133_7 = var_133_5 <= 0 and var_133_1 or var_133_1 * (var_133_6 / var_133_5)

				if var_133_7 > 0 and var_133_1 < var_133_7 then
					arg_130_1.talkMaxDuration = var_133_7

					if var_133_7 + var_133_0 > arg_130_1.duration_ then
						arg_130_1.duration_ = var_133_7 + var_133_0
					end
				end

				arg_130_1.text_.text = var_133_4
				arg_130_1.typewritter.percent = 0

				arg_130_1.typewritter:SetDirty()
				arg_130_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161032", "story_v_out_417161.awb") ~= 0 then
					local var_133_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161032", "story_v_out_417161.awb") / 1000

					if var_133_8 + var_133_0 > arg_130_1.duration_ then
						arg_130_1.duration_ = var_133_8 + var_133_0
					end

					if var_133_3.prefab_name ~= "" and arg_130_1.actors_[var_133_3.prefab_name] ~= nil then
						local var_133_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_130_1.actors_[var_133_3.prefab_name].transform, "story_v_out_417161", "417161032", "story_v_out_417161.awb")

						arg_130_1:RecordAudio("417161032", var_133_9)
						arg_130_1:RecordAudio("417161032", var_133_9)
					else
						arg_130_1:AudioAction("play", "voice", "story_v_out_417161", "417161032", "story_v_out_417161.awb")
					end

					arg_130_1:RecordHistoryTalkVoice("story_v_out_417161", "417161032", "story_v_out_417161.awb")
				end

				arg_130_1:RecordContent(arg_130_1.text_.text)
			end

			local var_133_10 = math.max(var_133_1, arg_130_1.talkMaxDuration)

			if var_133_0 <= arg_130_1.time_ and arg_130_1.time_ < var_133_0 + var_133_10 then
				arg_130_1.typewritter.percent = (arg_130_1.time_ - var_133_0) / var_133_10

				arg_130_1.typewritter:SetDirty()
			end

			if arg_130_1.time_ >= var_133_0 + var_133_10 and arg_130_1.time_ < var_133_0 + var_133_10 + arg_133_0 then
				arg_130_1.typewritter.percent = 1

				arg_130_1.typewritter:SetDirty()
				arg_130_1:ShowNextGo(true)
			end
		end
	end,
	Play417161033 = function(arg_134_0, arg_134_1)
		arg_134_1.time_ = 0
		arg_134_1.frameCnt_ = 0
		arg_134_1.state_ = "playing"
		arg_134_1.curTalkId_ = 417161033
		arg_134_1.duration_ = 2.5

		SetActive(arg_134_1.tipsGo_, false)

		function arg_134_1.onSingleLineFinish_()
			arg_134_1.onSingleLineUpdate_ = nil
			arg_134_1.onSingleLineFinish_ = nil
			arg_134_1.state_ = "waiting"
		end

		function arg_134_1.playNext_(arg_136_0)
			if arg_136_0 == 1 then
				arg_134_0:Play417161034(arg_134_1)
			end
		end

		function arg_134_1.onSingleLineUpdate_(arg_137_0)
			local var_137_0 = arg_134_1.actors_["10128"]
			local var_137_1 = 0

			if var_137_1 < arg_134_1.time_ and arg_134_1.time_ <= var_137_1 + arg_137_0 and not isNil(var_137_0) and arg_134_1.var_.actorSpriteComps10128 == nil then
				arg_134_1.var_.actorSpriteComps10128 = var_137_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_137_2 = 0.2

			if var_137_1 <= arg_134_1.time_ and arg_134_1.time_ < var_137_1 + var_137_2 and not isNil(var_137_0) then
				local var_137_3 = (arg_134_1.time_ - var_137_1) / var_137_2

				if arg_134_1.var_.actorSpriteComps10128 then
					for iter_137_0, iter_137_1 in pairs(arg_134_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_137_1 then
							if arg_134_1.isInRecall_ then
								local var_137_4 = Mathf.Lerp(iter_137_1.color.r, arg_134_1.hightColor2.r, var_137_3)
								local var_137_5 = Mathf.Lerp(iter_137_1.color.g, arg_134_1.hightColor2.g, var_137_3)
								local var_137_6 = Mathf.Lerp(iter_137_1.color.b, arg_134_1.hightColor2.b, var_137_3)

								iter_137_1.color = Color.New(var_137_4, var_137_5, var_137_6)
							else
								local var_137_7 = Mathf.Lerp(iter_137_1.color.r, 0.5, var_137_3)

								iter_137_1.color = Color.New(var_137_7, var_137_7, var_137_7)
							end
						end
					end
				end
			end

			if arg_134_1.time_ >= var_137_1 + var_137_2 and arg_134_1.time_ < var_137_1 + var_137_2 + arg_137_0 and not isNil(var_137_0) and arg_134_1.var_.actorSpriteComps10128 then
				for iter_137_2, iter_137_3 in pairs(arg_134_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_137_3 then
						if arg_134_1.isInRecall_ then
							iter_137_3.color = arg_134_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_137_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_134_1.var_.actorSpriteComps10128 = nil
			end

			local var_137_8 = arg_134_1.actors_["1095"].transform
			local var_137_9 = 0

			if var_137_9 < arg_134_1.time_ and arg_134_1.time_ <= var_137_9 + arg_137_0 then
				arg_134_1.var_.moveOldPos1095 = var_137_8.localPosition
				var_137_8.localScale = Vector3.New(1, 1, 1)

				arg_134_1:CheckSpriteTmpPos("1095", 4)

				local var_137_10 = var_137_8.childCount

				for iter_137_4 = 0, var_137_10 - 1 do
					local var_137_11 = var_137_8:GetChild(iter_137_4)

					if var_137_11.name == "" or not string.find(var_137_11.name, "split") then
						var_137_11.gameObject:SetActive(true)
					else
						var_137_11.gameObject:SetActive(false)
					end
				end
			end

			local var_137_12 = 0.001

			if var_137_9 <= arg_134_1.time_ and arg_134_1.time_ < var_137_9 + var_137_12 then
				local var_137_13 = (arg_134_1.time_ - var_137_9) / var_137_12
				local var_137_14 = Vector3.New(390, -340, -285)

				var_137_8.localPosition = Vector3.Lerp(arg_134_1.var_.moveOldPos1095, var_137_14, var_137_13)
			end

			if arg_134_1.time_ >= var_137_9 + var_137_12 and arg_134_1.time_ < var_137_9 + var_137_12 + arg_137_0 then
				var_137_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_137_15 = arg_134_1.actors_["1095"]
			local var_137_16 = 0

			if var_137_16 < arg_134_1.time_ and arg_134_1.time_ <= var_137_16 + arg_137_0 then
				arg_134_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_137_17 = arg_134_1.actors_["1095"]
			local var_137_18 = 0

			if var_137_18 < arg_134_1.time_ and arg_134_1.time_ <= var_137_18 + arg_137_0 then
				local var_137_19 = var_137_17:GetComponentInChildren(typeof(CanvasGroup))

				if var_137_19 then
					arg_134_1.var_.alphaOldValue1095 = var_137_19.alpha
					arg_134_1.var_.characterEffect1095 = var_137_19
				end
			end

			local var_137_20 = 0.2

			if var_137_18 <= arg_134_1.time_ and arg_134_1.time_ < var_137_18 + var_137_20 then
				local var_137_21 = (arg_134_1.time_ - var_137_18) / var_137_20
				local var_137_22 = Mathf.Lerp(arg_134_1.var_.alphaOldValue1095, 0.6, var_137_21)

				if arg_134_1.var_.characterEffect1095 then
					arg_134_1.var_.characterEffect1095.alpha = var_137_22
				end
			end

			if arg_134_1.time_ >= var_137_18 + var_137_20 and arg_134_1.time_ < var_137_18 + var_137_20 + arg_137_0 and arg_134_1.var_.characterEffect1095 then
				arg_134_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_137_23 = 0
			local var_137_24 = 0.25

			if var_137_23 < arg_134_1.time_ and arg_134_1.time_ <= var_137_23 + arg_137_0 then
				arg_134_1.talkMaxDuration = 0
				arg_134_1.dialogCg_.alpha = 1

				arg_134_1.dialog_:SetActive(true)
				SetActive(arg_134_1.leftNameGo_, true)

				local var_137_25 = arg_134_1:FormatText(StoryNameCfg[471].name)

				arg_134_1.leftNameTxt_.text = var_137_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_134_1.leftNameTxt_.transform)

				arg_134_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_134_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_134_1:RecordName(arg_134_1.leftNameTxt_.text)
				SetActive(arg_134_1.iconTrs_.gameObject, false)
				arg_134_1.callingController_:SetSelectedState("normal")

				local var_137_26 = arg_134_1:GetWordFromCfg(417161033)
				local var_137_27 = arg_134_1:FormatText(var_137_26.content)

				arg_134_1.text_.text = var_137_27

				LuaForUtil.ClearLinePrefixSymbol(arg_134_1.text_)

				local var_137_28 = 10
				local var_137_29 = utf8.len(var_137_27)
				local var_137_30 = var_137_28 <= 0 and var_137_24 or var_137_24 * (var_137_29 / var_137_28)

				if var_137_30 > 0 and var_137_24 < var_137_30 then
					arg_134_1.talkMaxDuration = var_137_30

					if var_137_30 + var_137_23 > arg_134_1.duration_ then
						arg_134_1.duration_ = var_137_30 + var_137_23
					end
				end

				arg_134_1.text_.text = var_137_27
				arg_134_1.typewritter.percent = 0

				arg_134_1.typewritter:SetDirty()
				arg_134_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161033", "story_v_out_417161.awb") ~= 0 then
					local var_137_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161033", "story_v_out_417161.awb") / 1000

					if var_137_31 + var_137_23 > arg_134_1.duration_ then
						arg_134_1.duration_ = var_137_31 + var_137_23
					end

					if var_137_26.prefab_name ~= "" and arg_134_1.actors_[var_137_26.prefab_name] ~= nil then
						local var_137_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_134_1.actors_[var_137_26.prefab_name].transform, "story_v_out_417161", "417161033", "story_v_out_417161.awb")

						arg_134_1:RecordAudio("417161033", var_137_32)
						arg_134_1:RecordAudio("417161033", var_137_32)
					else
						arg_134_1:AudioAction("play", "voice", "story_v_out_417161", "417161033", "story_v_out_417161.awb")
					end

					arg_134_1:RecordHistoryTalkVoice("story_v_out_417161", "417161033", "story_v_out_417161.awb")
				end

				arg_134_1:RecordContent(arg_134_1.text_.text)
			end

			local var_137_33 = math.max(var_137_24, arg_134_1.talkMaxDuration)

			if var_137_23 <= arg_134_1.time_ and arg_134_1.time_ < var_137_23 + var_137_33 then
				arg_134_1.typewritter.percent = (arg_134_1.time_ - var_137_23) / var_137_33

				arg_134_1.typewritter:SetDirty()
			end

			if arg_134_1.time_ >= var_137_23 + var_137_33 and arg_134_1.time_ < var_137_23 + var_137_33 + arg_137_0 then
				arg_134_1.typewritter.percent = 1

				arg_134_1.typewritter:SetDirty()
				arg_134_1:ShowNextGo(true)
			end
		end
	end,
	Play417161034 = function(arg_138_0, arg_138_1)
		arg_138_1.time_ = 0
		arg_138_1.frameCnt_ = 0
		arg_138_1.state_ = "playing"
		arg_138_1.curTalkId_ = 417161034
		arg_138_1.duration_ = 8.23

		SetActive(arg_138_1.tipsGo_, false)

		function arg_138_1.onSingleLineFinish_()
			arg_138_1.onSingleLineUpdate_ = nil
			arg_138_1.onSingleLineFinish_ = nil
			arg_138_1.state_ = "waiting"
		end

		function arg_138_1.playNext_(arg_140_0)
			if arg_140_0 == 1 then
				arg_138_0:Play417161035(arg_138_1)
			end
		end

		function arg_138_1.onSingleLineUpdate_(arg_141_0)
			local var_141_0 = arg_138_1.actors_["10128"]
			local var_141_1 = 0

			if var_141_1 < arg_138_1.time_ and arg_138_1.time_ <= var_141_1 + arg_141_0 and not isNil(var_141_0) and arg_138_1.var_.actorSpriteComps10128 == nil then
				arg_138_1.var_.actorSpriteComps10128 = var_141_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_141_2 = 0.2

			if var_141_1 <= arg_138_1.time_ and arg_138_1.time_ < var_141_1 + var_141_2 and not isNil(var_141_0) then
				local var_141_3 = (arg_138_1.time_ - var_141_1) / var_141_2

				if arg_138_1.var_.actorSpriteComps10128 then
					for iter_141_0, iter_141_1 in pairs(arg_138_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_141_1 then
							if arg_138_1.isInRecall_ then
								local var_141_4 = Mathf.Lerp(iter_141_1.color.r, arg_138_1.hightColor1.r, var_141_3)
								local var_141_5 = Mathf.Lerp(iter_141_1.color.g, arg_138_1.hightColor1.g, var_141_3)
								local var_141_6 = Mathf.Lerp(iter_141_1.color.b, arg_138_1.hightColor1.b, var_141_3)

								iter_141_1.color = Color.New(var_141_4, var_141_5, var_141_6)
							else
								local var_141_7 = Mathf.Lerp(iter_141_1.color.r, 1, var_141_3)

								iter_141_1.color = Color.New(var_141_7, var_141_7, var_141_7)
							end
						end
					end
				end
			end

			if arg_138_1.time_ >= var_141_1 + var_141_2 and arg_138_1.time_ < var_141_1 + var_141_2 + arg_141_0 and not isNil(var_141_0) and arg_138_1.var_.actorSpriteComps10128 then
				for iter_141_2, iter_141_3 in pairs(arg_138_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_141_3 then
						if arg_138_1.isInRecall_ then
							iter_141_3.color = arg_138_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_141_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_138_1.var_.actorSpriteComps10128 = nil
			end

			local var_141_8 = arg_138_1.actors_["1095"]
			local var_141_9 = 0

			if var_141_9 < arg_138_1.time_ and arg_138_1.time_ <= var_141_9 + arg_141_0 and not isNil(var_141_8) and arg_138_1.var_.actorSpriteComps1095 == nil then
				arg_138_1.var_.actorSpriteComps1095 = var_141_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_141_10 = 0.2

			if var_141_9 <= arg_138_1.time_ and arg_138_1.time_ < var_141_9 + var_141_10 and not isNil(var_141_8) then
				local var_141_11 = (arg_138_1.time_ - var_141_9) / var_141_10

				if arg_138_1.var_.actorSpriteComps1095 then
					for iter_141_4, iter_141_5 in pairs(arg_138_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_141_5 then
							if arg_138_1.isInRecall_ then
								local var_141_12 = Mathf.Lerp(iter_141_5.color.r, arg_138_1.hightColor2.r, var_141_11)
								local var_141_13 = Mathf.Lerp(iter_141_5.color.g, arg_138_1.hightColor2.g, var_141_11)
								local var_141_14 = Mathf.Lerp(iter_141_5.color.b, arg_138_1.hightColor2.b, var_141_11)

								iter_141_5.color = Color.New(var_141_12, var_141_13, var_141_14)
							else
								local var_141_15 = Mathf.Lerp(iter_141_5.color.r, 0.5, var_141_11)

								iter_141_5.color = Color.New(var_141_15, var_141_15, var_141_15)
							end
						end
					end
				end
			end

			if arg_138_1.time_ >= var_141_9 + var_141_10 and arg_138_1.time_ < var_141_9 + var_141_10 + arg_141_0 and not isNil(var_141_8) and arg_138_1.var_.actorSpriteComps1095 then
				for iter_141_6, iter_141_7 in pairs(arg_138_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_141_7 then
						if arg_138_1.isInRecall_ then
							iter_141_7.color = arg_138_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_141_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_138_1.var_.actorSpriteComps1095 = nil
			end

			local var_141_16 = arg_138_1.actors_["10128"].transform
			local var_141_17 = 0

			if var_141_17 < arg_138_1.time_ and arg_138_1.time_ <= var_141_17 + arg_141_0 then
				arg_138_1.var_.moveOldPos10128 = var_141_16.localPosition
				var_141_16.localScale = Vector3.New(1, 1, 1)

				arg_138_1:CheckSpriteTmpPos("10128", 2)

				local var_141_18 = var_141_16.childCount

				for iter_141_8 = 0, var_141_18 - 1 do
					local var_141_19 = var_141_16:GetChild(iter_141_8)

					if var_141_19.name == "split_6" or not string.find(var_141_19.name, "split") then
						var_141_19.gameObject:SetActive(true)
					else
						var_141_19.gameObject:SetActive(false)
					end
				end
			end

			local var_141_20 = 0.001

			if var_141_17 <= arg_138_1.time_ and arg_138_1.time_ < var_141_17 + var_141_20 then
				local var_141_21 = (arg_138_1.time_ - var_141_17) / var_141_20
				local var_141_22 = Vector3.New(-390, -347, -300)

				var_141_16.localPosition = Vector3.Lerp(arg_138_1.var_.moveOldPos10128, var_141_22, var_141_21)
			end

			if arg_138_1.time_ >= var_141_17 + var_141_20 and arg_138_1.time_ < var_141_17 + var_141_20 + arg_141_0 then
				var_141_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_141_23 = 0
			local var_141_24 = 1.025

			if var_141_23 < arg_138_1.time_ and arg_138_1.time_ <= var_141_23 + arg_141_0 then
				arg_138_1.talkMaxDuration = 0
				arg_138_1.dialogCg_.alpha = 1

				arg_138_1.dialog_:SetActive(true)
				SetActive(arg_138_1.leftNameGo_, true)

				local var_141_25 = arg_138_1:FormatText(StoryNameCfg[595].name)

				arg_138_1.leftNameTxt_.text = var_141_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_138_1.leftNameTxt_.transform)

				arg_138_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_138_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_138_1:RecordName(arg_138_1.leftNameTxt_.text)
				SetActive(arg_138_1.iconTrs_.gameObject, false)
				arg_138_1.callingController_:SetSelectedState("normal")

				local var_141_26 = arg_138_1:GetWordFromCfg(417161034)
				local var_141_27 = arg_138_1:FormatText(var_141_26.content)

				arg_138_1.text_.text = var_141_27

				LuaForUtil.ClearLinePrefixSymbol(arg_138_1.text_)

				local var_141_28 = 41
				local var_141_29 = utf8.len(var_141_27)
				local var_141_30 = var_141_28 <= 0 and var_141_24 or var_141_24 * (var_141_29 / var_141_28)

				if var_141_30 > 0 and var_141_24 < var_141_30 then
					arg_138_1.talkMaxDuration = var_141_30

					if var_141_30 + var_141_23 > arg_138_1.duration_ then
						arg_138_1.duration_ = var_141_30 + var_141_23
					end
				end

				arg_138_1.text_.text = var_141_27
				arg_138_1.typewritter.percent = 0

				arg_138_1.typewritter:SetDirty()
				arg_138_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161034", "story_v_out_417161.awb") ~= 0 then
					local var_141_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161034", "story_v_out_417161.awb") / 1000

					if var_141_31 + var_141_23 > arg_138_1.duration_ then
						arg_138_1.duration_ = var_141_31 + var_141_23
					end

					if var_141_26.prefab_name ~= "" and arg_138_1.actors_[var_141_26.prefab_name] ~= nil then
						local var_141_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_138_1.actors_[var_141_26.prefab_name].transform, "story_v_out_417161", "417161034", "story_v_out_417161.awb")

						arg_138_1:RecordAudio("417161034", var_141_32)
						arg_138_1:RecordAudio("417161034", var_141_32)
					else
						arg_138_1:AudioAction("play", "voice", "story_v_out_417161", "417161034", "story_v_out_417161.awb")
					end

					arg_138_1:RecordHistoryTalkVoice("story_v_out_417161", "417161034", "story_v_out_417161.awb")
				end

				arg_138_1:RecordContent(arg_138_1.text_.text)
			end

			local var_141_33 = math.max(var_141_24, arg_138_1.talkMaxDuration)

			if var_141_23 <= arg_138_1.time_ and arg_138_1.time_ < var_141_23 + var_141_33 then
				arg_138_1.typewritter.percent = (arg_138_1.time_ - var_141_23) / var_141_33

				arg_138_1.typewritter:SetDirty()
			end

			if arg_138_1.time_ >= var_141_23 + var_141_33 and arg_138_1.time_ < var_141_23 + var_141_33 + arg_141_0 then
				arg_138_1.typewritter.percent = 1

				arg_138_1.typewritter:SetDirty()
				arg_138_1:ShowNextGo(true)
			end
		end
	end,
	Play417161035 = function(arg_142_0, arg_142_1)
		arg_142_1.time_ = 0
		arg_142_1.frameCnt_ = 0
		arg_142_1.state_ = "playing"
		arg_142_1.curTalkId_ = 417161035
		arg_142_1.duration_ = 6.73

		SetActive(arg_142_1.tipsGo_, false)

		function arg_142_1.onSingleLineFinish_()
			arg_142_1.onSingleLineUpdate_ = nil
			arg_142_1.onSingleLineFinish_ = nil
			arg_142_1.state_ = "waiting"
		end

		function arg_142_1.playNext_(arg_144_0)
			if arg_144_0 == 1 then
				arg_142_0:Play417161036(arg_142_1)
			end
		end

		function arg_142_1.onSingleLineUpdate_(arg_145_0)
			local var_145_0 = 0
			local var_145_1 = 1

			if var_145_0 < arg_142_1.time_ and arg_142_1.time_ <= var_145_0 + arg_145_0 then
				arg_142_1.talkMaxDuration = 0
				arg_142_1.dialogCg_.alpha = 1

				arg_142_1.dialog_:SetActive(true)
				SetActive(arg_142_1.leftNameGo_, true)

				local var_145_2 = arg_142_1:FormatText(StoryNameCfg[595].name)

				arg_142_1.leftNameTxt_.text = var_145_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_142_1.leftNameTxt_.transform)

				arg_142_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_142_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_142_1:RecordName(arg_142_1.leftNameTxt_.text)
				SetActive(arg_142_1.iconTrs_.gameObject, false)
				arg_142_1.callingController_:SetSelectedState("normal")

				local var_145_3 = arg_142_1:GetWordFromCfg(417161035)
				local var_145_4 = arg_142_1:FormatText(var_145_3.content)

				arg_142_1.text_.text = var_145_4

				LuaForUtil.ClearLinePrefixSymbol(arg_142_1.text_)

				local var_145_5 = 40
				local var_145_6 = utf8.len(var_145_4)
				local var_145_7 = var_145_5 <= 0 and var_145_1 or var_145_1 * (var_145_6 / var_145_5)

				if var_145_7 > 0 and var_145_1 < var_145_7 then
					arg_142_1.talkMaxDuration = var_145_7

					if var_145_7 + var_145_0 > arg_142_1.duration_ then
						arg_142_1.duration_ = var_145_7 + var_145_0
					end
				end

				arg_142_1.text_.text = var_145_4
				arg_142_1.typewritter.percent = 0

				arg_142_1.typewritter:SetDirty()
				arg_142_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161035", "story_v_out_417161.awb") ~= 0 then
					local var_145_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161035", "story_v_out_417161.awb") / 1000

					if var_145_8 + var_145_0 > arg_142_1.duration_ then
						arg_142_1.duration_ = var_145_8 + var_145_0
					end

					if var_145_3.prefab_name ~= "" and arg_142_1.actors_[var_145_3.prefab_name] ~= nil then
						local var_145_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_142_1.actors_[var_145_3.prefab_name].transform, "story_v_out_417161", "417161035", "story_v_out_417161.awb")

						arg_142_1:RecordAudio("417161035", var_145_9)
						arg_142_1:RecordAudio("417161035", var_145_9)
					else
						arg_142_1:AudioAction("play", "voice", "story_v_out_417161", "417161035", "story_v_out_417161.awb")
					end

					arg_142_1:RecordHistoryTalkVoice("story_v_out_417161", "417161035", "story_v_out_417161.awb")
				end

				arg_142_1:RecordContent(arg_142_1.text_.text)
			end

			local var_145_10 = math.max(var_145_1, arg_142_1.talkMaxDuration)

			if var_145_0 <= arg_142_1.time_ and arg_142_1.time_ < var_145_0 + var_145_10 then
				arg_142_1.typewritter.percent = (arg_142_1.time_ - var_145_0) / var_145_10

				arg_142_1.typewritter:SetDirty()
			end

			if arg_142_1.time_ >= var_145_0 + var_145_10 and arg_142_1.time_ < var_145_0 + var_145_10 + arg_145_0 then
				arg_142_1.typewritter.percent = 1

				arg_142_1.typewritter:SetDirty()
				arg_142_1:ShowNextGo(true)
			end
		end
	end,
	Play417161036 = function(arg_146_0, arg_146_1)
		arg_146_1.time_ = 0
		arg_146_1.frameCnt_ = 0
		arg_146_1.state_ = "playing"
		arg_146_1.curTalkId_ = 417161036
		arg_146_1.duration_ = 3.63

		SetActive(arg_146_1.tipsGo_, false)

		function arg_146_1.onSingleLineFinish_()
			arg_146_1.onSingleLineUpdate_ = nil
			arg_146_1.onSingleLineFinish_ = nil
			arg_146_1.state_ = "waiting"
		end

		function arg_146_1.playNext_(arg_148_0)
			if arg_148_0 == 1 then
				arg_146_0:Play417161037(arg_146_1)
			end
		end

		function arg_146_1.onSingleLineUpdate_(arg_149_0)
			local var_149_0 = 0
			local var_149_1 = 0.525

			if var_149_0 < arg_146_1.time_ and arg_146_1.time_ <= var_149_0 + arg_149_0 then
				arg_146_1.talkMaxDuration = 0
				arg_146_1.dialogCg_.alpha = 1

				arg_146_1.dialog_:SetActive(true)
				SetActive(arg_146_1.leftNameGo_, true)

				local var_149_2 = arg_146_1:FormatText(StoryNameCfg[595].name)

				arg_146_1.leftNameTxt_.text = var_149_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_146_1.leftNameTxt_.transform)

				arg_146_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_146_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_146_1:RecordName(arg_146_1.leftNameTxt_.text)
				SetActive(arg_146_1.iconTrs_.gameObject, false)
				arg_146_1.callingController_:SetSelectedState("normal")

				local var_149_3 = arg_146_1:GetWordFromCfg(417161036)
				local var_149_4 = arg_146_1:FormatText(var_149_3.content)

				arg_146_1.text_.text = var_149_4

				LuaForUtil.ClearLinePrefixSymbol(arg_146_1.text_)

				local var_149_5 = 21
				local var_149_6 = utf8.len(var_149_4)
				local var_149_7 = var_149_5 <= 0 and var_149_1 or var_149_1 * (var_149_6 / var_149_5)

				if var_149_7 > 0 and var_149_1 < var_149_7 then
					arg_146_1.talkMaxDuration = var_149_7

					if var_149_7 + var_149_0 > arg_146_1.duration_ then
						arg_146_1.duration_ = var_149_7 + var_149_0
					end
				end

				arg_146_1.text_.text = var_149_4
				arg_146_1.typewritter.percent = 0

				arg_146_1.typewritter:SetDirty()
				arg_146_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161036", "story_v_out_417161.awb") ~= 0 then
					local var_149_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161036", "story_v_out_417161.awb") / 1000

					if var_149_8 + var_149_0 > arg_146_1.duration_ then
						arg_146_1.duration_ = var_149_8 + var_149_0
					end

					if var_149_3.prefab_name ~= "" and arg_146_1.actors_[var_149_3.prefab_name] ~= nil then
						local var_149_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_146_1.actors_[var_149_3.prefab_name].transform, "story_v_out_417161", "417161036", "story_v_out_417161.awb")

						arg_146_1:RecordAudio("417161036", var_149_9)
						arg_146_1:RecordAudio("417161036", var_149_9)
					else
						arg_146_1:AudioAction("play", "voice", "story_v_out_417161", "417161036", "story_v_out_417161.awb")
					end

					arg_146_1:RecordHistoryTalkVoice("story_v_out_417161", "417161036", "story_v_out_417161.awb")
				end

				arg_146_1:RecordContent(arg_146_1.text_.text)
			end

			local var_149_10 = math.max(var_149_1, arg_146_1.talkMaxDuration)

			if var_149_0 <= arg_146_1.time_ and arg_146_1.time_ < var_149_0 + var_149_10 then
				arg_146_1.typewritter.percent = (arg_146_1.time_ - var_149_0) / var_149_10

				arg_146_1.typewritter:SetDirty()
			end

			if arg_146_1.time_ >= var_149_0 + var_149_10 and arg_146_1.time_ < var_149_0 + var_149_10 + arg_149_0 then
				arg_146_1.typewritter.percent = 1

				arg_146_1.typewritter:SetDirty()
				arg_146_1:ShowNextGo(true)
			end
		end
	end,
	Play417161037 = function(arg_150_0, arg_150_1)
		arg_150_1.time_ = 0
		arg_150_1.frameCnt_ = 0
		arg_150_1.state_ = "playing"
		arg_150_1.curTalkId_ = 417161037
		arg_150_1.duration_ = 2.1

		SetActive(arg_150_1.tipsGo_, false)

		function arg_150_1.onSingleLineFinish_()
			arg_150_1.onSingleLineUpdate_ = nil
			arg_150_1.onSingleLineFinish_ = nil
			arg_150_1.state_ = "waiting"
		end

		function arg_150_1.playNext_(arg_152_0)
			if arg_152_0 == 1 then
				arg_150_0:Play417161038(arg_150_1)
			end
		end

		function arg_150_1.onSingleLineUpdate_(arg_153_0)
			local var_153_0 = arg_150_1.actors_["10128"]
			local var_153_1 = 0

			if var_153_1 < arg_150_1.time_ and arg_150_1.time_ <= var_153_1 + arg_153_0 and not isNil(var_153_0) and arg_150_1.var_.actorSpriteComps10128 == nil then
				arg_150_1.var_.actorSpriteComps10128 = var_153_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_153_2 = 0.2

			if var_153_1 <= arg_150_1.time_ and arg_150_1.time_ < var_153_1 + var_153_2 and not isNil(var_153_0) then
				local var_153_3 = (arg_150_1.time_ - var_153_1) / var_153_2

				if arg_150_1.var_.actorSpriteComps10128 then
					for iter_153_0, iter_153_1 in pairs(arg_150_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_153_1 then
							if arg_150_1.isInRecall_ then
								local var_153_4 = Mathf.Lerp(iter_153_1.color.r, arg_150_1.hightColor2.r, var_153_3)
								local var_153_5 = Mathf.Lerp(iter_153_1.color.g, arg_150_1.hightColor2.g, var_153_3)
								local var_153_6 = Mathf.Lerp(iter_153_1.color.b, arg_150_1.hightColor2.b, var_153_3)

								iter_153_1.color = Color.New(var_153_4, var_153_5, var_153_6)
							else
								local var_153_7 = Mathf.Lerp(iter_153_1.color.r, 0.5, var_153_3)

								iter_153_1.color = Color.New(var_153_7, var_153_7, var_153_7)
							end
						end
					end
				end
			end

			if arg_150_1.time_ >= var_153_1 + var_153_2 and arg_150_1.time_ < var_153_1 + var_153_2 + arg_153_0 and not isNil(var_153_0) and arg_150_1.var_.actorSpriteComps10128 then
				for iter_153_2, iter_153_3 in pairs(arg_150_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_153_3 then
						if arg_150_1.isInRecall_ then
							iter_153_3.color = arg_150_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_153_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_150_1.var_.actorSpriteComps10128 = nil
			end

			local var_153_8 = arg_150_1.actors_["1095"].transform
			local var_153_9 = 0

			if var_153_9 < arg_150_1.time_ and arg_150_1.time_ <= var_153_9 + arg_153_0 then
				arg_150_1.var_.moveOldPos1095 = var_153_8.localPosition
				var_153_8.localScale = Vector3.New(1, 1, 1)

				arg_150_1:CheckSpriteTmpPos("1095", 4)

				local var_153_10 = var_153_8.childCount

				for iter_153_4 = 0, var_153_10 - 1 do
					local var_153_11 = var_153_8:GetChild(iter_153_4)

					if var_153_11.name == "split_3" or not string.find(var_153_11.name, "split") then
						var_153_11.gameObject:SetActive(true)
					else
						var_153_11.gameObject:SetActive(false)
					end
				end
			end

			local var_153_12 = 0.001

			if var_153_9 <= arg_150_1.time_ and arg_150_1.time_ < var_153_9 + var_153_12 then
				local var_153_13 = (arg_150_1.time_ - var_153_9) / var_153_12
				local var_153_14 = Vector3.New(390, -340, -285)

				var_153_8.localPosition = Vector3.Lerp(arg_150_1.var_.moveOldPos1095, var_153_14, var_153_13)
			end

			if arg_150_1.time_ >= var_153_9 + var_153_12 and arg_150_1.time_ < var_153_9 + var_153_12 + arg_153_0 then
				var_153_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_153_15 = arg_150_1.actors_["1095"]
			local var_153_16 = 0

			if var_153_16 < arg_150_1.time_ and arg_150_1.time_ <= var_153_16 + arg_153_0 then
				local var_153_17 = var_153_15:GetComponentInChildren(typeof(CanvasGroup))

				if var_153_17 then
					arg_150_1.var_.alphaOldValue1095 = var_153_17.alpha
					arg_150_1.var_.characterEffect1095 = var_153_17
				end
			end

			local var_153_18 = 0.2

			if var_153_16 <= arg_150_1.time_ and arg_150_1.time_ < var_153_16 + var_153_18 then
				local var_153_19 = (arg_150_1.time_ - var_153_16) / var_153_18
				local var_153_20 = Mathf.Lerp(arg_150_1.var_.alphaOldValue1095, 0.6, var_153_19)

				if arg_150_1.var_.characterEffect1095 then
					arg_150_1.var_.characterEffect1095.alpha = var_153_20
				end
			end

			if arg_150_1.time_ >= var_153_16 + var_153_18 and arg_150_1.time_ < var_153_16 + var_153_18 + arg_153_0 and arg_150_1.var_.characterEffect1095 then
				arg_150_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_153_21 = arg_150_1.actors_["1095"]
			local var_153_22 = 0

			if var_153_22 < arg_150_1.time_ and arg_150_1.time_ <= var_153_22 + arg_153_0 then
				arg_150_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_153_23 = 0
			local var_153_24 = 0.225

			if var_153_23 < arg_150_1.time_ and arg_150_1.time_ <= var_153_23 + arg_153_0 then
				arg_150_1.talkMaxDuration = 0
				arg_150_1.dialogCg_.alpha = 1

				arg_150_1.dialog_:SetActive(true)
				SetActive(arg_150_1.leftNameGo_, true)

				local var_153_25 = arg_150_1:FormatText(StoryNameCfg[471].name)

				arg_150_1.leftNameTxt_.text = var_153_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_150_1.leftNameTxt_.transform)

				arg_150_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_150_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_150_1:RecordName(arg_150_1.leftNameTxt_.text)
				SetActive(arg_150_1.iconTrs_.gameObject, false)
				arg_150_1.callingController_:SetSelectedState("normal")

				local var_153_26 = arg_150_1:GetWordFromCfg(417161037)
				local var_153_27 = arg_150_1:FormatText(var_153_26.content)

				arg_150_1.text_.text = var_153_27

				LuaForUtil.ClearLinePrefixSymbol(arg_150_1.text_)

				local var_153_28 = 9
				local var_153_29 = utf8.len(var_153_27)
				local var_153_30 = var_153_28 <= 0 and var_153_24 or var_153_24 * (var_153_29 / var_153_28)

				if var_153_30 > 0 and var_153_24 < var_153_30 then
					arg_150_1.talkMaxDuration = var_153_30

					if var_153_30 + var_153_23 > arg_150_1.duration_ then
						arg_150_1.duration_ = var_153_30 + var_153_23
					end
				end

				arg_150_1.text_.text = var_153_27
				arg_150_1.typewritter.percent = 0

				arg_150_1.typewritter:SetDirty()
				arg_150_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161037", "story_v_out_417161.awb") ~= 0 then
					local var_153_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161037", "story_v_out_417161.awb") / 1000

					if var_153_31 + var_153_23 > arg_150_1.duration_ then
						arg_150_1.duration_ = var_153_31 + var_153_23
					end

					if var_153_26.prefab_name ~= "" and arg_150_1.actors_[var_153_26.prefab_name] ~= nil then
						local var_153_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_150_1.actors_[var_153_26.prefab_name].transform, "story_v_out_417161", "417161037", "story_v_out_417161.awb")

						arg_150_1:RecordAudio("417161037", var_153_32)
						arg_150_1:RecordAudio("417161037", var_153_32)
					else
						arg_150_1:AudioAction("play", "voice", "story_v_out_417161", "417161037", "story_v_out_417161.awb")
					end

					arg_150_1:RecordHistoryTalkVoice("story_v_out_417161", "417161037", "story_v_out_417161.awb")
				end

				arg_150_1:RecordContent(arg_150_1.text_.text)
			end

			local var_153_33 = math.max(var_153_24, arg_150_1.talkMaxDuration)

			if var_153_23 <= arg_150_1.time_ and arg_150_1.time_ < var_153_23 + var_153_33 then
				arg_150_1.typewritter.percent = (arg_150_1.time_ - var_153_23) / var_153_33

				arg_150_1.typewritter:SetDirty()
			end

			if arg_150_1.time_ >= var_153_23 + var_153_33 and arg_150_1.time_ < var_153_23 + var_153_33 + arg_153_0 then
				arg_150_1.typewritter.percent = 1

				arg_150_1.typewritter:SetDirty()
				arg_150_1:ShowNextGo(true)
			end
		end
	end,
	Play417161038 = function(arg_154_0, arg_154_1)
		arg_154_1.time_ = 0
		arg_154_1.frameCnt_ = 0
		arg_154_1.state_ = "playing"
		arg_154_1.curTalkId_ = 417161038
		arg_154_1.duration_ = 10.57

		SetActive(arg_154_1.tipsGo_, false)

		function arg_154_1.onSingleLineFinish_()
			arg_154_1.onSingleLineUpdate_ = nil
			arg_154_1.onSingleLineFinish_ = nil
			arg_154_1.state_ = "waiting"
		end

		function arg_154_1.playNext_(arg_156_0)
			if arg_156_0 == 1 then
				arg_154_0:Play417161039(arg_154_1)
			end
		end

		function arg_154_1.onSingleLineUpdate_(arg_157_0)
			local var_157_0 = arg_154_1.actors_["10128"]
			local var_157_1 = 0

			if var_157_1 < arg_154_1.time_ and arg_154_1.time_ <= var_157_1 + arg_157_0 and not isNil(var_157_0) and arg_154_1.var_.actorSpriteComps10128 == nil then
				arg_154_1.var_.actorSpriteComps10128 = var_157_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_157_2 = 0.2

			if var_157_1 <= arg_154_1.time_ and arg_154_1.time_ < var_157_1 + var_157_2 and not isNil(var_157_0) then
				local var_157_3 = (arg_154_1.time_ - var_157_1) / var_157_2

				if arg_154_1.var_.actorSpriteComps10128 then
					for iter_157_0, iter_157_1 in pairs(arg_154_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_157_1 then
							if arg_154_1.isInRecall_ then
								local var_157_4 = Mathf.Lerp(iter_157_1.color.r, arg_154_1.hightColor1.r, var_157_3)
								local var_157_5 = Mathf.Lerp(iter_157_1.color.g, arg_154_1.hightColor1.g, var_157_3)
								local var_157_6 = Mathf.Lerp(iter_157_1.color.b, arg_154_1.hightColor1.b, var_157_3)

								iter_157_1.color = Color.New(var_157_4, var_157_5, var_157_6)
							else
								local var_157_7 = Mathf.Lerp(iter_157_1.color.r, 1, var_157_3)

								iter_157_1.color = Color.New(var_157_7, var_157_7, var_157_7)
							end
						end
					end
				end
			end

			if arg_154_1.time_ >= var_157_1 + var_157_2 and arg_154_1.time_ < var_157_1 + var_157_2 + arg_157_0 and not isNil(var_157_0) and arg_154_1.var_.actorSpriteComps10128 then
				for iter_157_2, iter_157_3 in pairs(arg_154_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_157_3 then
						if arg_154_1.isInRecall_ then
							iter_157_3.color = arg_154_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_157_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_154_1.var_.actorSpriteComps10128 = nil
			end

			local var_157_8 = arg_154_1.actors_["1095"]
			local var_157_9 = 0

			if var_157_9 < arg_154_1.time_ and arg_154_1.time_ <= var_157_9 + arg_157_0 and not isNil(var_157_8) and arg_154_1.var_.actorSpriteComps1095 == nil then
				arg_154_1.var_.actorSpriteComps1095 = var_157_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_157_10 = 0.2

			if var_157_9 <= arg_154_1.time_ and arg_154_1.time_ < var_157_9 + var_157_10 and not isNil(var_157_8) then
				local var_157_11 = (arg_154_1.time_ - var_157_9) / var_157_10

				if arg_154_1.var_.actorSpriteComps1095 then
					for iter_157_4, iter_157_5 in pairs(arg_154_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_157_5 then
							if arg_154_1.isInRecall_ then
								local var_157_12 = Mathf.Lerp(iter_157_5.color.r, arg_154_1.hightColor2.r, var_157_11)
								local var_157_13 = Mathf.Lerp(iter_157_5.color.g, arg_154_1.hightColor2.g, var_157_11)
								local var_157_14 = Mathf.Lerp(iter_157_5.color.b, arg_154_1.hightColor2.b, var_157_11)

								iter_157_5.color = Color.New(var_157_12, var_157_13, var_157_14)
							else
								local var_157_15 = Mathf.Lerp(iter_157_5.color.r, 0.5, var_157_11)

								iter_157_5.color = Color.New(var_157_15, var_157_15, var_157_15)
							end
						end
					end
				end
			end

			if arg_154_1.time_ >= var_157_9 + var_157_10 and arg_154_1.time_ < var_157_9 + var_157_10 + arg_157_0 and not isNil(var_157_8) and arg_154_1.var_.actorSpriteComps1095 then
				for iter_157_6, iter_157_7 in pairs(arg_154_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_157_7 then
						if arg_154_1.isInRecall_ then
							iter_157_7.color = arg_154_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_157_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_154_1.var_.actorSpriteComps1095 = nil
			end

			local var_157_16 = 0
			local var_157_17 = 0.95

			if var_157_16 < arg_154_1.time_ and arg_154_1.time_ <= var_157_16 + arg_157_0 then
				arg_154_1.talkMaxDuration = 0
				arg_154_1.dialogCg_.alpha = 1

				arg_154_1.dialog_:SetActive(true)
				SetActive(arg_154_1.leftNameGo_, true)

				local var_157_18 = arg_154_1:FormatText(StoryNameCfg[595].name)

				arg_154_1.leftNameTxt_.text = var_157_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_154_1.leftNameTxt_.transform)

				arg_154_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_154_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_154_1:RecordName(arg_154_1.leftNameTxt_.text)
				SetActive(arg_154_1.iconTrs_.gameObject, false)
				arg_154_1.callingController_:SetSelectedState("normal")

				local var_157_19 = arg_154_1:GetWordFromCfg(417161038)
				local var_157_20 = arg_154_1:FormatText(var_157_19.content)

				arg_154_1.text_.text = var_157_20

				LuaForUtil.ClearLinePrefixSymbol(arg_154_1.text_)

				local var_157_21 = 38
				local var_157_22 = utf8.len(var_157_20)
				local var_157_23 = var_157_21 <= 0 and var_157_17 or var_157_17 * (var_157_22 / var_157_21)

				if var_157_23 > 0 and var_157_17 < var_157_23 then
					arg_154_1.talkMaxDuration = var_157_23

					if var_157_23 + var_157_16 > arg_154_1.duration_ then
						arg_154_1.duration_ = var_157_23 + var_157_16
					end
				end

				arg_154_1.text_.text = var_157_20
				arg_154_1.typewritter.percent = 0

				arg_154_1.typewritter:SetDirty()
				arg_154_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161038", "story_v_out_417161.awb") ~= 0 then
					local var_157_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161038", "story_v_out_417161.awb") / 1000

					if var_157_24 + var_157_16 > arg_154_1.duration_ then
						arg_154_1.duration_ = var_157_24 + var_157_16
					end

					if var_157_19.prefab_name ~= "" and arg_154_1.actors_[var_157_19.prefab_name] ~= nil then
						local var_157_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_154_1.actors_[var_157_19.prefab_name].transform, "story_v_out_417161", "417161038", "story_v_out_417161.awb")

						arg_154_1:RecordAudio("417161038", var_157_25)
						arg_154_1:RecordAudio("417161038", var_157_25)
					else
						arg_154_1:AudioAction("play", "voice", "story_v_out_417161", "417161038", "story_v_out_417161.awb")
					end

					arg_154_1:RecordHistoryTalkVoice("story_v_out_417161", "417161038", "story_v_out_417161.awb")
				end

				arg_154_1:RecordContent(arg_154_1.text_.text)
			end

			local var_157_26 = math.max(var_157_17, arg_154_1.talkMaxDuration)

			if var_157_16 <= arg_154_1.time_ and arg_154_1.time_ < var_157_16 + var_157_26 then
				arg_154_1.typewritter.percent = (arg_154_1.time_ - var_157_16) / var_157_26

				arg_154_1.typewritter:SetDirty()
			end

			if arg_154_1.time_ >= var_157_16 + var_157_26 and arg_154_1.time_ < var_157_16 + var_157_26 + arg_157_0 then
				arg_154_1.typewritter.percent = 1

				arg_154_1.typewritter:SetDirty()
				arg_154_1:ShowNextGo(true)
			end
		end
	end,
	Play417161039 = function(arg_158_0, arg_158_1)
		arg_158_1.time_ = 0
		arg_158_1.frameCnt_ = 0
		arg_158_1.state_ = "playing"
		arg_158_1.curTalkId_ = 417161039
		arg_158_1.duration_ = 10.33

		SetActive(arg_158_1.tipsGo_, false)

		function arg_158_1.onSingleLineFinish_()
			arg_158_1.onSingleLineUpdate_ = nil
			arg_158_1.onSingleLineFinish_ = nil
			arg_158_1.state_ = "waiting"
		end

		function arg_158_1.playNext_(arg_160_0)
			if arg_160_0 == 1 then
				arg_158_0:Play417161040(arg_158_1)
			end
		end

		function arg_158_1.onSingleLineUpdate_(arg_161_0)
			local var_161_0 = 0
			local var_161_1 = 1.15

			if var_161_0 < arg_158_1.time_ and arg_158_1.time_ <= var_161_0 + arg_161_0 then
				arg_158_1.talkMaxDuration = 0
				arg_158_1.dialogCg_.alpha = 1

				arg_158_1.dialog_:SetActive(true)
				SetActive(arg_158_1.leftNameGo_, true)

				local var_161_2 = arg_158_1:FormatText(StoryNameCfg[595].name)

				arg_158_1.leftNameTxt_.text = var_161_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_158_1.leftNameTxt_.transform)

				arg_158_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_158_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_158_1:RecordName(arg_158_1.leftNameTxt_.text)
				SetActive(arg_158_1.iconTrs_.gameObject, false)
				arg_158_1.callingController_:SetSelectedState("normal")

				local var_161_3 = arg_158_1:GetWordFromCfg(417161039)
				local var_161_4 = arg_158_1:FormatText(var_161_3.content)

				arg_158_1.text_.text = var_161_4

				LuaForUtil.ClearLinePrefixSymbol(arg_158_1.text_)

				local var_161_5 = 46
				local var_161_6 = utf8.len(var_161_4)
				local var_161_7 = var_161_5 <= 0 and var_161_1 or var_161_1 * (var_161_6 / var_161_5)

				if var_161_7 > 0 and var_161_1 < var_161_7 then
					arg_158_1.talkMaxDuration = var_161_7

					if var_161_7 + var_161_0 > arg_158_1.duration_ then
						arg_158_1.duration_ = var_161_7 + var_161_0
					end
				end

				arg_158_1.text_.text = var_161_4
				arg_158_1.typewritter.percent = 0

				arg_158_1.typewritter:SetDirty()
				arg_158_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161039", "story_v_out_417161.awb") ~= 0 then
					local var_161_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161039", "story_v_out_417161.awb") / 1000

					if var_161_8 + var_161_0 > arg_158_1.duration_ then
						arg_158_1.duration_ = var_161_8 + var_161_0
					end

					if var_161_3.prefab_name ~= "" and arg_158_1.actors_[var_161_3.prefab_name] ~= nil then
						local var_161_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_158_1.actors_[var_161_3.prefab_name].transform, "story_v_out_417161", "417161039", "story_v_out_417161.awb")

						arg_158_1:RecordAudio("417161039", var_161_9)
						arg_158_1:RecordAudio("417161039", var_161_9)
					else
						arg_158_1:AudioAction("play", "voice", "story_v_out_417161", "417161039", "story_v_out_417161.awb")
					end

					arg_158_1:RecordHistoryTalkVoice("story_v_out_417161", "417161039", "story_v_out_417161.awb")
				end

				arg_158_1:RecordContent(arg_158_1.text_.text)
			end

			local var_161_10 = math.max(var_161_1, arg_158_1.talkMaxDuration)

			if var_161_0 <= arg_158_1.time_ and arg_158_1.time_ < var_161_0 + var_161_10 then
				arg_158_1.typewritter.percent = (arg_158_1.time_ - var_161_0) / var_161_10

				arg_158_1.typewritter:SetDirty()
			end

			if arg_158_1.time_ >= var_161_0 + var_161_10 and arg_158_1.time_ < var_161_0 + var_161_10 + arg_161_0 then
				arg_158_1.typewritter.percent = 1

				arg_158_1.typewritter:SetDirty()
				arg_158_1:ShowNextGo(true)
			end
		end
	end,
	Play417161040 = function(arg_162_0, arg_162_1)
		arg_162_1.time_ = 0
		arg_162_1.frameCnt_ = 0
		arg_162_1.state_ = "playing"
		arg_162_1.curTalkId_ = 417161040
		arg_162_1.duration_ = 6.9

		SetActive(arg_162_1.tipsGo_, false)

		function arg_162_1.onSingleLineFinish_()
			arg_162_1.onSingleLineUpdate_ = nil
			arg_162_1.onSingleLineFinish_ = nil
			arg_162_1.state_ = "waiting"
		end

		function arg_162_1.playNext_(arg_164_0)
			if arg_164_0 == 1 then
				arg_162_0:Play417161041(arg_162_1)
			end
		end

		function arg_162_1.onSingleLineUpdate_(arg_165_0)
			local var_165_0 = 0
			local var_165_1 = 1

			if var_165_0 < arg_162_1.time_ and arg_162_1.time_ <= var_165_0 + arg_165_0 then
				arg_162_1.talkMaxDuration = 0
				arg_162_1.dialogCg_.alpha = 1

				arg_162_1.dialog_:SetActive(true)
				SetActive(arg_162_1.leftNameGo_, true)

				local var_165_2 = arg_162_1:FormatText(StoryNameCfg[595].name)

				arg_162_1.leftNameTxt_.text = var_165_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_162_1.leftNameTxt_.transform)

				arg_162_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_162_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_162_1:RecordName(arg_162_1.leftNameTxt_.text)
				SetActive(arg_162_1.iconTrs_.gameObject, false)
				arg_162_1.callingController_:SetSelectedState("normal")

				local var_165_3 = arg_162_1:GetWordFromCfg(417161040)
				local var_165_4 = arg_162_1:FormatText(var_165_3.content)

				arg_162_1.text_.text = var_165_4

				LuaForUtil.ClearLinePrefixSymbol(arg_162_1.text_)

				local var_165_5 = 38
				local var_165_6 = utf8.len(var_165_4)
				local var_165_7 = var_165_5 <= 0 and var_165_1 or var_165_1 * (var_165_6 / var_165_5)

				if var_165_7 > 0 and var_165_1 < var_165_7 then
					arg_162_1.talkMaxDuration = var_165_7

					if var_165_7 + var_165_0 > arg_162_1.duration_ then
						arg_162_1.duration_ = var_165_7 + var_165_0
					end
				end

				arg_162_1.text_.text = var_165_4
				arg_162_1.typewritter.percent = 0

				arg_162_1.typewritter:SetDirty()
				arg_162_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161040", "story_v_out_417161.awb") ~= 0 then
					local var_165_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161040", "story_v_out_417161.awb") / 1000

					if var_165_8 + var_165_0 > arg_162_1.duration_ then
						arg_162_1.duration_ = var_165_8 + var_165_0
					end

					if var_165_3.prefab_name ~= "" and arg_162_1.actors_[var_165_3.prefab_name] ~= nil then
						local var_165_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_162_1.actors_[var_165_3.prefab_name].transform, "story_v_out_417161", "417161040", "story_v_out_417161.awb")

						arg_162_1:RecordAudio("417161040", var_165_9)
						arg_162_1:RecordAudio("417161040", var_165_9)
					else
						arg_162_1:AudioAction("play", "voice", "story_v_out_417161", "417161040", "story_v_out_417161.awb")
					end

					arg_162_1:RecordHistoryTalkVoice("story_v_out_417161", "417161040", "story_v_out_417161.awb")
				end

				arg_162_1:RecordContent(arg_162_1.text_.text)
			end

			local var_165_10 = math.max(var_165_1, arg_162_1.talkMaxDuration)

			if var_165_0 <= arg_162_1.time_ and arg_162_1.time_ < var_165_0 + var_165_10 then
				arg_162_1.typewritter.percent = (arg_162_1.time_ - var_165_0) / var_165_10

				arg_162_1.typewritter:SetDirty()
			end

			if arg_162_1.time_ >= var_165_0 + var_165_10 and arg_162_1.time_ < var_165_0 + var_165_10 + arg_165_0 then
				arg_162_1.typewritter.percent = 1

				arg_162_1.typewritter:SetDirty()
				arg_162_1:ShowNextGo(true)
			end
		end
	end,
	Play417161041 = function(arg_166_0, arg_166_1)
		arg_166_1.time_ = 0
		arg_166_1.frameCnt_ = 0
		arg_166_1.state_ = "playing"
		arg_166_1.curTalkId_ = 417161041
		arg_166_1.duration_ = 2.33

		SetActive(arg_166_1.tipsGo_, false)

		function arg_166_1.onSingleLineFinish_()
			arg_166_1.onSingleLineUpdate_ = nil
			arg_166_1.onSingleLineFinish_ = nil
			arg_166_1.state_ = "waiting"
		end

		function arg_166_1.playNext_(arg_168_0)
			if arg_168_0 == 1 then
				arg_166_0:Play417161042(arg_166_1)
			end
		end

		function arg_166_1.onSingleLineUpdate_(arg_169_0)
			local var_169_0 = arg_166_1.actors_["10128"]
			local var_169_1 = 0

			if var_169_1 < arg_166_1.time_ and arg_166_1.time_ <= var_169_1 + arg_169_0 and not isNil(var_169_0) and arg_166_1.var_.actorSpriteComps10128 == nil then
				arg_166_1.var_.actorSpriteComps10128 = var_169_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_169_2 = 0.2

			if var_169_1 <= arg_166_1.time_ and arg_166_1.time_ < var_169_1 + var_169_2 and not isNil(var_169_0) then
				local var_169_3 = (arg_166_1.time_ - var_169_1) / var_169_2

				if arg_166_1.var_.actorSpriteComps10128 then
					for iter_169_0, iter_169_1 in pairs(arg_166_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_169_1 then
							if arg_166_1.isInRecall_ then
								local var_169_4 = Mathf.Lerp(iter_169_1.color.r, arg_166_1.hightColor2.r, var_169_3)
								local var_169_5 = Mathf.Lerp(iter_169_1.color.g, arg_166_1.hightColor2.g, var_169_3)
								local var_169_6 = Mathf.Lerp(iter_169_1.color.b, arg_166_1.hightColor2.b, var_169_3)

								iter_169_1.color = Color.New(var_169_4, var_169_5, var_169_6)
							else
								local var_169_7 = Mathf.Lerp(iter_169_1.color.r, 0.5, var_169_3)

								iter_169_1.color = Color.New(var_169_7, var_169_7, var_169_7)
							end
						end
					end
				end
			end

			if arg_166_1.time_ >= var_169_1 + var_169_2 and arg_166_1.time_ < var_169_1 + var_169_2 + arg_169_0 and not isNil(var_169_0) and arg_166_1.var_.actorSpriteComps10128 then
				for iter_169_2, iter_169_3 in pairs(arg_166_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_169_3 then
						if arg_166_1.isInRecall_ then
							iter_169_3.color = arg_166_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_169_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_166_1.var_.actorSpriteComps10128 = nil
			end

			local var_169_8 = arg_166_1.actors_["1095"].transform
			local var_169_9 = 0

			if var_169_9 < arg_166_1.time_ and arg_166_1.time_ <= var_169_9 + arg_169_0 then
				arg_166_1.var_.moveOldPos1095 = var_169_8.localPosition
				var_169_8.localScale = Vector3.New(1, 1, 1)

				arg_166_1:CheckSpriteTmpPos("1095", 4)

				local var_169_10 = var_169_8.childCount

				for iter_169_4 = 0, var_169_10 - 1 do
					local var_169_11 = var_169_8:GetChild(iter_169_4)

					if var_169_11.name == "split_6" or not string.find(var_169_11.name, "split") then
						var_169_11.gameObject:SetActive(true)
					else
						var_169_11.gameObject:SetActive(false)
					end
				end
			end

			local var_169_12 = 0.001

			if var_169_9 <= arg_166_1.time_ and arg_166_1.time_ < var_169_9 + var_169_12 then
				local var_169_13 = (arg_166_1.time_ - var_169_9) / var_169_12
				local var_169_14 = Vector3.New(390, -340, -285)

				var_169_8.localPosition = Vector3.Lerp(arg_166_1.var_.moveOldPos1095, var_169_14, var_169_13)
			end

			if arg_166_1.time_ >= var_169_9 + var_169_12 and arg_166_1.time_ < var_169_9 + var_169_12 + arg_169_0 then
				var_169_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_169_15 = arg_166_1.actors_["1095"]
			local var_169_16 = 0

			if var_169_16 < arg_166_1.time_ and arg_166_1.time_ <= var_169_16 + arg_169_0 then
				arg_166_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_169_17 = arg_166_1.actors_["1095"]
			local var_169_18 = 0

			if var_169_18 < arg_166_1.time_ and arg_166_1.time_ <= var_169_18 + arg_169_0 then
				local var_169_19 = var_169_17:GetComponentInChildren(typeof(CanvasGroup))

				if var_169_19 then
					arg_166_1.var_.alphaOldValue1095 = var_169_19.alpha
					arg_166_1.var_.characterEffect1095 = var_169_19
				end
			end

			local var_169_20 = 0.2

			if var_169_18 <= arg_166_1.time_ and arg_166_1.time_ < var_169_18 + var_169_20 then
				local var_169_21 = (arg_166_1.time_ - var_169_18) / var_169_20
				local var_169_22 = Mathf.Lerp(arg_166_1.var_.alphaOldValue1095, 0.6, var_169_21)

				if arg_166_1.var_.characterEffect1095 then
					arg_166_1.var_.characterEffect1095.alpha = var_169_22
				end
			end

			if arg_166_1.time_ >= var_169_18 + var_169_20 and arg_166_1.time_ < var_169_18 + var_169_20 + arg_169_0 and arg_166_1.var_.characterEffect1095 then
				arg_166_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_169_23 = 0
			local var_169_24 = 0.3

			if var_169_23 < arg_166_1.time_ and arg_166_1.time_ <= var_169_23 + arg_169_0 then
				arg_166_1.talkMaxDuration = 0
				arg_166_1.dialogCg_.alpha = 1

				arg_166_1.dialog_:SetActive(true)
				SetActive(arg_166_1.leftNameGo_, true)

				local var_169_25 = arg_166_1:FormatText(StoryNameCfg[471].name)

				arg_166_1.leftNameTxt_.text = var_169_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_166_1.leftNameTxt_.transform)

				arg_166_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_166_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_166_1:RecordName(arg_166_1.leftNameTxt_.text)
				SetActive(arg_166_1.iconTrs_.gameObject, false)
				arg_166_1.callingController_:SetSelectedState("normal")

				local var_169_26 = arg_166_1:GetWordFromCfg(417161041)
				local var_169_27 = arg_166_1:FormatText(var_169_26.content)

				arg_166_1.text_.text = var_169_27

				LuaForUtil.ClearLinePrefixSymbol(arg_166_1.text_)

				local var_169_28 = 12
				local var_169_29 = utf8.len(var_169_27)
				local var_169_30 = var_169_28 <= 0 and var_169_24 or var_169_24 * (var_169_29 / var_169_28)

				if var_169_30 > 0 and var_169_24 < var_169_30 then
					arg_166_1.talkMaxDuration = var_169_30

					if var_169_30 + var_169_23 > arg_166_1.duration_ then
						arg_166_1.duration_ = var_169_30 + var_169_23
					end
				end

				arg_166_1.text_.text = var_169_27
				arg_166_1.typewritter.percent = 0

				arg_166_1.typewritter:SetDirty()
				arg_166_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161041", "story_v_out_417161.awb") ~= 0 then
					local var_169_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161041", "story_v_out_417161.awb") / 1000

					if var_169_31 + var_169_23 > arg_166_1.duration_ then
						arg_166_1.duration_ = var_169_31 + var_169_23
					end

					if var_169_26.prefab_name ~= "" and arg_166_1.actors_[var_169_26.prefab_name] ~= nil then
						local var_169_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_166_1.actors_[var_169_26.prefab_name].transform, "story_v_out_417161", "417161041", "story_v_out_417161.awb")

						arg_166_1:RecordAudio("417161041", var_169_32)
						arg_166_1:RecordAudio("417161041", var_169_32)
					else
						arg_166_1:AudioAction("play", "voice", "story_v_out_417161", "417161041", "story_v_out_417161.awb")
					end

					arg_166_1:RecordHistoryTalkVoice("story_v_out_417161", "417161041", "story_v_out_417161.awb")
				end

				arg_166_1:RecordContent(arg_166_1.text_.text)
			end

			local var_169_33 = math.max(var_169_24, arg_166_1.talkMaxDuration)

			if var_169_23 <= arg_166_1.time_ and arg_166_1.time_ < var_169_23 + var_169_33 then
				arg_166_1.typewritter.percent = (arg_166_1.time_ - var_169_23) / var_169_33

				arg_166_1.typewritter:SetDirty()
			end

			if arg_166_1.time_ >= var_169_23 + var_169_33 and arg_166_1.time_ < var_169_23 + var_169_33 + arg_169_0 then
				arg_166_1.typewritter.percent = 1

				arg_166_1.typewritter:SetDirty()
				arg_166_1:ShowNextGo(true)
			end
		end
	end,
	Play417161042 = function(arg_170_0, arg_170_1)
		arg_170_1.time_ = 0
		arg_170_1.frameCnt_ = 0
		arg_170_1.state_ = "playing"
		arg_170_1.curTalkId_ = 417161042
		arg_170_1.duration_ = 6.13

		SetActive(arg_170_1.tipsGo_, false)

		function arg_170_1.onSingleLineFinish_()
			arg_170_1.onSingleLineUpdate_ = nil
			arg_170_1.onSingleLineFinish_ = nil
			arg_170_1.state_ = "waiting"
		end

		function arg_170_1.playNext_(arg_172_0)
			if arg_172_0 == 1 then
				arg_170_0:Play417161043(arg_170_1)
			end
		end

		function arg_170_1.onSingleLineUpdate_(arg_173_0)
			local var_173_0 = arg_170_1.actors_["10128"]
			local var_173_1 = 0

			if var_173_1 < arg_170_1.time_ and arg_170_1.time_ <= var_173_1 + arg_173_0 and not isNil(var_173_0) and arg_170_1.var_.actorSpriteComps10128 == nil then
				arg_170_1.var_.actorSpriteComps10128 = var_173_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_173_2 = 0.2

			if var_173_1 <= arg_170_1.time_ and arg_170_1.time_ < var_173_1 + var_173_2 and not isNil(var_173_0) then
				local var_173_3 = (arg_170_1.time_ - var_173_1) / var_173_2

				if arg_170_1.var_.actorSpriteComps10128 then
					for iter_173_0, iter_173_1 in pairs(arg_170_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_173_1 then
							if arg_170_1.isInRecall_ then
								local var_173_4 = Mathf.Lerp(iter_173_1.color.r, arg_170_1.hightColor1.r, var_173_3)
								local var_173_5 = Mathf.Lerp(iter_173_1.color.g, arg_170_1.hightColor1.g, var_173_3)
								local var_173_6 = Mathf.Lerp(iter_173_1.color.b, arg_170_1.hightColor1.b, var_173_3)

								iter_173_1.color = Color.New(var_173_4, var_173_5, var_173_6)
							else
								local var_173_7 = Mathf.Lerp(iter_173_1.color.r, 1, var_173_3)

								iter_173_1.color = Color.New(var_173_7, var_173_7, var_173_7)
							end
						end
					end
				end
			end

			if arg_170_1.time_ >= var_173_1 + var_173_2 and arg_170_1.time_ < var_173_1 + var_173_2 + arg_173_0 and not isNil(var_173_0) and arg_170_1.var_.actorSpriteComps10128 then
				for iter_173_2, iter_173_3 in pairs(arg_170_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_173_3 then
						if arg_170_1.isInRecall_ then
							iter_173_3.color = arg_170_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_173_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_170_1.var_.actorSpriteComps10128 = nil
			end

			local var_173_8 = arg_170_1.actors_["1095"]
			local var_173_9 = 0

			if var_173_9 < arg_170_1.time_ and arg_170_1.time_ <= var_173_9 + arg_173_0 and not isNil(var_173_8) and arg_170_1.var_.actorSpriteComps1095 == nil then
				arg_170_1.var_.actorSpriteComps1095 = var_173_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_173_10 = 0.2

			if var_173_9 <= arg_170_1.time_ and arg_170_1.time_ < var_173_9 + var_173_10 and not isNil(var_173_8) then
				local var_173_11 = (arg_170_1.time_ - var_173_9) / var_173_10

				if arg_170_1.var_.actorSpriteComps1095 then
					for iter_173_4, iter_173_5 in pairs(arg_170_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_173_5 then
							if arg_170_1.isInRecall_ then
								local var_173_12 = Mathf.Lerp(iter_173_5.color.r, arg_170_1.hightColor2.r, var_173_11)
								local var_173_13 = Mathf.Lerp(iter_173_5.color.g, arg_170_1.hightColor2.g, var_173_11)
								local var_173_14 = Mathf.Lerp(iter_173_5.color.b, arg_170_1.hightColor2.b, var_173_11)

								iter_173_5.color = Color.New(var_173_12, var_173_13, var_173_14)
							else
								local var_173_15 = Mathf.Lerp(iter_173_5.color.r, 0.5, var_173_11)

								iter_173_5.color = Color.New(var_173_15, var_173_15, var_173_15)
							end
						end
					end
				end
			end

			if arg_170_1.time_ >= var_173_9 + var_173_10 and arg_170_1.time_ < var_173_9 + var_173_10 + arg_173_0 and not isNil(var_173_8) and arg_170_1.var_.actorSpriteComps1095 then
				for iter_173_6, iter_173_7 in pairs(arg_170_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_173_7 then
						if arg_170_1.isInRecall_ then
							iter_173_7.color = arg_170_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_173_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_170_1.var_.actorSpriteComps1095 = nil
			end

			local var_173_16 = 0
			local var_173_17 = 0.7

			if var_173_16 < arg_170_1.time_ and arg_170_1.time_ <= var_173_16 + arg_173_0 then
				arg_170_1.talkMaxDuration = 0
				arg_170_1.dialogCg_.alpha = 1

				arg_170_1.dialog_:SetActive(true)
				SetActive(arg_170_1.leftNameGo_, true)

				local var_173_18 = arg_170_1:FormatText(StoryNameCfg[595].name)

				arg_170_1.leftNameTxt_.text = var_173_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_170_1.leftNameTxt_.transform)

				arg_170_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_170_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_170_1:RecordName(arg_170_1.leftNameTxt_.text)
				SetActive(arg_170_1.iconTrs_.gameObject, false)
				arg_170_1.callingController_:SetSelectedState("normal")

				local var_173_19 = arg_170_1:GetWordFromCfg(417161042)
				local var_173_20 = arg_170_1:FormatText(var_173_19.content)

				arg_170_1.text_.text = var_173_20

				LuaForUtil.ClearLinePrefixSymbol(arg_170_1.text_)

				local var_173_21 = 28
				local var_173_22 = utf8.len(var_173_20)
				local var_173_23 = var_173_21 <= 0 and var_173_17 or var_173_17 * (var_173_22 / var_173_21)

				if var_173_23 > 0 and var_173_17 < var_173_23 then
					arg_170_1.talkMaxDuration = var_173_23

					if var_173_23 + var_173_16 > arg_170_1.duration_ then
						arg_170_1.duration_ = var_173_23 + var_173_16
					end
				end

				arg_170_1.text_.text = var_173_20
				arg_170_1.typewritter.percent = 0

				arg_170_1.typewritter:SetDirty()
				arg_170_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161042", "story_v_out_417161.awb") ~= 0 then
					local var_173_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161042", "story_v_out_417161.awb") / 1000

					if var_173_24 + var_173_16 > arg_170_1.duration_ then
						arg_170_1.duration_ = var_173_24 + var_173_16
					end

					if var_173_19.prefab_name ~= "" and arg_170_1.actors_[var_173_19.prefab_name] ~= nil then
						local var_173_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_170_1.actors_[var_173_19.prefab_name].transform, "story_v_out_417161", "417161042", "story_v_out_417161.awb")

						arg_170_1:RecordAudio("417161042", var_173_25)
						arg_170_1:RecordAudio("417161042", var_173_25)
					else
						arg_170_1:AudioAction("play", "voice", "story_v_out_417161", "417161042", "story_v_out_417161.awb")
					end

					arg_170_1:RecordHistoryTalkVoice("story_v_out_417161", "417161042", "story_v_out_417161.awb")
				end

				arg_170_1:RecordContent(arg_170_1.text_.text)
			end

			local var_173_26 = math.max(var_173_17, arg_170_1.talkMaxDuration)

			if var_173_16 <= arg_170_1.time_ and arg_170_1.time_ < var_173_16 + var_173_26 then
				arg_170_1.typewritter.percent = (arg_170_1.time_ - var_173_16) / var_173_26

				arg_170_1.typewritter:SetDirty()
			end

			if arg_170_1.time_ >= var_173_16 + var_173_26 and arg_170_1.time_ < var_173_16 + var_173_26 + arg_173_0 then
				arg_170_1.typewritter.percent = 1

				arg_170_1.typewritter:SetDirty()
				arg_170_1:ShowNextGo(true)
			end
		end
	end,
	Play417161043 = function(arg_174_0, arg_174_1)
		arg_174_1.time_ = 0
		arg_174_1.frameCnt_ = 0
		arg_174_1.state_ = "playing"
		arg_174_1.curTalkId_ = 417161043
		arg_174_1.duration_ = 3.6

		SetActive(arg_174_1.tipsGo_, false)

		function arg_174_1.onSingleLineFinish_()
			arg_174_1.onSingleLineUpdate_ = nil
			arg_174_1.onSingleLineFinish_ = nil
			arg_174_1.state_ = "waiting"
		end

		function arg_174_1.playNext_(arg_176_0)
			if arg_176_0 == 1 then
				arg_174_0:Play417161044(arg_174_1)
			end
		end

		function arg_174_1.onSingleLineUpdate_(arg_177_0)
			local var_177_0 = 0
			local var_177_1 = 0.55

			if var_177_0 < arg_174_1.time_ and arg_174_1.time_ <= var_177_0 + arg_177_0 then
				arg_174_1.talkMaxDuration = 0
				arg_174_1.dialogCg_.alpha = 1

				arg_174_1.dialog_:SetActive(true)
				SetActive(arg_174_1.leftNameGo_, true)

				local var_177_2 = arg_174_1:FormatText(StoryNameCfg[595].name)

				arg_174_1.leftNameTxt_.text = var_177_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_174_1.leftNameTxt_.transform)

				arg_174_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_174_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_174_1:RecordName(arg_174_1.leftNameTxt_.text)
				SetActive(arg_174_1.iconTrs_.gameObject, false)
				arg_174_1.callingController_:SetSelectedState("normal")

				local var_177_3 = arg_174_1:GetWordFromCfg(417161043)
				local var_177_4 = arg_174_1:FormatText(var_177_3.content)

				arg_174_1.text_.text = var_177_4

				LuaForUtil.ClearLinePrefixSymbol(arg_174_1.text_)

				local var_177_5 = 22
				local var_177_6 = utf8.len(var_177_4)
				local var_177_7 = var_177_5 <= 0 and var_177_1 or var_177_1 * (var_177_6 / var_177_5)

				if var_177_7 > 0 and var_177_1 < var_177_7 then
					arg_174_1.talkMaxDuration = var_177_7

					if var_177_7 + var_177_0 > arg_174_1.duration_ then
						arg_174_1.duration_ = var_177_7 + var_177_0
					end
				end

				arg_174_1.text_.text = var_177_4
				arg_174_1.typewritter.percent = 0

				arg_174_1.typewritter:SetDirty()
				arg_174_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161043", "story_v_out_417161.awb") ~= 0 then
					local var_177_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161043", "story_v_out_417161.awb") / 1000

					if var_177_8 + var_177_0 > arg_174_1.duration_ then
						arg_174_1.duration_ = var_177_8 + var_177_0
					end

					if var_177_3.prefab_name ~= "" and arg_174_1.actors_[var_177_3.prefab_name] ~= nil then
						local var_177_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_174_1.actors_[var_177_3.prefab_name].transform, "story_v_out_417161", "417161043", "story_v_out_417161.awb")

						arg_174_1:RecordAudio("417161043", var_177_9)
						arg_174_1:RecordAudio("417161043", var_177_9)
					else
						arg_174_1:AudioAction("play", "voice", "story_v_out_417161", "417161043", "story_v_out_417161.awb")
					end

					arg_174_1:RecordHistoryTalkVoice("story_v_out_417161", "417161043", "story_v_out_417161.awb")
				end

				arg_174_1:RecordContent(arg_174_1.text_.text)
			end

			local var_177_10 = math.max(var_177_1, arg_174_1.talkMaxDuration)

			if var_177_0 <= arg_174_1.time_ and arg_174_1.time_ < var_177_0 + var_177_10 then
				arg_174_1.typewritter.percent = (arg_174_1.time_ - var_177_0) / var_177_10

				arg_174_1.typewritter:SetDirty()
			end

			if arg_174_1.time_ >= var_177_0 + var_177_10 and arg_174_1.time_ < var_177_0 + var_177_10 + arg_177_0 then
				arg_174_1.typewritter.percent = 1

				arg_174_1.typewritter:SetDirty()
				arg_174_1:ShowNextGo(true)
			end
		end
	end,
	Play417161044 = function(arg_178_0, arg_178_1)
		arg_178_1.time_ = 0
		arg_178_1.frameCnt_ = 0
		arg_178_1.state_ = "playing"
		arg_178_1.curTalkId_ = 417161044
		arg_178_1.duration_ = 4.47

		SetActive(arg_178_1.tipsGo_, false)

		function arg_178_1.onSingleLineFinish_()
			arg_178_1.onSingleLineUpdate_ = nil
			arg_178_1.onSingleLineFinish_ = nil
			arg_178_1.state_ = "waiting"
		end

		function arg_178_1.playNext_(arg_180_0)
			if arg_180_0 == 1 then
				arg_178_0:Play417161045(arg_178_1)
			end
		end

		function arg_178_1.onSingleLineUpdate_(arg_181_0)
			local var_181_0 = arg_178_1.actors_["10128"]
			local var_181_1 = 0

			if var_181_1 < arg_178_1.time_ and arg_178_1.time_ <= var_181_1 + arg_181_0 and not isNil(var_181_0) and arg_178_1.var_.actorSpriteComps10128 == nil then
				arg_178_1.var_.actorSpriteComps10128 = var_181_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_181_2 = 0.2

			if var_181_1 <= arg_178_1.time_ and arg_178_1.time_ < var_181_1 + var_181_2 and not isNil(var_181_0) then
				local var_181_3 = (arg_178_1.time_ - var_181_1) / var_181_2

				if arg_178_1.var_.actorSpriteComps10128 then
					for iter_181_0, iter_181_1 in pairs(arg_178_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_181_1 then
							if arg_178_1.isInRecall_ then
								local var_181_4 = Mathf.Lerp(iter_181_1.color.r, arg_178_1.hightColor2.r, var_181_3)
								local var_181_5 = Mathf.Lerp(iter_181_1.color.g, arg_178_1.hightColor2.g, var_181_3)
								local var_181_6 = Mathf.Lerp(iter_181_1.color.b, arg_178_1.hightColor2.b, var_181_3)

								iter_181_1.color = Color.New(var_181_4, var_181_5, var_181_6)
							else
								local var_181_7 = Mathf.Lerp(iter_181_1.color.r, 0.5, var_181_3)

								iter_181_1.color = Color.New(var_181_7, var_181_7, var_181_7)
							end
						end
					end
				end
			end

			if arg_178_1.time_ >= var_181_1 + var_181_2 and arg_178_1.time_ < var_181_1 + var_181_2 + arg_181_0 and not isNil(var_181_0) and arg_178_1.var_.actorSpriteComps10128 then
				for iter_181_2, iter_181_3 in pairs(arg_178_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_181_3 then
						if arg_178_1.isInRecall_ then
							iter_181_3.color = arg_178_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_181_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_178_1.var_.actorSpriteComps10128 = nil
			end

			local var_181_8 = arg_178_1.actors_["1095"]
			local var_181_9 = 0

			if var_181_9 < arg_178_1.time_ and arg_178_1.time_ <= var_181_9 + arg_181_0 then
				local var_181_10 = var_181_8:GetComponentInChildren(typeof(CanvasGroup))

				if var_181_10 then
					arg_178_1.var_.alphaOldValue1095 = var_181_10.alpha
					arg_178_1.var_.characterEffect1095 = var_181_10
				end
			end

			local var_181_11 = 0.2

			if var_181_9 <= arg_178_1.time_ and arg_178_1.time_ < var_181_9 + var_181_11 then
				local var_181_12 = (arg_178_1.time_ - var_181_9) / var_181_11
				local var_181_13 = Mathf.Lerp(arg_178_1.var_.alphaOldValue1095, 0.6, var_181_12)

				if arg_178_1.var_.characterEffect1095 then
					arg_178_1.var_.characterEffect1095.alpha = var_181_13
				end
			end

			if arg_178_1.time_ >= var_181_9 + var_181_11 and arg_178_1.time_ < var_181_9 + var_181_11 + arg_181_0 and arg_178_1.var_.characterEffect1095 then
				arg_178_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_181_14 = arg_178_1.actors_["1095"]
			local var_181_15 = 0

			if var_181_15 < arg_178_1.time_ and arg_178_1.time_ <= var_181_15 + arg_181_0 then
				arg_178_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_181_16 = 0
			local var_181_17 = 0.55

			if var_181_16 < arg_178_1.time_ and arg_178_1.time_ <= var_181_16 + arg_181_0 then
				arg_178_1.talkMaxDuration = 0
				arg_178_1.dialogCg_.alpha = 1

				arg_178_1.dialog_:SetActive(true)
				SetActive(arg_178_1.leftNameGo_, true)

				local var_181_18 = arg_178_1:FormatText(StoryNameCfg[471].name)

				arg_178_1.leftNameTxt_.text = var_181_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_178_1.leftNameTxt_.transform)

				arg_178_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_178_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_178_1:RecordName(arg_178_1.leftNameTxt_.text)
				SetActive(arg_178_1.iconTrs_.gameObject, false)
				arg_178_1.callingController_:SetSelectedState("normal")

				local var_181_19 = arg_178_1:GetWordFromCfg(417161044)
				local var_181_20 = arg_178_1:FormatText(var_181_19.content)

				arg_178_1.text_.text = var_181_20

				LuaForUtil.ClearLinePrefixSymbol(arg_178_1.text_)

				local var_181_21 = 22
				local var_181_22 = utf8.len(var_181_20)
				local var_181_23 = var_181_21 <= 0 and var_181_17 or var_181_17 * (var_181_22 / var_181_21)

				if var_181_23 > 0 and var_181_17 < var_181_23 then
					arg_178_1.talkMaxDuration = var_181_23

					if var_181_23 + var_181_16 > arg_178_1.duration_ then
						arg_178_1.duration_ = var_181_23 + var_181_16
					end
				end

				arg_178_1.text_.text = var_181_20
				arg_178_1.typewritter.percent = 0

				arg_178_1.typewritter:SetDirty()
				arg_178_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161044", "story_v_out_417161.awb") ~= 0 then
					local var_181_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161044", "story_v_out_417161.awb") / 1000

					if var_181_24 + var_181_16 > arg_178_1.duration_ then
						arg_178_1.duration_ = var_181_24 + var_181_16
					end

					if var_181_19.prefab_name ~= "" and arg_178_1.actors_[var_181_19.prefab_name] ~= nil then
						local var_181_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_178_1.actors_[var_181_19.prefab_name].transform, "story_v_out_417161", "417161044", "story_v_out_417161.awb")

						arg_178_1:RecordAudio("417161044", var_181_25)
						arg_178_1:RecordAudio("417161044", var_181_25)
					else
						arg_178_1:AudioAction("play", "voice", "story_v_out_417161", "417161044", "story_v_out_417161.awb")
					end

					arg_178_1:RecordHistoryTalkVoice("story_v_out_417161", "417161044", "story_v_out_417161.awb")
				end

				arg_178_1:RecordContent(arg_178_1.text_.text)
			end

			local var_181_26 = math.max(var_181_17, arg_178_1.talkMaxDuration)

			if var_181_16 <= arg_178_1.time_ and arg_178_1.time_ < var_181_16 + var_181_26 then
				arg_178_1.typewritter.percent = (arg_178_1.time_ - var_181_16) / var_181_26

				arg_178_1.typewritter:SetDirty()
			end

			if arg_178_1.time_ >= var_181_16 + var_181_26 and arg_178_1.time_ < var_181_16 + var_181_26 + arg_181_0 then
				arg_178_1.typewritter.percent = 1

				arg_178_1.typewritter:SetDirty()
				arg_178_1:ShowNextGo(true)
			end
		end
	end,
	Play417161045 = function(arg_182_0, arg_182_1)
		arg_182_1.time_ = 0
		arg_182_1.frameCnt_ = 0
		arg_182_1.state_ = "playing"
		arg_182_1.curTalkId_ = 417161045
		arg_182_1.duration_ = 7.47

		SetActive(arg_182_1.tipsGo_, false)

		function arg_182_1.onSingleLineFinish_()
			arg_182_1.onSingleLineUpdate_ = nil
			arg_182_1.onSingleLineFinish_ = nil
			arg_182_1.state_ = "waiting"
		end

		function arg_182_1.playNext_(arg_184_0)
			if arg_184_0 == 1 then
				arg_182_0:Play417161046(arg_182_1)
			end
		end

		function arg_182_1.onSingleLineUpdate_(arg_185_0)
			local var_185_0 = arg_182_1.actors_["1095"]
			local var_185_1 = 0

			if var_185_1 < arg_182_1.time_ and arg_182_1.time_ <= var_185_1 + arg_185_0 then
				arg_182_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_185_2 = arg_182_1.actors_["1095"]
			local var_185_3 = 0

			if var_185_3 < arg_182_1.time_ and arg_182_1.time_ <= var_185_3 + arg_185_0 then
				local var_185_4 = var_185_2:GetComponentInChildren(typeof(CanvasGroup))

				if var_185_4 then
					arg_182_1.var_.alphaOldValue1095 = var_185_4.alpha
					arg_182_1.var_.characterEffect1095 = var_185_4
				end
			end

			local var_185_5 = 0.2

			if var_185_3 <= arg_182_1.time_ and arg_182_1.time_ < var_185_3 + var_185_5 then
				local var_185_6 = (arg_182_1.time_ - var_185_3) / var_185_5
				local var_185_7 = Mathf.Lerp(arg_182_1.var_.alphaOldValue1095, 0.6, var_185_6)

				if arg_182_1.var_.characterEffect1095 then
					arg_182_1.var_.characterEffect1095.alpha = var_185_7
				end
			end

			if arg_182_1.time_ >= var_185_3 + var_185_5 and arg_182_1.time_ < var_185_3 + var_185_5 + arg_185_0 and arg_182_1.var_.characterEffect1095 then
				arg_182_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_185_8 = 0
			local var_185_9 = 0.725

			if var_185_8 < arg_182_1.time_ and arg_182_1.time_ <= var_185_8 + arg_185_0 then
				arg_182_1.talkMaxDuration = 0
				arg_182_1.dialogCg_.alpha = 1

				arg_182_1.dialog_:SetActive(true)
				SetActive(arg_182_1.leftNameGo_, true)

				local var_185_10 = arg_182_1:FormatText(StoryNameCfg[471].name)

				arg_182_1.leftNameTxt_.text = var_185_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_182_1.leftNameTxt_.transform)

				arg_182_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_182_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_182_1:RecordName(arg_182_1.leftNameTxt_.text)
				SetActive(arg_182_1.iconTrs_.gameObject, false)
				arg_182_1.callingController_:SetSelectedState("normal")

				local var_185_11 = arg_182_1:GetWordFromCfg(417161045)
				local var_185_12 = arg_182_1:FormatText(var_185_11.content)

				arg_182_1.text_.text = var_185_12

				LuaForUtil.ClearLinePrefixSymbol(arg_182_1.text_)

				local var_185_13 = 29
				local var_185_14 = utf8.len(var_185_12)
				local var_185_15 = var_185_13 <= 0 and var_185_9 or var_185_9 * (var_185_14 / var_185_13)

				if var_185_15 > 0 and var_185_9 < var_185_15 then
					arg_182_1.talkMaxDuration = var_185_15

					if var_185_15 + var_185_8 > arg_182_1.duration_ then
						arg_182_1.duration_ = var_185_15 + var_185_8
					end
				end

				arg_182_1.text_.text = var_185_12
				arg_182_1.typewritter.percent = 0

				arg_182_1.typewritter:SetDirty()
				arg_182_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161045", "story_v_out_417161.awb") ~= 0 then
					local var_185_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161045", "story_v_out_417161.awb") / 1000

					if var_185_16 + var_185_8 > arg_182_1.duration_ then
						arg_182_1.duration_ = var_185_16 + var_185_8
					end

					if var_185_11.prefab_name ~= "" and arg_182_1.actors_[var_185_11.prefab_name] ~= nil then
						local var_185_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_182_1.actors_[var_185_11.prefab_name].transform, "story_v_out_417161", "417161045", "story_v_out_417161.awb")

						arg_182_1:RecordAudio("417161045", var_185_17)
						arg_182_1:RecordAudio("417161045", var_185_17)
					else
						arg_182_1:AudioAction("play", "voice", "story_v_out_417161", "417161045", "story_v_out_417161.awb")
					end

					arg_182_1:RecordHistoryTalkVoice("story_v_out_417161", "417161045", "story_v_out_417161.awb")
				end

				arg_182_1:RecordContent(arg_182_1.text_.text)
			end

			local var_185_18 = math.max(var_185_9, arg_182_1.talkMaxDuration)

			if var_185_8 <= arg_182_1.time_ and arg_182_1.time_ < var_185_8 + var_185_18 then
				arg_182_1.typewritter.percent = (arg_182_1.time_ - var_185_8) / var_185_18

				arg_182_1.typewritter:SetDirty()
			end

			if arg_182_1.time_ >= var_185_8 + var_185_18 and arg_182_1.time_ < var_185_8 + var_185_18 + arg_185_0 then
				arg_182_1.typewritter.percent = 1

				arg_182_1.typewritter:SetDirty()
				arg_182_1:ShowNextGo(true)
			end
		end
	end,
	Play417161046 = function(arg_186_0, arg_186_1)
		arg_186_1.time_ = 0
		arg_186_1.frameCnt_ = 0
		arg_186_1.state_ = "playing"
		arg_186_1.curTalkId_ = 417161046
		arg_186_1.duration_ = 3.27

		SetActive(arg_186_1.tipsGo_, false)

		function arg_186_1.onSingleLineFinish_()
			arg_186_1.onSingleLineUpdate_ = nil
			arg_186_1.onSingleLineFinish_ = nil
			arg_186_1.state_ = "waiting"
		end

		function arg_186_1.playNext_(arg_188_0)
			if arg_188_0 == 1 then
				arg_186_0:Play417161047(arg_186_1)
			end
		end

		function arg_186_1.onSingleLineUpdate_(arg_189_0)
			local var_189_0 = arg_186_1.actors_["10128"]
			local var_189_1 = 0

			if var_189_1 < arg_186_1.time_ and arg_186_1.time_ <= var_189_1 + arg_189_0 and not isNil(var_189_0) and arg_186_1.var_.actorSpriteComps10128 == nil then
				arg_186_1.var_.actorSpriteComps10128 = var_189_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_189_2 = 0.2

			if var_189_1 <= arg_186_1.time_ and arg_186_1.time_ < var_189_1 + var_189_2 and not isNil(var_189_0) then
				local var_189_3 = (arg_186_1.time_ - var_189_1) / var_189_2

				if arg_186_1.var_.actorSpriteComps10128 then
					for iter_189_0, iter_189_1 in pairs(arg_186_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_189_1 then
							if arg_186_1.isInRecall_ then
								local var_189_4 = Mathf.Lerp(iter_189_1.color.r, arg_186_1.hightColor1.r, var_189_3)
								local var_189_5 = Mathf.Lerp(iter_189_1.color.g, arg_186_1.hightColor1.g, var_189_3)
								local var_189_6 = Mathf.Lerp(iter_189_1.color.b, arg_186_1.hightColor1.b, var_189_3)

								iter_189_1.color = Color.New(var_189_4, var_189_5, var_189_6)
							else
								local var_189_7 = Mathf.Lerp(iter_189_1.color.r, 1, var_189_3)

								iter_189_1.color = Color.New(var_189_7, var_189_7, var_189_7)
							end
						end
					end
				end
			end

			if arg_186_1.time_ >= var_189_1 + var_189_2 and arg_186_1.time_ < var_189_1 + var_189_2 + arg_189_0 and not isNil(var_189_0) and arg_186_1.var_.actorSpriteComps10128 then
				for iter_189_2, iter_189_3 in pairs(arg_186_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_189_3 then
						if arg_186_1.isInRecall_ then
							iter_189_3.color = arg_186_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_189_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_186_1.var_.actorSpriteComps10128 = nil
			end

			local var_189_8 = arg_186_1.actors_["1095"]
			local var_189_9 = 0

			if var_189_9 < arg_186_1.time_ and arg_186_1.time_ <= var_189_9 + arg_189_0 and not isNil(var_189_8) and arg_186_1.var_.actorSpriteComps1095 == nil then
				arg_186_1.var_.actorSpriteComps1095 = var_189_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_189_10 = 0.2

			if var_189_9 <= arg_186_1.time_ and arg_186_1.time_ < var_189_9 + var_189_10 and not isNil(var_189_8) then
				local var_189_11 = (arg_186_1.time_ - var_189_9) / var_189_10

				if arg_186_1.var_.actorSpriteComps1095 then
					for iter_189_4, iter_189_5 in pairs(arg_186_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_189_5 then
							if arg_186_1.isInRecall_ then
								local var_189_12 = Mathf.Lerp(iter_189_5.color.r, arg_186_1.hightColor2.r, var_189_11)
								local var_189_13 = Mathf.Lerp(iter_189_5.color.g, arg_186_1.hightColor2.g, var_189_11)
								local var_189_14 = Mathf.Lerp(iter_189_5.color.b, arg_186_1.hightColor2.b, var_189_11)

								iter_189_5.color = Color.New(var_189_12, var_189_13, var_189_14)
							else
								local var_189_15 = Mathf.Lerp(iter_189_5.color.r, 0.5, var_189_11)

								iter_189_5.color = Color.New(var_189_15, var_189_15, var_189_15)
							end
						end
					end
				end
			end

			if arg_186_1.time_ >= var_189_9 + var_189_10 and arg_186_1.time_ < var_189_9 + var_189_10 + arg_189_0 and not isNil(var_189_8) and arg_186_1.var_.actorSpriteComps1095 then
				for iter_189_6, iter_189_7 in pairs(arg_186_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_189_7 then
						if arg_186_1.isInRecall_ then
							iter_189_7.color = arg_186_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_189_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_186_1.var_.actorSpriteComps1095 = nil
			end

			local var_189_16 = 0
			local var_189_17 = 0.45

			if var_189_16 < arg_186_1.time_ and arg_186_1.time_ <= var_189_16 + arg_189_0 then
				arg_186_1.talkMaxDuration = 0
				arg_186_1.dialogCg_.alpha = 1

				arg_186_1.dialog_:SetActive(true)
				SetActive(arg_186_1.leftNameGo_, true)

				local var_189_18 = arg_186_1:FormatText(StoryNameCfg[595].name)

				arg_186_1.leftNameTxt_.text = var_189_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_186_1.leftNameTxt_.transform)

				arg_186_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_186_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_186_1:RecordName(arg_186_1.leftNameTxt_.text)
				SetActive(arg_186_1.iconTrs_.gameObject, false)
				arg_186_1.callingController_:SetSelectedState("normal")

				local var_189_19 = arg_186_1:GetWordFromCfg(417161046)
				local var_189_20 = arg_186_1:FormatText(var_189_19.content)

				arg_186_1.text_.text = var_189_20

				LuaForUtil.ClearLinePrefixSymbol(arg_186_1.text_)

				local var_189_21 = 18
				local var_189_22 = utf8.len(var_189_20)
				local var_189_23 = var_189_21 <= 0 and var_189_17 or var_189_17 * (var_189_22 / var_189_21)

				if var_189_23 > 0 and var_189_17 < var_189_23 then
					arg_186_1.talkMaxDuration = var_189_23

					if var_189_23 + var_189_16 > arg_186_1.duration_ then
						arg_186_1.duration_ = var_189_23 + var_189_16
					end
				end

				arg_186_1.text_.text = var_189_20
				arg_186_1.typewritter.percent = 0

				arg_186_1.typewritter:SetDirty()
				arg_186_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161046", "story_v_out_417161.awb") ~= 0 then
					local var_189_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161046", "story_v_out_417161.awb") / 1000

					if var_189_24 + var_189_16 > arg_186_1.duration_ then
						arg_186_1.duration_ = var_189_24 + var_189_16
					end

					if var_189_19.prefab_name ~= "" and arg_186_1.actors_[var_189_19.prefab_name] ~= nil then
						local var_189_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_186_1.actors_[var_189_19.prefab_name].transform, "story_v_out_417161", "417161046", "story_v_out_417161.awb")

						arg_186_1:RecordAudio("417161046", var_189_25)
						arg_186_1:RecordAudio("417161046", var_189_25)
					else
						arg_186_1:AudioAction("play", "voice", "story_v_out_417161", "417161046", "story_v_out_417161.awb")
					end

					arg_186_1:RecordHistoryTalkVoice("story_v_out_417161", "417161046", "story_v_out_417161.awb")
				end

				arg_186_1:RecordContent(arg_186_1.text_.text)
			end

			local var_189_26 = math.max(var_189_17, arg_186_1.talkMaxDuration)

			if var_189_16 <= arg_186_1.time_ and arg_186_1.time_ < var_189_16 + var_189_26 then
				arg_186_1.typewritter.percent = (arg_186_1.time_ - var_189_16) / var_189_26

				arg_186_1.typewritter:SetDirty()
			end

			if arg_186_1.time_ >= var_189_16 + var_189_26 and arg_186_1.time_ < var_189_16 + var_189_26 + arg_189_0 then
				arg_186_1.typewritter.percent = 1

				arg_186_1.typewritter:SetDirty()
				arg_186_1:ShowNextGo(true)
			end
		end
	end,
	Play417161047 = function(arg_190_0, arg_190_1)
		arg_190_1.time_ = 0
		arg_190_1.frameCnt_ = 0
		arg_190_1.state_ = "playing"
		arg_190_1.curTalkId_ = 417161047
		arg_190_1.duration_ = 3.1

		SetActive(arg_190_1.tipsGo_, false)

		function arg_190_1.onSingleLineFinish_()
			arg_190_1.onSingleLineUpdate_ = nil
			arg_190_1.onSingleLineFinish_ = nil
			arg_190_1.state_ = "waiting"
		end

		function arg_190_1.playNext_(arg_192_0)
			if arg_192_0 == 1 then
				arg_190_0:Play417161048(arg_190_1)
			end
		end

		function arg_190_1.onSingleLineUpdate_(arg_193_0)
			local var_193_0 = arg_190_1.actors_["10128"]
			local var_193_1 = 0

			if var_193_1 < arg_190_1.time_ and arg_190_1.time_ <= var_193_1 + arg_193_0 and not isNil(var_193_0) and arg_190_1.var_.actorSpriteComps10128 == nil then
				arg_190_1.var_.actorSpriteComps10128 = var_193_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_193_2 = 0.2

			if var_193_1 <= arg_190_1.time_ and arg_190_1.time_ < var_193_1 + var_193_2 and not isNil(var_193_0) then
				local var_193_3 = (arg_190_1.time_ - var_193_1) / var_193_2

				if arg_190_1.var_.actorSpriteComps10128 then
					for iter_193_0, iter_193_1 in pairs(arg_190_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_193_1 then
							if arg_190_1.isInRecall_ then
								local var_193_4 = Mathf.Lerp(iter_193_1.color.r, arg_190_1.hightColor2.r, var_193_3)
								local var_193_5 = Mathf.Lerp(iter_193_1.color.g, arg_190_1.hightColor2.g, var_193_3)
								local var_193_6 = Mathf.Lerp(iter_193_1.color.b, arg_190_1.hightColor2.b, var_193_3)

								iter_193_1.color = Color.New(var_193_4, var_193_5, var_193_6)
							else
								local var_193_7 = Mathf.Lerp(iter_193_1.color.r, 0.5, var_193_3)

								iter_193_1.color = Color.New(var_193_7, var_193_7, var_193_7)
							end
						end
					end
				end
			end

			if arg_190_1.time_ >= var_193_1 + var_193_2 and arg_190_1.time_ < var_193_1 + var_193_2 + arg_193_0 and not isNil(var_193_0) and arg_190_1.var_.actorSpriteComps10128 then
				for iter_193_2, iter_193_3 in pairs(arg_190_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_193_3 then
						if arg_190_1.isInRecall_ then
							iter_193_3.color = arg_190_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_193_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_190_1.var_.actorSpriteComps10128 = nil
			end

			local var_193_8 = arg_190_1.actors_["1095"]
			local var_193_9 = 0

			if var_193_9 < arg_190_1.time_ and arg_190_1.time_ <= var_193_9 + arg_193_0 then
				local var_193_10 = var_193_8:GetComponentInChildren(typeof(CanvasGroup))

				if var_193_10 then
					arg_190_1.var_.alphaOldValue1095 = var_193_10.alpha
					arg_190_1.var_.characterEffect1095 = var_193_10
				end
			end

			local var_193_11 = 0.2

			if var_193_9 <= arg_190_1.time_ and arg_190_1.time_ < var_193_9 + var_193_11 then
				local var_193_12 = (arg_190_1.time_ - var_193_9) / var_193_11
				local var_193_13 = Mathf.Lerp(arg_190_1.var_.alphaOldValue1095, 0.6, var_193_12)

				if arg_190_1.var_.characterEffect1095 then
					arg_190_1.var_.characterEffect1095.alpha = var_193_13
				end
			end

			if arg_190_1.time_ >= var_193_9 + var_193_11 and arg_190_1.time_ < var_193_9 + var_193_11 + arg_193_0 and arg_190_1.var_.characterEffect1095 then
				arg_190_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_193_14 = arg_190_1.actors_["1095"]
			local var_193_15 = 0

			if var_193_15 < arg_190_1.time_ and arg_190_1.time_ <= var_193_15 + arg_193_0 then
				arg_190_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_193_16 = 0
			local var_193_17 = 0.375

			if var_193_16 < arg_190_1.time_ and arg_190_1.time_ <= var_193_16 + arg_193_0 then
				arg_190_1.talkMaxDuration = 0
				arg_190_1.dialogCg_.alpha = 1

				arg_190_1.dialog_:SetActive(true)
				SetActive(arg_190_1.leftNameGo_, true)

				local var_193_18 = arg_190_1:FormatText(StoryNameCfg[471].name)

				arg_190_1.leftNameTxt_.text = var_193_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_190_1.leftNameTxt_.transform)

				arg_190_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_190_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_190_1:RecordName(arg_190_1.leftNameTxt_.text)
				SetActive(arg_190_1.iconTrs_.gameObject, false)
				arg_190_1.callingController_:SetSelectedState("normal")

				local var_193_19 = arg_190_1:GetWordFromCfg(417161047)
				local var_193_20 = arg_190_1:FormatText(var_193_19.content)

				arg_190_1.text_.text = var_193_20

				LuaForUtil.ClearLinePrefixSymbol(arg_190_1.text_)

				local var_193_21 = 15
				local var_193_22 = utf8.len(var_193_20)
				local var_193_23 = var_193_21 <= 0 and var_193_17 or var_193_17 * (var_193_22 / var_193_21)

				if var_193_23 > 0 and var_193_17 < var_193_23 then
					arg_190_1.talkMaxDuration = var_193_23

					if var_193_23 + var_193_16 > arg_190_1.duration_ then
						arg_190_1.duration_ = var_193_23 + var_193_16
					end
				end

				arg_190_1.text_.text = var_193_20
				arg_190_1.typewritter.percent = 0

				arg_190_1.typewritter:SetDirty()
				arg_190_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161047", "story_v_out_417161.awb") ~= 0 then
					local var_193_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161047", "story_v_out_417161.awb") / 1000

					if var_193_24 + var_193_16 > arg_190_1.duration_ then
						arg_190_1.duration_ = var_193_24 + var_193_16
					end

					if var_193_19.prefab_name ~= "" and arg_190_1.actors_[var_193_19.prefab_name] ~= nil then
						local var_193_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_190_1.actors_[var_193_19.prefab_name].transform, "story_v_out_417161", "417161047", "story_v_out_417161.awb")

						arg_190_1:RecordAudio("417161047", var_193_25)
						arg_190_1:RecordAudio("417161047", var_193_25)
					else
						arg_190_1:AudioAction("play", "voice", "story_v_out_417161", "417161047", "story_v_out_417161.awb")
					end

					arg_190_1:RecordHistoryTalkVoice("story_v_out_417161", "417161047", "story_v_out_417161.awb")
				end

				arg_190_1:RecordContent(arg_190_1.text_.text)
			end

			local var_193_26 = math.max(var_193_17, arg_190_1.talkMaxDuration)

			if var_193_16 <= arg_190_1.time_ and arg_190_1.time_ < var_193_16 + var_193_26 then
				arg_190_1.typewritter.percent = (arg_190_1.time_ - var_193_16) / var_193_26

				arg_190_1.typewritter:SetDirty()
			end

			if arg_190_1.time_ >= var_193_16 + var_193_26 and arg_190_1.time_ < var_193_16 + var_193_26 + arg_193_0 then
				arg_190_1.typewritter.percent = 1

				arg_190_1.typewritter:SetDirty()
				arg_190_1:ShowNextGo(true)
			end
		end
	end,
	Play417161048 = function(arg_194_0, arg_194_1)
		arg_194_1.time_ = 0
		arg_194_1.frameCnt_ = 0
		arg_194_1.state_ = "playing"
		arg_194_1.curTalkId_ = 417161048
		arg_194_1.duration_ = 3.2

		SetActive(arg_194_1.tipsGo_, false)

		function arg_194_1.onSingleLineFinish_()
			arg_194_1.onSingleLineUpdate_ = nil
			arg_194_1.onSingleLineFinish_ = nil
			arg_194_1.state_ = "waiting"
		end

		function arg_194_1.playNext_(arg_196_0)
			if arg_196_0 == 1 then
				arg_194_0:Play417161049(arg_194_1)
			end
		end

		function arg_194_1.onSingleLineUpdate_(arg_197_0)
			local var_197_0 = arg_194_1.actors_["10128"]
			local var_197_1 = 0

			if var_197_1 < arg_194_1.time_ and arg_194_1.time_ <= var_197_1 + arg_197_0 and not isNil(var_197_0) and arg_194_1.var_.actorSpriteComps10128 == nil then
				arg_194_1.var_.actorSpriteComps10128 = var_197_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_197_2 = 0.2

			if var_197_1 <= arg_194_1.time_ and arg_194_1.time_ < var_197_1 + var_197_2 and not isNil(var_197_0) then
				local var_197_3 = (arg_194_1.time_ - var_197_1) / var_197_2

				if arg_194_1.var_.actorSpriteComps10128 then
					for iter_197_0, iter_197_1 in pairs(arg_194_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_197_1 then
							if arg_194_1.isInRecall_ then
								local var_197_4 = Mathf.Lerp(iter_197_1.color.r, arg_194_1.hightColor1.r, var_197_3)
								local var_197_5 = Mathf.Lerp(iter_197_1.color.g, arg_194_1.hightColor1.g, var_197_3)
								local var_197_6 = Mathf.Lerp(iter_197_1.color.b, arg_194_1.hightColor1.b, var_197_3)

								iter_197_1.color = Color.New(var_197_4, var_197_5, var_197_6)
							else
								local var_197_7 = Mathf.Lerp(iter_197_1.color.r, 1, var_197_3)

								iter_197_1.color = Color.New(var_197_7, var_197_7, var_197_7)
							end
						end
					end
				end
			end

			if arg_194_1.time_ >= var_197_1 + var_197_2 and arg_194_1.time_ < var_197_1 + var_197_2 + arg_197_0 and not isNil(var_197_0) and arg_194_1.var_.actorSpriteComps10128 then
				for iter_197_2, iter_197_3 in pairs(arg_194_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_197_3 then
						if arg_194_1.isInRecall_ then
							iter_197_3.color = arg_194_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_197_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_194_1.var_.actorSpriteComps10128 = nil
			end

			local var_197_8 = arg_194_1.actors_["1095"]
			local var_197_9 = 0

			if var_197_9 < arg_194_1.time_ and arg_194_1.time_ <= var_197_9 + arg_197_0 and not isNil(var_197_8) and arg_194_1.var_.actorSpriteComps1095 == nil then
				arg_194_1.var_.actorSpriteComps1095 = var_197_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_197_10 = 0.2

			if var_197_9 <= arg_194_1.time_ and arg_194_1.time_ < var_197_9 + var_197_10 and not isNil(var_197_8) then
				local var_197_11 = (arg_194_1.time_ - var_197_9) / var_197_10

				if arg_194_1.var_.actorSpriteComps1095 then
					for iter_197_4, iter_197_5 in pairs(arg_194_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_197_5 then
							if arg_194_1.isInRecall_ then
								local var_197_12 = Mathf.Lerp(iter_197_5.color.r, arg_194_1.hightColor2.r, var_197_11)
								local var_197_13 = Mathf.Lerp(iter_197_5.color.g, arg_194_1.hightColor2.g, var_197_11)
								local var_197_14 = Mathf.Lerp(iter_197_5.color.b, arg_194_1.hightColor2.b, var_197_11)

								iter_197_5.color = Color.New(var_197_12, var_197_13, var_197_14)
							else
								local var_197_15 = Mathf.Lerp(iter_197_5.color.r, 0.5, var_197_11)

								iter_197_5.color = Color.New(var_197_15, var_197_15, var_197_15)
							end
						end
					end
				end
			end

			if arg_194_1.time_ >= var_197_9 + var_197_10 and arg_194_1.time_ < var_197_9 + var_197_10 + arg_197_0 and not isNil(var_197_8) and arg_194_1.var_.actorSpriteComps1095 then
				for iter_197_6, iter_197_7 in pairs(arg_194_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_197_7 then
						if arg_194_1.isInRecall_ then
							iter_197_7.color = arg_194_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_197_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_194_1.var_.actorSpriteComps1095 = nil
			end

			local var_197_16 = 0
			local var_197_17 = 0.3

			if var_197_16 < arg_194_1.time_ and arg_194_1.time_ <= var_197_16 + arg_197_0 then
				arg_194_1.talkMaxDuration = 0
				arg_194_1.dialogCg_.alpha = 1

				arg_194_1.dialog_:SetActive(true)
				SetActive(arg_194_1.leftNameGo_, true)

				local var_197_18 = arg_194_1:FormatText(StoryNameCfg[595].name)

				arg_194_1.leftNameTxt_.text = var_197_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_194_1.leftNameTxt_.transform)

				arg_194_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_194_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_194_1:RecordName(arg_194_1.leftNameTxt_.text)
				SetActive(arg_194_1.iconTrs_.gameObject, false)
				arg_194_1.callingController_:SetSelectedState("normal")

				local var_197_19 = arg_194_1:GetWordFromCfg(417161048)
				local var_197_20 = arg_194_1:FormatText(var_197_19.content)

				arg_194_1.text_.text = var_197_20

				LuaForUtil.ClearLinePrefixSymbol(arg_194_1.text_)

				local var_197_21 = 12
				local var_197_22 = utf8.len(var_197_20)
				local var_197_23 = var_197_21 <= 0 and var_197_17 or var_197_17 * (var_197_22 / var_197_21)

				if var_197_23 > 0 and var_197_17 < var_197_23 then
					arg_194_1.talkMaxDuration = var_197_23

					if var_197_23 + var_197_16 > arg_194_1.duration_ then
						arg_194_1.duration_ = var_197_23 + var_197_16
					end
				end

				arg_194_1.text_.text = var_197_20
				arg_194_1.typewritter.percent = 0

				arg_194_1.typewritter:SetDirty()
				arg_194_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161048", "story_v_out_417161.awb") ~= 0 then
					local var_197_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161048", "story_v_out_417161.awb") / 1000

					if var_197_24 + var_197_16 > arg_194_1.duration_ then
						arg_194_1.duration_ = var_197_24 + var_197_16
					end

					if var_197_19.prefab_name ~= "" and arg_194_1.actors_[var_197_19.prefab_name] ~= nil then
						local var_197_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_194_1.actors_[var_197_19.prefab_name].transform, "story_v_out_417161", "417161048", "story_v_out_417161.awb")

						arg_194_1:RecordAudio("417161048", var_197_25)
						arg_194_1:RecordAudio("417161048", var_197_25)
					else
						arg_194_1:AudioAction("play", "voice", "story_v_out_417161", "417161048", "story_v_out_417161.awb")
					end

					arg_194_1:RecordHistoryTalkVoice("story_v_out_417161", "417161048", "story_v_out_417161.awb")
				end

				arg_194_1:RecordContent(arg_194_1.text_.text)
			end

			local var_197_26 = math.max(var_197_17, arg_194_1.talkMaxDuration)

			if var_197_16 <= arg_194_1.time_ and arg_194_1.time_ < var_197_16 + var_197_26 then
				arg_194_1.typewritter.percent = (arg_194_1.time_ - var_197_16) / var_197_26

				arg_194_1.typewritter:SetDirty()
			end

			if arg_194_1.time_ >= var_197_16 + var_197_26 and arg_194_1.time_ < var_197_16 + var_197_26 + arg_197_0 then
				arg_194_1.typewritter.percent = 1

				arg_194_1.typewritter:SetDirty()
				arg_194_1:ShowNextGo(true)
			end
		end
	end,
	Play417161049 = function(arg_198_0, arg_198_1)
		arg_198_1.time_ = 0
		arg_198_1.frameCnt_ = 0
		arg_198_1.state_ = "playing"
		arg_198_1.curTalkId_ = 417161049
		arg_198_1.duration_ = 6.4

		SetActive(arg_198_1.tipsGo_, false)

		function arg_198_1.onSingleLineFinish_()
			arg_198_1.onSingleLineUpdate_ = nil
			arg_198_1.onSingleLineFinish_ = nil
			arg_198_1.state_ = "waiting"
		end

		function arg_198_1.playNext_(arg_200_0)
			if arg_200_0 == 1 then
				arg_198_0:Play417161050(arg_198_1)
			end
		end

		function arg_198_1.onSingleLineUpdate_(arg_201_0)
			local var_201_0 = arg_198_1.actors_["10128"]
			local var_201_1 = 0

			if var_201_1 < arg_198_1.time_ and arg_198_1.time_ <= var_201_1 + arg_201_0 and not isNil(var_201_0) and arg_198_1.var_.actorSpriteComps10128 == nil then
				arg_198_1.var_.actorSpriteComps10128 = var_201_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_201_2 = 0.2

			if var_201_1 <= arg_198_1.time_ and arg_198_1.time_ < var_201_1 + var_201_2 and not isNil(var_201_0) then
				local var_201_3 = (arg_198_1.time_ - var_201_1) / var_201_2

				if arg_198_1.var_.actorSpriteComps10128 then
					for iter_201_0, iter_201_1 in pairs(arg_198_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_201_1 then
							if arg_198_1.isInRecall_ then
								local var_201_4 = Mathf.Lerp(iter_201_1.color.r, arg_198_1.hightColor2.r, var_201_3)
								local var_201_5 = Mathf.Lerp(iter_201_1.color.g, arg_198_1.hightColor2.g, var_201_3)
								local var_201_6 = Mathf.Lerp(iter_201_1.color.b, arg_198_1.hightColor2.b, var_201_3)

								iter_201_1.color = Color.New(var_201_4, var_201_5, var_201_6)
							else
								local var_201_7 = Mathf.Lerp(iter_201_1.color.r, 0.5, var_201_3)

								iter_201_1.color = Color.New(var_201_7, var_201_7, var_201_7)
							end
						end
					end
				end
			end

			if arg_198_1.time_ >= var_201_1 + var_201_2 and arg_198_1.time_ < var_201_1 + var_201_2 + arg_201_0 and not isNil(var_201_0) and arg_198_1.var_.actorSpriteComps10128 then
				for iter_201_2, iter_201_3 in pairs(arg_198_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_201_3 then
						if arg_198_1.isInRecall_ then
							iter_201_3.color = arg_198_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_201_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_198_1.var_.actorSpriteComps10128 = nil
			end

			local var_201_8 = arg_198_1.actors_["1095"].transform
			local var_201_9 = 0

			if var_201_9 < arg_198_1.time_ and arg_198_1.time_ <= var_201_9 + arg_201_0 then
				arg_198_1.var_.moveOldPos1095 = var_201_8.localPosition
				var_201_8.localScale = Vector3.New(1, 1, 1)

				arg_198_1:CheckSpriteTmpPos("1095", 4)

				local var_201_10 = var_201_8.childCount

				for iter_201_4 = 0, var_201_10 - 1 do
					local var_201_11 = var_201_8:GetChild(iter_201_4)

					if var_201_11.name == "split_2" or not string.find(var_201_11.name, "split") then
						var_201_11.gameObject:SetActive(true)
					else
						var_201_11.gameObject:SetActive(false)
					end
				end
			end

			local var_201_12 = 0.001

			if var_201_9 <= arg_198_1.time_ and arg_198_1.time_ < var_201_9 + var_201_12 then
				local var_201_13 = (arg_198_1.time_ - var_201_9) / var_201_12
				local var_201_14 = Vector3.New(390, -340, -285)

				var_201_8.localPosition = Vector3.Lerp(arg_198_1.var_.moveOldPos1095, var_201_14, var_201_13)
			end

			if arg_198_1.time_ >= var_201_9 + var_201_12 and arg_198_1.time_ < var_201_9 + var_201_12 + arg_201_0 then
				var_201_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_201_15 = arg_198_1.actors_["1095"]
			local var_201_16 = 0

			if var_201_16 < arg_198_1.time_ and arg_198_1.time_ <= var_201_16 + arg_201_0 then
				arg_198_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_201_17 = arg_198_1.actors_["1095"]
			local var_201_18 = 0

			if var_201_18 < arg_198_1.time_ and arg_198_1.time_ <= var_201_18 + arg_201_0 then
				local var_201_19 = var_201_17:GetComponentInChildren(typeof(CanvasGroup))

				if var_201_19 then
					arg_198_1.var_.alphaOldValue1095 = var_201_19.alpha
					arg_198_1.var_.characterEffect1095 = var_201_19
				end
			end

			local var_201_20 = 0.2

			if var_201_18 <= arg_198_1.time_ and arg_198_1.time_ < var_201_18 + var_201_20 then
				local var_201_21 = (arg_198_1.time_ - var_201_18) / var_201_20
				local var_201_22 = Mathf.Lerp(arg_198_1.var_.alphaOldValue1095, 0.6, var_201_21)

				if arg_198_1.var_.characterEffect1095 then
					arg_198_1.var_.characterEffect1095.alpha = var_201_22
				end
			end

			if arg_198_1.time_ >= var_201_18 + var_201_20 and arg_198_1.time_ < var_201_18 + var_201_20 + arg_201_0 and arg_198_1.var_.characterEffect1095 then
				arg_198_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_201_23 = 0
			local var_201_24 = 0.7

			if var_201_23 < arg_198_1.time_ and arg_198_1.time_ <= var_201_23 + arg_201_0 then
				arg_198_1.talkMaxDuration = 0
				arg_198_1.dialogCg_.alpha = 1

				arg_198_1.dialog_:SetActive(true)
				SetActive(arg_198_1.leftNameGo_, true)

				local var_201_25 = arg_198_1:FormatText(StoryNameCfg[471].name)

				arg_198_1.leftNameTxt_.text = var_201_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_198_1.leftNameTxt_.transform)

				arg_198_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_198_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_198_1:RecordName(arg_198_1.leftNameTxt_.text)
				SetActive(arg_198_1.iconTrs_.gameObject, false)
				arg_198_1.callingController_:SetSelectedState("normal")

				local var_201_26 = arg_198_1:GetWordFromCfg(417161049)
				local var_201_27 = arg_198_1:FormatText(var_201_26.content)

				arg_198_1.text_.text = var_201_27

				LuaForUtil.ClearLinePrefixSymbol(arg_198_1.text_)

				local var_201_28 = 28
				local var_201_29 = utf8.len(var_201_27)
				local var_201_30 = var_201_28 <= 0 and var_201_24 or var_201_24 * (var_201_29 / var_201_28)

				if var_201_30 > 0 and var_201_24 < var_201_30 then
					arg_198_1.talkMaxDuration = var_201_30

					if var_201_30 + var_201_23 > arg_198_1.duration_ then
						arg_198_1.duration_ = var_201_30 + var_201_23
					end
				end

				arg_198_1.text_.text = var_201_27
				arg_198_1.typewritter.percent = 0

				arg_198_1.typewritter:SetDirty()
				arg_198_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161049", "story_v_out_417161.awb") ~= 0 then
					local var_201_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161049", "story_v_out_417161.awb") / 1000

					if var_201_31 + var_201_23 > arg_198_1.duration_ then
						arg_198_1.duration_ = var_201_31 + var_201_23
					end

					if var_201_26.prefab_name ~= "" and arg_198_1.actors_[var_201_26.prefab_name] ~= nil then
						local var_201_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_198_1.actors_[var_201_26.prefab_name].transform, "story_v_out_417161", "417161049", "story_v_out_417161.awb")

						arg_198_1:RecordAudio("417161049", var_201_32)
						arg_198_1:RecordAudio("417161049", var_201_32)
					else
						arg_198_1:AudioAction("play", "voice", "story_v_out_417161", "417161049", "story_v_out_417161.awb")
					end

					arg_198_1:RecordHistoryTalkVoice("story_v_out_417161", "417161049", "story_v_out_417161.awb")
				end

				arg_198_1:RecordContent(arg_198_1.text_.text)
			end

			local var_201_33 = math.max(var_201_24, arg_198_1.talkMaxDuration)

			if var_201_23 <= arg_198_1.time_ and arg_198_1.time_ < var_201_23 + var_201_33 then
				arg_198_1.typewritter.percent = (arg_198_1.time_ - var_201_23) / var_201_33

				arg_198_1.typewritter:SetDirty()
			end

			if arg_198_1.time_ >= var_201_23 + var_201_33 and arg_198_1.time_ < var_201_23 + var_201_33 + arg_201_0 then
				arg_198_1.typewritter.percent = 1

				arg_198_1.typewritter:SetDirty()
				arg_198_1:ShowNextGo(true)
			end
		end
	end,
	Play417161050 = function(arg_202_0, arg_202_1)
		arg_202_1.time_ = 0
		arg_202_1.frameCnt_ = 0
		arg_202_1.state_ = "playing"
		arg_202_1.curTalkId_ = 417161050
		arg_202_1.duration_ = 5

		SetActive(arg_202_1.tipsGo_, false)

		function arg_202_1.onSingleLineFinish_()
			arg_202_1.onSingleLineUpdate_ = nil
			arg_202_1.onSingleLineFinish_ = nil
			arg_202_1.state_ = "waiting"
		end

		function arg_202_1.playNext_(arg_204_0)
			if arg_204_0 == 1 then
				arg_202_0:Play417161051(arg_202_1)
			end
		end

		function arg_202_1.onSingleLineUpdate_(arg_205_0)
			local var_205_0 = arg_202_1.actors_["10128"].transform
			local var_205_1 = 0

			if var_205_1 < arg_202_1.time_ and arg_202_1.time_ <= var_205_1 + arg_205_0 then
				arg_202_1.var_.moveOldPos10128 = var_205_0.localPosition
				var_205_0.localScale = Vector3.New(1, 1, 1)

				arg_202_1:CheckSpriteTmpPos("10128", 7)

				local var_205_2 = var_205_0.childCount

				for iter_205_0 = 0, var_205_2 - 1 do
					local var_205_3 = var_205_0:GetChild(iter_205_0)

					if var_205_3.name == "" or not string.find(var_205_3.name, "split") then
						var_205_3.gameObject:SetActive(true)
					else
						var_205_3.gameObject:SetActive(false)
					end
				end
			end

			local var_205_4 = 0.001

			if var_205_1 <= arg_202_1.time_ and arg_202_1.time_ < var_205_1 + var_205_4 then
				local var_205_5 = (arg_202_1.time_ - var_205_1) / var_205_4
				local var_205_6 = Vector3.New(0, -2000, -300)

				var_205_0.localPosition = Vector3.Lerp(arg_202_1.var_.moveOldPos10128, var_205_6, var_205_5)
			end

			if arg_202_1.time_ >= var_205_1 + var_205_4 and arg_202_1.time_ < var_205_1 + var_205_4 + arg_205_0 then
				var_205_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_205_7 = arg_202_1.actors_["1095"].transform
			local var_205_8 = 0

			if var_205_8 < arg_202_1.time_ and arg_202_1.time_ <= var_205_8 + arg_205_0 then
				arg_202_1.var_.moveOldPos1095 = var_205_7.localPosition
				var_205_7.localScale = Vector3.New(1, 1, 1)

				arg_202_1:CheckSpriteTmpPos("1095", 7)

				local var_205_9 = var_205_7.childCount

				for iter_205_1 = 0, var_205_9 - 1 do
					local var_205_10 = var_205_7:GetChild(iter_205_1)

					if var_205_10.name == "" or not string.find(var_205_10.name, "split") then
						var_205_10.gameObject:SetActive(true)
					else
						var_205_10.gameObject:SetActive(false)
					end
				end
			end

			local var_205_11 = 0.001

			if var_205_8 <= arg_202_1.time_ and arg_202_1.time_ < var_205_8 + var_205_11 then
				local var_205_12 = (arg_202_1.time_ - var_205_8) / var_205_11
				local var_205_13 = Vector3.New(0, -2000, 0)

				var_205_7.localPosition = Vector3.Lerp(arg_202_1.var_.moveOldPos1095, var_205_13, var_205_12)
			end

			if arg_202_1.time_ >= var_205_8 + var_205_11 and arg_202_1.time_ < var_205_8 + var_205_11 + arg_205_0 then
				var_205_7.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_205_14 = 0.533333333333333
			local var_205_15 = 1

			if var_205_14 < arg_202_1.time_ and arg_202_1.time_ <= var_205_14 + arg_205_0 then
				local var_205_16 = "play"
				local var_205_17 = "effect"

				arg_202_1:AudioAction(var_205_16, var_205_17, "ui_system_3_0", "ui_sight_archieve_in", "")
			end

			local var_205_18 = 0
			local var_205_19 = 0.65

			if var_205_18 < arg_202_1.time_ and arg_202_1.time_ <= var_205_18 + arg_205_0 then
				arg_202_1.talkMaxDuration = 0
				arg_202_1.dialogCg_.alpha = 1

				arg_202_1.dialog_:SetActive(true)
				SetActive(arg_202_1.leftNameGo_, false)

				arg_202_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_202_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_202_1:RecordName(arg_202_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_202_1.iconTrs_.gameObject, false)
				arg_202_1.callingController_:SetSelectedState("normal")

				local var_205_20 = arg_202_1:GetWordFromCfg(417161050)
				local var_205_21 = arg_202_1:FormatText(var_205_20.content)

				arg_202_1.text_.text = var_205_21

				LuaForUtil.ClearLinePrefixSymbol(arg_202_1.text_)

				local var_205_22 = 26
				local var_205_23 = utf8.len(var_205_21)
				local var_205_24 = var_205_22 <= 0 and var_205_19 or var_205_19 * (var_205_23 / var_205_22)

				if var_205_24 > 0 and var_205_19 < var_205_24 then
					arg_202_1.talkMaxDuration = var_205_24

					if var_205_24 + var_205_18 > arg_202_1.duration_ then
						arg_202_1.duration_ = var_205_24 + var_205_18
					end
				end

				arg_202_1.text_.text = var_205_21
				arg_202_1.typewritter.percent = 0

				arg_202_1.typewritter:SetDirty()
				arg_202_1:ShowNextGo(false)
				arg_202_1:RecordContent(arg_202_1.text_.text)
			end

			local var_205_25 = math.max(var_205_19, arg_202_1.talkMaxDuration)

			if var_205_18 <= arg_202_1.time_ and arg_202_1.time_ < var_205_18 + var_205_25 then
				arg_202_1.typewritter.percent = (arg_202_1.time_ - var_205_18) / var_205_25

				arg_202_1.typewritter:SetDirty()
			end

			if arg_202_1.time_ >= var_205_18 + var_205_25 and arg_202_1.time_ < var_205_18 + var_205_25 + arg_205_0 then
				arg_202_1.typewritter.percent = 1

				arg_202_1.typewritter:SetDirty()
				arg_202_1:ShowNextGo(true)
			end
		end
	end,
	Play417161051 = function(arg_206_0, arg_206_1)
		arg_206_1.time_ = 0
		arg_206_1.frameCnt_ = 0
		arg_206_1.state_ = "playing"
		arg_206_1.curTalkId_ = 417161051
		arg_206_1.duration_ = 3.27

		SetActive(arg_206_1.tipsGo_, false)

		function arg_206_1.onSingleLineFinish_()
			arg_206_1.onSingleLineUpdate_ = nil
			arg_206_1.onSingleLineFinish_ = nil
			arg_206_1.state_ = "waiting"
		end

		function arg_206_1.playNext_(arg_208_0)
			if arg_208_0 == 1 then
				arg_206_0:Play417161052(arg_206_1)
			end
		end

		function arg_206_1.onSingleLineUpdate_(arg_209_0)
			local var_209_0 = arg_206_1.actors_["10128"]
			local var_209_1 = 0

			if var_209_1 < arg_206_1.time_ and arg_206_1.time_ <= var_209_1 + arg_209_0 and not isNil(var_209_0) and arg_206_1.var_.actorSpriteComps10128 == nil then
				arg_206_1.var_.actorSpriteComps10128 = var_209_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_209_2 = 0.2

			if var_209_1 <= arg_206_1.time_ and arg_206_1.time_ < var_209_1 + var_209_2 and not isNil(var_209_0) then
				local var_209_3 = (arg_206_1.time_ - var_209_1) / var_209_2

				if arg_206_1.var_.actorSpriteComps10128 then
					for iter_209_0, iter_209_1 in pairs(arg_206_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_209_1 then
							if arg_206_1.isInRecall_ then
								local var_209_4 = Mathf.Lerp(iter_209_1.color.r, arg_206_1.hightColor1.r, var_209_3)
								local var_209_5 = Mathf.Lerp(iter_209_1.color.g, arg_206_1.hightColor1.g, var_209_3)
								local var_209_6 = Mathf.Lerp(iter_209_1.color.b, arg_206_1.hightColor1.b, var_209_3)

								iter_209_1.color = Color.New(var_209_4, var_209_5, var_209_6)
							else
								local var_209_7 = Mathf.Lerp(iter_209_1.color.r, 1, var_209_3)

								iter_209_1.color = Color.New(var_209_7, var_209_7, var_209_7)
							end
						end
					end
				end
			end

			if arg_206_1.time_ >= var_209_1 + var_209_2 and arg_206_1.time_ < var_209_1 + var_209_2 + arg_209_0 and not isNil(var_209_0) and arg_206_1.var_.actorSpriteComps10128 then
				for iter_209_2, iter_209_3 in pairs(arg_206_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_209_3 then
						if arg_206_1.isInRecall_ then
							iter_209_3.color = arg_206_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_209_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_206_1.var_.actorSpriteComps10128 = nil
			end

			local var_209_8 = arg_206_1.actors_["10128"].transform
			local var_209_9 = 0

			if var_209_9 < arg_206_1.time_ and arg_206_1.time_ <= var_209_9 + arg_209_0 then
				arg_206_1.var_.moveOldPos10128 = var_209_8.localPosition
				var_209_8.localScale = Vector3.New(1, 1, 1)

				arg_206_1:CheckSpriteTmpPos("10128", 3)

				local var_209_10 = var_209_8.childCount

				for iter_209_4 = 0, var_209_10 - 1 do
					local var_209_11 = var_209_8:GetChild(iter_209_4)

					if var_209_11.name == "split_2" or not string.find(var_209_11.name, "split") then
						var_209_11.gameObject:SetActive(true)
					else
						var_209_11.gameObject:SetActive(false)
					end
				end
			end

			local var_209_12 = 0.001

			if var_209_9 <= arg_206_1.time_ and arg_206_1.time_ < var_209_9 + var_209_12 then
				local var_209_13 = (arg_206_1.time_ - var_209_9) / var_209_12
				local var_209_14 = Vector3.New(0, -347, -300)

				var_209_8.localPosition = Vector3.Lerp(arg_206_1.var_.moveOldPos10128, var_209_14, var_209_13)
			end

			if arg_206_1.time_ >= var_209_9 + var_209_12 and arg_206_1.time_ < var_209_9 + var_209_12 + arg_209_0 then
				var_209_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_209_15 = 0
			local var_209_16 = 0.375

			if var_209_15 < arg_206_1.time_ and arg_206_1.time_ <= var_209_15 + arg_209_0 then
				arg_206_1.talkMaxDuration = 0
				arg_206_1.dialogCg_.alpha = 1

				arg_206_1.dialog_:SetActive(true)
				SetActive(arg_206_1.leftNameGo_, true)

				local var_209_17 = arg_206_1:FormatText(StoryNameCfg[595].name)

				arg_206_1.leftNameTxt_.text = var_209_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_206_1.leftNameTxt_.transform)

				arg_206_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_206_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_206_1:RecordName(arg_206_1.leftNameTxt_.text)
				SetActive(arg_206_1.iconTrs_.gameObject, false)
				arg_206_1.callingController_:SetSelectedState("normal")

				local var_209_18 = arg_206_1:GetWordFromCfg(417161051)
				local var_209_19 = arg_206_1:FormatText(var_209_18.content)

				arg_206_1.text_.text = var_209_19

				LuaForUtil.ClearLinePrefixSymbol(arg_206_1.text_)

				local var_209_20 = 15
				local var_209_21 = utf8.len(var_209_19)
				local var_209_22 = var_209_20 <= 0 and var_209_16 or var_209_16 * (var_209_21 / var_209_20)

				if var_209_22 > 0 and var_209_16 < var_209_22 then
					arg_206_1.talkMaxDuration = var_209_22

					if var_209_22 + var_209_15 > arg_206_1.duration_ then
						arg_206_1.duration_ = var_209_22 + var_209_15
					end
				end

				arg_206_1.text_.text = var_209_19
				arg_206_1.typewritter.percent = 0

				arg_206_1.typewritter:SetDirty()
				arg_206_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161051", "story_v_out_417161.awb") ~= 0 then
					local var_209_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161051", "story_v_out_417161.awb") / 1000

					if var_209_23 + var_209_15 > arg_206_1.duration_ then
						arg_206_1.duration_ = var_209_23 + var_209_15
					end

					if var_209_18.prefab_name ~= "" and arg_206_1.actors_[var_209_18.prefab_name] ~= nil then
						local var_209_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_206_1.actors_[var_209_18.prefab_name].transform, "story_v_out_417161", "417161051", "story_v_out_417161.awb")

						arg_206_1:RecordAudio("417161051", var_209_24)
						arg_206_1:RecordAudio("417161051", var_209_24)
					else
						arg_206_1:AudioAction("play", "voice", "story_v_out_417161", "417161051", "story_v_out_417161.awb")
					end

					arg_206_1:RecordHistoryTalkVoice("story_v_out_417161", "417161051", "story_v_out_417161.awb")
				end

				arg_206_1:RecordContent(arg_206_1.text_.text)
			end

			local var_209_25 = math.max(var_209_16, arg_206_1.talkMaxDuration)

			if var_209_15 <= arg_206_1.time_ and arg_206_1.time_ < var_209_15 + var_209_25 then
				arg_206_1.typewritter.percent = (arg_206_1.time_ - var_209_15) / var_209_25

				arg_206_1.typewritter:SetDirty()
			end

			if arg_206_1.time_ >= var_209_15 + var_209_25 and arg_206_1.time_ < var_209_15 + var_209_25 + arg_209_0 then
				arg_206_1.typewritter.percent = 1

				arg_206_1.typewritter:SetDirty()
				arg_206_1:ShowNextGo(true)
			end
		end
	end,
	Play417161052 = function(arg_210_0, arg_210_1)
		arg_210_1.time_ = 0
		arg_210_1.frameCnt_ = 0
		arg_210_1.state_ = "playing"
		arg_210_1.curTalkId_ = 417161052
		arg_210_1.duration_ = 4

		SetActive(arg_210_1.tipsGo_, false)

		function arg_210_1.onSingleLineFinish_()
			arg_210_1.onSingleLineUpdate_ = nil
			arg_210_1.onSingleLineFinish_ = nil
			arg_210_1.state_ = "waiting"
		end

		function arg_210_1.playNext_(arg_212_0)
			if arg_212_0 == 1 then
				arg_210_0:Play417161053(arg_210_1)
			end
		end

		function arg_210_1.onSingleLineUpdate_(arg_213_0)
			local var_213_0 = "STblack"

			if arg_210_1.bgs_[var_213_0] == nil then
				local var_213_1 = Object.Instantiate(arg_210_1.paintGo_)

				var_213_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_213_0)
				var_213_1.name = var_213_0
				var_213_1.transform.parent = arg_210_1.stage_.transform
				var_213_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_210_1.bgs_[var_213_0] = var_213_1
			end

			local var_213_2 = 2

			if var_213_2 < arg_210_1.time_ and arg_210_1.time_ <= var_213_2 + arg_213_0 then
				local var_213_3 = manager.ui.mainCamera.transform.localPosition
				local var_213_4 = Vector3.New(0, 0, 10) + Vector3.New(var_213_3.x, var_213_3.y, 0)
				local var_213_5 = arg_210_1.bgs_.STblack

				var_213_5.transform.localPosition = var_213_4
				var_213_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_213_6 = var_213_5:GetComponent("SpriteRenderer")

				if var_213_6 and var_213_6.sprite then
					local var_213_7 = (var_213_5.transform.localPosition - var_213_3).z
					local var_213_8 = manager.ui.mainCameraCom_
					local var_213_9 = 2 * var_213_7 * Mathf.Tan(var_213_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_213_10 = var_213_9 * var_213_8.aspect
					local var_213_11 = var_213_6.sprite.bounds.size.x
					local var_213_12 = var_213_6.sprite.bounds.size.y
					local var_213_13 = var_213_10 / var_213_11
					local var_213_14 = var_213_9 / var_213_12
					local var_213_15 = var_213_14 < var_213_13 and var_213_13 or var_213_14

					var_213_5.transform.localScale = Vector3.New(var_213_15, var_213_15, 0)
				end

				for iter_213_0, iter_213_1 in pairs(arg_210_1.bgs_) do
					if iter_213_0 ~= "STblack" then
						iter_213_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_213_16 = 0

			if var_213_16 < arg_210_1.time_ and arg_210_1.time_ <= var_213_16 + arg_213_0 then
				arg_210_1.mask_.enabled = true
				arg_210_1.mask_.raycastTarget = true

				arg_210_1:SetGaussion(false)
			end

			local var_213_17 = 2

			if var_213_16 <= arg_210_1.time_ and arg_210_1.time_ < var_213_16 + var_213_17 then
				local var_213_18 = (arg_210_1.time_ - var_213_16) / var_213_17
				local var_213_19 = Color.New(0, 0, 0)

				var_213_19.a = Mathf.Lerp(0, 1, var_213_18)
				arg_210_1.mask_.color = var_213_19
			end

			if arg_210_1.time_ >= var_213_16 + var_213_17 and arg_210_1.time_ < var_213_16 + var_213_17 + arg_213_0 then
				local var_213_20 = Color.New(0, 0, 0)

				var_213_20.a = 1
				arg_210_1.mask_.color = var_213_20
			end

			local var_213_21 = 2

			if var_213_21 < arg_210_1.time_ and arg_210_1.time_ <= var_213_21 + arg_213_0 then
				arg_210_1.mask_.enabled = true
				arg_210_1.mask_.raycastTarget = true

				arg_210_1:SetGaussion(false)
			end

			local var_213_22 = 2

			if var_213_21 <= arg_210_1.time_ and arg_210_1.time_ < var_213_21 + var_213_22 then
				local var_213_23 = (arg_210_1.time_ - var_213_21) / var_213_22
				local var_213_24 = Color.New(0, 0, 0)

				var_213_24.a = Mathf.Lerp(1, 0, var_213_23)
				arg_210_1.mask_.color = var_213_24
			end

			if arg_210_1.time_ >= var_213_21 + var_213_22 and arg_210_1.time_ < var_213_21 + var_213_22 + arg_213_0 then
				local var_213_25 = Color.New(0, 0, 0)
				local var_213_26 = 0

				arg_210_1.mask_.enabled = false
				var_213_25.a = var_213_26
				arg_210_1.mask_.color = var_213_25
			end

			local var_213_27 = arg_210_1.actors_["10128"].transform
			local var_213_28 = 1.966

			if var_213_28 < arg_210_1.time_ and arg_210_1.time_ <= var_213_28 + arg_213_0 then
				arg_210_1.var_.moveOldPos10128 = var_213_27.localPosition
				var_213_27.localScale = Vector3.New(1, 1, 1)

				arg_210_1:CheckSpriteTmpPos("10128", 7)

				local var_213_29 = var_213_27.childCount

				for iter_213_2 = 0, var_213_29 - 1 do
					local var_213_30 = var_213_27:GetChild(iter_213_2)

					if var_213_30.name == "" or not string.find(var_213_30.name, "split") then
						var_213_30.gameObject:SetActive(true)
					else
						var_213_30.gameObject:SetActive(false)
					end
				end
			end

			local var_213_31 = 0.001

			if var_213_28 <= arg_210_1.time_ and arg_210_1.time_ < var_213_28 + var_213_31 then
				local var_213_32 = (arg_210_1.time_ - var_213_28) / var_213_31
				local var_213_33 = Vector3.New(0, -2000, -300)

				var_213_27.localPosition = Vector3.Lerp(arg_210_1.var_.moveOldPos10128, var_213_33, var_213_32)
			end

			if arg_210_1.time_ >= var_213_28 + var_213_31 and arg_210_1.time_ < var_213_28 + var_213_31 + arg_213_0 then
				var_213_27.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_213_34 = 2

			if var_213_34 < arg_210_1.time_ and arg_210_1.time_ <= var_213_34 + arg_213_0 then
				arg_210_1.fswbg_:SetActive(true)
				arg_210_1.dialog_:SetActive(false)

				arg_210_1.fswtw_.percent = 0

				local var_213_35 = arg_210_1:GetWordFromCfg(417161052)
				local var_213_36 = arg_210_1:FormatText(var_213_35.content)

				arg_210_1.fswt_.text = var_213_36

				LuaForUtil.ClearLinePrefixSymbol(arg_210_1.fswt_)

				arg_210_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_210_1.fswtw_:SetDirty()

				arg_210_1.typewritterCharCountI18N = 0

				arg_210_1:ShowNextGo(false)
			end

			local var_213_37 = 3.33333333333333

			if var_213_37 < arg_210_1.time_ and arg_210_1.time_ <= var_213_37 + arg_213_0 then
				arg_210_1.var_.oldValueTypewriter = arg_210_1.fswtw_.percent

				arg_210_1:ShowNextGo(false)
			end

			local var_213_38 = 5
			local var_213_39 = 0.333333333333333
			local var_213_40 = arg_210_1:GetWordFromCfg(417161052)
			local var_213_41 = arg_210_1:FormatText(var_213_40.content)
			local var_213_42, var_213_43 = arg_210_1:GetPercentByPara(var_213_41, 1)

			if var_213_37 < arg_210_1.time_ and arg_210_1.time_ <= var_213_37 + arg_213_0 then
				arg_210_1.talkMaxDuration = 0

				local var_213_44 = var_213_38 <= 0 and var_213_39 or var_213_39 * ((var_213_43 - arg_210_1.typewritterCharCountI18N) / var_213_38)

				if var_213_44 > 0 and var_213_39 < var_213_44 then
					arg_210_1.talkMaxDuration = var_213_44

					if var_213_44 + var_213_37 > arg_210_1.duration_ then
						arg_210_1.duration_ = var_213_44 + var_213_37
					end
				end
			end

			local var_213_45 = 0.333333333333333
			local var_213_46 = math.max(var_213_45, arg_210_1.talkMaxDuration)

			if var_213_37 <= arg_210_1.time_ and arg_210_1.time_ < var_213_37 + var_213_46 then
				local var_213_47 = (arg_210_1.time_ - var_213_37) / var_213_46

				arg_210_1.fswtw_.percent = Mathf.Lerp(arg_210_1.var_.oldValueTypewriter, var_213_42, var_213_47)
				arg_210_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_210_1.fswtw_:SetDirty()
			end

			if arg_210_1.time_ >= var_213_37 + var_213_46 and arg_210_1.time_ < var_213_37 + var_213_46 + arg_213_0 then
				arg_210_1.fswtw_.percent = var_213_42

				arg_210_1.fswtw_:SetDirty()
				arg_210_1:ShowNextGo(true)

				arg_210_1.typewritterCharCountI18N = var_213_43
			end

			local var_213_48 = 2.01666666666667

			if var_213_48 < arg_210_1.time_ and arg_210_1.time_ <= var_213_48 + arg_213_0 then
				local var_213_49 = arg_210_1.fswbg_.transform:Find("textbox/adapt/content") or arg_210_1.fswbg_.transform:Find("textbox/content")
				local var_213_50 = var_213_49:GetComponent("Text")
				local var_213_51 = var_213_49:GetComponent("RectTransform")

				var_213_50.alignment = UnityEngine.TextAnchor.MiddleLeft
				var_213_51.offsetMin = Vector2.New(0, 0)
				var_213_51.offsetMax = Vector2.New(0, 0)
			end

			local var_213_52 = 0
			local var_213_53 = 0.2

			if var_213_52 < arg_210_1.time_ and arg_210_1.time_ <= var_213_52 + arg_213_0 then
				local var_213_54 = "play"
				local var_213_55 = "music"

				arg_210_1:AudioAction(var_213_54, var_213_55, "ui_battle", "ui_battle_stopbgm", "")

				local var_213_56 = ""
				local var_213_57 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_213_57 ~= "" then
					if arg_210_1.bgmTxt_.text ~= var_213_57 and arg_210_1.bgmTxt_.text ~= "" then
						if arg_210_1.bgmTxt2_.text ~= "" then
							arg_210_1.bgmTxt_.text = arg_210_1.bgmTxt2_.text
						end

						arg_210_1.bgmTxt2_.text = var_213_57

						arg_210_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_210_1.bgmTxt_.text = var_213_57
					end

					if arg_210_1.bgmTimer then
						arg_210_1.bgmTimer:Stop()

						arg_210_1.bgmTimer = nil
					end

					if arg_210_1.settingData.show_music_name == 1 then
						arg_210_1.musicController:SetSelectedState("show")
						arg_210_1.musicAnimator_:Play("open", 0, 0)

						if arg_210_1.settingData.music_time ~= 0 then
							arg_210_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_210_1.settingData.music_time), function()
								if arg_210_1 == nil or isNil(arg_210_1.bgmTxt_) then
									return
								end

								arg_210_1.musicController:SetSelectedState("hide")
								arg_210_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_213_58 = 1.53333333333333
			local var_213_59 = 1

			if var_213_58 < arg_210_1.time_ and arg_210_1.time_ <= var_213_58 + arg_213_0 then
				local var_213_60 = "stop"
				local var_213_61 = "music"

				arg_210_1:AudioAction(var_213_60, var_213_61, "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base.awb")

				local var_213_62 = ""
				local var_213_63 = manager.audio:GetAudioName("bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base")

				if var_213_63 ~= "" then
					if arg_210_1.bgmTxt_.text ~= var_213_63 and arg_210_1.bgmTxt_.text ~= "" then
						if arg_210_1.bgmTxt2_.text ~= "" then
							arg_210_1.bgmTxt_.text = arg_210_1.bgmTxt2_.text
						end

						arg_210_1.bgmTxt2_.text = var_213_63

						arg_210_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_210_1.bgmTxt_.text = var_213_63
					end

					if arg_210_1.bgmTimer then
						arg_210_1.bgmTimer:Stop()

						arg_210_1.bgmTimer = nil
					end

					if arg_210_1.settingData.show_music_name == 1 then
						arg_210_1.musicController:SetSelectedState("show")
						arg_210_1.musicAnimator_:Play("open", 0, 0)

						if arg_210_1.settingData.music_time ~= 0 then
							arg_210_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_210_1.settingData.music_time), function()
								if arg_210_1 == nil or isNil(arg_210_1.bgmTxt_) then
									return
								end

								arg_210_1.musicController:SetSelectedState("hide")
								arg_210_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end
		end
	end,
	Play417161053 = function(arg_216_0, arg_216_1)
		arg_216_1.time_ = 0
		arg_216_1.frameCnt_ = 0
		arg_216_1.state_ = "playing"
		arg_216_1.curTalkId_ = 417161053
		arg_216_1.duration_ = 1.53

		SetActive(arg_216_1.tipsGo_, false)

		function arg_216_1.onSingleLineFinish_()
			arg_216_1.onSingleLineUpdate_ = nil
			arg_216_1.onSingleLineFinish_ = nil
			arg_216_1.state_ = "waiting"
		end

		function arg_216_1.playNext_(arg_218_0)
			if arg_218_0 == 1 then
				arg_216_0:Play417161054(arg_216_1)
			end
		end

		function arg_216_1.onSingleLineUpdate_(arg_219_0)
			local var_219_0 = 0

			if var_219_0 < arg_216_1.time_ and arg_216_1.time_ <= var_219_0 + arg_219_0 then
				arg_216_1.var_.oldValueTypewriter = arg_216_1.fswtw_.percent

				arg_216_1:ShowNextGo(false)
			end

			local var_219_1 = 26
			local var_219_2 = 1.26666666666667
			local var_219_3 = arg_216_1:GetWordFromCfg(417161052)
			local var_219_4 = arg_216_1:FormatText(var_219_3.content)
			local var_219_5, var_219_6 = arg_216_1:GetPercentByPara(var_219_4, 2)

			if var_219_0 < arg_216_1.time_ and arg_216_1.time_ <= var_219_0 + arg_219_0 then
				arg_216_1.talkMaxDuration = 0

				local var_219_7 = var_219_1 <= 0 and var_219_2 or var_219_2 * ((var_219_6 - arg_216_1.typewritterCharCountI18N) / var_219_1)

				if var_219_7 > 0 and var_219_2 < var_219_7 then
					arg_216_1.talkMaxDuration = var_219_7

					if var_219_7 + var_219_0 > arg_216_1.duration_ then
						arg_216_1.duration_ = var_219_7 + var_219_0
					end
				end
			end

			local var_219_8 = 1.26666666666667
			local var_219_9 = math.max(var_219_8, arg_216_1.talkMaxDuration)

			if var_219_0 <= arg_216_1.time_ and arg_216_1.time_ < var_219_0 + var_219_9 then
				local var_219_10 = (arg_216_1.time_ - var_219_0) / var_219_9

				arg_216_1.fswtw_.percent = Mathf.Lerp(arg_216_1.var_.oldValueTypewriter, var_219_5, var_219_10)
				arg_216_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_216_1.fswtw_:SetDirty()
			end

			if arg_216_1.time_ >= var_219_0 + var_219_9 and arg_216_1.time_ < var_219_0 + var_219_9 + arg_219_0 then
				arg_216_1.fswtw_.percent = var_219_5

				arg_216_1.fswtw_:SetDirty()
				arg_216_1:ShowNextGo(true)

				arg_216_1.typewritterCharCountI18N = var_219_6
			end
		end
	end,
	Play417161054 = function(arg_220_0, arg_220_1)
		arg_220_1.time_ = 0
		arg_220_1.frameCnt_ = 0
		arg_220_1.state_ = "playing"
		arg_220_1.curTalkId_ = 417161054
		arg_220_1.duration_ = 1

		SetActive(arg_220_1.tipsGo_, false)

		function arg_220_1.onSingleLineFinish_()
			arg_220_1.onSingleLineUpdate_ = nil
			arg_220_1.onSingleLineFinish_ = nil
			arg_220_1.state_ = "waiting"
		end

		function arg_220_1.playNext_(arg_222_0)
			if arg_222_0 == 1 then
				arg_220_0:Play417161055(arg_220_1)
			end
		end

		function arg_220_1.onSingleLineUpdate_(arg_223_0)
			local var_223_0 = 0

			if var_223_0 < arg_220_1.time_ and arg_220_1.time_ <= var_223_0 + arg_223_0 then
				arg_220_1.var_.oldValueTypewriter = arg_220_1.fswtw_.percent

				arg_220_1:ShowNextGo(false)
			end

			local var_223_1 = 5
			local var_223_2 = 0.266666666666667
			local var_223_3 = arg_220_1:GetWordFromCfg(417161052)
			local var_223_4 = arg_220_1:FormatText(var_223_3.content)
			local var_223_5, var_223_6 = arg_220_1:GetPercentByPara(var_223_4, 3)

			if var_223_0 < arg_220_1.time_ and arg_220_1.time_ <= var_223_0 + arg_223_0 then
				arg_220_1.talkMaxDuration = 0

				local var_223_7 = var_223_1 <= 0 and var_223_2 or var_223_2 * ((var_223_6 - arg_220_1.typewritterCharCountI18N) / var_223_1)

				if var_223_7 > 0 and var_223_2 < var_223_7 then
					arg_220_1.talkMaxDuration = var_223_7

					if var_223_7 + var_223_0 > arg_220_1.duration_ then
						arg_220_1.duration_ = var_223_7 + var_223_0
					end
				end
			end

			local var_223_8 = 0.266666666666667
			local var_223_9 = math.max(var_223_8, arg_220_1.talkMaxDuration)

			if var_223_0 <= arg_220_1.time_ and arg_220_1.time_ < var_223_0 + var_223_9 then
				local var_223_10 = (arg_220_1.time_ - var_223_0) / var_223_9

				arg_220_1.fswtw_.percent = Mathf.Lerp(arg_220_1.var_.oldValueTypewriter, var_223_5, var_223_10)
				arg_220_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_220_1.fswtw_:SetDirty()
			end

			if arg_220_1.time_ >= var_223_0 + var_223_9 and arg_220_1.time_ < var_223_0 + var_223_9 + arg_223_0 then
				arg_220_1.fswtw_.percent = var_223_5

				arg_220_1.fswtw_:SetDirty()
				arg_220_1:ShowNextGo(true)

				arg_220_1.typewritterCharCountI18N = var_223_6
			end
		end
	end,
	Play417161055 = function(arg_224_0, arg_224_1)
		arg_224_1.time_ = 0
		arg_224_1.frameCnt_ = 0
		arg_224_1.state_ = "playing"
		arg_224_1.curTalkId_ = 417161055
		arg_224_1.duration_ = 3.22

		SetActive(arg_224_1.tipsGo_, false)

		function arg_224_1.onSingleLineFinish_()
			arg_224_1.onSingleLineUpdate_ = nil
			arg_224_1.onSingleLineFinish_ = nil
			arg_224_1.state_ = "waiting"
		end

		function arg_224_1.playNext_(arg_226_0)
			if arg_226_0 == 1 then
				arg_224_0:Play417161056(arg_224_1)
			end
		end

		function arg_224_1.onSingleLineUpdate_(arg_227_0)
			local var_227_0 = 0

			if var_227_0 < arg_224_1.time_ and arg_224_1.time_ <= var_227_0 + arg_227_0 then
				arg_224_1.var_.oldValueTypewriter = arg_224_1.fswtw_.percent

				arg_224_1:ShowNextGo(false)
			end

			local var_227_1 = 48
			local var_227_2 = 3.2
			local var_227_3 = arg_224_1:GetWordFromCfg(417161052)
			local var_227_4 = arg_224_1:FormatText(var_227_3.content)
			local var_227_5, var_227_6 = arg_224_1:GetPercentByPara(var_227_4, 4)

			if var_227_0 < arg_224_1.time_ and arg_224_1.time_ <= var_227_0 + arg_227_0 then
				arg_224_1.talkMaxDuration = 0

				local var_227_7 = var_227_1 <= 0 and var_227_2 or var_227_2 * ((var_227_6 - arg_224_1.typewritterCharCountI18N) / var_227_1)

				if var_227_7 > 0 and var_227_2 < var_227_7 then
					arg_224_1.talkMaxDuration = var_227_7

					if var_227_7 + var_227_0 > arg_224_1.duration_ then
						arg_224_1.duration_ = var_227_7 + var_227_0
					end
				end
			end

			local var_227_8 = 3.2
			local var_227_9 = math.max(var_227_8, arg_224_1.talkMaxDuration)

			if var_227_0 <= arg_224_1.time_ and arg_224_1.time_ < var_227_0 + var_227_9 then
				local var_227_10 = (arg_224_1.time_ - var_227_0) / var_227_9

				arg_224_1.fswtw_.percent = Mathf.Lerp(arg_224_1.var_.oldValueTypewriter, var_227_5, var_227_10)
				arg_224_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_224_1.fswtw_:SetDirty()
			end

			if arg_224_1.time_ >= var_227_0 + var_227_9 and arg_224_1.time_ < var_227_0 + var_227_9 + arg_227_0 then
				arg_224_1.fswtw_.percent = var_227_5

				arg_224_1.fswtw_:SetDirty()
				arg_224_1:ShowNextGo(true)

				arg_224_1.typewritterCharCountI18N = var_227_6
			end
		end
	end,
	Play417161056 = function(arg_228_0, arg_228_1)
		arg_228_1.time_ = 0
		arg_228_1.frameCnt_ = 0
		arg_228_1.state_ = "playing"
		arg_228_1.curTalkId_ = 417161056
		arg_228_1.duration_ = 1

		SetActive(arg_228_1.tipsGo_, false)

		function arg_228_1.onSingleLineFinish_()
			arg_228_1.onSingleLineUpdate_ = nil
			arg_228_1.onSingleLineFinish_ = nil
			arg_228_1.state_ = "waiting"
		end

		function arg_228_1.playNext_(arg_230_0)
			if arg_230_0 == 1 then
				arg_228_0:Play417161057(arg_228_1)
			end
		end

		function arg_228_1.onSingleLineUpdate_(arg_231_0)
			local var_231_0 = 0

			if var_231_0 < arg_228_1.time_ and arg_228_1.time_ <= var_231_0 + arg_231_0 then
				arg_228_1.var_.oldValueTypewriter = arg_228_1.fswtw_.percent

				arg_228_1:ShowNextGo(false)
			end

			local var_231_1 = 13
			local var_231_2 = 0.866666666666667
			local var_231_3 = arg_228_1:GetWordFromCfg(417161052)
			local var_231_4 = arg_228_1:FormatText(var_231_3.content)
			local var_231_5, var_231_6 = arg_228_1:GetPercentByPara(var_231_4, 5)

			if var_231_0 < arg_228_1.time_ and arg_228_1.time_ <= var_231_0 + arg_231_0 then
				arg_228_1.talkMaxDuration = 0

				local var_231_7 = var_231_1 <= 0 and var_231_2 or var_231_2 * ((var_231_6 - arg_228_1.typewritterCharCountI18N) / var_231_1)

				if var_231_7 > 0 and var_231_2 < var_231_7 then
					arg_228_1.talkMaxDuration = var_231_7

					if var_231_7 + var_231_0 > arg_228_1.duration_ then
						arg_228_1.duration_ = var_231_7 + var_231_0
					end
				end
			end

			local var_231_8 = 0.866666666666667
			local var_231_9 = math.max(var_231_8, arg_228_1.talkMaxDuration)

			if var_231_0 <= arg_228_1.time_ and arg_228_1.time_ < var_231_0 + var_231_9 then
				local var_231_10 = (arg_228_1.time_ - var_231_0) / var_231_9

				arg_228_1.fswtw_.percent = Mathf.Lerp(arg_228_1.var_.oldValueTypewriter, var_231_5, var_231_10)
				arg_228_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_228_1.fswtw_:SetDirty()
			end

			if arg_228_1.time_ >= var_231_0 + var_231_9 and arg_228_1.time_ < var_231_0 + var_231_9 + arg_231_0 then
				arg_228_1.fswtw_.percent = var_231_5

				arg_228_1.fswtw_:SetDirty()
				arg_228_1:ShowNextGo(true)

				arg_228_1.typewritterCharCountI18N = var_231_6
			end
		end
	end,
	Play417161057 = function(arg_232_0, arg_232_1)
		arg_232_1.time_ = 0
		arg_232_1.frameCnt_ = 0
		arg_232_1.state_ = "playing"
		arg_232_1.curTalkId_ = 417161057
		arg_232_1.duration_ = 1

		SetActive(arg_232_1.tipsGo_, false)

		function arg_232_1.onSingleLineFinish_()
			arg_232_1.onSingleLineUpdate_ = nil
			arg_232_1.onSingleLineFinish_ = nil
			arg_232_1.state_ = "waiting"
		end

		function arg_232_1.playNext_(arg_234_0)
			if arg_234_0 == 1 then
				arg_232_0:Play417161058(arg_232_1)
			end
		end

		function arg_232_1.onSingleLineUpdate_(arg_235_0)
			local var_235_0 = 0

			if var_235_0 < arg_232_1.time_ and arg_232_1.time_ <= var_235_0 + arg_235_0 then
				arg_232_1.var_.oldValueTypewriter = arg_232_1.fswtw_.percent

				arg_232_1:ShowNextGo(false)
			end

			local var_235_1 = 2
			local var_235_2 = 0.133333333333333
			local var_235_3 = arg_232_1:GetWordFromCfg(417161052)
			local var_235_4 = arg_232_1:FormatText(var_235_3.content)
			local var_235_5, var_235_6 = arg_232_1:GetPercentByPara(var_235_4, 6)

			if var_235_0 < arg_232_1.time_ and arg_232_1.time_ <= var_235_0 + arg_235_0 then
				arg_232_1.talkMaxDuration = 0

				local var_235_7 = var_235_1 <= 0 and var_235_2 or var_235_2 * ((var_235_6 - arg_232_1.typewritterCharCountI18N) / var_235_1)

				if var_235_7 > 0 and var_235_2 < var_235_7 then
					arg_232_1.talkMaxDuration = var_235_7

					if var_235_7 + var_235_0 > arg_232_1.duration_ then
						arg_232_1.duration_ = var_235_7 + var_235_0
					end
				end
			end

			local var_235_8 = 0.133333333333333
			local var_235_9 = math.max(var_235_8, arg_232_1.talkMaxDuration)

			if var_235_0 <= arg_232_1.time_ and arg_232_1.time_ < var_235_0 + var_235_9 then
				local var_235_10 = (arg_232_1.time_ - var_235_0) / var_235_9

				arg_232_1.fswtw_.percent = Mathf.Lerp(arg_232_1.var_.oldValueTypewriter, var_235_5, var_235_10)
				arg_232_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_232_1.fswtw_:SetDirty()
			end

			if arg_232_1.time_ >= var_235_0 + var_235_9 and arg_232_1.time_ < var_235_0 + var_235_9 + arg_235_0 then
				arg_232_1.fswtw_.percent = var_235_5

				arg_232_1.fswtw_:SetDirty()
				arg_232_1:ShowNextGo(true)

				arg_232_1.typewritterCharCountI18N = var_235_6
			end
		end
	end,
	Play417161058 = function(arg_236_0, arg_236_1)
		arg_236_1.time_ = 0
		arg_236_1.frameCnt_ = 0
		arg_236_1.state_ = "playing"
		arg_236_1.curTalkId_ = 417161058
		arg_236_1.duration_ = 0.82

		SetActive(arg_236_1.tipsGo_, false)

		function arg_236_1.onSingleLineFinish_()
			arg_236_1.onSingleLineUpdate_ = nil
			arg_236_1.onSingleLineFinish_ = nil
			arg_236_1.state_ = "waiting"
		end

		function arg_236_1.playNext_(arg_238_0)
			if arg_238_0 == 1 then
				arg_236_0:Play417161059(arg_236_1)
			end
		end

		function arg_236_1.onSingleLineUpdate_(arg_239_0)
			local var_239_0 = 0

			if var_239_0 < arg_236_1.time_ and arg_236_1.time_ <= var_239_0 + arg_239_0 then
				arg_236_1.var_.oldValueTypewriter = arg_236_1.fswtw_.percent

				arg_236_1:ShowNextGo(false)
			end

			local var_239_1 = 12
			local var_239_2 = 0.8
			local var_239_3 = arg_236_1:GetWordFromCfg(417161052)
			local var_239_4 = arg_236_1:FormatText(var_239_3.content)
			local var_239_5, var_239_6 = arg_236_1:GetPercentByPara(var_239_4, 7)

			if var_239_0 < arg_236_1.time_ and arg_236_1.time_ <= var_239_0 + arg_239_0 then
				arg_236_1.talkMaxDuration = 0

				local var_239_7 = var_239_1 <= 0 and var_239_2 or var_239_2 * ((var_239_6 - arg_236_1.typewritterCharCountI18N) / var_239_1)

				if var_239_7 > 0 and var_239_2 < var_239_7 then
					arg_236_1.talkMaxDuration = var_239_7

					if var_239_7 + var_239_0 > arg_236_1.duration_ then
						arg_236_1.duration_ = var_239_7 + var_239_0
					end
				end
			end

			local var_239_8 = 0.8
			local var_239_9 = math.max(var_239_8, arg_236_1.talkMaxDuration)

			if var_239_0 <= arg_236_1.time_ and arg_236_1.time_ < var_239_0 + var_239_9 then
				local var_239_10 = (arg_236_1.time_ - var_239_0) / var_239_9

				arg_236_1.fswtw_.percent = Mathf.Lerp(arg_236_1.var_.oldValueTypewriter, var_239_5, var_239_10)
				arg_236_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_236_1.fswtw_:SetDirty()
			end

			if arg_236_1.time_ >= var_239_0 + var_239_9 and arg_236_1.time_ < var_239_0 + var_239_9 + arg_239_0 then
				arg_236_1.fswtw_.percent = var_239_5

				arg_236_1.fswtw_:SetDirty()
				arg_236_1:ShowNextGo(true)

				arg_236_1.typewritterCharCountI18N = var_239_6
			end
		end
	end,
	Play417161059 = function(arg_240_0, arg_240_1)
		arg_240_1.time_ = 0
		arg_240_1.frameCnt_ = 0
		arg_240_1.state_ = "playing"
		arg_240_1.curTalkId_ = 417161059
		arg_240_1.duration_ = 6.17

		SetActive(arg_240_1.tipsGo_, false)

		function arg_240_1.onSingleLineFinish_()
			arg_240_1.onSingleLineUpdate_ = nil
			arg_240_1.onSingleLineFinish_ = nil
			arg_240_1.state_ = "waiting"
		end

		function arg_240_1.playNext_(arg_242_0)
			if arg_242_0 == 1 then
				arg_240_0:Play417161060(arg_240_1)
			end
		end

		function arg_240_1.onSingleLineUpdate_(arg_243_0)
			local var_243_0 = 2

			if var_243_0 < arg_240_1.time_ and arg_240_1.time_ <= var_243_0 + arg_243_0 then
				arg_240_1.allBtn_.enabled = false
			end

			local var_243_1 = 0.3

			if arg_240_1.time_ >= var_243_0 + var_243_1 and arg_240_1.time_ < var_243_0 + var_243_1 + arg_243_0 then
				arg_240_1.allBtn_.enabled = true
			end

			local var_243_2 = "B13"

			if arg_240_1.bgs_[var_243_2] == nil then
				local var_243_3 = Object.Instantiate(arg_240_1.paintGo_)

				var_243_3:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_243_2)
				var_243_3.name = var_243_2
				var_243_3.transform.parent = arg_240_1.stage_.transform
				var_243_3.transform.localPosition = Vector3.New(0, 100, 0)
				arg_240_1.bgs_[var_243_2] = var_243_3
			end

			local var_243_4 = 0

			if var_243_4 < arg_240_1.time_ and arg_240_1.time_ <= var_243_4 + arg_243_0 then
				local var_243_5 = manager.ui.mainCamera.transform.localPosition
				local var_243_6 = Vector3.New(0, 0, 10) + Vector3.New(var_243_5.x, var_243_5.y, 0)
				local var_243_7 = arg_240_1.bgs_.B13

				var_243_7.transform.localPosition = var_243_6
				var_243_7.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_243_8 = var_243_7:GetComponent("SpriteRenderer")

				if var_243_8 and var_243_8.sprite then
					local var_243_9 = (var_243_7.transform.localPosition - var_243_5).z
					local var_243_10 = manager.ui.mainCameraCom_
					local var_243_11 = 2 * var_243_9 * Mathf.Tan(var_243_10.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_243_12 = var_243_11 * var_243_10.aspect
					local var_243_13 = var_243_8.sprite.bounds.size.x
					local var_243_14 = var_243_8.sprite.bounds.size.y
					local var_243_15 = var_243_12 / var_243_13
					local var_243_16 = var_243_11 / var_243_14
					local var_243_17 = var_243_16 < var_243_15 and var_243_15 or var_243_16

					var_243_7.transform.localScale = Vector3.New(var_243_17, var_243_17, 0)
				end

				for iter_243_0, iter_243_1 in pairs(arg_240_1.bgs_) do
					if iter_243_0 ~= "B13" then
						iter_243_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_243_18 = 0

			if var_243_18 < arg_240_1.time_ and arg_240_1.time_ <= var_243_18 + arg_243_0 then
				arg_240_1.mask_.enabled = true
				arg_240_1.mask_.raycastTarget = true

				arg_240_1:SetGaussion(false)
			end

			local var_243_19 = 2

			if var_243_18 <= arg_240_1.time_ and arg_240_1.time_ < var_243_18 + var_243_19 then
				local var_243_20 = (arg_240_1.time_ - var_243_18) / var_243_19
				local var_243_21 = Color.New(0, 0, 0)

				var_243_21.a = Mathf.Lerp(1, 0, var_243_20)
				arg_240_1.mask_.color = var_243_21
			end

			if arg_240_1.time_ >= var_243_18 + var_243_19 and arg_240_1.time_ < var_243_18 + var_243_19 + arg_243_0 then
				local var_243_22 = Color.New(0, 0, 0)
				local var_243_23 = 0

				arg_240_1.mask_.enabled = false
				var_243_22.a = var_243_23
				arg_240_1.mask_.color = var_243_22
			end

			local var_243_24 = "1060"

			if arg_240_1.actors_[var_243_24] == nil then
				local var_243_25 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1060")

				if not isNil(var_243_25) then
					local var_243_26 = Object.Instantiate(var_243_25, arg_240_1.canvasGo_.transform)

					var_243_26.transform:SetSiblingIndex(1)

					var_243_26.name = var_243_24
					var_243_26.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_240_1.actors_[var_243_24] = var_243_26

					local var_243_27 = var_243_26:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_240_1.isInRecall_ then
						for iter_243_2, iter_243_3 in ipairs(var_243_27) do
							iter_243_3.color = arg_240_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_243_28 = arg_240_1.actors_["1060"]
			local var_243_29 = 2

			if var_243_29 < arg_240_1.time_ and arg_240_1.time_ <= var_243_29 + arg_243_0 and not isNil(var_243_28) and arg_240_1.var_.actorSpriteComps1060 == nil then
				arg_240_1.var_.actorSpriteComps1060 = var_243_28:GetComponentsInChildren(typeof(Image), true)
			end

			local var_243_30 = 0.2

			if var_243_29 <= arg_240_1.time_ and arg_240_1.time_ < var_243_29 + var_243_30 and not isNil(var_243_28) then
				local var_243_31 = (arg_240_1.time_ - var_243_29) / var_243_30

				if arg_240_1.var_.actorSpriteComps1060 then
					for iter_243_4, iter_243_5 in pairs(arg_240_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_243_5 then
							if arg_240_1.isInRecall_ then
								local var_243_32 = Mathf.Lerp(iter_243_5.color.r, arg_240_1.hightColor1.r, var_243_31)
								local var_243_33 = Mathf.Lerp(iter_243_5.color.g, arg_240_1.hightColor1.g, var_243_31)
								local var_243_34 = Mathf.Lerp(iter_243_5.color.b, arg_240_1.hightColor1.b, var_243_31)

								iter_243_5.color = Color.New(var_243_32, var_243_33, var_243_34)
							else
								local var_243_35 = Mathf.Lerp(iter_243_5.color.r, 1, var_243_31)

								iter_243_5.color = Color.New(var_243_35, var_243_35, var_243_35)
							end
						end
					end
				end
			end

			if arg_240_1.time_ >= var_243_29 + var_243_30 and arg_240_1.time_ < var_243_29 + var_243_30 + arg_243_0 and not isNil(var_243_28) and arg_240_1.var_.actorSpriteComps1060 then
				for iter_243_6, iter_243_7 in pairs(arg_240_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_243_7 then
						if arg_240_1.isInRecall_ then
							iter_243_7.color = arg_240_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_243_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_240_1.var_.actorSpriteComps1060 = nil
			end

			local var_243_36 = arg_240_1.actors_["1060"].transform
			local var_243_37 = 2

			if var_243_37 < arg_240_1.time_ and arg_240_1.time_ <= var_243_37 + arg_243_0 then
				arg_240_1.var_.moveOldPos1060 = var_243_36.localPosition
				var_243_36.localScale = Vector3.New(1, 1, 1)

				arg_240_1:CheckSpriteTmpPos("1060", 3)

				local var_243_38 = var_243_36.childCount

				for iter_243_8 = 0, var_243_38 - 1 do
					local var_243_39 = var_243_36:GetChild(iter_243_8)

					if var_243_39.name == "" or not string.find(var_243_39.name, "split") then
						var_243_39.gameObject:SetActive(true)
					else
						var_243_39.gameObject:SetActive(false)
					end
				end
			end

			local var_243_40 = 0.001

			if var_243_37 <= arg_240_1.time_ and arg_240_1.time_ < var_243_37 + var_243_40 then
				local var_243_41 = (arg_240_1.time_ - var_243_37) / var_243_40
				local var_243_42 = Vector3.New(33.4, -430.8, 6.9)

				var_243_36.localPosition = Vector3.Lerp(arg_240_1.var_.moveOldPos1060, var_243_42, var_243_41)
			end

			if arg_240_1.time_ >= var_243_37 + var_243_40 and arg_240_1.time_ < var_243_37 + var_243_40 + arg_243_0 then
				var_243_36.localPosition = Vector3.New(33.4, -430.8, 6.9)
			end

			local var_243_43 = 0

			if var_243_43 < arg_240_1.time_ and arg_240_1.time_ <= var_243_43 + arg_243_0 then
				arg_240_1.fswbg_:SetActive(false)
				arg_240_1.dialog_:SetActive(false)
				arg_240_1:ShowNextGo(false)
			end

			local var_243_44 = 0
			local var_243_45 = 0.2

			if var_243_44 < arg_240_1.time_ and arg_240_1.time_ <= var_243_44 + arg_243_0 then
				local var_243_46 = "play"
				local var_243_47 = "music"

				arg_240_1:AudioAction(var_243_46, var_243_47, "ui_battle", "ui_battle_stopbgm", "")

				local var_243_48 = ""
				local var_243_49 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_243_49 ~= "" then
					if arg_240_1.bgmTxt_.text ~= var_243_49 and arg_240_1.bgmTxt_.text ~= "" then
						if arg_240_1.bgmTxt2_.text ~= "" then
							arg_240_1.bgmTxt_.text = arg_240_1.bgmTxt2_.text
						end

						arg_240_1.bgmTxt2_.text = var_243_49

						arg_240_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_240_1.bgmTxt_.text = var_243_49
					end

					if arg_240_1.bgmTimer then
						arg_240_1.bgmTimer:Stop()

						arg_240_1.bgmTimer = nil
					end

					if arg_240_1.settingData.show_music_name == 1 then
						arg_240_1.musicController:SetSelectedState("show")
						arg_240_1.musicAnimator_:Play("open", 0, 0)

						if arg_240_1.settingData.music_time ~= 0 then
							arg_240_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_240_1.settingData.music_time), function()
								if arg_240_1 == nil or isNil(arg_240_1.bgmTxt_) then
									return
								end

								arg_240_1.musicController:SetSelectedState("hide")
								arg_240_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_243_50 = 0.333333333333333
			local var_243_51 = 1

			if var_243_50 < arg_240_1.time_ and arg_240_1.time_ <= var_243_50 + arg_243_0 then
				local var_243_52 = "play"
				local var_243_53 = "music"

				arg_240_1:AudioAction(var_243_52, var_243_53, "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base.awb")

				local var_243_54 = ""
				local var_243_55 = manager.audio:GetAudioName("bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base")

				if var_243_55 ~= "" then
					if arg_240_1.bgmTxt_.text ~= var_243_55 and arg_240_1.bgmTxt_.text ~= "" then
						if arg_240_1.bgmTxt2_.text ~= "" then
							arg_240_1.bgmTxt_.text = arg_240_1.bgmTxt2_.text
						end

						arg_240_1.bgmTxt2_.text = var_243_55

						arg_240_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_240_1.bgmTxt_.text = var_243_55
					end

					if arg_240_1.bgmTimer then
						arg_240_1.bgmTimer:Stop()

						arg_240_1.bgmTimer = nil
					end

					if arg_240_1.settingData.show_music_name == 1 then
						arg_240_1.musicController:SetSelectedState("show")
						arg_240_1.musicAnimator_:Play("open", 0, 0)

						if arg_240_1.settingData.music_time ~= 0 then
							arg_240_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_240_1.settingData.music_time), function()
								if arg_240_1 == nil or isNil(arg_240_1.bgmTxt_) then
									return
								end

								arg_240_1.musicController:SetSelectedState("hide")
								arg_240_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			if arg_240_1.frameCnt_ <= 1 then
				arg_240_1.dialog_:SetActive(false)
			end

			local var_243_56 = 2
			local var_243_57 = 0.425

			if var_243_56 < arg_240_1.time_ and arg_240_1.time_ <= var_243_56 + arg_243_0 then
				arg_240_1.talkMaxDuration = 0

				arg_240_1.dialog_:SetActive(true)

				local var_243_58 = LeanTween.value(arg_240_1.dialog_, 0, 1, 0.3)

				var_243_58:setOnUpdate(LuaHelper.FloatAction(function(arg_246_0)
					arg_240_1.dialogCg_.alpha = arg_246_0
				end))
				var_243_58:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_240_1.dialog_)
					var_243_58:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_240_1.duration_ = arg_240_1.duration_ + 0.3

				SetActive(arg_240_1.leftNameGo_, true)

				local var_243_59 = arg_240_1:FormatText(StoryNameCfg[584].name)

				arg_240_1.leftNameTxt_.text = var_243_59

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_240_1.leftNameTxt_.transform)

				arg_240_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_240_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_240_1:RecordName(arg_240_1.leftNameTxt_.text)
				SetActive(arg_240_1.iconTrs_.gameObject, false)
				arg_240_1.callingController_:SetSelectedState("normal")

				local var_243_60 = arg_240_1:GetWordFromCfg(417161059)
				local var_243_61 = arg_240_1:FormatText(var_243_60.content)

				arg_240_1.text_.text = var_243_61

				LuaForUtil.ClearLinePrefixSymbol(arg_240_1.text_)

				local var_243_62 = 17
				local var_243_63 = utf8.len(var_243_61)
				local var_243_64 = var_243_62 <= 0 and var_243_57 or var_243_57 * (var_243_63 / var_243_62)

				if var_243_64 > 0 and var_243_57 < var_243_64 then
					arg_240_1.talkMaxDuration = var_243_64
					var_243_56 = var_243_56 + 0.3

					if var_243_64 + var_243_56 > arg_240_1.duration_ then
						arg_240_1.duration_ = var_243_64 + var_243_56
					end
				end

				arg_240_1.text_.text = var_243_61
				arg_240_1.typewritter.percent = 0

				arg_240_1.typewritter:SetDirty()
				arg_240_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161059", "story_v_out_417161.awb") ~= 0 then
					local var_243_65 = manager.audio:GetVoiceLength("story_v_out_417161", "417161059", "story_v_out_417161.awb") / 1000

					if var_243_65 + var_243_56 > arg_240_1.duration_ then
						arg_240_1.duration_ = var_243_65 + var_243_56
					end

					if var_243_60.prefab_name ~= "" and arg_240_1.actors_[var_243_60.prefab_name] ~= nil then
						local var_243_66 = LuaForUtil.PlayVoiceWithCriLipsync(arg_240_1.actors_[var_243_60.prefab_name].transform, "story_v_out_417161", "417161059", "story_v_out_417161.awb")

						arg_240_1:RecordAudio("417161059", var_243_66)
						arg_240_1:RecordAudio("417161059", var_243_66)
					else
						arg_240_1:AudioAction("play", "voice", "story_v_out_417161", "417161059", "story_v_out_417161.awb")
					end

					arg_240_1:RecordHistoryTalkVoice("story_v_out_417161", "417161059", "story_v_out_417161.awb")
				end

				arg_240_1:RecordContent(arg_240_1.text_.text)
			end

			local var_243_67 = var_243_56 + 0.3
			local var_243_68 = math.max(var_243_57, arg_240_1.talkMaxDuration)

			if var_243_67 <= arg_240_1.time_ and arg_240_1.time_ < var_243_67 + var_243_68 then
				arg_240_1.typewritter.percent = (arg_240_1.time_ - var_243_67) / var_243_68

				arg_240_1.typewritter:SetDirty()
			end

			if arg_240_1.time_ >= var_243_67 + var_243_68 and arg_240_1.time_ < var_243_67 + var_243_68 + arg_243_0 then
				arg_240_1.typewritter.percent = 1

				arg_240_1.typewritter:SetDirty()
				arg_240_1:ShowNextGo(true)
			end
		end
	end,
	Play417161060 = function(arg_248_0, arg_248_1)
		arg_248_1.time_ = 0
		arg_248_1.frameCnt_ = 0
		arg_248_1.state_ = "playing"
		arg_248_1.curTalkId_ = 417161060
		arg_248_1.duration_ = 5

		SetActive(arg_248_1.tipsGo_, false)

		function arg_248_1.onSingleLineFinish_()
			arg_248_1.onSingleLineUpdate_ = nil
			arg_248_1.onSingleLineFinish_ = nil
			arg_248_1.state_ = "waiting"
		end

		function arg_248_1.playNext_(arg_250_0)
			if arg_250_0 == 1 then
				arg_248_0:Play417161061(arg_248_1)
			end
		end

		function arg_248_1.onSingleLineUpdate_(arg_251_0)
			local var_251_0 = arg_248_1.actors_["1060"].transform
			local var_251_1 = 0

			if var_251_1 < arg_248_1.time_ and arg_248_1.time_ <= var_251_1 + arg_251_0 then
				arg_248_1.var_.moveOldPos1060 = var_251_0.localPosition
				var_251_0.localScale = Vector3.New(1, 1, 1)

				arg_248_1:CheckSpriteTmpPos("1060", 7)

				local var_251_2 = var_251_0.childCount

				for iter_251_0 = 0, var_251_2 - 1 do
					local var_251_3 = var_251_0:GetChild(iter_251_0)

					if var_251_3.name == "" or not string.find(var_251_3.name, "split") then
						var_251_3.gameObject:SetActive(true)
					else
						var_251_3.gameObject:SetActive(false)
					end
				end
			end

			local var_251_4 = 0.001

			if var_251_1 <= arg_248_1.time_ and arg_248_1.time_ < var_251_1 + var_251_4 then
				local var_251_5 = (arg_248_1.time_ - var_251_1) / var_251_4
				local var_251_6 = Vector3.New(0, -2000, -40)

				var_251_0.localPosition = Vector3.Lerp(arg_248_1.var_.moveOldPos1060, var_251_6, var_251_5)
			end

			if arg_248_1.time_ >= var_251_1 + var_251_4 and arg_248_1.time_ < var_251_1 + var_251_4 + arg_251_0 then
				var_251_0.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_251_7 = 0
			local var_251_8 = 1

			if var_251_7 < arg_248_1.time_ and arg_248_1.time_ <= var_251_7 + arg_251_0 then
				local var_251_9 = "play"
				local var_251_10 = "effect"

				arg_248_1:AudioAction(var_251_9, var_251_10, "se_story_1310", "se_story_1310_clap", "")
			end

			local var_251_11 = 0
			local var_251_12 = 1.075

			if var_251_11 < arg_248_1.time_ and arg_248_1.time_ <= var_251_11 + arg_251_0 then
				arg_248_1.talkMaxDuration = 0
				arg_248_1.dialogCg_.alpha = 1

				arg_248_1.dialog_:SetActive(true)
				SetActive(arg_248_1.leftNameGo_, false)

				arg_248_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_248_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_248_1:RecordName(arg_248_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_248_1.iconTrs_.gameObject, false)
				arg_248_1.callingController_:SetSelectedState("normal")

				local var_251_13 = arg_248_1:GetWordFromCfg(417161060)
				local var_251_14 = arg_248_1:FormatText(var_251_13.content)

				arg_248_1.text_.text = var_251_14

				LuaForUtil.ClearLinePrefixSymbol(arg_248_1.text_)

				local var_251_15 = 43
				local var_251_16 = utf8.len(var_251_14)
				local var_251_17 = var_251_15 <= 0 and var_251_12 or var_251_12 * (var_251_16 / var_251_15)

				if var_251_17 > 0 and var_251_12 < var_251_17 then
					arg_248_1.talkMaxDuration = var_251_17

					if var_251_17 + var_251_11 > arg_248_1.duration_ then
						arg_248_1.duration_ = var_251_17 + var_251_11
					end
				end

				arg_248_1.text_.text = var_251_14
				arg_248_1.typewritter.percent = 0

				arg_248_1.typewritter:SetDirty()
				arg_248_1:ShowNextGo(false)
				arg_248_1:RecordContent(arg_248_1.text_.text)
			end

			local var_251_18 = math.max(var_251_12, arg_248_1.talkMaxDuration)

			if var_251_11 <= arg_248_1.time_ and arg_248_1.time_ < var_251_11 + var_251_18 then
				arg_248_1.typewritter.percent = (arg_248_1.time_ - var_251_11) / var_251_18

				arg_248_1.typewritter:SetDirty()
			end

			if arg_248_1.time_ >= var_251_11 + var_251_18 and arg_248_1.time_ < var_251_11 + var_251_18 + arg_251_0 then
				arg_248_1.typewritter.percent = 1

				arg_248_1.typewritter:SetDirty()
				arg_248_1:ShowNextGo(true)
			end
		end
	end,
	Play417161061 = function(arg_252_0, arg_252_1)
		arg_252_1.time_ = 0
		arg_252_1.frameCnt_ = 0
		arg_252_1.state_ = "playing"
		arg_252_1.curTalkId_ = 417161061
		arg_252_1.duration_ = 3.2

		SetActive(arg_252_1.tipsGo_, false)

		function arg_252_1.onSingleLineFinish_()
			arg_252_1.onSingleLineUpdate_ = nil
			arg_252_1.onSingleLineFinish_ = nil
			arg_252_1.state_ = "waiting"
		end

		function arg_252_1.playNext_(arg_254_0)
			if arg_254_0 == 1 then
				arg_252_0:Play417161062(arg_252_1)
			end
		end

		function arg_252_1.onSingleLineUpdate_(arg_255_0)
			local var_255_0 = arg_252_1.actors_["10128"]
			local var_255_1 = 0

			if var_255_1 < arg_252_1.time_ and arg_252_1.time_ <= var_255_1 + arg_255_0 and not isNil(var_255_0) and arg_252_1.var_.actorSpriteComps10128 == nil then
				arg_252_1.var_.actorSpriteComps10128 = var_255_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_255_2 = 0.2

			if var_255_1 <= arg_252_1.time_ and arg_252_1.time_ < var_255_1 + var_255_2 and not isNil(var_255_0) then
				local var_255_3 = (arg_252_1.time_ - var_255_1) / var_255_2

				if arg_252_1.var_.actorSpriteComps10128 then
					for iter_255_0, iter_255_1 in pairs(arg_252_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_255_1 then
							if arg_252_1.isInRecall_ then
								local var_255_4 = Mathf.Lerp(iter_255_1.color.r, arg_252_1.hightColor1.r, var_255_3)
								local var_255_5 = Mathf.Lerp(iter_255_1.color.g, arg_252_1.hightColor1.g, var_255_3)
								local var_255_6 = Mathf.Lerp(iter_255_1.color.b, arg_252_1.hightColor1.b, var_255_3)

								iter_255_1.color = Color.New(var_255_4, var_255_5, var_255_6)
							else
								local var_255_7 = Mathf.Lerp(iter_255_1.color.r, 1, var_255_3)

								iter_255_1.color = Color.New(var_255_7, var_255_7, var_255_7)
							end
						end
					end
				end
			end

			if arg_252_1.time_ >= var_255_1 + var_255_2 and arg_252_1.time_ < var_255_1 + var_255_2 + arg_255_0 and not isNil(var_255_0) and arg_252_1.var_.actorSpriteComps10128 then
				for iter_255_2, iter_255_3 in pairs(arg_252_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_255_3 then
						if arg_252_1.isInRecall_ then
							iter_255_3.color = arg_252_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_255_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_252_1.var_.actorSpriteComps10128 = nil
			end

			local var_255_8 = arg_252_1.actors_["10128"].transform
			local var_255_9 = 0

			if var_255_9 < arg_252_1.time_ and arg_252_1.time_ <= var_255_9 + arg_255_0 then
				arg_252_1.var_.moveOldPos10128 = var_255_8.localPosition
				var_255_8.localScale = Vector3.New(1, 1, 1)

				arg_252_1:CheckSpriteTmpPos("10128", 3)

				local var_255_10 = var_255_8.childCount

				for iter_255_4 = 0, var_255_10 - 1 do
					local var_255_11 = var_255_8:GetChild(iter_255_4)

					if var_255_11.name == "split_6" or not string.find(var_255_11.name, "split") then
						var_255_11.gameObject:SetActive(true)
					else
						var_255_11.gameObject:SetActive(false)
					end
				end
			end

			local var_255_12 = 0.001

			if var_255_9 <= arg_252_1.time_ and arg_252_1.time_ < var_255_9 + var_255_12 then
				local var_255_13 = (arg_252_1.time_ - var_255_9) / var_255_12
				local var_255_14 = Vector3.New(0, -347, -300)

				var_255_8.localPosition = Vector3.Lerp(arg_252_1.var_.moveOldPos10128, var_255_14, var_255_13)
			end

			if arg_252_1.time_ >= var_255_9 + var_255_12 and arg_252_1.time_ < var_255_9 + var_255_12 + arg_255_0 then
				var_255_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_255_15 = 0
			local var_255_16 = 0.375

			if var_255_15 < arg_252_1.time_ and arg_252_1.time_ <= var_255_15 + arg_255_0 then
				arg_252_1.talkMaxDuration = 0
				arg_252_1.dialogCg_.alpha = 1

				arg_252_1.dialog_:SetActive(true)
				SetActive(arg_252_1.leftNameGo_, true)

				local var_255_17 = arg_252_1:FormatText(StoryNameCfg[595].name)

				arg_252_1.leftNameTxt_.text = var_255_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_252_1.leftNameTxt_.transform)

				arg_252_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_252_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_252_1:RecordName(arg_252_1.leftNameTxt_.text)
				SetActive(arg_252_1.iconTrs_.gameObject, false)
				arg_252_1.callingController_:SetSelectedState("normal")

				local var_255_18 = arg_252_1:GetWordFromCfg(417161061)
				local var_255_19 = arg_252_1:FormatText(var_255_18.content)

				arg_252_1.text_.text = var_255_19

				LuaForUtil.ClearLinePrefixSymbol(arg_252_1.text_)

				local var_255_20 = 15
				local var_255_21 = utf8.len(var_255_19)
				local var_255_22 = var_255_20 <= 0 and var_255_16 or var_255_16 * (var_255_21 / var_255_20)

				if var_255_22 > 0 and var_255_16 < var_255_22 then
					arg_252_1.talkMaxDuration = var_255_22

					if var_255_22 + var_255_15 > arg_252_1.duration_ then
						arg_252_1.duration_ = var_255_22 + var_255_15
					end
				end

				arg_252_1.text_.text = var_255_19
				arg_252_1.typewritter.percent = 0

				arg_252_1.typewritter:SetDirty()
				arg_252_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161061", "story_v_out_417161.awb") ~= 0 then
					local var_255_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161061", "story_v_out_417161.awb") / 1000

					if var_255_23 + var_255_15 > arg_252_1.duration_ then
						arg_252_1.duration_ = var_255_23 + var_255_15
					end

					if var_255_18.prefab_name ~= "" and arg_252_1.actors_[var_255_18.prefab_name] ~= nil then
						local var_255_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_252_1.actors_[var_255_18.prefab_name].transform, "story_v_out_417161", "417161061", "story_v_out_417161.awb")

						arg_252_1:RecordAudio("417161061", var_255_24)
						arg_252_1:RecordAudio("417161061", var_255_24)
					else
						arg_252_1:AudioAction("play", "voice", "story_v_out_417161", "417161061", "story_v_out_417161.awb")
					end

					arg_252_1:RecordHistoryTalkVoice("story_v_out_417161", "417161061", "story_v_out_417161.awb")
				end

				arg_252_1:RecordContent(arg_252_1.text_.text)
			end

			local var_255_25 = math.max(var_255_16, arg_252_1.talkMaxDuration)

			if var_255_15 <= arg_252_1.time_ and arg_252_1.time_ < var_255_15 + var_255_25 then
				arg_252_1.typewritter.percent = (arg_252_1.time_ - var_255_15) / var_255_25

				arg_252_1.typewritter:SetDirty()
			end

			if arg_252_1.time_ >= var_255_15 + var_255_25 and arg_252_1.time_ < var_255_15 + var_255_25 + arg_255_0 then
				arg_252_1.typewritter.percent = 1

				arg_252_1.typewritter:SetDirty()
				arg_252_1:ShowNextGo(true)
			end
		end
	end,
	Play417161062 = function(arg_256_0, arg_256_1)
		arg_256_1.time_ = 0
		arg_256_1.frameCnt_ = 0
		arg_256_1.state_ = "playing"
		arg_256_1.curTalkId_ = 417161062
		arg_256_1.duration_ = 5.93

		SetActive(arg_256_1.tipsGo_, false)

		function arg_256_1.onSingleLineFinish_()
			arg_256_1.onSingleLineUpdate_ = nil
			arg_256_1.onSingleLineFinish_ = nil
			arg_256_1.state_ = "waiting"
		end

		function arg_256_1.playNext_(arg_258_0)
			if arg_258_0 == 1 then
				arg_256_0:Play417161063(arg_256_1)
			end
		end

		function arg_256_1.onSingleLineUpdate_(arg_259_0)
			local var_259_0 = arg_256_1.actors_["1060"]
			local var_259_1 = 0

			if var_259_1 < arg_256_1.time_ and arg_256_1.time_ <= var_259_1 + arg_259_0 and not isNil(var_259_0) and arg_256_1.var_.actorSpriteComps1060 == nil then
				arg_256_1.var_.actorSpriteComps1060 = var_259_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_259_2 = 0.2

			if var_259_1 <= arg_256_1.time_ and arg_256_1.time_ < var_259_1 + var_259_2 and not isNil(var_259_0) then
				local var_259_3 = (arg_256_1.time_ - var_259_1) / var_259_2

				if arg_256_1.var_.actorSpriteComps1060 then
					for iter_259_0, iter_259_1 in pairs(arg_256_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_259_1 then
							if arg_256_1.isInRecall_ then
								local var_259_4 = Mathf.Lerp(iter_259_1.color.r, arg_256_1.hightColor1.r, var_259_3)
								local var_259_5 = Mathf.Lerp(iter_259_1.color.g, arg_256_1.hightColor1.g, var_259_3)
								local var_259_6 = Mathf.Lerp(iter_259_1.color.b, arg_256_1.hightColor1.b, var_259_3)

								iter_259_1.color = Color.New(var_259_4, var_259_5, var_259_6)
							else
								local var_259_7 = Mathf.Lerp(iter_259_1.color.r, 1, var_259_3)

								iter_259_1.color = Color.New(var_259_7, var_259_7, var_259_7)
							end
						end
					end
				end
			end

			if arg_256_1.time_ >= var_259_1 + var_259_2 and arg_256_1.time_ < var_259_1 + var_259_2 + arg_259_0 and not isNil(var_259_0) and arg_256_1.var_.actorSpriteComps1060 then
				for iter_259_2, iter_259_3 in pairs(arg_256_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_259_3 then
						if arg_256_1.isInRecall_ then
							iter_259_3.color = arg_256_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_259_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_256_1.var_.actorSpriteComps1060 = nil
			end

			local var_259_8 = arg_256_1.actors_["10128"]
			local var_259_9 = 0

			if var_259_9 < arg_256_1.time_ and arg_256_1.time_ <= var_259_9 + arg_259_0 and not isNil(var_259_8) and arg_256_1.var_.actorSpriteComps10128 == nil then
				arg_256_1.var_.actorSpriteComps10128 = var_259_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_259_10 = 0.2

			if var_259_9 <= arg_256_1.time_ and arg_256_1.time_ < var_259_9 + var_259_10 and not isNil(var_259_8) then
				local var_259_11 = (arg_256_1.time_ - var_259_9) / var_259_10

				if arg_256_1.var_.actorSpriteComps10128 then
					for iter_259_4, iter_259_5 in pairs(arg_256_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_259_5 then
							if arg_256_1.isInRecall_ then
								local var_259_12 = Mathf.Lerp(iter_259_5.color.r, arg_256_1.hightColor2.r, var_259_11)
								local var_259_13 = Mathf.Lerp(iter_259_5.color.g, arg_256_1.hightColor2.g, var_259_11)
								local var_259_14 = Mathf.Lerp(iter_259_5.color.b, arg_256_1.hightColor2.b, var_259_11)

								iter_259_5.color = Color.New(var_259_12, var_259_13, var_259_14)
							else
								local var_259_15 = Mathf.Lerp(iter_259_5.color.r, 0.5, var_259_11)

								iter_259_5.color = Color.New(var_259_15, var_259_15, var_259_15)
							end
						end
					end
				end
			end

			if arg_256_1.time_ >= var_259_9 + var_259_10 and arg_256_1.time_ < var_259_9 + var_259_10 + arg_259_0 and not isNil(var_259_8) and arg_256_1.var_.actorSpriteComps10128 then
				for iter_259_6, iter_259_7 in pairs(arg_256_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_259_7 then
						if arg_256_1.isInRecall_ then
							iter_259_7.color = arg_256_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_259_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_256_1.var_.actorSpriteComps10128 = nil
			end

			local var_259_16 = arg_256_1.actors_["10128"].transform
			local var_259_17 = 0

			if var_259_17 < arg_256_1.time_ and arg_256_1.time_ <= var_259_17 + arg_259_0 then
				arg_256_1.var_.moveOldPos10128 = var_259_16.localPosition
				var_259_16.localScale = Vector3.New(1, 1, 1)

				arg_256_1:CheckSpriteTmpPos("10128", 2)

				local var_259_18 = var_259_16.childCount

				for iter_259_8 = 0, var_259_18 - 1 do
					local var_259_19 = var_259_16:GetChild(iter_259_8)

					if var_259_19.name == "" or not string.find(var_259_19.name, "split") then
						var_259_19.gameObject:SetActive(true)
					else
						var_259_19.gameObject:SetActive(false)
					end
				end
			end

			local var_259_20 = 0.001

			if var_259_17 <= arg_256_1.time_ and arg_256_1.time_ < var_259_17 + var_259_20 then
				local var_259_21 = (arg_256_1.time_ - var_259_17) / var_259_20
				local var_259_22 = Vector3.New(-390, -347, -300)

				var_259_16.localPosition = Vector3.Lerp(arg_256_1.var_.moveOldPos10128, var_259_22, var_259_21)
			end

			if arg_256_1.time_ >= var_259_17 + var_259_20 and arg_256_1.time_ < var_259_17 + var_259_20 + arg_259_0 then
				var_259_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_259_23 = arg_256_1.actors_["1060"].transform
			local var_259_24 = 0

			if var_259_24 < arg_256_1.time_ and arg_256_1.time_ <= var_259_24 + arg_259_0 then
				arg_256_1.var_.moveOldPos1060 = var_259_23.localPosition
				var_259_23.localScale = Vector3.New(1, 1, 1)

				arg_256_1:CheckSpriteTmpPos("1060", 4)

				local var_259_25 = var_259_23.childCount

				for iter_259_9 = 0, var_259_25 - 1 do
					local var_259_26 = var_259_23:GetChild(iter_259_9)

					if var_259_26.name == "split_1" or not string.find(var_259_26.name, "split") then
						var_259_26.gameObject:SetActive(true)
					else
						var_259_26.gameObject:SetActive(false)
					end
				end
			end

			local var_259_27 = 0.001

			if var_259_24 <= arg_256_1.time_ and arg_256_1.time_ < var_259_24 + var_259_27 then
				local var_259_28 = (arg_256_1.time_ - var_259_24) / var_259_27
				local var_259_29 = Vector3.New(420.9, -430.8, 6.9)

				var_259_23.localPosition = Vector3.Lerp(arg_256_1.var_.moveOldPos1060, var_259_29, var_259_28)
			end

			if arg_256_1.time_ >= var_259_24 + var_259_27 and arg_256_1.time_ < var_259_24 + var_259_27 + arg_259_0 then
				var_259_23.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_259_30 = 0
			local var_259_31 = 0.675

			if var_259_30 < arg_256_1.time_ and arg_256_1.time_ <= var_259_30 + arg_259_0 then
				arg_256_1.talkMaxDuration = 0
				arg_256_1.dialogCg_.alpha = 1

				arg_256_1.dialog_:SetActive(true)
				SetActive(arg_256_1.leftNameGo_, true)

				local var_259_32 = arg_256_1:FormatText(StoryNameCfg[584].name)

				arg_256_1.leftNameTxt_.text = var_259_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_256_1.leftNameTxt_.transform)

				arg_256_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_256_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_256_1:RecordName(arg_256_1.leftNameTxt_.text)
				SetActive(arg_256_1.iconTrs_.gameObject, false)
				arg_256_1.callingController_:SetSelectedState("normal")

				local var_259_33 = arg_256_1:GetWordFromCfg(417161062)
				local var_259_34 = arg_256_1:FormatText(var_259_33.content)

				arg_256_1.text_.text = var_259_34

				LuaForUtil.ClearLinePrefixSymbol(arg_256_1.text_)

				local var_259_35 = 27
				local var_259_36 = utf8.len(var_259_34)
				local var_259_37 = var_259_35 <= 0 and var_259_31 or var_259_31 * (var_259_36 / var_259_35)

				if var_259_37 > 0 and var_259_31 < var_259_37 then
					arg_256_1.talkMaxDuration = var_259_37

					if var_259_37 + var_259_30 > arg_256_1.duration_ then
						arg_256_1.duration_ = var_259_37 + var_259_30
					end
				end

				arg_256_1.text_.text = var_259_34
				arg_256_1.typewritter.percent = 0

				arg_256_1.typewritter:SetDirty()
				arg_256_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161062", "story_v_out_417161.awb") ~= 0 then
					local var_259_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161062", "story_v_out_417161.awb") / 1000

					if var_259_38 + var_259_30 > arg_256_1.duration_ then
						arg_256_1.duration_ = var_259_38 + var_259_30
					end

					if var_259_33.prefab_name ~= "" and arg_256_1.actors_[var_259_33.prefab_name] ~= nil then
						local var_259_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_256_1.actors_[var_259_33.prefab_name].transform, "story_v_out_417161", "417161062", "story_v_out_417161.awb")

						arg_256_1:RecordAudio("417161062", var_259_39)
						arg_256_1:RecordAudio("417161062", var_259_39)
					else
						arg_256_1:AudioAction("play", "voice", "story_v_out_417161", "417161062", "story_v_out_417161.awb")
					end

					arg_256_1:RecordHistoryTalkVoice("story_v_out_417161", "417161062", "story_v_out_417161.awb")
				end

				arg_256_1:RecordContent(arg_256_1.text_.text)
			end

			local var_259_40 = math.max(var_259_31, arg_256_1.talkMaxDuration)

			if var_259_30 <= arg_256_1.time_ and arg_256_1.time_ < var_259_30 + var_259_40 then
				arg_256_1.typewritter.percent = (arg_256_1.time_ - var_259_30) / var_259_40

				arg_256_1.typewritter:SetDirty()
			end

			if arg_256_1.time_ >= var_259_30 + var_259_40 and arg_256_1.time_ < var_259_30 + var_259_40 + arg_259_0 then
				arg_256_1.typewritter.percent = 1

				arg_256_1.typewritter:SetDirty()
				arg_256_1:ShowNextGo(true)
			end
		end
	end,
	Play417161063 = function(arg_260_0, arg_260_1)
		arg_260_1.time_ = 0
		arg_260_1.frameCnt_ = 0
		arg_260_1.state_ = "playing"
		arg_260_1.curTalkId_ = 417161063
		arg_260_1.duration_ = 10.5

		SetActive(arg_260_1.tipsGo_, false)

		function arg_260_1.onSingleLineFinish_()
			arg_260_1.onSingleLineUpdate_ = nil
			arg_260_1.onSingleLineFinish_ = nil
			arg_260_1.state_ = "waiting"
		end

		function arg_260_1.playNext_(arg_262_0)
			if arg_262_0 == 1 then
				arg_260_0:Play417161064(arg_260_1)
			end
		end

		function arg_260_1.onSingleLineUpdate_(arg_263_0)
			local var_263_0 = arg_260_1.actors_["1060"].transform
			local var_263_1 = 0

			if var_263_1 < arg_260_1.time_ and arg_260_1.time_ <= var_263_1 + arg_263_0 then
				arg_260_1.var_.moveOldPos1060 = var_263_0.localPosition
				var_263_0.localScale = Vector3.New(1, 1, 1)

				arg_260_1:CheckSpriteTmpPos("1060", 4)

				local var_263_2 = var_263_0.childCount

				for iter_263_0 = 0, var_263_2 - 1 do
					local var_263_3 = var_263_0:GetChild(iter_263_0)

					if var_263_3.name == "split_4" or not string.find(var_263_3.name, "split") then
						var_263_3.gameObject:SetActive(true)
					else
						var_263_3.gameObject:SetActive(false)
					end
				end
			end

			local var_263_4 = 0.001

			if var_263_1 <= arg_260_1.time_ and arg_260_1.time_ < var_263_1 + var_263_4 then
				local var_263_5 = (arg_260_1.time_ - var_263_1) / var_263_4
				local var_263_6 = Vector3.New(420.9, -430.8, 6.9)

				var_263_0.localPosition = Vector3.Lerp(arg_260_1.var_.moveOldPos1060, var_263_6, var_263_5)
			end

			if arg_260_1.time_ >= var_263_1 + var_263_4 and arg_260_1.time_ < var_263_1 + var_263_4 + arg_263_0 then
				var_263_0.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_263_7 = 0
			local var_263_8 = 1

			if var_263_7 < arg_260_1.time_ and arg_260_1.time_ <= var_263_7 + arg_263_0 then
				arg_260_1.talkMaxDuration = 0
				arg_260_1.dialogCg_.alpha = 1

				arg_260_1.dialog_:SetActive(true)
				SetActive(arg_260_1.leftNameGo_, true)

				local var_263_9 = arg_260_1:FormatText(StoryNameCfg[584].name)

				arg_260_1.leftNameTxt_.text = var_263_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_260_1.leftNameTxt_.transform)

				arg_260_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_260_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_260_1:RecordName(arg_260_1.leftNameTxt_.text)
				SetActive(arg_260_1.iconTrs_.gameObject, false)
				arg_260_1.callingController_:SetSelectedState("normal")

				local var_263_10 = arg_260_1:GetWordFromCfg(417161063)
				local var_263_11 = arg_260_1:FormatText(var_263_10.content)

				arg_260_1.text_.text = var_263_11

				LuaForUtil.ClearLinePrefixSymbol(arg_260_1.text_)

				local var_263_12 = 40
				local var_263_13 = utf8.len(var_263_11)
				local var_263_14 = var_263_12 <= 0 and var_263_8 or var_263_8 * (var_263_13 / var_263_12)

				if var_263_14 > 0 and var_263_8 < var_263_14 then
					arg_260_1.talkMaxDuration = var_263_14

					if var_263_14 + var_263_7 > arg_260_1.duration_ then
						arg_260_1.duration_ = var_263_14 + var_263_7
					end
				end

				arg_260_1.text_.text = var_263_11
				arg_260_1.typewritter.percent = 0

				arg_260_1.typewritter:SetDirty()
				arg_260_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161063", "story_v_out_417161.awb") ~= 0 then
					local var_263_15 = manager.audio:GetVoiceLength("story_v_out_417161", "417161063", "story_v_out_417161.awb") / 1000

					if var_263_15 + var_263_7 > arg_260_1.duration_ then
						arg_260_1.duration_ = var_263_15 + var_263_7
					end

					if var_263_10.prefab_name ~= "" and arg_260_1.actors_[var_263_10.prefab_name] ~= nil then
						local var_263_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_260_1.actors_[var_263_10.prefab_name].transform, "story_v_out_417161", "417161063", "story_v_out_417161.awb")

						arg_260_1:RecordAudio("417161063", var_263_16)
						arg_260_1:RecordAudio("417161063", var_263_16)
					else
						arg_260_1:AudioAction("play", "voice", "story_v_out_417161", "417161063", "story_v_out_417161.awb")
					end

					arg_260_1:RecordHistoryTalkVoice("story_v_out_417161", "417161063", "story_v_out_417161.awb")
				end

				arg_260_1:RecordContent(arg_260_1.text_.text)
			end

			local var_263_17 = math.max(var_263_8, arg_260_1.talkMaxDuration)

			if var_263_7 <= arg_260_1.time_ and arg_260_1.time_ < var_263_7 + var_263_17 then
				arg_260_1.typewritter.percent = (arg_260_1.time_ - var_263_7) / var_263_17

				arg_260_1.typewritter:SetDirty()
			end

			if arg_260_1.time_ >= var_263_7 + var_263_17 and arg_260_1.time_ < var_263_7 + var_263_17 + arg_263_0 then
				arg_260_1.typewritter.percent = 1

				arg_260_1.typewritter:SetDirty()
				arg_260_1:ShowNextGo(true)
			end
		end
	end,
	Play417161064 = function(arg_264_0, arg_264_1)
		arg_264_1.time_ = 0
		arg_264_1.frameCnt_ = 0
		arg_264_1.state_ = "playing"
		arg_264_1.curTalkId_ = 417161064
		arg_264_1.duration_ = 3.43

		SetActive(arg_264_1.tipsGo_, false)

		function arg_264_1.onSingleLineFinish_()
			arg_264_1.onSingleLineUpdate_ = nil
			arg_264_1.onSingleLineFinish_ = nil
			arg_264_1.state_ = "waiting"
		end

		function arg_264_1.playNext_(arg_266_0)
			if arg_266_0 == 1 then
				arg_264_0:Play417161065(arg_264_1)
			end
		end

		function arg_264_1.onSingleLineUpdate_(arg_267_0)
			local var_267_0 = arg_264_1.actors_["10128"]
			local var_267_1 = 0

			if var_267_1 < arg_264_1.time_ and arg_264_1.time_ <= var_267_1 + arg_267_0 and not isNil(var_267_0) and arg_264_1.var_.actorSpriteComps10128 == nil then
				arg_264_1.var_.actorSpriteComps10128 = var_267_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_267_2 = 0.2

			if var_267_1 <= arg_264_1.time_ and arg_264_1.time_ < var_267_1 + var_267_2 and not isNil(var_267_0) then
				local var_267_3 = (arg_264_1.time_ - var_267_1) / var_267_2

				if arg_264_1.var_.actorSpriteComps10128 then
					for iter_267_0, iter_267_1 in pairs(arg_264_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_267_1 then
							if arg_264_1.isInRecall_ then
								local var_267_4 = Mathf.Lerp(iter_267_1.color.r, arg_264_1.hightColor1.r, var_267_3)
								local var_267_5 = Mathf.Lerp(iter_267_1.color.g, arg_264_1.hightColor1.g, var_267_3)
								local var_267_6 = Mathf.Lerp(iter_267_1.color.b, arg_264_1.hightColor1.b, var_267_3)

								iter_267_1.color = Color.New(var_267_4, var_267_5, var_267_6)
							else
								local var_267_7 = Mathf.Lerp(iter_267_1.color.r, 1, var_267_3)

								iter_267_1.color = Color.New(var_267_7, var_267_7, var_267_7)
							end
						end
					end
				end
			end

			if arg_264_1.time_ >= var_267_1 + var_267_2 and arg_264_1.time_ < var_267_1 + var_267_2 + arg_267_0 and not isNil(var_267_0) and arg_264_1.var_.actorSpriteComps10128 then
				for iter_267_2, iter_267_3 in pairs(arg_264_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_267_3 then
						if arg_264_1.isInRecall_ then
							iter_267_3.color = arg_264_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_267_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_264_1.var_.actorSpriteComps10128 = nil
			end

			local var_267_8 = arg_264_1.actors_["1060"]
			local var_267_9 = 0

			if var_267_9 < arg_264_1.time_ and arg_264_1.time_ <= var_267_9 + arg_267_0 and not isNil(var_267_8) and arg_264_1.var_.actorSpriteComps1060 == nil then
				arg_264_1.var_.actorSpriteComps1060 = var_267_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_267_10 = 0.2

			if var_267_9 <= arg_264_1.time_ and arg_264_1.time_ < var_267_9 + var_267_10 and not isNil(var_267_8) then
				local var_267_11 = (arg_264_1.time_ - var_267_9) / var_267_10

				if arg_264_1.var_.actorSpriteComps1060 then
					for iter_267_4, iter_267_5 in pairs(arg_264_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_267_5 then
							if arg_264_1.isInRecall_ then
								local var_267_12 = Mathf.Lerp(iter_267_5.color.r, arg_264_1.hightColor2.r, var_267_11)
								local var_267_13 = Mathf.Lerp(iter_267_5.color.g, arg_264_1.hightColor2.g, var_267_11)
								local var_267_14 = Mathf.Lerp(iter_267_5.color.b, arg_264_1.hightColor2.b, var_267_11)

								iter_267_5.color = Color.New(var_267_12, var_267_13, var_267_14)
							else
								local var_267_15 = Mathf.Lerp(iter_267_5.color.r, 0.5, var_267_11)

								iter_267_5.color = Color.New(var_267_15, var_267_15, var_267_15)
							end
						end
					end
				end
			end

			if arg_264_1.time_ >= var_267_9 + var_267_10 and arg_264_1.time_ < var_267_9 + var_267_10 + arg_267_0 and not isNil(var_267_8) and arg_264_1.var_.actorSpriteComps1060 then
				for iter_267_6, iter_267_7 in pairs(arg_264_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_267_7 then
						if arg_264_1.isInRecall_ then
							iter_267_7.color = arg_264_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_267_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_264_1.var_.actorSpriteComps1060 = nil
			end

			local var_267_16 = 0
			local var_267_17 = 0.425

			if var_267_16 < arg_264_1.time_ and arg_264_1.time_ <= var_267_16 + arg_267_0 then
				arg_264_1.talkMaxDuration = 0
				arg_264_1.dialogCg_.alpha = 1

				arg_264_1.dialog_:SetActive(true)
				SetActive(arg_264_1.leftNameGo_, true)

				local var_267_18 = arg_264_1:FormatText(StoryNameCfg[595].name)

				arg_264_1.leftNameTxt_.text = var_267_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_264_1.leftNameTxt_.transform)

				arg_264_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_264_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_264_1:RecordName(arg_264_1.leftNameTxt_.text)
				SetActive(arg_264_1.iconTrs_.gameObject, false)
				arg_264_1.callingController_:SetSelectedState("normal")

				local var_267_19 = arg_264_1:GetWordFromCfg(417161064)
				local var_267_20 = arg_264_1:FormatText(var_267_19.content)

				arg_264_1.text_.text = var_267_20

				LuaForUtil.ClearLinePrefixSymbol(arg_264_1.text_)

				local var_267_21 = 17
				local var_267_22 = utf8.len(var_267_20)
				local var_267_23 = var_267_21 <= 0 and var_267_17 or var_267_17 * (var_267_22 / var_267_21)

				if var_267_23 > 0 and var_267_17 < var_267_23 then
					arg_264_1.talkMaxDuration = var_267_23

					if var_267_23 + var_267_16 > arg_264_1.duration_ then
						arg_264_1.duration_ = var_267_23 + var_267_16
					end
				end

				arg_264_1.text_.text = var_267_20
				arg_264_1.typewritter.percent = 0

				arg_264_1.typewritter:SetDirty()
				arg_264_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161064", "story_v_out_417161.awb") ~= 0 then
					local var_267_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161064", "story_v_out_417161.awb") / 1000

					if var_267_24 + var_267_16 > arg_264_1.duration_ then
						arg_264_1.duration_ = var_267_24 + var_267_16
					end

					if var_267_19.prefab_name ~= "" and arg_264_1.actors_[var_267_19.prefab_name] ~= nil then
						local var_267_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_264_1.actors_[var_267_19.prefab_name].transform, "story_v_out_417161", "417161064", "story_v_out_417161.awb")

						arg_264_1:RecordAudio("417161064", var_267_25)
						arg_264_1:RecordAudio("417161064", var_267_25)
					else
						arg_264_1:AudioAction("play", "voice", "story_v_out_417161", "417161064", "story_v_out_417161.awb")
					end

					arg_264_1:RecordHistoryTalkVoice("story_v_out_417161", "417161064", "story_v_out_417161.awb")
				end

				arg_264_1:RecordContent(arg_264_1.text_.text)
			end

			local var_267_26 = math.max(var_267_17, arg_264_1.talkMaxDuration)

			if var_267_16 <= arg_264_1.time_ and arg_264_1.time_ < var_267_16 + var_267_26 then
				arg_264_1.typewritter.percent = (arg_264_1.time_ - var_267_16) / var_267_26

				arg_264_1.typewritter:SetDirty()
			end

			if arg_264_1.time_ >= var_267_16 + var_267_26 and arg_264_1.time_ < var_267_16 + var_267_26 + arg_267_0 then
				arg_264_1.typewritter.percent = 1

				arg_264_1.typewritter:SetDirty()
				arg_264_1:ShowNextGo(true)
			end
		end
	end,
	Play417161065 = function(arg_268_0, arg_268_1)
		arg_268_1.time_ = 0
		arg_268_1.frameCnt_ = 0
		arg_268_1.state_ = "playing"
		arg_268_1.curTalkId_ = 417161065
		arg_268_1.duration_ = 2.77

		SetActive(arg_268_1.tipsGo_, false)

		function arg_268_1.onSingleLineFinish_()
			arg_268_1.onSingleLineUpdate_ = nil
			arg_268_1.onSingleLineFinish_ = nil
			arg_268_1.state_ = "waiting"
		end

		function arg_268_1.playNext_(arg_270_0)
			if arg_270_0 == 1 then
				arg_268_0:Play417161066(arg_268_1)
			end
		end

		function arg_268_1.onSingleLineUpdate_(arg_271_0)
			local var_271_0 = arg_268_1.actors_["1060"]
			local var_271_1 = 0

			if var_271_1 < arg_268_1.time_ and arg_268_1.time_ <= var_271_1 + arg_271_0 and not isNil(var_271_0) and arg_268_1.var_.actorSpriteComps1060 == nil then
				arg_268_1.var_.actorSpriteComps1060 = var_271_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_271_2 = 0.2

			if var_271_1 <= arg_268_1.time_ and arg_268_1.time_ < var_271_1 + var_271_2 and not isNil(var_271_0) then
				local var_271_3 = (arg_268_1.time_ - var_271_1) / var_271_2

				if arg_268_1.var_.actorSpriteComps1060 then
					for iter_271_0, iter_271_1 in pairs(arg_268_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_271_1 then
							if arg_268_1.isInRecall_ then
								local var_271_4 = Mathf.Lerp(iter_271_1.color.r, arg_268_1.hightColor1.r, var_271_3)
								local var_271_5 = Mathf.Lerp(iter_271_1.color.g, arg_268_1.hightColor1.g, var_271_3)
								local var_271_6 = Mathf.Lerp(iter_271_1.color.b, arg_268_1.hightColor1.b, var_271_3)

								iter_271_1.color = Color.New(var_271_4, var_271_5, var_271_6)
							else
								local var_271_7 = Mathf.Lerp(iter_271_1.color.r, 1, var_271_3)

								iter_271_1.color = Color.New(var_271_7, var_271_7, var_271_7)
							end
						end
					end
				end
			end

			if arg_268_1.time_ >= var_271_1 + var_271_2 and arg_268_1.time_ < var_271_1 + var_271_2 + arg_271_0 and not isNil(var_271_0) and arg_268_1.var_.actorSpriteComps1060 then
				for iter_271_2, iter_271_3 in pairs(arg_268_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_271_3 then
						if arg_268_1.isInRecall_ then
							iter_271_3.color = arg_268_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_271_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_268_1.var_.actorSpriteComps1060 = nil
			end

			local var_271_8 = arg_268_1.actors_["10128"]
			local var_271_9 = 0

			if var_271_9 < arg_268_1.time_ and arg_268_1.time_ <= var_271_9 + arg_271_0 and not isNil(var_271_8) and arg_268_1.var_.actorSpriteComps10128 == nil then
				arg_268_1.var_.actorSpriteComps10128 = var_271_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_271_10 = 0.2

			if var_271_9 <= arg_268_1.time_ and arg_268_1.time_ < var_271_9 + var_271_10 and not isNil(var_271_8) then
				local var_271_11 = (arg_268_1.time_ - var_271_9) / var_271_10

				if arg_268_1.var_.actorSpriteComps10128 then
					for iter_271_4, iter_271_5 in pairs(arg_268_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_271_5 then
							if arg_268_1.isInRecall_ then
								local var_271_12 = Mathf.Lerp(iter_271_5.color.r, arg_268_1.hightColor2.r, var_271_11)
								local var_271_13 = Mathf.Lerp(iter_271_5.color.g, arg_268_1.hightColor2.g, var_271_11)
								local var_271_14 = Mathf.Lerp(iter_271_5.color.b, arg_268_1.hightColor2.b, var_271_11)

								iter_271_5.color = Color.New(var_271_12, var_271_13, var_271_14)
							else
								local var_271_15 = Mathf.Lerp(iter_271_5.color.r, 0.5, var_271_11)

								iter_271_5.color = Color.New(var_271_15, var_271_15, var_271_15)
							end
						end
					end
				end
			end

			if arg_268_1.time_ >= var_271_9 + var_271_10 and arg_268_1.time_ < var_271_9 + var_271_10 + arg_271_0 and not isNil(var_271_8) and arg_268_1.var_.actorSpriteComps10128 then
				for iter_271_6, iter_271_7 in pairs(arg_268_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_271_7 then
						if arg_268_1.isInRecall_ then
							iter_271_7.color = arg_268_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_271_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_268_1.var_.actorSpriteComps10128 = nil
			end

			local var_271_16 = arg_268_1.actors_["1060"].transform
			local var_271_17 = 0

			if var_271_17 < arg_268_1.time_ and arg_268_1.time_ <= var_271_17 + arg_271_0 then
				arg_268_1.var_.moveOldPos1060 = var_271_16.localPosition
				var_271_16.localScale = Vector3.New(1, 1, 1)

				arg_268_1:CheckSpriteTmpPos("1060", 4)

				local var_271_18 = var_271_16.childCount

				for iter_271_8 = 0, var_271_18 - 1 do
					local var_271_19 = var_271_16:GetChild(iter_271_8)

					if var_271_19.name == "split_1" or not string.find(var_271_19.name, "split") then
						var_271_19.gameObject:SetActive(true)
					else
						var_271_19.gameObject:SetActive(false)
					end
				end
			end

			local var_271_20 = 0.001

			if var_271_17 <= arg_268_1.time_ and arg_268_1.time_ < var_271_17 + var_271_20 then
				local var_271_21 = (arg_268_1.time_ - var_271_17) / var_271_20
				local var_271_22 = Vector3.New(420.9, -430.8, 6.9)

				var_271_16.localPosition = Vector3.Lerp(arg_268_1.var_.moveOldPos1060, var_271_22, var_271_21)
			end

			if arg_268_1.time_ >= var_271_17 + var_271_20 and arg_268_1.time_ < var_271_17 + var_271_20 + arg_271_0 then
				var_271_16.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_271_23 = 0
			local var_271_24 = 0.3

			if var_271_23 < arg_268_1.time_ and arg_268_1.time_ <= var_271_23 + arg_271_0 then
				arg_268_1.talkMaxDuration = 0
				arg_268_1.dialogCg_.alpha = 1

				arg_268_1.dialog_:SetActive(true)
				SetActive(arg_268_1.leftNameGo_, true)

				local var_271_25 = arg_268_1:FormatText(StoryNameCfg[584].name)

				arg_268_1.leftNameTxt_.text = var_271_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_268_1.leftNameTxt_.transform)

				arg_268_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_268_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_268_1:RecordName(arg_268_1.leftNameTxt_.text)
				SetActive(arg_268_1.iconTrs_.gameObject, false)
				arg_268_1.callingController_:SetSelectedState("normal")

				local var_271_26 = arg_268_1:GetWordFromCfg(417161065)
				local var_271_27 = arg_268_1:FormatText(var_271_26.content)

				arg_268_1.text_.text = var_271_27

				LuaForUtil.ClearLinePrefixSymbol(arg_268_1.text_)

				local var_271_28 = 12
				local var_271_29 = utf8.len(var_271_27)
				local var_271_30 = var_271_28 <= 0 and var_271_24 or var_271_24 * (var_271_29 / var_271_28)

				if var_271_30 > 0 and var_271_24 < var_271_30 then
					arg_268_1.talkMaxDuration = var_271_30

					if var_271_30 + var_271_23 > arg_268_1.duration_ then
						arg_268_1.duration_ = var_271_30 + var_271_23
					end
				end

				arg_268_1.text_.text = var_271_27
				arg_268_1.typewritter.percent = 0

				arg_268_1.typewritter:SetDirty()
				arg_268_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161065", "story_v_out_417161.awb") ~= 0 then
					local var_271_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161065", "story_v_out_417161.awb") / 1000

					if var_271_31 + var_271_23 > arg_268_1.duration_ then
						arg_268_1.duration_ = var_271_31 + var_271_23
					end

					if var_271_26.prefab_name ~= "" and arg_268_1.actors_[var_271_26.prefab_name] ~= nil then
						local var_271_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_268_1.actors_[var_271_26.prefab_name].transform, "story_v_out_417161", "417161065", "story_v_out_417161.awb")

						arg_268_1:RecordAudio("417161065", var_271_32)
						arg_268_1:RecordAudio("417161065", var_271_32)
					else
						arg_268_1:AudioAction("play", "voice", "story_v_out_417161", "417161065", "story_v_out_417161.awb")
					end

					arg_268_1:RecordHistoryTalkVoice("story_v_out_417161", "417161065", "story_v_out_417161.awb")
				end

				arg_268_1:RecordContent(arg_268_1.text_.text)
			end

			local var_271_33 = math.max(var_271_24, arg_268_1.talkMaxDuration)

			if var_271_23 <= arg_268_1.time_ and arg_268_1.time_ < var_271_23 + var_271_33 then
				arg_268_1.typewritter.percent = (arg_268_1.time_ - var_271_23) / var_271_33

				arg_268_1.typewritter:SetDirty()
			end

			if arg_268_1.time_ >= var_271_23 + var_271_33 and arg_268_1.time_ < var_271_23 + var_271_33 + arg_271_0 then
				arg_268_1.typewritter.percent = 1

				arg_268_1.typewritter:SetDirty()
				arg_268_1:ShowNextGo(true)
			end
		end
	end,
	Play417161066 = function(arg_272_0, arg_272_1)
		arg_272_1.time_ = 0
		arg_272_1.frameCnt_ = 0
		arg_272_1.state_ = "playing"
		arg_272_1.curTalkId_ = 417161066
		arg_272_1.duration_ = 3.57

		SetActive(arg_272_1.tipsGo_, false)

		function arg_272_1.onSingleLineFinish_()
			arg_272_1.onSingleLineUpdate_ = nil
			arg_272_1.onSingleLineFinish_ = nil
			arg_272_1.state_ = "waiting"
		end

		function arg_272_1.playNext_(arg_274_0)
			if arg_274_0 == 1 then
				arg_272_0:Play417161067(arg_272_1)
			end
		end

		function arg_272_1.onSingleLineUpdate_(arg_275_0)
			local var_275_0 = arg_272_1.actors_["10128"]
			local var_275_1 = 0

			if var_275_1 < arg_272_1.time_ and arg_272_1.time_ <= var_275_1 + arg_275_0 and not isNil(var_275_0) and arg_272_1.var_.actorSpriteComps10128 == nil then
				arg_272_1.var_.actorSpriteComps10128 = var_275_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_275_2 = 0.2

			if var_275_1 <= arg_272_1.time_ and arg_272_1.time_ < var_275_1 + var_275_2 and not isNil(var_275_0) then
				local var_275_3 = (arg_272_1.time_ - var_275_1) / var_275_2

				if arg_272_1.var_.actorSpriteComps10128 then
					for iter_275_0, iter_275_1 in pairs(arg_272_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_275_1 then
							if arg_272_1.isInRecall_ then
								local var_275_4 = Mathf.Lerp(iter_275_1.color.r, arg_272_1.hightColor1.r, var_275_3)
								local var_275_5 = Mathf.Lerp(iter_275_1.color.g, arg_272_1.hightColor1.g, var_275_3)
								local var_275_6 = Mathf.Lerp(iter_275_1.color.b, arg_272_1.hightColor1.b, var_275_3)

								iter_275_1.color = Color.New(var_275_4, var_275_5, var_275_6)
							else
								local var_275_7 = Mathf.Lerp(iter_275_1.color.r, 1, var_275_3)

								iter_275_1.color = Color.New(var_275_7, var_275_7, var_275_7)
							end
						end
					end
				end
			end

			if arg_272_1.time_ >= var_275_1 + var_275_2 and arg_272_1.time_ < var_275_1 + var_275_2 + arg_275_0 and not isNil(var_275_0) and arg_272_1.var_.actorSpriteComps10128 then
				for iter_275_2, iter_275_3 in pairs(arg_272_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_275_3 then
						if arg_272_1.isInRecall_ then
							iter_275_3.color = arg_272_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_275_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_272_1.var_.actorSpriteComps10128 = nil
			end

			local var_275_8 = arg_272_1.actors_["1060"]
			local var_275_9 = 0

			if var_275_9 < arg_272_1.time_ and arg_272_1.time_ <= var_275_9 + arg_275_0 and not isNil(var_275_8) and arg_272_1.var_.actorSpriteComps1060 == nil then
				arg_272_1.var_.actorSpriteComps1060 = var_275_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_275_10 = 0.2

			if var_275_9 <= arg_272_1.time_ and arg_272_1.time_ < var_275_9 + var_275_10 and not isNil(var_275_8) then
				local var_275_11 = (arg_272_1.time_ - var_275_9) / var_275_10

				if arg_272_1.var_.actorSpriteComps1060 then
					for iter_275_4, iter_275_5 in pairs(arg_272_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_275_5 then
							if arg_272_1.isInRecall_ then
								local var_275_12 = Mathf.Lerp(iter_275_5.color.r, arg_272_1.hightColor2.r, var_275_11)
								local var_275_13 = Mathf.Lerp(iter_275_5.color.g, arg_272_1.hightColor2.g, var_275_11)
								local var_275_14 = Mathf.Lerp(iter_275_5.color.b, arg_272_1.hightColor2.b, var_275_11)

								iter_275_5.color = Color.New(var_275_12, var_275_13, var_275_14)
							else
								local var_275_15 = Mathf.Lerp(iter_275_5.color.r, 0.5, var_275_11)

								iter_275_5.color = Color.New(var_275_15, var_275_15, var_275_15)
							end
						end
					end
				end
			end

			if arg_272_1.time_ >= var_275_9 + var_275_10 and arg_272_1.time_ < var_275_9 + var_275_10 + arg_275_0 and not isNil(var_275_8) and arg_272_1.var_.actorSpriteComps1060 then
				for iter_275_6, iter_275_7 in pairs(arg_272_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_275_7 then
						if arg_272_1.isInRecall_ then
							iter_275_7.color = arg_272_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_275_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_272_1.var_.actorSpriteComps1060 = nil
			end

			local var_275_16 = 0
			local var_275_17 = 0.5

			if var_275_16 < arg_272_1.time_ and arg_272_1.time_ <= var_275_16 + arg_275_0 then
				arg_272_1.talkMaxDuration = 0
				arg_272_1.dialogCg_.alpha = 1

				arg_272_1.dialog_:SetActive(true)
				SetActive(arg_272_1.leftNameGo_, true)

				local var_275_18 = arg_272_1:FormatText(StoryNameCfg[595].name)

				arg_272_1.leftNameTxt_.text = var_275_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_272_1.leftNameTxt_.transform)

				arg_272_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_272_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_272_1:RecordName(arg_272_1.leftNameTxt_.text)
				SetActive(arg_272_1.iconTrs_.gameObject, false)
				arg_272_1.callingController_:SetSelectedState("normal")

				local var_275_19 = arg_272_1:GetWordFromCfg(417161066)
				local var_275_20 = arg_272_1:FormatText(var_275_19.content)

				arg_272_1.text_.text = var_275_20

				LuaForUtil.ClearLinePrefixSymbol(arg_272_1.text_)

				local var_275_21 = 20
				local var_275_22 = utf8.len(var_275_20)
				local var_275_23 = var_275_21 <= 0 and var_275_17 or var_275_17 * (var_275_22 / var_275_21)

				if var_275_23 > 0 and var_275_17 < var_275_23 then
					arg_272_1.talkMaxDuration = var_275_23

					if var_275_23 + var_275_16 > arg_272_1.duration_ then
						arg_272_1.duration_ = var_275_23 + var_275_16
					end
				end

				arg_272_1.text_.text = var_275_20
				arg_272_1.typewritter.percent = 0

				arg_272_1.typewritter:SetDirty()
				arg_272_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161066", "story_v_out_417161.awb") ~= 0 then
					local var_275_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161066", "story_v_out_417161.awb") / 1000

					if var_275_24 + var_275_16 > arg_272_1.duration_ then
						arg_272_1.duration_ = var_275_24 + var_275_16
					end

					if var_275_19.prefab_name ~= "" and arg_272_1.actors_[var_275_19.prefab_name] ~= nil then
						local var_275_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_272_1.actors_[var_275_19.prefab_name].transform, "story_v_out_417161", "417161066", "story_v_out_417161.awb")

						arg_272_1:RecordAudio("417161066", var_275_25)
						arg_272_1:RecordAudio("417161066", var_275_25)
					else
						arg_272_1:AudioAction("play", "voice", "story_v_out_417161", "417161066", "story_v_out_417161.awb")
					end

					arg_272_1:RecordHistoryTalkVoice("story_v_out_417161", "417161066", "story_v_out_417161.awb")
				end

				arg_272_1:RecordContent(arg_272_1.text_.text)
			end

			local var_275_26 = math.max(var_275_17, arg_272_1.talkMaxDuration)

			if var_275_16 <= arg_272_1.time_ and arg_272_1.time_ < var_275_16 + var_275_26 then
				arg_272_1.typewritter.percent = (arg_272_1.time_ - var_275_16) / var_275_26

				arg_272_1.typewritter:SetDirty()
			end

			if arg_272_1.time_ >= var_275_16 + var_275_26 and arg_272_1.time_ < var_275_16 + var_275_26 + arg_275_0 then
				arg_272_1.typewritter.percent = 1

				arg_272_1.typewritter:SetDirty()
				arg_272_1:ShowNextGo(true)
			end
		end
	end,
	Play417161067 = function(arg_276_0, arg_276_1)
		arg_276_1.time_ = 0
		arg_276_1.frameCnt_ = 0
		arg_276_1.state_ = "playing"
		arg_276_1.curTalkId_ = 417161067
		arg_276_1.duration_ = 6.53

		SetActive(arg_276_1.tipsGo_, false)

		function arg_276_1.onSingleLineFinish_()
			arg_276_1.onSingleLineUpdate_ = nil
			arg_276_1.onSingleLineFinish_ = nil
			arg_276_1.state_ = "waiting"
		end

		function arg_276_1.playNext_(arg_278_0)
			if arg_278_0 == 1 then
				arg_276_0:Play417161068(arg_276_1)
			end
		end

		function arg_276_1.onSingleLineUpdate_(arg_279_0)
			local var_279_0 = 0
			local var_279_1 = 0.925

			if var_279_0 < arg_276_1.time_ and arg_276_1.time_ <= var_279_0 + arg_279_0 then
				arg_276_1.talkMaxDuration = 0
				arg_276_1.dialogCg_.alpha = 1

				arg_276_1.dialog_:SetActive(true)
				SetActive(arg_276_1.leftNameGo_, true)

				local var_279_2 = arg_276_1:FormatText(StoryNameCfg[595].name)

				arg_276_1.leftNameTxt_.text = var_279_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_276_1.leftNameTxt_.transform)

				arg_276_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_276_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_276_1:RecordName(arg_276_1.leftNameTxt_.text)
				SetActive(arg_276_1.iconTrs_.gameObject, false)
				arg_276_1.callingController_:SetSelectedState("normal")

				local var_279_3 = arg_276_1:GetWordFromCfg(417161067)
				local var_279_4 = arg_276_1:FormatText(var_279_3.content)

				arg_276_1.text_.text = var_279_4

				LuaForUtil.ClearLinePrefixSymbol(arg_276_1.text_)

				local var_279_5 = 37
				local var_279_6 = utf8.len(var_279_4)
				local var_279_7 = var_279_5 <= 0 and var_279_1 or var_279_1 * (var_279_6 / var_279_5)

				if var_279_7 > 0 and var_279_1 < var_279_7 then
					arg_276_1.talkMaxDuration = var_279_7

					if var_279_7 + var_279_0 > arg_276_1.duration_ then
						arg_276_1.duration_ = var_279_7 + var_279_0
					end
				end

				arg_276_1.text_.text = var_279_4
				arg_276_1.typewritter.percent = 0

				arg_276_1.typewritter:SetDirty()
				arg_276_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161067", "story_v_out_417161.awb") ~= 0 then
					local var_279_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161067", "story_v_out_417161.awb") / 1000

					if var_279_8 + var_279_0 > arg_276_1.duration_ then
						arg_276_1.duration_ = var_279_8 + var_279_0
					end

					if var_279_3.prefab_name ~= "" and arg_276_1.actors_[var_279_3.prefab_name] ~= nil then
						local var_279_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_276_1.actors_[var_279_3.prefab_name].transform, "story_v_out_417161", "417161067", "story_v_out_417161.awb")

						arg_276_1:RecordAudio("417161067", var_279_9)
						arg_276_1:RecordAudio("417161067", var_279_9)
					else
						arg_276_1:AudioAction("play", "voice", "story_v_out_417161", "417161067", "story_v_out_417161.awb")
					end

					arg_276_1:RecordHistoryTalkVoice("story_v_out_417161", "417161067", "story_v_out_417161.awb")
				end

				arg_276_1:RecordContent(arg_276_1.text_.text)
			end

			local var_279_10 = math.max(var_279_1, arg_276_1.talkMaxDuration)

			if var_279_0 <= arg_276_1.time_ and arg_276_1.time_ < var_279_0 + var_279_10 then
				arg_276_1.typewritter.percent = (arg_276_1.time_ - var_279_0) / var_279_10

				arg_276_1.typewritter:SetDirty()
			end

			if arg_276_1.time_ >= var_279_0 + var_279_10 and arg_276_1.time_ < var_279_0 + var_279_10 + arg_279_0 then
				arg_276_1.typewritter.percent = 1

				arg_276_1.typewritter:SetDirty()
				arg_276_1:ShowNextGo(true)
			end
		end
	end,
	Play417161068 = function(arg_280_0, arg_280_1)
		arg_280_1.time_ = 0
		arg_280_1.frameCnt_ = 0
		arg_280_1.state_ = "playing"
		arg_280_1.curTalkId_ = 417161068
		arg_280_1.duration_ = 4.33

		SetActive(arg_280_1.tipsGo_, false)

		function arg_280_1.onSingleLineFinish_()
			arg_280_1.onSingleLineUpdate_ = nil
			arg_280_1.onSingleLineFinish_ = nil
			arg_280_1.state_ = "waiting"
		end

		function arg_280_1.playNext_(arg_282_0)
			if arg_282_0 == 1 then
				arg_280_0:Play417161069(arg_280_1)
			end
		end

		function arg_280_1.onSingleLineUpdate_(arg_283_0)
			local var_283_0 = arg_280_1.actors_["1060"]
			local var_283_1 = 0

			if var_283_1 < arg_280_1.time_ and arg_280_1.time_ <= var_283_1 + arg_283_0 and not isNil(var_283_0) and arg_280_1.var_.actorSpriteComps1060 == nil then
				arg_280_1.var_.actorSpriteComps1060 = var_283_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_283_2 = 0.2

			if var_283_1 <= arg_280_1.time_ and arg_280_1.time_ < var_283_1 + var_283_2 and not isNil(var_283_0) then
				local var_283_3 = (arg_280_1.time_ - var_283_1) / var_283_2

				if arg_280_1.var_.actorSpriteComps1060 then
					for iter_283_0, iter_283_1 in pairs(arg_280_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_283_1 then
							if arg_280_1.isInRecall_ then
								local var_283_4 = Mathf.Lerp(iter_283_1.color.r, arg_280_1.hightColor1.r, var_283_3)
								local var_283_5 = Mathf.Lerp(iter_283_1.color.g, arg_280_1.hightColor1.g, var_283_3)
								local var_283_6 = Mathf.Lerp(iter_283_1.color.b, arg_280_1.hightColor1.b, var_283_3)

								iter_283_1.color = Color.New(var_283_4, var_283_5, var_283_6)
							else
								local var_283_7 = Mathf.Lerp(iter_283_1.color.r, 1, var_283_3)

								iter_283_1.color = Color.New(var_283_7, var_283_7, var_283_7)
							end
						end
					end
				end
			end

			if arg_280_1.time_ >= var_283_1 + var_283_2 and arg_280_1.time_ < var_283_1 + var_283_2 + arg_283_0 and not isNil(var_283_0) and arg_280_1.var_.actorSpriteComps1060 then
				for iter_283_2, iter_283_3 in pairs(arg_280_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_283_3 then
						if arg_280_1.isInRecall_ then
							iter_283_3.color = arg_280_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_283_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_280_1.var_.actorSpriteComps1060 = nil
			end

			local var_283_8 = arg_280_1.actors_["10128"]
			local var_283_9 = 0

			if var_283_9 < arg_280_1.time_ and arg_280_1.time_ <= var_283_9 + arg_283_0 and not isNil(var_283_8) and arg_280_1.var_.actorSpriteComps10128 == nil then
				arg_280_1.var_.actorSpriteComps10128 = var_283_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_283_10 = 0.2

			if var_283_9 <= arg_280_1.time_ and arg_280_1.time_ < var_283_9 + var_283_10 and not isNil(var_283_8) then
				local var_283_11 = (arg_280_1.time_ - var_283_9) / var_283_10

				if arg_280_1.var_.actorSpriteComps10128 then
					for iter_283_4, iter_283_5 in pairs(arg_280_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_283_5 then
							if arg_280_1.isInRecall_ then
								local var_283_12 = Mathf.Lerp(iter_283_5.color.r, arg_280_1.hightColor2.r, var_283_11)
								local var_283_13 = Mathf.Lerp(iter_283_5.color.g, arg_280_1.hightColor2.g, var_283_11)
								local var_283_14 = Mathf.Lerp(iter_283_5.color.b, arg_280_1.hightColor2.b, var_283_11)

								iter_283_5.color = Color.New(var_283_12, var_283_13, var_283_14)
							else
								local var_283_15 = Mathf.Lerp(iter_283_5.color.r, 0.5, var_283_11)

								iter_283_5.color = Color.New(var_283_15, var_283_15, var_283_15)
							end
						end
					end
				end
			end

			if arg_280_1.time_ >= var_283_9 + var_283_10 and arg_280_1.time_ < var_283_9 + var_283_10 + arg_283_0 and not isNil(var_283_8) and arg_280_1.var_.actorSpriteComps10128 then
				for iter_283_6, iter_283_7 in pairs(arg_280_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_283_7 then
						if arg_280_1.isInRecall_ then
							iter_283_7.color = arg_280_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_283_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_280_1.var_.actorSpriteComps10128 = nil
			end

			local var_283_16 = 0
			local var_283_17 = 0.55

			if var_283_16 < arg_280_1.time_ and arg_280_1.time_ <= var_283_16 + arg_283_0 then
				arg_280_1.talkMaxDuration = 0
				arg_280_1.dialogCg_.alpha = 1

				arg_280_1.dialog_:SetActive(true)
				SetActive(arg_280_1.leftNameGo_, true)

				local var_283_18 = arg_280_1:FormatText(StoryNameCfg[584].name)

				arg_280_1.leftNameTxt_.text = var_283_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_280_1.leftNameTxt_.transform)

				arg_280_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_280_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_280_1:RecordName(arg_280_1.leftNameTxt_.text)
				SetActive(arg_280_1.iconTrs_.gameObject, false)
				arg_280_1.callingController_:SetSelectedState("normal")

				local var_283_19 = arg_280_1:GetWordFromCfg(417161068)
				local var_283_20 = arg_280_1:FormatText(var_283_19.content)

				arg_280_1.text_.text = var_283_20

				LuaForUtil.ClearLinePrefixSymbol(arg_280_1.text_)

				local var_283_21 = 22
				local var_283_22 = utf8.len(var_283_20)
				local var_283_23 = var_283_21 <= 0 and var_283_17 or var_283_17 * (var_283_22 / var_283_21)

				if var_283_23 > 0 and var_283_17 < var_283_23 then
					arg_280_1.talkMaxDuration = var_283_23

					if var_283_23 + var_283_16 > arg_280_1.duration_ then
						arg_280_1.duration_ = var_283_23 + var_283_16
					end
				end

				arg_280_1.text_.text = var_283_20
				arg_280_1.typewritter.percent = 0

				arg_280_1.typewritter:SetDirty()
				arg_280_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161068", "story_v_out_417161.awb") ~= 0 then
					local var_283_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161068", "story_v_out_417161.awb") / 1000

					if var_283_24 + var_283_16 > arg_280_1.duration_ then
						arg_280_1.duration_ = var_283_24 + var_283_16
					end

					if var_283_19.prefab_name ~= "" and arg_280_1.actors_[var_283_19.prefab_name] ~= nil then
						local var_283_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_280_1.actors_[var_283_19.prefab_name].transform, "story_v_out_417161", "417161068", "story_v_out_417161.awb")

						arg_280_1:RecordAudio("417161068", var_283_25)
						arg_280_1:RecordAudio("417161068", var_283_25)
					else
						arg_280_1:AudioAction("play", "voice", "story_v_out_417161", "417161068", "story_v_out_417161.awb")
					end

					arg_280_1:RecordHistoryTalkVoice("story_v_out_417161", "417161068", "story_v_out_417161.awb")
				end

				arg_280_1:RecordContent(arg_280_1.text_.text)
			end

			local var_283_26 = math.max(var_283_17, arg_280_1.talkMaxDuration)

			if var_283_16 <= arg_280_1.time_ and arg_280_1.time_ < var_283_16 + var_283_26 then
				arg_280_1.typewritter.percent = (arg_280_1.time_ - var_283_16) / var_283_26

				arg_280_1.typewritter:SetDirty()
			end

			if arg_280_1.time_ >= var_283_16 + var_283_26 and arg_280_1.time_ < var_283_16 + var_283_26 + arg_283_0 then
				arg_280_1.typewritter.percent = 1

				arg_280_1.typewritter:SetDirty()
				arg_280_1:ShowNextGo(true)
			end
		end
	end,
	Play417161069 = function(arg_284_0, arg_284_1)
		arg_284_1.time_ = 0
		arg_284_1.frameCnt_ = 0
		arg_284_1.state_ = "playing"
		arg_284_1.curTalkId_ = 417161069
		arg_284_1.duration_ = 8.9

		SetActive(arg_284_1.tipsGo_, false)

		function arg_284_1.onSingleLineFinish_()
			arg_284_1.onSingleLineUpdate_ = nil
			arg_284_1.onSingleLineFinish_ = nil
			arg_284_1.state_ = "waiting"
		end

		function arg_284_1.playNext_(arg_286_0)
			if arg_286_0 == 1 then
				arg_284_0:Play417161070(arg_284_1)
			end
		end

		function arg_284_1.onSingleLineUpdate_(arg_287_0)
			local var_287_0 = 0
			local var_287_1 = 1.1

			if var_287_0 < arg_284_1.time_ and arg_284_1.time_ <= var_287_0 + arg_287_0 then
				arg_284_1.talkMaxDuration = 0
				arg_284_1.dialogCg_.alpha = 1

				arg_284_1.dialog_:SetActive(true)
				SetActive(arg_284_1.leftNameGo_, true)

				local var_287_2 = arg_284_1:FormatText(StoryNameCfg[584].name)

				arg_284_1.leftNameTxt_.text = var_287_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_284_1.leftNameTxt_.transform)

				arg_284_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_284_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_284_1:RecordName(arg_284_1.leftNameTxt_.text)
				SetActive(arg_284_1.iconTrs_.gameObject, false)
				arg_284_1.callingController_:SetSelectedState("normal")

				local var_287_3 = arg_284_1:GetWordFromCfg(417161069)
				local var_287_4 = arg_284_1:FormatText(var_287_3.content)

				arg_284_1.text_.text = var_287_4

				LuaForUtil.ClearLinePrefixSymbol(arg_284_1.text_)

				local var_287_5 = 44
				local var_287_6 = utf8.len(var_287_4)
				local var_287_7 = var_287_5 <= 0 and var_287_1 or var_287_1 * (var_287_6 / var_287_5)

				if var_287_7 > 0 and var_287_1 < var_287_7 then
					arg_284_1.talkMaxDuration = var_287_7

					if var_287_7 + var_287_0 > arg_284_1.duration_ then
						arg_284_1.duration_ = var_287_7 + var_287_0
					end
				end

				arg_284_1.text_.text = var_287_4
				arg_284_1.typewritter.percent = 0

				arg_284_1.typewritter:SetDirty()
				arg_284_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161069", "story_v_out_417161.awb") ~= 0 then
					local var_287_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161069", "story_v_out_417161.awb") / 1000

					if var_287_8 + var_287_0 > arg_284_1.duration_ then
						arg_284_1.duration_ = var_287_8 + var_287_0
					end

					if var_287_3.prefab_name ~= "" and arg_284_1.actors_[var_287_3.prefab_name] ~= nil then
						local var_287_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_284_1.actors_[var_287_3.prefab_name].transform, "story_v_out_417161", "417161069", "story_v_out_417161.awb")

						arg_284_1:RecordAudio("417161069", var_287_9)
						arg_284_1:RecordAudio("417161069", var_287_9)
					else
						arg_284_1:AudioAction("play", "voice", "story_v_out_417161", "417161069", "story_v_out_417161.awb")
					end

					arg_284_1:RecordHistoryTalkVoice("story_v_out_417161", "417161069", "story_v_out_417161.awb")
				end

				arg_284_1:RecordContent(arg_284_1.text_.text)
			end

			local var_287_10 = math.max(var_287_1, arg_284_1.talkMaxDuration)

			if var_287_0 <= arg_284_1.time_ and arg_284_1.time_ < var_287_0 + var_287_10 then
				arg_284_1.typewritter.percent = (arg_284_1.time_ - var_287_0) / var_287_10

				arg_284_1.typewritter:SetDirty()
			end

			if arg_284_1.time_ >= var_287_0 + var_287_10 and arg_284_1.time_ < var_287_0 + var_287_10 + arg_287_0 then
				arg_284_1.typewritter.percent = 1

				arg_284_1.typewritter:SetDirty()
				arg_284_1:ShowNextGo(true)
			end
		end
	end,
	Play417161070 = function(arg_288_0, arg_288_1)
		arg_288_1.time_ = 0
		arg_288_1.frameCnt_ = 0
		arg_288_1.state_ = "playing"
		arg_288_1.curTalkId_ = 417161070
		arg_288_1.duration_ = 5.5

		SetActive(arg_288_1.tipsGo_, false)

		function arg_288_1.onSingleLineFinish_()
			arg_288_1.onSingleLineUpdate_ = nil
			arg_288_1.onSingleLineFinish_ = nil
			arg_288_1.state_ = "waiting"
		end

		function arg_288_1.playNext_(arg_290_0)
			if arg_290_0 == 1 then
				arg_288_0:Play417161071(arg_288_1)
			end
		end

		function arg_288_1.onSingleLineUpdate_(arg_291_0)
			local var_291_0 = arg_288_1.actors_["10128"]
			local var_291_1 = 0

			if var_291_1 < arg_288_1.time_ and arg_288_1.time_ <= var_291_1 + arg_291_0 and not isNil(var_291_0) and arg_288_1.var_.actorSpriteComps10128 == nil then
				arg_288_1.var_.actorSpriteComps10128 = var_291_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_291_2 = 0.2

			if var_291_1 <= arg_288_1.time_ and arg_288_1.time_ < var_291_1 + var_291_2 and not isNil(var_291_0) then
				local var_291_3 = (arg_288_1.time_ - var_291_1) / var_291_2

				if arg_288_1.var_.actorSpriteComps10128 then
					for iter_291_0, iter_291_1 in pairs(arg_288_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_291_1 then
							if arg_288_1.isInRecall_ then
								local var_291_4 = Mathf.Lerp(iter_291_1.color.r, arg_288_1.hightColor1.r, var_291_3)
								local var_291_5 = Mathf.Lerp(iter_291_1.color.g, arg_288_1.hightColor1.g, var_291_3)
								local var_291_6 = Mathf.Lerp(iter_291_1.color.b, arg_288_1.hightColor1.b, var_291_3)

								iter_291_1.color = Color.New(var_291_4, var_291_5, var_291_6)
							else
								local var_291_7 = Mathf.Lerp(iter_291_1.color.r, 1, var_291_3)

								iter_291_1.color = Color.New(var_291_7, var_291_7, var_291_7)
							end
						end
					end
				end
			end

			if arg_288_1.time_ >= var_291_1 + var_291_2 and arg_288_1.time_ < var_291_1 + var_291_2 + arg_291_0 and not isNil(var_291_0) and arg_288_1.var_.actorSpriteComps10128 then
				for iter_291_2, iter_291_3 in pairs(arg_288_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_291_3 then
						if arg_288_1.isInRecall_ then
							iter_291_3.color = arg_288_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_291_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_288_1.var_.actorSpriteComps10128 = nil
			end

			local var_291_8 = arg_288_1.actors_["1060"]
			local var_291_9 = 0

			if var_291_9 < arg_288_1.time_ and arg_288_1.time_ <= var_291_9 + arg_291_0 and not isNil(var_291_8) and arg_288_1.var_.actorSpriteComps1060 == nil then
				arg_288_1.var_.actorSpriteComps1060 = var_291_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_291_10 = 0.2

			if var_291_9 <= arg_288_1.time_ and arg_288_1.time_ < var_291_9 + var_291_10 and not isNil(var_291_8) then
				local var_291_11 = (arg_288_1.time_ - var_291_9) / var_291_10

				if arg_288_1.var_.actorSpriteComps1060 then
					for iter_291_4, iter_291_5 in pairs(arg_288_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_291_5 then
							if arg_288_1.isInRecall_ then
								local var_291_12 = Mathf.Lerp(iter_291_5.color.r, arg_288_1.hightColor2.r, var_291_11)
								local var_291_13 = Mathf.Lerp(iter_291_5.color.g, arg_288_1.hightColor2.g, var_291_11)
								local var_291_14 = Mathf.Lerp(iter_291_5.color.b, arg_288_1.hightColor2.b, var_291_11)

								iter_291_5.color = Color.New(var_291_12, var_291_13, var_291_14)
							else
								local var_291_15 = Mathf.Lerp(iter_291_5.color.r, 0.5, var_291_11)

								iter_291_5.color = Color.New(var_291_15, var_291_15, var_291_15)
							end
						end
					end
				end
			end

			if arg_288_1.time_ >= var_291_9 + var_291_10 and arg_288_1.time_ < var_291_9 + var_291_10 + arg_291_0 and not isNil(var_291_8) and arg_288_1.var_.actorSpriteComps1060 then
				for iter_291_6, iter_291_7 in pairs(arg_288_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_291_7 then
						if arg_288_1.isInRecall_ then
							iter_291_7.color = arg_288_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_291_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_288_1.var_.actorSpriteComps1060 = nil
			end

			local var_291_16 = 0
			local var_291_17 = 0.65

			if var_291_16 < arg_288_1.time_ and arg_288_1.time_ <= var_291_16 + arg_291_0 then
				arg_288_1.talkMaxDuration = 0
				arg_288_1.dialogCg_.alpha = 1

				arg_288_1.dialog_:SetActive(true)
				SetActive(arg_288_1.leftNameGo_, true)

				local var_291_18 = arg_288_1:FormatText(StoryNameCfg[595].name)

				arg_288_1.leftNameTxt_.text = var_291_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_288_1.leftNameTxt_.transform)

				arg_288_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_288_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_288_1:RecordName(arg_288_1.leftNameTxt_.text)
				SetActive(arg_288_1.iconTrs_.gameObject, false)
				arg_288_1.callingController_:SetSelectedState("normal")

				local var_291_19 = arg_288_1:GetWordFromCfg(417161070)
				local var_291_20 = arg_288_1:FormatText(var_291_19.content)

				arg_288_1.text_.text = var_291_20

				LuaForUtil.ClearLinePrefixSymbol(arg_288_1.text_)

				local var_291_21 = 26
				local var_291_22 = utf8.len(var_291_20)
				local var_291_23 = var_291_21 <= 0 and var_291_17 or var_291_17 * (var_291_22 / var_291_21)

				if var_291_23 > 0 and var_291_17 < var_291_23 then
					arg_288_1.talkMaxDuration = var_291_23

					if var_291_23 + var_291_16 > arg_288_1.duration_ then
						arg_288_1.duration_ = var_291_23 + var_291_16
					end
				end

				arg_288_1.text_.text = var_291_20
				arg_288_1.typewritter.percent = 0

				arg_288_1.typewritter:SetDirty()
				arg_288_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161070", "story_v_out_417161.awb") ~= 0 then
					local var_291_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161070", "story_v_out_417161.awb") / 1000

					if var_291_24 + var_291_16 > arg_288_1.duration_ then
						arg_288_1.duration_ = var_291_24 + var_291_16
					end

					if var_291_19.prefab_name ~= "" and arg_288_1.actors_[var_291_19.prefab_name] ~= nil then
						local var_291_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_288_1.actors_[var_291_19.prefab_name].transform, "story_v_out_417161", "417161070", "story_v_out_417161.awb")

						arg_288_1:RecordAudio("417161070", var_291_25)
						arg_288_1:RecordAudio("417161070", var_291_25)
					else
						arg_288_1:AudioAction("play", "voice", "story_v_out_417161", "417161070", "story_v_out_417161.awb")
					end

					arg_288_1:RecordHistoryTalkVoice("story_v_out_417161", "417161070", "story_v_out_417161.awb")
				end

				arg_288_1:RecordContent(arg_288_1.text_.text)
			end

			local var_291_26 = math.max(var_291_17, arg_288_1.talkMaxDuration)

			if var_291_16 <= arg_288_1.time_ and arg_288_1.time_ < var_291_16 + var_291_26 then
				arg_288_1.typewritter.percent = (arg_288_1.time_ - var_291_16) / var_291_26

				arg_288_1.typewritter:SetDirty()
			end

			if arg_288_1.time_ >= var_291_16 + var_291_26 and arg_288_1.time_ < var_291_16 + var_291_26 + arg_291_0 then
				arg_288_1.typewritter.percent = 1

				arg_288_1.typewritter:SetDirty()
				arg_288_1:ShowNextGo(true)
			end
		end
	end,
	Play417161071 = function(arg_292_0, arg_292_1)
		arg_292_1.time_ = 0
		arg_292_1.frameCnt_ = 0
		arg_292_1.state_ = "playing"
		arg_292_1.curTalkId_ = 417161071
		arg_292_1.duration_ = 2.93

		SetActive(arg_292_1.tipsGo_, false)

		function arg_292_1.onSingleLineFinish_()
			arg_292_1.onSingleLineUpdate_ = nil
			arg_292_1.onSingleLineFinish_ = nil
			arg_292_1.state_ = "waiting"
		end

		function arg_292_1.playNext_(arg_294_0)
			if arg_294_0 == 1 then
				arg_292_0:Play417161072(arg_292_1)
			end
		end

		function arg_292_1.onSingleLineUpdate_(arg_295_0)
			local var_295_0 = arg_292_1.actors_["1060"]
			local var_295_1 = 0

			if var_295_1 < arg_292_1.time_ and arg_292_1.time_ <= var_295_1 + arg_295_0 and not isNil(var_295_0) and arg_292_1.var_.actorSpriteComps1060 == nil then
				arg_292_1.var_.actorSpriteComps1060 = var_295_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_295_2 = 0.2

			if var_295_1 <= arg_292_1.time_ and arg_292_1.time_ < var_295_1 + var_295_2 and not isNil(var_295_0) then
				local var_295_3 = (arg_292_1.time_ - var_295_1) / var_295_2

				if arg_292_1.var_.actorSpriteComps1060 then
					for iter_295_0, iter_295_1 in pairs(arg_292_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_295_1 then
							if arg_292_1.isInRecall_ then
								local var_295_4 = Mathf.Lerp(iter_295_1.color.r, arg_292_1.hightColor1.r, var_295_3)
								local var_295_5 = Mathf.Lerp(iter_295_1.color.g, arg_292_1.hightColor1.g, var_295_3)
								local var_295_6 = Mathf.Lerp(iter_295_1.color.b, arg_292_1.hightColor1.b, var_295_3)

								iter_295_1.color = Color.New(var_295_4, var_295_5, var_295_6)
							else
								local var_295_7 = Mathf.Lerp(iter_295_1.color.r, 1, var_295_3)

								iter_295_1.color = Color.New(var_295_7, var_295_7, var_295_7)
							end
						end
					end
				end
			end

			if arg_292_1.time_ >= var_295_1 + var_295_2 and arg_292_1.time_ < var_295_1 + var_295_2 + arg_295_0 and not isNil(var_295_0) and arg_292_1.var_.actorSpriteComps1060 then
				for iter_295_2, iter_295_3 in pairs(arg_292_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_295_3 then
						if arg_292_1.isInRecall_ then
							iter_295_3.color = arg_292_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_295_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_292_1.var_.actorSpriteComps1060 = nil
			end

			local var_295_8 = arg_292_1.actors_["10128"]
			local var_295_9 = 0

			if var_295_9 < arg_292_1.time_ and arg_292_1.time_ <= var_295_9 + arg_295_0 and not isNil(var_295_8) and arg_292_1.var_.actorSpriteComps10128 == nil then
				arg_292_1.var_.actorSpriteComps10128 = var_295_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_295_10 = 0.2

			if var_295_9 <= arg_292_1.time_ and arg_292_1.time_ < var_295_9 + var_295_10 and not isNil(var_295_8) then
				local var_295_11 = (arg_292_1.time_ - var_295_9) / var_295_10

				if arg_292_1.var_.actorSpriteComps10128 then
					for iter_295_4, iter_295_5 in pairs(arg_292_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_295_5 then
							if arg_292_1.isInRecall_ then
								local var_295_12 = Mathf.Lerp(iter_295_5.color.r, arg_292_1.hightColor2.r, var_295_11)
								local var_295_13 = Mathf.Lerp(iter_295_5.color.g, arg_292_1.hightColor2.g, var_295_11)
								local var_295_14 = Mathf.Lerp(iter_295_5.color.b, arg_292_1.hightColor2.b, var_295_11)

								iter_295_5.color = Color.New(var_295_12, var_295_13, var_295_14)
							else
								local var_295_15 = Mathf.Lerp(iter_295_5.color.r, 0.5, var_295_11)

								iter_295_5.color = Color.New(var_295_15, var_295_15, var_295_15)
							end
						end
					end
				end
			end

			if arg_292_1.time_ >= var_295_9 + var_295_10 and arg_292_1.time_ < var_295_9 + var_295_10 + arg_295_0 and not isNil(var_295_8) and arg_292_1.var_.actorSpriteComps10128 then
				for iter_295_6, iter_295_7 in pairs(arg_292_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_295_7 then
						if arg_292_1.isInRecall_ then
							iter_295_7.color = arg_292_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_295_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_292_1.var_.actorSpriteComps10128 = nil
			end

			local var_295_16 = 0
			local var_295_17 = 0.325

			if var_295_16 < arg_292_1.time_ and arg_292_1.time_ <= var_295_16 + arg_295_0 then
				arg_292_1.talkMaxDuration = 0
				arg_292_1.dialogCg_.alpha = 1

				arg_292_1.dialog_:SetActive(true)
				SetActive(arg_292_1.leftNameGo_, true)

				local var_295_18 = arg_292_1:FormatText(StoryNameCfg[584].name)

				arg_292_1.leftNameTxt_.text = var_295_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_292_1.leftNameTxt_.transform)

				arg_292_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_292_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_292_1:RecordName(arg_292_1.leftNameTxt_.text)
				SetActive(arg_292_1.iconTrs_.gameObject, false)
				arg_292_1.callingController_:SetSelectedState("normal")

				local var_295_19 = arg_292_1:GetWordFromCfg(417161071)
				local var_295_20 = arg_292_1:FormatText(var_295_19.content)

				arg_292_1.text_.text = var_295_20

				LuaForUtil.ClearLinePrefixSymbol(arg_292_1.text_)

				local var_295_21 = 13
				local var_295_22 = utf8.len(var_295_20)
				local var_295_23 = var_295_21 <= 0 and var_295_17 or var_295_17 * (var_295_22 / var_295_21)

				if var_295_23 > 0 and var_295_17 < var_295_23 then
					arg_292_1.talkMaxDuration = var_295_23

					if var_295_23 + var_295_16 > arg_292_1.duration_ then
						arg_292_1.duration_ = var_295_23 + var_295_16
					end
				end

				arg_292_1.text_.text = var_295_20
				arg_292_1.typewritter.percent = 0

				arg_292_1.typewritter:SetDirty()
				arg_292_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161071", "story_v_out_417161.awb") ~= 0 then
					local var_295_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161071", "story_v_out_417161.awb") / 1000

					if var_295_24 + var_295_16 > arg_292_1.duration_ then
						arg_292_1.duration_ = var_295_24 + var_295_16
					end

					if var_295_19.prefab_name ~= "" and arg_292_1.actors_[var_295_19.prefab_name] ~= nil then
						local var_295_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_292_1.actors_[var_295_19.prefab_name].transform, "story_v_out_417161", "417161071", "story_v_out_417161.awb")

						arg_292_1:RecordAudio("417161071", var_295_25)
						arg_292_1:RecordAudio("417161071", var_295_25)
					else
						arg_292_1:AudioAction("play", "voice", "story_v_out_417161", "417161071", "story_v_out_417161.awb")
					end

					arg_292_1:RecordHistoryTalkVoice("story_v_out_417161", "417161071", "story_v_out_417161.awb")
				end

				arg_292_1:RecordContent(arg_292_1.text_.text)
			end

			local var_295_26 = math.max(var_295_17, arg_292_1.talkMaxDuration)

			if var_295_16 <= arg_292_1.time_ and arg_292_1.time_ < var_295_16 + var_295_26 then
				arg_292_1.typewritter.percent = (arg_292_1.time_ - var_295_16) / var_295_26

				arg_292_1.typewritter:SetDirty()
			end

			if arg_292_1.time_ >= var_295_16 + var_295_26 and arg_292_1.time_ < var_295_16 + var_295_26 + arg_295_0 then
				arg_292_1.typewritter.percent = 1

				arg_292_1.typewritter:SetDirty()
				arg_292_1:ShowNextGo(true)
			end
		end
	end,
	Play417161072 = function(arg_296_0, arg_296_1)
		arg_296_1.time_ = 0
		arg_296_1.frameCnt_ = 0
		arg_296_1.state_ = "playing"
		arg_296_1.curTalkId_ = 417161072
		arg_296_1.duration_ = 5

		SetActive(arg_296_1.tipsGo_, false)

		function arg_296_1.onSingleLineFinish_()
			arg_296_1.onSingleLineUpdate_ = nil
			arg_296_1.onSingleLineFinish_ = nil
			arg_296_1.state_ = "waiting"
		end

		function arg_296_1.playNext_(arg_298_0)
			if arg_298_0 == 1 then
				arg_296_0:Play417161073(arg_296_1)
			end
		end

		function arg_296_1.onSingleLineUpdate_(arg_299_0)
			local var_299_0 = arg_296_1.actors_["1060"].transform
			local var_299_1 = 0

			if var_299_1 < arg_296_1.time_ and arg_296_1.time_ <= var_299_1 + arg_299_0 then
				arg_296_1.var_.moveOldPos1060 = var_299_0.localPosition
				var_299_0.localScale = Vector3.New(1, 1, 1)

				arg_296_1:CheckSpriteTmpPos("1060", 7)

				local var_299_2 = var_299_0.childCount

				for iter_299_0 = 0, var_299_2 - 1 do
					local var_299_3 = var_299_0:GetChild(iter_299_0)

					if var_299_3.name == "" or not string.find(var_299_3.name, "split") then
						var_299_3.gameObject:SetActive(true)
					else
						var_299_3.gameObject:SetActive(false)
					end
				end
			end

			local var_299_4 = 0.001

			if var_299_1 <= arg_296_1.time_ and arg_296_1.time_ < var_299_1 + var_299_4 then
				local var_299_5 = (arg_296_1.time_ - var_299_1) / var_299_4
				local var_299_6 = Vector3.New(0, -2000, -40)

				var_299_0.localPosition = Vector3.Lerp(arg_296_1.var_.moveOldPos1060, var_299_6, var_299_5)
			end

			if arg_296_1.time_ >= var_299_1 + var_299_4 and arg_296_1.time_ < var_299_1 + var_299_4 + arg_299_0 then
				var_299_0.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_299_7 = arg_296_1.actors_["10128"].transform
			local var_299_8 = 0

			if var_299_8 < arg_296_1.time_ and arg_296_1.time_ <= var_299_8 + arg_299_0 then
				arg_296_1.var_.moveOldPos10128 = var_299_7.localPosition
				var_299_7.localScale = Vector3.New(1, 1, 1)

				arg_296_1:CheckSpriteTmpPos("10128", 7)

				local var_299_9 = var_299_7.childCount

				for iter_299_1 = 0, var_299_9 - 1 do
					local var_299_10 = var_299_7:GetChild(iter_299_1)

					if var_299_10.name == "" or not string.find(var_299_10.name, "split") then
						var_299_10.gameObject:SetActive(true)
					else
						var_299_10.gameObject:SetActive(false)
					end
				end
			end

			local var_299_11 = 0.001

			if var_299_8 <= arg_296_1.time_ and arg_296_1.time_ < var_299_8 + var_299_11 then
				local var_299_12 = (arg_296_1.time_ - var_299_8) / var_299_11
				local var_299_13 = Vector3.New(0, -2000, -300)

				var_299_7.localPosition = Vector3.Lerp(arg_296_1.var_.moveOldPos10128, var_299_13, var_299_12)
			end

			if arg_296_1.time_ >= var_299_8 + var_299_11 and arg_296_1.time_ < var_299_8 + var_299_11 + arg_299_0 then
				var_299_7.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_299_14 = 0
			local var_299_15 = 0.7

			if var_299_14 < arg_296_1.time_ and arg_296_1.time_ <= var_299_14 + arg_299_0 then
				arg_296_1.talkMaxDuration = 0
				arg_296_1.dialogCg_.alpha = 1

				arg_296_1.dialog_:SetActive(true)
				SetActive(arg_296_1.leftNameGo_, false)

				arg_296_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_296_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_296_1:RecordName(arg_296_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_296_1.iconTrs_.gameObject, false)
				arg_296_1.callingController_:SetSelectedState("normal")

				local var_299_16 = arg_296_1:GetWordFromCfg(417161072)
				local var_299_17 = arg_296_1:FormatText(var_299_16.content)

				arg_296_1.text_.text = var_299_17

				LuaForUtil.ClearLinePrefixSymbol(arg_296_1.text_)

				local var_299_18 = 28
				local var_299_19 = utf8.len(var_299_17)
				local var_299_20 = var_299_18 <= 0 and var_299_15 or var_299_15 * (var_299_19 / var_299_18)

				if var_299_20 > 0 and var_299_15 < var_299_20 then
					arg_296_1.talkMaxDuration = var_299_20

					if var_299_20 + var_299_14 > arg_296_1.duration_ then
						arg_296_1.duration_ = var_299_20 + var_299_14
					end
				end

				arg_296_1.text_.text = var_299_17
				arg_296_1.typewritter.percent = 0

				arg_296_1.typewritter:SetDirty()
				arg_296_1:ShowNextGo(false)
				arg_296_1:RecordContent(arg_296_1.text_.text)
			end

			local var_299_21 = math.max(var_299_15, arg_296_1.talkMaxDuration)

			if var_299_14 <= arg_296_1.time_ and arg_296_1.time_ < var_299_14 + var_299_21 then
				arg_296_1.typewritter.percent = (arg_296_1.time_ - var_299_14) / var_299_21

				arg_296_1.typewritter:SetDirty()
			end

			if arg_296_1.time_ >= var_299_14 + var_299_21 and arg_296_1.time_ < var_299_14 + var_299_21 + arg_299_0 then
				arg_296_1.typewritter.percent = 1

				arg_296_1.typewritter:SetDirty()
				arg_296_1:ShowNextGo(true)
			end
		end
	end,
	Play417161073 = function(arg_300_0, arg_300_1)
		arg_300_1.time_ = 0
		arg_300_1.frameCnt_ = 0
		arg_300_1.state_ = "playing"
		arg_300_1.curTalkId_ = 417161073
		arg_300_1.duration_ = 4.2

		SetActive(arg_300_1.tipsGo_, false)

		function arg_300_1.onSingleLineFinish_()
			arg_300_1.onSingleLineUpdate_ = nil
			arg_300_1.onSingleLineFinish_ = nil
			arg_300_1.state_ = "waiting"
		end

		function arg_300_1.playNext_(arg_302_0)
			if arg_302_0 == 1 then
				arg_300_0:Play417161074(arg_300_1)
			end
		end

		function arg_300_1.onSingleLineUpdate_(arg_303_0)
			local var_303_0 = arg_300_1.actors_["1060"]
			local var_303_1 = 0

			if var_303_1 < arg_300_1.time_ and arg_300_1.time_ <= var_303_1 + arg_303_0 and not isNil(var_303_0) and arg_300_1.var_.actorSpriteComps1060 == nil then
				arg_300_1.var_.actorSpriteComps1060 = var_303_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_303_2 = 0.2

			if var_303_1 <= arg_300_1.time_ and arg_300_1.time_ < var_303_1 + var_303_2 and not isNil(var_303_0) then
				local var_303_3 = (arg_300_1.time_ - var_303_1) / var_303_2

				if arg_300_1.var_.actorSpriteComps1060 then
					for iter_303_0, iter_303_1 in pairs(arg_300_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_303_1 then
							if arg_300_1.isInRecall_ then
								local var_303_4 = Mathf.Lerp(iter_303_1.color.r, arg_300_1.hightColor1.r, var_303_3)
								local var_303_5 = Mathf.Lerp(iter_303_1.color.g, arg_300_1.hightColor1.g, var_303_3)
								local var_303_6 = Mathf.Lerp(iter_303_1.color.b, arg_300_1.hightColor1.b, var_303_3)

								iter_303_1.color = Color.New(var_303_4, var_303_5, var_303_6)
							else
								local var_303_7 = Mathf.Lerp(iter_303_1.color.r, 1, var_303_3)

								iter_303_1.color = Color.New(var_303_7, var_303_7, var_303_7)
							end
						end
					end
				end
			end

			if arg_300_1.time_ >= var_303_1 + var_303_2 and arg_300_1.time_ < var_303_1 + var_303_2 + arg_303_0 and not isNil(var_303_0) and arg_300_1.var_.actorSpriteComps1060 then
				for iter_303_2, iter_303_3 in pairs(arg_300_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_303_3 then
						if arg_300_1.isInRecall_ then
							iter_303_3.color = arg_300_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_303_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_300_1.var_.actorSpriteComps1060 = nil
			end

			local var_303_8 = arg_300_1.actors_["1060"].transform
			local var_303_9 = 0

			if var_303_9 < arg_300_1.time_ and arg_300_1.time_ <= var_303_9 + arg_303_0 then
				arg_300_1.var_.moveOldPos1060 = var_303_8.localPosition
				var_303_8.localScale = Vector3.New(1, 1, 1)

				arg_300_1:CheckSpriteTmpPos("1060", 3)

				local var_303_10 = var_303_8.childCount

				for iter_303_4 = 0, var_303_10 - 1 do
					local var_303_11 = var_303_8:GetChild(iter_303_4)

					if var_303_11.name == "" or not string.find(var_303_11.name, "split") then
						var_303_11.gameObject:SetActive(true)
					else
						var_303_11.gameObject:SetActive(false)
					end
				end
			end

			local var_303_12 = 0.001

			if var_303_9 <= arg_300_1.time_ and arg_300_1.time_ < var_303_9 + var_303_12 then
				local var_303_13 = (arg_300_1.time_ - var_303_9) / var_303_12
				local var_303_14 = Vector3.New(33.4, -430.8, 6.9)

				var_303_8.localPosition = Vector3.Lerp(arg_300_1.var_.moveOldPos1060, var_303_14, var_303_13)
			end

			if arg_300_1.time_ >= var_303_9 + var_303_12 and arg_300_1.time_ < var_303_9 + var_303_12 + arg_303_0 then
				var_303_8.localPosition = Vector3.New(33.4, -430.8, 6.9)
			end

			local var_303_15 = 0
			local var_303_16 = 0.45

			if var_303_15 < arg_300_1.time_ and arg_300_1.time_ <= var_303_15 + arg_303_0 then
				arg_300_1.talkMaxDuration = 0
				arg_300_1.dialogCg_.alpha = 1

				arg_300_1.dialog_:SetActive(true)
				SetActive(arg_300_1.leftNameGo_, true)

				local var_303_17 = arg_300_1:FormatText(StoryNameCfg[584].name)

				arg_300_1.leftNameTxt_.text = var_303_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_300_1.leftNameTxt_.transform)

				arg_300_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_300_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_300_1:RecordName(arg_300_1.leftNameTxt_.text)
				SetActive(arg_300_1.iconTrs_.gameObject, false)
				arg_300_1.callingController_:SetSelectedState("normal")

				local var_303_18 = arg_300_1:GetWordFromCfg(417161073)
				local var_303_19 = arg_300_1:FormatText(var_303_18.content)

				arg_300_1.text_.text = var_303_19

				LuaForUtil.ClearLinePrefixSymbol(arg_300_1.text_)

				local var_303_20 = 18
				local var_303_21 = utf8.len(var_303_19)
				local var_303_22 = var_303_20 <= 0 and var_303_16 or var_303_16 * (var_303_21 / var_303_20)

				if var_303_22 > 0 and var_303_16 < var_303_22 then
					arg_300_1.talkMaxDuration = var_303_22

					if var_303_22 + var_303_15 > arg_300_1.duration_ then
						arg_300_1.duration_ = var_303_22 + var_303_15
					end
				end

				arg_300_1.text_.text = var_303_19
				arg_300_1.typewritter.percent = 0

				arg_300_1.typewritter:SetDirty()
				arg_300_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161073", "story_v_out_417161.awb") ~= 0 then
					local var_303_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161073", "story_v_out_417161.awb") / 1000

					if var_303_23 + var_303_15 > arg_300_1.duration_ then
						arg_300_1.duration_ = var_303_23 + var_303_15
					end

					if var_303_18.prefab_name ~= "" and arg_300_1.actors_[var_303_18.prefab_name] ~= nil then
						local var_303_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_300_1.actors_[var_303_18.prefab_name].transform, "story_v_out_417161", "417161073", "story_v_out_417161.awb")

						arg_300_1:RecordAudio("417161073", var_303_24)
						arg_300_1:RecordAudio("417161073", var_303_24)
					else
						arg_300_1:AudioAction("play", "voice", "story_v_out_417161", "417161073", "story_v_out_417161.awb")
					end

					arg_300_1:RecordHistoryTalkVoice("story_v_out_417161", "417161073", "story_v_out_417161.awb")
				end

				arg_300_1:RecordContent(arg_300_1.text_.text)
			end

			local var_303_25 = math.max(var_303_16, arg_300_1.talkMaxDuration)

			if var_303_15 <= arg_300_1.time_ and arg_300_1.time_ < var_303_15 + var_303_25 then
				arg_300_1.typewritter.percent = (arg_300_1.time_ - var_303_15) / var_303_25

				arg_300_1.typewritter:SetDirty()
			end

			if arg_300_1.time_ >= var_303_15 + var_303_25 and arg_300_1.time_ < var_303_15 + var_303_25 + arg_303_0 then
				arg_300_1.typewritter.percent = 1

				arg_300_1.typewritter:SetDirty()
				arg_300_1:ShowNextGo(true)
			end
		end
	end,
	Play417161074 = function(arg_304_0, arg_304_1)
		arg_304_1.time_ = 0
		arg_304_1.frameCnt_ = 0
		arg_304_1.state_ = "playing"
		arg_304_1.curTalkId_ = 417161074
		arg_304_1.duration_ = 4.43

		SetActive(arg_304_1.tipsGo_, false)

		function arg_304_1.onSingleLineFinish_()
			arg_304_1.onSingleLineUpdate_ = nil
			arg_304_1.onSingleLineFinish_ = nil
			arg_304_1.state_ = "waiting"
		end

		function arg_304_1.playNext_(arg_306_0)
			if arg_306_0 == 1 then
				arg_304_0:Play417161075(arg_304_1)
			end
		end

		function arg_304_1.onSingleLineUpdate_(arg_307_0)
			local var_307_0 = arg_304_1.actors_["10128"]
			local var_307_1 = 0

			if var_307_1 < arg_304_1.time_ and arg_304_1.time_ <= var_307_1 + arg_307_0 and not isNil(var_307_0) and arg_304_1.var_.actorSpriteComps10128 == nil then
				arg_304_1.var_.actorSpriteComps10128 = var_307_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_307_2 = 0.2

			if var_307_1 <= arg_304_1.time_ and arg_304_1.time_ < var_307_1 + var_307_2 and not isNil(var_307_0) then
				local var_307_3 = (arg_304_1.time_ - var_307_1) / var_307_2

				if arg_304_1.var_.actorSpriteComps10128 then
					for iter_307_0, iter_307_1 in pairs(arg_304_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_307_1 then
							if arg_304_1.isInRecall_ then
								local var_307_4 = Mathf.Lerp(iter_307_1.color.r, arg_304_1.hightColor1.r, var_307_3)
								local var_307_5 = Mathf.Lerp(iter_307_1.color.g, arg_304_1.hightColor1.g, var_307_3)
								local var_307_6 = Mathf.Lerp(iter_307_1.color.b, arg_304_1.hightColor1.b, var_307_3)

								iter_307_1.color = Color.New(var_307_4, var_307_5, var_307_6)
							else
								local var_307_7 = Mathf.Lerp(iter_307_1.color.r, 1, var_307_3)

								iter_307_1.color = Color.New(var_307_7, var_307_7, var_307_7)
							end
						end
					end
				end
			end

			if arg_304_1.time_ >= var_307_1 + var_307_2 and arg_304_1.time_ < var_307_1 + var_307_2 + arg_307_0 and not isNil(var_307_0) and arg_304_1.var_.actorSpriteComps10128 then
				for iter_307_2, iter_307_3 in pairs(arg_304_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_307_3 then
						if arg_304_1.isInRecall_ then
							iter_307_3.color = arg_304_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_307_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_304_1.var_.actorSpriteComps10128 = nil
			end

			local var_307_8 = arg_304_1.actors_["1060"]
			local var_307_9 = 0

			if var_307_9 < arg_304_1.time_ and arg_304_1.time_ <= var_307_9 + arg_307_0 and not isNil(var_307_8) and arg_304_1.var_.actorSpriteComps1060 == nil then
				arg_304_1.var_.actorSpriteComps1060 = var_307_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_307_10 = 0.2

			if var_307_9 <= arg_304_1.time_ and arg_304_1.time_ < var_307_9 + var_307_10 and not isNil(var_307_8) then
				local var_307_11 = (arg_304_1.time_ - var_307_9) / var_307_10

				if arg_304_1.var_.actorSpriteComps1060 then
					for iter_307_4, iter_307_5 in pairs(arg_304_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_307_5 then
							if arg_304_1.isInRecall_ then
								local var_307_12 = Mathf.Lerp(iter_307_5.color.r, arg_304_1.hightColor2.r, var_307_11)
								local var_307_13 = Mathf.Lerp(iter_307_5.color.g, arg_304_1.hightColor2.g, var_307_11)
								local var_307_14 = Mathf.Lerp(iter_307_5.color.b, arg_304_1.hightColor2.b, var_307_11)

								iter_307_5.color = Color.New(var_307_12, var_307_13, var_307_14)
							else
								local var_307_15 = Mathf.Lerp(iter_307_5.color.r, 0.5, var_307_11)

								iter_307_5.color = Color.New(var_307_15, var_307_15, var_307_15)
							end
						end
					end
				end
			end

			if arg_304_1.time_ >= var_307_9 + var_307_10 and arg_304_1.time_ < var_307_9 + var_307_10 + arg_307_0 and not isNil(var_307_8) and arg_304_1.var_.actorSpriteComps1060 then
				for iter_307_6, iter_307_7 in pairs(arg_304_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_307_7 then
						if arg_304_1.isInRecall_ then
							iter_307_7.color = arg_304_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_307_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_304_1.var_.actorSpriteComps1060 = nil
			end

			local var_307_16 = arg_304_1.actors_["10128"].transform
			local var_307_17 = 0

			if var_307_17 < arg_304_1.time_ and arg_304_1.time_ <= var_307_17 + arg_307_0 then
				arg_304_1.var_.moveOldPos10128 = var_307_16.localPosition
				var_307_16.localScale = Vector3.New(1, 1, 1)

				arg_304_1:CheckSpriteTmpPos("10128", 3)

				local var_307_18 = var_307_16.childCount

				for iter_307_8 = 0, var_307_18 - 1 do
					local var_307_19 = var_307_16:GetChild(iter_307_8)

					if var_307_19.name == "" or not string.find(var_307_19.name, "split") then
						var_307_19.gameObject:SetActive(true)
					else
						var_307_19.gameObject:SetActive(false)
					end
				end
			end

			local var_307_20 = 0.001

			if var_307_17 <= arg_304_1.time_ and arg_304_1.time_ < var_307_17 + var_307_20 then
				local var_307_21 = (arg_304_1.time_ - var_307_17) / var_307_20
				local var_307_22 = Vector3.New(0, -347, -300)

				var_307_16.localPosition = Vector3.Lerp(arg_304_1.var_.moveOldPos10128, var_307_22, var_307_21)
			end

			if arg_304_1.time_ >= var_307_17 + var_307_20 and arg_304_1.time_ < var_307_17 + var_307_20 + arg_307_0 then
				var_307_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_307_23 = arg_304_1.actors_["1060"].transform
			local var_307_24 = 0

			if var_307_24 < arg_304_1.time_ and arg_304_1.time_ <= var_307_24 + arg_307_0 then
				arg_304_1.var_.moveOldPos1060 = var_307_23.localPosition
				var_307_23.localScale = Vector3.New(1, 1, 1)

				arg_304_1:CheckSpriteTmpPos("1060", 7)

				local var_307_25 = var_307_23.childCount

				for iter_307_9 = 0, var_307_25 - 1 do
					local var_307_26 = var_307_23:GetChild(iter_307_9)

					if var_307_26.name == "" or not string.find(var_307_26.name, "split") then
						var_307_26.gameObject:SetActive(true)
					else
						var_307_26.gameObject:SetActive(false)
					end
				end
			end

			local var_307_27 = 0.001

			if var_307_24 <= arg_304_1.time_ and arg_304_1.time_ < var_307_24 + var_307_27 then
				local var_307_28 = (arg_304_1.time_ - var_307_24) / var_307_27
				local var_307_29 = Vector3.New(0, -2000, -40)

				var_307_23.localPosition = Vector3.Lerp(arg_304_1.var_.moveOldPos1060, var_307_29, var_307_28)
			end

			if arg_304_1.time_ >= var_307_24 + var_307_27 and arg_304_1.time_ < var_307_24 + var_307_27 + arg_307_0 then
				var_307_23.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_307_30 = 0
			local var_307_31 = 0.5

			if var_307_30 < arg_304_1.time_ and arg_304_1.time_ <= var_307_30 + arg_307_0 then
				arg_304_1.talkMaxDuration = 0
				arg_304_1.dialogCg_.alpha = 1

				arg_304_1.dialog_:SetActive(true)
				SetActive(arg_304_1.leftNameGo_, true)

				local var_307_32 = arg_304_1:FormatText(StoryNameCfg[595].name)

				arg_304_1.leftNameTxt_.text = var_307_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_304_1.leftNameTxt_.transform)

				arg_304_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_304_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_304_1:RecordName(arg_304_1.leftNameTxt_.text)
				SetActive(arg_304_1.iconTrs_.gameObject, false)
				arg_304_1.callingController_:SetSelectedState("normal")

				local var_307_33 = arg_304_1:GetWordFromCfg(417161074)
				local var_307_34 = arg_304_1:FormatText(var_307_33.content)

				arg_304_1.text_.text = var_307_34

				LuaForUtil.ClearLinePrefixSymbol(arg_304_1.text_)

				local var_307_35 = 20
				local var_307_36 = utf8.len(var_307_34)
				local var_307_37 = var_307_35 <= 0 and var_307_31 or var_307_31 * (var_307_36 / var_307_35)

				if var_307_37 > 0 and var_307_31 < var_307_37 then
					arg_304_1.talkMaxDuration = var_307_37

					if var_307_37 + var_307_30 > arg_304_1.duration_ then
						arg_304_1.duration_ = var_307_37 + var_307_30
					end
				end

				arg_304_1.text_.text = var_307_34
				arg_304_1.typewritter.percent = 0

				arg_304_1.typewritter:SetDirty()
				arg_304_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161074", "story_v_out_417161.awb") ~= 0 then
					local var_307_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161074", "story_v_out_417161.awb") / 1000

					if var_307_38 + var_307_30 > arg_304_1.duration_ then
						arg_304_1.duration_ = var_307_38 + var_307_30
					end

					if var_307_33.prefab_name ~= "" and arg_304_1.actors_[var_307_33.prefab_name] ~= nil then
						local var_307_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_304_1.actors_[var_307_33.prefab_name].transform, "story_v_out_417161", "417161074", "story_v_out_417161.awb")

						arg_304_1:RecordAudio("417161074", var_307_39)
						arg_304_1:RecordAudio("417161074", var_307_39)
					else
						arg_304_1:AudioAction("play", "voice", "story_v_out_417161", "417161074", "story_v_out_417161.awb")
					end

					arg_304_1:RecordHistoryTalkVoice("story_v_out_417161", "417161074", "story_v_out_417161.awb")
				end

				arg_304_1:RecordContent(arg_304_1.text_.text)
			end

			local var_307_40 = math.max(var_307_31, arg_304_1.talkMaxDuration)

			if var_307_30 <= arg_304_1.time_ and arg_304_1.time_ < var_307_30 + var_307_40 then
				arg_304_1.typewritter.percent = (arg_304_1.time_ - var_307_30) / var_307_40

				arg_304_1.typewritter:SetDirty()
			end

			if arg_304_1.time_ >= var_307_30 + var_307_40 and arg_304_1.time_ < var_307_30 + var_307_40 + arg_307_0 then
				arg_304_1.typewritter.percent = 1

				arg_304_1.typewritter:SetDirty()
				arg_304_1:ShowNextGo(true)
			end
		end
	end,
	Play417161075 = function(arg_308_0, arg_308_1)
		arg_308_1.time_ = 0
		arg_308_1.frameCnt_ = 0
		arg_308_1.state_ = "playing"
		arg_308_1.curTalkId_ = 417161075
		arg_308_1.duration_ = 6.47

		SetActive(arg_308_1.tipsGo_, false)

		function arg_308_1.onSingleLineFinish_()
			arg_308_1.onSingleLineUpdate_ = nil
			arg_308_1.onSingleLineFinish_ = nil
			arg_308_1.state_ = "waiting"
		end

		function arg_308_1.playNext_(arg_310_0)
			if arg_310_0 == 1 then
				arg_308_0:Play417161076(arg_308_1)
			end
		end

		function arg_308_1.onSingleLineUpdate_(arg_311_0)
			local var_311_0 = arg_308_1.actors_["1060"]
			local var_311_1 = 0

			if var_311_1 < arg_308_1.time_ and arg_308_1.time_ <= var_311_1 + arg_311_0 and not isNil(var_311_0) and arg_308_1.var_.actorSpriteComps1060 == nil then
				arg_308_1.var_.actorSpriteComps1060 = var_311_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_311_2 = 0.2

			if var_311_1 <= arg_308_1.time_ and arg_308_1.time_ < var_311_1 + var_311_2 and not isNil(var_311_0) then
				local var_311_3 = (arg_308_1.time_ - var_311_1) / var_311_2

				if arg_308_1.var_.actorSpriteComps1060 then
					for iter_311_0, iter_311_1 in pairs(arg_308_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_311_1 then
							if arg_308_1.isInRecall_ then
								local var_311_4 = Mathf.Lerp(iter_311_1.color.r, arg_308_1.hightColor1.r, var_311_3)
								local var_311_5 = Mathf.Lerp(iter_311_1.color.g, arg_308_1.hightColor1.g, var_311_3)
								local var_311_6 = Mathf.Lerp(iter_311_1.color.b, arg_308_1.hightColor1.b, var_311_3)

								iter_311_1.color = Color.New(var_311_4, var_311_5, var_311_6)
							else
								local var_311_7 = Mathf.Lerp(iter_311_1.color.r, 1, var_311_3)

								iter_311_1.color = Color.New(var_311_7, var_311_7, var_311_7)
							end
						end
					end
				end
			end

			if arg_308_1.time_ >= var_311_1 + var_311_2 and arg_308_1.time_ < var_311_1 + var_311_2 + arg_311_0 and not isNil(var_311_0) and arg_308_1.var_.actorSpriteComps1060 then
				for iter_311_2, iter_311_3 in pairs(arg_308_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_311_3 then
						if arg_308_1.isInRecall_ then
							iter_311_3.color = arg_308_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_311_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_308_1.var_.actorSpriteComps1060 = nil
			end

			local var_311_8 = arg_308_1.actors_["10128"]
			local var_311_9 = 0

			if var_311_9 < arg_308_1.time_ and arg_308_1.time_ <= var_311_9 + arg_311_0 and not isNil(var_311_8) and arg_308_1.var_.actorSpriteComps10128 == nil then
				arg_308_1.var_.actorSpriteComps10128 = var_311_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_311_10 = 0.2

			if var_311_9 <= arg_308_1.time_ and arg_308_1.time_ < var_311_9 + var_311_10 and not isNil(var_311_8) then
				local var_311_11 = (arg_308_1.time_ - var_311_9) / var_311_10

				if arg_308_1.var_.actorSpriteComps10128 then
					for iter_311_4, iter_311_5 in pairs(arg_308_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_311_5 then
							if arg_308_1.isInRecall_ then
								local var_311_12 = Mathf.Lerp(iter_311_5.color.r, arg_308_1.hightColor2.r, var_311_11)
								local var_311_13 = Mathf.Lerp(iter_311_5.color.g, arg_308_1.hightColor2.g, var_311_11)
								local var_311_14 = Mathf.Lerp(iter_311_5.color.b, arg_308_1.hightColor2.b, var_311_11)

								iter_311_5.color = Color.New(var_311_12, var_311_13, var_311_14)
							else
								local var_311_15 = Mathf.Lerp(iter_311_5.color.r, 0.5, var_311_11)

								iter_311_5.color = Color.New(var_311_15, var_311_15, var_311_15)
							end
						end
					end
				end
			end

			if arg_308_1.time_ >= var_311_9 + var_311_10 and arg_308_1.time_ < var_311_9 + var_311_10 + arg_311_0 and not isNil(var_311_8) and arg_308_1.var_.actorSpriteComps10128 then
				for iter_311_6, iter_311_7 in pairs(arg_308_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_311_7 then
						if arg_308_1.isInRecall_ then
							iter_311_7.color = arg_308_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_311_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_308_1.var_.actorSpriteComps10128 = nil
			end

			local var_311_16 = arg_308_1.actors_["10128"].transform
			local var_311_17 = 0

			if var_311_17 < arg_308_1.time_ and arg_308_1.time_ <= var_311_17 + arg_311_0 then
				arg_308_1.var_.moveOldPos10128 = var_311_16.localPosition
				var_311_16.localScale = Vector3.New(1, 1, 1)

				arg_308_1:CheckSpriteTmpPos("10128", 2)

				local var_311_18 = var_311_16.childCount

				for iter_311_8 = 0, var_311_18 - 1 do
					local var_311_19 = var_311_16:GetChild(iter_311_8)

					if var_311_19.name == "" or not string.find(var_311_19.name, "split") then
						var_311_19.gameObject:SetActive(true)
					else
						var_311_19.gameObject:SetActive(false)
					end
				end
			end

			local var_311_20 = 0.001

			if var_311_17 <= arg_308_1.time_ and arg_308_1.time_ < var_311_17 + var_311_20 then
				local var_311_21 = (arg_308_1.time_ - var_311_17) / var_311_20
				local var_311_22 = Vector3.New(-390, -347, -300)

				var_311_16.localPosition = Vector3.Lerp(arg_308_1.var_.moveOldPos10128, var_311_22, var_311_21)
			end

			if arg_308_1.time_ >= var_311_17 + var_311_20 and arg_308_1.time_ < var_311_17 + var_311_20 + arg_311_0 then
				var_311_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_311_23 = arg_308_1.actors_["1060"].transform
			local var_311_24 = 0

			if var_311_24 < arg_308_1.time_ and arg_308_1.time_ <= var_311_24 + arg_311_0 then
				arg_308_1.var_.moveOldPos1060 = var_311_23.localPosition
				var_311_23.localScale = Vector3.New(1, 1, 1)

				arg_308_1:CheckSpriteTmpPos("1060", 4)

				local var_311_25 = var_311_23.childCount

				for iter_311_9 = 0, var_311_25 - 1 do
					local var_311_26 = var_311_23:GetChild(iter_311_9)

					if var_311_26.name == "" or not string.find(var_311_26.name, "split") then
						var_311_26.gameObject:SetActive(true)
					else
						var_311_26.gameObject:SetActive(false)
					end
				end
			end

			local var_311_27 = 0.001

			if var_311_24 <= arg_308_1.time_ and arg_308_1.time_ < var_311_24 + var_311_27 then
				local var_311_28 = (arg_308_1.time_ - var_311_24) / var_311_27
				local var_311_29 = Vector3.New(420.9, -430.8, 6.9)

				var_311_23.localPosition = Vector3.Lerp(arg_308_1.var_.moveOldPos1060, var_311_29, var_311_28)
			end

			if arg_308_1.time_ >= var_311_24 + var_311_27 and arg_308_1.time_ < var_311_24 + var_311_27 + arg_311_0 then
				var_311_23.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_311_30 = 0
			local var_311_31 = 0.875

			if var_311_30 < arg_308_1.time_ and arg_308_1.time_ <= var_311_30 + arg_311_0 then
				arg_308_1.talkMaxDuration = 0
				arg_308_1.dialogCg_.alpha = 1

				arg_308_1.dialog_:SetActive(true)
				SetActive(arg_308_1.leftNameGo_, true)

				local var_311_32 = arg_308_1:FormatText(StoryNameCfg[584].name)

				arg_308_1.leftNameTxt_.text = var_311_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_308_1.leftNameTxt_.transform)

				arg_308_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_308_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_308_1:RecordName(arg_308_1.leftNameTxt_.text)
				SetActive(arg_308_1.iconTrs_.gameObject, false)
				arg_308_1.callingController_:SetSelectedState("normal")

				local var_311_33 = arg_308_1:GetWordFromCfg(417161075)
				local var_311_34 = arg_308_1:FormatText(var_311_33.content)

				arg_308_1.text_.text = var_311_34

				LuaForUtil.ClearLinePrefixSymbol(arg_308_1.text_)

				local var_311_35 = 33
				local var_311_36 = utf8.len(var_311_34)
				local var_311_37 = var_311_35 <= 0 and var_311_31 or var_311_31 * (var_311_36 / var_311_35)

				if var_311_37 > 0 and var_311_31 < var_311_37 then
					arg_308_1.talkMaxDuration = var_311_37

					if var_311_37 + var_311_30 > arg_308_1.duration_ then
						arg_308_1.duration_ = var_311_37 + var_311_30
					end
				end

				arg_308_1.text_.text = var_311_34
				arg_308_1.typewritter.percent = 0

				arg_308_1.typewritter:SetDirty()
				arg_308_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161075", "story_v_out_417161.awb") ~= 0 then
					local var_311_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161075", "story_v_out_417161.awb") / 1000

					if var_311_38 + var_311_30 > arg_308_1.duration_ then
						arg_308_1.duration_ = var_311_38 + var_311_30
					end

					if var_311_33.prefab_name ~= "" and arg_308_1.actors_[var_311_33.prefab_name] ~= nil then
						local var_311_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_308_1.actors_[var_311_33.prefab_name].transform, "story_v_out_417161", "417161075", "story_v_out_417161.awb")

						arg_308_1:RecordAudio("417161075", var_311_39)
						arg_308_1:RecordAudio("417161075", var_311_39)
					else
						arg_308_1:AudioAction("play", "voice", "story_v_out_417161", "417161075", "story_v_out_417161.awb")
					end

					arg_308_1:RecordHistoryTalkVoice("story_v_out_417161", "417161075", "story_v_out_417161.awb")
				end

				arg_308_1:RecordContent(arg_308_1.text_.text)
			end

			local var_311_40 = math.max(var_311_31, arg_308_1.talkMaxDuration)

			if var_311_30 <= arg_308_1.time_ and arg_308_1.time_ < var_311_30 + var_311_40 then
				arg_308_1.typewritter.percent = (arg_308_1.time_ - var_311_30) / var_311_40

				arg_308_1.typewritter:SetDirty()
			end

			if arg_308_1.time_ >= var_311_30 + var_311_40 and arg_308_1.time_ < var_311_30 + var_311_40 + arg_311_0 then
				arg_308_1.typewritter.percent = 1

				arg_308_1.typewritter:SetDirty()
				arg_308_1:ShowNextGo(true)
			end
		end
	end,
	Play417161076 = function(arg_312_0, arg_312_1)
		arg_312_1.time_ = 0
		arg_312_1.frameCnt_ = 0
		arg_312_1.state_ = "playing"
		arg_312_1.curTalkId_ = 417161076
		arg_312_1.duration_ = 8.4

		SetActive(arg_312_1.tipsGo_, false)

		function arg_312_1.onSingleLineFinish_()
			arg_312_1.onSingleLineUpdate_ = nil
			arg_312_1.onSingleLineFinish_ = nil
			arg_312_1.state_ = "waiting"
		end

		function arg_312_1.playNext_(arg_314_0)
			if arg_314_0 == 1 then
				arg_312_0:Play417161077(arg_312_1)
			end
		end

		function arg_312_1.onSingleLineUpdate_(arg_315_0)
			local var_315_0 = 0
			local var_315_1 = 1.075

			if var_315_0 < arg_312_1.time_ and arg_312_1.time_ <= var_315_0 + arg_315_0 then
				arg_312_1.talkMaxDuration = 0
				arg_312_1.dialogCg_.alpha = 1

				arg_312_1.dialog_:SetActive(true)
				SetActive(arg_312_1.leftNameGo_, true)

				local var_315_2 = arg_312_1:FormatText(StoryNameCfg[584].name)

				arg_312_1.leftNameTxt_.text = var_315_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_312_1.leftNameTxt_.transform)

				arg_312_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_312_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_312_1:RecordName(arg_312_1.leftNameTxt_.text)
				SetActive(arg_312_1.iconTrs_.gameObject, false)
				arg_312_1.callingController_:SetSelectedState("normal")

				local var_315_3 = arg_312_1:GetWordFromCfg(417161076)
				local var_315_4 = arg_312_1:FormatText(var_315_3.content)

				arg_312_1.text_.text = var_315_4

				LuaForUtil.ClearLinePrefixSymbol(arg_312_1.text_)

				local var_315_5 = 43
				local var_315_6 = utf8.len(var_315_4)
				local var_315_7 = var_315_5 <= 0 and var_315_1 or var_315_1 * (var_315_6 / var_315_5)

				if var_315_7 > 0 and var_315_1 < var_315_7 then
					arg_312_1.talkMaxDuration = var_315_7

					if var_315_7 + var_315_0 > arg_312_1.duration_ then
						arg_312_1.duration_ = var_315_7 + var_315_0
					end
				end

				arg_312_1.text_.text = var_315_4
				arg_312_1.typewritter.percent = 0

				arg_312_1.typewritter:SetDirty()
				arg_312_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161076", "story_v_out_417161.awb") ~= 0 then
					local var_315_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161076", "story_v_out_417161.awb") / 1000

					if var_315_8 + var_315_0 > arg_312_1.duration_ then
						arg_312_1.duration_ = var_315_8 + var_315_0
					end

					if var_315_3.prefab_name ~= "" and arg_312_1.actors_[var_315_3.prefab_name] ~= nil then
						local var_315_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_312_1.actors_[var_315_3.prefab_name].transform, "story_v_out_417161", "417161076", "story_v_out_417161.awb")

						arg_312_1:RecordAudio("417161076", var_315_9)
						arg_312_1:RecordAudio("417161076", var_315_9)
					else
						arg_312_1:AudioAction("play", "voice", "story_v_out_417161", "417161076", "story_v_out_417161.awb")
					end

					arg_312_1:RecordHistoryTalkVoice("story_v_out_417161", "417161076", "story_v_out_417161.awb")
				end

				arg_312_1:RecordContent(arg_312_1.text_.text)
			end

			local var_315_10 = math.max(var_315_1, arg_312_1.talkMaxDuration)

			if var_315_0 <= arg_312_1.time_ and arg_312_1.time_ < var_315_0 + var_315_10 then
				arg_312_1.typewritter.percent = (arg_312_1.time_ - var_315_0) / var_315_10

				arg_312_1.typewritter:SetDirty()
			end

			if arg_312_1.time_ >= var_315_0 + var_315_10 and arg_312_1.time_ < var_315_0 + var_315_10 + arg_315_0 then
				arg_312_1.typewritter.percent = 1

				arg_312_1.typewritter:SetDirty()
				arg_312_1:ShowNextGo(true)
			end
		end
	end,
	Play417161077 = function(arg_316_0, arg_316_1)
		arg_316_1.time_ = 0
		arg_316_1.frameCnt_ = 0
		arg_316_1.state_ = "playing"
		arg_316_1.curTalkId_ = 417161077
		arg_316_1.duration_ = 2.37

		SetActive(arg_316_1.tipsGo_, false)

		function arg_316_1.onSingleLineFinish_()
			arg_316_1.onSingleLineUpdate_ = nil
			arg_316_1.onSingleLineFinish_ = nil
			arg_316_1.state_ = "waiting"
		end

		function arg_316_1.playNext_(arg_318_0)
			if arg_318_0 == 1 then
				arg_316_0:Play417161078(arg_316_1)
			end
		end

		function arg_316_1.onSingleLineUpdate_(arg_319_0)
			local var_319_0 = arg_316_1.actors_["10128"]
			local var_319_1 = 0

			if var_319_1 < arg_316_1.time_ and arg_316_1.time_ <= var_319_1 + arg_319_0 and not isNil(var_319_0) and arg_316_1.var_.actorSpriteComps10128 == nil then
				arg_316_1.var_.actorSpriteComps10128 = var_319_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_319_2 = 0.2

			if var_319_1 <= arg_316_1.time_ and arg_316_1.time_ < var_319_1 + var_319_2 and not isNil(var_319_0) then
				local var_319_3 = (arg_316_1.time_ - var_319_1) / var_319_2

				if arg_316_1.var_.actorSpriteComps10128 then
					for iter_319_0, iter_319_1 in pairs(arg_316_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_319_1 then
							if arg_316_1.isInRecall_ then
								local var_319_4 = Mathf.Lerp(iter_319_1.color.r, arg_316_1.hightColor1.r, var_319_3)
								local var_319_5 = Mathf.Lerp(iter_319_1.color.g, arg_316_1.hightColor1.g, var_319_3)
								local var_319_6 = Mathf.Lerp(iter_319_1.color.b, arg_316_1.hightColor1.b, var_319_3)

								iter_319_1.color = Color.New(var_319_4, var_319_5, var_319_6)
							else
								local var_319_7 = Mathf.Lerp(iter_319_1.color.r, 1, var_319_3)

								iter_319_1.color = Color.New(var_319_7, var_319_7, var_319_7)
							end
						end
					end
				end
			end

			if arg_316_1.time_ >= var_319_1 + var_319_2 and arg_316_1.time_ < var_319_1 + var_319_2 + arg_319_0 and not isNil(var_319_0) and arg_316_1.var_.actorSpriteComps10128 then
				for iter_319_2, iter_319_3 in pairs(arg_316_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_319_3 then
						if arg_316_1.isInRecall_ then
							iter_319_3.color = arg_316_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_319_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_316_1.var_.actorSpriteComps10128 = nil
			end

			local var_319_8 = arg_316_1.actors_["1060"]
			local var_319_9 = 0

			if var_319_9 < arg_316_1.time_ and arg_316_1.time_ <= var_319_9 + arg_319_0 and not isNil(var_319_8) and arg_316_1.var_.actorSpriteComps1060 == nil then
				arg_316_1.var_.actorSpriteComps1060 = var_319_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_319_10 = 0.2

			if var_319_9 <= arg_316_1.time_ and arg_316_1.time_ < var_319_9 + var_319_10 and not isNil(var_319_8) then
				local var_319_11 = (arg_316_1.time_ - var_319_9) / var_319_10

				if arg_316_1.var_.actorSpriteComps1060 then
					for iter_319_4, iter_319_5 in pairs(arg_316_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_319_5 then
							if arg_316_1.isInRecall_ then
								local var_319_12 = Mathf.Lerp(iter_319_5.color.r, arg_316_1.hightColor2.r, var_319_11)
								local var_319_13 = Mathf.Lerp(iter_319_5.color.g, arg_316_1.hightColor2.g, var_319_11)
								local var_319_14 = Mathf.Lerp(iter_319_5.color.b, arg_316_1.hightColor2.b, var_319_11)

								iter_319_5.color = Color.New(var_319_12, var_319_13, var_319_14)
							else
								local var_319_15 = Mathf.Lerp(iter_319_5.color.r, 0.5, var_319_11)

								iter_319_5.color = Color.New(var_319_15, var_319_15, var_319_15)
							end
						end
					end
				end
			end

			if arg_316_1.time_ >= var_319_9 + var_319_10 and arg_316_1.time_ < var_319_9 + var_319_10 + arg_319_0 and not isNil(var_319_8) and arg_316_1.var_.actorSpriteComps1060 then
				for iter_319_6, iter_319_7 in pairs(arg_316_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_319_7 then
						if arg_316_1.isInRecall_ then
							iter_319_7.color = arg_316_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_319_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_316_1.var_.actorSpriteComps1060 = nil
			end

			local var_319_16 = 0
			local var_319_17 = 0.325

			if var_319_16 < arg_316_1.time_ and arg_316_1.time_ <= var_319_16 + arg_319_0 then
				arg_316_1.talkMaxDuration = 0
				arg_316_1.dialogCg_.alpha = 1

				arg_316_1.dialog_:SetActive(true)
				SetActive(arg_316_1.leftNameGo_, true)

				local var_319_18 = arg_316_1:FormatText(StoryNameCfg[595].name)

				arg_316_1.leftNameTxt_.text = var_319_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_316_1.leftNameTxt_.transform)

				arg_316_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_316_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_316_1:RecordName(arg_316_1.leftNameTxt_.text)
				SetActive(arg_316_1.iconTrs_.gameObject, false)
				arg_316_1.callingController_:SetSelectedState("normal")

				local var_319_19 = arg_316_1:GetWordFromCfg(417161077)
				local var_319_20 = arg_316_1:FormatText(var_319_19.content)

				arg_316_1.text_.text = var_319_20

				LuaForUtil.ClearLinePrefixSymbol(arg_316_1.text_)

				local var_319_21 = 13
				local var_319_22 = utf8.len(var_319_20)
				local var_319_23 = var_319_21 <= 0 and var_319_17 or var_319_17 * (var_319_22 / var_319_21)

				if var_319_23 > 0 and var_319_17 < var_319_23 then
					arg_316_1.talkMaxDuration = var_319_23

					if var_319_23 + var_319_16 > arg_316_1.duration_ then
						arg_316_1.duration_ = var_319_23 + var_319_16
					end
				end

				arg_316_1.text_.text = var_319_20
				arg_316_1.typewritter.percent = 0

				arg_316_1.typewritter:SetDirty()
				arg_316_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161077", "story_v_out_417161.awb") ~= 0 then
					local var_319_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161077", "story_v_out_417161.awb") / 1000

					if var_319_24 + var_319_16 > arg_316_1.duration_ then
						arg_316_1.duration_ = var_319_24 + var_319_16
					end

					if var_319_19.prefab_name ~= "" and arg_316_1.actors_[var_319_19.prefab_name] ~= nil then
						local var_319_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_316_1.actors_[var_319_19.prefab_name].transform, "story_v_out_417161", "417161077", "story_v_out_417161.awb")

						arg_316_1:RecordAudio("417161077", var_319_25)
						arg_316_1:RecordAudio("417161077", var_319_25)
					else
						arg_316_1:AudioAction("play", "voice", "story_v_out_417161", "417161077", "story_v_out_417161.awb")
					end

					arg_316_1:RecordHistoryTalkVoice("story_v_out_417161", "417161077", "story_v_out_417161.awb")
				end

				arg_316_1:RecordContent(arg_316_1.text_.text)
			end

			local var_319_26 = math.max(var_319_17, arg_316_1.talkMaxDuration)

			if var_319_16 <= arg_316_1.time_ and arg_316_1.time_ < var_319_16 + var_319_26 then
				arg_316_1.typewritter.percent = (arg_316_1.time_ - var_319_16) / var_319_26

				arg_316_1.typewritter:SetDirty()
			end

			if arg_316_1.time_ >= var_319_16 + var_319_26 and arg_316_1.time_ < var_319_16 + var_319_26 + arg_319_0 then
				arg_316_1.typewritter.percent = 1

				arg_316_1.typewritter:SetDirty()
				arg_316_1:ShowNextGo(true)
			end
		end
	end,
	Play417161078 = function(arg_320_0, arg_320_1)
		arg_320_1.time_ = 0
		arg_320_1.frameCnt_ = 0
		arg_320_1.state_ = "playing"
		arg_320_1.curTalkId_ = 417161078
		arg_320_1.duration_ = 6.73

		SetActive(arg_320_1.tipsGo_, false)

		function arg_320_1.onSingleLineFinish_()
			arg_320_1.onSingleLineUpdate_ = nil
			arg_320_1.onSingleLineFinish_ = nil
			arg_320_1.state_ = "waiting"
		end

		function arg_320_1.playNext_(arg_322_0)
			if arg_322_0 == 1 then
				arg_320_0:Play417161079(arg_320_1)
			end
		end

		function arg_320_1.onSingleLineUpdate_(arg_323_0)
			local var_323_0 = arg_320_1.actors_["1060"]
			local var_323_1 = 0

			if var_323_1 < arg_320_1.time_ and arg_320_1.time_ <= var_323_1 + arg_323_0 and not isNil(var_323_0) and arg_320_1.var_.actorSpriteComps1060 == nil then
				arg_320_1.var_.actorSpriteComps1060 = var_323_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_323_2 = 0.2

			if var_323_1 <= arg_320_1.time_ and arg_320_1.time_ < var_323_1 + var_323_2 and not isNil(var_323_0) then
				local var_323_3 = (arg_320_1.time_ - var_323_1) / var_323_2

				if arg_320_1.var_.actorSpriteComps1060 then
					for iter_323_0, iter_323_1 in pairs(arg_320_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_323_1 then
							if arg_320_1.isInRecall_ then
								local var_323_4 = Mathf.Lerp(iter_323_1.color.r, arg_320_1.hightColor1.r, var_323_3)
								local var_323_5 = Mathf.Lerp(iter_323_1.color.g, arg_320_1.hightColor1.g, var_323_3)
								local var_323_6 = Mathf.Lerp(iter_323_1.color.b, arg_320_1.hightColor1.b, var_323_3)

								iter_323_1.color = Color.New(var_323_4, var_323_5, var_323_6)
							else
								local var_323_7 = Mathf.Lerp(iter_323_1.color.r, 1, var_323_3)

								iter_323_1.color = Color.New(var_323_7, var_323_7, var_323_7)
							end
						end
					end
				end
			end

			if arg_320_1.time_ >= var_323_1 + var_323_2 and arg_320_1.time_ < var_323_1 + var_323_2 + arg_323_0 and not isNil(var_323_0) and arg_320_1.var_.actorSpriteComps1060 then
				for iter_323_2, iter_323_3 in pairs(arg_320_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_323_3 then
						if arg_320_1.isInRecall_ then
							iter_323_3.color = arg_320_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_323_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_320_1.var_.actorSpriteComps1060 = nil
			end

			local var_323_8 = arg_320_1.actors_["10128"]
			local var_323_9 = 0

			if var_323_9 < arg_320_1.time_ and arg_320_1.time_ <= var_323_9 + arg_323_0 and not isNil(var_323_8) and arg_320_1.var_.actorSpriteComps10128 == nil then
				arg_320_1.var_.actorSpriteComps10128 = var_323_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_323_10 = 0.2

			if var_323_9 <= arg_320_1.time_ and arg_320_1.time_ < var_323_9 + var_323_10 and not isNil(var_323_8) then
				local var_323_11 = (arg_320_1.time_ - var_323_9) / var_323_10

				if arg_320_1.var_.actorSpriteComps10128 then
					for iter_323_4, iter_323_5 in pairs(arg_320_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_323_5 then
							if arg_320_1.isInRecall_ then
								local var_323_12 = Mathf.Lerp(iter_323_5.color.r, arg_320_1.hightColor2.r, var_323_11)
								local var_323_13 = Mathf.Lerp(iter_323_5.color.g, arg_320_1.hightColor2.g, var_323_11)
								local var_323_14 = Mathf.Lerp(iter_323_5.color.b, arg_320_1.hightColor2.b, var_323_11)

								iter_323_5.color = Color.New(var_323_12, var_323_13, var_323_14)
							else
								local var_323_15 = Mathf.Lerp(iter_323_5.color.r, 0.5, var_323_11)

								iter_323_5.color = Color.New(var_323_15, var_323_15, var_323_15)
							end
						end
					end
				end
			end

			if arg_320_1.time_ >= var_323_9 + var_323_10 and arg_320_1.time_ < var_323_9 + var_323_10 + arg_323_0 and not isNil(var_323_8) and arg_320_1.var_.actorSpriteComps10128 then
				for iter_323_6, iter_323_7 in pairs(arg_320_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_323_7 then
						if arg_320_1.isInRecall_ then
							iter_323_7.color = arg_320_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_323_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_320_1.var_.actorSpriteComps10128 = nil
			end

			local var_323_16 = 0
			local var_323_17 = 0.875

			if var_323_16 < arg_320_1.time_ and arg_320_1.time_ <= var_323_16 + arg_323_0 then
				arg_320_1.talkMaxDuration = 0
				arg_320_1.dialogCg_.alpha = 1

				arg_320_1.dialog_:SetActive(true)
				SetActive(arg_320_1.leftNameGo_, true)

				local var_323_18 = arg_320_1:FormatText(StoryNameCfg[584].name)

				arg_320_1.leftNameTxt_.text = var_323_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_320_1.leftNameTxt_.transform)

				arg_320_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_320_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_320_1:RecordName(arg_320_1.leftNameTxt_.text)
				SetActive(arg_320_1.iconTrs_.gameObject, false)
				arg_320_1.callingController_:SetSelectedState("normal")

				local var_323_19 = arg_320_1:GetWordFromCfg(417161078)
				local var_323_20 = arg_320_1:FormatText(var_323_19.content)

				arg_320_1.text_.text = var_323_20

				LuaForUtil.ClearLinePrefixSymbol(arg_320_1.text_)

				local var_323_21 = 35
				local var_323_22 = utf8.len(var_323_20)
				local var_323_23 = var_323_21 <= 0 and var_323_17 or var_323_17 * (var_323_22 / var_323_21)

				if var_323_23 > 0 and var_323_17 < var_323_23 then
					arg_320_1.talkMaxDuration = var_323_23

					if var_323_23 + var_323_16 > arg_320_1.duration_ then
						arg_320_1.duration_ = var_323_23 + var_323_16
					end
				end

				arg_320_1.text_.text = var_323_20
				arg_320_1.typewritter.percent = 0

				arg_320_1.typewritter:SetDirty()
				arg_320_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161078", "story_v_out_417161.awb") ~= 0 then
					local var_323_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161078", "story_v_out_417161.awb") / 1000

					if var_323_24 + var_323_16 > arg_320_1.duration_ then
						arg_320_1.duration_ = var_323_24 + var_323_16
					end

					if var_323_19.prefab_name ~= "" and arg_320_1.actors_[var_323_19.prefab_name] ~= nil then
						local var_323_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_320_1.actors_[var_323_19.prefab_name].transform, "story_v_out_417161", "417161078", "story_v_out_417161.awb")

						arg_320_1:RecordAudio("417161078", var_323_25)
						arg_320_1:RecordAudio("417161078", var_323_25)
					else
						arg_320_1:AudioAction("play", "voice", "story_v_out_417161", "417161078", "story_v_out_417161.awb")
					end

					arg_320_1:RecordHistoryTalkVoice("story_v_out_417161", "417161078", "story_v_out_417161.awb")
				end

				arg_320_1:RecordContent(arg_320_1.text_.text)
			end

			local var_323_26 = math.max(var_323_17, arg_320_1.talkMaxDuration)

			if var_323_16 <= arg_320_1.time_ and arg_320_1.time_ < var_323_16 + var_323_26 then
				arg_320_1.typewritter.percent = (arg_320_1.time_ - var_323_16) / var_323_26

				arg_320_1.typewritter:SetDirty()
			end

			if arg_320_1.time_ >= var_323_16 + var_323_26 and arg_320_1.time_ < var_323_16 + var_323_26 + arg_323_0 then
				arg_320_1.typewritter.percent = 1

				arg_320_1.typewritter:SetDirty()
				arg_320_1:ShowNextGo(true)
			end
		end
	end,
	Play417161079 = function(arg_324_0, arg_324_1)
		arg_324_1.time_ = 0
		arg_324_1.frameCnt_ = 0
		arg_324_1.state_ = "playing"
		arg_324_1.curTalkId_ = 417161079
		arg_324_1.duration_ = 1.43

		SetActive(arg_324_1.tipsGo_, false)

		function arg_324_1.onSingleLineFinish_()
			arg_324_1.onSingleLineUpdate_ = nil
			arg_324_1.onSingleLineFinish_ = nil
			arg_324_1.state_ = "waiting"
		end

		function arg_324_1.playNext_(arg_326_0)
			if arg_326_0 == 1 then
				arg_324_0:Play417161080(arg_324_1)
			end
		end

		function arg_324_1.onSingleLineUpdate_(arg_327_0)
			local var_327_0 = arg_324_1.actors_["10128"]
			local var_327_1 = 0

			if var_327_1 < arg_324_1.time_ and arg_324_1.time_ <= var_327_1 + arg_327_0 and not isNil(var_327_0) and arg_324_1.var_.actorSpriteComps10128 == nil then
				arg_324_1.var_.actorSpriteComps10128 = var_327_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_327_2 = 0.2

			if var_327_1 <= arg_324_1.time_ and arg_324_1.time_ < var_327_1 + var_327_2 and not isNil(var_327_0) then
				local var_327_3 = (arg_324_1.time_ - var_327_1) / var_327_2

				if arg_324_1.var_.actorSpriteComps10128 then
					for iter_327_0, iter_327_1 in pairs(arg_324_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_327_1 then
							if arg_324_1.isInRecall_ then
								local var_327_4 = Mathf.Lerp(iter_327_1.color.r, arg_324_1.hightColor1.r, var_327_3)
								local var_327_5 = Mathf.Lerp(iter_327_1.color.g, arg_324_1.hightColor1.g, var_327_3)
								local var_327_6 = Mathf.Lerp(iter_327_1.color.b, arg_324_1.hightColor1.b, var_327_3)

								iter_327_1.color = Color.New(var_327_4, var_327_5, var_327_6)
							else
								local var_327_7 = Mathf.Lerp(iter_327_1.color.r, 1, var_327_3)

								iter_327_1.color = Color.New(var_327_7, var_327_7, var_327_7)
							end
						end
					end
				end
			end

			if arg_324_1.time_ >= var_327_1 + var_327_2 and arg_324_1.time_ < var_327_1 + var_327_2 + arg_327_0 and not isNil(var_327_0) and arg_324_1.var_.actorSpriteComps10128 then
				for iter_327_2, iter_327_3 in pairs(arg_324_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_327_3 then
						if arg_324_1.isInRecall_ then
							iter_327_3.color = arg_324_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_327_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_324_1.var_.actorSpriteComps10128 = nil
			end

			local var_327_8 = arg_324_1.actors_["1060"]
			local var_327_9 = 0

			if var_327_9 < arg_324_1.time_ and arg_324_1.time_ <= var_327_9 + arg_327_0 and not isNil(var_327_8) and arg_324_1.var_.actorSpriteComps1060 == nil then
				arg_324_1.var_.actorSpriteComps1060 = var_327_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_327_10 = 0.2

			if var_327_9 <= arg_324_1.time_ and arg_324_1.time_ < var_327_9 + var_327_10 and not isNil(var_327_8) then
				local var_327_11 = (arg_324_1.time_ - var_327_9) / var_327_10

				if arg_324_1.var_.actorSpriteComps1060 then
					for iter_327_4, iter_327_5 in pairs(arg_324_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_327_5 then
							if arg_324_1.isInRecall_ then
								local var_327_12 = Mathf.Lerp(iter_327_5.color.r, arg_324_1.hightColor2.r, var_327_11)
								local var_327_13 = Mathf.Lerp(iter_327_5.color.g, arg_324_1.hightColor2.g, var_327_11)
								local var_327_14 = Mathf.Lerp(iter_327_5.color.b, arg_324_1.hightColor2.b, var_327_11)

								iter_327_5.color = Color.New(var_327_12, var_327_13, var_327_14)
							else
								local var_327_15 = Mathf.Lerp(iter_327_5.color.r, 0.5, var_327_11)

								iter_327_5.color = Color.New(var_327_15, var_327_15, var_327_15)
							end
						end
					end
				end
			end

			if arg_324_1.time_ >= var_327_9 + var_327_10 and arg_324_1.time_ < var_327_9 + var_327_10 + arg_327_0 and not isNil(var_327_8) and arg_324_1.var_.actorSpriteComps1060 then
				for iter_327_6, iter_327_7 in pairs(arg_324_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_327_7 then
						if arg_324_1.isInRecall_ then
							iter_327_7.color = arg_324_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_327_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_324_1.var_.actorSpriteComps1060 = nil
			end

			local var_327_16 = 0
			local var_327_17 = 0.125

			if var_327_16 < arg_324_1.time_ and arg_324_1.time_ <= var_327_16 + arg_327_0 then
				arg_324_1.talkMaxDuration = 0
				arg_324_1.dialogCg_.alpha = 1

				arg_324_1.dialog_:SetActive(true)
				SetActive(arg_324_1.leftNameGo_, true)

				local var_327_18 = arg_324_1:FormatText(StoryNameCfg[595].name)

				arg_324_1.leftNameTxt_.text = var_327_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_324_1.leftNameTxt_.transform)

				arg_324_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_324_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_324_1:RecordName(arg_324_1.leftNameTxt_.text)
				SetActive(arg_324_1.iconTrs_.gameObject, false)
				arg_324_1.callingController_:SetSelectedState("normal")

				local var_327_19 = arg_324_1:GetWordFromCfg(417161079)
				local var_327_20 = arg_324_1:FormatText(var_327_19.content)

				arg_324_1.text_.text = var_327_20

				LuaForUtil.ClearLinePrefixSymbol(arg_324_1.text_)

				local var_327_21 = 5
				local var_327_22 = utf8.len(var_327_20)
				local var_327_23 = var_327_21 <= 0 and var_327_17 or var_327_17 * (var_327_22 / var_327_21)

				if var_327_23 > 0 and var_327_17 < var_327_23 then
					arg_324_1.talkMaxDuration = var_327_23

					if var_327_23 + var_327_16 > arg_324_1.duration_ then
						arg_324_1.duration_ = var_327_23 + var_327_16
					end
				end

				arg_324_1.text_.text = var_327_20
				arg_324_1.typewritter.percent = 0

				arg_324_1.typewritter:SetDirty()
				arg_324_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161079", "story_v_out_417161.awb") ~= 0 then
					local var_327_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161079", "story_v_out_417161.awb") / 1000

					if var_327_24 + var_327_16 > arg_324_1.duration_ then
						arg_324_1.duration_ = var_327_24 + var_327_16
					end

					if var_327_19.prefab_name ~= "" and arg_324_1.actors_[var_327_19.prefab_name] ~= nil then
						local var_327_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_324_1.actors_[var_327_19.prefab_name].transform, "story_v_out_417161", "417161079", "story_v_out_417161.awb")

						arg_324_1:RecordAudio("417161079", var_327_25)
						arg_324_1:RecordAudio("417161079", var_327_25)
					else
						arg_324_1:AudioAction("play", "voice", "story_v_out_417161", "417161079", "story_v_out_417161.awb")
					end

					arg_324_1:RecordHistoryTalkVoice("story_v_out_417161", "417161079", "story_v_out_417161.awb")
				end

				arg_324_1:RecordContent(arg_324_1.text_.text)
			end

			local var_327_26 = math.max(var_327_17, arg_324_1.talkMaxDuration)

			if var_327_16 <= arg_324_1.time_ and arg_324_1.time_ < var_327_16 + var_327_26 then
				arg_324_1.typewritter.percent = (arg_324_1.time_ - var_327_16) / var_327_26

				arg_324_1.typewritter:SetDirty()
			end

			if arg_324_1.time_ >= var_327_16 + var_327_26 and arg_324_1.time_ < var_327_16 + var_327_26 + arg_327_0 then
				arg_324_1.typewritter.percent = 1

				arg_324_1.typewritter:SetDirty()
				arg_324_1:ShowNextGo(true)
			end
		end
	end,
	Play417161080 = function(arg_328_0, arg_328_1)
		arg_328_1.time_ = 0
		arg_328_1.frameCnt_ = 0
		arg_328_1.state_ = "playing"
		arg_328_1.curTalkId_ = 417161080
		arg_328_1.duration_ = 6.37

		SetActive(arg_328_1.tipsGo_, false)

		function arg_328_1.onSingleLineFinish_()
			arg_328_1.onSingleLineUpdate_ = nil
			arg_328_1.onSingleLineFinish_ = nil
			arg_328_1.state_ = "waiting"
		end

		function arg_328_1.playNext_(arg_330_0)
			if arg_330_0 == 1 then
				arg_328_0:Play417161081(arg_328_1)
			end
		end

		function arg_328_1.onSingleLineUpdate_(arg_331_0)
			local var_331_0 = arg_328_1.actors_["1060"]
			local var_331_1 = 0

			if var_331_1 < arg_328_1.time_ and arg_328_1.time_ <= var_331_1 + arg_331_0 and not isNil(var_331_0) and arg_328_1.var_.actorSpriteComps1060 == nil then
				arg_328_1.var_.actorSpriteComps1060 = var_331_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_331_2 = 0.2

			if var_331_1 <= arg_328_1.time_ and arg_328_1.time_ < var_331_1 + var_331_2 and not isNil(var_331_0) then
				local var_331_3 = (arg_328_1.time_ - var_331_1) / var_331_2

				if arg_328_1.var_.actorSpriteComps1060 then
					for iter_331_0, iter_331_1 in pairs(arg_328_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_331_1 then
							if arg_328_1.isInRecall_ then
								local var_331_4 = Mathf.Lerp(iter_331_1.color.r, arg_328_1.hightColor1.r, var_331_3)
								local var_331_5 = Mathf.Lerp(iter_331_1.color.g, arg_328_1.hightColor1.g, var_331_3)
								local var_331_6 = Mathf.Lerp(iter_331_1.color.b, arg_328_1.hightColor1.b, var_331_3)

								iter_331_1.color = Color.New(var_331_4, var_331_5, var_331_6)
							else
								local var_331_7 = Mathf.Lerp(iter_331_1.color.r, 1, var_331_3)

								iter_331_1.color = Color.New(var_331_7, var_331_7, var_331_7)
							end
						end
					end
				end
			end

			if arg_328_1.time_ >= var_331_1 + var_331_2 and arg_328_1.time_ < var_331_1 + var_331_2 + arg_331_0 and not isNil(var_331_0) and arg_328_1.var_.actorSpriteComps1060 then
				for iter_331_2, iter_331_3 in pairs(arg_328_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_331_3 then
						if arg_328_1.isInRecall_ then
							iter_331_3.color = arg_328_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_331_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_328_1.var_.actorSpriteComps1060 = nil
			end

			local var_331_8 = arg_328_1.actors_["10128"]
			local var_331_9 = 0

			if var_331_9 < arg_328_1.time_ and arg_328_1.time_ <= var_331_9 + arg_331_0 and not isNil(var_331_8) and arg_328_1.var_.actorSpriteComps10128 == nil then
				arg_328_1.var_.actorSpriteComps10128 = var_331_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_331_10 = 0.2

			if var_331_9 <= arg_328_1.time_ and arg_328_1.time_ < var_331_9 + var_331_10 and not isNil(var_331_8) then
				local var_331_11 = (arg_328_1.time_ - var_331_9) / var_331_10

				if arg_328_1.var_.actorSpriteComps10128 then
					for iter_331_4, iter_331_5 in pairs(arg_328_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_331_5 then
							if arg_328_1.isInRecall_ then
								local var_331_12 = Mathf.Lerp(iter_331_5.color.r, arg_328_1.hightColor2.r, var_331_11)
								local var_331_13 = Mathf.Lerp(iter_331_5.color.g, arg_328_1.hightColor2.g, var_331_11)
								local var_331_14 = Mathf.Lerp(iter_331_5.color.b, arg_328_1.hightColor2.b, var_331_11)

								iter_331_5.color = Color.New(var_331_12, var_331_13, var_331_14)
							else
								local var_331_15 = Mathf.Lerp(iter_331_5.color.r, 0.5, var_331_11)

								iter_331_5.color = Color.New(var_331_15, var_331_15, var_331_15)
							end
						end
					end
				end
			end

			if arg_328_1.time_ >= var_331_9 + var_331_10 and arg_328_1.time_ < var_331_9 + var_331_10 + arg_331_0 and not isNil(var_331_8) and arg_328_1.var_.actorSpriteComps10128 then
				for iter_331_6, iter_331_7 in pairs(arg_328_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_331_7 then
						if arg_328_1.isInRecall_ then
							iter_331_7.color = arg_328_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_331_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_328_1.var_.actorSpriteComps10128 = nil
			end

			local var_331_16 = 0
			local var_331_17 = 0.925

			if var_331_16 < arg_328_1.time_ and arg_328_1.time_ <= var_331_16 + arg_331_0 then
				arg_328_1.talkMaxDuration = 0
				arg_328_1.dialogCg_.alpha = 1

				arg_328_1.dialog_:SetActive(true)
				SetActive(arg_328_1.leftNameGo_, true)

				local var_331_18 = arg_328_1:FormatText(StoryNameCfg[584].name)

				arg_328_1.leftNameTxt_.text = var_331_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_328_1.leftNameTxt_.transform)

				arg_328_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_328_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_328_1:RecordName(arg_328_1.leftNameTxt_.text)
				SetActive(arg_328_1.iconTrs_.gameObject, false)
				arg_328_1.callingController_:SetSelectedState("normal")

				local var_331_19 = arg_328_1:GetWordFromCfg(417161080)
				local var_331_20 = arg_328_1:FormatText(var_331_19.content)

				arg_328_1.text_.text = var_331_20

				LuaForUtil.ClearLinePrefixSymbol(arg_328_1.text_)

				local var_331_21 = 37
				local var_331_22 = utf8.len(var_331_20)
				local var_331_23 = var_331_21 <= 0 and var_331_17 or var_331_17 * (var_331_22 / var_331_21)

				if var_331_23 > 0 and var_331_17 < var_331_23 then
					arg_328_1.talkMaxDuration = var_331_23

					if var_331_23 + var_331_16 > arg_328_1.duration_ then
						arg_328_1.duration_ = var_331_23 + var_331_16
					end
				end

				arg_328_1.text_.text = var_331_20
				arg_328_1.typewritter.percent = 0

				arg_328_1.typewritter:SetDirty()
				arg_328_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161080", "story_v_out_417161.awb") ~= 0 then
					local var_331_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161080", "story_v_out_417161.awb") / 1000

					if var_331_24 + var_331_16 > arg_328_1.duration_ then
						arg_328_1.duration_ = var_331_24 + var_331_16
					end

					if var_331_19.prefab_name ~= "" and arg_328_1.actors_[var_331_19.prefab_name] ~= nil then
						local var_331_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_328_1.actors_[var_331_19.prefab_name].transform, "story_v_out_417161", "417161080", "story_v_out_417161.awb")

						arg_328_1:RecordAudio("417161080", var_331_25)
						arg_328_1:RecordAudio("417161080", var_331_25)
					else
						arg_328_1:AudioAction("play", "voice", "story_v_out_417161", "417161080", "story_v_out_417161.awb")
					end

					arg_328_1:RecordHistoryTalkVoice("story_v_out_417161", "417161080", "story_v_out_417161.awb")
				end

				arg_328_1:RecordContent(arg_328_1.text_.text)
			end

			local var_331_26 = math.max(var_331_17, arg_328_1.talkMaxDuration)

			if var_331_16 <= arg_328_1.time_ and arg_328_1.time_ < var_331_16 + var_331_26 then
				arg_328_1.typewritter.percent = (arg_328_1.time_ - var_331_16) / var_331_26

				arg_328_1.typewritter:SetDirty()
			end

			if arg_328_1.time_ >= var_331_16 + var_331_26 and arg_328_1.time_ < var_331_16 + var_331_26 + arg_331_0 then
				arg_328_1.typewritter.percent = 1

				arg_328_1.typewritter:SetDirty()
				arg_328_1:ShowNextGo(true)
			end
		end
	end,
	Play417161081 = function(arg_332_0, arg_332_1)
		arg_332_1.time_ = 0
		arg_332_1.frameCnt_ = 0
		arg_332_1.state_ = "playing"
		arg_332_1.curTalkId_ = 417161081
		arg_332_1.duration_ = 2.37

		SetActive(arg_332_1.tipsGo_, false)

		function arg_332_1.onSingleLineFinish_()
			arg_332_1.onSingleLineUpdate_ = nil
			arg_332_1.onSingleLineFinish_ = nil
			arg_332_1.state_ = "waiting"
		end

		function arg_332_1.playNext_(arg_334_0)
			if arg_334_0 == 1 then
				arg_332_0:Play417161082(arg_332_1)
			end
		end

		function arg_332_1.onSingleLineUpdate_(arg_335_0)
			local var_335_0 = arg_332_1.actors_["10128"]
			local var_335_1 = 0

			if var_335_1 < arg_332_1.time_ and arg_332_1.time_ <= var_335_1 + arg_335_0 and not isNil(var_335_0) and arg_332_1.var_.actorSpriteComps10128 == nil then
				arg_332_1.var_.actorSpriteComps10128 = var_335_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_335_2 = 0.2

			if var_335_1 <= arg_332_1.time_ and arg_332_1.time_ < var_335_1 + var_335_2 and not isNil(var_335_0) then
				local var_335_3 = (arg_332_1.time_ - var_335_1) / var_335_2

				if arg_332_1.var_.actorSpriteComps10128 then
					for iter_335_0, iter_335_1 in pairs(arg_332_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_335_1 then
							if arg_332_1.isInRecall_ then
								local var_335_4 = Mathf.Lerp(iter_335_1.color.r, arg_332_1.hightColor1.r, var_335_3)
								local var_335_5 = Mathf.Lerp(iter_335_1.color.g, arg_332_1.hightColor1.g, var_335_3)
								local var_335_6 = Mathf.Lerp(iter_335_1.color.b, arg_332_1.hightColor1.b, var_335_3)

								iter_335_1.color = Color.New(var_335_4, var_335_5, var_335_6)
							else
								local var_335_7 = Mathf.Lerp(iter_335_1.color.r, 1, var_335_3)

								iter_335_1.color = Color.New(var_335_7, var_335_7, var_335_7)
							end
						end
					end
				end
			end

			if arg_332_1.time_ >= var_335_1 + var_335_2 and arg_332_1.time_ < var_335_1 + var_335_2 + arg_335_0 and not isNil(var_335_0) and arg_332_1.var_.actorSpriteComps10128 then
				for iter_335_2, iter_335_3 in pairs(arg_332_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_335_3 then
						if arg_332_1.isInRecall_ then
							iter_335_3.color = arg_332_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_335_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_332_1.var_.actorSpriteComps10128 = nil
			end

			local var_335_8 = arg_332_1.actors_["1060"]
			local var_335_9 = 0

			if var_335_9 < arg_332_1.time_ and arg_332_1.time_ <= var_335_9 + arg_335_0 and not isNil(var_335_8) and arg_332_1.var_.actorSpriteComps1060 == nil then
				arg_332_1.var_.actorSpriteComps1060 = var_335_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_335_10 = 0.2

			if var_335_9 <= arg_332_1.time_ and arg_332_1.time_ < var_335_9 + var_335_10 and not isNil(var_335_8) then
				local var_335_11 = (arg_332_1.time_ - var_335_9) / var_335_10

				if arg_332_1.var_.actorSpriteComps1060 then
					for iter_335_4, iter_335_5 in pairs(arg_332_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_335_5 then
							if arg_332_1.isInRecall_ then
								local var_335_12 = Mathf.Lerp(iter_335_5.color.r, arg_332_1.hightColor2.r, var_335_11)
								local var_335_13 = Mathf.Lerp(iter_335_5.color.g, arg_332_1.hightColor2.g, var_335_11)
								local var_335_14 = Mathf.Lerp(iter_335_5.color.b, arg_332_1.hightColor2.b, var_335_11)

								iter_335_5.color = Color.New(var_335_12, var_335_13, var_335_14)
							else
								local var_335_15 = Mathf.Lerp(iter_335_5.color.r, 0.5, var_335_11)

								iter_335_5.color = Color.New(var_335_15, var_335_15, var_335_15)
							end
						end
					end
				end
			end

			if arg_332_1.time_ >= var_335_9 + var_335_10 and arg_332_1.time_ < var_335_9 + var_335_10 + arg_335_0 and not isNil(var_335_8) and arg_332_1.var_.actorSpriteComps1060 then
				for iter_335_6, iter_335_7 in pairs(arg_332_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_335_7 then
						if arg_332_1.isInRecall_ then
							iter_335_7.color = arg_332_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_335_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_332_1.var_.actorSpriteComps1060 = nil
			end

			local var_335_16 = 0
			local var_335_17 = 0.225

			if var_335_16 < arg_332_1.time_ and arg_332_1.time_ <= var_335_16 + arg_335_0 then
				arg_332_1.talkMaxDuration = 0
				arg_332_1.dialogCg_.alpha = 1

				arg_332_1.dialog_:SetActive(true)
				SetActive(arg_332_1.leftNameGo_, true)

				local var_335_18 = arg_332_1:FormatText(StoryNameCfg[595].name)

				arg_332_1.leftNameTxt_.text = var_335_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_332_1.leftNameTxt_.transform)

				arg_332_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_332_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_332_1:RecordName(arg_332_1.leftNameTxt_.text)
				SetActive(arg_332_1.iconTrs_.gameObject, false)
				arg_332_1.callingController_:SetSelectedState("normal")

				local var_335_19 = arg_332_1:GetWordFromCfg(417161081)
				local var_335_20 = arg_332_1:FormatText(var_335_19.content)

				arg_332_1.text_.text = var_335_20

				LuaForUtil.ClearLinePrefixSymbol(arg_332_1.text_)

				local var_335_21 = 9
				local var_335_22 = utf8.len(var_335_20)
				local var_335_23 = var_335_21 <= 0 and var_335_17 or var_335_17 * (var_335_22 / var_335_21)

				if var_335_23 > 0 and var_335_17 < var_335_23 then
					arg_332_1.talkMaxDuration = var_335_23

					if var_335_23 + var_335_16 > arg_332_1.duration_ then
						arg_332_1.duration_ = var_335_23 + var_335_16
					end
				end

				arg_332_1.text_.text = var_335_20
				arg_332_1.typewritter.percent = 0

				arg_332_1.typewritter:SetDirty()
				arg_332_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161081", "story_v_out_417161.awb") ~= 0 then
					local var_335_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161081", "story_v_out_417161.awb") / 1000

					if var_335_24 + var_335_16 > arg_332_1.duration_ then
						arg_332_1.duration_ = var_335_24 + var_335_16
					end

					if var_335_19.prefab_name ~= "" and arg_332_1.actors_[var_335_19.prefab_name] ~= nil then
						local var_335_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_332_1.actors_[var_335_19.prefab_name].transform, "story_v_out_417161", "417161081", "story_v_out_417161.awb")

						arg_332_1:RecordAudio("417161081", var_335_25)
						arg_332_1:RecordAudio("417161081", var_335_25)
					else
						arg_332_1:AudioAction("play", "voice", "story_v_out_417161", "417161081", "story_v_out_417161.awb")
					end

					arg_332_1:RecordHistoryTalkVoice("story_v_out_417161", "417161081", "story_v_out_417161.awb")
				end

				arg_332_1:RecordContent(arg_332_1.text_.text)
			end

			local var_335_26 = math.max(var_335_17, arg_332_1.talkMaxDuration)

			if var_335_16 <= arg_332_1.time_ and arg_332_1.time_ < var_335_16 + var_335_26 then
				arg_332_1.typewritter.percent = (arg_332_1.time_ - var_335_16) / var_335_26

				arg_332_1.typewritter:SetDirty()
			end

			if arg_332_1.time_ >= var_335_16 + var_335_26 and arg_332_1.time_ < var_335_16 + var_335_26 + arg_335_0 then
				arg_332_1.typewritter.percent = 1

				arg_332_1.typewritter:SetDirty()
				arg_332_1:ShowNextGo(true)
			end
		end
	end,
	Play417161082 = function(arg_336_0, arg_336_1)
		arg_336_1.time_ = 0
		arg_336_1.frameCnt_ = 0
		arg_336_1.state_ = "playing"
		arg_336_1.curTalkId_ = 417161082
		arg_336_1.duration_ = 11.93

		SetActive(arg_336_1.tipsGo_, false)

		function arg_336_1.onSingleLineFinish_()
			arg_336_1.onSingleLineUpdate_ = nil
			arg_336_1.onSingleLineFinish_ = nil
			arg_336_1.state_ = "waiting"
		end

		function arg_336_1.playNext_(arg_338_0)
			if arg_338_0 == 1 then
				arg_336_0:Play417161083(arg_336_1)
			end
		end

		function arg_336_1.onSingleLineUpdate_(arg_339_0)
			local var_339_0 = arg_336_1.actors_["1060"]
			local var_339_1 = 0

			if var_339_1 < arg_336_1.time_ and arg_336_1.time_ <= var_339_1 + arg_339_0 and not isNil(var_339_0) and arg_336_1.var_.actorSpriteComps1060 == nil then
				arg_336_1.var_.actorSpriteComps1060 = var_339_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_339_2 = 0.2

			if var_339_1 <= arg_336_1.time_ and arg_336_1.time_ < var_339_1 + var_339_2 and not isNil(var_339_0) then
				local var_339_3 = (arg_336_1.time_ - var_339_1) / var_339_2

				if arg_336_1.var_.actorSpriteComps1060 then
					for iter_339_0, iter_339_1 in pairs(arg_336_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_339_1 then
							if arg_336_1.isInRecall_ then
								local var_339_4 = Mathf.Lerp(iter_339_1.color.r, arg_336_1.hightColor1.r, var_339_3)
								local var_339_5 = Mathf.Lerp(iter_339_1.color.g, arg_336_1.hightColor1.g, var_339_3)
								local var_339_6 = Mathf.Lerp(iter_339_1.color.b, arg_336_1.hightColor1.b, var_339_3)

								iter_339_1.color = Color.New(var_339_4, var_339_5, var_339_6)
							else
								local var_339_7 = Mathf.Lerp(iter_339_1.color.r, 1, var_339_3)

								iter_339_1.color = Color.New(var_339_7, var_339_7, var_339_7)
							end
						end
					end
				end
			end

			if arg_336_1.time_ >= var_339_1 + var_339_2 and arg_336_1.time_ < var_339_1 + var_339_2 + arg_339_0 and not isNil(var_339_0) and arg_336_1.var_.actorSpriteComps1060 then
				for iter_339_2, iter_339_3 in pairs(arg_336_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_339_3 then
						if arg_336_1.isInRecall_ then
							iter_339_3.color = arg_336_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_339_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_336_1.var_.actorSpriteComps1060 = nil
			end

			local var_339_8 = arg_336_1.actors_["10128"]
			local var_339_9 = 0

			if var_339_9 < arg_336_1.time_ and arg_336_1.time_ <= var_339_9 + arg_339_0 and not isNil(var_339_8) and arg_336_1.var_.actorSpriteComps10128 == nil then
				arg_336_1.var_.actorSpriteComps10128 = var_339_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_339_10 = 0.2

			if var_339_9 <= arg_336_1.time_ and arg_336_1.time_ < var_339_9 + var_339_10 and not isNil(var_339_8) then
				local var_339_11 = (arg_336_1.time_ - var_339_9) / var_339_10

				if arg_336_1.var_.actorSpriteComps10128 then
					for iter_339_4, iter_339_5 in pairs(arg_336_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_339_5 then
							if arg_336_1.isInRecall_ then
								local var_339_12 = Mathf.Lerp(iter_339_5.color.r, arg_336_1.hightColor2.r, var_339_11)
								local var_339_13 = Mathf.Lerp(iter_339_5.color.g, arg_336_1.hightColor2.g, var_339_11)
								local var_339_14 = Mathf.Lerp(iter_339_5.color.b, arg_336_1.hightColor2.b, var_339_11)

								iter_339_5.color = Color.New(var_339_12, var_339_13, var_339_14)
							else
								local var_339_15 = Mathf.Lerp(iter_339_5.color.r, 0.5, var_339_11)

								iter_339_5.color = Color.New(var_339_15, var_339_15, var_339_15)
							end
						end
					end
				end
			end

			if arg_336_1.time_ >= var_339_9 + var_339_10 and arg_336_1.time_ < var_339_9 + var_339_10 + arg_339_0 and not isNil(var_339_8) and arg_336_1.var_.actorSpriteComps10128 then
				for iter_339_6, iter_339_7 in pairs(arg_336_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_339_7 then
						if arg_336_1.isInRecall_ then
							iter_339_7.color = arg_336_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_339_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_336_1.var_.actorSpriteComps10128 = nil
			end

			local var_339_16 = 0
			local var_339_17 = 1.675

			if var_339_16 < arg_336_1.time_ and arg_336_1.time_ <= var_339_16 + arg_339_0 then
				arg_336_1.talkMaxDuration = 0
				arg_336_1.dialogCg_.alpha = 1

				arg_336_1.dialog_:SetActive(true)
				SetActive(arg_336_1.leftNameGo_, true)

				local var_339_18 = arg_336_1:FormatText(StoryNameCfg[584].name)

				arg_336_1.leftNameTxt_.text = var_339_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_336_1.leftNameTxt_.transform)

				arg_336_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_336_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_336_1:RecordName(arg_336_1.leftNameTxt_.text)
				SetActive(arg_336_1.iconTrs_.gameObject, false)
				arg_336_1.callingController_:SetSelectedState("normal")

				local var_339_19 = arg_336_1:GetWordFromCfg(417161082)
				local var_339_20 = arg_336_1:FormatText(var_339_19.content)

				arg_336_1.text_.text = var_339_20

				LuaForUtil.ClearLinePrefixSymbol(arg_336_1.text_)

				local var_339_21 = 67
				local var_339_22 = utf8.len(var_339_20)
				local var_339_23 = var_339_21 <= 0 and var_339_17 or var_339_17 * (var_339_22 / var_339_21)

				if var_339_23 > 0 and var_339_17 < var_339_23 then
					arg_336_1.talkMaxDuration = var_339_23

					if var_339_23 + var_339_16 > arg_336_1.duration_ then
						arg_336_1.duration_ = var_339_23 + var_339_16
					end
				end

				arg_336_1.text_.text = var_339_20
				arg_336_1.typewritter.percent = 0

				arg_336_1.typewritter:SetDirty()
				arg_336_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161082", "story_v_out_417161.awb") ~= 0 then
					local var_339_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161082", "story_v_out_417161.awb") / 1000

					if var_339_24 + var_339_16 > arg_336_1.duration_ then
						arg_336_1.duration_ = var_339_24 + var_339_16
					end

					if var_339_19.prefab_name ~= "" and arg_336_1.actors_[var_339_19.prefab_name] ~= nil then
						local var_339_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_336_1.actors_[var_339_19.prefab_name].transform, "story_v_out_417161", "417161082", "story_v_out_417161.awb")

						arg_336_1:RecordAudio("417161082", var_339_25)
						arg_336_1:RecordAudio("417161082", var_339_25)
					else
						arg_336_1:AudioAction("play", "voice", "story_v_out_417161", "417161082", "story_v_out_417161.awb")
					end

					arg_336_1:RecordHistoryTalkVoice("story_v_out_417161", "417161082", "story_v_out_417161.awb")
				end

				arg_336_1:RecordContent(arg_336_1.text_.text)
			end

			local var_339_26 = math.max(var_339_17, arg_336_1.talkMaxDuration)

			if var_339_16 <= arg_336_1.time_ and arg_336_1.time_ < var_339_16 + var_339_26 then
				arg_336_1.typewritter.percent = (arg_336_1.time_ - var_339_16) / var_339_26

				arg_336_1.typewritter:SetDirty()
			end

			if arg_336_1.time_ >= var_339_16 + var_339_26 and arg_336_1.time_ < var_339_16 + var_339_26 + arg_339_0 then
				arg_336_1.typewritter.percent = 1

				arg_336_1.typewritter:SetDirty()
				arg_336_1:ShowNextGo(true)
			end
		end
	end,
	Play417161083 = function(arg_340_0, arg_340_1)
		arg_340_1.time_ = 0
		arg_340_1.frameCnt_ = 0
		arg_340_1.state_ = "playing"
		arg_340_1.curTalkId_ = 417161083
		arg_340_1.duration_ = 6.13

		SetActive(arg_340_1.tipsGo_, false)

		function arg_340_1.onSingleLineFinish_()
			arg_340_1.onSingleLineUpdate_ = nil
			arg_340_1.onSingleLineFinish_ = nil
			arg_340_1.state_ = "waiting"
		end

		function arg_340_1.playNext_(arg_342_0)
			if arg_342_0 == 1 then
				arg_340_0:Play417161084(arg_340_1)
			end
		end

		function arg_340_1.onSingleLineUpdate_(arg_343_0)
			local var_343_0 = 0
			local var_343_1 = 0.725

			if var_343_0 < arg_340_1.time_ and arg_340_1.time_ <= var_343_0 + arg_343_0 then
				arg_340_1.talkMaxDuration = 0
				arg_340_1.dialogCg_.alpha = 1

				arg_340_1.dialog_:SetActive(true)
				SetActive(arg_340_1.leftNameGo_, true)

				local var_343_2 = arg_340_1:FormatText(StoryNameCfg[584].name)

				arg_340_1.leftNameTxt_.text = var_343_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_340_1.leftNameTxt_.transform)

				arg_340_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_340_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_340_1:RecordName(arg_340_1.leftNameTxt_.text)
				SetActive(arg_340_1.iconTrs_.gameObject, false)
				arg_340_1.callingController_:SetSelectedState("normal")

				local var_343_3 = arg_340_1:GetWordFromCfg(417161083)
				local var_343_4 = arg_340_1:FormatText(var_343_3.content)

				arg_340_1.text_.text = var_343_4

				LuaForUtil.ClearLinePrefixSymbol(arg_340_1.text_)

				local var_343_5 = 29
				local var_343_6 = utf8.len(var_343_4)
				local var_343_7 = var_343_5 <= 0 and var_343_1 or var_343_1 * (var_343_6 / var_343_5)

				if var_343_7 > 0 and var_343_1 < var_343_7 then
					arg_340_1.talkMaxDuration = var_343_7

					if var_343_7 + var_343_0 > arg_340_1.duration_ then
						arg_340_1.duration_ = var_343_7 + var_343_0
					end
				end

				arg_340_1.text_.text = var_343_4
				arg_340_1.typewritter.percent = 0

				arg_340_1.typewritter:SetDirty()
				arg_340_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161083", "story_v_out_417161.awb") ~= 0 then
					local var_343_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161083", "story_v_out_417161.awb") / 1000

					if var_343_8 + var_343_0 > arg_340_1.duration_ then
						arg_340_1.duration_ = var_343_8 + var_343_0
					end

					if var_343_3.prefab_name ~= "" and arg_340_1.actors_[var_343_3.prefab_name] ~= nil then
						local var_343_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_340_1.actors_[var_343_3.prefab_name].transform, "story_v_out_417161", "417161083", "story_v_out_417161.awb")

						arg_340_1:RecordAudio("417161083", var_343_9)
						arg_340_1:RecordAudio("417161083", var_343_9)
					else
						arg_340_1:AudioAction("play", "voice", "story_v_out_417161", "417161083", "story_v_out_417161.awb")
					end

					arg_340_1:RecordHistoryTalkVoice("story_v_out_417161", "417161083", "story_v_out_417161.awb")
				end

				arg_340_1:RecordContent(arg_340_1.text_.text)
			end

			local var_343_10 = math.max(var_343_1, arg_340_1.talkMaxDuration)

			if var_343_0 <= arg_340_1.time_ and arg_340_1.time_ < var_343_0 + var_343_10 then
				arg_340_1.typewritter.percent = (arg_340_1.time_ - var_343_0) / var_343_10

				arg_340_1.typewritter:SetDirty()
			end

			if arg_340_1.time_ >= var_343_0 + var_343_10 and arg_340_1.time_ < var_343_0 + var_343_10 + arg_343_0 then
				arg_340_1.typewritter.percent = 1

				arg_340_1.typewritter:SetDirty()
				arg_340_1:ShowNextGo(true)
			end
		end
	end,
	Play417161084 = function(arg_344_0, arg_344_1)
		arg_344_1.time_ = 0
		arg_344_1.frameCnt_ = 0
		arg_344_1.state_ = "playing"
		arg_344_1.curTalkId_ = 417161084
		arg_344_1.duration_ = 1

		SetActive(arg_344_1.tipsGo_, false)

		function arg_344_1.onSingleLineFinish_()
			arg_344_1.onSingleLineUpdate_ = nil
			arg_344_1.onSingleLineFinish_ = nil
			arg_344_1.state_ = "waiting"
		end

		function arg_344_1.playNext_(arg_346_0)
			if arg_346_0 == 1 then
				arg_344_0:Play417161085(arg_344_1)
			end
		end

		function arg_344_1.onSingleLineUpdate_(arg_347_0)
			local var_347_0 = arg_344_1.actors_["10128"]
			local var_347_1 = 0

			if var_347_1 < arg_344_1.time_ and arg_344_1.time_ <= var_347_1 + arg_347_0 and not isNil(var_347_0) and arg_344_1.var_.actorSpriteComps10128 == nil then
				arg_344_1.var_.actorSpriteComps10128 = var_347_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_347_2 = 0.2

			if var_347_1 <= arg_344_1.time_ and arg_344_1.time_ < var_347_1 + var_347_2 and not isNil(var_347_0) then
				local var_347_3 = (arg_344_1.time_ - var_347_1) / var_347_2

				if arg_344_1.var_.actorSpriteComps10128 then
					for iter_347_0, iter_347_1 in pairs(arg_344_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_347_1 then
							if arg_344_1.isInRecall_ then
								local var_347_4 = Mathf.Lerp(iter_347_1.color.r, arg_344_1.hightColor1.r, var_347_3)
								local var_347_5 = Mathf.Lerp(iter_347_1.color.g, arg_344_1.hightColor1.g, var_347_3)
								local var_347_6 = Mathf.Lerp(iter_347_1.color.b, arg_344_1.hightColor1.b, var_347_3)

								iter_347_1.color = Color.New(var_347_4, var_347_5, var_347_6)
							else
								local var_347_7 = Mathf.Lerp(iter_347_1.color.r, 1, var_347_3)

								iter_347_1.color = Color.New(var_347_7, var_347_7, var_347_7)
							end
						end
					end
				end
			end

			if arg_344_1.time_ >= var_347_1 + var_347_2 and arg_344_1.time_ < var_347_1 + var_347_2 + arg_347_0 and not isNil(var_347_0) and arg_344_1.var_.actorSpriteComps10128 then
				for iter_347_2, iter_347_3 in pairs(arg_344_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_347_3 then
						if arg_344_1.isInRecall_ then
							iter_347_3.color = arg_344_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_347_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_344_1.var_.actorSpriteComps10128 = nil
			end

			local var_347_8 = arg_344_1.actors_["1060"]
			local var_347_9 = 0

			if var_347_9 < arg_344_1.time_ and arg_344_1.time_ <= var_347_9 + arg_347_0 and not isNil(var_347_8) and arg_344_1.var_.actorSpriteComps1060 == nil then
				arg_344_1.var_.actorSpriteComps1060 = var_347_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_347_10 = 0.2

			if var_347_9 <= arg_344_1.time_ and arg_344_1.time_ < var_347_9 + var_347_10 and not isNil(var_347_8) then
				local var_347_11 = (arg_344_1.time_ - var_347_9) / var_347_10

				if arg_344_1.var_.actorSpriteComps1060 then
					for iter_347_4, iter_347_5 in pairs(arg_344_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_347_5 then
							if arg_344_1.isInRecall_ then
								local var_347_12 = Mathf.Lerp(iter_347_5.color.r, arg_344_1.hightColor2.r, var_347_11)
								local var_347_13 = Mathf.Lerp(iter_347_5.color.g, arg_344_1.hightColor2.g, var_347_11)
								local var_347_14 = Mathf.Lerp(iter_347_5.color.b, arg_344_1.hightColor2.b, var_347_11)

								iter_347_5.color = Color.New(var_347_12, var_347_13, var_347_14)
							else
								local var_347_15 = Mathf.Lerp(iter_347_5.color.r, 0.5, var_347_11)

								iter_347_5.color = Color.New(var_347_15, var_347_15, var_347_15)
							end
						end
					end
				end
			end

			if arg_344_1.time_ >= var_347_9 + var_347_10 and arg_344_1.time_ < var_347_9 + var_347_10 + arg_347_0 and not isNil(var_347_8) and arg_344_1.var_.actorSpriteComps1060 then
				for iter_347_6, iter_347_7 in pairs(arg_344_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_347_7 then
						if arg_344_1.isInRecall_ then
							iter_347_7.color = arg_344_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_347_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_344_1.var_.actorSpriteComps1060 = nil
			end

			local var_347_16 = arg_344_1.actors_["10128"].transform
			local var_347_17 = 0

			if var_347_17 < arg_344_1.time_ and arg_344_1.time_ <= var_347_17 + arg_347_0 then
				arg_344_1.var_.moveOldPos10128 = var_347_16.localPosition
				var_347_16.localScale = Vector3.New(1, 1, 1)

				arg_344_1:CheckSpriteTmpPos("10128", 2)

				local var_347_18 = var_347_16.childCount

				for iter_347_8 = 0, var_347_18 - 1 do
					local var_347_19 = var_347_16:GetChild(iter_347_8)

					if var_347_19.name == "split_2" or not string.find(var_347_19.name, "split") then
						var_347_19.gameObject:SetActive(true)
					else
						var_347_19.gameObject:SetActive(false)
					end
				end
			end

			local var_347_20 = 0.001

			if var_347_17 <= arg_344_1.time_ and arg_344_1.time_ < var_347_17 + var_347_20 then
				local var_347_21 = (arg_344_1.time_ - var_347_17) / var_347_20
				local var_347_22 = Vector3.New(-390, -347, -300)

				var_347_16.localPosition = Vector3.Lerp(arg_344_1.var_.moveOldPos10128, var_347_22, var_347_21)
			end

			if arg_344_1.time_ >= var_347_17 + var_347_20 and arg_344_1.time_ < var_347_17 + var_347_20 + arg_347_0 then
				var_347_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_347_23 = 0
			local var_347_24 = 0.075

			if var_347_23 < arg_344_1.time_ and arg_344_1.time_ <= var_347_23 + arg_347_0 then
				arg_344_1.talkMaxDuration = 0
				arg_344_1.dialogCg_.alpha = 1

				arg_344_1.dialog_:SetActive(true)
				SetActive(arg_344_1.leftNameGo_, true)

				local var_347_25 = arg_344_1:FormatText(StoryNameCfg[595].name)

				arg_344_1.leftNameTxt_.text = var_347_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_344_1.leftNameTxt_.transform)

				arg_344_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_344_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_344_1:RecordName(arg_344_1.leftNameTxt_.text)
				SetActive(arg_344_1.iconTrs_.gameObject, false)
				arg_344_1.callingController_:SetSelectedState("normal")

				local var_347_26 = arg_344_1:GetWordFromCfg(417161084)
				local var_347_27 = arg_344_1:FormatText(var_347_26.content)

				arg_344_1.text_.text = var_347_27

				LuaForUtil.ClearLinePrefixSymbol(arg_344_1.text_)

				local var_347_28 = 3
				local var_347_29 = utf8.len(var_347_27)
				local var_347_30 = var_347_28 <= 0 and var_347_24 or var_347_24 * (var_347_29 / var_347_28)

				if var_347_30 > 0 and var_347_24 < var_347_30 then
					arg_344_1.talkMaxDuration = var_347_30

					if var_347_30 + var_347_23 > arg_344_1.duration_ then
						arg_344_1.duration_ = var_347_30 + var_347_23
					end
				end

				arg_344_1.text_.text = var_347_27
				arg_344_1.typewritter.percent = 0

				arg_344_1.typewritter:SetDirty()
				arg_344_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161084", "story_v_out_417161.awb") ~= 0 then
					local var_347_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161084", "story_v_out_417161.awb") / 1000

					if var_347_31 + var_347_23 > arg_344_1.duration_ then
						arg_344_1.duration_ = var_347_31 + var_347_23
					end

					if var_347_26.prefab_name ~= "" and arg_344_1.actors_[var_347_26.prefab_name] ~= nil then
						local var_347_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_344_1.actors_[var_347_26.prefab_name].transform, "story_v_out_417161", "417161084", "story_v_out_417161.awb")

						arg_344_1:RecordAudio("417161084", var_347_32)
						arg_344_1:RecordAudio("417161084", var_347_32)
					else
						arg_344_1:AudioAction("play", "voice", "story_v_out_417161", "417161084", "story_v_out_417161.awb")
					end

					arg_344_1:RecordHistoryTalkVoice("story_v_out_417161", "417161084", "story_v_out_417161.awb")
				end

				arg_344_1:RecordContent(arg_344_1.text_.text)
			end

			local var_347_33 = math.max(var_347_24, arg_344_1.talkMaxDuration)

			if var_347_23 <= arg_344_1.time_ and arg_344_1.time_ < var_347_23 + var_347_33 then
				arg_344_1.typewritter.percent = (arg_344_1.time_ - var_347_23) / var_347_33

				arg_344_1.typewritter:SetDirty()
			end

			if arg_344_1.time_ >= var_347_23 + var_347_33 and arg_344_1.time_ < var_347_23 + var_347_33 + arg_347_0 then
				arg_344_1.typewritter.percent = 1

				arg_344_1.typewritter:SetDirty()
				arg_344_1:ShowNextGo(true)
			end
		end
	end,
	Play417161085 = function(arg_348_0, arg_348_1)
		arg_348_1.time_ = 0
		arg_348_1.frameCnt_ = 0
		arg_348_1.state_ = "playing"
		arg_348_1.curTalkId_ = 417161085
		arg_348_1.duration_ = 1.57

		SetActive(arg_348_1.tipsGo_, false)

		function arg_348_1.onSingleLineFinish_()
			arg_348_1.onSingleLineUpdate_ = nil
			arg_348_1.onSingleLineFinish_ = nil
			arg_348_1.state_ = "waiting"
		end

		function arg_348_1.playNext_(arg_350_0)
			if arg_350_0 == 1 then
				arg_348_0:Play417161086(arg_348_1)
			end
		end

		function arg_348_1.onSingleLineUpdate_(arg_351_0)
			local var_351_0 = arg_348_1.actors_["1060"]
			local var_351_1 = 0

			if var_351_1 < arg_348_1.time_ and arg_348_1.time_ <= var_351_1 + arg_351_0 and not isNil(var_351_0) and arg_348_1.var_.actorSpriteComps1060 == nil then
				arg_348_1.var_.actorSpriteComps1060 = var_351_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_351_2 = 0.2

			if var_351_1 <= arg_348_1.time_ and arg_348_1.time_ < var_351_1 + var_351_2 and not isNil(var_351_0) then
				local var_351_3 = (arg_348_1.time_ - var_351_1) / var_351_2

				if arg_348_1.var_.actorSpriteComps1060 then
					for iter_351_0, iter_351_1 in pairs(arg_348_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_351_1 then
							if arg_348_1.isInRecall_ then
								local var_351_4 = Mathf.Lerp(iter_351_1.color.r, arg_348_1.hightColor1.r, var_351_3)
								local var_351_5 = Mathf.Lerp(iter_351_1.color.g, arg_348_1.hightColor1.g, var_351_3)
								local var_351_6 = Mathf.Lerp(iter_351_1.color.b, arg_348_1.hightColor1.b, var_351_3)

								iter_351_1.color = Color.New(var_351_4, var_351_5, var_351_6)
							else
								local var_351_7 = Mathf.Lerp(iter_351_1.color.r, 1, var_351_3)

								iter_351_1.color = Color.New(var_351_7, var_351_7, var_351_7)
							end
						end
					end
				end
			end

			if arg_348_1.time_ >= var_351_1 + var_351_2 and arg_348_1.time_ < var_351_1 + var_351_2 + arg_351_0 and not isNil(var_351_0) and arg_348_1.var_.actorSpriteComps1060 then
				for iter_351_2, iter_351_3 in pairs(arg_348_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_351_3 then
						if arg_348_1.isInRecall_ then
							iter_351_3.color = arg_348_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_351_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_348_1.var_.actorSpriteComps1060 = nil
			end

			local var_351_8 = arg_348_1.actors_["10128"]
			local var_351_9 = 0

			if var_351_9 < arg_348_1.time_ and arg_348_1.time_ <= var_351_9 + arg_351_0 and not isNil(var_351_8) and arg_348_1.var_.actorSpriteComps10128 == nil then
				arg_348_1.var_.actorSpriteComps10128 = var_351_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_351_10 = 0.2

			if var_351_9 <= arg_348_1.time_ and arg_348_1.time_ < var_351_9 + var_351_10 and not isNil(var_351_8) then
				local var_351_11 = (arg_348_1.time_ - var_351_9) / var_351_10

				if arg_348_1.var_.actorSpriteComps10128 then
					for iter_351_4, iter_351_5 in pairs(arg_348_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_351_5 then
							if arg_348_1.isInRecall_ then
								local var_351_12 = Mathf.Lerp(iter_351_5.color.r, arg_348_1.hightColor2.r, var_351_11)
								local var_351_13 = Mathf.Lerp(iter_351_5.color.g, arg_348_1.hightColor2.g, var_351_11)
								local var_351_14 = Mathf.Lerp(iter_351_5.color.b, arg_348_1.hightColor2.b, var_351_11)

								iter_351_5.color = Color.New(var_351_12, var_351_13, var_351_14)
							else
								local var_351_15 = Mathf.Lerp(iter_351_5.color.r, 0.5, var_351_11)

								iter_351_5.color = Color.New(var_351_15, var_351_15, var_351_15)
							end
						end
					end
				end
			end

			if arg_348_1.time_ >= var_351_9 + var_351_10 and arg_348_1.time_ < var_351_9 + var_351_10 + arg_351_0 and not isNil(var_351_8) and arg_348_1.var_.actorSpriteComps10128 then
				for iter_351_6, iter_351_7 in pairs(arg_348_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_351_7 then
						if arg_348_1.isInRecall_ then
							iter_351_7.color = arg_348_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_351_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_348_1.var_.actorSpriteComps10128 = nil
			end

			local var_351_16 = arg_348_1.actors_["1060"].transform
			local var_351_17 = 0

			if var_351_17 < arg_348_1.time_ and arg_348_1.time_ <= var_351_17 + arg_351_0 then
				arg_348_1.var_.moveOldPos1060 = var_351_16.localPosition
				var_351_16.localScale = Vector3.New(1, 1, 1)

				arg_348_1:CheckSpriteTmpPos("1060", 4)

				local var_351_18 = var_351_16.childCount

				for iter_351_8 = 0, var_351_18 - 1 do
					local var_351_19 = var_351_16:GetChild(iter_351_8)

					if var_351_19.name == "split_1" or not string.find(var_351_19.name, "split") then
						var_351_19.gameObject:SetActive(true)
					else
						var_351_19.gameObject:SetActive(false)
					end
				end
			end

			local var_351_20 = 0.001

			if var_351_17 <= arg_348_1.time_ and arg_348_1.time_ < var_351_17 + var_351_20 then
				local var_351_21 = (arg_348_1.time_ - var_351_17) / var_351_20
				local var_351_22 = Vector3.New(420.9, -430.8, 6.9)

				var_351_16.localPosition = Vector3.Lerp(arg_348_1.var_.moveOldPos1060, var_351_22, var_351_21)
			end

			if arg_348_1.time_ >= var_351_17 + var_351_20 and arg_348_1.time_ < var_351_17 + var_351_20 + arg_351_0 then
				var_351_16.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_351_23 = 0
			local var_351_24 = 0.125

			if var_351_23 < arg_348_1.time_ and arg_348_1.time_ <= var_351_23 + arg_351_0 then
				arg_348_1.talkMaxDuration = 0
				arg_348_1.dialogCg_.alpha = 1

				arg_348_1.dialog_:SetActive(true)
				SetActive(arg_348_1.leftNameGo_, true)

				local var_351_25 = arg_348_1:FormatText(StoryNameCfg[584].name)

				arg_348_1.leftNameTxt_.text = var_351_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_348_1.leftNameTxt_.transform)

				arg_348_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_348_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_348_1:RecordName(arg_348_1.leftNameTxt_.text)
				SetActive(arg_348_1.iconTrs_.gameObject, false)
				arg_348_1.callingController_:SetSelectedState("normal")

				local var_351_26 = arg_348_1:GetWordFromCfg(417161085)
				local var_351_27 = arg_348_1:FormatText(var_351_26.content)

				arg_348_1.text_.text = var_351_27

				LuaForUtil.ClearLinePrefixSymbol(arg_348_1.text_)

				local var_351_28 = 5
				local var_351_29 = utf8.len(var_351_27)
				local var_351_30 = var_351_28 <= 0 and var_351_24 or var_351_24 * (var_351_29 / var_351_28)

				if var_351_30 > 0 and var_351_24 < var_351_30 then
					arg_348_1.talkMaxDuration = var_351_30

					if var_351_30 + var_351_23 > arg_348_1.duration_ then
						arg_348_1.duration_ = var_351_30 + var_351_23
					end
				end

				arg_348_1.text_.text = var_351_27
				arg_348_1.typewritter.percent = 0

				arg_348_1.typewritter:SetDirty()
				arg_348_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161085", "story_v_out_417161.awb") ~= 0 then
					local var_351_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161085", "story_v_out_417161.awb") / 1000

					if var_351_31 + var_351_23 > arg_348_1.duration_ then
						arg_348_1.duration_ = var_351_31 + var_351_23
					end

					if var_351_26.prefab_name ~= "" and arg_348_1.actors_[var_351_26.prefab_name] ~= nil then
						local var_351_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_348_1.actors_[var_351_26.prefab_name].transform, "story_v_out_417161", "417161085", "story_v_out_417161.awb")

						arg_348_1:RecordAudio("417161085", var_351_32)
						arg_348_1:RecordAudio("417161085", var_351_32)
					else
						arg_348_1:AudioAction("play", "voice", "story_v_out_417161", "417161085", "story_v_out_417161.awb")
					end

					arg_348_1:RecordHistoryTalkVoice("story_v_out_417161", "417161085", "story_v_out_417161.awb")
				end

				arg_348_1:RecordContent(arg_348_1.text_.text)
			end

			local var_351_33 = math.max(var_351_24, arg_348_1.talkMaxDuration)

			if var_351_23 <= arg_348_1.time_ and arg_348_1.time_ < var_351_23 + var_351_33 then
				arg_348_1.typewritter.percent = (arg_348_1.time_ - var_351_23) / var_351_33

				arg_348_1.typewritter:SetDirty()
			end

			if arg_348_1.time_ >= var_351_23 + var_351_33 and arg_348_1.time_ < var_351_23 + var_351_33 + arg_351_0 then
				arg_348_1.typewritter.percent = 1

				arg_348_1.typewritter:SetDirty()
				arg_348_1:ShowNextGo(true)
			end
		end
	end,
	Play417161086 = function(arg_352_0, arg_352_1)
		arg_352_1.time_ = 0
		arg_352_1.frameCnt_ = 0
		arg_352_1.state_ = "playing"
		arg_352_1.curTalkId_ = 417161086
		arg_352_1.duration_ = 3.1

		SetActive(arg_352_1.tipsGo_, false)

		function arg_352_1.onSingleLineFinish_()
			arg_352_1.onSingleLineUpdate_ = nil
			arg_352_1.onSingleLineFinish_ = nil
			arg_352_1.state_ = "waiting"
		end

		function arg_352_1.playNext_(arg_354_0)
			if arg_354_0 == 1 then
				arg_352_0:Play417161087(arg_352_1)
			end
		end

		function arg_352_1.onSingleLineUpdate_(arg_355_0)
			local var_355_0 = arg_352_1.actors_["10128"]
			local var_355_1 = 0

			if var_355_1 < arg_352_1.time_ and arg_352_1.time_ <= var_355_1 + arg_355_0 and not isNil(var_355_0) and arg_352_1.var_.actorSpriteComps10128 == nil then
				arg_352_1.var_.actorSpriteComps10128 = var_355_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_355_2 = 0.2

			if var_355_1 <= arg_352_1.time_ and arg_352_1.time_ < var_355_1 + var_355_2 and not isNil(var_355_0) then
				local var_355_3 = (arg_352_1.time_ - var_355_1) / var_355_2

				if arg_352_1.var_.actorSpriteComps10128 then
					for iter_355_0, iter_355_1 in pairs(arg_352_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_355_1 then
							if arg_352_1.isInRecall_ then
								local var_355_4 = Mathf.Lerp(iter_355_1.color.r, arg_352_1.hightColor1.r, var_355_3)
								local var_355_5 = Mathf.Lerp(iter_355_1.color.g, arg_352_1.hightColor1.g, var_355_3)
								local var_355_6 = Mathf.Lerp(iter_355_1.color.b, arg_352_1.hightColor1.b, var_355_3)

								iter_355_1.color = Color.New(var_355_4, var_355_5, var_355_6)
							else
								local var_355_7 = Mathf.Lerp(iter_355_1.color.r, 1, var_355_3)

								iter_355_1.color = Color.New(var_355_7, var_355_7, var_355_7)
							end
						end
					end
				end
			end

			if arg_352_1.time_ >= var_355_1 + var_355_2 and arg_352_1.time_ < var_355_1 + var_355_2 + arg_355_0 and not isNil(var_355_0) and arg_352_1.var_.actorSpriteComps10128 then
				for iter_355_2, iter_355_3 in pairs(arg_352_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_355_3 then
						if arg_352_1.isInRecall_ then
							iter_355_3.color = arg_352_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_355_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_352_1.var_.actorSpriteComps10128 = nil
			end

			local var_355_8 = arg_352_1.actors_["1060"]
			local var_355_9 = 0

			if var_355_9 < arg_352_1.time_ and arg_352_1.time_ <= var_355_9 + arg_355_0 and not isNil(var_355_8) and arg_352_1.var_.actorSpriteComps1060 == nil then
				arg_352_1.var_.actorSpriteComps1060 = var_355_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_355_10 = 0.2

			if var_355_9 <= arg_352_1.time_ and arg_352_1.time_ < var_355_9 + var_355_10 and not isNil(var_355_8) then
				local var_355_11 = (arg_352_1.time_ - var_355_9) / var_355_10

				if arg_352_1.var_.actorSpriteComps1060 then
					for iter_355_4, iter_355_5 in pairs(arg_352_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_355_5 then
							if arg_352_1.isInRecall_ then
								local var_355_12 = Mathf.Lerp(iter_355_5.color.r, arg_352_1.hightColor2.r, var_355_11)
								local var_355_13 = Mathf.Lerp(iter_355_5.color.g, arg_352_1.hightColor2.g, var_355_11)
								local var_355_14 = Mathf.Lerp(iter_355_5.color.b, arg_352_1.hightColor2.b, var_355_11)

								iter_355_5.color = Color.New(var_355_12, var_355_13, var_355_14)
							else
								local var_355_15 = Mathf.Lerp(iter_355_5.color.r, 0.5, var_355_11)

								iter_355_5.color = Color.New(var_355_15, var_355_15, var_355_15)
							end
						end
					end
				end
			end

			if arg_352_1.time_ >= var_355_9 + var_355_10 and arg_352_1.time_ < var_355_9 + var_355_10 + arg_355_0 and not isNil(var_355_8) and arg_352_1.var_.actorSpriteComps1060 then
				for iter_355_6, iter_355_7 in pairs(arg_352_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_355_7 then
						if arg_352_1.isInRecall_ then
							iter_355_7.color = arg_352_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_355_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_352_1.var_.actorSpriteComps1060 = nil
			end

			local var_355_16 = arg_352_1.actors_["10128"].transform
			local var_355_17 = 0

			if var_355_17 < arg_352_1.time_ and arg_352_1.time_ <= var_355_17 + arg_355_0 then
				arg_352_1.var_.moveOldPos10128 = var_355_16.localPosition
				var_355_16.localScale = Vector3.New(1, 1, 1)

				arg_352_1:CheckSpriteTmpPos("10128", 3)

				local var_355_18 = var_355_16.childCount

				for iter_355_8 = 0, var_355_18 - 1 do
					local var_355_19 = var_355_16:GetChild(iter_355_8)

					if var_355_19.name == "" or not string.find(var_355_19.name, "split") then
						var_355_19.gameObject:SetActive(true)
					else
						var_355_19.gameObject:SetActive(false)
					end
				end
			end

			local var_355_20 = 0.001

			if var_355_17 <= arg_352_1.time_ and arg_352_1.time_ < var_355_17 + var_355_20 then
				local var_355_21 = (arg_352_1.time_ - var_355_17) / var_355_20
				local var_355_22 = Vector3.New(0, -347, -300)

				var_355_16.localPosition = Vector3.Lerp(arg_352_1.var_.moveOldPos10128, var_355_22, var_355_21)
			end

			if arg_352_1.time_ >= var_355_17 + var_355_20 and arg_352_1.time_ < var_355_17 + var_355_20 + arg_355_0 then
				var_355_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_355_23 = arg_352_1.actors_["1060"].transform
			local var_355_24 = 0

			if var_355_24 < arg_352_1.time_ and arg_352_1.time_ <= var_355_24 + arg_355_0 then
				arg_352_1.var_.moveOldPos1060 = var_355_23.localPosition
				var_355_23.localScale = Vector3.New(1, 1, 1)

				arg_352_1:CheckSpriteTmpPos("1060", 7)

				local var_355_25 = var_355_23.childCount

				for iter_355_9 = 0, var_355_25 - 1 do
					local var_355_26 = var_355_23:GetChild(iter_355_9)

					if var_355_26.name == "" or not string.find(var_355_26.name, "split") then
						var_355_26.gameObject:SetActive(true)
					else
						var_355_26.gameObject:SetActive(false)
					end
				end
			end

			local var_355_27 = 0.001

			if var_355_24 <= arg_352_1.time_ and arg_352_1.time_ < var_355_24 + var_355_27 then
				local var_355_28 = (arg_352_1.time_ - var_355_24) / var_355_27
				local var_355_29 = Vector3.New(0, -2000, -40)

				var_355_23.localPosition = Vector3.Lerp(arg_352_1.var_.moveOldPos1060, var_355_29, var_355_28)
			end

			if arg_352_1.time_ >= var_355_24 + var_355_27 and arg_352_1.time_ < var_355_24 + var_355_27 + arg_355_0 then
				var_355_23.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_355_30 = 0
			local var_355_31 = 0.275

			if var_355_30 < arg_352_1.time_ and arg_352_1.time_ <= var_355_30 + arg_355_0 then
				arg_352_1.talkMaxDuration = 0
				arg_352_1.dialogCg_.alpha = 1

				arg_352_1.dialog_:SetActive(true)
				SetActive(arg_352_1.leftNameGo_, true)

				local var_355_32 = arg_352_1:FormatText(StoryNameCfg[595].name)

				arg_352_1.leftNameTxt_.text = var_355_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_352_1.leftNameTxt_.transform)

				arg_352_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_352_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_352_1:RecordName(arg_352_1.leftNameTxt_.text)
				SetActive(arg_352_1.iconTrs_.gameObject, false)
				arg_352_1.callingController_:SetSelectedState("normal")

				local var_355_33 = arg_352_1:GetWordFromCfg(417161086)
				local var_355_34 = arg_352_1:FormatText(var_355_33.content)

				arg_352_1.text_.text = var_355_34

				LuaForUtil.ClearLinePrefixSymbol(arg_352_1.text_)

				local var_355_35 = 11
				local var_355_36 = utf8.len(var_355_34)
				local var_355_37 = var_355_35 <= 0 and var_355_31 or var_355_31 * (var_355_36 / var_355_35)

				if var_355_37 > 0 and var_355_31 < var_355_37 then
					arg_352_1.talkMaxDuration = var_355_37

					if var_355_37 + var_355_30 > arg_352_1.duration_ then
						arg_352_1.duration_ = var_355_37 + var_355_30
					end
				end

				arg_352_1.text_.text = var_355_34
				arg_352_1.typewritter.percent = 0

				arg_352_1.typewritter:SetDirty()
				arg_352_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161086", "story_v_out_417161.awb") ~= 0 then
					local var_355_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161086", "story_v_out_417161.awb") / 1000

					if var_355_38 + var_355_30 > arg_352_1.duration_ then
						arg_352_1.duration_ = var_355_38 + var_355_30
					end

					if var_355_33.prefab_name ~= "" and arg_352_1.actors_[var_355_33.prefab_name] ~= nil then
						local var_355_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_352_1.actors_[var_355_33.prefab_name].transform, "story_v_out_417161", "417161086", "story_v_out_417161.awb")

						arg_352_1:RecordAudio("417161086", var_355_39)
						arg_352_1:RecordAudio("417161086", var_355_39)
					else
						arg_352_1:AudioAction("play", "voice", "story_v_out_417161", "417161086", "story_v_out_417161.awb")
					end

					arg_352_1:RecordHistoryTalkVoice("story_v_out_417161", "417161086", "story_v_out_417161.awb")
				end

				arg_352_1:RecordContent(arg_352_1.text_.text)
			end

			local var_355_40 = math.max(var_355_31, arg_352_1.talkMaxDuration)

			if var_355_30 <= arg_352_1.time_ and arg_352_1.time_ < var_355_30 + var_355_40 then
				arg_352_1.typewritter.percent = (arg_352_1.time_ - var_355_30) / var_355_40

				arg_352_1.typewritter:SetDirty()
			end

			if arg_352_1.time_ >= var_355_30 + var_355_40 and arg_352_1.time_ < var_355_30 + var_355_40 + arg_355_0 then
				arg_352_1.typewritter.percent = 1

				arg_352_1.typewritter:SetDirty()
				arg_352_1:ShowNextGo(true)
			end
		end
	end,
	Play417161087 = function(arg_356_0, arg_356_1)
		arg_356_1.time_ = 0
		arg_356_1.frameCnt_ = 0
		arg_356_1.state_ = "playing"
		arg_356_1.curTalkId_ = 417161087
		arg_356_1.duration_ = 5

		SetActive(arg_356_1.tipsGo_, false)

		function arg_356_1.onSingleLineFinish_()
			arg_356_1.onSingleLineUpdate_ = nil
			arg_356_1.onSingleLineFinish_ = nil
			arg_356_1.state_ = "waiting"
		end

		function arg_356_1.playNext_(arg_358_0)
			if arg_358_0 == 1 then
				arg_356_0:Play417161088(arg_356_1)
			end
		end

		function arg_356_1.onSingleLineUpdate_(arg_359_0)
			local var_359_0 = arg_356_1.actors_["10128"]
			local var_359_1 = 0

			if var_359_1 < arg_356_1.time_ and arg_356_1.time_ <= var_359_1 + arg_359_0 and not isNil(var_359_0) and arg_356_1.var_.actorSpriteComps10128 == nil then
				arg_356_1.var_.actorSpriteComps10128 = var_359_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_359_2 = 0.2

			if var_359_1 <= arg_356_1.time_ and arg_356_1.time_ < var_359_1 + var_359_2 and not isNil(var_359_0) then
				local var_359_3 = (arg_356_1.time_ - var_359_1) / var_359_2

				if arg_356_1.var_.actorSpriteComps10128 then
					for iter_359_0, iter_359_1 in pairs(arg_356_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_359_1 then
							if arg_356_1.isInRecall_ then
								local var_359_4 = Mathf.Lerp(iter_359_1.color.r, arg_356_1.hightColor2.r, var_359_3)
								local var_359_5 = Mathf.Lerp(iter_359_1.color.g, arg_356_1.hightColor2.g, var_359_3)
								local var_359_6 = Mathf.Lerp(iter_359_1.color.b, arg_356_1.hightColor2.b, var_359_3)

								iter_359_1.color = Color.New(var_359_4, var_359_5, var_359_6)
							else
								local var_359_7 = Mathf.Lerp(iter_359_1.color.r, 0.5, var_359_3)

								iter_359_1.color = Color.New(var_359_7, var_359_7, var_359_7)
							end
						end
					end
				end
			end

			if arg_356_1.time_ >= var_359_1 + var_359_2 and arg_356_1.time_ < var_359_1 + var_359_2 + arg_359_0 and not isNil(var_359_0) and arg_356_1.var_.actorSpriteComps10128 then
				for iter_359_2, iter_359_3 in pairs(arg_356_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_359_3 then
						if arg_356_1.isInRecall_ then
							iter_359_3.color = arg_356_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_359_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_356_1.var_.actorSpriteComps10128 = nil
			end

			local var_359_8 = arg_356_1.actors_["10128"].transform
			local var_359_9 = 0

			if var_359_9 < arg_356_1.time_ and arg_356_1.time_ <= var_359_9 + arg_359_0 then
				arg_356_1.var_.moveOldPos10128 = var_359_8.localPosition
				var_359_8.localScale = Vector3.New(1, 1, 1)

				arg_356_1:CheckSpriteTmpPos("10128", 7)

				local var_359_10 = var_359_8.childCount

				for iter_359_4 = 0, var_359_10 - 1 do
					local var_359_11 = var_359_8:GetChild(iter_359_4)

					if var_359_11.name == "" or not string.find(var_359_11.name, "split") then
						var_359_11.gameObject:SetActive(true)
					else
						var_359_11.gameObject:SetActive(false)
					end
				end
			end

			local var_359_12 = 0.001

			if var_359_9 <= arg_356_1.time_ and arg_356_1.time_ < var_359_9 + var_359_12 then
				local var_359_13 = (arg_356_1.time_ - var_359_9) / var_359_12
				local var_359_14 = Vector3.New(0, -2000, -300)

				var_359_8.localPosition = Vector3.Lerp(arg_356_1.var_.moveOldPos10128, var_359_14, var_359_13)
			end

			if arg_356_1.time_ >= var_359_9 + var_359_12 and arg_356_1.time_ < var_359_9 + var_359_12 + arg_359_0 then
				var_359_8.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_359_15 = 0.766666666666667
			local var_359_16 = 1

			if var_359_15 < arg_356_1.time_ and arg_356_1.time_ <= var_359_15 + arg_359_0 then
				local var_359_17 = "play"
				local var_359_18 = "effect"

				arg_356_1:AudioAction(var_359_17, var_359_18, "se_story_side_1033", "se_story_side_1033_footstep", "")
			end

			local var_359_19 = 0
			local var_359_20 = 0.95

			if var_359_19 < arg_356_1.time_ and arg_356_1.time_ <= var_359_19 + arg_359_0 then
				arg_356_1.talkMaxDuration = 0
				arg_356_1.dialogCg_.alpha = 1

				arg_356_1.dialog_:SetActive(true)
				SetActive(arg_356_1.leftNameGo_, false)

				arg_356_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_356_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_356_1:RecordName(arg_356_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_356_1.iconTrs_.gameObject, false)
				arg_356_1.callingController_:SetSelectedState("normal")

				local var_359_21 = arg_356_1:GetWordFromCfg(417161087)
				local var_359_22 = arg_356_1:FormatText(var_359_21.content)

				arg_356_1.text_.text = var_359_22

				LuaForUtil.ClearLinePrefixSymbol(arg_356_1.text_)

				local var_359_23 = 38
				local var_359_24 = utf8.len(var_359_22)
				local var_359_25 = var_359_23 <= 0 and var_359_20 or var_359_20 * (var_359_24 / var_359_23)

				if var_359_25 > 0 and var_359_20 < var_359_25 then
					arg_356_1.talkMaxDuration = var_359_25

					if var_359_25 + var_359_19 > arg_356_1.duration_ then
						arg_356_1.duration_ = var_359_25 + var_359_19
					end
				end

				arg_356_1.text_.text = var_359_22
				arg_356_1.typewritter.percent = 0

				arg_356_1.typewritter:SetDirty()
				arg_356_1:ShowNextGo(false)
				arg_356_1:RecordContent(arg_356_1.text_.text)
			end

			local var_359_26 = math.max(var_359_20, arg_356_1.talkMaxDuration)

			if var_359_19 <= arg_356_1.time_ and arg_356_1.time_ < var_359_19 + var_359_26 then
				arg_356_1.typewritter.percent = (arg_356_1.time_ - var_359_19) / var_359_26

				arg_356_1.typewritter:SetDirty()
			end

			if arg_356_1.time_ >= var_359_19 + var_359_26 and arg_356_1.time_ < var_359_19 + var_359_26 + arg_359_0 then
				arg_356_1.typewritter.percent = 1

				arg_356_1.typewritter:SetDirty()
				arg_356_1:ShowNextGo(true)
			end
		end
	end,
	Play417161088 = function(arg_360_0, arg_360_1)
		arg_360_1.time_ = 0
		arg_360_1.frameCnt_ = 0
		arg_360_1.state_ = "playing"
		arg_360_1.curTalkId_ = 417161088
		arg_360_1.duration_ = 4.13

		SetActive(arg_360_1.tipsGo_, false)

		function arg_360_1.onSingleLineFinish_()
			arg_360_1.onSingleLineUpdate_ = nil
			arg_360_1.onSingleLineFinish_ = nil
			arg_360_1.state_ = "waiting"
		end

		function arg_360_1.playNext_(arg_362_0)
			if arg_362_0 == 1 then
				arg_360_0:Play417161089(arg_360_1)
			end
		end

		function arg_360_1.onSingleLineUpdate_(arg_363_0)
			local var_363_0 = 2

			if var_363_0 < arg_360_1.time_ and arg_360_1.time_ <= var_363_0 + arg_363_0 then
				local var_363_1 = manager.ui.mainCamera.transform.localPosition
				local var_363_2 = Vector3.New(0, 0, 10) + Vector3.New(var_363_1.x, var_363_1.y, 0)
				local var_363_3 = arg_360_1.bgs_.STblack

				var_363_3.transform.localPosition = var_363_2
				var_363_3.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_363_4 = var_363_3:GetComponent("SpriteRenderer")

				if var_363_4 and var_363_4.sprite then
					local var_363_5 = (var_363_3.transform.localPosition - var_363_1).z
					local var_363_6 = manager.ui.mainCameraCom_
					local var_363_7 = 2 * var_363_5 * Mathf.Tan(var_363_6.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_363_8 = var_363_7 * var_363_6.aspect
					local var_363_9 = var_363_4.sprite.bounds.size.x
					local var_363_10 = var_363_4.sprite.bounds.size.y
					local var_363_11 = var_363_8 / var_363_9
					local var_363_12 = var_363_7 / var_363_10
					local var_363_13 = var_363_12 < var_363_11 and var_363_11 or var_363_12

					var_363_3.transform.localScale = Vector3.New(var_363_13, var_363_13, 0)
				end

				for iter_363_0, iter_363_1 in pairs(arg_360_1.bgs_) do
					if iter_363_0 ~= "STblack" then
						iter_363_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_363_14 = 0

			if var_363_14 < arg_360_1.time_ and arg_360_1.time_ <= var_363_14 + arg_363_0 then
				arg_360_1.mask_.enabled = true
				arg_360_1.mask_.raycastTarget = true

				arg_360_1:SetGaussion(false)
			end

			local var_363_15 = 2

			if var_363_14 <= arg_360_1.time_ and arg_360_1.time_ < var_363_14 + var_363_15 then
				local var_363_16 = (arg_360_1.time_ - var_363_14) / var_363_15
				local var_363_17 = Color.New(0, 0, 0)

				var_363_17.a = Mathf.Lerp(0, 1, var_363_16)
				arg_360_1.mask_.color = var_363_17
			end

			if arg_360_1.time_ >= var_363_14 + var_363_15 and arg_360_1.time_ < var_363_14 + var_363_15 + arg_363_0 then
				local var_363_18 = Color.New(0, 0, 0)

				var_363_18.a = 1
				arg_360_1.mask_.color = var_363_18
			end

			local var_363_19 = 2

			if var_363_19 < arg_360_1.time_ and arg_360_1.time_ <= var_363_19 + arg_363_0 then
				arg_360_1.mask_.enabled = true
				arg_360_1.mask_.raycastTarget = true

				arg_360_1:SetGaussion(false)
			end

			local var_363_20 = 2

			if var_363_19 <= arg_360_1.time_ and arg_360_1.time_ < var_363_19 + var_363_20 then
				local var_363_21 = (arg_360_1.time_ - var_363_19) / var_363_20
				local var_363_22 = Color.New(0, 0, 0)

				var_363_22.a = Mathf.Lerp(1, 0, var_363_21)
				arg_360_1.mask_.color = var_363_22
			end

			if arg_360_1.time_ >= var_363_19 + var_363_20 and arg_360_1.time_ < var_363_19 + var_363_20 + arg_363_0 then
				local var_363_23 = Color.New(0, 0, 0)
				local var_363_24 = 0

				arg_360_1.mask_.enabled = false
				var_363_23.a = var_363_24
				arg_360_1.mask_.color = var_363_23
			end

			local var_363_25 = 2

			if var_363_25 < arg_360_1.time_ and arg_360_1.time_ <= var_363_25 + arg_363_0 then
				arg_360_1.fswbg_:SetActive(true)
				arg_360_1.dialog_:SetActive(false)

				arg_360_1.fswtw_.percent = 0

				local var_363_26 = arg_360_1:GetWordFromCfg(417161088)
				local var_363_27 = arg_360_1:FormatText(var_363_26.content)

				arg_360_1.fswt_.text = var_363_27

				LuaForUtil.ClearLinePrefixSymbol(arg_360_1.fswt_)

				arg_360_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_360_1.fswtw_:SetDirty()

				arg_360_1.typewritterCharCountI18N = 0

				arg_360_1:ShowNextGo(false)
			end

			local var_363_28 = 3.8

			if var_363_28 < arg_360_1.time_ and arg_360_1.time_ <= var_363_28 + arg_363_0 then
				arg_360_1.var_.oldValueTypewriter = arg_360_1.fswtw_.percent

				arg_360_1:ShowNextGo(false)
			end

			local var_363_29 = 5
			local var_363_30 = 0.333333333333333
			local var_363_31 = arg_360_1:GetWordFromCfg(417161088)
			local var_363_32 = arg_360_1:FormatText(var_363_31.content)
			local var_363_33, var_363_34 = arg_360_1:GetPercentByPara(var_363_32, 1)

			if var_363_28 < arg_360_1.time_ and arg_360_1.time_ <= var_363_28 + arg_363_0 then
				arg_360_1.talkMaxDuration = 0

				local var_363_35 = var_363_29 <= 0 and var_363_30 or var_363_30 * ((var_363_34 - arg_360_1.typewritterCharCountI18N) / var_363_29)

				if var_363_35 > 0 and var_363_30 < var_363_35 then
					arg_360_1.talkMaxDuration = var_363_35

					if var_363_35 + var_363_28 > arg_360_1.duration_ then
						arg_360_1.duration_ = var_363_35 + var_363_28
					end
				end
			end

			local var_363_36 = 0.333333333333333
			local var_363_37 = math.max(var_363_36, arg_360_1.talkMaxDuration)

			if var_363_28 <= arg_360_1.time_ and arg_360_1.time_ < var_363_28 + var_363_37 then
				local var_363_38 = (arg_360_1.time_ - var_363_28) / var_363_37

				arg_360_1.fswtw_.percent = Mathf.Lerp(arg_360_1.var_.oldValueTypewriter, var_363_33, var_363_38)
				arg_360_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_360_1.fswtw_:SetDirty()
			end

			if arg_360_1.time_ >= var_363_28 + var_363_37 and arg_360_1.time_ < var_363_28 + var_363_37 + arg_363_0 then
				arg_360_1.fswtw_.percent = var_363_33

				arg_360_1.fswtw_:SetDirty()
				arg_360_1:ShowNextGo(true)

				arg_360_1.typewritterCharCountI18N = var_363_34
			end

			local var_363_39 = 2

			if var_363_39 < arg_360_1.time_ and arg_360_1.time_ <= var_363_39 + arg_363_0 then
				local var_363_40 = arg_360_1.fswbg_.transform:Find("textbox/adapt/content") or arg_360_1.fswbg_.transform:Find("textbox/content")
				local var_363_41 = var_363_40:GetComponent("Text")
				local var_363_42 = var_363_40:GetComponent("RectTransform")

				var_363_41.alignment = UnityEngine.TextAnchor.MiddleCenter
				var_363_42.offsetMin = Vector2.New(0, 0)
				var_363_42.offsetMax = Vector2.New(0, 0)
			end

			local var_363_43 = 0
			local var_363_44 = 0.2

			if var_363_43 < arg_360_1.time_ and arg_360_1.time_ <= var_363_43 + arg_363_0 then
				local var_363_45 = "play"
				local var_363_46 = "music"

				arg_360_1:AudioAction(var_363_45, var_363_46, "ui_battle", "ui_battle_stopbgm", "")

				local var_363_47 = ""
				local var_363_48 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_363_48 ~= "" then
					if arg_360_1.bgmTxt_.text ~= var_363_48 and arg_360_1.bgmTxt_.text ~= "" then
						if arg_360_1.bgmTxt2_.text ~= "" then
							arg_360_1.bgmTxt_.text = arg_360_1.bgmTxt2_.text
						end

						arg_360_1.bgmTxt2_.text = var_363_48

						arg_360_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_360_1.bgmTxt_.text = var_363_48
					end

					if arg_360_1.bgmTimer then
						arg_360_1.bgmTimer:Stop()

						arg_360_1.bgmTimer = nil
					end

					if arg_360_1.settingData.show_music_name == 1 then
						arg_360_1.musicController:SetSelectedState("show")
						arg_360_1.musicAnimator_:Play("open", 0, 0)

						if arg_360_1.settingData.music_time ~= 0 then
							arg_360_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_360_1.settingData.music_time), function()
								if arg_360_1 == nil or isNil(arg_360_1.bgmTxt_) then
									return
								end

								arg_360_1.musicController:SetSelectedState("hide")
								arg_360_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_363_49 = 1.3
			local var_363_50 = 1

			if var_363_49 < arg_360_1.time_ and arg_360_1.time_ <= var_363_49 + arg_363_0 then
				local var_363_51 = "stop"
				local var_363_52 = "music"

				arg_360_1:AudioAction(var_363_51, var_363_52, "bgm_story_office", "bgm_story_office", "bgm_story_office.awb")

				local var_363_53 = ""
				local var_363_54 = manager.audio:GetAudioName("bgm_story_office", "bgm_story_office")

				if var_363_54 ~= "" then
					if arg_360_1.bgmTxt_.text ~= var_363_54 and arg_360_1.bgmTxt_.text ~= "" then
						if arg_360_1.bgmTxt2_.text ~= "" then
							arg_360_1.bgmTxt_.text = arg_360_1.bgmTxt2_.text
						end

						arg_360_1.bgmTxt2_.text = var_363_54

						arg_360_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_360_1.bgmTxt_.text = var_363_54
					end

					if arg_360_1.bgmTimer then
						arg_360_1.bgmTimer:Stop()

						arg_360_1.bgmTimer = nil
					end

					if arg_360_1.settingData.show_music_name == 1 then
						arg_360_1.musicController:SetSelectedState("show")
						arg_360_1.musicAnimator_:Play("open", 0, 0)

						if arg_360_1.settingData.music_time ~= 0 then
							arg_360_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_360_1.settingData.music_time), function()
								if arg_360_1 == nil or isNil(arg_360_1.bgmTxt_) then
									return
								end

								arg_360_1.musicController:SetSelectedState("hide")
								arg_360_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end
		end
	end,
	Play417161089 = function(arg_366_0, arg_366_1)
		arg_366_1.time_ = 0
		arg_366_1.frameCnt_ = 0
		arg_366_1.state_ = "playing"
		arg_366_1.curTalkId_ = 417161089
		arg_366_1.duration_ = 7

		SetActive(arg_366_1.tipsGo_, false)

		function arg_366_1.onSingleLineFinish_()
			arg_366_1.onSingleLineUpdate_ = nil
			arg_366_1.onSingleLineFinish_ = nil
			arg_366_1.state_ = "waiting"
		end

		function arg_366_1.playNext_(arg_368_0)
			if arg_368_0 == 1 then
				arg_366_0:Play417161090(arg_366_1)
			end
		end

		function arg_366_1.onSingleLineUpdate_(arg_369_0)
			local var_369_0 = "ST03a"

			if arg_366_1.bgs_[var_369_0] == nil then
				local var_369_1 = Object.Instantiate(arg_366_1.paintGo_)

				var_369_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_369_0)
				var_369_1.name = var_369_0
				var_369_1.transform.parent = arg_366_1.stage_.transform
				var_369_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_366_1.bgs_[var_369_0] = var_369_1
			end

			local var_369_2 = 0

			if var_369_2 < arg_366_1.time_ and arg_366_1.time_ <= var_369_2 + arg_369_0 then
				local var_369_3 = manager.ui.mainCamera.transform.localPosition
				local var_369_4 = Vector3.New(0, 0, 10) + Vector3.New(var_369_3.x, var_369_3.y, 0)
				local var_369_5 = arg_366_1.bgs_.ST03a

				var_369_5.transform.localPosition = var_369_4
				var_369_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_369_6 = var_369_5:GetComponent("SpriteRenderer")

				if var_369_6 and var_369_6.sprite then
					local var_369_7 = (var_369_5.transform.localPosition - var_369_3).z
					local var_369_8 = manager.ui.mainCameraCom_
					local var_369_9 = 2 * var_369_7 * Mathf.Tan(var_369_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_369_10 = var_369_9 * var_369_8.aspect
					local var_369_11 = var_369_6.sprite.bounds.size.x
					local var_369_12 = var_369_6.sprite.bounds.size.y
					local var_369_13 = var_369_10 / var_369_11
					local var_369_14 = var_369_9 / var_369_12
					local var_369_15 = var_369_14 < var_369_13 and var_369_13 or var_369_14

					var_369_5.transform.localScale = Vector3.New(var_369_15, var_369_15, 0)
				end

				for iter_369_0, iter_369_1 in pairs(arg_366_1.bgs_) do
					if iter_369_0 ~= "ST03a" then
						iter_369_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_369_16 = 0

			if var_369_16 < arg_366_1.time_ and arg_366_1.time_ <= var_369_16 + arg_369_0 then
				arg_366_1.mask_.enabled = true
				arg_366_1.mask_.raycastTarget = true

				arg_366_1:SetGaussion(false)
			end

			local var_369_17 = 2

			if var_369_16 <= arg_366_1.time_ and arg_366_1.time_ < var_369_16 + var_369_17 then
				local var_369_18 = (arg_366_1.time_ - var_369_16) / var_369_17
				local var_369_19 = Color.New(0, 0, 0)

				var_369_19.a = Mathf.Lerp(1, 0, var_369_18)
				arg_366_1.mask_.color = var_369_19
			end

			if arg_366_1.time_ >= var_369_16 + var_369_17 and arg_366_1.time_ < var_369_16 + var_369_17 + arg_369_0 then
				local var_369_20 = Color.New(0, 0, 0)
				local var_369_21 = 0

				arg_366_1.mask_.enabled = false
				var_369_20.a = var_369_21
				arg_366_1.mask_.color = var_369_20
			end

			local var_369_22 = manager.ui.mainCamera.transform
			local var_369_23 = 0

			if var_369_23 < arg_366_1.time_ and arg_366_1.time_ <= var_369_23 + arg_369_0 then
				local var_369_24 = arg_366_1.var_.effect1036

				if not var_369_24 then
					var_369_24 = Object.Instantiate(Asset.Load("Effect/Scene/fx_uistory_rain_heavy_ui"))
					var_369_24.name = "1036"
					arg_366_1.var_.effect1036 = var_369_24
				end

				local var_369_25 = var_369_22:Find("")

				if var_369_25 then
					var_369_24.transform.parent = var_369_25
				else
					var_369_24.transform.parent = var_369_22
				end

				var_369_24.transform.localPosition = Vector3.New(0, 0, 0)
				var_369_24.transform.localRotation = Quaternion.Euler(0, 0, 0)

				local var_369_26 = manager.ui.mainCameraCom_
				local var_369_27 = Mathf.Tan(12.5 * Mathf.Deg2Rad) / Mathf.Tan(var_369_26.fieldOfView * 0.5 * Mathf.Deg2Rad)
				local var_369_28 = var_369_24.transform:GetComponentsInChildren(typeof(Transform), true):ToTable()
				local var_369_29 = 15
				local var_369_30 = 2 * var_369_29 * Mathf.Tan(var_369_26.fieldOfView * 0.5 * Mathf.Deg2Rad) * var_369_26.aspect
				local var_369_31 = 1
				local var_369_32 = 1.7777777777777777

				if var_369_32 < var_369_26.aspect then
					var_369_31 = var_369_30 / (2 * var_369_29 * Mathf.Tan(15 * Mathf.Deg2Rad) * var_369_32)
				end

				for iter_369_2, iter_369_3 in ipairs(var_369_28) do
					local var_369_33 = iter_369_3.transform.localScale

					iter_369_3.transform.localScale = Vector3.New(var_369_33.x / var_369_27 * var_369_31, var_369_33.y / var_369_27, var_369_33.z)
				end
			end

			local var_369_34 = 0

			if var_369_34 < arg_366_1.time_ and arg_366_1.time_ <= var_369_34 + arg_369_0 then
				arg_366_1.fswbg_:SetActive(false)
				arg_366_1.dialog_:SetActive(false)
				arg_366_1:ShowNextGo(false)
			end

			local var_369_35 = 3.03333333333333
			local var_369_36 = 1

			if var_369_35 < arg_366_1.time_ and arg_366_1.time_ <= var_369_35 + arg_369_0 then
				local var_369_37 = "play"
				local var_369_38 = "effect"

				arg_366_1:AudioAction(var_369_37, var_369_38, "se_story_side_1093", "se_story_1093_message_get", "")
			end

			local var_369_39 = 0
			local var_369_40 = 0.2

			if var_369_39 < arg_366_1.time_ and arg_366_1.time_ <= var_369_39 + arg_369_0 then
				local var_369_41 = "play"
				local var_369_42 = "music"

				arg_366_1:AudioAction(var_369_41, var_369_42, "ui_battle", "ui_battle_stopbgm", "")

				local var_369_43 = ""
				local var_369_44 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_369_44 ~= "" then
					if arg_366_1.bgmTxt_.text ~= var_369_44 and arg_366_1.bgmTxt_.text ~= "" then
						if arg_366_1.bgmTxt2_.text ~= "" then
							arg_366_1.bgmTxt_.text = arg_366_1.bgmTxt2_.text
						end

						arg_366_1.bgmTxt2_.text = var_369_44

						arg_366_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_366_1.bgmTxt_.text = var_369_44
					end

					if arg_366_1.bgmTimer then
						arg_366_1.bgmTimer:Stop()

						arg_366_1.bgmTimer = nil
					end

					if arg_366_1.settingData.show_music_name == 1 then
						arg_366_1.musicController:SetSelectedState("show")
						arg_366_1.musicAnimator_:Play("open", 0, 0)

						if arg_366_1.settingData.music_time ~= 0 then
							arg_366_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_366_1.settingData.music_time), function()
								if arg_366_1 == nil or isNil(arg_366_1.bgmTxt_) then
									return
								end

								arg_366_1.musicController:SetSelectedState("hide")
								arg_366_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_369_45 = 0.3
			local var_369_46 = 1

			if var_369_45 < arg_366_1.time_ and arg_366_1.time_ <= var_369_45 + arg_369_0 then
				local var_369_47 = "play"
				local var_369_48 = "music"

				arg_366_1:AudioAction(var_369_47, var_369_48, "bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily.awb")

				local var_369_49 = ""
				local var_369_50 = manager.audio:GetAudioName("bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily")

				if var_369_50 ~= "" then
					if arg_366_1.bgmTxt_.text ~= var_369_50 and arg_366_1.bgmTxt_.text ~= "" then
						if arg_366_1.bgmTxt2_.text ~= "" then
							arg_366_1.bgmTxt_.text = arg_366_1.bgmTxt2_.text
						end

						arg_366_1.bgmTxt2_.text = var_369_50

						arg_366_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_366_1.bgmTxt_.text = var_369_50
					end

					if arg_366_1.bgmTimer then
						arg_366_1.bgmTimer:Stop()

						arg_366_1.bgmTimer = nil
					end

					if arg_366_1.settingData.show_music_name == 1 then
						arg_366_1.musicController:SetSelectedState("show")
						arg_366_1.musicAnimator_:Play("open", 0, 0)

						if arg_366_1.settingData.music_time ~= 0 then
							arg_366_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_366_1.settingData.music_time), function()
								if arg_366_1 == nil or isNil(arg_366_1.bgmTxt_) then
									return
								end

								arg_366_1.musicController:SetSelectedState("hide")
								arg_366_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_369_51 = 2
			local var_369_52 = 1.6

			if var_369_51 < arg_366_1.time_ and arg_366_1.time_ <= var_369_51 + arg_369_0 then
				arg_366_1.talkMaxDuration = 0
				arg_366_1.dialogCg_.alpha = 1

				arg_366_1.dialog_:SetActive(true)
				SetActive(arg_366_1.leftNameGo_, false)

				arg_366_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_366_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_366_1:RecordName(arg_366_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_366_1.iconTrs_.gameObject, false)
				arg_366_1.callingController_:SetSelectedState("normal")

				local var_369_53 = arg_366_1:GetWordFromCfg(417161089)
				local var_369_54 = arg_366_1:FormatText(var_369_53.content)

				arg_366_1.text_.text = var_369_54

				LuaForUtil.ClearLinePrefixSymbol(arg_366_1.text_)

				local var_369_55 = 36
				local var_369_56 = utf8.len(var_369_54)
				local var_369_57 = var_369_55 <= 0 and var_369_52 or var_369_52 * (var_369_56 / var_369_55)

				if var_369_57 > 0 and var_369_52 < var_369_57 then
					arg_366_1.talkMaxDuration = var_369_57

					if var_369_57 + var_369_51 > arg_366_1.duration_ then
						arg_366_1.duration_ = var_369_57 + var_369_51
					end
				end

				arg_366_1.text_.text = var_369_54
				arg_366_1.typewritter.percent = 0

				arg_366_1.typewritter:SetDirty()
				arg_366_1:ShowNextGo(false)
				arg_366_1:RecordContent(arg_366_1.text_.text)
			end

			local var_369_58 = math.max(var_369_52, arg_366_1.talkMaxDuration)

			if var_369_51 <= arg_366_1.time_ and arg_366_1.time_ < var_369_51 + var_369_58 then
				arg_366_1.typewritter.percent = (arg_366_1.time_ - var_369_51) / var_369_58

				arg_366_1.typewritter:SetDirty()
			end

			if arg_366_1.time_ >= var_369_51 + var_369_58 and arg_366_1.time_ < var_369_51 + var_369_58 + arg_369_0 then
				arg_366_1.typewritter.percent = 1

				arg_366_1.typewritter:SetDirty()
				arg_366_1:ShowNextGo(true)
			end
		end
	end,
	Play417161090 = function(arg_372_0, arg_372_1)
		arg_372_1.time_ = 0
		arg_372_1.frameCnt_ = 0
		arg_372_1.state_ = "playing"
		arg_372_1.curTalkId_ = 417161090
		arg_372_1.duration_ = 5

		SetActive(arg_372_1.tipsGo_, false)

		function arg_372_1.onSingleLineFinish_()
			arg_372_1.onSingleLineUpdate_ = nil
			arg_372_1.onSingleLineFinish_ = nil
			arg_372_1.state_ = "waiting"
		end

		function arg_372_1.playNext_(arg_374_0)
			if arg_374_0 == 1 then
				arg_372_0:Play417161091(arg_372_1)
			end
		end

		function arg_372_1.onSingleLineUpdate_(arg_375_0)
			local var_375_0 = 0
			local var_375_1 = 1.6

			if var_375_0 < arg_372_1.time_ and arg_372_1.time_ <= var_375_0 + arg_375_0 then
				arg_372_1.talkMaxDuration = 0
				arg_372_1.dialogCg_.alpha = 1

				arg_372_1.dialog_:SetActive(true)
				SetActive(arg_372_1.leftNameGo_, false)

				arg_372_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_372_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_372_1:RecordName(arg_372_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_372_1.iconTrs_.gameObject, false)
				arg_372_1.callingController_:SetSelectedState("normal")

				local var_375_2 = arg_372_1:GetWordFromCfg(417161090)
				local var_375_3 = arg_372_1:FormatText(var_375_2.content)

				arg_372_1.text_.text = var_375_3

				LuaForUtil.ClearLinePrefixSymbol(arg_372_1.text_)

				local var_375_4 = 38
				local var_375_5 = utf8.len(var_375_3)
				local var_375_6 = var_375_4 <= 0 and var_375_1 or var_375_1 * (var_375_5 / var_375_4)

				if var_375_6 > 0 and var_375_1 < var_375_6 then
					arg_372_1.talkMaxDuration = var_375_6

					if var_375_6 + var_375_0 > arg_372_1.duration_ then
						arg_372_1.duration_ = var_375_6 + var_375_0
					end
				end

				arg_372_1.text_.text = var_375_3
				arg_372_1.typewritter.percent = 0

				arg_372_1.typewritter:SetDirty()
				arg_372_1:ShowNextGo(false)
				arg_372_1:RecordContent(arg_372_1.text_.text)
			end

			local var_375_7 = math.max(var_375_1, arg_372_1.talkMaxDuration)

			if var_375_0 <= arg_372_1.time_ and arg_372_1.time_ < var_375_0 + var_375_7 then
				arg_372_1.typewritter.percent = (arg_372_1.time_ - var_375_0) / var_375_7

				arg_372_1.typewritter:SetDirty()
			end

			if arg_372_1.time_ >= var_375_0 + var_375_7 and arg_372_1.time_ < var_375_0 + var_375_7 + arg_375_0 then
				arg_372_1.typewritter.percent = 1

				arg_372_1.typewritter:SetDirty()
				arg_372_1:ShowNextGo(true)
			end
		end
	end,
	Play417161091 = function(arg_376_0, arg_376_1)
		arg_376_1.time_ = 0
		arg_376_1.frameCnt_ = 0
		arg_376_1.state_ = "playing"
		arg_376_1.curTalkId_ = 417161091
		arg_376_1.duration_ = 5

		SetActive(arg_376_1.tipsGo_, false)

		function arg_376_1.onSingleLineFinish_()
			arg_376_1.onSingleLineUpdate_ = nil
			arg_376_1.onSingleLineFinish_ = nil
			arg_376_1.state_ = "waiting"
		end

		function arg_376_1.playNext_(arg_378_0)
			if arg_378_0 == 1 then
				arg_376_0:Play417161092(arg_376_1)
			end
		end

		function arg_376_1.onSingleLineUpdate_(arg_379_0)
			local var_379_0 = 1.6
			local var_379_1 = 1

			if var_379_0 < arg_376_1.time_ and arg_376_1.time_ <= var_379_0 + arg_379_0 then
				local var_379_2 = "play"
				local var_379_3 = "effect"

				arg_376_1:AudioAction(var_379_2, var_379_3, "se_story_1311", "se_story_1311_clap01", "")
			end

			local var_379_4 = 0
			local var_379_5 = 1.6

			if var_379_4 < arg_376_1.time_ and arg_376_1.time_ <= var_379_4 + arg_379_0 then
				arg_376_1.talkMaxDuration = 0
				arg_376_1.dialogCg_.alpha = 1

				arg_376_1.dialog_:SetActive(true)
				SetActive(arg_376_1.leftNameGo_, false)

				arg_376_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_376_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_376_1:RecordName(arg_376_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_376_1.iconTrs_.gameObject, false)
				arg_376_1.callingController_:SetSelectedState("normal")

				local var_379_6 = arg_376_1:GetWordFromCfg(417161091)
				local var_379_7 = arg_376_1:FormatText(var_379_6.content)

				arg_376_1.text_.text = var_379_7

				LuaForUtil.ClearLinePrefixSymbol(arg_376_1.text_)

				local var_379_8 = 64
				local var_379_9 = utf8.len(var_379_7)
				local var_379_10 = var_379_8 <= 0 and var_379_5 or var_379_5 * (var_379_9 / var_379_8)

				if var_379_10 > 0 and var_379_5 < var_379_10 then
					arg_376_1.talkMaxDuration = var_379_10

					if var_379_10 + var_379_4 > arg_376_1.duration_ then
						arg_376_1.duration_ = var_379_10 + var_379_4
					end
				end

				arg_376_1.text_.text = var_379_7
				arg_376_1.typewritter.percent = 0

				arg_376_1.typewritter:SetDirty()
				arg_376_1:ShowNextGo(false)
				arg_376_1:RecordContent(arg_376_1.text_.text)
			end

			local var_379_11 = math.max(var_379_5, arg_376_1.talkMaxDuration)

			if var_379_4 <= arg_376_1.time_ and arg_376_1.time_ < var_379_4 + var_379_11 then
				arg_376_1.typewritter.percent = (arg_376_1.time_ - var_379_4) / var_379_11

				arg_376_1.typewritter:SetDirty()
			end

			if arg_376_1.time_ >= var_379_4 + var_379_11 and arg_376_1.time_ < var_379_4 + var_379_11 + arg_379_0 then
				arg_376_1.typewritter.percent = 1

				arg_376_1.typewritter:SetDirty()
				arg_376_1:ShowNextGo(true)
			end
		end
	end,
	Play417161092 = function(arg_380_0, arg_380_1)
		arg_380_1.time_ = 0
		arg_380_1.frameCnt_ = 0
		arg_380_1.state_ = "playing"
		arg_380_1.curTalkId_ = 417161092
		arg_380_1.duration_ = 2.17

		SetActive(arg_380_1.tipsGo_, false)

		function arg_380_1.onSingleLineFinish_()
			arg_380_1.onSingleLineUpdate_ = nil
			arg_380_1.onSingleLineFinish_ = nil
			arg_380_1.state_ = "waiting"
		end

		function arg_380_1.playNext_(arg_382_0)
			if arg_382_0 == 1 then
				arg_380_0:Play417161093(arg_380_1)
			end
		end

		function arg_380_1.onSingleLineUpdate_(arg_383_0)
			local var_383_0 = arg_380_1.actors_["1060"]
			local var_383_1 = 0

			if var_383_1 < arg_380_1.time_ and arg_380_1.time_ <= var_383_1 + arg_383_0 and not isNil(var_383_0) and arg_380_1.var_.actorSpriteComps1060 == nil then
				arg_380_1.var_.actorSpriteComps1060 = var_383_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_383_2 = 0.2

			if var_383_1 <= arg_380_1.time_ and arg_380_1.time_ < var_383_1 + var_383_2 and not isNil(var_383_0) then
				local var_383_3 = (arg_380_1.time_ - var_383_1) / var_383_2

				if arg_380_1.var_.actorSpriteComps1060 then
					for iter_383_0, iter_383_1 in pairs(arg_380_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_383_1 then
							if arg_380_1.isInRecall_ then
								local var_383_4 = Mathf.Lerp(iter_383_1.color.r, arg_380_1.hightColor1.r, var_383_3)
								local var_383_5 = Mathf.Lerp(iter_383_1.color.g, arg_380_1.hightColor1.g, var_383_3)
								local var_383_6 = Mathf.Lerp(iter_383_1.color.b, arg_380_1.hightColor1.b, var_383_3)

								iter_383_1.color = Color.New(var_383_4, var_383_5, var_383_6)
							else
								local var_383_7 = Mathf.Lerp(iter_383_1.color.r, 1, var_383_3)

								iter_383_1.color = Color.New(var_383_7, var_383_7, var_383_7)
							end
						end
					end
				end
			end

			if arg_380_1.time_ >= var_383_1 + var_383_2 and arg_380_1.time_ < var_383_1 + var_383_2 + arg_383_0 and not isNil(var_383_0) and arg_380_1.var_.actorSpriteComps1060 then
				for iter_383_2, iter_383_3 in pairs(arg_380_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_383_3 then
						if arg_380_1.isInRecall_ then
							iter_383_3.color = arg_380_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_383_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_380_1.var_.actorSpriteComps1060 = nil
			end

			local var_383_8 = arg_380_1.actors_["1060"].transform
			local var_383_9 = 0

			if var_383_9 < arg_380_1.time_ and arg_380_1.time_ <= var_383_9 + arg_383_0 then
				arg_380_1.var_.moveOldPos1060 = var_383_8.localPosition
				var_383_8.localScale = Vector3.New(1, 1, 1)

				arg_380_1:CheckSpriteTmpPos("1060", 3)

				local var_383_10 = var_383_8.childCount

				for iter_383_4 = 0, var_383_10 - 1 do
					local var_383_11 = var_383_8:GetChild(iter_383_4)

					if var_383_11.name == "split_2" or not string.find(var_383_11.name, "split") then
						var_383_11.gameObject:SetActive(true)
					else
						var_383_11.gameObject:SetActive(false)
					end
				end
			end

			local var_383_12 = 0.001

			if var_383_9 <= arg_380_1.time_ and arg_380_1.time_ < var_383_9 + var_383_12 then
				local var_383_13 = (arg_380_1.time_ - var_383_9) / var_383_12
				local var_383_14 = Vector3.New(33.4, -430.8, 6.9)

				var_383_8.localPosition = Vector3.Lerp(arg_380_1.var_.moveOldPos1060, var_383_14, var_383_13)
			end

			if arg_380_1.time_ >= var_383_9 + var_383_12 and arg_380_1.time_ < var_383_9 + var_383_12 + arg_383_0 then
				var_383_8.localPosition = Vector3.New(33.4, -430.8, 6.9)
			end

			local var_383_15 = manager.ui.mainCamera.transform
			local var_383_16 = 0

			if var_383_16 < arg_380_1.time_ and arg_380_1.time_ <= var_383_16 + arg_383_0 then
				local var_383_17 = arg_380_1.var_.effect1036

				if var_383_17 then
					Object.Destroy(var_383_17)

					arg_380_1.var_.effect1036 = nil
				end
			end

			local var_383_18 = 0
			local var_383_19 = 0.2

			if var_383_18 < arg_380_1.time_ and arg_380_1.time_ <= var_383_18 + arg_383_0 then
				arg_380_1.talkMaxDuration = 0
				arg_380_1.dialogCg_.alpha = 1

				arg_380_1.dialog_:SetActive(true)
				SetActive(arg_380_1.leftNameGo_, true)

				local var_383_20 = arg_380_1:FormatText(StoryNameCfg[584].name)

				arg_380_1.leftNameTxt_.text = var_383_20

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_380_1.leftNameTxt_.transform)

				arg_380_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_380_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_380_1:RecordName(arg_380_1.leftNameTxt_.text)
				SetActive(arg_380_1.iconTrs_.gameObject, false)
				arg_380_1.callingController_:SetSelectedState("normal")

				local var_383_21 = arg_380_1:GetWordFromCfg(417161092)
				local var_383_22 = arg_380_1:FormatText(var_383_21.content)

				arg_380_1.text_.text = var_383_22

				LuaForUtil.ClearLinePrefixSymbol(arg_380_1.text_)

				local var_383_23 = 8
				local var_383_24 = utf8.len(var_383_22)
				local var_383_25 = var_383_23 <= 0 and var_383_19 or var_383_19 * (var_383_24 / var_383_23)

				if var_383_25 > 0 and var_383_19 < var_383_25 then
					arg_380_1.talkMaxDuration = var_383_25

					if var_383_25 + var_383_18 > arg_380_1.duration_ then
						arg_380_1.duration_ = var_383_25 + var_383_18
					end
				end

				arg_380_1.text_.text = var_383_22
				arg_380_1.typewritter.percent = 0

				arg_380_1.typewritter:SetDirty()
				arg_380_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161092", "story_v_out_417161.awb") ~= 0 then
					local var_383_26 = manager.audio:GetVoiceLength("story_v_out_417161", "417161092", "story_v_out_417161.awb") / 1000

					if var_383_26 + var_383_18 > arg_380_1.duration_ then
						arg_380_1.duration_ = var_383_26 + var_383_18
					end

					if var_383_21.prefab_name ~= "" and arg_380_1.actors_[var_383_21.prefab_name] ~= nil then
						local var_383_27 = LuaForUtil.PlayVoiceWithCriLipsync(arg_380_1.actors_[var_383_21.prefab_name].transform, "story_v_out_417161", "417161092", "story_v_out_417161.awb")

						arg_380_1:RecordAudio("417161092", var_383_27)
						arg_380_1:RecordAudio("417161092", var_383_27)
					else
						arg_380_1:AudioAction("play", "voice", "story_v_out_417161", "417161092", "story_v_out_417161.awb")
					end

					arg_380_1:RecordHistoryTalkVoice("story_v_out_417161", "417161092", "story_v_out_417161.awb")
				end

				arg_380_1:RecordContent(arg_380_1.text_.text)
			end

			local var_383_28 = math.max(var_383_19, arg_380_1.talkMaxDuration)

			if var_383_18 <= arg_380_1.time_ and arg_380_1.time_ < var_383_18 + var_383_28 then
				arg_380_1.typewritter.percent = (arg_380_1.time_ - var_383_18) / var_383_28

				arg_380_1.typewritter:SetDirty()
			end

			if arg_380_1.time_ >= var_383_18 + var_383_28 and arg_380_1.time_ < var_383_18 + var_383_28 + arg_383_0 then
				arg_380_1.typewritter.percent = 1

				arg_380_1.typewritter:SetDirty()
				arg_380_1:ShowNextGo(true)
			end
		end
	end,
	Play417161093 = function(arg_384_0, arg_384_1)
		arg_384_1.time_ = 0
		arg_384_1.frameCnt_ = 0
		arg_384_1.state_ = "playing"
		arg_384_1.curTalkId_ = 417161093
		arg_384_1.duration_ = 1.43

		SetActive(arg_384_1.tipsGo_, false)

		function arg_384_1.onSingleLineFinish_()
			arg_384_1.onSingleLineUpdate_ = nil
			arg_384_1.onSingleLineFinish_ = nil
			arg_384_1.state_ = "waiting"
		end

		function arg_384_1.playNext_(arg_386_0)
			if arg_386_0 == 1 then
				arg_384_0:Play417161094(arg_384_1)
			end
		end

		function arg_384_1.onSingleLineUpdate_(arg_387_0)
			local var_387_0 = arg_384_1.actors_["10128"]
			local var_387_1 = 0

			if var_387_1 < arg_384_1.time_ and arg_384_1.time_ <= var_387_1 + arg_387_0 and not isNil(var_387_0) and arg_384_1.var_.actorSpriteComps10128 == nil then
				arg_384_1.var_.actorSpriteComps10128 = var_387_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_387_2 = 0.2

			if var_387_1 <= arg_384_1.time_ and arg_384_1.time_ < var_387_1 + var_387_2 and not isNil(var_387_0) then
				local var_387_3 = (arg_384_1.time_ - var_387_1) / var_387_2

				if arg_384_1.var_.actorSpriteComps10128 then
					for iter_387_0, iter_387_1 in pairs(arg_384_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_387_1 then
							if arg_384_1.isInRecall_ then
								local var_387_4 = Mathf.Lerp(iter_387_1.color.r, arg_384_1.hightColor1.r, var_387_3)
								local var_387_5 = Mathf.Lerp(iter_387_1.color.g, arg_384_1.hightColor1.g, var_387_3)
								local var_387_6 = Mathf.Lerp(iter_387_1.color.b, arg_384_1.hightColor1.b, var_387_3)

								iter_387_1.color = Color.New(var_387_4, var_387_5, var_387_6)
							else
								local var_387_7 = Mathf.Lerp(iter_387_1.color.r, 1, var_387_3)

								iter_387_1.color = Color.New(var_387_7, var_387_7, var_387_7)
							end
						end
					end
				end
			end

			if arg_384_1.time_ >= var_387_1 + var_387_2 and arg_384_1.time_ < var_387_1 + var_387_2 + arg_387_0 and not isNil(var_387_0) and arg_384_1.var_.actorSpriteComps10128 then
				for iter_387_2, iter_387_3 in pairs(arg_384_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_387_3 then
						if arg_384_1.isInRecall_ then
							iter_387_3.color = arg_384_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_387_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_384_1.var_.actorSpriteComps10128 = nil
			end

			local var_387_8 = arg_384_1.actors_["1060"]
			local var_387_9 = 0

			if var_387_9 < arg_384_1.time_ and arg_384_1.time_ <= var_387_9 + arg_387_0 and not isNil(var_387_8) and arg_384_1.var_.actorSpriteComps1060 == nil then
				arg_384_1.var_.actorSpriteComps1060 = var_387_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_387_10 = 0.2

			if var_387_9 <= arg_384_1.time_ and arg_384_1.time_ < var_387_9 + var_387_10 and not isNil(var_387_8) then
				local var_387_11 = (arg_384_1.time_ - var_387_9) / var_387_10

				if arg_384_1.var_.actorSpriteComps1060 then
					for iter_387_4, iter_387_5 in pairs(arg_384_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_387_5 then
							if arg_384_1.isInRecall_ then
								local var_387_12 = Mathf.Lerp(iter_387_5.color.r, arg_384_1.hightColor2.r, var_387_11)
								local var_387_13 = Mathf.Lerp(iter_387_5.color.g, arg_384_1.hightColor2.g, var_387_11)
								local var_387_14 = Mathf.Lerp(iter_387_5.color.b, arg_384_1.hightColor2.b, var_387_11)

								iter_387_5.color = Color.New(var_387_12, var_387_13, var_387_14)
							else
								local var_387_15 = Mathf.Lerp(iter_387_5.color.r, 0.5, var_387_11)

								iter_387_5.color = Color.New(var_387_15, var_387_15, var_387_15)
							end
						end
					end
				end
			end

			if arg_384_1.time_ >= var_387_9 + var_387_10 and arg_384_1.time_ < var_387_9 + var_387_10 + arg_387_0 and not isNil(var_387_8) and arg_384_1.var_.actorSpriteComps1060 then
				for iter_387_6, iter_387_7 in pairs(arg_384_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_387_7 then
						if arg_384_1.isInRecall_ then
							iter_387_7.color = arg_384_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_387_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_384_1.var_.actorSpriteComps1060 = nil
			end

			local var_387_16 = arg_384_1.actors_["10128"].transform
			local var_387_17 = 0

			if var_387_17 < arg_384_1.time_ and arg_384_1.time_ <= var_387_17 + arg_387_0 then
				arg_384_1.var_.moveOldPos10128 = var_387_16.localPosition
				var_387_16.localScale = Vector3.New(1, 1, 1)

				arg_384_1:CheckSpriteTmpPos("10128", 3)

				local var_387_18 = var_387_16.childCount

				for iter_387_8 = 0, var_387_18 - 1 do
					local var_387_19 = var_387_16:GetChild(iter_387_8)

					if var_387_19.name == "" or not string.find(var_387_19.name, "split") then
						var_387_19.gameObject:SetActive(true)
					else
						var_387_19.gameObject:SetActive(false)
					end
				end
			end

			local var_387_20 = 0.001

			if var_387_17 <= arg_384_1.time_ and arg_384_1.time_ < var_387_17 + var_387_20 then
				local var_387_21 = (arg_384_1.time_ - var_387_17) / var_387_20
				local var_387_22 = Vector3.New(0, -347, -300)

				var_387_16.localPosition = Vector3.Lerp(arg_384_1.var_.moveOldPos10128, var_387_22, var_387_21)
			end

			if arg_384_1.time_ >= var_387_17 + var_387_20 and arg_384_1.time_ < var_387_17 + var_387_20 + arg_387_0 then
				var_387_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_387_23 = arg_384_1.actors_["1060"].transform
			local var_387_24 = 0

			if var_387_24 < arg_384_1.time_ and arg_384_1.time_ <= var_387_24 + arg_387_0 then
				arg_384_1.var_.moveOldPos1060 = var_387_23.localPosition
				var_387_23.localScale = Vector3.New(1, 1, 1)

				arg_384_1:CheckSpriteTmpPos("1060", 7)

				local var_387_25 = var_387_23.childCount

				for iter_387_9 = 0, var_387_25 - 1 do
					local var_387_26 = var_387_23:GetChild(iter_387_9)

					if var_387_26.name == "" or not string.find(var_387_26.name, "split") then
						var_387_26.gameObject:SetActive(true)
					else
						var_387_26.gameObject:SetActive(false)
					end
				end
			end

			local var_387_27 = 0.001

			if var_387_24 <= arg_384_1.time_ and arg_384_1.time_ < var_387_24 + var_387_27 then
				local var_387_28 = (arg_384_1.time_ - var_387_24) / var_387_27
				local var_387_29 = Vector3.New(0, -2000, -40)

				var_387_23.localPosition = Vector3.Lerp(arg_384_1.var_.moveOldPos1060, var_387_29, var_387_28)
			end

			if arg_384_1.time_ >= var_387_24 + var_387_27 and arg_384_1.time_ < var_387_24 + var_387_27 + arg_387_0 then
				var_387_23.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_387_30 = 0
			local var_387_31 = 0.1

			if var_387_30 < arg_384_1.time_ and arg_384_1.time_ <= var_387_30 + arg_387_0 then
				arg_384_1.talkMaxDuration = 0
				arg_384_1.dialogCg_.alpha = 1

				arg_384_1.dialog_:SetActive(true)
				SetActive(arg_384_1.leftNameGo_, true)

				local var_387_32 = arg_384_1:FormatText(StoryNameCfg[595].name)

				arg_384_1.leftNameTxt_.text = var_387_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_384_1.leftNameTxt_.transform)

				arg_384_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_384_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_384_1:RecordName(arg_384_1.leftNameTxt_.text)
				SetActive(arg_384_1.iconTrs_.gameObject, false)
				arg_384_1.callingController_:SetSelectedState("normal")

				local var_387_33 = arg_384_1:GetWordFromCfg(417161093)
				local var_387_34 = arg_384_1:FormatText(var_387_33.content)

				arg_384_1.text_.text = var_387_34

				LuaForUtil.ClearLinePrefixSymbol(arg_384_1.text_)

				local var_387_35 = 4
				local var_387_36 = utf8.len(var_387_34)
				local var_387_37 = var_387_35 <= 0 and var_387_31 or var_387_31 * (var_387_36 / var_387_35)

				if var_387_37 > 0 and var_387_31 < var_387_37 then
					arg_384_1.talkMaxDuration = var_387_37

					if var_387_37 + var_387_30 > arg_384_1.duration_ then
						arg_384_1.duration_ = var_387_37 + var_387_30
					end
				end

				arg_384_1.text_.text = var_387_34
				arg_384_1.typewritter.percent = 0

				arg_384_1.typewritter:SetDirty()
				arg_384_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161093", "story_v_out_417161.awb") ~= 0 then
					local var_387_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161093", "story_v_out_417161.awb") / 1000

					if var_387_38 + var_387_30 > arg_384_1.duration_ then
						arg_384_1.duration_ = var_387_38 + var_387_30
					end

					if var_387_33.prefab_name ~= "" and arg_384_1.actors_[var_387_33.prefab_name] ~= nil then
						local var_387_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_384_1.actors_[var_387_33.prefab_name].transform, "story_v_out_417161", "417161093", "story_v_out_417161.awb")

						arg_384_1:RecordAudio("417161093", var_387_39)
						arg_384_1:RecordAudio("417161093", var_387_39)
					else
						arg_384_1:AudioAction("play", "voice", "story_v_out_417161", "417161093", "story_v_out_417161.awb")
					end

					arg_384_1:RecordHistoryTalkVoice("story_v_out_417161", "417161093", "story_v_out_417161.awb")
				end

				arg_384_1:RecordContent(arg_384_1.text_.text)
			end

			local var_387_40 = math.max(var_387_31, arg_384_1.talkMaxDuration)

			if var_387_30 <= arg_384_1.time_ and arg_384_1.time_ < var_387_30 + var_387_40 then
				arg_384_1.typewritter.percent = (arg_384_1.time_ - var_387_30) / var_387_40

				arg_384_1.typewritter:SetDirty()
			end

			if arg_384_1.time_ >= var_387_30 + var_387_40 and arg_384_1.time_ < var_387_30 + var_387_40 + arg_387_0 then
				arg_384_1.typewritter.percent = 1

				arg_384_1.typewritter:SetDirty()
				arg_384_1:ShowNextGo(true)
			end
		end
	end,
	Play417161094 = function(arg_388_0, arg_388_1)
		arg_388_1.time_ = 0
		arg_388_1.frameCnt_ = 0
		arg_388_1.state_ = "playing"
		arg_388_1.curTalkId_ = 417161094
		arg_388_1.duration_ = 5.03

		SetActive(arg_388_1.tipsGo_, false)

		function arg_388_1.onSingleLineFinish_()
			arg_388_1.onSingleLineUpdate_ = nil
			arg_388_1.onSingleLineFinish_ = nil
			arg_388_1.state_ = "waiting"
		end

		function arg_388_1.playNext_(arg_390_0)
			if arg_390_0 == 1 then
				arg_388_0:Play417161095(arg_388_1)
			end
		end

		function arg_388_1.onSingleLineUpdate_(arg_391_0)
			local var_391_0 = arg_388_1.actors_["1060"]
			local var_391_1 = 0

			if var_391_1 < arg_388_1.time_ and arg_388_1.time_ <= var_391_1 + arg_391_0 and not isNil(var_391_0) and arg_388_1.var_.actorSpriteComps1060 == nil then
				arg_388_1.var_.actorSpriteComps1060 = var_391_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_391_2 = 0.2

			if var_391_1 <= arg_388_1.time_ and arg_388_1.time_ < var_391_1 + var_391_2 and not isNil(var_391_0) then
				local var_391_3 = (arg_388_1.time_ - var_391_1) / var_391_2

				if arg_388_1.var_.actorSpriteComps1060 then
					for iter_391_0, iter_391_1 in pairs(arg_388_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_391_1 then
							if arg_388_1.isInRecall_ then
								local var_391_4 = Mathf.Lerp(iter_391_1.color.r, arg_388_1.hightColor1.r, var_391_3)
								local var_391_5 = Mathf.Lerp(iter_391_1.color.g, arg_388_1.hightColor1.g, var_391_3)
								local var_391_6 = Mathf.Lerp(iter_391_1.color.b, arg_388_1.hightColor1.b, var_391_3)

								iter_391_1.color = Color.New(var_391_4, var_391_5, var_391_6)
							else
								local var_391_7 = Mathf.Lerp(iter_391_1.color.r, 1, var_391_3)

								iter_391_1.color = Color.New(var_391_7, var_391_7, var_391_7)
							end
						end
					end
				end
			end

			if arg_388_1.time_ >= var_391_1 + var_391_2 and arg_388_1.time_ < var_391_1 + var_391_2 + arg_391_0 and not isNil(var_391_0) and arg_388_1.var_.actorSpriteComps1060 then
				for iter_391_2, iter_391_3 in pairs(arg_388_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_391_3 then
						if arg_388_1.isInRecall_ then
							iter_391_3.color = arg_388_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_391_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_388_1.var_.actorSpriteComps1060 = nil
			end

			local var_391_8 = arg_388_1.actors_["10128"]
			local var_391_9 = 0

			if var_391_9 < arg_388_1.time_ and arg_388_1.time_ <= var_391_9 + arg_391_0 and not isNil(var_391_8) and arg_388_1.var_.actorSpriteComps10128 == nil then
				arg_388_1.var_.actorSpriteComps10128 = var_391_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_391_10 = 0.2

			if var_391_9 <= arg_388_1.time_ and arg_388_1.time_ < var_391_9 + var_391_10 and not isNil(var_391_8) then
				local var_391_11 = (arg_388_1.time_ - var_391_9) / var_391_10

				if arg_388_1.var_.actorSpriteComps10128 then
					for iter_391_4, iter_391_5 in pairs(arg_388_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_391_5 then
							if arg_388_1.isInRecall_ then
								local var_391_12 = Mathf.Lerp(iter_391_5.color.r, arg_388_1.hightColor2.r, var_391_11)
								local var_391_13 = Mathf.Lerp(iter_391_5.color.g, arg_388_1.hightColor2.g, var_391_11)
								local var_391_14 = Mathf.Lerp(iter_391_5.color.b, arg_388_1.hightColor2.b, var_391_11)

								iter_391_5.color = Color.New(var_391_12, var_391_13, var_391_14)
							else
								local var_391_15 = Mathf.Lerp(iter_391_5.color.r, 0.5, var_391_11)

								iter_391_5.color = Color.New(var_391_15, var_391_15, var_391_15)
							end
						end
					end
				end
			end

			if arg_388_1.time_ >= var_391_9 + var_391_10 and arg_388_1.time_ < var_391_9 + var_391_10 + arg_391_0 and not isNil(var_391_8) and arg_388_1.var_.actorSpriteComps10128 then
				for iter_391_6, iter_391_7 in pairs(arg_388_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_391_7 then
						if arg_388_1.isInRecall_ then
							iter_391_7.color = arg_388_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_391_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_388_1.var_.actorSpriteComps10128 = nil
			end

			local var_391_16 = arg_388_1.actors_["10128"].transform
			local var_391_17 = 0

			if var_391_17 < arg_388_1.time_ and arg_388_1.time_ <= var_391_17 + arg_391_0 then
				arg_388_1.var_.moveOldPos10128 = var_391_16.localPosition
				var_391_16.localScale = Vector3.New(1, 1, 1)

				arg_388_1:CheckSpriteTmpPos("10128", 2)

				local var_391_18 = var_391_16.childCount

				for iter_391_8 = 0, var_391_18 - 1 do
					local var_391_19 = var_391_16:GetChild(iter_391_8)

					if var_391_19.name == "" or not string.find(var_391_19.name, "split") then
						var_391_19.gameObject:SetActive(true)
					else
						var_391_19.gameObject:SetActive(false)
					end
				end
			end

			local var_391_20 = 0.001

			if var_391_17 <= arg_388_1.time_ and arg_388_1.time_ < var_391_17 + var_391_20 then
				local var_391_21 = (arg_388_1.time_ - var_391_17) / var_391_20
				local var_391_22 = Vector3.New(-390, -347, -300)

				var_391_16.localPosition = Vector3.Lerp(arg_388_1.var_.moveOldPos10128, var_391_22, var_391_21)
			end

			if arg_388_1.time_ >= var_391_17 + var_391_20 and arg_388_1.time_ < var_391_17 + var_391_20 + arg_391_0 then
				var_391_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_391_23 = arg_388_1.actors_["1060"].transform
			local var_391_24 = 0

			if var_391_24 < arg_388_1.time_ and arg_388_1.time_ <= var_391_24 + arg_391_0 then
				arg_388_1.var_.moveOldPos1060 = var_391_23.localPosition
				var_391_23.localScale = Vector3.New(1, 1, 1)

				arg_388_1:CheckSpriteTmpPos("1060", 4)

				local var_391_25 = var_391_23.childCount

				for iter_391_9 = 0, var_391_25 - 1 do
					local var_391_26 = var_391_23:GetChild(iter_391_9)

					if var_391_26.name == "" or not string.find(var_391_26.name, "split") then
						var_391_26.gameObject:SetActive(true)
					else
						var_391_26.gameObject:SetActive(false)
					end
				end
			end

			local var_391_27 = 0.001

			if var_391_24 <= arg_388_1.time_ and arg_388_1.time_ < var_391_24 + var_391_27 then
				local var_391_28 = (arg_388_1.time_ - var_391_24) / var_391_27
				local var_391_29 = Vector3.New(420.9, -430.8, 6.9)

				var_391_23.localPosition = Vector3.Lerp(arg_388_1.var_.moveOldPos1060, var_391_29, var_391_28)
			end

			if arg_388_1.time_ >= var_391_24 + var_391_27 and arg_388_1.time_ < var_391_24 + var_391_27 + arg_391_0 then
				var_391_23.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_391_30 = 0
			local var_391_31 = 0.55

			if var_391_30 < arg_388_1.time_ and arg_388_1.time_ <= var_391_30 + arg_391_0 then
				arg_388_1.talkMaxDuration = 0
				arg_388_1.dialogCg_.alpha = 1

				arg_388_1.dialog_:SetActive(true)
				SetActive(arg_388_1.leftNameGo_, true)

				local var_391_32 = arg_388_1:FormatText(StoryNameCfg[584].name)

				arg_388_1.leftNameTxt_.text = var_391_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_388_1.leftNameTxt_.transform)

				arg_388_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_388_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_388_1:RecordName(arg_388_1.leftNameTxt_.text)
				SetActive(arg_388_1.iconTrs_.gameObject, false)
				arg_388_1.callingController_:SetSelectedState("normal")

				local var_391_33 = arg_388_1:GetWordFromCfg(417161094)
				local var_391_34 = arg_388_1:FormatText(var_391_33.content)

				arg_388_1.text_.text = var_391_34

				LuaForUtil.ClearLinePrefixSymbol(arg_388_1.text_)

				local var_391_35 = 22
				local var_391_36 = utf8.len(var_391_34)
				local var_391_37 = var_391_35 <= 0 and var_391_31 or var_391_31 * (var_391_36 / var_391_35)

				if var_391_37 > 0 and var_391_31 < var_391_37 then
					arg_388_1.talkMaxDuration = var_391_37

					if var_391_37 + var_391_30 > arg_388_1.duration_ then
						arg_388_1.duration_ = var_391_37 + var_391_30
					end
				end

				arg_388_1.text_.text = var_391_34
				arg_388_1.typewritter.percent = 0

				arg_388_1.typewritter:SetDirty()
				arg_388_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161094", "story_v_out_417161.awb") ~= 0 then
					local var_391_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161094", "story_v_out_417161.awb") / 1000

					if var_391_38 + var_391_30 > arg_388_1.duration_ then
						arg_388_1.duration_ = var_391_38 + var_391_30
					end

					if var_391_33.prefab_name ~= "" and arg_388_1.actors_[var_391_33.prefab_name] ~= nil then
						local var_391_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_388_1.actors_[var_391_33.prefab_name].transform, "story_v_out_417161", "417161094", "story_v_out_417161.awb")

						arg_388_1:RecordAudio("417161094", var_391_39)
						arg_388_1:RecordAudio("417161094", var_391_39)
					else
						arg_388_1:AudioAction("play", "voice", "story_v_out_417161", "417161094", "story_v_out_417161.awb")
					end

					arg_388_1:RecordHistoryTalkVoice("story_v_out_417161", "417161094", "story_v_out_417161.awb")
				end

				arg_388_1:RecordContent(arg_388_1.text_.text)
			end

			local var_391_40 = math.max(var_391_31, arg_388_1.talkMaxDuration)

			if var_391_30 <= arg_388_1.time_ and arg_388_1.time_ < var_391_30 + var_391_40 then
				arg_388_1.typewritter.percent = (arg_388_1.time_ - var_391_30) / var_391_40

				arg_388_1.typewritter:SetDirty()
			end

			if arg_388_1.time_ >= var_391_30 + var_391_40 and arg_388_1.time_ < var_391_30 + var_391_40 + arg_391_0 then
				arg_388_1.typewritter.percent = 1

				arg_388_1.typewritter:SetDirty()
				arg_388_1:ShowNextGo(true)
			end
		end
	end,
	Play417161095 = function(arg_392_0, arg_392_1)
		arg_392_1.time_ = 0
		arg_392_1.frameCnt_ = 0
		arg_392_1.state_ = "playing"
		arg_392_1.curTalkId_ = 417161095
		arg_392_1.duration_ = 5.3

		SetActive(arg_392_1.tipsGo_, false)

		function arg_392_1.onSingleLineFinish_()
			arg_392_1.onSingleLineUpdate_ = nil
			arg_392_1.onSingleLineFinish_ = nil
			arg_392_1.state_ = "waiting"
		end

		function arg_392_1.playNext_(arg_394_0)
			if arg_394_0 == 1 then
				arg_392_0:Play417161096(arg_392_1)
			end
		end

		function arg_392_1.onSingleLineUpdate_(arg_395_0)
			local var_395_0 = arg_392_1.actors_["10128"]
			local var_395_1 = 0

			if var_395_1 < arg_392_1.time_ and arg_392_1.time_ <= var_395_1 + arg_395_0 and not isNil(var_395_0) and arg_392_1.var_.actorSpriteComps10128 == nil then
				arg_392_1.var_.actorSpriteComps10128 = var_395_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_395_2 = 0.2

			if var_395_1 <= arg_392_1.time_ and arg_392_1.time_ < var_395_1 + var_395_2 and not isNil(var_395_0) then
				local var_395_3 = (arg_392_1.time_ - var_395_1) / var_395_2

				if arg_392_1.var_.actorSpriteComps10128 then
					for iter_395_0, iter_395_1 in pairs(arg_392_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_395_1 then
							if arg_392_1.isInRecall_ then
								local var_395_4 = Mathf.Lerp(iter_395_1.color.r, arg_392_1.hightColor1.r, var_395_3)
								local var_395_5 = Mathf.Lerp(iter_395_1.color.g, arg_392_1.hightColor1.g, var_395_3)
								local var_395_6 = Mathf.Lerp(iter_395_1.color.b, arg_392_1.hightColor1.b, var_395_3)

								iter_395_1.color = Color.New(var_395_4, var_395_5, var_395_6)
							else
								local var_395_7 = Mathf.Lerp(iter_395_1.color.r, 1, var_395_3)

								iter_395_1.color = Color.New(var_395_7, var_395_7, var_395_7)
							end
						end
					end
				end
			end

			if arg_392_1.time_ >= var_395_1 + var_395_2 and arg_392_1.time_ < var_395_1 + var_395_2 + arg_395_0 and not isNil(var_395_0) and arg_392_1.var_.actorSpriteComps10128 then
				for iter_395_2, iter_395_3 in pairs(arg_392_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_395_3 then
						if arg_392_1.isInRecall_ then
							iter_395_3.color = arg_392_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_395_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_392_1.var_.actorSpriteComps10128 = nil
			end

			local var_395_8 = arg_392_1.actors_["1060"]
			local var_395_9 = 0

			if var_395_9 < arg_392_1.time_ and arg_392_1.time_ <= var_395_9 + arg_395_0 and not isNil(var_395_8) and arg_392_1.var_.actorSpriteComps1060 == nil then
				arg_392_1.var_.actorSpriteComps1060 = var_395_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_395_10 = 0.2

			if var_395_9 <= arg_392_1.time_ and arg_392_1.time_ < var_395_9 + var_395_10 and not isNil(var_395_8) then
				local var_395_11 = (arg_392_1.time_ - var_395_9) / var_395_10

				if arg_392_1.var_.actorSpriteComps1060 then
					for iter_395_4, iter_395_5 in pairs(arg_392_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_395_5 then
							if arg_392_1.isInRecall_ then
								local var_395_12 = Mathf.Lerp(iter_395_5.color.r, arg_392_1.hightColor2.r, var_395_11)
								local var_395_13 = Mathf.Lerp(iter_395_5.color.g, arg_392_1.hightColor2.g, var_395_11)
								local var_395_14 = Mathf.Lerp(iter_395_5.color.b, arg_392_1.hightColor2.b, var_395_11)

								iter_395_5.color = Color.New(var_395_12, var_395_13, var_395_14)
							else
								local var_395_15 = Mathf.Lerp(iter_395_5.color.r, 0.5, var_395_11)

								iter_395_5.color = Color.New(var_395_15, var_395_15, var_395_15)
							end
						end
					end
				end
			end

			if arg_392_1.time_ >= var_395_9 + var_395_10 and arg_392_1.time_ < var_395_9 + var_395_10 + arg_395_0 and not isNil(var_395_8) and arg_392_1.var_.actorSpriteComps1060 then
				for iter_395_6, iter_395_7 in pairs(arg_392_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_395_7 then
						if arg_392_1.isInRecall_ then
							iter_395_7.color = arg_392_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_395_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_392_1.var_.actorSpriteComps1060 = nil
			end

			local var_395_16 = 0
			local var_395_17 = 0.775

			if var_395_16 < arg_392_1.time_ and arg_392_1.time_ <= var_395_16 + arg_395_0 then
				arg_392_1.talkMaxDuration = 0
				arg_392_1.dialogCg_.alpha = 1

				arg_392_1.dialog_:SetActive(true)
				SetActive(arg_392_1.leftNameGo_, true)

				local var_395_18 = arg_392_1:FormatText(StoryNameCfg[595].name)

				arg_392_1.leftNameTxt_.text = var_395_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_392_1.leftNameTxt_.transform)

				arg_392_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_392_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_392_1:RecordName(arg_392_1.leftNameTxt_.text)
				SetActive(arg_392_1.iconTrs_.gameObject, false)
				arg_392_1.callingController_:SetSelectedState("normal")

				local var_395_19 = arg_392_1:GetWordFromCfg(417161095)
				local var_395_20 = arg_392_1:FormatText(var_395_19.content)

				arg_392_1.text_.text = var_395_20

				LuaForUtil.ClearLinePrefixSymbol(arg_392_1.text_)

				local var_395_21 = 31
				local var_395_22 = utf8.len(var_395_20)
				local var_395_23 = var_395_21 <= 0 and var_395_17 or var_395_17 * (var_395_22 / var_395_21)

				if var_395_23 > 0 and var_395_17 < var_395_23 then
					arg_392_1.talkMaxDuration = var_395_23

					if var_395_23 + var_395_16 > arg_392_1.duration_ then
						arg_392_1.duration_ = var_395_23 + var_395_16
					end
				end

				arg_392_1.text_.text = var_395_20
				arg_392_1.typewritter.percent = 0

				arg_392_1.typewritter:SetDirty()
				arg_392_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161095", "story_v_out_417161.awb") ~= 0 then
					local var_395_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161095", "story_v_out_417161.awb") / 1000

					if var_395_24 + var_395_16 > arg_392_1.duration_ then
						arg_392_1.duration_ = var_395_24 + var_395_16
					end

					if var_395_19.prefab_name ~= "" and arg_392_1.actors_[var_395_19.prefab_name] ~= nil then
						local var_395_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_392_1.actors_[var_395_19.prefab_name].transform, "story_v_out_417161", "417161095", "story_v_out_417161.awb")

						arg_392_1:RecordAudio("417161095", var_395_25)
						arg_392_1:RecordAudio("417161095", var_395_25)
					else
						arg_392_1:AudioAction("play", "voice", "story_v_out_417161", "417161095", "story_v_out_417161.awb")
					end

					arg_392_1:RecordHistoryTalkVoice("story_v_out_417161", "417161095", "story_v_out_417161.awb")
				end

				arg_392_1:RecordContent(arg_392_1.text_.text)
			end

			local var_395_26 = math.max(var_395_17, arg_392_1.talkMaxDuration)

			if var_395_16 <= arg_392_1.time_ and arg_392_1.time_ < var_395_16 + var_395_26 then
				arg_392_1.typewritter.percent = (arg_392_1.time_ - var_395_16) / var_395_26

				arg_392_1.typewritter:SetDirty()
			end

			if arg_392_1.time_ >= var_395_16 + var_395_26 and arg_392_1.time_ < var_395_16 + var_395_26 + arg_395_0 then
				arg_392_1.typewritter.percent = 1

				arg_392_1.typewritter:SetDirty()
				arg_392_1:ShowNextGo(true)
			end
		end
	end,
	Play417161096 = function(arg_396_0, arg_396_1)
		arg_396_1.time_ = 0
		arg_396_1.frameCnt_ = 0
		arg_396_1.state_ = "playing"
		arg_396_1.curTalkId_ = 417161096
		arg_396_1.duration_ = 8.7

		SetActive(arg_396_1.tipsGo_, false)

		function arg_396_1.onSingleLineFinish_()
			arg_396_1.onSingleLineUpdate_ = nil
			arg_396_1.onSingleLineFinish_ = nil
			arg_396_1.state_ = "waiting"
		end

		function arg_396_1.playNext_(arg_398_0)
			if arg_398_0 == 1 then
				arg_396_0:Play417161097(arg_396_1)
			end
		end

		function arg_396_1.onSingleLineUpdate_(arg_399_0)
			local var_399_0 = arg_396_1.actors_["1060"]
			local var_399_1 = 0

			if var_399_1 < arg_396_1.time_ and arg_396_1.time_ <= var_399_1 + arg_399_0 and not isNil(var_399_0) and arg_396_1.var_.actorSpriteComps1060 == nil then
				arg_396_1.var_.actorSpriteComps1060 = var_399_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_399_2 = 0.2

			if var_399_1 <= arg_396_1.time_ and arg_396_1.time_ < var_399_1 + var_399_2 and not isNil(var_399_0) then
				local var_399_3 = (arg_396_1.time_ - var_399_1) / var_399_2

				if arg_396_1.var_.actorSpriteComps1060 then
					for iter_399_0, iter_399_1 in pairs(arg_396_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_399_1 then
							if arg_396_1.isInRecall_ then
								local var_399_4 = Mathf.Lerp(iter_399_1.color.r, arg_396_1.hightColor1.r, var_399_3)
								local var_399_5 = Mathf.Lerp(iter_399_1.color.g, arg_396_1.hightColor1.g, var_399_3)
								local var_399_6 = Mathf.Lerp(iter_399_1.color.b, arg_396_1.hightColor1.b, var_399_3)

								iter_399_1.color = Color.New(var_399_4, var_399_5, var_399_6)
							else
								local var_399_7 = Mathf.Lerp(iter_399_1.color.r, 1, var_399_3)

								iter_399_1.color = Color.New(var_399_7, var_399_7, var_399_7)
							end
						end
					end
				end
			end

			if arg_396_1.time_ >= var_399_1 + var_399_2 and arg_396_1.time_ < var_399_1 + var_399_2 + arg_399_0 and not isNil(var_399_0) and arg_396_1.var_.actorSpriteComps1060 then
				for iter_399_2, iter_399_3 in pairs(arg_396_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_399_3 then
						if arg_396_1.isInRecall_ then
							iter_399_3.color = arg_396_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_399_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_396_1.var_.actorSpriteComps1060 = nil
			end

			local var_399_8 = arg_396_1.actors_["10128"]
			local var_399_9 = 0

			if var_399_9 < arg_396_1.time_ and arg_396_1.time_ <= var_399_9 + arg_399_0 and not isNil(var_399_8) and arg_396_1.var_.actorSpriteComps10128 == nil then
				arg_396_1.var_.actorSpriteComps10128 = var_399_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_399_10 = 0.2

			if var_399_9 <= arg_396_1.time_ and arg_396_1.time_ < var_399_9 + var_399_10 and not isNil(var_399_8) then
				local var_399_11 = (arg_396_1.time_ - var_399_9) / var_399_10

				if arg_396_1.var_.actorSpriteComps10128 then
					for iter_399_4, iter_399_5 in pairs(arg_396_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_399_5 then
							if arg_396_1.isInRecall_ then
								local var_399_12 = Mathf.Lerp(iter_399_5.color.r, arg_396_1.hightColor2.r, var_399_11)
								local var_399_13 = Mathf.Lerp(iter_399_5.color.g, arg_396_1.hightColor2.g, var_399_11)
								local var_399_14 = Mathf.Lerp(iter_399_5.color.b, arg_396_1.hightColor2.b, var_399_11)

								iter_399_5.color = Color.New(var_399_12, var_399_13, var_399_14)
							else
								local var_399_15 = Mathf.Lerp(iter_399_5.color.r, 0.5, var_399_11)

								iter_399_5.color = Color.New(var_399_15, var_399_15, var_399_15)
							end
						end
					end
				end
			end

			if arg_396_1.time_ >= var_399_9 + var_399_10 and arg_396_1.time_ < var_399_9 + var_399_10 + arg_399_0 and not isNil(var_399_8) and arg_396_1.var_.actorSpriteComps10128 then
				for iter_399_6, iter_399_7 in pairs(arg_396_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_399_7 then
						if arg_396_1.isInRecall_ then
							iter_399_7.color = arg_396_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_399_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_396_1.var_.actorSpriteComps10128 = nil
			end

			local var_399_16 = 0
			local var_399_17 = 0.975

			if var_399_16 < arg_396_1.time_ and arg_396_1.time_ <= var_399_16 + arg_399_0 then
				arg_396_1.talkMaxDuration = 0
				arg_396_1.dialogCg_.alpha = 1

				arg_396_1.dialog_:SetActive(true)
				SetActive(arg_396_1.leftNameGo_, true)

				local var_399_18 = arg_396_1:FormatText(StoryNameCfg[584].name)

				arg_396_1.leftNameTxt_.text = var_399_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_396_1.leftNameTxt_.transform)

				arg_396_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_396_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_396_1:RecordName(arg_396_1.leftNameTxt_.text)
				SetActive(arg_396_1.iconTrs_.gameObject, false)
				arg_396_1.callingController_:SetSelectedState("normal")

				local var_399_19 = arg_396_1:GetWordFromCfg(417161096)
				local var_399_20 = arg_396_1:FormatText(var_399_19.content)

				arg_396_1.text_.text = var_399_20

				LuaForUtil.ClearLinePrefixSymbol(arg_396_1.text_)

				local var_399_21 = 39
				local var_399_22 = utf8.len(var_399_20)
				local var_399_23 = var_399_21 <= 0 and var_399_17 or var_399_17 * (var_399_22 / var_399_21)

				if var_399_23 > 0 and var_399_17 < var_399_23 then
					arg_396_1.talkMaxDuration = var_399_23

					if var_399_23 + var_399_16 > arg_396_1.duration_ then
						arg_396_1.duration_ = var_399_23 + var_399_16
					end
				end

				arg_396_1.text_.text = var_399_20
				arg_396_1.typewritter.percent = 0

				arg_396_1.typewritter:SetDirty()
				arg_396_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161096", "story_v_out_417161.awb") ~= 0 then
					local var_399_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161096", "story_v_out_417161.awb") / 1000

					if var_399_24 + var_399_16 > arg_396_1.duration_ then
						arg_396_1.duration_ = var_399_24 + var_399_16
					end

					if var_399_19.prefab_name ~= "" and arg_396_1.actors_[var_399_19.prefab_name] ~= nil then
						local var_399_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_396_1.actors_[var_399_19.prefab_name].transform, "story_v_out_417161", "417161096", "story_v_out_417161.awb")

						arg_396_1:RecordAudio("417161096", var_399_25)
						arg_396_1:RecordAudio("417161096", var_399_25)
					else
						arg_396_1:AudioAction("play", "voice", "story_v_out_417161", "417161096", "story_v_out_417161.awb")
					end

					arg_396_1:RecordHistoryTalkVoice("story_v_out_417161", "417161096", "story_v_out_417161.awb")
				end

				arg_396_1:RecordContent(arg_396_1.text_.text)
			end

			local var_399_26 = math.max(var_399_17, arg_396_1.talkMaxDuration)

			if var_399_16 <= arg_396_1.time_ and arg_396_1.time_ < var_399_16 + var_399_26 then
				arg_396_1.typewritter.percent = (arg_396_1.time_ - var_399_16) / var_399_26

				arg_396_1.typewritter:SetDirty()
			end

			if arg_396_1.time_ >= var_399_16 + var_399_26 and arg_396_1.time_ < var_399_16 + var_399_26 + arg_399_0 then
				arg_396_1.typewritter.percent = 1

				arg_396_1.typewritter:SetDirty()
				arg_396_1:ShowNextGo(true)
			end
		end
	end,
	Play417161097 = function(arg_400_0, arg_400_1)
		arg_400_1.time_ = 0
		arg_400_1.frameCnt_ = 0
		arg_400_1.state_ = "playing"
		arg_400_1.curTalkId_ = 417161097
		arg_400_1.duration_ = 4

		SetActive(arg_400_1.tipsGo_, false)

		function arg_400_1.onSingleLineFinish_()
			arg_400_1.onSingleLineUpdate_ = nil
			arg_400_1.onSingleLineFinish_ = nil
			arg_400_1.state_ = "waiting"
		end

		function arg_400_1.playNext_(arg_402_0)
			if arg_402_0 == 1 then
				arg_400_0:Play417161098(arg_400_1)
			end
		end

		function arg_400_1.onSingleLineUpdate_(arg_403_0)
			local var_403_0 = arg_400_1.actors_["10128"]
			local var_403_1 = 0

			if var_403_1 < arg_400_1.time_ and arg_400_1.time_ <= var_403_1 + arg_403_0 and not isNil(var_403_0) and arg_400_1.var_.actorSpriteComps10128 == nil then
				arg_400_1.var_.actorSpriteComps10128 = var_403_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_403_2 = 0.2

			if var_403_1 <= arg_400_1.time_ and arg_400_1.time_ < var_403_1 + var_403_2 and not isNil(var_403_0) then
				local var_403_3 = (arg_400_1.time_ - var_403_1) / var_403_2

				if arg_400_1.var_.actorSpriteComps10128 then
					for iter_403_0, iter_403_1 in pairs(arg_400_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_403_1 then
							if arg_400_1.isInRecall_ then
								local var_403_4 = Mathf.Lerp(iter_403_1.color.r, arg_400_1.hightColor1.r, var_403_3)
								local var_403_5 = Mathf.Lerp(iter_403_1.color.g, arg_400_1.hightColor1.g, var_403_3)
								local var_403_6 = Mathf.Lerp(iter_403_1.color.b, arg_400_1.hightColor1.b, var_403_3)

								iter_403_1.color = Color.New(var_403_4, var_403_5, var_403_6)
							else
								local var_403_7 = Mathf.Lerp(iter_403_1.color.r, 1, var_403_3)

								iter_403_1.color = Color.New(var_403_7, var_403_7, var_403_7)
							end
						end
					end
				end
			end

			if arg_400_1.time_ >= var_403_1 + var_403_2 and arg_400_1.time_ < var_403_1 + var_403_2 + arg_403_0 and not isNil(var_403_0) and arg_400_1.var_.actorSpriteComps10128 then
				for iter_403_2, iter_403_3 in pairs(arg_400_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_403_3 then
						if arg_400_1.isInRecall_ then
							iter_403_3.color = arg_400_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_403_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_400_1.var_.actorSpriteComps10128 = nil
			end

			local var_403_8 = arg_400_1.actors_["1060"]
			local var_403_9 = 0

			if var_403_9 < arg_400_1.time_ and arg_400_1.time_ <= var_403_9 + arg_403_0 and not isNil(var_403_8) and arg_400_1.var_.actorSpriteComps1060 == nil then
				arg_400_1.var_.actorSpriteComps1060 = var_403_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_403_10 = 0.2

			if var_403_9 <= arg_400_1.time_ and arg_400_1.time_ < var_403_9 + var_403_10 and not isNil(var_403_8) then
				local var_403_11 = (arg_400_1.time_ - var_403_9) / var_403_10

				if arg_400_1.var_.actorSpriteComps1060 then
					for iter_403_4, iter_403_5 in pairs(arg_400_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_403_5 then
							if arg_400_1.isInRecall_ then
								local var_403_12 = Mathf.Lerp(iter_403_5.color.r, arg_400_1.hightColor2.r, var_403_11)
								local var_403_13 = Mathf.Lerp(iter_403_5.color.g, arg_400_1.hightColor2.g, var_403_11)
								local var_403_14 = Mathf.Lerp(iter_403_5.color.b, arg_400_1.hightColor2.b, var_403_11)

								iter_403_5.color = Color.New(var_403_12, var_403_13, var_403_14)
							else
								local var_403_15 = Mathf.Lerp(iter_403_5.color.r, 0.5, var_403_11)

								iter_403_5.color = Color.New(var_403_15, var_403_15, var_403_15)
							end
						end
					end
				end
			end

			if arg_400_1.time_ >= var_403_9 + var_403_10 and arg_400_1.time_ < var_403_9 + var_403_10 + arg_403_0 and not isNil(var_403_8) and arg_400_1.var_.actorSpriteComps1060 then
				for iter_403_6, iter_403_7 in pairs(arg_400_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_403_7 then
						if arg_400_1.isInRecall_ then
							iter_403_7.color = arg_400_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_403_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_400_1.var_.actorSpriteComps1060 = nil
			end

			local var_403_16 = 0
			local var_403_17 = 0.55

			if var_403_16 < arg_400_1.time_ and arg_400_1.time_ <= var_403_16 + arg_403_0 then
				arg_400_1.talkMaxDuration = 0
				arg_400_1.dialogCg_.alpha = 1

				arg_400_1.dialog_:SetActive(true)
				SetActive(arg_400_1.leftNameGo_, true)

				local var_403_18 = arg_400_1:FormatText(StoryNameCfg[595].name)

				arg_400_1.leftNameTxt_.text = var_403_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_400_1.leftNameTxt_.transform)

				arg_400_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_400_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_400_1:RecordName(arg_400_1.leftNameTxt_.text)
				SetActive(arg_400_1.iconTrs_.gameObject, false)
				arg_400_1.callingController_:SetSelectedState("normal")

				local var_403_19 = arg_400_1:GetWordFromCfg(417161097)
				local var_403_20 = arg_400_1:FormatText(var_403_19.content)

				arg_400_1.text_.text = var_403_20

				LuaForUtil.ClearLinePrefixSymbol(arg_400_1.text_)

				local var_403_21 = 22
				local var_403_22 = utf8.len(var_403_20)
				local var_403_23 = var_403_21 <= 0 and var_403_17 or var_403_17 * (var_403_22 / var_403_21)

				if var_403_23 > 0 and var_403_17 < var_403_23 then
					arg_400_1.talkMaxDuration = var_403_23

					if var_403_23 + var_403_16 > arg_400_1.duration_ then
						arg_400_1.duration_ = var_403_23 + var_403_16
					end
				end

				arg_400_1.text_.text = var_403_20
				arg_400_1.typewritter.percent = 0

				arg_400_1.typewritter:SetDirty()
				arg_400_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161097", "story_v_out_417161.awb") ~= 0 then
					local var_403_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161097", "story_v_out_417161.awb") / 1000

					if var_403_24 + var_403_16 > arg_400_1.duration_ then
						arg_400_1.duration_ = var_403_24 + var_403_16
					end

					if var_403_19.prefab_name ~= "" and arg_400_1.actors_[var_403_19.prefab_name] ~= nil then
						local var_403_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_400_1.actors_[var_403_19.prefab_name].transform, "story_v_out_417161", "417161097", "story_v_out_417161.awb")

						arg_400_1:RecordAudio("417161097", var_403_25)
						arg_400_1:RecordAudio("417161097", var_403_25)
					else
						arg_400_1:AudioAction("play", "voice", "story_v_out_417161", "417161097", "story_v_out_417161.awb")
					end

					arg_400_1:RecordHistoryTalkVoice("story_v_out_417161", "417161097", "story_v_out_417161.awb")
				end

				arg_400_1:RecordContent(arg_400_1.text_.text)
			end

			local var_403_26 = math.max(var_403_17, arg_400_1.talkMaxDuration)

			if var_403_16 <= arg_400_1.time_ and arg_400_1.time_ < var_403_16 + var_403_26 then
				arg_400_1.typewritter.percent = (arg_400_1.time_ - var_403_16) / var_403_26

				arg_400_1.typewritter:SetDirty()
			end

			if arg_400_1.time_ >= var_403_16 + var_403_26 and arg_400_1.time_ < var_403_16 + var_403_26 + arg_403_0 then
				arg_400_1.typewritter.percent = 1

				arg_400_1.typewritter:SetDirty()
				arg_400_1:ShowNextGo(true)
			end
		end
	end,
	Play417161098 = function(arg_404_0, arg_404_1)
		arg_404_1.time_ = 0
		arg_404_1.frameCnt_ = 0
		arg_404_1.state_ = "playing"
		arg_404_1.curTalkId_ = 417161098
		arg_404_1.duration_ = 6.37

		SetActive(arg_404_1.tipsGo_, false)

		function arg_404_1.onSingleLineFinish_()
			arg_404_1.onSingleLineUpdate_ = nil
			arg_404_1.onSingleLineFinish_ = nil
			arg_404_1.state_ = "waiting"
		end

		function arg_404_1.playNext_(arg_406_0)
			if arg_406_0 == 1 then
				arg_404_0:Play417161099(arg_404_1)
			end
		end

		function arg_404_1.onSingleLineUpdate_(arg_407_0)
			local var_407_0 = 0
			local var_407_1 = 0.825

			if var_407_0 < arg_404_1.time_ and arg_404_1.time_ <= var_407_0 + arg_407_0 then
				arg_404_1.talkMaxDuration = 0
				arg_404_1.dialogCg_.alpha = 1

				arg_404_1.dialog_:SetActive(true)
				SetActive(arg_404_1.leftNameGo_, true)

				local var_407_2 = arg_404_1:FormatText(StoryNameCfg[595].name)

				arg_404_1.leftNameTxt_.text = var_407_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_404_1.leftNameTxt_.transform)

				arg_404_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_404_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_404_1:RecordName(arg_404_1.leftNameTxt_.text)
				SetActive(arg_404_1.iconTrs_.gameObject, false)
				arg_404_1.callingController_:SetSelectedState("normal")

				local var_407_3 = arg_404_1:GetWordFromCfg(417161098)
				local var_407_4 = arg_404_1:FormatText(var_407_3.content)

				arg_404_1.text_.text = var_407_4

				LuaForUtil.ClearLinePrefixSymbol(arg_404_1.text_)

				local var_407_5 = 33
				local var_407_6 = utf8.len(var_407_4)
				local var_407_7 = var_407_5 <= 0 and var_407_1 or var_407_1 * (var_407_6 / var_407_5)

				if var_407_7 > 0 and var_407_1 < var_407_7 then
					arg_404_1.talkMaxDuration = var_407_7

					if var_407_7 + var_407_0 > arg_404_1.duration_ then
						arg_404_1.duration_ = var_407_7 + var_407_0
					end
				end

				arg_404_1.text_.text = var_407_4
				arg_404_1.typewritter.percent = 0

				arg_404_1.typewritter:SetDirty()
				arg_404_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161098", "story_v_out_417161.awb") ~= 0 then
					local var_407_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161098", "story_v_out_417161.awb") / 1000

					if var_407_8 + var_407_0 > arg_404_1.duration_ then
						arg_404_1.duration_ = var_407_8 + var_407_0
					end

					if var_407_3.prefab_name ~= "" and arg_404_1.actors_[var_407_3.prefab_name] ~= nil then
						local var_407_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_404_1.actors_[var_407_3.prefab_name].transform, "story_v_out_417161", "417161098", "story_v_out_417161.awb")

						arg_404_1:RecordAudio("417161098", var_407_9)
						arg_404_1:RecordAudio("417161098", var_407_9)
					else
						arg_404_1:AudioAction("play", "voice", "story_v_out_417161", "417161098", "story_v_out_417161.awb")
					end

					arg_404_1:RecordHistoryTalkVoice("story_v_out_417161", "417161098", "story_v_out_417161.awb")
				end

				arg_404_1:RecordContent(arg_404_1.text_.text)
			end

			local var_407_10 = math.max(var_407_1, arg_404_1.talkMaxDuration)

			if var_407_0 <= arg_404_1.time_ and arg_404_1.time_ < var_407_0 + var_407_10 then
				arg_404_1.typewritter.percent = (arg_404_1.time_ - var_407_0) / var_407_10

				arg_404_1.typewritter:SetDirty()
			end

			if arg_404_1.time_ >= var_407_0 + var_407_10 and arg_404_1.time_ < var_407_0 + var_407_10 + arg_407_0 then
				arg_404_1.typewritter.percent = 1

				arg_404_1.typewritter:SetDirty()
				arg_404_1:ShowNextGo(true)
			end
		end
	end,
	Play417161099 = function(arg_408_0, arg_408_1)
		arg_408_1.time_ = 0
		arg_408_1.frameCnt_ = 0
		arg_408_1.state_ = "playing"
		arg_408_1.curTalkId_ = 417161099
		arg_408_1.duration_ = 4.8

		SetActive(arg_408_1.tipsGo_, false)

		function arg_408_1.onSingleLineFinish_()
			arg_408_1.onSingleLineUpdate_ = nil
			arg_408_1.onSingleLineFinish_ = nil
			arg_408_1.state_ = "waiting"
		end

		function arg_408_1.playNext_(arg_410_0)
			if arg_410_0 == 1 then
				arg_408_0:Play417161100(arg_408_1)
			end
		end

		function arg_408_1.onSingleLineUpdate_(arg_411_0)
			local var_411_0 = arg_408_1.actors_["1060"]
			local var_411_1 = 0

			if var_411_1 < arg_408_1.time_ and arg_408_1.time_ <= var_411_1 + arg_411_0 and not isNil(var_411_0) and arg_408_1.var_.actorSpriteComps1060 == nil then
				arg_408_1.var_.actorSpriteComps1060 = var_411_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_411_2 = 0.2

			if var_411_1 <= arg_408_1.time_ and arg_408_1.time_ < var_411_1 + var_411_2 and not isNil(var_411_0) then
				local var_411_3 = (arg_408_1.time_ - var_411_1) / var_411_2

				if arg_408_1.var_.actorSpriteComps1060 then
					for iter_411_0, iter_411_1 in pairs(arg_408_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_411_1 then
							if arg_408_1.isInRecall_ then
								local var_411_4 = Mathf.Lerp(iter_411_1.color.r, arg_408_1.hightColor1.r, var_411_3)
								local var_411_5 = Mathf.Lerp(iter_411_1.color.g, arg_408_1.hightColor1.g, var_411_3)
								local var_411_6 = Mathf.Lerp(iter_411_1.color.b, arg_408_1.hightColor1.b, var_411_3)

								iter_411_1.color = Color.New(var_411_4, var_411_5, var_411_6)
							else
								local var_411_7 = Mathf.Lerp(iter_411_1.color.r, 1, var_411_3)

								iter_411_1.color = Color.New(var_411_7, var_411_7, var_411_7)
							end
						end
					end
				end
			end

			if arg_408_1.time_ >= var_411_1 + var_411_2 and arg_408_1.time_ < var_411_1 + var_411_2 + arg_411_0 and not isNil(var_411_0) and arg_408_1.var_.actorSpriteComps1060 then
				for iter_411_2, iter_411_3 in pairs(arg_408_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_411_3 then
						if arg_408_1.isInRecall_ then
							iter_411_3.color = arg_408_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_411_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_408_1.var_.actorSpriteComps1060 = nil
			end

			local var_411_8 = arg_408_1.actors_["10128"]
			local var_411_9 = 0

			if var_411_9 < arg_408_1.time_ and arg_408_1.time_ <= var_411_9 + arg_411_0 and not isNil(var_411_8) and arg_408_1.var_.actorSpriteComps10128 == nil then
				arg_408_1.var_.actorSpriteComps10128 = var_411_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_411_10 = 0.2

			if var_411_9 <= arg_408_1.time_ and arg_408_1.time_ < var_411_9 + var_411_10 and not isNil(var_411_8) then
				local var_411_11 = (arg_408_1.time_ - var_411_9) / var_411_10

				if arg_408_1.var_.actorSpriteComps10128 then
					for iter_411_4, iter_411_5 in pairs(arg_408_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_411_5 then
							if arg_408_1.isInRecall_ then
								local var_411_12 = Mathf.Lerp(iter_411_5.color.r, arg_408_1.hightColor2.r, var_411_11)
								local var_411_13 = Mathf.Lerp(iter_411_5.color.g, arg_408_1.hightColor2.g, var_411_11)
								local var_411_14 = Mathf.Lerp(iter_411_5.color.b, arg_408_1.hightColor2.b, var_411_11)

								iter_411_5.color = Color.New(var_411_12, var_411_13, var_411_14)
							else
								local var_411_15 = Mathf.Lerp(iter_411_5.color.r, 0.5, var_411_11)

								iter_411_5.color = Color.New(var_411_15, var_411_15, var_411_15)
							end
						end
					end
				end
			end

			if arg_408_1.time_ >= var_411_9 + var_411_10 and arg_408_1.time_ < var_411_9 + var_411_10 + arg_411_0 and not isNil(var_411_8) and arg_408_1.var_.actorSpriteComps10128 then
				for iter_411_6, iter_411_7 in pairs(arg_408_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_411_7 then
						if arg_408_1.isInRecall_ then
							iter_411_7.color = arg_408_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_411_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_408_1.var_.actorSpriteComps10128 = nil
			end

			local var_411_16 = 0
			local var_411_17 = 0.45

			if var_411_16 < arg_408_1.time_ and arg_408_1.time_ <= var_411_16 + arg_411_0 then
				arg_408_1.talkMaxDuration = 0
				arg_408_1.dialogCg_.alpha = 1

				arg_408_1.dialog_:SetActive(true)
				SetActive(arg_408_1.leftNameGo_, true)

				local var_411_18 = arg_408_1:FormatText(StoryNameCfg[584].name)

				arg_408_1.leftNameTxt_.text = var_411_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_408_1.leftNameTxt_.transform)

				arg_408_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_408_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_408_1:RecordName(arg_408_1.leftNameTxt_.text)
				SetActive(arg_408_1.iconTrs_.gameObject, false)
				arg_408_1.callingController_:SetSelectedState("normal")

				local var_411_19 = arg_408_1:GetWordFromCfg(417161099)
				local var_411_20 = arg_408_1:FormatText(var_411_19.content)

				arg_408_1.text_.text = var_411_20

				LuaForUtil.ClearLinePrefixSymbol(arg_408_1.text_)

				local var_411_21 = 18
				local var_411_22 = utf8.len(var_411_20)
				local var_411_23 = var_411_21 <= 0 and var_411_17 or var_411_17 * (var_411_22 / var_411_21)

				if var_411_23 > 0 and var_411_17 < var_411_23 then
					arg_408_1.talkMaxDuration = var_411_23

					if var_411_23 + var_411_16 > arg_408_1.duration_ then
						arg_408_1.duration_ = var_411_23 + var_411_16
					end
				end

				arg_408_1.text_.text = var_411_20
				arg_408_1.typewritter.percent = 0

				arg_408_1.typewritter:SetDirty()
				arg_408_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161099", "story_v_out_417161.awb") ~= 0 then
					local var_411_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161099", "story_v_out_417161.awb") / 1000

					if var_411_24 + var_411_16 > arg_408_1.duration_ then
						arg_408_1.duration_ = var_411_24 + var_411_16
					end

					if var_411_19.prefab_name ~= "" and arg_408_1.actors_[var_411_19.prefab_name] ~= nil then
						local var_411_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_408_1.actors_[var_411_19.prefab_name].transform, "story_v_out_417161", "417161099", "story_v_out_417161.awb")

						arg_408_1:RecordAudio("417161099", var_411_25)
						arg_408_1:RecordAudio("417161099", var_411_25)
					else
						arg_408_1:AudioAction("play", "voice", "story_v_out_417161", "417161099", "story_v_out_417161.awb")
					end

					arg_408_1:RecordHistoryTalkVoice("story_v_out_417161", "417161099", "story_v_out_417161.awb")
				end

				arg_408_1:RecordContent(arg_408_1.text_.text)
			end

			local var_411_26 = math.max(var_411_17, arg_408_1.talkMaxDuration)

			if var_411_16 <= arg_408_1.time_ and arg_408_1.time_ < var_411_16 + var_411_26 then
				arg_408_1.typewritter.percent = (arg_408_1.time_ - var_411_16) / var_411_26

				arg_408_1.typewritter:SetDirty()
			end

			if arg_408_1.time_ >= var_411_16 + var_411_26 and arg_408_1.time_ < var_411_16 + var_411_26 + arg_411_0 then
				arg_408_1.typewritter.percent = 1

				arg_408_1.typewritter:SetDirty()
				arg_408_1:ShowNextGo(true)
			end
		end
	end,
	Play417161100 = function(arg_412_0, arg_412_1)
		arg_412_1.time_ = 0
		arg_412_1.frameCnt_ = 0
		arg_412_1.state_ = "playing"
		arg_412_1.curTalkId_ = 417161100
		arg_412_1.duration_ = 5

		SetActive(arg_412_1.tipsGo_, false)

		function arg_412_1.onSingleLineFinish_()
			arg_412_1.onSingleLineUpdate_ = nil
			arg_412_1.onSingleLineFinish_ = nil
			arg_412_1.state_ = "waiting"
		end

		function arg_412_1.playNext_(arg_414_0)
			if arg_414_0 == 1 then
				arg_412_0:Play417161101(arg_412_1)
			end
		end

		function arg_412_1.onSingleLineUpdate_(arg_415_0)
			local var_415_0 = arg_412_1.actors_["10128"].transform
			local var_415_1 = 0

			if var_415_1 < arg_412_1.time_ and arg_412_1.time_ <= var_415_1 + arg_415_0 then
				arg_412_1.var_.moveOldPos10128 = var_415_0.localPosition
				var_415_0.localScale = Vector3.New(1, 1, 1)

				arg_412_1:CheckSpriteTmpPos("10128", 7)

				local var_415_2 = var_415_0.childCount

				for iter_415_0 = 0, var_415_2 - 1 do
					local var_415_3 = var_415_0:GetChild(iter_415_0)

					if var_415_3.name == "" or not string.find(var_415_3.name, "split") then
						var_415_3.gameObject:SetActive(true)
					else
						var_415_3.gameObject:SetActive(false)
					end
				end
			end

			local var_415_4 = 0.001

			if var_415_1 <= arg_412_1.time_ and arg_412_1.time_ < var_415_1 + var_415_4 then
				local var_415_5 = (arg_412_1.time_ - var_415_1) / var_415_4
				local var_415_6 = Vector3.New(0, -2000, -300)

				var_415_0.localPosition = Vector3.Lerp(arg_412_1.var_.moveOldPos10128, var_415_6, var_415_5)
			end

			if arg_412_1.time_ >= var_415_1 + var_415_4 and arg_412_1.time_ < var_415_1 + var_415_4 + arg_415_0 then
				var_415_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_415_7 = arg_412_1.actors_["1060"].transform
			local var_415_8 = 0

			if var_415_8 < arg_412_1.time_ and arg_412_1.time_ <= var_415_8 + arg_415_0 then
				arg_412_1.var_.moveOldPos1060 = var_415_7.localPosition
				var_415_7.localScale = Vector3.New(1, 1, 1)

				arg_412_1:CheckSpriteTmpPos("1060", 7)

				local var_415_9 = var_415_7.childCount

				for iter_415_1 = 0, var_415_9 - 1 do
					local var_415_10 = var_415_7:GetChild(iter_415_1)

					if var_415_10.name == "" or not string.find(var_415_10.name, "split") then
						var_415_10.gameObject:SetActive(true)
					else
						var_415_10.gameObject:SetActive(false)
					end
				end
			end

			local var_415_11 = 0.001

			if var_415_8 <= arg_412_1.time_ and arg_412_1.time_ < var_415_8 + var_415_11 then
				local var_415_12 = (arg_412_1.time_ - var_415_8) / var_415_11
				local var_415_13 = Vector3.New(0, -2000, -40)

				var_415_7.localPosition = Vector3.Lerp(arg_412_1.var_.moveOldPos1060, var_415_13, var_415_12)
			end

			if arg_412_1.time_ >= var_415_8 + var_415_11 and arg_412_1.time_ < var_415_8 + var_415_11 + arg_415_0 then
				var_415_7.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_415_14 = 0
			local var_415_15 = 0.75

			if var_415_14 < arg_412_1.time_ and arg_412_1.time_ <= var_415_14 + arg_415_0 then
				arg_412_1.talkMaxDuration = 0
				arg_412_1.dialogCg_.alpha = 1

				arg_412_1.dialog_:SetActive(true)
				SetActive(arg_412_1.leftNameGo_, false)

				arg_412_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_412_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_412_1:RecordName(arg_412_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_412_1.iconTrs_.gameObject, false)
				arg_412_1.callingController_:SetSelectedState("normal")

				local var_415_16 = arg_412_1:GetWordFromCfg(417161100)
				local var_415_17 = arg_412_1:FormatText(var_415_16.content)

				arg_412_1.text_.text = var_415_17

				LuaForUtil.ClearLinePrefixSymbol(arg_412_1.text_)

				local var_415_18 = 30
				local var_415_19 = utf8.len(var_415_17)
				local var_415_20 = var_415_18 <= 0 and var_415_15 or var_415_15 * (var_415_19 / var_415_18)

				if var_415_20 > 0 and var_415_15 < var_415_20 then
					arg_412_1.talkMaxDuration = var_415_20

					if var_415_20 + var_415_14 > arg_412_1.duration_ then
						arg_412_1.duration_ = var_415_20 + var_415_14
					end
				end

				arg_412_1.text_.text = var_415_17
				arg_412_1.typewritter.percent = 0

				arg_412_1.typewritter:SetDirty()
				arg_412_1:ShowNextGo(false)
				arg_412_1:RecordContent(arg_412_1.text_.text)
			end

			local var_415_21 = math.max(var_415_15, arg_412_1.talkMaxDuration)

			if var_415_14 <= arg_412_1.time_ and arg_412_1.time_ < var_415_14 + var_415_21 then
				arg_412_1.typewritter.percent = (arg_412_1.time_ - var_415_14) / var_415_21

				arg_412_1.typewritter:SetDirty()
			end

			if arg_412_1.time_ >= var_415_14 + var_415_21 and arg_412_1.time_ < var_415_14 + var_415_21 + arg_415_0 then
				arg_412_1.typewritter.percent = 1

				arg_412_1.typewritter:SetDirty()
				arg_412_1:ShowNextGo(true)
			end
		end
	end,
	Play417161101 = function(arg_416_0, arg_416_1)
		arg_416_1.time_ = 0
		arg_416_1.frameCnt_ = 0
		arg_416_1.state_ = "playing"
		arg_416_1.curTalkId_ = 417161101
		arg_416_1.duration_ = 1.8

		SetActive(arg_416_1.tipsGo_, false)

		function arg_416_1.onSingleLineFinish_()
			arg_416_1.onSingleLineUpdate_ = nil
			arg_416_1.onSingleLineFinish_ = nil
			arg_416_1.state_ = "waiting"
		end

		function arg_416_1.playNext_(arg_418_0)
			if arg_418_0 == 1 then
				arg_416_0:Play417161102(arg_416_1)
			end
		end

		function arg_416_1.onSingleLineUpdate_(arg_419_0)
			local var_419_0 = arg_416_1.actors_["10128"]
			local var_419_1 = 0

			if var_419_1 < arg_416_1.time_ and arg_416_1.time_ <= var_419_1 + arg_419_0 and not isNil(var_419_0) and arg_416_1.var_.actorSpriteComps10128 == nil then
				arg_416_1.var_.actorSpriteComps10128 = var_419_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_419_2 = 0.2

			if var_419_1 <= arg_416_1.time_ and arg_416_1.time_ < var_419_1 + var_419_2 and not isNil(var_419_0) then
				local var_419_3 = (arg_416_1.time_ - var_419_1) / var_419_2

				if arg_416_1.var_.actorSpriteComps10128 then
					for iter_419_0, iter_419_1 in pairs(arg_416_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_419_1 then
							if arg_416_1.isInRecall_ then
								local var_419_4 = Mathf.Lerp(iter_419_1.color.r, arg_416_1.hightColor1.r, var_419_3)
								local var_419_5 = Mathf.Lerp(iter_419_1.color.g, arg_416_1.hightColor1.g, var_419_3)
								local var_419_6 = Mathf.Lerp(iter_419_1.color.b, arg_416_1.hightColor1.b, var_419_3)

								iter_419_1.color = Color.New(var_419_4, var_419_5, var_419_6)
							else
								local var_419_7 = Mathf.Lerp(iter_419_1.color.r, 1, var_419_3)

								iter_419_1.color = Color.New(var_419_7, var_419_7, var_419_7)
							end
						end
					end
				end
			end

			if arg_416_1.time_ >= var_419_1 + var_419_2 and arg_416_1.time_ < var_419_1 + var_419_2 + arg_419_0 and not isNil(var_419_0) and arg_416_1.var_.actorSpriteComps10128 then
				for iter_419_2, iter_419_3 in pairs(arg_416_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_419_3 then
						if arg_416_1.isInRecall_ then
							iter_419_3.color = arg_416_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_419_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_416_1.var_.actorSpriteComps10128 = nil
			end

			local var_419_8 = arg_416_1.actors_["10128"].transform
			local var_419_9 = 0

			if var_419_9 < arg_416_1.time_ and arg_416_1.time_ <= var_419_9 + arg_419_0 then
				arg_416_1.var_.moveOldPos10128 = var_419_8.localPosition
				var_419_8.localScale = Vector3.New(1, 1, 1)

				arg_416_1:CheckSpriteTmpPos("10128", 3)

				local var_419_10 = var_419_8.childCount

				for iter_419_4 = 0, var_419_10 - 1 do
					local var_419_11 = var_419_8:GetChild(iter_419_4)

					if var_419_11.name == "" or not string.find(var_419_11.name, "split") then
						var_419_11.gameObject:SetActive(true)
					else
						var_419_11.gameObject:SetActive(false)
					end
				end
			end

			local var_419_12 = 0.001

			if var_419_9 <= arg_416_1.time_ and arg_416_1.time_ < var_419_9 + var_419_12 then
				local var_419_13 = (arg_416_1.time_ - var_419_9) / var_419_12
				local var_419_14 = Vector3.New(0, -347, -300)

				var_419_8.localPosition = Vector3.Lerp(arg_416_1.var_.moveOldPos10128, var_419_14, var_419_13)
			end

			if arg_416_1.time_ >= var_419_9 + var_419_12 and arg_416_1.time_ < var_419_9 + var_419_12 + arg_419_0 then
				var_419_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_419_15 = 0
			local var_419_16 = 0.2

			if var_419_15 < arg_416_1.time_ and arg_416_1.time_ <= var_419_15 + arg_419_0 then
				arg_416_1.talkMaxDuration = 0
				arg_416_1.dialogCg_.alpha = 1

				arg_416_1.dialog_:SetActive(true)
				SetActive(arg_416_1.leftNameGo_, true)

				local var_419_17 = arg_416_1:FormatText(StoryNameCfg[595].name)

				arg_416_1.leftNameTxt_.text = var_419_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_416_1.leftNameTxt_.transform)

				arg_416_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_416_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_416_1:RecordName(arg_416_1.leftNameTxt_.text)
				SetActive(arg_416_1.iconTrs_.gameObject, false)
				arg_416_1.callingController_:SetSelectedState("normal")

				local var_419_18 = arg_416_1:GetWordFromCfg(417161101)
				local var_419_19 = arg_416_1:FormatText(var_419_18.content)

				arg_416_1.text_.text = var_419_19

				LuaForUtil.ClearLinePrefixSymbol(arg_416_1.text_)

				local var_419_20 = 8
				local var_419_21 = utf8.len(var_419_19)
				local var_419_22 = var_419_20 <= 0 and var_419_16 or var_419_16 * (var_419_21 / var_419_20)

				if var_419_22 > 0 and var_419_16 < var_419_22 then
					arg_416_1.talkMaxDuration = var_419_22

					if var_419_22 + var_419_15 > arg_416_1.duration_ then
						arg_416_1.duration_ = var_419_22 + var_419_15
					end
				end

				arg_416_1.text_.text = var_419_19
				arg_416_1.typewritter.percent = 0

				arg_416_1.typewritter:SetDirty()
				arg_416_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161101", "story_v_out_417161.awb") ~= 0 then
					local var_419_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161101", "story_v_out_417161.awb") / 1000

					if var_419_23 + var_419_15 > arg_416_1.duration_ then
						arg_416_1.duration_ = var_419_23 + var_419_15
					end

					if var_419_18.prefab_name ~= "" and arg_416_1.actors_[var_419_18.prefab_name] ~= nil then
						local var_419_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_416_1.actors_[var_419_18.prefab_name].transform, "story_v_out_417161", "417161101", "story_v_out_417161.awb")

						arg_416_1:RecordAudio("417161101", var_419_24)
						arg_416_1:RecordAudio("417161101", var_419_24)
					else
						arg_416_1:AudioAction("play", "voice", "story_v_out_417161", "417161101", "story_v_out_417161.awb")
					end

					arg_416_1:RecordHistoryTalkVoice("story_v_out_417161", "417161101", "story_v_out_417161.awb")
				end

				arg_416_1:RecordContent(arg_416_1.text_.text)
			end

			local var_419_25 = math.max(var_419_16, arg_416_1.talkMaxDuration)

			if var_419_15 <= arg_416_1.time_ and arg_416_1.time_ < var_419_15 + var_419_25 then
				arg_416_1.typewritter.percent = (arg_416_1.time_ - var_419_15) / var_419_25

				arg_416_1.typewritter:SetDirty()
			end

			if arg_416_1.time_ >= var_419_15 + var_419_25 and arg_416_1.time_ < var_419_15 + var_419_25 + arg_419_0 then
				arg_416_1.typewritter.percent = 1

				arg_416_1.typewritter:SetDirty()
				arg_416_1:ShowNextGo(true)
			end
		end
	end,
	Play417161102 = function(arg_420_0, arg_420_1)
		arg_420_1.time_ = 0
		arg_420_1.frameCnt_ = 0
		arg_420_1.state_ = "playing"
		arg_420_1.curTalkId_ = 417161102
		arg_420_1.duration_ = 2.9

		SetActive(arg_420_1.tipsGo_, false)

		function arg_420_1.onSingleLineFinish_()
			arg_420_1.onSingleLineUpdate_ = nil
			arg_420_1.onSingleLineFinish_ = nil
			arg_420_1.state_ = "waiting"
		end

		function arg_420_1.playNext_(arg_422_0)
			if arg_422_0 == 1 then
				arg_420_0:Play417161103(arg_420_1)
			end
		end

		function arg_420_1.onSingleLineUpdate_(arg_423_0)
			local var_423_0 = arg_420_1.actors_["1060"]
			local var_423_1 = 0

			if var_423_1 < arg_420_1.time_ and arg_420_1.time_ <= var_423_1 + arg_423_0 and not isNil(var_423_0) and arg_420_1.var_.actorSpriteComps1060 == nil then
				arg_420_1.var_.actorSpriteComps1060 = var_423_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_423_2 = 0.2

			if var_423_1 <= arg_420_1.time_ and arg_420_1.time_ < var_423_1 + var_423_2 and not isNil(var_423_0) then
				local var_423_3 = (arg_420_1.time_ - var_423_1) / var_423_2

				if arg_420_1.var_.actorSpriteComps1060 then
					for iter_423_0, iter_423_1 in pairs(arg_420_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_423_1 then
							if arg_420_1.isInRecall_ then
								local var_423_4 = Mathf.Lerp(iter_423_1.color.r, arg_420_1.hightColor1.r, var_423_3)
								local var_423_5 = Mathf.Lerp(iter_423_1.color.g, arg_420_1.hightColor1.g, var_423_3)
								local var_423_6 = Mathf.Lerp(iter_423_1.color.b, arg_420_1.hightColor1.b, var_423_3)

								iter_423_1.color = Color.New(var_423_4, var_423_5, var_423_6)
							else
								local var_423_7 = Mathf.Lerp(iter_423_1.color.r, 1, var_423_3)

								iter_423_1.color = Color.New(var_423_7, var_423_7, var_423_7)
							end
						end
					end
				end
			end

			if arg_420_1.time_ >= var_423_1 + var_423_2 and arg_420_1.time_ < var_423_1 + var_423_2 + arg_423_0 and not isNil(var_423_0) and arg_420_1.var_.actorSpriteComps1060 then
				for iter_423_2, iter_423_3 in pairs(arg_420_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_423_3 then
						if arg_420_1.isInRecall_ then
							iter_423_3.color = arg_420_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_423_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_420_1.var_.actorSpriteComps1060 = nil
			end

			local var_423_8 = arg_420_1.actors_["10128"]
			local var_423_9 = 0

			if var_423_9 < arg_420_1.time_ and arg_420_1.time_ <= var_423_9 + arg_423_0 and not isNil(var_423_8) and arg_420_1.var_.actorSpriteComps10128 == nil then
				arg_420_1.var_.actorSpriteComps10128 = var_423_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_423_10 = 0.2

			if var_423_9 <= arg_420_1.time_ and arg_420_1.time_ < var_423_9 + var_423_10 and not isNil(var_423_8) then
				local var_423_11 = (arg_420_1.time_ - var_423_9) / var_423_10

				if arg_420_1.var_.actorSpriteComps10128 then
					for iter_423_4, iter_423_5 in pairs(arg_420_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_423_5 then
							if arg_420_1.isInRecall_ then
								local var_423_12 = Mathf.Lerp(iter_423_5.color.r, arg_420_1.hightColor2.r, var_423_11)
								local var_423_13 = Mathf.Lerp(iter_423_5.color.g, arg_420_1.hightColor2.g, var_423_11)
								local var_423_14 = Mathf.Lerp(iter_423_5.color.b, arg_420_1.hightColor2.b, var_423_11)

								iter_423_5.color = Color.New(var_423_12, var_423_13, var_423_14)
							else
								local var_423_15 = Mathf.Lerp(iter_423_5.color.r, 0.5, var_423_11)

								iter_423_5.color = Color.New(var_423_15, var_423_15, var_423_15)
							end
						end
					end
				end
			end

			if arg_420_1.time_ >= var_423_9 + var_423_10 and arg_420_1.time_ < var_423_9 + var_423_10 + arg_423_0 and not isNil(var_423_8) and arg_420_1.var_.actorSpriteComps10128 then
				for iter_423_6, iter_423_7 in pairs(arg_420_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_423_7 then
						if arg_420_1.isInRecall_ then
							iter_423_7.color = arg_420_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_423_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_420_1.var_.actorSpriteComps10128 = nil
			end

			local var_423_16 = arg_420_1.actors_["10128"].transform
			local var_423_17 = 0

			if var_423_17 < arg_420_1.time_ and arg_420_1.time_ <= var_423_17 + arg_423_0 then
				arg_420_1.var_.moveOldPos10128 = var_423_16.localPosition
				var_423_16.localScale = Vector3.New(1, 1, 1)

				arg_420_1:CheckSpriteTmpPos("10128", 2)

				local var_423_18 = var_423_16.childCount

				for iter_423_8 = 0, var_423_18 - 1 do
					local var_423_19 = var_423_16:GetChild(iter_423_8)

					if var_423_19.name == "" or not string.find(var_423_19.name, "split") then
						var_423_19.gameObject:SetActive(true)
					else
						var_423_19.gameObject:SetActive(false)
					end
				end
			end

			local var_423_20 = 0.001

			if var_423_17 <= arg_420_1.time_ and arg_420_1.time_ < var_423_17 + var_423_20 then
				local var_423_21 = (arg_420_1.time_ - var_423_17) / var_423_20
				local var_423_22 = Vector3.New(-390, -347, -300)

				var_423_16.localPosition = Vector3.Lerp(arg_420_1.var_.moveOldPos10128, var_423_22, var_423_21)
			end

			if arg_420_1.time_ >= var_423_17 + var_423_20 and arg_420_1.time_ < var_423_17 + var_423_20 + arg_423_0 then
				var_423_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_423_23 = arg_420_1.actors_["1060"].transform
			local var_423_24 = 0

			if var_423_24 < arg_420_1.time_ and arg_420_1.time_ <= var_423_24 + arg_423_0 then
				arg_420_1.var_.moveOldPos1060 = var_423_23.localPosition
				var_423_23.localScale = Vector3.New(1, 1, 1)

				arg_420_1:CheckSpriteTmpPos("1060", 4)

				local var_423_25 = var_423_23.childCount

				for iter_423_9 = 0, var_423_25 - 1 do
					local var_423_26 = var_423_23:GetChild(iter_423_9)

					if var_423_26.name == "" or not string.find(var_423_26.name, "split") then
						var_423_26.gameObject:SetActive(true)
					else
						var_423_26.gameObject:SetActive(false)
					end
				end
			end

			local var_423_27 = 0.001

			if var_423_24 <= arg_420_1.time_ and arg_420_1.time_ < var_423_24 + var_423_27 then
				local var_423_28 = (arg_420_1.time_ - var_423_24) / var_423_27
				local var_423_29 = Vector3.New(420.9, -430.8, 6.9)

				var_423_23.localPosition = Vector3.Lerp(arg_420_1.var_.moveOldPos1060, var_423_29, var_423_28)
			end

			if arg_420_1.time_ >= var_423_24 + var_423_27 and arg_420_1.time_ < var_423_24 + var_423_27 + arg_423_0 then
				var_423_23.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_423_30 = 0
			local var_423_31 = 0.275

			if var_423_30 < arg_420_1.time_ and arg_420_1.time_ <= var_423_30 + arg_423_0 then
				arg_420_1.talkMaxDuration = 0
				arg_420_1.dialogCg_.alpha = 1

				arg_420_1.dialog_:SetActive(true)
				SetActive(arg_420_1.leftNameGo_, true)

				local var_423_32 = arg_420_1:FormatText(StoryNameCfg[584].name)

				arg_420_1.leftNameTxt_.text = var_423_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_420_1.leftNameTxt_.transform)

				arg_420_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_420_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_420_1:RecordName(arg_420_1.leftNameTxt_.text)
				SetActive(arg_420_1.iconTrs_.gameObject, false)
				arg_420_1.callingController_:SetSelectedState("normal")

				local var_423_33 = arg_420_1:GetWordFromCfg(417161102)
				local var_423_34 = arg_420_1:FormatText(var_423_33.content)

				arg_420_1.text_.text = var_423_34

				LuaForUtil.ClearLinePrefixSymbol(arg_420_1.text_)

				local var_423_35 = 11
				local var_423_36 = utf8.len(var_423_34)
				local var_423_37 = var_423_35 <= 0 and var_423_31 or var_423_31 * (var_423_36 / var_423_35)

				if var_423_37 > 0 and var_423_31 < var_423_37 then
					arg_420_1.talkMaxDuration = var_423_37

					if var_423_37 + var_423_30 > arg_420_1.duration_ then
						arg_420_1.duration_ = var_423_37 + var_423_30
					end
				end

				arg_420_1.text_.text = var_423_34
				arg_420_1.typewritter.percent = 0

				arg_420_1.typewritter:SetDirty()
				arg_420_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161102", "story_v_out_417161.awb") ~= 0 then
					local var_423_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161102", "story_v_out_417161.awb") / 1000

					if var_423_38 + var_423_30 > arg_420_1.duration_ then
						arg_420_1.duration_ = var_423_38 + var_423_30
					end

					if var_423_33.prefab_name ~= "" and arg_420_1.actors_[var_423_33.prefab_name] ~= nil then
						local var_423_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_420_1.actors_[var_423_33.prefab_name].transform, "story_v_out_417161", "417161102", "story_v_out_417161.awb")

						arg_420_1:RecordAudio("417161102", var_423_39)
						arg_420_1:RecordAudio("417161102", var_423_39)
					else
						arg_420_1:AudioAction("play", "voice", "story_v_out_417161", "417161102", "story_v_out_417161.awb")
					end

					arg_420_1:RecordHistoryTalkVoice("story_v_out_417161", "417161102", "story_v_out_417161.awb")
				end

				arg_420_1:RecordContent(arg_420_1.text_.text)
			end

			local var_423_40 = math.max(var_423_31, arg_420_1.talkMaxDuration)

			if var_423_30 <= arg_420_1.time_ and arg_420_1.time_ < var_423_30 + var_423_40 then
				arg_420_1.typewritter.percent = (arg_420_1.time_ - var_423_30) / var_423_40

				arg_420_1.typewritter:SetDirty()
			end

			if arg_420_1.time_ >= var_423_30 + var_423_40 and arg_420_1.time_ < var_423_30 + var_423_40 + arg_423_0 then
				arg_420_1.typewritter.percent = 1

				arg_420_1.typewritter:SetDirty()
				arg_420_1:ShowNextGo(true)
			end
		end
	end,
	Play417161103 = function(arg_424_0, arg_424_1)
		arg_424_1.time_ = 0
		arg_424_1.frameCnt_ = 0
		arg_424_1.state_ = "playing"
		arg_424_1.curTalkId_ = 417161103
		arg_424_1.duration_ = 6.07

		SetActive(arg_424_1.tipsGo_, false)

		function arg_424_1.onSingleLineFinish_()
			arg_424_1.onSingleLineUpdate_ = nil
			arg_424_1.onSingleLineFinish_ = nil
			arg_424_1.state_ = "waiting"
		end

		function arg_424_1.playNext_(arg_426_0)
			if arg_426_0 == 1 then
				arg_424_0:Play417161104(arg_424_1)
			end
		end

		function arg_424_1.onSingleLineUpdate_(arg_427_0)
			local var_427_0 = arg_424_1.actors_["10128"]
			local var_427_1 = 0

			if var_427_1 < arg_424_1.time_ and arg_424_1.time_ <= var_427_1 + arg_427_0 and not isNil(var_427_0) and arg_424_1.var_.actorSpriteComps10128 == nil then
				arg_424_1.var_.actorSpriteComps10128 = var_427_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_427_2 = 0.2

			if var_427_1 <= arg_424_1.time_ and arg_424_1.time_ < var_427_1 + var_427_2 and not isNil(var_427_0) then
				local var_427_3 = (arg_424_1.time_ - var_427_1) / var_427_2

				if arg_424_1.var_.actorSpriteComps10128 then
					for iter_427_0, iter_427_1 in pairs(arg_424_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_427_1 then
							if arg_424_1.isInRecall_ then
								local var_427_4 = Mathf.Lerp(iter_427_1.color.r, arg_424_1.hightColor1.r, var_427_3)
								local var_427_5 = Mathf.Lerp(iter_427_1.color.g, arg_424_1.hightColor1.g, var_427_3)
								local var_427_6 = Mathf.Lerp(iter_427_1.color.b, arg_424_1.hightColor1.b, var_427_3)

								iter_427_1.color = Color.New(var_427_4, var_427_5, var_427_6)
							else
								local var_427_7 = Mathf.Lerp(iter_427_1.color.r, 1, var_427_3)

								iter_427_1.color = Color.New(var_427_7, var_427_7, var_427_7)
							end
						end
					end
				end
			end

			if arg_424_1.time_ >= var_427_1 + var_427_2 and arg_424_1.time_ < var_427_1 + var_427_2 + arg_427_0 and not isNil(var_427_0) and arg_424_1.var_.actorSpriteComps10128 then
				for iter_427_2, iter_427_3 in pairs(arg_424_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_427_3 then
						if arg_424_1.isInRecall_ then
							iter_427_3.color = arg_424_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_427_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_424_1.var_.actorSpriteComps10128 = nil
			end

			local var_427_8 = arg_424_1.actors_["1060"]
			local var_427_9 = 0

			if var_427_9 < arg_424_1.time_ and arg_424_1.time_ <= var_427_9 + arg_427_0 and not isNil(var_427_8) and arg_424_1.var_.actorSpriteComps1060 == nil then
				arg_424_1.var_.actorSpriteComps1060 = var_427_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_427_10 = 0.2

			if var_427_9 <= arg_424_1.time_ and arg_424_1.time_ < var_427_9 + var_427_10 and not isNil(var_427_8) then
				local var_427_11 = (arg_424_1.time_ - var_427_9) / var_427_10

				if arg_424_1.var_.actorSpriteComps1060 then
					for iter_427_4, iter_427_5 in pairs(arg_424_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_427_5 then
							if arg_424_1.isInRecall_ then
								local var_427_12 = Mathf.Lerp(iter_427_5.color.r, arg_424_1.hightColor2.r, var_427_11)
								local var_427_13 = Mathf.Lerp(iter_427_5.color.g, arg_424_1.hightColor2.g, var_427_11)
								local var_427_14 = Mathf.Lerp(iter_427_5.color.b, arg_424_1.hightColor2.b, var_427_11)

								iter_427_5.color = Color.New(var_427_12, var_427_13, var_427_14)
							else
								local var_427_15 = Mathf.Lerp(iter_427_5.color.r, 0.5, var_427_11)

								iter_427_5.color = Color.New(var_427_15, var_427_15, var_427_15)
							end
						end
					end
				end
			end

			if arg_424_1.time_ >= var_427_9 + var_427_10 and arg_424_1.time_ < var_427_9 + var_427_10 + arg_427_0 and not isNil(var_427_8) and arg_424_1.var_.actorSpriteComps1060 then
				for iter_427_6, iter_427_7 in pairs(arg_424_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_427_7 then
						if arg_424_1.isInRecall_ then
							iter_427_7.color = arg_424_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_427_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_424_1.var_.actorSpriteComps1060 = nil
			end

			local var_427_16 = 0
			local var_427_17 = 0.8

			if var_427_16 < arg_424_1.time_ and arg_424_1.time_ <= var_427_16 + arg_427_0 then
				arg_424_1.talkMaxDuration = 0
				arg_424_1.dialogCg_.alpha = 1

				arg_424_1.dialog_:SetActive(true)
				SetActive(arg_424_1.leftNameGo_, true)

				local var_427_18 = arg_424_1:FormatText(StoryNameCfg[595].name)

				arg_424_1.leftNameTxt_.text = var_427_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_424_1.leftNameTxt_.transform)

				arg_424_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_424_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_424_1:RecordName(arg_424_1.leftNameTxt_.text)
				SetActive(arg_424_1.iconTrs_.gameObject, false)
				arg_424_1.callingController_:SetSelectedState("normal")

				local var_427_19 = arg_424_1:GetWordFromCfg(417161103)
				local var_427_20 = arg_424_1:FormatText(var_427_19.content)

				arg_424_1.text_.text = var_427_20

				LuaForUtil.ClearLinePrefixSymbol(arg_424_1.text_)

				local var_427_21 = 32
				local var_427_22 = utf8.len(var_427_20)
				local var_427_23 = var_427_21 <= 0 and var_427_17 or var_427_17 * (var_427_22 / var_427_21)

				if var_427_23 > 0 and var_427_17 < var_427_23 then
					arg_424_1.talkMaxDuration = var_427_23

					if var_427_23 + var_427_16 > arg_424_1.duration_ then
						arg_424_1.duration_ = var_427_23 + var_427_16
					end
				end

				arg_424_1.text_.text = var_427_20
				arg_424_1.typewritter.percent = 0

				arg_424_1.typewritter:SetDirty()
				arg_424_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161103", "story_v_out_417161.awb") ~= 0 then
					local var_427_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161103", "story_v_out_417161.awb") / 1000

					if var_427_24 + var_427_16 > arg_424_1.duration_ then
						arg_424_1.duration_ = var_427_24 + var_427_16
					end

					if var_427_19.prefab_name ~= "" and arg_424_1.actors_[var_427_19.prefab_name] ~= nil then
						local var_427_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_424_1.actors_[var_427_19.prefab_name].transform, "story_v_out_417161", "417161103", "story_v_out_417161.awb")

						arg_424_1:RecordAudio("417161103", var_427_25)
						arg_424_1:RecordAudio("417161103", var_427_25)
					else
						arg_424_1:AudioAction("play", "voice", "story_v_out_417161", "417161103", "story_v_out_417161.awb")
					end

					arg_424_1:RecordHistoryTalkVoice("story_v_out_417161", "417161103", "story_v_out_417161.awb")
				end

				arg_424_1:RecordContent(arg_424_1.text_.text)
			end

			local var_427_26 = math.max(var_427_17, arg_424_1.talkMaxDuration)

			if var_427_16 <= arg_424_1.time_ and arg_424_1.time_ < var_427_16 + var_427_26 then
				arg_424_1.typewritter.percent = (arg_424_1.time_ - var_427_16) / var_427_26

				arg_424_1.typewritter:SetDirty()
			end

			if arg_424_1.time_ >= var_427_16 + var_427_26 and arg_424_1.time_ < var_427_16 + var_427_26 + arg_427_0 then
				arg_424_1.typewritter.percent = 1

				arg_424_1.typewritter:SetDirty()
				arg_424_1:ShowNextGo(true)
			end
		end
	end,
	Play417161104 = function(arg_428_0, arg_428_1)
		arg_428_1.time_ = 0
		arg_428_1.frameCnt_ = 0
		arg_428_1.state_ = "playing"
		arg_428_1.curTalkId_ = 417161104
		arg_428_1.duration_ = 11.8

		SetActive(arg_428_1.tipsGo_, false)

		function arg_428_1.onSingleLineFinish_()
			arg_428_1.onSingleLineUpdate_ = nil
			arg_428_1.onSingleLineFinish_ = nil
			arg_428_1.state_ = "waiting"
		end

		function arg_428_1.playNext_(arg_430_0)
			if arg_430_0 == 1 then
				arg_428_0:Play417161105(arg_428_1)
			end
		end

		function arg_428_1.onSingleLineUpdate_(arg_431_0)
			local var_431_0 = 0
			local var_431_1 = 1.475

			if var_431_0 < arg_428_1.time_ and arg_428_1.time_ <= var_431_0 + arg_431_0 then
				arg_428_1.talkMaxDuration = 0
				arg_428_1.dialogCg_.alpha = 1

				arg_428_1.dialog_:SetActive(true)
				SetActive(arg_428_1.leftNameGo_, true)

				local var_431_2 = arg_428_1:FormatText(StoryNameCfg[595].name)

				arg_428_1.leftNameTxt_.text = var_431_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_428_1.leftNameTxt_.transform)

				arg_428_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_428_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_428_1:RecordName(arg_428_1.leftNameTxt_.text)
				SetActive(arg_428_1.iconTrs_.gameObject, false)
				arg_428_1.callingController_:SetSelectedState("normal")

				local var_431_3 = arg_428_1:GetWordFromCfg(417161104)
				local var_431_4 = arg_428_1:FormatText(var_431_3.content)

				arg_428_1.text_.text = var_431_4

				LuaForUtil.ClearLinePrefixSymbol(arg_428_1.text_)

				local var_431_5 = 59
				local var_431_6 = utf8.len(var_431_4)
				local var_431_7 = var_431_5 <= 0 and var_431_1 or var_431_1 * (var_431_6 / var_431_5)

				if var_431_7 > 0 and var_431_1 < var_431_7 then
					arg_428_1.talkMaxDuration = var_431_7

					if var_431_7 + var_431_0 > arg_428_1.duration_ then
						arg_428_1.duration_ = var_431_7 + var_431_0
					end
				end

				arg_428_1.text_.text = var_431_4
				arg_428_1.typewritter.percent = 0

				arg_428_1.typewritter:SetDirty()
				arg_428_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161104", "story_v_out_417161.awb") ~= 0 then
					local var_431_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161104", "story_v_out_417161.awb") / 1000

					if var_431_8 + var_431_0 > arg_428_1.duration_ then
						arg_428_1.duration_ = var_431_8 + var_431_0
					end

					if var_431_3.prefab_name ~= "" and arg_428_1.actors_[var_431_3.prefab_name] ~= nil then
						local var_431_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_428_1.actors_[var_431_3.prefab_name].transform, "story_v_out_417161", "417161104", "story_v_out_417161.awb")

						arg_428_1:RecordAudio("417161104", var_431_9)
						arg_428_1:RecordAudio("417161104", var_431_9)
					else
						arg_428_1:AudioAction("play", "voice", "story_v_out_417161", "417161104", "story_v_out_417161.awb")
					end

					arg_428_1:RecordHistoryTalkVoice("story_v_out_417161", "417161104", "story_v_out_417161.awb")
				end

				arg_428_1:RecordContent(arg_428_1.text_.text)
			end

			local var_431_10 = math.max(var_431_1, arg_428_1.talkMaxDuration)

			if var_431_0 <= arg_428_1.time_ and arg_428_1.time_ < var_431_0 + var_431_10 then
				arg_428_1.typewritter.percent = (arg_428_1.time_ - var_431_0) / var_431_10

				arg_428_1.typewritter:SetDirty()
			end

			if arg_428_1.time_ >= var_431_0 + var_431_10 and arg_428_1.time_ < var_431_0 + var_431_10 + arg_431_0 then
				arg_428_1.typewritter.percent = 1

				arg_428_1.typewritter:SetDirty()
				arg_428_1:ShowNextGo(true)
			end
		end
	end,
	Play417161105 = function(arg_432_0, arg_432_1)
		arg_432_1.time_ = 0
		arg_432_1.frameCnt_ = 0
		arg_432_1.state_ = "playing"
		arg_432_1.curTalkId_ = 417161105
		arg_432_1.duration_ = 1.93

		SetActive(arg_432_1.tipsGo_, false)

		function arg_432_1.onSingleLineFinish_()
			arg_432_1.onSingleLineUpdate_ = nil
			arg_432_1.onSingleLineFinish_ = nil
			arg_432_1.state_ = "waiting"
		end

		function arg_432_1.playNext_(arg_434_0)
			if arg_434_0 == 1 then
				arg_432_0:Play417161106(arg_432_1)
			end
		end

		function arg_432_1.onSingleLineUpdate_(arg_435_0)
			local var_435_0 = arg_432_1.actors_["1060"]
			local var_435_1 = 0

			if var_435_1 < arg_432_1.time_ and arg_432_1.time_ <= var_435_1 + arg_435_0 and not isNil(var_435_0) and arg_432_1.var_.actorSpriteComps1060 == nil then
				arg_432_1.var_.actorSpriteComps1060 = var_435_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_435_2 = 0.2

			if var_435_1 <= arg_432_1.time_ and arg_432_1.time_ < var_435_1 + var_435_2 and not isNil(var_435_0) then
				local var_435_3 = (arg_432_1.time_ - var_435_1) / var_435_2

				if arg_432_1.var_.actorSpriteComps1060 then
					for iter_435_0, iter_435_1 in pairs(arg_432_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_435_1 then
							if arg_432_1.isInRecall_ then
								local var_435_4 = Mathf.Lerp(iter_435_1.color.r, arg_432_1.hightColor1.r, var_435_3)
								local var_435_5 = Mathf.Lerp(iter_435_1.color.g, arg_432_1.hightColor1.g, var_435_3)
								local var_435_6 = Mathf.Lerp(iter_435_1.color.b, arg_432_1.hightColor1.b, var_435_3)

								iter_435_1.color = Color.New(var_435_4, var_435_5, var_435_6)
							else
								local var_435_7 = Mathf.Lerp(iter_435_1.color.r, 1, var_435_3)

								iter_435_1.color = Color.New(var_435_7, var_435_7, var_435_7)
							end
						end
					end
				end
			end

			if arg_432_1.time_ >= var_435_1 + var_435_2 and arg_432_1.time_ < var_435_1 + var_435_2 + arg_435_0 and not isNil(var_435_0) and arg_432_1.var_.actorSpriteComps1060 then
				for iter_435_2, iter_435_3 in pairs(arg_432_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_435_3 then
						if arg_432_1.isInRecall_ then
							iter_435_3.color = arg_432_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_435_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_432_1.var_.actorSpriteComps1060 = nil
			end

			local var_435_8 = arg_432_1.actors_["10128"]
			local var_435_9 = 0

			if var_435_9 < arg_432_1.time_ and arg_432_1.time_ <= var_435_9 + arg_435_0 and not isNil(var_435_8) and arg_432_1.var_.actorSpriteComps10128 == nil then
				arg_432_1.var_.actorSpriteComps10128 = var_435_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_435_10 = 0.2

			if var_435_9 <= arg_432_1.time_ and arg_432_1.time_ < var_435_9 + var_435_10 and not isNil(var_435_8) then
				local var_435_11 = (arg_432_1.time_ - var_435_9) / var_435_10

				if arg_432_1.var_.actorSpriteComps10128 then
					for iter_435_4, iter_435_5 in pairs(arg_432_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_435_5 then
							if arg_432_1.isInRecall_ then
								local var_435_12 = Mathf.Lerp(iter_435_5.color.r, arg_432_1.hightColor2.r, var_435_11)
								local var_435_13 = Mathf.Lerp(iter_435_5.color.g, arg_432_1.hightColor2.g, var_435_11)
								local var_435_14 = Mathf.Lerp(iter_435_5.color.b, arg_432_1.hightColor2.b, var_435_11)

								iter_435_5.color = Color.New(var_435_12, var_435_13, var_435_14)
							else
								local var_435_15 = Mathf.Lerp(iter_435_5.color.r, 0.5, var_435_11)

								iter_435_5.color = Color.New(var_435_15, var_435_15, var_435_15)
							end
						end
					end
				end
			end

			if arg_432_1.time_ >= var_435_9 + var_435_10 and arg_432_1.time_ < var_435_9 + var_435_10 + arg_435_0 and not isNil(var_435_8) and arg_432_1.var_.actorSpriteComps10128 then
				for iter_435_6, iter_435_7 in pairs(arg_432_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_435_7 then
						if arg_432_1.isInRecall_ then
							iter_435_7.color = arg_432_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_435_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_432_1.var_.actorSpriteComps10128 = nil
			end

			local var_435_16 = 0
			local var_435_17 = 0.275

			if var_435_16 < arg_432_1.time_ and arg_432_1.time_ <= var_435_16 + arg_435_0 then
				arg_432_1.talkMaxDuration = 0
				arg_432_1.dialogCg_.alpha = 1

				arg_432_1.dialog_:SetActive(true)
				SetActive(arg_432_1.leftNameGo_, true)

				local var_435_18 = arg_432_1:FormatText(StoryNameCfg[584].name)

				arg_432_1.leftNameTxt_.text = var_435_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_432_1.leftNameTxt_.transform)

				arg_432_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_432_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_432_1:RecordName(arg_432_1.leftNameTxt_.text)
				SetActive(arg_432_1.iconTrs_.gameObject, false)
				arg_432_1.callingController_:SetSelectedState("normal")

				local var_435_19 = arg_432_1:GetWordFromCfg(417161105)
				local var_435_20 = arg_432_1:FormatText(var_435_19.content)

				arg_432_1.text_.text = var_435_20

				LuaForUtil.ClearLinePrefixSymbol(arg_432_1.text_)

				local var_435_21 = 11
				local var_435_22 = utf8.len(var_435_20)
				local var_435_23 = var_435_21 <= 0 and var_435_17 or var_435_17 * (var_435_22 / var_435_21)

				if var_435_23 > 0 and var_435_17 < var_435_23 then
					arg_432_1.talkMaxDuration = var_435_23

					if var_435_23 + var_435_16 > arg_432_1.duration_ then
						arg_432_1.duration_ = var_435_23 + var_435_16
					end
				end

				arg_432_1.text_.text = var_435_20
				arg_432_1.typewritter.percent = 0

				arg_432_1.typewritter:SetDirty()
				arg_432_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161105", "story_v_out_417161.awb") ~= 0 then
					local var_435_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161105", "story_v_out_417161.awb") / 1000

					if var_435_24 + var_435_16 > arg_432_1.duration_ then
						arg_432_1.duration_ = var_435_24 + var_435_16
					end

					if var_435_19.prefab_name ~= "" and arg_432_1.actors_[var_435_19.prefab_name] ~= nil then
						local var_435_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_432_1.actors_[var_435_19.prefab_name].transform, "story_v_out_417161", "417161105", "story_v_out_417161.awb")

						arg_432_1:RecordAudio("417161105", var_435_25)
						arg_432_1:RecordAudio("417161105", var_435_25)
					else
						arg_432_1:AudioAction("play", "voice", "story_v_out_417161", "417161105", "story_v_out_417161.awb")
					end

					arg_432_1:RecordHistoryTalkVoice("story_v_out_417161", "417161105", "story_v_out_417161.awb")
				end

				arg_432_1:RecordContent(arg_432_1.text_.text)
			end

			local var_435_26 = math.max(var_435_17, arg_432_1.talkMaxDuration)

			if var_435_16 <= arg_432_1.time_ and arg_432_1.time_ < var_435_16 + var_435_26 then
				arg_432_1.typewritter.percent = (arg_432_1.time_ - var_435_16) / var_435_26

				arg_432_1.typewritter:SetDirty()
			end

			if arg_432_1.time_ >= var_435_16 + var_435_26 and arg_432_1.time_ < var_435_16 + var_435_26 + arg_435_0 then
				arg_432_1.typewritter.percent = 1

				arg_432_1.typewritter:SetDirty()
				arg_432_1:ShowNextGo(true)
			end
		end
	end,
	Play417161106 = function(arg_436_0, arg_436_1)
		arg_436_1.time_ = 0
		arg_436_1.frameCnt_ = 0
		arg_436_1.state_ = "playing"
		arg_436_1.curTalkId_ = 417161106
		arg_436_1.duration_ = 2.43

		SetActive(arg_436_1.tipsGo_, false)

		function arg_436_1.onSingleLineFinish_()
			arg_436_1.onSingleLineUpdate_ = nil
			arg_436_1.onSingleLineFinish_ = nil
			arg_436_1.state_ = "waiting"
		end

		function arg_436_1.playNext_(arg_438_0)
			if arg_438_0 == 1 then
				arg_436_0:Play417161107(arg_436_1)
			end
		end

		function arg_436_1.onSingleLineUpdate_(arg_439_0)
			local var_439_0 = arg_436_1.actors_["10128"]
			local var_439_1 = 0

			if var_439_1 < arg_436_1.time_ and arg_436_1.time_ <= var_439_1 + arg_439_0 and not isNil(var_439_0) and arg_436_1.var_.actorSpriteComps10128 == nil then
				arg_436_1.var_.actorSpriteComps10128 = var_439_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_439_2 = 0.2

			if var_439_1 <= arg_436_1.time_ and arg_436_1.time_ < var_439_1 + var_439_2 and not isNil(var_439_0) then
				local var_439_3 = (arg_436_1.time_ - var_439_1) / var_439_2

				if arg_436_1.var_.actorSpriteComps10128 then
					for iter_439_0, iter_439_1 in pairs(arg_436_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_439_1 then
							if arg_436_1.isInRecall_ then
								local var_439_4 = Mathf.Lerp(iter_439_1.color.r, arg_436_1.hightColor1.r, var_439_3)
								local var_439_5 = Mathf.Lerp(iter_439_1.color.g, arg_436_1.hightColor1.g, var_439_3)
								local var_439_6 = Mathf.Lerp(iter_439_1.color.b, arg_436_1.hightColor1.b, var_439_3)

								iter_439_1.color = Color.New(var_439_4, var_439_5, var_439_6)
							else
								local var_439_7 = Mathf.Lerp(iter_439_1.color.r, 1, var_439_3)

								iter_439_1.color = Color.New(var_439_7, var_439_7, var_439_7)
							end
						end
					end
				end
			end

			if arg_436_1.time_ >= var_439_1 + var_439_2 and arg_436_1.time_ < var_439_1 + var_439_2 + arg_439_0 and not isNil(var_439_0) and arg_436_1.var_.actorSpriteComps10128 then
				for iter_439_2, iter_439_3 in pairs(arg_436_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_439_3 then
						if arg_436_1.isInRecall_ then
							iter_439_3.color = arg_436_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_439_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_436_1.var_.actorSpriteComps10128 = nil
			end

			local var_439_8 = arg_436_1.actors_["1060"]
			local var_439_9 = 0

			if var_439_9 < arg_436_1.time_ and arg_436_1.time_ <= var_439_9 + arg_439_0 and not isNil(var_439_8) and arg_436_1.var_.actorSpriteComps1060 == nil then
				arg_436_1.var_.actorSpriteComps1060 = var_439_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_439_10 = 0.2

			if var_439_9 <= arg_436_1.time_ and arg_436_1.time_ < var_439_9 + var_439_10 and not isNil(var_439_8) then
				local var_439_11 = (arg_436_1.time_ - var_439_9) / var_439_10

				if arg_436_1.var_.actorSpriteComps1060 then
					for iter_439_4, iter_439_5 in pairs(arg_436_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_439_5 then
							if arg_436_1.isInRecall_ then
								local var_439_12 = Mathf.Lerp(iter_439_5.color.r, arg_436_1.hightColor2.r, var_439_11)
								local var_439_13 = Mathf.Lerp(iter_439_5.color.g, arg_436_1.hightColor2.g, var_439_11)
								local var_439_14 = Mathf.Lerp(iter_439_5.color.b, arg_436_1.hightColor2.b, var_439_11)

								iter_439_5.color = Color.New(var_439_12, var_439_13, var_439_14)
							else
								local var_439_15 = Mathf.Lerp(iter_439_5.color.r, 0.5, var_439_11)

								iter_439_5.color = Color.New(var_439_15, var_439_15, var_439_15)
							end
						end
					end
				end
			end

			if arg_436_1.time_ >= var_439_9 + var_439_10 and arg_436_1.time_ < var_439_9 + var_439_10 + arg_439_0 and not isNil(var_439_8) and arg_436_1.var_.actorSpriteComps1060 then
				for iter_439_6, iter_439_7 in pairs(arg_436_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_439_7 then
						if arg_436_1.isInRecall_ then
							iter_439_7.color = arg_436_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_439_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_436_1.var_.actorSpriteComps1060 = nil
			end

			local var_439_16 = arg_436_1.actors_["10128"].transform
			local var_439_17 = 0

			if var_439_17 < arg_436_1.time_ and arg_436_1.time_ <= var_439_17 + arg_439_0 then
				arg_436_1.var_.moveOldPos10128 = var_439_16.localPosition
				var_439_16.localScale = Vector3.New(1, 1, 1)

				arg_436_1:CheckSpriteTmpPos("10128", 2)

				local var_439_18 = var_439_16.childCount

				for iter_439_8 = 0, var_439_18 - 1 do
					local var_439_19 = var_439_16:GetChild(iter_439_8)

					if var_439_19.name == "split_6" or not string.find(var_439_19.name, "split") then
						var_439_19.gameObject:SetActive(true)
					else
						var_439_19.gameObject:SetActive(false)
					end
				end
			end

			local var_439_20 = 0.001

			if var_439_17 <= arg_436_1.time_ and arg_436_1.time_ < var_439_17 + var_439_20 then
				local var_439_21 = (arg_436_1.time_ - var_439_17) / var_439_20
				local var_439_22 = Vector3.New(-390, -347, -300)

				var_439_16.localPosition = Vector3.Lerp(arg_436_1.var_.moveOldPos10128, var_439_22, var_439_21)
			end

			if arg_436_1.time_ >= var_439_17 + var_439_20 and arg_436_1.time_ < var_439_17 + var_439_20 + arg_439_0 then
				var_439_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_439_23 = 0
			local var_439_24 = 0.275

			if var_439_23 < arg_436_1.time_ and arg_436_1.time_ <= var_439_23 + arg_439_0 then
				arg_436_1.talkMaxDuration = 0
				arg_436_1.dialogCg_.alpha = 1

				arg_436_1.dialog_:SetActive(true)
				SetActive(arg_436_1.leftNameGo_, true)

				local var_439_25 = arg_436_1:FormatText(StoryNameCfg[595].name)

				arg_436_1.leftNameTxt_.text = var_439_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_436_1.leftNameTxt_.transform)

				arg_436_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_436_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_436_1:RecordName(arg_436_1.leftNameTxt_.text)
				SetActive(arg_436_1.iconTrs_.gameObject, false)
				arg_436_1.callingController_:SetSelectedState("normal")

				local var_439_26 = arg_436_1:GetWordFromCfg(417161106)
				local var_439_27 = arg_436_1:FormatText(var_439_26.content)

				arg_436_1.text_.text = var_439_27

				LuaForUtil.ClearLinePrefixSymbol(arg_436_1.text_)

				local var_439_28 = 11
				local var_439_29 = utf8.len(var_439_27)
				local var_439_30 = var_439_28 <= 0 and var_439_24 or var_439_24 * (var_439_29 / var_439_28)

				if var_439_30 > 0 and var_439_24 < var_439_30 then
					arg_436_1.talkMaxDuration = var_439_30

					if var_439_30 + var_439_23 > arg_436_1.duration_ then
						arg_436_1.duration_ = var_439_30 + var_439_23
					end
				end

				arg_436_1.text_.text = var_439_27
				arg_436_1.typewritter.percent = 0

				arg_436_1.typewritter:SetDirty()
				arg_436_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161106", "story_v_out_417161.awb") ~= 0 then
					local var_439_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161106", "story_v_out_417161.awb") / 1000

					if var_439_31 + var_439_23 > arg_436_1.duration_ then
						arg_436_1.duration_ = var_439_31 + var_439_23
					end

					if var_439_26.prefab_name ~= "" and arg_436_1.actors_[var_439_26.prefab_name] ~= nil then
						local var_439_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_436_1.actors_[var_439_26.prefab_name].transform, "story_v_out_417161", "417161106", "story_v_out_417161.awb")

						arg_436_1:RecordAudio("417161106", var_439_32)
						arg_436_1:RecordAudio("417161106", var_439_32)
					else
						arg_436_1:AudioAction("play", "voice", "story_v_out_417161", "417161106", "story_v_out_417161.awb")
					end

					arg_436_1:RecordHistoryTalkVoice("story_v_out_417161", "417161106", "story_v_out_417161.awb")
				end

				arg_436_1:RecordContent(arg_436_1.text_.text)
			end

			local var_439_33 = math.max(var_439_24, arg_436_1.talkMaxDuration)

			if var_439_23 <= arg_436_1.time_ and arg_436_1.time_ < var_439_23 + var_439_33 then
				arg_436_1.typewritter.percent = (arg_436_1.time_ - var_439_23) / var_439_33

				arg_436_1.typewritter:SetDirty()
			end

			if arg_436_1.time_ >= var_439_23 + var_439_33 and arg_436_1.time_ < var_439_23 + var_439_33 + arg_439_0 then
				arg_436_1.typewritter.percent = 1

				arg_436_1.typewritter:SetDirty()
				arg_436_1:ShowNextGo(true)
			end
		end
	end,
	Play417161107 = function(arg_440_0, arg_440_1)
		arg_440_1.time_ = 0
		arg_440_1.frameCnt_ = 0
		arg_440_1.state_ = "playing"
		arg_440_1.curTalkId_ = 417161107
		arg_440_1.duration_ = 5

		SetActive(arg_440_1.tipsGo_, false)

		function arg_440_1.onSingleLineFinish_()
			arg_440_1.onSingleLineUpdate_ = nil
			arg_440_1.onSingleLineFinish_ = nil
			arg_440_1.state_ = "waiting"
		end

		function arg_440_1.playNext_(arg_442_0)
			if arg_442_0 == 1 then
				arg_440_0:Play417161108(arg_440_1)
			end
		end

		function arg_440_1.onSingleLineUpdate_(arg_443_0)
			local var_443_0 = arg_440_1.actors_["10128"]
			local var_443_1 = 0

			if var_443_1 < arg_440_1.time_ and arg_440_1.time_ <= var_443_1 + arg_443_0 and not isNil(var_443_0) and arg_440_1.var_.actorSpriteComps10128 == nil then
				arg_440_1.var_.actorSpriteComps10128 = var_443_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_443_2 = 0.2

			if var_443_1 <= arg_440_1.time_ and arg_440_1.time_ < var_443_1 + var_443_2 and not isNil(var_443_0) then
				local var_443_3 = (arg_440_1.time_ - var_443_1) / var_443_2

				if arg_440_1.var_.actorSpriteComps10128 then
					for iter_443_0, iter_443_1 in pairs(arg_440_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_443_1 then
							if arg_440_1.isInRecall_ then
								local var_443_4 = Mathf.Lerp(iter_443_1.color.r, arg_440_1.hightColor2.r, var_443_3)
								local var_443_5 = Mathf.Lerp(iter_443_1.color.g, arg_440_1.hightColor2.g, var_443_3)
								local var_443_6 = Mathf.Lerp(iter_443_1.color.b, arg_440_1.hightColor2.b, var_443_3)

								iter_443_1.color = Color.New(var_443_4, var_443_5, var_443_6)
							else
								local var_443_7 = Mathf.Lerp(iter_443_1.color.r, 0.5, var_443_3)

								iter_443_1.color = Color.New(var_443_7, var_443_7, var_443_7)
							end
						end
					end
				end
			end

			if arg_440_1.time_ >= var_443_1 + var_443_2 and arg_440_1.time_ < var_443_1 + var_443_2 + arg_443_0 and not isNil(var_443_0) and arg_440_1.var_.actorSpriteComps10128 then
				for iter_443_2, iter_443_3 in pairs(arg_440_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_443_3 then
						if arg_440_1.isInRecall_ then
							iter_443_3.color = arg_440_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_443_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_440_1.var_.actorSpriteComps10128 = nil
			end

			local var_443_8 = arg_440_1.actors_["10128"].transform
			local var_443_9 = 0

			if var_443_9 < arg_440_1.time_ and arg_440_1.time_ <= var_443_9 + arg_443_0 then
				arg_440_1.var_.moveOldPos10128 = var_443_8.localPosition
				var_443_8.localScale = Vector3.New(1, 1, 1)

				arg_440_1:CheckSpriteTmpPos("10128", 7)

				local var_443_10 = var_443_8.childCount

				for iter_443_4 = 0, var_443_10 - 1 do
					local var_443_11 = var_443_8:GetChild(iter_443_4)

					if var_443_11.name == "" or not string.find(var_443_11.name, "split") then
						var_443_11.gameObject:SetActive(true)
					else
						var_443_11.gameObject:SetActive(false)
					end
				end
			end

			local var_443_12 = 0.001

			if var_443_9 <= arg_440_1.time_ and arg_440_1.time_ < var_443_9 + var_443_12 then
				local var_443_13 = (arg_440_1.time_ - var_443_9) / var_443_12
				local var_443_14 = Vector3.New(0, -2000, -300)

				var_443_8.localPosition = Vector3.Lerp(arg_440_1.var_.moveOldPos10128, var_443_14, var_443_13)
			end

			if arg_440_1.time_ >= var_443_9 + var_443_12 and arg_440_1.time_ < var_443_9 + var_443_12 + arg_443_0 then
				var_443_8.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_443_15 = arg_440_1.actors_["1060"].transform
			local var_443_16 = 0

			if var_443_16 < arg_440_1.time_ and arg_440_1.time_ <= var_443_16 + arg_443_0 then
				arg_440_1.var_.moveOldPos1060 = var_443_15.localPosition
				var_443_15.localScale = Vector3.New(1, 1, 1)

				arg_440_1:CheckSpriteTmpPos("1060", 7)

				local var_443_17 = var_443_15.childCount

				for iter_443_5 = 0, var_443_17 - 1 do
					local var_443_18 = var_443_15:GetChild(iter_443_5)

					if var_443_18.name == "" or not string.find(var_443_18.name, "split") then
						var_443_18.gameObject:SetActive(true)
					else
						var_443_18.gameObject:SetActive(false)
					end
				end
			end

			local var_443_19 = 0.001

			if var_443_16 <= arg_440_1.time_ and arg_440_1.time_ < var_443_16 + var_443_19 then
				local var_443_20 = (arg_440_1.time_ - var_443_16) / var_443_19
				local var_443_21 = Vector3.New(0, -2000, -40)

				var_443_15.localPosition = Vector3.Lerp(arg_440_1.var_.moveOldPos1060, var_443_21, var_443_20)
			end

			if arg_440_1.time_ >= var_443_16 + var_443_19 and arg_440_1.time_ < var_443_16 + var_443_19 + arg_443_0 then
				var_443_15.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_443_22 = 0
			local var_443_23 = 0.925

			if var_443_22 < arg_440_1.time_ and arg_440_1.time_ <= var_443_22 + arg_443_0 then
				arg_440_1.talkMaxDuration = 0
				arg_440_1.dialogCg_.alpha = 1

				arg_440_1.dialog_:SetActive(true)
				SetActive(arg_440_1.leftNameGo_, false)

				arg_440_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_440_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_440_1:RecordName(arg_440_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_440_1.iconTrs_.gameObject, false)
				arg_440_1.callingController_:SetSelectedState("normal")

				local var_443_24 = arg_440_1:GetWordFromCfg(417161107)
				local var_443_25 = arg_440_1:FormatText(var_443_24.content)

				arg_440_1.text_.text = var_443_25

				LuaForUtil.ClearLinePrefixSymbol(arg_440_1.text_)

				local var_443_26 = 37
				local var_443_27 = utf8.len(var_443_25)
				local var_443_28 = var_443_26 <= 0 and var_443_23 or var_443_23 * (var_443_27 / var_443_26)

				if var_443_28 > 0 and var_443_23 < var_443_28 then
					arg_440_1.talkMaxDuration = var_443_28

					if var_443_28 + var_443_22 > arg_440_1.duration_ then
						arg_440_1.duration_ = var_443_28 + var_443_22
					end
				end

				arg_440_1.text_.text = var_443_25
				arg_440_1.typewritter.percent = 0

				arg_440_1.typewritter:SetDirty()
				arg_440_1:ShowNextGo(false)
				arg_440_1:RecordContent(arg_440_1.text_.text)
			end

			local var_443_29 = math.max(var_443_23, arg_440_1.talkMaxDuration)

			if var_443_22 <= arg_440_1.time_ and arg_440_1.time_ < var_443_22 + var_443_29 then
				arg_440_1.typewritter.percent = (arg_440_1.time_ - var_443_22) / var_443_29

				arg_440_1.typewritter:SetDirty()
			end

			if arg_440_1.time_ >= var_443_22 + var_443_29 and arg_440_1.time_ < var_443_22 + var_443_29 + arg_443_0 then
				arg_440_1.typewritter.percent = 1

				arg_440_1.typewritter:SetDirty()
				arg_440_1:ShowNextGo(true)
			end
		end
	end,
	Play417161108 = function(arg_444_0, arg_444_1)
		arg_444_1.time_ = 0
		arg_444_1.frameCnt_ = 0
		arg_444_1.state_ = "playing"
		arg_444_1.curTalkId_ = 417161108
		arg_444_1.duration_ = 5

		SetActive(arg_444_1.tipsGo_, false)

		function arg_444_1.onSingleLineFinish_()
			arg_444_1.onSingleLineUpdate_ = nil
			arg_444_1.onSingleLineFinish_ = nil
			arg_444_1.state_ = "waiting"
		end

		function arg_444_1.playNext_(arg_446_0)
			if arg_446_0 == 1 then
				arg_444_0:Play417161109(arg_444_1)
			end
		end

		function arg_444_1.onSingleLineUpdate_(arg_447_0)
			local var_447_0 = 0.499999999999
			local var_447_1 = 1

			if var_447_0 < arg_444_1.time_ and arg_444_1.time_ <= var_447_0 + arg_447_0 then
				local var_447_2 = "play"
				local var_447_3 = "effect"

				arg_444_1:AudioAction(var_447_2, var_447_3, "se_story_1311", "se_story_1311_knockcar", "")
			end

			local var_447_4 = 0
			local var_447_5 = 1.3

			if var_447_4 < arg_444_1.time_ and arg_444_1.time_ <= var_447_4 + arg_447_0 then
				arg_444_1.talkMaxDuration = 0
				arg_444_1.dialogCg_.alpha = 1

				arg_444_1.dialog_:SetActive(true)
				SetActive(arg_444_1.leftNameGo_, false)

				arg_444_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_444_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_444_1:RecordName(arg_444_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_444_1.iconTrs_.gameObject, false)
				arg_444_1.callingController_:SetSelectedState("normal")

				local var_447_6 = arg_444_1:GetWordFromCfg(417161108)
				local var_447_7 = arg_444_1:FormatText(var_447_6.content)

				arg_444_1.text_.text = var_447_7

				LuaForUtil.ClearLinePrefixSymbol(arg_444_1.text_)

				local var_447_8 = 52
				local var_447_9 = utf8.len(var_447_7)
				local var_447_10 = var_447_8 <= 0 and var_447_5 or var_447_5 * (var_447_9 / var_447_8)

				if var_447_10 > 0 and var_447_5 < var_447_10 then
					arg_444_1.talkMaxDuration = var_447_10

					if var_447_10 + var_447_4 > arg_444_1.duration_ then
						arg_444_1.duration_ = var_447_10 + var_447_4
					end
				end

				arg_444_1.text_.text = var_447_7
				arg_444_1.typewritter.percent = 0

				arg_444_1.typewritter:SetDirty()
				arg_444_1:ShowNextGo(false)
				arg_444_1:RecordContent(arg_444_1.text_.text)
			end

			local var_447_11 = math.max(var_447_5, arg_444_1.talkMaxDuration)

			if var_447_4 <= arg_444_1.time_ and arg_444_1.time_ < var_447_4 + var_447_11 then
				arg_444_1.typewritter.percent = (arg_444_1.time_ - var_447_4) / var_447_11

				arg_444_1.typewritter:SetDirty()
			end

			if arg_444_1.time_ >= var_447_4 + var_447_11 and arg_444_1.time_ < var_447_4 + var_447_11 + arg_447_0 then
				arg_444_1.typewritter.percent = 1

				arg_444_1.typewritter:SetDirty()
				arg_444_1:ShowNextGo(true)
			end
		end
	end,
	Play417161109 = function(arg_448_0, arg_448_1)
		arg_448_1.time_ = 0
		arg_448_1.frameCnt_ = 0
		arg_448_1.state_ = "playing"
		arg_448_1.curTalkId_ = 417161109
		arg_448_1.duration_ = 2.1

		SetActive(arg_448_1.tipsGo_, false)

		function arg_448_1.onSingleLineFinish_()
			arg_448_1.onSingleLineUpdate_ = nil
			arg_448_1.onSingleLineFinish_ = nil
			arg_448_1.state_ = "waiting"
		end

		function arg_448_1.playNext_(arg_450_0)
			if arg_450_0 == 1 then
				arg_448_0:Play417161110(arg_448_1)
			end
		end

		function arg_448_1.onSingleLineUpdate_(arg_451_0)
			local var_451_0 = 0

			if var_451_0 < arg_448_1.time_ and arg_448_1.time_ <= var_451_0 + arg_451_0 then
				local var_451_1 = manager.ui.mainCamera.transform.localPosition
				local var_451_2 = Vector3.New(0, 0, 10) + Vector3.New(var_451_1.x, var_451_1.y, 0)
				local var_451_3 = arg_448_1.bgs_.STblack

				var_451_3.transform.localPosition = var_451_2
				var_451_3.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_451_4 = var_451_3:GetComponent("SpriteRenderer")

				if var_451_4 and var_451_4.sprite then
					local var_451_5 = (var_451_3.transform.localPosition - var_451_1).z
					local var_451_6 = manager.ui.mainCameraCom_
					local var_451_7 = 2 * var_451_5 * Mathf.Tan(var_451_6.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_451_8 = var_451_7 * var_451_6.aspect
					local var_451_9 = var_451_4.sprite.bounds.size.x
					local var_451_10 = var_451_4.sprite.bounds.size.y
					local var_451_11 = var_451_8 / var_451_9
					local var_451_12 = var_451_7 / var_451_10
					local var_451_13 = var_451_12 < var_451_11 and var_451_11 or var_451_12

					var_451_3.transform.localScale = Vector3.New(var_451_13, var_451_13, 0)
				end

				for iter_451_0, iter_451_1 in pairs(arg_448_1.bgs_) do
					if iter_451_0 ~= "STblack" then
						iter_451_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_451_14 = 0

			if var_451_14 < arg_448_1.time_ and arg_448_1.time_ <= var_451_14 + arg_451_0 then
				arg_448_1.cswbg_:SetActive(true)

				local var_451_15 = arg_448_1.cswt_:GetComponent("RectTransform")

				arg_448_1.cswt_.alignment = UnityEngine.TextAnchor.MiddleCenter
				var_451_15.offsetMin = Vector2.New(0, 0)
				var_451_15.offsetMax = Vector2.New(0, 0)

				local var_451_16 = arg_448_1:GetWordFromCfg(419107)
				local var_451_17 = arg_448_1:FormatText(var_451_16.content)

				arg_448_1.cswt_.text = var_451_17

				LuaForUtil.ClearLinePrefixSymbol(arg_448_1.cswt_)

				arg_448_1.cswt_.fontSize = 120
				arg_448_1.cswt_:GetComponent("Text").color = Color(1, 1, 1)
				arg_448_1.cswt_.font = Asset.Load("Fonts/SourceHanSerifCN-Bold-3.0")
			end

			local var_451_18 = 0

			if var_451_18 < arg_448_1.time_ and arg_448_1.time_ <= var_451_18 + arg_451_0 then
				arg_448_1.fswbg_:SetActive(true)
				arg_448_1.dialog_:SetActive(false)

				arg_448_1.fswtw_.percent = 0

				local var_451_19 = arg_448_1:GetWordFromCfg(417161109)
				local var_451_20 = arg_448_1:FormatText(var_451_19.content)

				arg_448_1.fswt_.text = var_451_20

				LuaForUtil.ClearLinePrefixSymbol(arg_448_1.fswt_)

				arg_448_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_448_1.fswtw_:SetDirty()

				arg_448_1.typewritterCharCountI18N = 0

				arg_448_1:ShowNextGo(false)
			end

			local var_451_21 = 1.03333333333333

			if var_451_21 < arg_448_1.time_ and arg_448_1.time_ <= var_451_21 + arg_451_0 then
				arg_448_1.var_.oldValueTypewriter = arg_448_1.fswtw_.percent

				arg_448_1:ShowNextGo(false)
			end

			local var_451_22 = 4
			local var_451_23 = 0.266666666666667
			local var_451_24 = arg_448_1:GetWordFromCfg(417161109)
			local var_451_25 = arg_448_1:FormatText(var_451_24.content)
			local var_451_26, var_451_27 = arg_448_1:GetPercentByPara(var_451_25, 1)

			if var_451_21 < arg_448_1.time_ and arg_448_1.time_ <= var_451_21 + arg_451_0 then
				arg_448_1.talkMaxDuration = 0

				local var_451_28 = var_451_22 <= 0 and var_451_23 or var_451_23 * ((var_451_27 - arg_448_1.typewritterCharCountI18N) / var_451_22)

				if var_451_28 > 0 and var_451_23 < var_451_28 then
					arg_448_1.talkMaxDuration = var_451_28

					if var_451_28 + var_451_21 > arg_448_1.duration_ then
						arg_448_1.duration_ = var_451_28 + var_451_21
					end
				end
			end

			local var_451_29 = 0.266666666666667
			local var_451_30 = math.max(var_451_29, arg_448_1.talkMaxDuration)

			if var_451_21 <= arg_448_1.time_ and arg_448_1.time_ < var_451_21 + var_451_30 then
				local var_451_31 = (arg_448_1.time_ - var_451_21) / var_451_30

				arg_448_1.fswtw_.percent = Mathf.Lerp(arg_448_1.var_.oldValueTypewriter, var_451_26, var_451_31)
				arg_448_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_448_1.fswtw_:SetDirty()
			end

			if arg_448_1.time_ >= var_451_21 + var_451_30 and arg_448_1.time_ < var_451_21 + var_451_30 + arg_451_0 then
				arg_448_1.fswtw_.percent = var_451_26

				arg_448_1.fswtw_:SetDirty()
				arg_448_1:ShowNextGo(true)

				arg_448_1.typewritterCharCountI18N = var_451_27
			end

			local var_451_32 = 0

			if var_451_32 < arg_448_1.time_ and arg_448_1.time_ <= var_451_32 + arg_451_0 then
				local var_451_33 = arg_448_1.fswbg_.transform:Find("textbox/adapt/content") or arg_448_1.fswbg_.transform:Find("textbox/content")
				local var_451_34 = var_451_33:GetComponent("Text")
				local var_451_35 = var_451_33:GetComponent("RectTransform")

				var_451_34.alignment = UnityEngine.TextAnchor.LowerCenter
				var_451_35.offsetMin = Vector2.New(0, 0)
				var_451_35.offsetMax = Vector2.New(0, 0)
			end

			local var_451_36 = 1.03333333333333
			local var_451_37 = 1.066
			local var_451_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161109", "") / 1000

			if var_451_38 > 0 and var_451_37 < var_451_38 and var_451_38 + var_451_36 > arg_448_1.duration_ then
				local var_451_39 = var_451_38

				arg_448_1.duration_ = var_451_38 + var_451_36
			end

			if var_451_36 < arg_448_1.time_ and arg_448_1.time_ <= var_451_36 + arg_451_0 then
				local var_451_40 = "play"
				local var_451_41 = "voice"

				arg_448_1:AudioAction(var_451_40, var_451_41, "story_v_out_417161", "417161109", "")
			end

			local var_451_42 = 0
			local var_451_43 = 0.2

			if var_451_42 < arg_448_1.time_ and arg_448_1.time_ <= var_451_42 + arg_451_0 then
				local var_451_44 = "play"
				local var_451_45 = "music"

				arg_448_1:AudioAction(var_451_44, var_451_45, "ui_battle", "ui_battle_stopbgm", "")

				local var_451_46 = ""
				local var_451_47 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_451_47 ~= "" then
					if arg_448_1.bgmTxt_.text ~= var_451_47 and arg_448_1.bgmTxt_.text ~= "" then
						if arg_448_1.bgmTxt2_.text ~= "" then
							arg_448_1.bgmTxt_.text = arg_448_1.bgmTxt2_.text
						end

						arg_448_1.bgmTxt2_.text = var_451_47

						arg_448_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_448_1.bgmTxt_.text = var_451_47
					end

					if arg_448_1.bgmTimer then
						arg_448_1.bgmTimer:Stop()

						arg_448_1.bgmTimer = nil
					end

					if arg_448_1.settingData.show_music_name == 1 then
						arg_448_1.musicController:SetSelectedState("show")
						arg_448_1.musicAnimator_:Play("open", 0, 0)

						if arg_448_1.settingData.music_time ~= 0 then
							arg_448_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_448_1.settingData.music_time), function()
								if arg_448_1 == nil or isNil(arg_448_1.bgmTxt_) then
									return
								end

								arg_448_1.musicController:SetSelectedState("hide")
								arg_448_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_451_48 = 0.3
			local var_451_49 = 1

			if var_451_48 < arg_448_1.time_ and arg_448_1.time_ <= var_451_48 + arg_451_0 then
				local var_451_50 = "stop"
				local var_451_51 = "music"

				arg_448_1:AudioAction(var_451_50, var_451_51, "bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily.awb")

				local var_451_52 = ""
				local var_451_53 = manager.audio:GetAudioName("bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily")

				if var_451_53 ~= "" then
					if arg_448_1.bgmTxt_.text ~= var_451_53 and arg_448_1.bgmTxt_.text ~= "" then
						if arg_448_1.bgmTxt2_.text ~= "" then
							arg_448_1.bgmTxt_.text = arg_448_1.bgmTxt2_.text
						end

						arg_448_1.bgmTxt2_.text = var_451_53

						arg_448_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_448_1.bgmTxt_.text = var_451_53
					end

					if arg_448_1.bgmTimer then
						arg_448_1.bgmTimer:Stop()

						arg_448_1.bgmTimer = nil
					end

					if arg_448_1.settingData.show_music_name == 1 then
						arg_448_1.musicController:SetSelectedState("show")
						arg_448_1.musicAnimator_:Play("open", 0, 0)

						if arg_448_1.settingData.music_time ~= 0 then
							arg_448_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_448_1.settingData.music_time), function()
								if arg_448_1 == nil or isNil(arg_448_1.bgmTxt_) then
									return
								end

								arg_448_1.musicController:SetSelectedState("hide")
								arg_448_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end
		end
	end,
	Play417161110 = function(arg_454_0, arg_454_1)
		arg_454_1.time_ = 0
		arg_454_1.frameCnt_ = 0
		arg_454_1.state_ = "playing"
		arg_454_1.curTalkId_ = 417161110
		arg_454_1.duration_ = 5.7

		SetActive(arg_454_1.tipsGo_, false)

		function arg_454_1.onSingleLineFinish_()
			arg_454_1.onSingleLineUpdate_ = nil
			arg_454_1.onSingleLineFinish_ = nil
			arg_454_1.state_ = "waiting"
		end

		function arg_454_1.playNext_(arg_456_0)
			if arg_456_0 == 1 then
				arg_454_0:Play417161111(arg_454_1)
			end
		end

		function arg_454_1.onSingleLineUpdate_(arg_457_0)
			local var_457_0 = 0

			if var_457_0 < arg_454_1.time_ and arg_454_1.time_ <= var_457_0 + arg_457_0 then
				arg_454_1.fswbg_:SetActive(true)
				arg_454_1.dialog_:SetActive(false)

				arg_454_1.fswtw_.percent = 0

				local var_457_1 = arg_454_1:GetWordFromCfg(417161110)
				local var_457_2 = arg_454_1:FormatText(var_457_1.content)

				arg_454_1.fswt_.text = var_457_2

				LuaForUtil.ClearLinePrefixSymbol(arg_454_1.fswt_)

				arg_454_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_454_1.fswtw_:SetDirty()

				arg_454_1.typewritterCharCountI18N = 0

				arg_454_1:ShowNextGo(false)
			end

			local var_457_3 = 0.0999999999999999

			if var_457_3 < arg_454_1.time_ and arg_454_1.time_ <= var_457_3 + arg_457_0 then
				arg_454_1.var_.oldValueTypewriter = arg_454_1.fswtw_.percent

				arg_454_1:ShowNextGo(false)
			end

			local var_457_4 = 24
			local var_457_5 = 1.6
			local var_457_6 = arg_454_1:GetWordFromCfg(417161110)
			local var_457_7 = arg_454_1:FormatText(var_457_6.content)
			local var_457_8, var_457_9 = arg_454_1:GetPercentByPara(var_457_7, 1)

			if var_457_3 < arg_454_1.time_ and arg_454_1.time_ <= var_457_3 + arg_457_0 then
				arg_454_1.talkMaxDuration = 0

				local var_457_10 = var_457_4 <= 0 and var_457_5 or var_457_5 * ((var_457_9 - arg_454_1.typewritterCharCountI18N) / var_457_4)

				if var_457_10 > 0 and var_457_5 < var_457_10 then
					arg_454_1.talkMaxDuration = var_457_10

					if var_457_10 + var_457_3 > arg_454_1.duration_ then
						arg_454_1.duration_ = var_457_10 + var_457_3
					end
				end
			end

			local var_457_11 = 1.6
			local var_457_12 = math.max(var_457_11, arg_454_1.talkMaxDuration)

			if var_457_3 <= arg_454_1.time_ and arg_454_1.time_ < var_457_3 + var_457_12 then
				local var_457_13 = (arg_454_1.time_ - var_457_3) / var_457_12

				arg_454_1.fswtw_.percent = Mathf.Lerp(arg_454_1.var_.oldValueTypewriter, var_457_8, var_457_13)
				arg_454_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_454_1.fswtw_:SetDirty()
			end

			if arg_454_1.time_ >= var_457_3 + var_457_12 and arg_454_1.time_ < var_457_3 + var_457_12 + arg_457_0 then
				arg_454_1.fswtw_.percent = var_457_8

				arg_454_1.fswtw_:SetDirty()
				arg_454_1:ShowNextGo(true)

				arg_454_1.typewritterCharCountI18N = var_457_9
			end

			local var_457_14 = 0.1
			local var_457_15 = 5.6
			local var_457_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161110", "") / 1000

			if var_457_16 > 0 and var_457_15 < var_457_16 and var_457_16 + var_457_14 > arg_454_1.duration_ then
				local var_457_17 = var_457_16

				arg_454_1.duration_ = var_457_16 + var_457_14
			end

			if var_457_14 < arg_454_1.time_ and arg_454_1.time_ <= var_457_14 + arg_457_0 then
				local var_457_18 = "play"
				local var_457_19 = "voice"

				arg_454_1:AudioAction(var_457_18, var_457_19, "story_v_out_417161", "417161110", "")
			end

			local var_457_20 = 0
			local var_457_21 = 0.2

			if var_457_20 < arg_454_1.time_ and arg_454_1.time_ <= var_457_20 + arg_457_0 then
				local var_457_22 = "play"
				local var_457_23 = "music"

				arg_454_1:AudioAction(var_457_22, var_457_23, "ui_battle", "ui_battle_stopbgm", "")

				local var_457_24 = ""
				local var_457_25 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_457_25 ~= "" then
					if arg_454_1.bgmTxt_.text ~= var_457_25 and arg_454_1.bgmTxt_.text ~= "" then
						if arg_454_1.bgmTxt2_.text ~= "" then
							arg_454_1.bgmTxt_.text = arg_454_1.bgmTxt2_.text
						end

						arg_454_1.bgmTxt2_.text = var_457_25

						arg_454_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_454_1.bgmTxt_.text = var_457_25
					end

					if arg_454_1.bgmTimer then
						arg_454_1.bgmTimer:Stop()

						arg_454_1.bgmTimer = nil
					end

					if arg_454_1.settingData.show_music_name == 1 then
						arg_454_1.musicController:SetSelectedState("show")
						arg_454_1.musicAnimator_:Play("open", 0, 0)

						if arg_454_1.settingData.music_time ~= 0 then
							arg_454_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_454_1.settingData.music_time), function()
								if arg_454_1 == nil or isNil(arg_454_1.bgmTxt_) then
									return
								end

								arg_454_1.musicController:SetSelectedState("hide")
								arg_454_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_457_26 = 0.5
			local var_457_27 = 1

			if var_457_26 < arg_454_1.time_ and arg_454_1.time_ <= var_457_26 + arg_457_0 then
				local var_457_28 = "play"
				local var_457_29 = "music"

				arg_454_1:AudioAction(var_457_28, var_457_29, "bgm_activity_3_10_story_scheme_1", "bgm_activity_3_10_story_scheme_1", "bgm_activity_3_10_story_scheme_1.awb")

				local var_457_30 = ""
				local var_457_31 = manager.audio:GetAudioName("bgm_activity_3_10_story_scheme_1", "bgm_activity_3_10_story_scheme_1")

				if var_457_31 ~= "" then
					if arg_454_1.bgmTxt_.text ~= var_457_31 and arg_454_1.bgmTxt_.text ~= "" then
						if arg_454_1.bgmTxt2_.text ~= "" then
							arg_454_1.bgmTxt_.text = arg_454_1.bgmTxt2_.text
						end

						arg_454_1.bgmTxt2_.text = var_457_31

						arg_454_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_454_1.bgmTxt_.text = var_457_31
					end

					if arg_454_1.bgmTimer then
						arg_454_1.bgmTimer:Stop()

						arg_454_1.bgmTimer = nil
					end

					if arg_454_1.settingData.show_music_name == 1 then
						arg_454_1.musicController:SetSelectedState("show")
						arg_454_1.musicAnimator_:Play("open", 0, 0)

						if arg_454_1.settingData.music_time ~= 0 then
							arg_454_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_454_1.settingData.music_time), function()
								if arg_454_1 == nil or isNil(arg_454_1.bgmTxt_) then
									return
								end

								arg_454_1.musicController:SetSelectedState("hide")
								arg_454_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end
		end
	end,
	Play417161111 = function(arg_460_0, arg_460_1)
		arg_460_1.time_ = 0
		arg_460_1.frameCnt_ = 0
		arg_460_1.state_ = "playing"
		arg_460_1.curTalkId_ = 417161111
		arg_460_1.duration_ = 3.57

		SetActive(arg_460_1.tipsGo_, false)

		function arg_460_1.onSingleLineFinish_()
			arg_460_1.onSingleLineUpdate_ = nil
			arg_460_1.onSingleLineFinish_ = nil
			arg_460_1.state_ = "waiting"
		end

		function arg_460_1.playNext_(arg_462_0)
			if arg_462_0 == 1 then
				arg_460_0:Play417161112(arg_460_1)
			end
		end

		function arg_460_1.onSingleLineUpdate_(arg_463_0)
			local var_463_0 = arg_460_1.actors_["10128"]
			local var_463_1 = 0

			if var_463_1 < arg_460_1.time_ and arg_460_1.time_ <= var_463_1 + arg_463_0 and not isNil(var_463_0) and arg_460_1.var_.actorSpriteComps10128 == nil then
				arg_460_1.var_.actorSpriteComps10128 = var_463_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_463_2 = 0.2

			if var_463_1 <= arg_460_1.time_ and arg_460_1.time_ < var_463_1 + var_463_2 and not isNil(var_463_0) then
				local var_463_3 = (arg_460_1.time_ - var_463_1) / var_463_2

				if arg_460_1.var_.actorSpriteComps10128 then
					for iter_463_0, iter_463_1 in pairs(arg_460_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_463_1 then
							if arg_460_1.isInRecall_ then
								local var_463_4 = Mathf.Lerp(iter_463_1.color.r, arg_460_1.hightColor1.r, var_463_3)
								local var_463_5 = Mathf.Lerp(iter_463_1.color.g, arg_460_1.hightColor1.g, var_463_3)
								local var_463_6 = Mathf.Lerp(iter_463_1.color.b, arg_460_1.hightColor1.b, var_463_3)

								iter_463_1.color = Color.New(var_463_4, var_463_5, var_463_6)
							else
								local var_463_7 = Mathf.Lerp(iter_463_1.color.r, 1, var_463_3)

								iter_463_1.color = Color.New(var_463_7, var_463_7, var_463_7)
							end
						end
					end
				end
			end

			if arg_460_1.time_ >= var_463_1 + var_463_2 and arg_460_1.time_ < var_463_1 + var_463_2 + arg_463_0 and not isNil(var_463_0) and arg_460_1.var_.actorSpriteComps10128 then
				for iter_463_2, iter_463_3 in pairs(arg_460_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_463_3 then
						if arg_460_1.isInRecall_ then
							iter_463_3.color = arg_460_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_463_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_460_1.var_.actorSpriteComps10128 = nil
			end

			local var_463_8 = 0

			if var_463_8 < arg_460_1.time_ and arg_460_1.time_ <= var_463_8 + arg_463_0 then
				arg_460_1.fswbg_:SetActive(true)
				arg_460_1.dialog_:SetActive(false)

				arg_460_1.fswtw_.percent = 0

				local var_463_9 = arg_460_1:GetWordFromCfg(417161111)
				local var_463_10 = arg_460_1:FormatText(var_463_9.content)

				arg_460_1.fswt_.text = var_463_10

				LuaForUtil.ClearLinePrefixSymbol(arg_460_1.fswt_)

				arg_460_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_460_1.fswtw_:SetDirty()

				arg_460_1.typewritterCharCountI18N = 0

				arg_460_1:ShowNextGo(false)
			end

			local var_463_11 = 0.0999999999999999

			if var_463_11 < arg_460_1.time_ and arg_460_1.time_ <= var_463_11 + arg_463_0 then
				arg_460_1.var_.oldValueTypewriter = arg_460_1.fswtw_.percent

				arg_460_1:ShowNextGo(false)
			end

			local var_463_12 = 18
			local var_463_13 = 1.2
			local var_463_14 = arg_460_1:GetWordFromCfg(417161111)
			local var_463_15 = arg_460_1:FormatText(var_463_14.content)
			local var_463_16, var_463_17 = arg_460_1:GetPercentByPara(var_463_15, 1)

			if var_463_11 < arg_460_1.time_ and arg_460_1.time_ <= var_463_11 + arg_463_0 then
				arg_460_1.talkMaxDuration = 0

				local var_463_18 = var_463_12 <= 0 and var_463_13 or var_463_13 * ((var_463_17 - arg_460_1.typewritterCharCountI18N) / var_463_12)

				if var_463_18 > 0 and var_463_13 < var_463_18 then
					arg_460_1.talkMaxDuration = var_463_18

					if var_463_18 + var_463_11 > arg_460_1.duration_ then
						arg_460_1.duration_ = var_463_18 + var_463_11
					end
				end
			end

			local var_463_19 = 1.2
			local var_463_20 = math.max(var_463_19, arg_460_1.talkMaxDuration)

			if var_463_11 <= arg_460_1.time_ and arg_460_1.time_ < var_463_11 + var_463_20 then
				local var_463_21 = (arg_460_1.time_ - var_463_11) / var_463_20

				arg_460_1.fswtw_.percent = Mathf.Lerp(arg_460_1.var_.oldValueTypewriter, var_463_16, var_463_21)
				arg_460_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_460_1.fswtw_:SetDirty()
			end

			if arg_460_1.time_ >= var_463_11 + var_463_20 and arg_460_1.time_ < var_463_11 + var_463_20 + arg_463_0 then
				arg_460_1.fswtw_.percent = var_463_16

				arg_460_1.fswtw_:SetDirty()
				arg_460_1:ShowNextGo(true)

				arg_460_1.typewritterCharCountI18N = var_463_17
			end

			local var_463_22 = 0.0999999999999999
			local var_463_23 = 3.466
			local var_463_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161111", "") / 1000

			if var_463_24 > 0 and var_463_23 < var_463_24 and var_463_24 + var_463_22 > arg_460_1.duration_ then
				local var_463_25 = var_463_24

				arg_460_1.duration_ = var_463_24 + var_463_22
			end

			if var_463_22 < arg_460_1.time_ and arg_460_1.time_ <= var_463_22 + arg_463_0 then
				local var_463_26 = "play"
				local var_463_27 = "voice"

				arg_460_1:AudioAction(var_463_26, var_463_27, "story_v_out_417161", "417161111", "")
			end
		end
	end,
	Play417161112 = function(arg_464_0, arg_464_1)
		arg_464_1.time_ = 0
		arg_464_1.frameCnt_ = 0
		arg_464_1.state_ = "playing"
		arg_464_1.curTalkId_ = 417161112
		arg_464_1.duration_ = 9

		SetActive(arg_464_1.tipsGo_, false)

		function arg_464_1.onSingleLineFinish_()
			arg_464_1.onSingleLineUpdate_ = nil
			arg_464_1.onSingleLineFinish_ = nil
			arg_464_1.state_ = "waiting"
		end

		function arg_464_1.playNext_(arg_466_0)
			if arg_466_0 == 1 then
				arg_464_0:Play417161113(arg_464_1)
			end
		end

		function arg_464_1.onSingleLineUpdate_(arg_467_0)
			local var_467_0 = 4

			if var_467_0 < arg_464_1.time_ and arg_464_1.time_ <= var_467_0 + arg_467_0 then
				arg_464_1.allBtn_.enabled = false
			end

			local var_467_1 = 0.3

			if arg_464_1.time_ >= var_467_0 + var_467_1 and arg_464_1.time_ < var_467_0 + var_467_1 + arg_467_0 then
				arg_464_1.allBtn_.enabled = true
			end

			local var_467_2 = "SS1706"

			if arg_464_1.bgs_[var_467_2] == nil then
				local var_467_3 = Object.Instantiate(arg_464_1.paintGo_)

				var_467_3:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_467_2)
				var_467_3.name = var_467_2
				var_467_3.transform.parent = arg_464_1.stage_.transform
				var_467_3.transform.localPosition = Vector3.New(0, 100, 0)
				arg_464_1.bgs_[var_467_2] = var_467_3
			end

			local var_467_4 = 2

			if var_467_4 < arg_464_1.time_ and arg_464_1.time_ <= var_467_4 + arg_467_0 then
				local var_467_5 = manager.ui.mainCamera.transform.localPosition
				local var_467_6 = Vector3.New(0, 0, 10) + Vector3.New(var_467_5.x, var_467_5.y, 0)
				local var_467_7 = arg_464_1.bgs_.SS1706

				var_467_7.transform.localPosition = var_467_6
				var_467_7.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_467_8 = var_467_7:GetComponent("SpriteRenderer")

				if var_467_8 and var_467_8.sprite then
					local var_467_9 = (var_467_7.transform.localPosition - var_467_5).z
					local var_467_10 = manager.ui.mainCameraCom_
					local var_467_11 = 2 * var_467_9 * Mathf.Tan(var_467_10.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_467_12 = var_467_11 * var_467_10.aspect
					local var_467_13 = var_467_8.sprite.bounds.size.x
					local var_467_14 = var_467_8.sprite.bounds.size.y
					local var_467_15 = var_467_12 / var_467_13
					local var_467_16 = var_467_11 / var_467_14
					local var_467_17 = var_467_16 < var_467_15 and var_467_15 or var_467_16

					var_467_7.transform.localScale = Vector3.New(var_467_17, var_467_17, 0)
				end

				for iter_467_0, iter_467_1 in pairs(arg_464_1.bgs_) do
					if iter_467_0 ~= "SS1706" then
						iter_467_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_467_18 = 0

			if var_467_18 < arg_464_1.time_ and arg_464_1.time_ <= var_467_18 + arg_467_0 then
				arg_464_1.mask_.enabled = true
				arg_464_1.mask_.raycastTarget = true

				arg_464_1:SetGaussion(false)
			end

			local var_467_19 = 2

			if var_467_18 <= arg_464_1.time_ and arg_464_1.time_ < var_467_18 + var_467_19 then
				local var_467_20 = (arg_464_1.time_ - var_467_18) / var_467_19
				local var_467_21 = Color.New(0, 0, 0)

				var_467_21.a = Mathf.Lerp(0, 1, var_467_20)
				arg_464_1.mask_.color = var_467_21
			end

			if arg_464_1.time_ >= var_467_18 + var_467_19 and arg_464_1.time_ < var_467_18 + var_467_19 + arg_467_0 then
				local var_467_22 = Color.New(0, 0, 0)

				var_467_22.a = 1
				arg_464_1.mask_.color = var_467_22
			end

			local var_467_23 = 2

			if var_467_23 < arg_464_1.time_ and arg_464_1.time_ <= var_467_23 + arg_467_0 then
				arg_464_1.mask_.enabled = true
				arg_464_1.mask_.raycastTarget = true

				arg_464_1:SetGaussion(false)
			end

			local var_467_24 = 2

			if var_467_23 <= arg_464_1.time_ and arg_464_1.time_ < var_467_23 + var_467_24 then
				local var_467_25 = (arg_464_1.time_ - var_467_23) / var_467_24
				local var_467_26 = Color.New(0, 0, 0)

				var_467_26.a = Mathf.Lerp(1, 0, var_467_25)
				arg_464_1.mask_.color = var_467_26
			end

			if arg_464_1.time_ >= var_467_23 + var_467_24 and arg_464_1.time_ < var_467_23 + var_467_24 + arg_467_0 then
				local var_467_27 = Color.New(0, 0, 0)
				local var_467_28 = 0

				arg_464_1.mask_.enabled = false
				var_467_27.a = var_467_28
				arg_464_1.mask_.color = var_467_27
			end

			local var_467_29 = 1.83333333333333

			if var_467_29 < arg_464_1.time_ and arg_464_1.time_ <= var_467_29 + arg_467_0 then
				arg_464_1.cswbg_:SetActive(false)
			end

			local var_467_30 = 1.83333333333333

			if var_467_30 < arg_464_1.time_ and arg_464_1.time_ <= var_467_30 + arg_467_0 then
				arg_464_1.fswbg_:SetActive(false)
				arg_464_1.dialog_:SetActive(false)
				arg_464_1:ShowNextGo(false)
			end

			local var_467_31 = 2.1
			local var_467_32 = 1

			if var_467_31 < arg_464_1.time_ and arg_464_1.time_ <= var_467_31 + arg_467_0 then
				local var_467_33 = "play"
				local var_467_34 = "effect"

				arg_464_1:AudioAction(var_467_33, var_467_34, "se_story_1311", "se_story_1311_taxi01", "")
			end

			if arg_464_1.frameCnt_ <= 1 then
				arg_464_1.dialog_:SetActive(false)
			end

			local var_467_35 = 4
			local var_467_36 = 1

			if var_467_35 < arg_464_1.time_ and arg_464_1.time_ <= var_467_35 + arg_467_0 then
				arg_464_1.talkMaxDuration = 0

				arg_464_1.dialog_:SetActive(true)

				local var_467_37 = LeanTween.value(arg_464_1.dialog_, 0, 1, 0.3)

				var_467_37:setOnUpdate(LuaHelper.FloatAction(function(arg_468_0)
					arg_464_1.dialogCg_.alpha = arg_468_0
				end))
				var_467_37:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_464_1.dialog_)
					var_467_37:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_464_1.duration_ = arg_464_1.duration_ + 0.3

				SetActive(arg_464_1.leftNameGo_, false)

				arg_464_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_464_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_464_1:RecordName(arg_464_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_464_1.iconTrs_.gameObject, false)
				arg_464_1.callingController_:SetSelectedState("normal")

				local var_467_38 = arg_464_1:GetWordFromCfg(417161112)
				local var_467_39 = arg_464_1:FormatText(var_467_38.content)

				arg_464_1.text_.text = var_467_39

				LuaForUtil.ClearLinePrefixSymbol(arg_464_1.text_)

				local var_467_40 = 40
				local var_467_41 = utf8.len(var_467_39)
				local var_467_42 = var_467_40 <= 0 and var_467_36 or var_467_36 * (var_467_41 / var_467_40)

				if var_467_42 > 0 and var_467_36 < var_467_42 then
					arg_464_1.talkMaxDuration = var_467_42
					var_467_35 = var_467_35 + 0.3

					if var_467_42 + var_467_35 > arg_464_1.duration_ then
						arg_464_1.duration_ = var_467_42 + var_467_35
					end
				end

				arg_464_1.text_.text = var_467_39
				arg_464_1.typewritter.percent = 0

				arg_464_1.typewritter:SetDirty()
				arg_464_1:ShowNextGo(false)
				arg_464_1:RecordContent(arg_464_1.text_.text)
			end

			local var_467_43 = var_467_35 + 0.3
			local var_467_44 = math.max(var_467_36, arg_464_1.talkMaxDuration)

			if var_467_43 <= arg_464_1.time_ and arg_464_1.time_ < var_467_43 + var_467_44 then
				arg_464_1.typewritter.percent = (arg_464_1.time_ - var_467_43) / var_467_44

				arg_464_1.typewritter:SetDirty()
			end

			if arg_464_1.time_ >= var_467_43 + var_467_44 and arg_464_1.time_ < var_467_43 + var_467_44 + arg_467_0 then
				arg_464_1.typewritter.percent = 1

				arg_464_1.typewritter:SetDirty()
				arg_464_1:ShowNextGo(true)
			end
		end
	end,
	Play417161113 = function(arg_470_0, arg_470_1)
		arg_470_1.time_ = 0
		arg_470_1.frameCnt_ = 0
		arg_470_1.state_ = "playing"
		arg_470_1.curTalkId_ = 417161113
		arg_470_1.duration_ = 3.3

		SetActive(arg_470_1.tipsGo_, false)

		function arg_470_1.onSingleLineFinish_()
			arg_470_1.onSingleLineUpdate_ = nil
			arg_470_1.onSingleLineFinish_ = nil
			arg_470_1.state_ = "waiting"
		end

		function arg_470_1.playNext_(arg_472_0)
			if arg_472_0 == 1 then
				arg_470_0:Play417161114(arg_470_1)
			end
		end

		function arg_470_1.onSingleLineUpdate_(arg_473_0)
			local var_473_0 = 0
			local var_473_1 = 0.175

			if var_473_0 < arg_470_1.time_ and arg_470_1.time_ <= var_473_0 + arg_473_0 then
				arg_470_1.talkMaxDuration = 0
				arg_470_1.dialogCg_.alpha = 1

				arg_470_1.dialog_:SetActive(true)
				SetActive(arg_470_1.leftNameGo_, true)

				local var_473_2 = arg_470_1:FormatText(StoryNameCfg[1125].name)

				arg_470_1.leftNameTxt_.text = var_473_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_470_1.leftNameTxt_.transform)

				arg_470_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_470_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_470_1:RecordName(arg_470_1.leftNameTxt_.text)
				SetActive(arg_470_1.iconTrs_.gameObject, false)
				arg_470_1.callingController_:SetSelectedState("normal")

				local var_473_3 = arg_470_1:GetWordFromCfg(417161113)
				local var_473_4 = arg_470_1:FormatText(var_473_3.content)

				arg_470_1.text_.text = var_473_4

				LuaForUtil.ClearLinePrefixSymbol(arg_470_1.text_)

				local var_473_5 = 7
				local var_473_6 = utf8.len(var_473_4)
				local var_473_7 = var_473_5 <= 0 and var_473_1 or var_473_1 * (var_473_6 / var_473_5)

				if var_473_7 > 0 and var_473_1 < var_473_7 then
					arg_470_1.talkMaxDuration = var_473_7

					if var_473_7 + var_473_0 > arg_470_1.duration_ then
						arg_470_1.duration_ = var_473_7 + var_473_0
					end
				end

				arg_470_1.text_.text = var_473_4
				arg_470_1.typewritter.percent = 0

				arg_470_1.typewritter:SetDirty()
				arg_470_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161113", "story_v_out_417161.awb") ~= 0 then
					local var_473_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161113", "story_v_out_417161.awb") / 1000

					if var_473_8 + var_473_0 > arg_470_1.duration_ then
						arg_470_1.duration_ = var_473_8 + var_473_0
					end

					if var_473_3.prefab_name ~= "" and arg_470_1.actors_[var_473_3.prefab_name] ~= nil then
						local var_473_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_470_1.actors_[var_473_3.prefab_name].transform, "story_v_out_417161", "417161113", "story_v_out_417161.awb")

						arg_470_1:RecordAudio("417161113", var_473_9)
						arg_470_1:RecordAudio("417161113", var_473_9)
					else
						arg_470_1:AudioAction("play", "voice", "story_v_out_417161", "417161113", "story_v_out_417161.awb")
					end

					arg_470_1:RecordHistoryTalkVoice("story_v_out_417161", "417161113", "story_v_out_417161.awb")
				end

				arg_470_1:RecordContent(arg_470_1.text_.text)
			end

			local var_473_10 = math.max(var_473_1, arg_470_1.talkMaxDuration)

			if var_473_0 <= arg_470_1.time_ and arg_470_1.time_ < var_473_0 + var_473_10 then
				arg_470_1.typewritter.percent = (arg_470_1.time_ - var_473_0) / var_473_10

				arg_470_1.typewritter:SetDirty()
			end

			if arg_470_1.time_ >= var_473_0 + var_473_10 and arg_470_1.time_ < var_473_0 + var_473_10 + arg_473_0 then
				arg_470_1.typewritter.percent = 1

				arg_470_1.typewritter:SetDirty()
				arg_470_1:ShowNextGo(true)
			end
		end
	end,
	Play417161114 = function(arg_474_0, arg_474_1)
		arg_474_1.time_ = 0
		arg_474_1.frameCnt_ = 0
		arg_474_1.state_ = "playing"
		arg_474_1.curTalkId_ = 417161114
		arg_474_1.duration_ = 4.7

		SetActive(arg_474_1.tipsGo_, false)

		function arg_474_1.onSingleLineFinish_()
			arg_474_1.onSingleLineUpdate_ = nil
			arg_474_1.onSingleLineFinish_ = nil
			arg_474_1.state_ = "waiting"
		end

		function arg_474_1.playNext_(arg_476_0)
			if arg_476_0 == 1 then
				arg_474_0:Play417161115(arg_474_1)
			end
		end

		function arg_474_1.onSingleLineUpdate_(arg_477_0)
			local var_477_0 = 0
			local var_477_1 = 0.55

			if var_477_0 < arg_474_1.time_ and arg_474_1.time_ <= var_477_0 + arg_477_0 then
				arg_474_1.talkMaxDuration = 0
				arg_474_1.dialogCg_.alpha = 1

				arg_474_1.dialog_:SetActive(true)
				SetActive(arg_474_1.leftNameGo_, true)

				local var_477_2 = arg_474_1:FormatText(StoryNameCfg[595].name)

				arg_474_1.leftNameTxt_.text = var_477_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_474_1.leftNameTxt_.transform)

				arg_474_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_474_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_474_1:RecordName(arg_474_1.leftNameTxt_.text)
				SetActive(arg_474_1.iconTrs_.gameObject, false)
				arg_474_1.callingController_:SetSelectedState("normal")

				local var_477_3 = arg_474_1:GetWordFromCfg(417161114)
				local var_477_4 = arg_474_1:FormatText(var_477_3.content)

				arg_474_1.text_.text = var_477_4

				LuaForUtil.ClearLinePrefixSymbol(arg_474_1.text_)

				local var_477_5 = 22
				local var_477_6 = utf8.len(var_477_4)
				local var_477_7 = var_477_5 <= 0 and var_477_1 or var_477_1 * (var_477_6 / var_477_5)

				if var_477_7 > 0 and var_477_1 < var_477_7 then
					arg_474_1.talkMaxDuration = var_477_7

					if var_477_7 + var_477_0 > arg_474_1.duration_ then
						arg_474_1.duration_ = var_477_7 + var_477_0
					end
				end

				arg_474_1.text_.text = var_477_4
				arg_474_1.typewritter.percent = 0

				arg_474_1.typewritter:SetDirty()
				arg_474_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161114", "story_v_out_417161.awb") ~= 0 then
					local var_477_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161114", "story_v_out_417161.awb") / 1000

					if var_477_8 + var_477_0 > arg_474_1.duration_ then
						arg_474_1.duration_ = var_477_8 + var_477_0
					end

					if var_477_3.prefab_name ~= "" and arg_474_1.actors_[var_477_3.prefab_name] ~= nil then
						local var_477_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_474_1.actors_[var_477_3.prefab_name].transform, "story_v_out_417161", "417161114", "story_v_out_417161.awb")

						arg_474_1:RecordAudio("417161114", var_477_9)
						arg_474_1:RecordAudio("417161114", var_477_9)
					else
						arg_474_1:AudioAction("play", "voice", "story_v_out_417161", "417161114", "story_v_out_417161.awb")
					end

					arg_474_1:RecordHistoryTalkVoice("story_v_out_417161", "417161114", "story_v_out_417161.awb")
				end

				arg_474_1:RecordContent(arg_474_1.text_.text)
			end

			local var_477_10 = math.max(var_477_1, arg_474_1.talkMaxDuration)

			if var_477_0 <= arg_474_1.time_ and arg_474_1.time_ < var_477_0 + var_477_10 then
				arg_474_1.typewritter.percent = (arg_474_1.time_ - var_477_0) / var_477_10

				arg_474_1.typewritter:SetDirty()
			end

			if arg_474_1.time_ >= var_477_0 + var_477_10 and arg_474_1.time_ < var_477_0 + var_477_10 + arg_477_0 then
				arg_474_1.typewritter.percent = 1

				arg_474_1.typewritter:SetDirty()
				arg_474_1:ShowNextGo(true)
			end
		end
	end,
	Play417161115 = function(arg_478_0, arg_478_1)
		arg_478_1.time_ = 0
		arg_478_1.frameCnt_ = 0
		arg_478_1.state_ = "playing"
		arg_478_1.curTalkId_ = 417161115
		arg_478_1.duration_ = 4.27

		SetActive(arg_478_1.tipsGo_, false)

		function arg_478_1.onSingleLineFinish_()
			arg_478_1.onSingleLineUpdate_ = nil
			arg_478_1.onSingleLineFinish_ = nil
			arg_478_1.state_ = "waiting"
		end

		function arg_478_1.playNext_(arg_480_0)
			if arg_480_0 == 1 then
				arg_478_0:Play417161116(arg_478_1)
			end
		end

		function arg_478_1.onSingleLineUpdate_(arg_481_0)
			local var_481_0 = 0
			local var_481_1 = 0.55

			if var_481_0 < arg_478_1.time_ and arg_478_1.time_ <= var_481_0 + arg_481_0 then
				arg_478_1.talkMaxDuration = 0
				arg_478_1.dialogCg_.alpha = 1

				arg_478_1.dialog_:SetActive(true)
				SetActive(arg_478_1.leftNameGo_, true)

				local var_481_2 = arg_478_1:FormatText(StoryNameCfg[595].name)

				arg_478_1.leftNameTxt_.text = var_481_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_478_1.leftNameTxt_.transform)

				arg_478_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_478_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_478_1:RecordName(arg_478_1.leftNameTxt_.text)
				SetActive(arg_478_1.iconTrs_.gameObject, false)
				arg_478_1.callingController_:SetSelectedState("normal")

				local var_481_3 = arg_478_1:GetWordFromCfg(417161115)
				local var_481_4 = arg_478_1:FormatText(var_481_3.content)

				arg_478_1.text_.text = var_481_4

				LuaForUtil.ClearLinePrefixSymbol(arg_478_1.text_)

				local var_481_5 = 22
				local var_481_6 = utf8.len(var_481_4)
				local var_481_7 = var_481_5 <= 0 and var_481_1 or var_481_1 * (var_481_6 / var_481_5)

				if var_481_7 > 0 and var_481_1 < var_481_7 then
					arg_478_1.talkMaxDuration = var_481_7

					if var_481_7 + var_481_0 > arg_478_1.duration_ then
						arg_478_1.duration_ = var_481_7 + var_481_0
					end
				end

				arg_478_1.text_.text = var_481_4
				arg_478_1.typewritter.percent = 0

				arg_478_1.typewritter:SetDirty()
				arg_478_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161115", "story_v_out_417161.awb") ~= 0 then
					local var_481_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161115", "story_v_out_417161.awb") / 1000

					if var_481_8 + var_481_0 > arg_478_1.duration_ then
						arg_478_1.duration_ = var_481_8 + var_481_0
					end

					if var_481_3.prefab_name ~= "" and arg_478_1.actors_[var_481_3.prefab_name] ~= nil then
						local var_481_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_478_1.actors_[var_481_3.prefab_name].transform, "story_v_out_417161", "417161115", "story_v_out_417161.awb")

						arg_478_1:RecordAudio("417161115", var_481_9)
						arg_478_1:RecordAudio("417161115", var_481_9)
					else
						arg_478_1:AudioAction("play", "voice", "story_v_out_417161", "417161115", "story_v_out_417161.awb")
					end

					arg_478_1:RecordHistoryTalkVoice("story_v_out_417161", "417161115", "story_v_out_417161.awb")
				end

				arg_478_1:RecordContent(arg_478_1.text_.text)
			end

			local var_481_10 = math.max(var_481_1, arg_478_1.talkMaxDuration)

			if var_481_0 <= arg_478_1.time_ and arg_478_1.time_ < var_481_0 + var_481_10 then
				arg_478_1.typewritter.percent = (arg_478_1.time_ - var_481_0) / var_481_10

				arg_478_1.typewritter:SetDirty()
			end

			if arg_478_1.time_ >= var_481_0 + var_481_10 and arg_478_1.time_ < var_481_0 + var_481_10 + arg_481_0 then
				arg_478_1.typewritter.percent = 1

				arg_478_1.typewritter:SetDirty()
				arg_478_1:ShowNextGo(true)
			end
		end
	end,
	Play417161116 = function(arg_482_0, arg_482_1)
		arg_482_1.time_ = 0
		arg_482_1.frameCnt_ = 0
		arg_482_1.state_ = "playing"
		arg_482_1.curTalkId_ = 417161116
		arg_482_1.duration_ = 2.97

		SetActive(arg_482_1.tipsGo_, false)

		function arg_482_1.onSingleLineFinish_()
			arg_482_1.onSingleLineUpdate_ = nil
			arg_482_1.onSingleLineFinish_ = nil
			arg_482_1.state_ = "waiting"
		end

		function arg_482_1.playNext_(arg_484_0)
			if arg_484_0 == 1 then
				arg_482_0:Play417161117(arg_482_1)
			end
		end

		function arg_482_1.onSingleLineUpdate_(arg_485_0)
			local var_485_0 = 0
			local var_485_1 = 0.35

			if var_485_0 < arg_482_1.time_ and arg_482_1.time_ <= var_485_0 + arg_485_0 then
				arg_482_1.talkMaxDuration = 0
				arg_482_1.dialogCg_.alpha = 1

				arg_482_1.dialog_:SetActive(true)
				SetActive(arg_482_1.leftNameGo_, true)

				local var_485_2 = arg_482_1:FormatText(StoryNameCfg[1125].name)

				arg_482_1.leftNameTxt_.text = var_485_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_482_1.leftNameTxt_.transform)

				arg_482_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_482_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_482_1:RecordName(arg_482_1.leftNameTxt_.text)
				SetActive(arg_482_1.iconTrs_.gameObject, false)
				arg_482_1.callingController_:SetSelectedState("normal")

				local var_485_3 = arg_482_1:GetWordFromCfg(417161116)
				local var_485_4 = arg_482_1:FormatText(var_485_3.content)

				arg_482_1.text_.text = var_485_4

				LuaForUtil.ClearLinePrefixSymbol(arg_482_1.text_)

				local var_485_5 = 14
				local var_485_6 = utf8.len(var_485_4)
				local var_485_7 = var_485_5 <= 0 and var_485_1 or var_485_1 * (var_485_6 / var_485_5)

				if var_485_7 > 0 and var_485_1 < var_485_7 then
					arg_482_1.talkMaxDuration = var_485_7

					if var_485_7 + var_485_0 > arg_482_1.duration_ then
						arg_482_1.duration_ = var_485_7 + var_485_0
					end
				end

				arg_482_1.text_.text = var_485_4
				arg_482_1.typewritter.percent = 0

				arg_482_1.typewritter:SetDirty()
				arg_482_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161116", "story_v_out_417161.awb") ~= 0 then
					local var_485_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161116", "story_v_out_417161.awb") / 1000

					if var_485_8 + var_485_0 > arg_482_1.duration_ then
						arg_482_1.duration_ = var_485_8 + var_485_0
					end

					if var_485_3.prefab_name ~= "" and arg_482_1.actors_[var_485_3.prefab_name] ~= nil then
						local var_485_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_482_1.actors_[var_485_3.prefab_name].transform, "story_v_out_417161", "417161116", "story_v_out_417161.awb")

						arg_482_1:RecordAudio("417161116", var_485_9)
						arg_482_1:RecordAudio("417161116", var_485_9)
					else
						arg_482_1:AudioAction("play", "voice", "story_v_out_417161", "417161116", "story_v_out_417161.awb")
					end

					arg_482_1:RecordHistoryTalkVoice("story_v_out_417161", "417161116", "story_v_out_417161.awb")
				end

				arg_482_1:RecordContent(arg_482_1.text_.text)
			end

			local var_485_10 = math.max(var_485_1, arg_482_1.talkMaxDuration)

			if var_485_0 <= arg_482_1.time_ and arg_482_1.time_ < var_485_0 + var_485_10 then
				arg_482_1.typewritter.percent = (arg_482_1.time_ - var_485_0) / var_485_10

				arg_482_1.typewritter:SetDirty()
			end

			if arg_482_1.time_ >= var_485_0 + var_485_10 and arg_482_1.time_ < var_485_0 + var_485_10 + arg_485_0 then
				arg_482_1.typewritter.percent = 1

				arg_482_1.typewritter:SetDirty()
				arg_482_1:ShowNextGo(true)
			end
		end
	end,
	Play417161117 = function(arg_486_0, arg_486_1)
		arg_486_1.time_ = 0
		arg_486_1.frameCnt_ = 0
		arg_486_1.state_ = "playing"
		arg_486_1.curTalkId_ = 417161117
		arg_486_1.duration_ = 5.47

		SetActive(arg_486_1.tipsGo_, false)

		function arg_486_1.onSingleLineFinish_()
			arg_486_1.onSingleLineUpdate_ = nil
			arg_486_1.onSingleLineFinish_ = nil
			arg_486_1.state_ = "waiting"
		end

		function arg_486_1.playNext_(arg_488_0)
			if arg_488_0 == 1 then
				arg_486_0:Play417161118(arg_486_1)
			end
		end

		function arg_486_1.onSingleLineUpdate_(arg_489_0)
			local var_489_0 = 0
			local var_489_1 = 0.65

			if var_489_0 < arg_486_1.time_ and arg_486_1.time_ <= var_489_0 + arg_489_0 then
				arg_486_1.talkMaxDuration = 0
				arg_486_1.dialogCg_.alpha = 1

				arg_486_1.dialog_:SetActive(true)
				SetActive(arg_486_1.leftNameGo_, true)

				local var_489_2 = arg_486_1:FormatText(StoryNameCfg[1125].name)

				arg_486_1.leftNameTxt_.text = var_489_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_486_1.leftNameTxt_.transform)

				arg_486_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_486_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_486_1:RecordName(arg_486_1.leftNameTxt_.text)
				SetActive(arg_486_1.iconTrs_.gameObject, false)
				arg_486_1.callingController_:SetSelectedState("normal")

				local var_489_3 = arg_486_1:GetWordFromCfg(417161117)
				local var_489_4 = arg_486_1:FormatText(var_489_3.content)

				arg_486_1.text_.text = var_489_4

				LuaForUtil.ClearLinePrefixSymbol(arg_486_1.text_)

				local var_489_5 = 26
				local var_489_6 = utf8.len(var_489_4)
				local var_489_7 = var_489_5 <= 0 and var_489_1 or var_489_1 * (var_489_6 / var_489_5)

				if var_489_7 > 0 and var_489_1 < var_489_7 then
					arg_486_1.talkMaxDuration = var_489_7

					if var_489_7 + var_489_0 > arg_486_1.duration_ then
						arg_486_1.duration_ = var_489_7 + var_489_0
					end
				end

				arg_486_1.text_.text = var_489_4
				arg_486_1.typewritter.percent = 0

				arg_486_1.typewritter:SetDirty()
				arg_486_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161117", "story_v_out_417161.awb") ~= 0 then
					local var_489_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161117", "story_v_out_417161.awb") / 1000

					if var_489_8 + var_489_0 > arg_486_1.duration_ then
						arg_486_1.duration_ = var_489_8 + var_489_0
					end

					if var_489_3.prefab_name ~= "" and arg_486_1.actors_[var_489_3.prefab_name] ~= nil then
						local var_489_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_486_1.actors_[var_489_3.prefab_name].transform, "story_v_out_417161", "417161117", "story_v_out_417161.awb")

						arg_486_1:RecordAudio("417161117", var_489_9)
						arg_486_1:RecordAudio("417161117", var_489_9)
					else
						arg_486_1:AudioAction("play", "voice", "story_v_out_417161", "417161117", "story_v_out_417161.awb")
					end

					arg_486_1:RecordHistoryTalkVoice("story_v_out_417161", "417161117", "story_v_out_417161.awb")
				end

				arg_486_1:RecordContent(arg_486_1.text_.text)
			end

			local var_489_10 = math.max(var_489_1, arg_486_1.talkMaxDuration)

			if var_489_0 <= arg_486_1.time_ and arg_486_1.time_ < var_489_0 + var_489_10 then
				arg_486_1.typewritter.percent = (arg_486_1.time_ - var_489_0) / var_489_10

				arg_486_1.typewritter:SetDirty()
			end

			if arg_486_1.time_ >= var_489_0 + var_489_10 and arg_486_1.time_ < var_489_0 + var_489_10 + arg_489_0 then
				arg_486_1.typewritter.percent = 1

				arg_486_1.typewritter:SetDirty()
				arg_486_1:ShowNextGo(true)
			end
		end
	end,
	Play417161118 = function(arg_490_0, arg_490_1)
		arg_490_1.time_ = 0
		arg_490_1.frameCnt_ = 0
		arg_490_1.state_ = "playing"
		arg_490_1.curTalkId_ = 417161118
		arg_490_1.duration_ = 10.13

		SetActive(arg_490_1.tipsGo_, false)

		function arg_490_1.onSingleLineFinish_()
			arg_490_1.onSingleLineUpdate_ = nil
			arg_490_1.onSingleLineFinish_ = nil
			arg_490_1.state_ = "waiting"
		end

		function arg_490_1.playNext_(arg_492_0)
			if arg_492_0 == 1 then
				arg_490_0:Play417161119(arg_490_1)
			end
		end

		function arg_490_1.onSingleLineUpdate_(arg_493_0)
			local var_493_0 = 4

			if var_493_0 < arg_490_1.time_ and arg_490_1.time_ <= var_493_0 + arg_493_0 then
				arg_490_1.allBtn_.enabled = false
			end

			local var_493_1 = 0.3

			if arg_490_1.time_ >= var_493_0 + var_493_1 and arg_490_1.time_ < var_493_0 + var_493_1 + arg_493_0 then
				arg_490_1.allBtn_.enabled = true
			end

			local var_493_2 = "D06b"

			if arg_490_1.bgs_[var_493_2] == nil then
				local var_493_3 = Object.Instantiate(arg_490_1.paintGo_)

				var_493_3:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_493_2)
				var_493_3.name = var_493_2
				var_493_3.transform.parent = arg_490_1.stage_.transform
				var_493_3.transform.localPosition = Vector3.New(0, 100, 0)
				arg_490_1.bgs_[var_493_2] = var_493_3
			end

			local var_493_4 = 2

			if var_493_4 < arg_490_1.time_ and arg_490_1.time_ <= var_493_4 + arg_493_0 then
				local var_493_5 = manager.ui.mainCamera.transform.localPosition
				local var_493_6 = Vector3.New(0, 0, 10) + Vector3.New(var_493_5.x, var_493_5.y, 0)
				local var_493_7 = arg_490_1.bgs_.D06b

				var_493_7.transform.localPosition = var_493_6
				var_493_7.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_493_8 = var_493_7:GetComponent("SpriteRenderer")

				if var_493_8 and var_493_8.sprite then
					local var_493_9 = (var_493_7.transform.localPosition - var_493_5).z
					local var_493_10 = manager.ui.mainCameraCom_
					local var_493_11 = 2 * var_493_9 * Mathf.Tan(var_493_10.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_493_12 = var_493_11 * var_493_10.aspect
					local var_493_13 = var_493_8.sprite.bounds.size.x
					local var_493_14 = var_493_8.sprite.bounds.size.y
					local var_493_15 = var_493_12 / var_493_13
					local var_493_16 = var_493_11 / var_493_14
					local var_493_17 = var_493_16 < var_493_15 and var_493_15 or var_493_16

					var_493_7.transform.localScale = Vector3.New(var_493_17, var_493_17, 0)
				end

				for iter_493_0, iter_493_1 in pairs(arg_490_1.bgs_) do
					if iter_493_0 ~= "D06b" then
						iter_493_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_493_18 = 0

			if var_493_18 < arg_490_1.time_ and arg_490_1.time_ <= var_493_18 + arg_493_0 then
				arg_490_1.mask_.enabled = true
				arg_490_1.mask_.raycastTarget = true

				arg_490_1:SetGaussion(false)
			end

			local var_493_19 = 2

			if var_493_18 <= arg_490_1.time_ and arg_490_1.time_ < var_493_18 + var_493_19 then
				local var_493_20 = (arg_490_1.time_ - var_493_18) / var_493_19
				local var_493_21 = Color.New(0, 0, 0)

				var_493_21.a = Mathf.Lerp(0, 1, var_493_20)
				arg_490_1.mask_.color = var_493_21
			end

			if arg_490_1.time_ >= var_493_18 + var_493_19 and arg_490_1.time_ < var_493_18 + var_493_19 + arg_493_0 then
				local var_493_22 = Color.New(0, 0, 0)

				var_493_22.a = 1
				arg_490_1.mask_.color = var_493_22
			end

			local var_493_23 = 2

			if var_493_23 < arg_490_1.time_ and arg_490_1.time_ <= var_493_23 + arg_493_0 then
				arg_490_1.mask_.enabled = true
				arg_490_1.mask_.raycastTarget = true

				arg_490_1:SetGaussion(false)
			end

			local var_493_24 = 2

			if var_493_23 <= arg_490_1.time_ and arg_490_1.time_ < var_493_23 + var_493_24 then
				local var_493_25 = (arg_490_1.time_ - var_493_23) / var_493_24
				local var_493_26 = Color.New(0, 0, 0)

				var_493_26.a = Mathf.Lerp(1, 0, var_493_25)
				arg_490_1.mask_.color = var_493_26
			end

			if arg_490_1.time_ >= var_493_23 + var_493_24 and arg_490_1.time_ < var_493_23 + var_493_24 + arg_493_0 then
				local var_493_27 = Color.New(0, 0, 0)
				local var_493_28 = 0

				arg_490_1.mask_.enabled = false
				var_493_27.a = var_493_28
				arg_490_1.mask_.color = var_493_27
			end

			local var_493_29 = "1034"

			if arg_490_1.actors_[var_493_29] == nil then
				local var_493_30 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1034")

				if not isNil(var_493_30) then
					local var_493_31 = Object.Instantiate(var_493_30, arg_490_1.canvasGo_.transform)

					var_493_31.transform:SetSiblingIndex(1)

					var_493_31.name = var_493_29
					var_493_31.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_490_1.actors_[var_493_29] = var_493_31

					local var_493_32 = var_493_31:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_490_1.isInRecall_ then
						for iter_493_2, iter_493_3 in ipairs(var_493_32) do
							iter_493_3.color = arg_490_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_493_33 = arg_490_1.actors_["1034"].transform
			local var_493_34 = 3.66666666666667

			if var_493_34 < arg_490_1.time_ and arg_490_1.time_ <= var_493_34 + arg_493_0 then
				arg_490_1.var_.moveOldPos1034 = var_493_33.localPosition
				var_493_33.localScale = Vector3.New(1, 1, 1)

				arg_490_1:CheckSpriteTmpPos("1034", 3)

				local var_493_35 = var_493_33.childCount

				for iter_493_4 = 0, var_493_35 - 1 do
					local var_493_36 = var_493_33:GetChild(iter_493_4)

					if var_493_36.name == "" or not string.find(var_493_36.name, "split") then
						var_493_36.gameObject:SetActive(true)
					else
						var_493_36.gameObject:SetActive(false)
					end
				end
			end

			local var_493_37 = 0.001

			if var_493_34 <= arg_490_1.time_ and arg_490_1.time_ < var_493_34 + var_493_37 then
				local var_493_38 = (arg_490_1.time_ - var_493_34) / var_493_37
				local var_493_39 = Vector3.New(0, -331.9, -324)

				var_493_33.localPosition = Vector3.Lerp(arg_490_1.var_.moveOldPos1034, var_493_39, var_493_38)
			end

			if arg_490_1.time_ >= var_493_34 + var_493_37 and arg_490_1.time_ < var_493_34 + var_493_37 + arg_493_0 then
				var_493_33.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_493_40 = arg_490_1.actors_["1034"]
			local var_493_41 = 3.66666666666667

			if var_493_41 < arg_490_1.time_ and arg_490_1.time_ <= var_493_41 + arg_493_0 then
				arg_490_1:SetSpriteNiuquEffect("1034", true)
			end

			local var_493_42 = arg_490_1.actors_["1034"]
			local var_493_43 = 3.66666666666667

			if var_493_43 < arg_490_1.time_ and arg_490_1.time_ <= var_493_43 + arg_493_0 then
				local var_493_44 = var_493_42:GetComponentInChildren(typeof(CanvasGroup))

				if var_493_44 then
					arg_490_1.var_.alphaOldValue1034 = var_493_44.alpha
					arg_490_1.var_.characterEffect1034 = var_493_44
				end
			end

			local var_493_45 = 0.2

			if var_493_43 <= arg_490_1.time_ and arg_490_1.time_ < var_493_43 + var_493_45 then
				local var_493_46 = (arg_490_1.time_ - var_493_43) / var_493_45
				local var_493_47 = Mathf.Lerp(arg_490_1.var_.alphaOldValue1034, 0.6, var_493_46)

				if arg_490_1.var_.characterEffect1034 then
					arg_490_1.var_.characterEffect1034.alpha = var_493_47
				end
			end

			if arg_490_1.time_ >= var_493_43 + var_493_45 and arg_490_1.time_ < var_493_43 + var_493_45 + arg_493_0 and arg_490_1.var_.characterEffect1034 then
				arg_490_1.var_.characterEffect1034.alpha = 0.6
			end

			local var_493_48 = 2

			arg_490_1.isInRecall_ = true

			if var_493_48 < arg_490_1.time_ and arg_490_1.time_ <= var_493_48 + arg_493_0 then
				arg_490_1.screenFilterGo_:SetActive(true)

				arg_490_1.screenFilterEffect_.profile = Asset.Load("Effect/Scene/fx_vintageStyle_Profile.asset")
				arg_490_1.hightColor1 = Color.New(0.82, 0.77, 0.62)
				arg_490_1.hightColor2 = Color.New(0.46, 0.43, 0.35)

				for iter_493_5, iter_493_6 in pairs(arg_490_1.actors_) do
					local var_493_49 = iter_493_6:GetComponentsInChildren(typeof(Image), true):ToTable()

					for iter_493_7, iter_493_8 in ipairs(var_493_49) do
						if iter_493_8.color.r > 0.51 then
							iter_493_8.color = Color.New(0.82, 0.77, 0.62)
						else
							iter_493_8.color = Color.New(0.46, 0.43, 0.35)
						end
					end
				end
			end

			local var_493_50 = 0.0666666666666667

			if var_493_48 <= arg_490_1.time_ and arg_490_1.time_ < var_493_48 + var_493_50 then
				local var_493_51 = (arg_490_1.time_ - var_493_48) / var_493_50

				arg_490_1.screenFilterEffect_.weight = Mathf.Lerp(0, 1, var_493_51)
			end

			if arg_490_1.time_ >= var_493_48 + var_493_50 and arg_490_1.time_ < var_493_48 + var_493_50 + arg_493_0 then
				arg_490_1.screenFilterEffect_.weight = 1
			end

			local var_493_52 = arg_490_1.actors_["1034"]
			local var_493_53 = 3.66666666666667

			if var_493_53 < arg_490_1.time_ and arg_490_1.time_ <= var_493_53 + arg_493_0 then
				local var_493_54 = var_493_52:GetComponentInChildren(typeof(CanvasGroup))

				if var_493_54 then
					arg_490_1.var_.alphaOldValue1034 = var_493_54.alpha
					arg_490_1.var_.characterEffect1034 = var_493_54
				end

				arg_490_1.var_.alphaOldValue1034 = 0
			end

			local var_493_55 = 0.333333333333333

			if var_493_53 <= arg_490_1.time_ and arg_490_1.time_ < var_493_53 + var_493_55 then
				local var_493_56 = (arg_490_1.time_ - var_493_53) / var_493_55
				local var_493_57 = Mathf.Lerp(arg_490_1.var_.alphaOldValue1034, 1, var_493_56)

				if arg_490_1.var_.characterEffect1034 then
					arg_490_1.var_.characterEffect1034.alpha = var_493_57
				end
			end

			if arg_490_1.time_ >= var_493_53 + var_493_55 and arg_490_1.time_ < var_493_53 + var_493_55 + arg_493_0 and arg_490_1.var_.characterEffect1034 then
				arg_490_1.var_.characterEffect1034.alpha = 1
			end

			if arg_490_1.frameCnt_ <= 1 then
				arg_490_1.dialog_:SetActive(false)
			end

			local var_493_58 = 4
			local var_493_59 = 0.6

			if var_493_58 < arg_490_1.time_ and arg_490_1.time_ <= var_493_58 + arg_493_0 then
				arg_490_1.talkMaxDuration = 0

				arg_490_1.dialog_:SetActive(true)

				local var_493_60 = LeanTween.value(arg_490_1.dialog_, 0, 1, 0.3)

				var_493_60:setOnUpdate(LuaHelper.FloatAction(function(arg_494_0)
					arg_490_1.dialogCg_.alpha = arg_494_0
				end))
				var_493_60:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_490_1.dialog_)
					var_493_60:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_490_1.duration_ = arg_490_1.duration_ + 0.3

				SetActive(arg_490_1.leftNameGo_, true)

				local var_493_61 = arg_490_1:FormatText(StoryNameCfg[1109].name)

				arg_490_1.leftNameTxt_.text = var_493_61

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_490_1.leftNameTxt_.transform)

				arg_490_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_490_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_490_1:RecordName(arg_490_1.leftNameTxt_.text)
				SetActive(arg_490_1.iconTrs_.gameObject, false)
				arg_490_1.callingController_:SetSelectedState("normal")

				local var_493_62 = arg_490_1:GetWordFromCfg(417161118)
				local var_493_63 = arg_490_1:FormatText(var_493_62.content)

				arg_490_1.text_.text = var_493_63

				LuaForUtil.ClearLinePrefixSymbol(arg_490_1.text_)

				local var_493_64 = 24
				local var_493_65 = utf8.len(var_493_63)
				local var_493_66 = var_493_64 <= 0 and var_493_59 or var_493_59 * (var_493_65 / var_493_64)

				if var_493_66 > 0 and var_493_59 < var_493_66 then
					arg_490_1.talkMaxDuration = var_493_66
					var_493_58 = var_493_58 + 0.3

					if var_493_66 + var_493_58 > arg_490_1.duration_ then
						arg_490_1.duration_ = var_493_66 + var_493_58
					end
				end

				arg_490_1.text_.text = var_493_63
				arg_490_1.typewritter.percent = 0

				arg_490_1.typewritter:SetDirty()
				arg_490_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161118", "story_v_out_417161.awb") ~= 0 then
					local var_493_67 = manager.audio:GetVoiceLength("story_v_out_417161", "417161118", "story_v_out_417161.awb") / 1000

					if var_493_67 + var_493_58 > arg_490_1.duration_ then
						arg_490_1.duration_ = var_493_67 + var_493_58
					end

					if var_493_62.prefab_name ~= "" and arg_490_1.actors_[var_493_62.prefab_name] ~= nil then
						local var_493_68 = LuaForUtil.PlayVoiceWithCriLipsync(arg_490_1.actors_[var_493_62.prefab_name].transform, "story_v_out_417161", "417161118", "story_v_out_417161.awb")

						arg_490_1:RecordAudio("417161118", var_493_68)
						arg_490_1:RecordAudio("417161118", var_493_68)
					else
						arg_490_1:AudioAction("play", "voice", "story_v_out_417161", "417161118", "story_v_out_417161.awb")
					end

					arg_490_1:RecordHistoryTalkVoice("story_v_out_417161", "417161118", "story_v_out_417161.awb")
				end

				arg_490_1:RecordContent(arg_490_1.text_.text)
			end

			local var_493_69 = var_493_58 + 0.3
			local var_493_70 = math.max(var_493_59, arg_490_1.talkMaxDuration)

			if var_493_69 <= arg_490_1.time_ and arg_490_1.time_ < var_493_69 + var_493_70 then
				arg_490_1.typewritter.percent = (arg_490_1.time_ - var_493_69) / var_493_70

				arg_490_1.typewritter:SetDirty()
			end

			if arg_490_1.time_ >= var_493_69 + var_493_70 and arg_490_1.time_ < var_493_69 + var_493_70 + arg_493_0 then
				arg_490_1.typewritter.percent = 1

				arg_490_1.typewritter:SetDirty()
				arg_490_1:ShowNextGo(true)
			end
		end
	end,
	Play417161119 = function(arg_496_0, arg_496_1)
		arg_496_1.time_ = 0
		arg_496_1.frameCnt_ = 0
		arg_496_1.state_ = "playing"
		arg_496_1.curTalkId_ = 417161119
		arg_496_1.duration_ = 4.8

		SetActive(arg_496_1.tipsGo_, false)

		function arg_496_1.onSingleLineFinish_()
			arg_496_1.onSingleLineUpdate_ = nil
			arg_496_1.onSingleLineFinish_ = nil
			arg_496_1.state_ = "waiting"
		end

		function arg_496_1.playNext_(arg_498_0)
			if arg_498_0 == 1 then
				arg_496_0:Play417161120(arg_496_1)
			end
		end

		function arg_496_1.onSingleLineUpdate_(arg_499_0)
			local var_499_0 = arg_496_1.actors_["10128"]
			local var_499_1 = 0

			if var_499_1 < arg_496_1.time_ and arg_496_1.time_ <= var_499_1 + arg_499_0 and not isNil(var_499_0) and arg_496_1.var_.actorSpriteComps10128 == nil then
				arg_496_1.var_.actorSpriteComps10128 = var_499_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_499_2 = 0.2

			if var_499_1 <= arg_496_1.time_ and arg_496_1.time_ < var_499_1 + var_499_2 and not isNil(var_499_0) then
				local var_499_3 = (arg_496_1.time_ - var_499_1) / var_499_2

				if arg_496_1.var_.actorSpriteComps10128 then
					for iter_499_0, iter_499_1 in pairs(arg_496_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_499_1 then
							if arg_496_1.isInRecall_ then
								local var_499_4 = Mathf.Lerp(iter_499_1.color.r, arg_496_1.hightColor1.r, var_499_3)
								local var_499_5 = Mathf.Lerp(iter_499_1.color.g, arg_496_1.hightColor1.g, var_499_3)
								local var_499_6 = Mathf.Lerp(iter_499_1.color.b, arg_496_1.hightColor1.b, var_499_3)

								iter_499_1.color = Color.New(var_499_4, var_499_5, var_499_6)
							else
								local var_499_7 = Mathf.Lerp(iter_499_1.color.r, 1, var_499_3)

								iter_499_1.color = Color.New(var_499_7, var_499_7, var_499_7)
							end
						end
					end
				end
			end

			if arg_496_1.time_ >= var_499_1 + var_499_2 and arg_496_1.time_ < var_499_1 + var_499_2 + arg_499_0 and not isNil(var_499_0) and arg_496_1.var_.actorSpriteComps10128 then
				for iter_499_2, iter_499_3 in pairs(arg_496_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_499_3 then
						if arg_496_1.isInRecall_ then
							iter_499_3.color = arg_496_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_499_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_496_1.var_.actorSpriteComps10128 = nil
			end

			local var_499_8 = arg_496_1.actors_["1034"]
			local var_499_9 = 0

			if var_499_9 < arg_496_1.time_ and arg_496_1.time_ <= var_499_9 + arg_499_0 and not isNil(var_499_8) and arg_496_1.var_.actorSpriteComps1034 == nil then
				arg_496_1.var_.actorSpriteComps1034 = var_499_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_499_10 = 0.2

			if var_499_9 <= arg_496_1.time_ and arg_496_1.time_ < var_499_9 + var_499_10 and not isNil(var_499_8) then
				local var_499_11 = (arg_496_1.time_ - var_499_9) / var_499_10

				if arg_496_1.var_.actorSpriteComps1034 then
					for iter_499_4, iter_499_5 in pairs(arg_496_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_499_5 then
							if arg_496_1.isInRecall_ then
								local var_499_12 = Mathf.Lerp(iter_499_5.color.r, arg_496_1.hightColor2.r, var_499_11)
								local var_499_13 = Mathf.Lerp(iter_499_5.color.g, arg_496_1.hightColor2.g, var_499_11)
								local var_499_14 = Mathf.Lerp(iter_499_5.color.b, arg_496_1.hightColor2.b, var_499_11)

								iter_499_5.color = Color.New(var_499_12, var_499_13, var_499_14)
							else
								local var_499_15 = Mathf.Lerp(iter_499_5.color.r, 0.5, var_499_11)

								iter_499_5.color = Color.New(var_499_15, var_499_15, var_499_15)
							end
						end
					end
				end
			end

			if arg_496_1.time_ >= var_499_9 + var_499_10 and arg_496_1.time_ < var_499_9 + var_499_10 + arg_499_0 and not isNil(var_499_8) and arg_496_1.var_.actorSpriteComps1034 then
				for iter_499_6, iter_499_7 in pairs(arg_496_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_499_7 then
						if arg_496_1.isInRecall_ then
							iter_499_7.color = arg_496_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_499_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_496_1.var_.actorSpriteComps1034 = nil
			end

			local var_499_16 = arg_496_1.actors_["10128"].transform
			local var_499_17 = 0

			if var_499_17 < arg_496_1.time_ and arg_496_1.time_ <= var_499_17 + arg_499_0 then
				arg_496_1.var_.moveOldPos10128 = var_499_16.localPosition
				var_499_16.localScale = Vector3.New(1, 1, 1)

				arg_496_1:CheckSpriteTmpPos("10128", 3)

				local var_499_18 = var_499_16.childCount

				for iter_499_8 = 0, var_499_18 - 1 do
					local var_499_19 = var_499_16:GetChild(iter_499_8)

					if var_499_19.name == "split_6" or not string.find(var_499_19.name, "split") then
						var_499_19.gameObject:SetActive(true)
					else
						var_499_19.gameObject:SetActive(false)
					end
				end
			end

			local var_499_20 = 0.001

			if var_499_17 <= arg_496_1.time_ and arg_496_1.time_ < var_499_17 + var_499_20 then
				local var_499_21 = (arg_496_1.time_ - var_499_17) / var_499_20
				local var_499_22 = Vector3.New(0, -347, -300)

				var_499_16.localPosition = Vector3.Lerp(arg_496_1.var_.moveOldPos10128, var_499_22, var_499_21)
			end

			if arg_496_1.time_ >= var_499_17 + var_499_20 and arg_496_1.time_ < var_499_17 + var_499_20 + arg_499_0 then
				var_499_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_499_23 = arg_496_1.actors_["1034"].transform
			local var_499_24 = 0

			if var_499_24 < arg_496_1.time_ and arg_496_1.time_ <= var_499_24 + arg_499_0 then
				arg_496_1.var_.moveOldPos1034 = var_499_23.localPosition
				var_499_23.localScale = Vector3.New(1, 1, 1)

				arg_496_1:CheckSpriteTmpPos("1034", 7)

				local var_499_25 = var_499_23.childCount

				for iter_499_9 = 0, var_499_25 - 1 do
					local var_499_26 = var_499_23:GetChild(iter_499_9)

					if var_499_26.name == "" or not string.find(var_499_26.name, "split") then
						var_499_26.gameObject:SetActive(true)
					else
						var_499_26.gameObject:SetActive(false)
					end
				end
			end

			local var_499_27 = 0.001

			if var_499_24 <= arg_496_1.time_ and arg_496_1.time_ < var_499_24 + var_499_27 then
				local var_499_28 = (arg_496_1.time_ - var_499_24) / var_499_27
				local var_499_29 = Vector3.New(0, -2000, 0)

				var_499_23.localPosition = Vector3.Lerp(arg_496_1.var_.moveOldPos1034, var_499_29, var_499_28)
			end

			if arg_496_1.time_ >= var_499_24 + var_499_27 and arg_496_1.time_ < var_499_24 + var_499_27 + arg_499_0 then
				var_499_23.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_499_30 = 0
			local var_499_31 = 0.525

			if var_499_30 < arg_496_1.time_ and arg_496_1.time_ <= var_499_30 + arg_499_0 then
				arg_496_1.talkMaxDuration = 0
				arg_496_1.dialogCg_.alpha = 1

				arg_496_1.dialog_:SetActive(true)
				SetActive(arg_496_1.leftNameGo_, true)

				local var_499_32 = arg_496_1:FormatText(StoryNameCfg[595].name)

				arg_496_1.leftNameTxt_.text = var_499_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_496_1.leftNameTxt_.transform)

				arg_496_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_496_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_496_1:RecordName(arg_496_1.leftNameTxt_.text)
				SetActive(arg_496_1.iconTrs_.gameObject, false)
				arg_496_1.callingController_:SetSelectedState("normal")

				local var_499_33 = arg_496_1:GetWordFromCfg(417161119)
				local var_499_34 = arg_496_1:FormatText(var_499_33.content)

				arg_496_1.text_.text = var_499_34

				LuaForUtil.ClearLinePrefixSymbol(arg_496_1.text_)

				local var_499_35 = 21
				local var_499_36 = utf8.len(var_499_34)
				local var_499_37 = var_499_35 <= 0 and var_499_31 or var_499_31 * (var_499_36 / var_499_35)

				if var_499_37 > 0 and var_499_31 < var_499_37 then
					arg_496_1.talkMaxDuration = var_499_37

					if var_499_37 + var_499_30 > arg_496_1.duration_ then
						arg_496_1.duration_ = var_499_37 + var_499_30
					end
				end

				arg_496_1.text_.text = var_499_34
				arg_496_1.typewritter.percent = 0

				arg_496_1.typewritter:SetDirty()
				arg_496_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161119", "story_v_out_417161.awb") ~= 0 then
					local var_499_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161119", "story_v_out_417161.awb") / 1000

					if var_499_38 + var_499_30 > arg_496_1.duration_ then
						arg_496_1.duration_ = var_499_38 + var_499_30
					end

					if var_499_33.prefab_name ~= "" and arg_496_1.actors_[var_499_33.prefab_name] ~= nil then
						local var_499_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_496_1.actors_[var_499_33.prefab_name].transform, "story_v_out_417161", "417161119", "story_v_out_417161.awb")

						arg_496_1:RecordAudio("417161119", var_499_39)
						arg_496_1:RecordAudio("417161119", var_499_39)
					else
						arg_496_1:AudioAction("play", "voice", "story_v_out_417161", "417161119", "story_v_out_417161.awb")
					end

					arg_496_1:RecordHistoryTalkVoice("story_v_out_417161", "417161119", "story_v_out_417161.awb")
				end

				arg_496_1:RecordContent(arg_496_1.text_.text)
			end

			local var_499_40 = math.max(var_499_31, arg_496_1.talkMaxDuration)

			if var_499_30 <= arg_496_1.time_ and arg_496_1.time_ < var_499_30 + var_499_40 then
				arg_496_1.typewritter.percent = (arg_496_1.time_ - var_499_30) / var_499_40

				arg_496_1.typewritter:SetDirty()
			end

			if arg_496_1.time_ >= var_499_30 + var_499_40 and arg_496_1.time_ < var_499_30 + var_499_40 + arg_499_0 then
				arg_496_1.typewritter.percent = 1

				arg_496_1.typewritter:SetDirty()
				arg_496_1:ShowNextGo(true)
			end
		end
	end,
	Play417161120 = function(arg_500_0, arg_500_1)
		arg_500_1.time_ = 0
		arg_500_1.frameCnt_ = 0
		arg_500_1.state_ = "playing"
		arg_500_1.curTalkId_ = 417161120
		arg_500_1.duration_ = 5

		SetActive(arg_500_1.tipsGo_, false)

		function arg_500_1.onSingleLineFinish_()
			arg_500_1.onSingleLineUpdate_ = nil
			arg_500_1.onSingleLineFinish_ = nil
			arg_500_1.state_ = "waiting"
		end

		function arg_500_1.playNext_(arg_502_0)
			if arg_502_0 == 1 then
				arg_500_0:Play417161121(arg_500_1)
			end
		end

		function arg_500_1.onSingleLineUpdate_(arg_503_0)
			local var_503_0 = arg_500_1.actors_["10128"]
			local var_503_1 = 0

			if var_503_1 < arg_500_1.time_ and arg_500_1.time_ <= var_503_1 + arg_503_0 and not isNil(var_503_0) and arg_500_1.var_.actorSpriteComps10128 == nil then
				arg_500_1.var_.actorSpriteComps10128 = var_503_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_503_2 = 0.2

			if var_503_1 <= arg_500_1.time_ and arg_500_1.time_ < var_503_1 + var_503_2 and not isNil(var_503_0) then
				local var_503_3 = (arg_500_1.time_ - var_503_1) / var_503_2

				if arg_500_1.var_.actorSpriteComps10128 then
					for iter_503_0, iter_503_1 in pairs(arg_500_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_503_1 then
							if arg_500_1.isInRecall_ then
								local var_503_4 = Mathf.Lerp(iter_503_1.color.r, arg_500_1.hightColor2.r, var_503_3)
								local var_503_5 = Mathf.Lerp(iter_503_1.color.g, arg_500_1.hightColor2.g, var_503_3)
								local var_503_6 = Mathf.Lerp(iter_503_1.color.b, arg_500_1.hightColor2.b, var_503_3)

								iter_503_1.color = Color.New(var_503_4, var_503_5, var_503_6)
							else
								local var_503_7 = Mathf.Lerp(iter_503_1.color.r, 0.5, var_503_3)

								iter_503_1.color = Color.New(var_503_7, var_503_7, var_503_7)
							end
						end
					end
				end
			end

			if arg_500_1.time_ >= var_503_1 + var_503_2 and arg_500_1.time_ < var_503_1 + var_503_2 + arg_503_0 and not isNil(var_503_0) and arg_500_1.var_.actorSpriteComps10128 then
				for iter_503_2, iter_503_3 in pairs(arg_500_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_503_3 then
						if arg_500_1.isInRecall_ then
							iter_503_3.color = arg_500_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_503_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_500_1.var_.actorSpriteComps10128 = nil
			end

			local var_503_8 = arg_500_1.actors_["10128"].transform
			local var_503_9 = 0

			if var_503_9 < arg_500_1.time_ and arg_500_1.time_ <= var_503_9 + arg_503_0 then
				arg_500_1.var_.moveOldPos10128 = var_503_8.localPosition
				var_503_8.localScale = Vector3.New(1, 1, 1)

				arg_500_1:CheckSpriteTmpPos("10128", 7)

				local var_503_10 = var_503_8.childCount

				for iter_503_4 = 0, var_503_10 - 1 do
					local var_503_11 = var_503_8:GetChild(iter_503_4)

					if var_503_11.name == "" or not string.find(var_503_11.name, "split") then
						var_503_11.gameObject:SetActive(true)
					else
						var_503_11.gameObject:SetActive(false)
					end
				end
			end

			local var_503_12 = 0.001

			if var_503_9 <= arg_500_1.time_ and arg_500_1.time_ < var_503_9 + var_503_12 then
				local var_503_13 = (arg_500_1.time_ - var_503_9) / var_503_12
				local var_503_14 = Vector3.New(0, -2000, -300)

				var_503_8.localPosition = Vector3.Lerp(arg_500_1.var_.moveOldPos10128, var_503_14, var_503_13)
			end

			if arg_500_1.time_ >= var_503_9 + var_503_12 and arg_500_1.time_ < var_503_9 + var_503_12 + arg_503_0 then
				var_503_8.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_503_15 = 1.1
			local var_503_16 = 1

			if var_503_15 < arg_500_1.time_ and arg_500_1.time_ <= var_503_15 + arg_503_0 then
				local var_503_17 = "play"
				local var_503_18 = "effect"

				arg_500_1:AudioAction(var_503_17, var_503_18, "se_story_16", "se_story_16_attack03", "")
			end

			local var_503_19 = 0
			local var_503_20 = 1.725

			if var_503_19 < arg_500_1.time_ and arg_500_1.time_ <= var_503_19 + arg_503_0 then
				arg_500_1.talkMaxDuration = 0
				arg_500_1.dialogCg_.alpha = 1

				arg_500_1.dialog_:SetActive(true)
				SetActive(arg_500_1.leftNameGo_, false)

				arg_500_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_500_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_500_1:RecordName(arg_500_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_500_1.iconTrs_.gameObject, false)
				arg_500_1.callingController_:SetSelectedState("normal")

				local var_503_21 = arg_500_1:GetWordFromCfg(417161120)
				local var_503_22 = arg_500_1:FormatText(var_503_21.content)

				arg_500_1.text_.text = var_503_22

				LuaForUtil.ClearLinePrefixSymbol(arg_500_1.text_)

				local var_503_23 = 69
				local var_503_24 = utf8.len(var_503_22)
				local var_503_25 = var_503_23 <= 0 and var_503_20 or var_503_20 * (var_503_24 / var_503_23)

				if var_503_25 > 0 and var_503_20 < var_503_25 then
					arg_500_1.talkMaxDuration = var_503_25

					if var_503_25 + var_503_19 > arg_500_1.duration_ then
						arg_500_1.duration_ = var_503_25 + var_503_19
					end
				end

				arg_500_1.text_.text = var_503_22
				arg_500_1.typewritter.percent = 0

				arg_500_1.typewritter:SetDirty()
				arg_500_1:ShowNextGo(false)
				arg_500_1:RecordContent(arg_500_1.text_.text)
			end

			local var_503_26 = math.max(var_503_20, arg_500_1.talkMaxDuration)

			if var_503_19 <= arg_500_1.time_ and arg_500_1.time_ < var_503_19 + var_503_26 then
				arg_500_1.typewritter.percent = (arg_500_1.time_ - var_503_19) / var_503_26

				arg_500_1.typewritter:SetDirty()
			end

			if arg_500_1.time_ >= var_503_19 + var_503_26 and arg_500_1.time_ < var_503_19 + var_503_26 + arg_503_0 then
				arg_500_1.typewritter.percent = 1

				arg_500_1.typewritter:SetDirty()
				arg_500_1:ShowNextGo(true)
			end
		end
	end,
	Play417161121 = function(arg_504_0, arg_504_1)
		arg_504_1.time_ = 0
		arg_504_1.frameCnt_ = 0
		arg_504_1.state_ = "playing"
		arg_504_1.curTalkId_ = 417161121
		arg_504_1.duration_ = 5

		SetActive(arg_504_1.tipsGo_, false)

		function arg_504_1.onSingleLineFinish_()
			arg_504_1.onSingleLineUpdate_ = nil
			arg_504_1.onSingleLineFinish_ = nil
			arg_504_1.state_ = "waiting"
		end

		function arg_504_1.playNext_(arg_506_0)
			if arg_506_0 == 1 then
				arg_504_0:Play417161122(arg_504_1)
			end
		end

		function arg_504_1.onSingleLineUpdate_(arg_507_0)
			local var_507_0 = 0
			local var_507_1 = 1.3

			if var_507_0 < arg_504_1.time_ and arg_504_1.time_ <= var_507_0 + arg_507_0 then
				arg_504_1.talkMaxDuration = 0
				arg_504_1.dialogCg_.alpha = 1

				arg_504_1.dialog_:SetActive(true)
				SetActive(arg_504_1.leftNameGo_, false)

				arg_504_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_504_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_504_1:RecordName(arg_504_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_504_1.iconTrs_.gameObject, false)
				arg_504_1.callingController_:SetSelectedState("normal")

				local var_507_2 = arg_504_1:GetWordFromCfg(417161121)
				local var_507_3 = arg_504_1:FormatText(var_507_2.content)

				arg_504_1.text_.text = var_507_3

				LuaForUtil.ClearLinePrefixSymbol(arg_504_1.text_)

				local var_507_4 = 52
				local var_507_5 = utf8.len(var_507_3)
				local var_507_6 = var_507_4 <= 0 and var_507_1 or var_507_1 * (var_507_5 / var_507_4)

				if var_507_6 > 0 and var_507_1 < var_507_6 then
					arg_504_1.talkMaxDuration = var_507_6

					if var_507_6 + var_507_0 > arg_504_1.duration_ then
						arg_504_1.duration_ = var_507_6 + var_507_0
					end
				end

				arg_504_1.text_.text = var_507_3
				arg_504_1.typewritter.percent = 0

				arg_504_1.typewritter:SetDirty()
				arg_504_1:ShowNextGo(false)
				arg_504_1:RecordContent(arg_504_1.text_.text)
			end

			local var_507_7 = math.max(var_507_1, arg_504_1.talkMaxDuration)

			if var_507_0 <= arg_504_1.time_ and arg_504_1.time_ < var_507_0 + var_507_7 then
				arg_504_1.typewritter.percent = (arg_504_1.time_ - var_507_0) / var_507_7

				arg_504_1.typewritter:SetDirty()
			end

			if arg_504_1.time_ >= var_507_0 + var_507_7 and arg_504_1.time_ < var_507_0 + var_507_7 + arg_507_0 then
				arg_504_1.typewritter.percent = 1

				arg_504_1.typewritter:SetDirty()
				arg_504_1:ShowNextGo(true)
			end
		end
	end,
	Play417161122 = function(arg_508_0, arg_508_1)
		arg_508_1.time_ = 0
		arg_508_1.frameCnt_ = 0
		arg_508_1.state_ = "playing"
		arg_508_1.curTalkId_ = 417161122
		arg_508_1.duration_ = 3

		SetActive(arg_508_1.tipsGo_, false)

		function arg_508_1.onSingleLineFinish_()
			arg_508_1.onSingleLineUpdate_ = nil
			arg_508_1.onSingleLineFinish_ = nil
			arg_508_1.state_ = "waiting"
		end

		function arg_508_1.playNext_(arg_510_0)
			if arg_510_0 == 1 then
				arg_508_0:Play417161123(arg_508_1)
			end
		end

		function arg_508_1.onSingleLineUpdate_(arg_511_0)
			local var_511_0 = arg_508_1.actors_["1034"].transform
			local var_511_1 = 0

			if var_511_1 < arg_508_1.time_ and arg_508_1.time_ <= var_511_1 + arg_511_0 then
				arg_508_1.var_.moveOldPos1034 = var_511_0.localPosition
				var_511_0.localScale = Vector3.New(1, 1, 1)

				arg_508_1:CheckSpriteTmpPos("1034", 3)

				local var_511_2 = var_511_0.childCount

				for iter_511_0 = 0, var_511_2 - 1 do
					local var_511_3 = var_511_0:GetChild(iter_511_0)

					if var_511_3.name == "split_6" or not string.find(var_511_3.name, "split") then
						var_511_3.gameObject:SetActive(true)
					else
						var_511_3.gameObject:SetActive(false)
					end
				end
			end

			local var_511_4 = 0.001

			if var_511_1 <= arg_508_1.time_ and arg_508_1.time_ < var_511_1 + var_511_4 then
				local var_511_5 = (arg_508_1.time_ - var_511_1) / var_511_4
				local var_511_6 = Vector3.New(0, -331.9, -324)

				var_511_0.localPosition = Vector3.Lerp(arg_508_1.var_.moveOldPos1034, var_511_6, var_511_5)
			end

			if arg_508_1.time_ >= var_511_1 + var_511_4 and arg_508_1.time_ < var_511_1 + var_511_4 + arg_511_0 then
				var_511_0.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_511_7 = arg_508_1.actors_["1034"]
			local var_511_8 = 0

			if var_511_8 < arg_508_1.time_ and arg_508_1.time_ <= var_511_8 + arg_511_0 then
				arg_508_1:SetSpriteNiuquEffect("1034", true)
			end

			local var_511_9 = arg_508_1.actors_["1034"]
			local var_511_10 = 0

			if var_511_10 < arg_508_1.time_ and arg_508_1.time_ <= var_511_10 + arg_511_0 then
				local var_511_11 = var_511_9:GetComponentInChildren(typeof(CanvasGroup))

				if var_511_11 then
					arg_508_1.var_.alphaOldValue1034 = var_511_11.alpha
					arg_508_1.var_.characterEffect1034 = var_511_11
				end
			end

			local var_511_12 = 0.2

			if var_511_10 <= arg_508_1.time_ and arg_508_1.time_ < var_511_10 + var_511_12 then
				local var_511_13 = (arg_508_1.time_ - var_511_10) / var_511_12
				local var_511_14 = Mathf.Lerp(arg_508_1.var_.alphaOldValue1034, 0.6, var_511_13)

				if arg_508_1.var_.characterEffect1034 then
					arg_508_1.var_.characterEffect1034.alpha = var_511_14
				end
			end

			if arg_508_1.time_ >= var_511_10 + var_511_12 and arg_508_1.time_ < var_511_10 + var_511_12 + arg_511_0 and arg_508_1.var_.characterEffect1034 then
				arg_508_1.var_.characterEffect1034.alpha = 0.6
			end

			local var_511_15 = 0
			local var_511_16 = 0.3

			if var_511_15 < arg_508_1.time_ and arg_508_1.time_ <= var_511_15 + arg_511_0 then
				arg_508_1.talkMaxDuration = 0
				arg_508_1.dialogCg_.alpha = 1

				arg_508_1.dialog_:SetActive(true)
				SetActive(arg_508_1.leftNameGo_, true)

				local var_511_17 = arg_508_1:FormatText(StoryNameCfg[1109].name)

				arg_508_1.leftNameTxt_.text = var_511_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_508_1.leftNameTxt_.transform)

				arg_508_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_508_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_508_1:RecordName(arg_508_1.leftNameTxt_.text)
				SetActive(arg_508_1.iconTrs_.gameObject, false)
				arg_508_1.callingController_:SetSelectedState("normal")

				local var_511_18 = arg_508_1:GetWordFromCfg(417161122)
				local var_511_19 = arg_508_1:FormatText(var_511_18.content)

				arg_508_1.text_.text = var_511_19

				LuaForUtil.ClearLinePrefixSymbol(arg_508_1.text_)

				local var_511_20 = 12
				local var_511_21 = utf8.len(var_511_19)
				local var_511_22 = var_511_20 <= 0 and var_511_16 or var_511_16 * (var_511_21 / var_511_20)

				if var_511_22 > 0 and var_511_16 < var_511_22 then
					arg_508_1.talkMaxDuration = var_511_22

					if var_511_22 + var_511_15 > arg_508_1.duration_ then
						arg_508_1.duration_ = var_511_22 + var_511_15
					end
				end

				arg_508_1.text_.text = var_511_19
				arg_508_1.typewritter.percent = 0

				arg_508_1.typewritter:SetDirty()
				arg_508_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161122", "story_v_out_417161.awb") ~= 0 then
					local var_511_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161122", "story_v_out_417161.awb") / 1000

					if var_511_23 + var_511_15 > arg_508_1.duration_ then
						arg_508_1.duration_ = var_511_23 + var_511_15
					end

					if var_511_18.prefab_name ~= "" and arg_508_1.actors_[var_511_18.prefab_name] ~= nil then
						local var_511_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_508_1.actors_[var_511_18.prefab_name].transform, "story_v_out_417161", "417161122", "story_v_out_417161.awb")

						arg_508_1:RecordAudio("417161122", var_511_24)
						arg_508_1:RecordAudio("417161122", var_511_24)
					else
						arg_508_1:AudioAction("play", "voice", "story_v_out_417161", "417161122", "story_v_out_417161.awb")
					end

					arg_508_1:RecordHistoryTalkVoice("story_v_out_417161", "417161122", "story_v_out_417161.awb")
				end

				arg_508_1:RecordContent(arg_508_1.text_.text)
			end

			local var_511_25 = math.max(var_511_16, arg_508_1.talkMaxDuration)

			if var_511_15 <= arg_508_1.time_ and arg_508_1.time_ < var_511_15 + var_511_25 then
				arg_508_1.typewritter.percent = (arg_508_1.time_ - var_511_15) / var_511_25

				arg_508_1.typewritter:SetDirty()
			end

			if arg_508_1.time_ >= var_511_15 + var_511_25 and arg_508_1.time_ < var_511_15 + var_511_25 + arg_511_0 then
				arg_508_1.typewritter.percent = 1

				arg_508_1.typewritter:SetDirty()
				arg_508_1:ShowNextGo(true)
			end
		end
	end,
	Play417161123 = function(arg_512_0, arg_512_1)
		arg_512_1.time_ = 0
		arg_512_1.frameCnt_ = 0
		arg_512_1.state_ = "playing"
		arg_512_1.curTalkId_ = 417161123
		arg_512_1.duration_ = 6.83

		SetActive(arg_512_1.tipsGo_, false)

		function arg_512_1.onSingleLineFinish_()
			arg_512_1.onSingleLineUpdate_ = nil
			arg_512_1.onSingleLineFinish_ = nil
			arg_512_1.state_ = "waiting"
		end

		function arg_512_1.playNext_(arg_514_0)
			if arg_514_0 == 1 then
				arg_512_0:Play417161124(arg_512_1)
			end
		end

		function arg_512_1.onSingleLineUpdate_(arg_515_0)
			local var_515_0 = arg_512_1.actors_["1034"]
			local var_515_1 = 0

			if var_515_1 < arg_512_1.time_ and arg_512_1.time_ <= var_515_1 + arg_515_0 then
				arg_512_1:SetSpriteNiuquEffect("1034", true)
			end

			local var_515_2 = arg_512_1.actors_["1034"]
			local var_515_3 = 0

			if var_515_3 < arg_512_1.time_ and arg_512_1.time_ <= var_515_3 + arg_515_0 then
				local var_515_4 = var_515_2:GetComponentInChildren(typeof(CanvasGroup))

				if var_515_4 then
					arg_512_1.var_.alphaOldValue1034 = var_515_4.alpha
					arg_512_1.var_.characterEffect1034 = var_515_4
				end
			end

			local var_515_5 = 0.2

			if var_515_3 <= arg_512_1.time_ and arg_512_1.time_ < var_515_3 + var_515_5 then
				local var_515_6 = (arg_512_1.time_ - var_515_3) / var_515_5
				local var_515_7 = Mathf.Lerp(arg_512_1.var_.alphaOldValue1034, 0.6, var_515_6)

				if arg_512_1.var_.characterEffect1034 then
					arg_512_1.var_.characterEffect1034.alpha = var_515_7
				end
			end

			if arg_512_1.time_ >= var_515_3 + var_515_5 and arg_512_1.time_ < var_515_3 + var_515_5 + arg_515_0 and arg_512_1.var_.characterEffect1034 then
				arg_512_1.var_.characterEffect1034.alpha = 0.6
			end

			local var_515_8 = 0
			local var_515_9 = 0.875

			if var_515_8 < arg_512_1.time_ and arg_512_1.time_ <= var_515_8 + arg_515_0 then
				arg_512_1.talkMaxDuration = 0
				arg_512_1.dialogCg_.alpha = 1

				arg_512_1.dialog_:SetActive(true)
				SetActive(arg_512_1.leftNameGo_, true)

				local var_515_10 = arg_512_1:FormatText(StoryNameCfg[1109].name)

				arg_512_1.leftNameTxt_.text = var_515_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_512_1.leftNameTxt_.transform)

				arg_512_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_512_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_512_1:RecordName(arg_512_1.leftNameTxt_.text)
				SetActive(arg_512_1.iconTrs_.gameObject, false)
				arg_512_1.callingController_:SetSelectedState("normal")

				local var_515_11 = arg_512_1:GetWordFromCfg(417161123)
				local var_515_12 = arg_512_1:FormatText(var_515_11.content)

				arg_512_1.text_.text = var_515_12

				LuaForUtil.ClearLinePrefixSymbol(arg_512_1.text_)

				local var_515_13 = 35
				local var_515_14 = utf8.len(var_515_12)
				local var_515_15 = var_515_13 <= 0 and var_515_9 or var_515_9 * (var_515_14 / var_515_13)

				if var_515_15 > 0 and var_515_9 < var_515_15 then
					arg_512_1.talkMaxDuration = var_515_15

					if var_515_15 + var_515_8 > arg_512_1.duration_ then
						arg_512_1.duration_ = var_515_15 + var_515_8
					end
				end

				arg_512_1.text_.text = var_515_12
				arg_512_1.typewritter.percent = 0

				arg_512_1.typewritter:SetDirty()
				arg_512_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161123", "story_v_out_417161.awb") ~= 0 then
					local var_515_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161123", "story_v_out_417161.awb") / 1000

					if var_515_16 + var_515_8 > arg_512_1.duration_ then
						arg_512_1.duration_ = var_515_16 + var_515_8
					end

					if var_515_11.prefab_name ~= "" and arg_512_1.actors_[var_515_11.prefab_name] ~= nil then
						local var_515_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_512_1.actors_[var_515_11.prefab_name].transform, "story_v_out_417161", "417161123", "story_v_out_417161.awb")

						arg_512_1:RecordAudio("417161123", var_515_17)
						arg_512_1:RecordAudio("417161123", var_515_17)
					else
						arg_512_1:AudioAction("play", "voice", "story_v_out_417161", "417161123", "story_v_out_417161.awb")
					end

					arg_512_1:RecordHistoryTalkVoice("story_v_out_417161", "417161123", "story_v_out_417161.awb")
				end

				arg_512_1:RecordContent(arg_512_1.text_.text)
			end

			local var_515_18 = math.max(var_515_9, arg_512_1.talkMaxDuration)

			if var_515_8 <= arg_512_1.time_ and arg_512_1.time_ < var_515_8 + var_515_18 then
				arg_512_1.typewritter.percent = (arg_512_1.time_ - var_515_8) / var_515_18

				arg_512_1.typewritter:SetDirty()
			end

			if arg_512_1.time_ >= var_515_8 + var_515_18 and arg_512_1.time_ < var_515_8 + var_515_18 + arg_515_0 then
				arg_512_1.typewritter.percent = 1

				arg_512_1.typewritter:SetDirty()
				arg_512_1:ShowNextGo(true)
			end
		end
	end,
	Play417161124 = function(arg_516_0, arg_516_1)
		arg_516_1.time_ = 0
		arg_516_1.frameCnt_ = 0
		arg_516_1.state_ = "playing"
		arg_516_1.curTalkId_ = 417161124
		arg_516_1.duration_ = 2.1

		SetActive(arg_516_1.tipsGo_, false)

		function arg_516_1.onSingleLineFinish_()
			arg_516_1.onSingleLineUpdate_ = nil
			arg_516_1.onSingleLineFinish_ = nil
			arg_516_1.state_ = "waiting"
		end

		function arg_516_1.playNext_(arg_518_0)
			if arg_518_0 == 1 then
				arg_516_0:Play417161125(arg_516_1)
			end
		end

		function arg_516_1.onSingleLineUpdate_(arg_519_0)
			local var_519_0 = arg_516_1.actors_["10128"]
			local var_519_1 = 0

			if var_519_1 < arg_516_1.time_ and arg_516_1.time_ <= var_519_1 + arg_519_0 and not isNil(var_519_0) and arg_516_1.var_.actorSpriteComps10128 == nil then
				arg_516_1.var_.actorSpriteComps10128 = var_519_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_519_2 = 0.2

			if var_519_1 <= arg_516_1.time_ and arg_516_1.time_ < var_519_1 + var_519_2 and not isNil(var_519_0) then
				local var_519_3 = (arg_516_1.time_ - var_519_1) / var_519_2

				if arg_516_1.var_.actorSpriteComps10128 then
					for iter_519_0, iter_519_1 in pairs(arg_516_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_519_1 then
							if arg_516_1.isInRecall_ then
								local var_519_4 = Mathf.Lerp(iter_519_1.color.r, arg_516_1.hightColor1.r, var_519_3)
								local var_519_5 = Mathf.Lerp(iter_519_1.color.g, arg_516_1.hightColor1.g, var_519_3)
								local var_519_6 = Mathf.Lerp(iter_519_1.color.b, arg_516_1.hightColor1.b, var_519_3)

								iter_519_1.color = Color.New(var_519_4, var_519_5, var_519_6)
							else
								local var_519_7 = Mathf.Lerp(iter_519_1.color.r, 1, var_519_3)

								iter_519_1.color = Color.New(var_519_7, var_519_7, var_519_7)
							end
						end
					end
				end
			end

			if arg_516_1.time_ >= var_519_1 + var_519_2 and arg_516_1.time_ < var_519_1 + var_519_2 + arg_519_0 and not isNil(var_519_0) and arg_516_1.var_.actorSpriteComps10128 then
				for iter_519_2, iter_519_3 in pairs(arg_516_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_519_3 then
						if arg_516_1.isInRecall_ then
							iter_519_3.color = arg_516_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_519_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_516_1.var_.actorSpriteComps10128 = nil
			end

			local var_519_8 = arg_516_1.actors_["1034"]
			local var_519_9 = 0

			if var_519_9 < arg_516_1.time_ and arg_516_1.time_ <= var_519_9 + arg_519_0 and not isNil(var_519_8) and arg_516_1.var_.actorSpriteComps1034 == nil then
				arg_516_1.var_.actorSpriteComps1034 = var_519_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_519_10 = 0.2

			if var_519_9 <= arg_516_1.time_ and arg_516_1.time_ < var_519_9 + var_519_10 and not isNil(var_519_8) then
				local var_519_11 = (arg_516_1.time_ - var_519_9) / var_519_10

				if arg_516_1.var_.actorSpriteComps1034 then
					for iter_519_4, iter_519_5 in pairs(arg_516_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_519_5 then
							if arg_516_1.isInRecall_ then
								local var_519_12 = Mathf.Lerp(iter_519_5.color.r, arg_516_1.hightColor2.r, var_519_11)
								local var_519_13 = Mathf.Lerp(iter_519_5.color.g, arg_516_1.hightColor2.g, var_519_11)
								local var_519_14 = Mathf.Lerp(iter_519_5.color.b, arg_516_1.hightColor2.b, var_519_11)

								iter_519_5.color = Color.New(var_519_12, var_519_13, var_519_14)
							else
								local var_519_15 = Mathf.Lerp(iter_519_5.color.r, 0.5, var_519_11)

								iter_519_5.color = Color.New(var_519_15, var_519_15, var_519_15)
							end
						end
					end
				end
			end

			if arg_516_1.time_ >= var_519_9 + var_519_10 and arg_516_1.time_ < var_519_9 + var_519_10 + arg_519_0 and not isNil(var_519_8) and arg_516_1.var_.actorSpriteComps1034 then
				for iter_519_6, iter_519_7 in pairs(arg_516_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_519_7 then
						if arg_516_1.isInRecall_ then
							iter_519_7.color = arg_516_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_519_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_516_1.var_.actorSpriteComps1034 = nil
			end

			local var_519_16 = arg_516_1.actors_["10128"].transform
			local var_519_17 = 0

			if var_519_17 < arg_516_1.time_ and arg_516_1.time_ <= var_519_17 + arg_519_0 then
				arg_516_1.var_.moveOldPos10128 = var_519_16.localPosition
				var_519_16.localScale = Vector3.New(1, 1, 1)

				arg_516_1:CheckSpriteTmpPos("10128", 3)

				local var_519_18 = var_519_16.childCount

				for iter_519_8 = 0, var_519_18 - 1 do
					local var_519_19 = var_519_16:GetChild(iter_519_8)

					if var_519_19.name == "" or not string.find(var_519_19.name, "split") then
						var_519_19.gameObject:SetActive(true)
					else
						var_519_19.gameObject:SetActive(false)
					end
				end
			end

			local var_519_20 = 0.001

			if var_519_17 <= arg_516_1.time_ and arg_516_1.time_ < var_519_17 + var_519_20 then
				local var_519_21 = (arg_516_1.time_ - var_519_17) / var_519_20
				local var_519_22 = Vector3.New(0, -347, -300)

				var_519_16.localPosition = Vector3.Lerp(arg_516_1.var_.moveOldPos10128, var_519_22, var_519_21)
			end

			if arg_516_1.time_ >= var_519_17 + var_519_20 and arg_516_1.time_ < var_519_17 + var_519_20 + arg_519_0 then
				var_519_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_519_23 = arg_516_1.actors_["1034"].transform
			local var_519_24 = 0

			if var_519_24 < arg_516_1.time_ and arg_516_1.time_ <= var_519_24 + arg_519_0 then
				arg_516_1.var_.moveOldPos1034 = var_519_23.localPosition
				var_519_23.localScale = Vector3.New(1, 1, 1)

				arg_516_1:CheckSpriteTmpPos("1034", 7)

				local var_519_25 = var_519_23.childCount

				for iter_519_9 = 0, var_519_25 - 1 do
					local var_519_26 = var_519_23:GetChild(iter_519_9)

					if var_519_26.name == "" or not string.find(var_519_26.name, "split") then
						var_519_26.gameObject:SetActive(true)
					else
						var_519_26.gameObject:SetActive(false)
					end
				end
			end

			local var_519_27 = 0.001

			if var_519_24 <= arg_516_1.time_ and arg_516_1.time_ < var_519_24 + var_519_27 then
				local var_519_28 = (arg_516_1.time_ - var_519_24) / var_519_27
				local var_519_29 = Vector3.New(0, -2000, 0)

				var_519_23.localPosition = Vector3.Lerp(arg_516_1.var_.moveOldPos1034, var_519_29, var_519_28)
			end

			if arg_516_1.time_ >= var_519_24 + var_519_27 and arg_516_1.time_ < var_519_24 + var_519_27 + arg_519_0 then
				var_519_23.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_519_30 = 0
			local var_519_31 = 0.25

			if var_519_30 < arg_516_1.time_ and arg_516_1.time_ <= var_519_30 + arg_519_0 then
				arg_516_1.talkMaxDuration = 0
				arg_516_1.dialogCg_.alpha = 1

				arg_516_1.dialog_:SetActive(true)
				SetActive(arg_516_1.leftNameGo_, true)

				local var_519_32 = arg_516_1:FormatText(StoryNameCfg[595].name)

				arg_516_1.leftNameTxt_.text = var_519_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_516_1.leftNameTxt_.transform)

				arg_516_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_516_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_516_1:RecordName(arg_516_1.leftNameTxt_.text)
				SetActive(arg_516_1.iconTrs_.gameObject, false)
				arg_516_1.callingController_:SetSelectedState("normal")

				local var_519_33 = arg_516_1:GetWordFromCfg(417161124)
				local var_519_34 = arg_516_1:FormatText(var_519_33.content)

				arg_516_1.text_.text = var_519_34

				LuaForUtil.ClearLinePrefixSymbol(arg_516_1.text_)

				local var_519_35 = 10
				local var_519_36 = utf8.len(var_519_34)
				local var_519_37 = var_519_35 <= 0 and var_519_31 or var_519_31 * (var_519_36 / var_519_35)

				if var_519_37 > 0 and var_519_31 < var_519_37 then
					arg_516_1.talkMaxDuration = var_519_37

					if var_519_37 + var_519_30 > arg_516_1.duration_ then
						arg_516_1.duration_ = var_519_37 + var_519_30
					end
				end

				arg_516_1.text_.text = var_519_34
				arg_516_1.typewritter.percent = 0

				arg_516_1.typewritter:SetDirty()
				arg_516_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161124", "story_v_out_417161.awb") ~= 0 then
					local var_519_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161124", "story_v_out_417161.awb") / 1000

					if var_519_38 + var_519_30 > arg_516_1.duration_ then
						arg_516_1.duration_ = var_519_38 + var_519_30
					end

					if var_519_33.prefab_name ~= "" and arg_516_1.actors_[var_519_33.prefab_name] ~= nil then
						local var_519_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_516_1.actors_[var_519_33.prefab_name].transform, "story_v_out_417161", "417161124", "story_v_out_417161.awb")

						arg_516_1:RecordAudio("417161124", var_519_39)
						arg_516_1:RecordAudio("417161124", var_519_39)
					else
						arg_516_1:AudioAction("play", "voice", "story_v_out_417161", "417161124", "story_v_out_417161.awb")
					end

					arg_516_1:RecordHistoryTalkVoice("story_v_out_417161", "417161124", "story_v_out_417161.awb")
				end

				arg_516_1:RecordContent(arg_516_1.text_.text)
			end

			local var_519_40 = math.max(var_519_31, arg_516_1.talkMaxDuration)

			if var_519_30 <= arg_516_1.time_ and arg_516_1.time_ < var_519_30 + var_519_40 then
				arg_516_1.typewritter.percent = (arg_516_1.time_ - var_519_30) / var_519_40

				arg_516_1.typewritter:SetDirty()
			end

			if arg_516_1.time_ >= var_519_30 + var_519_40 and arg_516_1.time_ < var_519_30 + var_519_40 + arg_519_0 then
				arg_516_1.typewritter.percent = 1

				arg_516_1.typewritter:SetDirty()
				arg_516_1:ShowNextGo(true)
			end
		end
	end,
	Play417161125 = function(arg_520_0, arg_520_1)
		arg_520_1.time_ = 0
		arg_520_1.frameCnt_ = 0
		arg_520_1.state_ = "playing"
		arg_520_1.curTalkId_ = 417161125
		arg_520_1.duration_ = 5.17

		SetActive(arg_520_1.tipsGo_, false)

		function arg_520_1.onSingleLineFinish_()
			arg_520_1.onSingleLineUpdate_ = nil
			arg_520_1.onSingleLineFinish_ = nil
			arg_520_1.state_ = "waiting"
		end

		function arg_520_1.playNext_(arg_522_0)
			if arg_522_0 == 1 then
				arg_520_0:Play417161126(arg_520_1)
			end
		end

		function arg_520_1.onSingleLineUpdate_(arg_523_0)
			local var_523_0 = 0
			local var_523_1 = 0.6

			if var_523_0 < arg_520_1.time_ and arg_520_1.time_ <= var_523_0 + arg_523_0 then
				arg_520_1.talkMaxDuration = 0
				arg_520_1.dialogCg_.alpha = 1

				arg_520_1.dialog_:SetActive(true)
				SetActive(arg_520_1.leftNameGo_, true)

				local var_523_2 = arg_520_1:FormatText(StoryNameCfg[595].name)

				arg_520_1.leftNameTxt_.text = var_523_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_520_1.leftNameTxt_.transform)

				arg_520_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_520_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_520_1:RecordName(arg_520_1.leftNameTxt_.text)
				SetActive(arg_520_1.iconTrs_.gameObject, false)
				arg_520_1.callingController_:SetSelectedState("normal")

				local var_523_3 = arg_520_1:GetWordFromCfg(417161125)
				local var_523_4 = arg_520_1:FormatText(var_523_3.content)

				arg_520_1.text_.text = var_523_4

				LuaForUtil.ClearLinePrefixSymbol(arg_520_1.text_)

				local var_523_5 = 24
				local var_523_6 = utf8.len(var_523_4)
				local var_523_7 = var_523_5 <= 0 and var_523_1 or var_523_1 * (var_523_6 / var_523_5)

				if var_523_7 > 0 and var_523_1 < var_523_7 then
					arg_520_1.talkMaxDuration = var_523_7

					if var_523_7 + var_523_0 > arg_520_1.duration_ then
						arg_520_1.duration_ = var_523_7 + var_523_0
					end
				end

				arg_520_1.text_.text = var_523_4
				arg_520_1.typewritter.percent = 0

				arg_520_1.typewritter:SetDirty()
				arg_520_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161125", "story_v_out_417161.awb") ~= 0 then
					local var_523_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161125", "story_v_out_417161.awb") / 1000

					if var_523_8 + var_523_0 > arg_520_1.duration_ then
						arg_520_1.duration_ = var_523_8 + var_523_0
					end

					if var_523_3.prefab_name ~= "" and arg_520_1.actors_[var_523_3.prefab_name] ~= nil then
						local var_523_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_520_1.actors_[var_523_3.prefab_name].transform, "story_v_out_417161", "417161125", "story_v_out_417161.awb")

						arg_520_1:RecordAudio("417161125", var_523_9)
						arg_520_1:RecordAudio("417161125", var_523_9)
					else
						arg_520_1:AudioAction("play", "voice", "story_v_out_417161", "417161125", "story_v_out_417161.awb")
					end

					arg_520_1:RecordHistoryTalkVoice("story_v_out_417161", "417161125", "story_v_out_417161.awb")
				end

				arg_520_1:RecordContent(arg_520_1.text_.text)
			end

			local var_523_10 = math.max(var_523_1, arg_520_1.talkMaxDuration)

			if var_523_0 <= arg_520_1.time_ and arg_520_1.time_ < var_523_0 + var_523_10 then
				arg_520_1.typewritter.percent = (arg_520_1.time_ - var_523_0) / var_523_10

				arg_520_1.typewritter:SetDirty()
			end

			if arg_520_1.time_ >= var_523_0 + var_523_10 and arg_520_1.time_ < var_523_0 + var_523_10 + arg_523_0 then
				arg_520_1.typewritter.percent = 1

				arg_520_1.typewritter:SetDirty()
				arg_520_1:ShowNextGo(true)
			end
		end
	end,
	Play417161126 = function(arg_524_0, arg_524_1)
		arg_524_1.time_ = 0
		arg_524_1.frameCnt_ = 0
		arg_524_1.state_ = "playing"
		arg_524_1.curTalkId_ = 417161126
		arg_524_1.duration_ = 5

		SetActive(arg_524_1.tipsGo_, false)

		function arg_524_1.onSingleLineFinish_()
			arg_524_1.onSingleLineUpdate_ = nil
			arg_524_1.onSingleLineFinish_ = nil
			arg_524_1.state_ = "waiting"
		end

		function arg_524_1.playNext_(arg_526_0)
			if arg_526_0 == 1 then
				arg_524_0:Play417161127(arg_524_1)
			end
		end

		function arg_524_1.onSingleLineUpdate_(arg_527_0)
			local var_527_0 = arg_524_1.actors_["10128"]
			local var_527_1 = 0

			if var_527_1 < arg_524_1.time_ and arg_524_1.time_ <= var_527_1 + arg_527_0 and not isNil(var_527_0) and arg_524_1.var_.actorSpriteComps10128 == nil then
				arg_524_1.var_.actorSpriteComps10128 = var_527_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_527_2 = 0.2

			if var_527_1 <= arg_524_1.time_ and arg_524_1.time_ < var_527_1 + var_527_2 and not isNil(var_527_0) then
				local var_527_3 = (arg_524_1.time_ - var_527_1) / var_527_2

				if arg_524_1.var_.actorSpriteComps10128 then
					for iter_527_0, iter_527_1 in pairs(arg_524_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_527_1 then
							if arg_524_1.isInRecall_ then
								local var_527_4 = Mathf.Lerp(iter_527_1.color.r, arg_524_1.hightColor2.r, var_527_3)
								local var_527_5 = Mathf.Lerp(iter_527_1.color.g, arg_524_1.hightColor2.g, var_527_3)
								local var_527_6 = Mathf.Lerp(iter_527_1.color.b, arg_524_1.hightColor2.b, var_527_3)

								iter_527_1.color = Color.New(var_527_4, var_527_5, var_527_6)
							else
								local var_527_7 = Mathf.Lerp(iter_527_1.color.r, 0.5, var_527_3)

								iter_527_1.color = Color.New(var_527_7, var_527_7, var_527_7)
							end
						end
					end
				end
			end

			if arg_524_1.time_ >= var_527_1 + var_527_2 and arg_524_1.time_ < var_527_1 + var_527_2 + arg_527_0 and not isNil(var_527_0) and arg_524_1.var_.actorSpriteComps10128 then
				for iter_527_2, iter_527_3 in pairs(arg_524_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_527_3 then
						if arg_524_1.isInRecall_ then
							iter_527_3.color = arg_524_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_527_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_524_1.var_.actorSpriteComps10128 = nil
			end

			local var_527_8 = arg_524_1.actors_["10128"].transform
			local var_527_9 = 0

			if var_527_9 < arg_524_1.time_ and arg_524_1.time_ <= var_527_9 + arg_527_0 then
				arg_524_1.var_.moveOldPos10128 = var_527_8.localPosition
				var_527_8.localScale = Vector3.New(1, 1, 1)

				arg_524_1:CheckSpriteTmpPos("10128", 7)

				local var_527_10 = var_527_8.childCount

				for iter_527_4 = 0, var_527_10 - 1 do
					local var_527_11 = var_527_8:GetChild(iter_527_4)

					if var_527_11.name == "" or not string.find(var_527_11.name, "split") then
						var_527_11.gameObject:SetActive(true)
					else
						var_527_11.gameObject:SetActive(false)
					end
				end
			end

			local var_527_12 = 0.001

			if var_527_9 <= arg_524_1.time_ and arg_524_1.time_ < var_527_9 + var_527_12 then
				local var_527_13 = (arg_524_1.time_ - var_527_9) / var_527_12
				local var_527_14 = Vector3.New(0, -2000, -300)

				var_527_8.localPosition = Vector3.Lerp(arg_524_1.var_.moveOldPos10128, var_527_14, var_527_13)
			end

			if arg_524_1.time_ >= var_527_9 + var_527_12 and arg_524_1.time_ < var_527_9 + var_527_12 + arg_527_0 then
				var_527_8.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_527_15 = 1.05842309817672
			local var_527_16 = 1

			if var_527_15 < arg_524_1.time_ and arg_524_1.time_ <= var_527_15 + arg_527_0 then
				local var_527_17 = "play"
				local var_527_18 = "effect"

				arg_524_1:AudioAction(var_527_17, var_527_18, "se_story_16", "se_story_16_channel", "")
			end

			local var_527_19 = 0
			local var_527_20 = 1.125

			if var_527_19 < arg_524_1.time_ and arg_524_1.time_ <= var_527_19 + arg_527_0 then
				arg_524_1.talkMaxDuration = 0
				arg_524_1.dialogCg_.alpha = 1

				arg_524_1.dialog_:SetActive(true)
				SetActive(arg_524_1.leftNameGo_, false)

				arg_524_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_524_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_524_1:RecordName(arg_524_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_524_1.iconTrs_.gameObject, false)
				arg_524_1.callingController_:SetSelectedState("normal")

				local var_527_21 = arg_524_1:GetWordFromCfg(417161126)
				local var_527_22 = arg_524_1:FormatText(var_527_21.content)

				arg_524_1.text_.text = var_527_22

				LuaForUtil.ClearLinePrefixSymbol(arg_524_1.text_)

				local var_527_23 = 45
				local var_527_24 = utf8.len(var_527_22)
				local var_527_25 = var_527_23 <= 0 and var_527_20 or var_527_20 * (var_527_24 / var_527_23)

				if var_527_25 > 0 and var_527_20 < var_527_25 then
					arg_524_1.talkMaxDuration = var_527_25

					if var_527_25 + var_527_19 > arg_524_1.duration_ then
						arg_524_1.duration_ = var_527_25 + var_527_19
					end
				end

				arg_524_1.text_.text = var_527_22
				arg_524_1.typewritter.percent = 0

				arg_524_1.typewritter:SetDirty()
				arg_524_1:ShowNextGo(false)
				arg_524_1:RecordContent(arg_524_1.text_.text)
			end

			local var_527_26 = math.max(var_527_20, arg_524_1.talkMaxDuration)

			if var_527_19 <= arg_524_1.time_ and arg_524_1.time_ < var_527_19 + var_527_26 then
				arg_524_1.typewritter.percent = (arg_524_1.time_ - var_527_19) / var_527_26

				arg_524_1.typewritter:SetDirty()
			end

			if arg_524_1.time_ >= var_527_19 + var_527_26 and arg_524_1.time_ < var_527_19 + var_527_26 + arg_527_0 then
				arg_524_1.typewritter.percent = 1

				arg_524_1.typewritter:SetDirty()
				arg_524_1:ShowNextGo(true)
			end
		end
	end,
	Play417161127 = function(arg_528_0, arg_528_1)
		arg_528_1.time_ = 0
		arg_528_1.frameCnt_ = 0
		arg_528_1.state_ = "playing"
		arg_528_1.curTalkId_ = 417161127
		arg_528_1.duration_ = 5

		SetActive(arg_528_1.tipsGo_, false)

		function arg_528_1.onSingleLineFinish_()
			arg_528_1.onSingleLineUpdate_ = nil
			arg_528_1.onSingleLineFinish_ = nil
			arg_528_1.state_ = "waiting"
		end

		function arg_528_1.playNext_(arg_530_0)
			if arg_530_0 == 1 then
				arg_528_0:Play417161128(arg_528_1)
			end
		end

		function arg_528_1.onSingleLineUpdate_(arg_531_0)
			local var_531_0 = 0
			local var_531_1 = 1.1

			if var_531_0 < arg_528_1.time_ and arg_528_1.time_ <= var_531_0 + arg_531_0 then
				arg_528_1.talkMaxDuration = 0
				arg_528_1.dialogCg_.alpha = 1

				arg_528_1.dialog_:SetActive(true)
				SetActive(arg_528_1.leftNameGo_, false)

				arg_528_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_528_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_528_1:RecordName(arg_528_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_528_1.iconTrs_.gameObject, false)
				arg_528_1.callingController_:SetSelectedState("normal")

				local var_531_2 = arg_528_1:GetWordFromCfg(417161127)
				local var_531_3 = arg_528_1:FormatText(var_531_2.content)

				arg_528_1.text_.text = var_531_3

				LuaForUtil.ClearLinePrefixSymbol(arg_528_1.text_)

				local var_531_4 = 44
				local var_531_5 = utf8.len(var_531_3)
				local var_531_6 = var_531_4 <= 0 and var_531_1 or var_531_1 * (var_531_5 / var_531_4)

				if var_531_6 > 0 and var_531_1 < var_531_6 then
					arg_528_1.talkMaxDuration = var_531_6

					if var_531_6 + var_531_0 > arg_528_1.duration_ then
						arg_528_1.duration_ = var_531_6 + var_531_0
					end
				end

				arg_528_1.text_.text = var_531_3
				arg_528_1.typewritter.percent = 0

				arg_528_1.typewritter:SetDirty()
				arg_528_1:ShowNextGo(false)
				arg_528_1:RecordContent(arg_528_1.text_.text)
			end

			local var_531_7 = math.max(var_531_1, arg_528_1.talkMaxDuration)

			if var_531_0 <= arg_528_1.time_ and arg_528_1.time_ < var_531_0 + var_531_7 then
				arg_528_1.typewritter.percent = (arg_528_1.time_ - var_531_0) / var_531_7

				arg_528_1.typewritter:SetDirty()
			end

			if arg_528_1.time_ >= var_531_0 + var_531_7 and arg_528_1.time_ < var_531_0 + var_531_7 + arg_531_0 then
				arg_528_1.typewritter.percent = 1

				arg_528_1.typewritter:SetDirty()
				arg_528_1:ShowNextGo(true)
			end
		end
	end,
	Play417161128 = function(arg_532_0, arg_532_1)
		arg_532_1.time_ = 0
		arg_532_1.frameCnt_ = 0
		arg_532_1.state_ = "playing"
		arg_532_1.curTalkId_ = 417161128
		arg_532_1.duration_ = 1.3

		SetActive(arg_532_1.tipsGo_, false)

		function arg_532_1.onSingleLineFinish_()
			arg_532_1.onSingleLineUpdate_ = nil
			arg_532_1.onSingleLineFinish_ = nil
			arg_532_1.state_ = "waiting"
		end

		function arg_532_1.playNext_(arg_534_0)
			if arg_534_0 == 1 then
				arg_532_0:Play417161129(arg_532_1)
			end
		end

		function arg_532_1.onSingleLineUpdate_(arg_535_0)
			local var_535_0 = arg_532_1.actors_["10128"]
			local var_535_1 = 0

			if var_535_1 < arg_532_1.time_ and arg_532_1.time_ <= var_535_1 + arg_535_0 and not isNil(var_535_0) and arg_532_1.var_.actorSpriteComps10128 == nil then
				arg_532_1.var_.actorSpriteComps10128 = var_535_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_535_2 = 0.2

			if var_535_1 <= arg_532_1.time_ and arg_532_1.time_ < var_535_1 + var_535_2 and not isNil(var_535_0) then
				local var_535_3 = (arg_532_1.time_ - var_535_1) / var_535_2

				if arg_532_1.var_.actorSpriteComps10128 then
					for iter_535_0, iter_535_1 in pairs(arg_532_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_535_1 then
							if arg_532_1.isInRecall_ then
								local var_535_4 = Mathf.Lerp(iter_535_1.color.r, arg_532_1.hightColor1.r, var_535_3)
								local var_535_5 = Mathf.Lerp(iter_535_1.color.g, arg_532_1.hightColor1.g, var_535_3)
								local var_535_6 = Mathf.Lerp(iter_535_1.color.b, arg_532_1.hightColor1.b, var_535_3)

								iter_535_1.color = Color.New(var_535_4, var_535_5, var_535_6)
							else
								local var_535_7 = Mathf.Lerp(iter_535_1.color.r, 1, var_535_3)

								iter_535_1.color = Color.New(var_535_7, var_535_7, var_535_7)
							end
						end
					end
				end
			end

			if arg_532_1.time_ >= var_535_1 + var_535_2 and arg_532_1.time_ < var_535_1 + var_535_2 + arg_535_0 and not isNil(var_535_0) and arg_532_1.var_.actorSpriteComps10128 then
				for iter_535_2, iter_535_3 in pairs(arg_532_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_535_3 then
						if arg_532_1.isInRecall_ then
							iter_535_3.color = arg_532_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_535_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_532_1.var_.actorSpriteComps10128 = nil
			end

			local var_535_8 = arg_532_1.actors_["10128"].transform
			local var_535_9 = 0

			if var_535_9 < arg_532_1.time_ and arg_532_1.time_ <= var_535_9 + arg_535_0 then
				arg_532_1.var_.moveOldPos10128 = var_535_8.localPosition
				var_535_8.localScale = Vector3.New(1, 1, 1)

				arg_532_1:CheckSpriteTmpPos("10128", 3)

				local var_535_10 = var_535_8.childCount

				for iter_535_4 = 0, var_535_10 - 1 do
					local var_535_11 = var_535_8:GetChild(iter_535_4)

					if var_535_11.name == "" or not string.find(var_535_11.name, "split") then
						var_535_11.gameObject:SetActive(true)
					else
						var_535_11.gameObject:SetActive(false)
					end
				end
			end

			local var_535_12 = 0.001

			if var_535_9 <= arg_532_1.time_ and arg_532_1.time_ < var_535_9 + var_535_12 then
				local var_535_13 = (arg_532_1.time_ - var_535_9) / var_535_12
				local var_535_14 = Vector3.New(0, -347, -300)

				var_535_8.localPosition = Vector3.Lerp(arg_532_1.var_.moveOldPos10128, var_535_14, var_535_13)
			end

			if arg_532_1.time_ >= var_535_9 + var_535_12 and arg_532_1.time_ < var_535_9 + var_535_12 + arg_535_0 then
				var_535_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_535_15 = 0
			local var_535_16 = 0.1

			if var_535_15 < arg_532_1.time_ and arg_532_1.time_ <= var_535_15 + arg_535_0 then
				arg_532_1.talkMaxDuration = 0
				arg_532_1.dialogCg_.alpha = 1

				arg_532_1.dialog_:SetActive(true)
				SetActive(arg_532_1.leftNameGo_, true)

				local var_535_17 = arg_532_1:FormatText(StoryNameCfg[595].name)

				arg_532_1.leftNameTxt_.text = var_535_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_532_1.leftNameTxt_.transform)

				arg_532_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_532_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_532_1:RecordName(arg_532_1.leftNameTxt_.text)
				SetActive(arg_532_1.iconTrs_.gameObject, false)
				arg_532_1.callingController_:SetSelectedState("normal")

				local var_535_18 = arg_532_1:GetWordFromCfg(417161128)
				local var_535_19 = arg_532_1:FormatText(var_535_18.content)

				arg_532_1.text_.text = var_535_19

				LuaForUtil.ClearLinePrefixSymbol(arg_532_1.text_)

				local var_535_20 = 4
				local var_535_21 = utf8.len(var_535_19)
				local var_535_22 = var_535_20 <= 0 and var_535_16 or var_535_16 * (var_535_21 / var_535_20)

				if var_535_22 > 0 and var_535_16 < var_535_22 then
					arg_532_1.talkMaxDuration = var_535_22

					if var_535_22 + var_535_15 > arg_532_1.duration_ then
						arg_532_1.duration_ = var_535_22 + var_535_15
					end
				end

				arg_532_1.text_.text = var_535_19
				arg_532_1.typewritter.percent = 0

				arg_532_1.typewritter:SetDirty()
				arg_532_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161128", "story_v_out_417161.awb") ~= 0 then
					local var_535_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161128", "story_v_out_417161.awb") / 1000

					if var_535_23 + var_535_15 > arg_532_1.duration_ then
						arg_532_1.duration_ = var_535_23 + var_535_15
					end

					if var_535_18.prefab_name ~= "" and arg_532_1.actors_[var_535_18.prefab_name] ~= nil then
						local var_535_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_532_1.actors_[var_535_18.prefab_name].transform, "story_v_out_417161", "417161128", "story_v_out_417161.awb")

						arg_532_1:RecordAudio("417161128", var_535_24)
						arg_532_1:RecordAudio("417161128", var_535_24)
					else
						arg_532_1:AudioAction("play", "voice", "story_v_out_417161", "417161128", "story_v_out_417161.awb")
					end

					arg_532_1:RecordHistoryTalkVoice("story_v_out_417161", "417161128", "story_v_out_417161.awb")
				end

				arg_532_1:RecordContent(arg_532_1.text_.text)
			end

			local var_535_25 = math.max(var_535_16, arg_532_1.talkMaxDuration)

			if var_535_15 <= arg_532_1.time_ and arg_532_1.time_ < var_535_15 + var_535_25 then
				arg_532_1.typewritter.percent = (arg_532_1.time_ - var_535_15) / var_535_25

				arg_532_1.typewritter:SetDirty()
			end

			if arg_532_1.time_ >= var_535_15 + var_535_25 and arg_532_1.time_ < var_535_15 + var_535_25 + arg_535_0 then
				arg_532_1.typewritter.percent = 1

				arg_532_1.typewritter:SetDirty()
				arg_532_1:ShowNextGo(true)
			end
		end
	end,
	Play417161129 = function(arg_536_0, arg_536_1)
		arg_536_1.time_ = 0
		arg_536_1.frameCnt_ = 0
		arg_536_1.state_ = "playing"
		arg_536_1.curTalkId_ = 417161129
		arg_536_1.duration_ = 4.93

		SetActive(arg_536_1.tipsGo_, false)

		function arg_536_1.onSingleLineFinish_()
			arg_536_1.onSingleLineUpdate_ = nil
			arg_536_1.onSingleLineFinish_ = nil
			arg_536_1.state_ = "waiting"
		end

		function arg_536_1.playNext_(arg_538_0)
			if arg_538_0 == 1 then
				arg_536_0:Play417161130(arg_536_1)
			end
		end

		function arg_536_1.onSingleLineUpdate_(arg_539_0)
			local var_539_0 = "10111"

			if arg_536_1.actors_[var_539_0] == nil then
				local var_539_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10111")

				if not isNil(var_539_1) then
					local var_539_2 = Object.Instantiate(var_539_1, arg_536_1.canvasGo_.transform)

					var_539_2.transform:SetSiblingIndex(1)

					var_539_2.name = var_539_0
					var_539_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_536_1.actors_[var_539_0] = var_539_2

					local var_539_3 = var_539_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_536_1.isInRecall_ then
						for iter_539_0, iter_539_1 in ipairs(var_539_3) do
							iter_539_1.color = arg_536_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_539_4 = arg_536_1.actors_["10111"]
			local var_539_5 = 0

			if var_539_5 < arg_536_1.time_ and arg_536_1.time_ <= var_539_5 + arg_539_0 and not isNil(var_539_4) and arg_536_1.var_.actorSpriteComps10111 == nil then
				arg_536_1.var_.actorSpriteComps10111 = var_539_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_539_6 = 0.2

			if var_539_5 <= arg_536_1.time_ and arg_536_1.time_ < var_539_5 + var_539_6 and not isNil(var_539_4) then
				local var_539_7 = (arg_536_1.time_ - var_539_5) / var_539_6

				if arg_536_1.var_.actorSpriteComps10111 then
					for iter_539_2, iter_539_3 in pairs(arg_536_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_539_3 then
							if arg_536_1.isInRecall_ then
								local var_539_8 = Mathf.Lerp(iter_539_3.color.r, arg_536_1.hightColor1.r, var_539_7)
								local var_539_9 = Mathf.Lerp(iter_539_3.color.g, arg_536_1.hightColor1.g, var_539_7)
								local var_539_10 = Mathf.Lerp(iter_539_3.color.b, arg_536_1.hightColor1.b, var_539_7)

								iter_539_3.color = Color.New(var_539_8, var_539_9, var_539_10)
							else
								local var_539_11 = Mathf.Lerp(iter_539_3.color.r, 1, var_539_7)

								iter_539_3.color = Color.New(var_539_11, var_539_11, var_539_11)
							end
						end
					end
				end
			end

			if arg_536_1.time_ >= var_539_5 + var_539_6 and arg_536_1.time_ < var_539_5 + var_539_6 + arg_539_0 and not isNil(var_539_4) and arg_536_1.var_.actorSpriteComps10111 then
				for iter_539_4, iter_539_5 in pairs(arg_536_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_539_5 then
						if arg_536_1.isInRecall_ then
							iter_539_5.color = arg_536_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_539_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_536_1.var_.actorSpriteComps10111 = nil
			end

			local var_539_12 = arg_536_1.actors_["10128"]
			local var_539_13 = 0

			if var_539_13 < arg_536_1.time_ and arg_536_1.time_ <= var_539_13 + arg_539_0 and not isNil(var_539_12) and arg_536_1.var_.actorSpriteComps10128 == nil then
				arg_536_1.var_.actorSpriteComps10128 = var_539_12:GetComponentsInChildren(typeof(Image), true)
			end

			local var_539_14 = 0.2

			if var_539_13 <= arg_536_1.time_ and arg_536_1.time_ < var_539_13 + var_539_14 and not isNil(var_539_12) then
				local var_539_15 = (arg_536_1.time_ - var_539_13) / var_539_14

				if arg_536_1.var_.actorSpriteComps10128 then
					for iter_539_6, iter_539_7 in pairs(arg_536_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_539_7 then
							if arg_536_1.isInRecall_ then
								local var_539_16 = Mathf.Lerp(iter_539_7.color.r, arg_536_1.hightColor2.r, var_539_15)
								local var_539_17 = Mathf.Lerp(iter_539_7.color.g, arg_536_1.hightColor2.g, var_539_15)
								local var_539_18 = Mathf.Lerp(iter_539_7.color.b, arg_536_1.hightColor2.b, var_539_15)

								iter_539_7.color = Color.New(var_539_16, var_539_17, var_539_18)
							else
								local var_539_19 = Mathf.Lerp(iter_539_7.color.r, 0.5, var_539_15)

								iter_539_7.color = Color.New(var_539_19, var_539_19, var_539_19)
							end
						end
					end
				end
			end

			if arg_536_1.time_ >= var_539_13 + var_539_14 and arg_536_1.time_ < var_539_13 + var_539_14 + arg_539_0 and not isNil(var_539_12) and arg_536_1.var_.actorSpriteComps10128 then
				for iter_539_8, iter_539_9 in pairs(arg_536_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_539_9 then
						if arg_536_1.isInRecall_ then
							iter_539_9.color = arg_536_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_539_9.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_536_1.var_.actorSpriteComps10128 = nil
			end

			local var_539_20 = arg_536_1.actors_["10128"].transform
			local var_539_21 = 0

			if var_539_21 < arg_536_1.time_ and arg_536_1.time_ <= var_539_21 + arg_539_0 then
				arg_536_1.var_.moveOldPos10128 = var_539_20.localPosition
				var_539_20.localScale = Vector3.New(1, 1, 1)

				arg_536_1:CheckSpriteTmpPos("10128", 2)

				local var_539_22 = var_539_20.childCount

				for iter_539_10 = 0, var_539_22 - 1 do
					local var_539_23 = var_539_20:GetChild(iter_539_10)

					if var_539_23.name == "" or not string.find(var_539_23.name, "split") then
						var_539_23.gameObject:SetActive(true)
					else
						var_539_23.gameObject:SetActive(false)
					end
				end
			end

			local var_539_24 = 0.001

			if var_539_21 <= arg_536_1.time_ and arg_536_1.time_ < var_539_21 + var_539_24 then
				local var_539_25 = (arg_536_1.time_ - var_539_21) / var_539_24
				local var_539_26 = Vector3.New(-390, -347, -300)

				var_539_20.localPosition = Vector3.Lerp(arg_536_1.var_.moveOldPos10128, var_539_26, var_539_25)
			end

			if arg_536_1.time_ >= var_539_21 + var_539_24 and arg_536_1.time_ < var_539_21 + var_539_24 + arg_539_0 then
				var_539_20.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_539_27 = arg_536_1.actors_["10111"].transform
			local var_539_28 = 0

			if var_539_28 < arg_536_1.time_ and arg_536_1.time_ <= var_539_28 + arg_539_0 then
				arg_536_1.var_.moveOldPos10111 = var_539_27.localPosition
				var_539_27.localScale = Vector3.New(1, 1, 1)

				arg_536_1:CheckSpriteTmpPos("10111", 4)

				local var_539_29 = var_539_27.childCount

				for iter_539_11 = 0, var_539_29 - 1 do
					local var_539_30 = var_539_27:GetChild(iter_539_11)

					if var_539_30.name == "" or not string.find(var_539_30.name, "split") then
						var_539_30.gameObject:SetActive(true)
					else
						var_539_30.gameObject:SetActive(false)
					end
				end
			end

			local var_539_31 = 0.001

			if var_539_28 <= arg_536_1.time_ and arg_536_1.time_ < var_539_28 + var_539_31 then
				local var_539_32 = (arg_536_1.time_ - var_539_28) / var_539_31
				local var_539_33 = Vector3.New(390, -361.1, -274.6)

				var_539_27.localPosition = Vector3.Lerp(arg_536_1.var_.moveOldPos10111, var_539_33, var_539_32)
			end

			if arg_536_1.time_ >= var_539_28 + var_539_31 and arg_536_1.time_ < var_539_28 + var_539_31 + arg_539_0 then
				var_539_27.localPosition = Vector3.New(390, -361.1, -274.6)
			end

			local var_539_34 = 0
			local var_539_35 = 0.525

			if var_539_34 < arg_536_1.time_ and arg_536_1.time_ <= var_539_34 + arg_539_0 then
				arg_536_1.talkMaxDuration = 0
				arg_536_1.dialogCg_.alpha = 1

				arg_536_1.dialog_:SetActive(true)
				SetActive(arg_536_1.leftNameGo_, true)

				local var_539_36 = arg_536_1:FormatText(StoryNameCfg[1125].name)

				arg_536_1.leftNameTxt_.text = var_539_36

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_536_1.leftNameTxt_.transform)

				arg_536_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_536_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_536_1:RecordName(arg_536_1.leftNameTxt_.text)
				SetActive(arg_536_1.iconTrs_.gameObject, false)
				arg_536_1.callingController_:SetSelectedState("normal")

				local var_539_37 = arg_536_1:GetWordFromCfg(417161129)
				local var_539_38 = arg_536_1:FormatText(var_539_37.content)

				arg_536_1.text_.text = var_539_38

				LuaForUtil.ClearLinePrefixSymbol(arg_536_1.text_)

				local var_539_39 = 21
				local var_539_40 = utf8.len(var_539_38)
				local var_539_41 = var_539_39 <= 0 and var_539_35 or var_539_35 * (var_539_40 / var_539_39)

				if var_539_41 > 0 and var_539_35 < var_539_41 then
					arg_536_1.talkMaxDuration = var_539_41

					if var_539_41 + var_539_34 > arg_536_1.duration_ then
						arg_536_1.duration_ = var_539_41 + var_539_34
					end
				end

				arg_536_1.text_.text = var_539_38
				arg_536_1.typewritter.percent = 0

				arg_536_1.typewritter:SetDirty()
				arg_536_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161129", "story_v_out_417161.awb") ~= 0 then
					local var_539_42 = manager.audio:GetVoiceLength("story_v_out_417161", "417161129", "story_v_out_417161.awb") / 1000

					if var_539_42 + var_539_34 > arg_536_1.duration_ then
						arg_536_1.duration_ = var_539_42 + var_539_34
					end

					if var_539_37.prefab_name ~= "" and arg_536_1.actors_[var_539_37.prefab_name] ~= nil then
						local var_539_43 = LuaForUtil.PlayVoiceWithCriLipsync(arg_536_1.actors_[var_539_37.prefab_name].transform, "story_v_out_417161", "417161129", "story_v_out_417161.awb")

						arg_536_1:RecordAudio("417161129", var_539_43)
						arg_536_1:RecordAudio("417161129", var_539_43)
					else
						arg_536_1:AudioAction("play", "voice", "story_v_out_417161", "417161129", "story_v_out_417161.awb")
					end

					arg_536_1:RecordHistoryTalkVoice("story_v_out_417161", "417161129", "story_v_out_417161.awb")
				end

				arg_536_1:RecordContent(arg_536_1.text_.text)
			end

			local var_539_44 = math.max(var_539_35, arg_536_1.talkMaxDuration)

			if var_539_34 <= arg_536_1.time_ and arg_536_1.time_ < var_539_34 + var_539_44 then
				arg_536_1.typewritter.percent = (arg_536_1.time_ - var_539_34) / var_539_44

				arg_536_1.typewritter:SetDirty()
			end

			if arg_536_1.time_ >= var_539_34 + var_539_44 and arg_536_1.time_ < var_539_34 + var_539_44 + arg_539_0 then
				arg_536_1.typewritter.percent = 1

				arg_536_1.typewritter:SetDirty()
				arg_536_1:ShowNextGo(true)
			end
		end
	end,
	Play417161130 = function(arg_540_0, arg_540_1)
		arg_540_1.time_ = 0
		arg_540_1.frameCnt_ = 0
		arg_540_1.state_ = "playing"
		arg_540_1.curTalkId_ = 417161130
		arg_540_1.duration_ = 2.57

		SetActive(arg_540_1.tipsGo_, false)

		function arg_540_1.onSingleLineFinish_()
			arg_540_1.onSingleLineUpdate_ = nil
			arg_540_1.onSingleLineFinish_ = nil
			arg_540_1.state_ = "waiting"
		end

		function arg_540_1.playNext_(arg_542_0)
			if arg_542_0 == 1 then
				arg_540_0:Play417161131(arg_540_1)
			end
		end

		function arg_540_1.onSingleLineUpdate_(arg_543_0)
			local var_543_0 = arg_540_1.actors_["10128"]
			local var_543_1 = 0

			if var_543_1 < arg_540_1.time_ and arg_540_1.time_ <= var_543_1 + arg_543_0 and not isNil(var_543_0) and arg_540_1.var_.actorSpriteComps10128 == nil then
				arg_540_1.var_.actorSpriteComps10128 = var_543_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_543_2 = 0.2

			if var_543_1 <= arg_540_1.time_ and arg_540_1.time_ < var_543_1 + var_543_2 and not isNil(var_543_0) then
				local var_543_3 = (arg_540_1.time_ - var_543_1) / var_543_2

				if arg_540_1.var_.actorSpriteComps10128 then
					for iter_543_0, iter_543_1 in pairs(arg_540_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_543_1 then
							if arg_540_1.isInRecall_ then
								local var_543_4 = Mathf.Lerp(iter_543_1.color.r, arg_540_1.hightColor1.r, var_543_3)
								local var_543_5 = Mathf.Lerp(iter_543_1.color.g, arg_540_1.hightColor1.g, var_543_3)
								local var_543_6 = Mathf.Lerp(iter_543_1.color.b, arg_540_1.hightColor1.b, var_543_3)

								iter_543_1.color = Color.New(var_543_4, var_543_5, var_543_6)
							else
								local var_543_7 = Mathf.Lerp(iter_543_1.color.r, 1, var_543_3)

								iter_543_1.color = Color.New(var_543_7, var_543_7, var_543_7)
							end
						end
					end
				end
			end

			if arg_540_1.time_ >= var_543_1 + var_543_2 and arg_540_1.time_ < var_543_1 + var_543_2 + arg_543_0 and not isNil(var_543_0) and arg_540_1.var_.actorSpriteComps10128 then
				for iter_543_2, iter_543_3 in pairs(arg_540_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_543_3 then
						if arg_540_1.isInRecall_ then
							iter_543_3.color = arg_540_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_543_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_540_1.var_.actorSpriteComps10128 = nil
			end

			local var_543_8 = arg_540_1.actors_["10111"]
			local var_543_9 = 0

			if var_543_9 < arg_540_1.time_ and arg_540_1.time_ <= var_543_9 + arg_543_0 and not isNil(var_543_8) and arg_540_1.var_.actorSpriteComps10111 == nil then
				arg_540_1.var_.actorSpriteComps10111 = var_543_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_543_10 = 0.2

			if var_543_9 <= arg_540_1.time_ and arg_540_1.time_ < var_543_9 + var_543_10 and not isNil(var_543_8) then
				local var_543_11 = (arg_540_1.time_ - var_543_9) / var_543_10

				if arg_540_1.var_.actorSpriteComps10111 then
					for iter_543_4, iter_543_5 in pairs(arg_540_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_543_5 then
							if arg_540_1.isInRecall_ then
								local var_543_12 = Mathf.Lerp(iter_543_5.color.r, arg_540_1.hightColor2.r, var_543_11)
								local var_543_13 = Mathf.Lerp(iter_543_5.color.g, arg_540_1.hightColor2.g, var_543_11)
								local var_543_14 = Mathf.Lerp(iter_543_5.color.b, arg_540_1.hightColor2.b, var_543_11)

								iter_543_5.color = Color.New(var_543_12, var_543_13, var_543_14)
							else
								local var_543_15 = Mathf.Lerp(iter_543_5.color.r, 0.5, var_543_11)

								iter_543_5.color = Color.New(var_543_15, var_543_15, var_543_15)
							end
						end
					end
				end
			end

			if arg_540_1.time_ >= var_543_9 + var_543_10 and arg_540_1.time_ < var_543_9 + var_543_10 + arg_543_0 and not isNil(var_543_8) and arg_540_1.var_.actorSpriteComps10111 then
				for iter_543_6, iter_543_7 in pairs(arg_540_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_543_7 then
						if arg_540_1.isInRecall_ then
							iter_543_7.color = arg_540_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_543_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_540_1.var_.actorSpriteComps10111 = nil
			end

			local var_543_16 = arg_540_1.actors_["10128"].transform
			local var_543_17 = 0

			if var_543_17 < arg_540_1.time_ and arg_540_1.time_ <= var_543_17 + arg_543_0 then
				arg_540_1.var_.moveOldPos10128 = var_543_16.localPosition
				var_543_16.localScale = Vector3.New(1, 1, 1)

				arg_540_1:CheckSpriteTmpPos("10128", 2)

				local var_543_18 = var_543_16.childCount

				for iter_543_8 = 0, var_543_18 - 1 do
					local var_543_19 = var_543_16:GetChild(iter_543_8)

					if var_543_19.name == "split_5" or not string.find(var_543_19.name, "split") then
						var_543_19.gameObject:SetActive(true)
					else
						var_543_19.gameObject:SetActive(false)
					end
				end
			end

			local var_543_20 = 0.001

			if var_543_17 <= arg_540_1.time_ and arg_540_1.time_ < var_543_17 + var_543_20 then
				local var_543_21 = (arg_540_1.time_ - var_543_17) / var_543_20
				local var_543_22 = Vector3.New(-390, -347, -300)

				var_543_16.localPosition = Vector3.Lerp(arg_540_1.var_.moveOldPos10128, var_543_22, var_543_21)
			end

			if arg_540_1.time_ >= var_543_17 + var_543_20 and arg_540_1.time_ < var_543_17 + var_543_20 + arg_543_0 then
				var_543_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_543_23 = 0
			local var_543_24 = 0.25

			if var_543_23 < arg_540_1.time_ and arg_540_1.time_ <= var_543_23 + arg_543_0 then
				arg_540_1.talkMaxDuration = 0
				arg_540_1.dialogCg_.alpha = 1

				arg_540_1.dialog_:SetActive(true)
				SetActive(arg_540_1.leftNameGo_, true)

				local var_543_25 = arg_540_1:FormatText(StoryNameCfg[595].name)

				arg_540_1.leftNameTxt_.text = var_543_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_540_1.leftNameTxt_.transform)

				arg_540_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_540_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_540_1:RecordName(arg_540_1.leftNameTxt_.text)
				SetActive(arg_540_1.iconTrs_.gameObject, false)
				arg_540_1.callingController_:SetSelectedState("normal")

				local var_543_26 = arg_540_1:GetWordFromCfg(417161130)
				local var_543_27 = arg_540_1:FormatText(var_543_26.content)

				arg_540_1.text_.text = var_543_27

				LuaForUtil.ClearLinePrefixSymbol(arg_540_1.text_)

				local var_543_28 = 10
				local var_543_29 = utf8.len(var_543_27)
				local var_543_30 = var_543_28 <= 0 and var_543_24 or var_543_24 * (var_543_29 / var_543_28)

				if var_543_30 > 0 and var_543_24 < var_543_30 then
					arg_540_1.talkMaxDuration = var_543_30

					if var_543_30 + var_543_23 > arg_540_1.duration_ then
						arg_540_1.duration_ = var_543_30 + var_543_23
					end
				end

				arg_540_1.text_.text = var_543_27
				arg_540_1.typewritter.percent = 0

				arg_540_1.typewritter:SetDirty()
				arg_540_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161130", "story_v_out_417161.awb") ~= 0 then
					local var_543_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161130", "story_v_out_417161.awb") / 1000

					if var_543_31 + var_543_23 > arg_540_1.duration_ then
						arg_540_1.duration_ = var_543_31 + var_543_23
					end

					if var_543_26.prefab_name ~= "" and arg_540_1.actors_[var_543_26.prefab_name] ~= nil then
						local var_543_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_540_1.actors_[var_543_26.prefab_name].transform, "story_v_out_417161", "417161130", "story_v_out_417161.awb")

						arg_540_1:RecordAudio("417161130", var_543_32)
						arg_540_1:RecordAudio("417161130", var_543_32)
					else
						arg_540_1:AudioAction("play", "voice", "story_v_out_417161", "417161130", "story_v_out_417161.awb")
					end

					arg_540_1:RecordHistoryTalkVoice("story_v_out_417161", "417161130", "story_v_out_417161.awb")
				end

				arg_540_1:RecordContent(arg_540_1.text_.text)
			end

			local var_543_33 = math.max(var_543_24, arg_540_1.talkMaxDuration)

			if var_543_23 <= arg_540_1.time_ and arg_540_1.time_ < var_543_23 + var_543_33 then
				arg_540_1.typewritter.percent = (arg_540_1.time_ - var_543_23) / var_543_33

				arg_540_1.typewritter:SetDirty()
			end

			if arg_540_1.time_ >= var_543_23 + var_543_33 and arg_540_1.time_ < var_543_23 + var_543_33 + arg_543_0 then
				arg_540_1.typewritter.percent = 1

				arg_540_1.typewritter:SetDirty()
				arg_540_1:ShowNextGo(true)
			end
		end
	end,
	Play417161131 = function(arg_544_0, arg_544_1)
		arg_544_1.time_ = 0
		arg_544_1.frameCnt_ = 0
		arg_544_1.state_ = "playing"
		arg_544_1.curTalkId_ = 417161131
		arg_544_1.duration_ = 4.3

		SetActive(arg_544_1.tipsGo_, false)

		function arg_544_1.onSingleLineFinish_()
			arg_544_1.onSingleLineUpdate_ = nil
			arg_544_1.onSingleLineFinish_ = nil
			arg_544_1.state_ = "waiting"
		end

		function arg_544_1.playNext_(arg_546_0)
			if arg_546_0 == 1 then
				arg_544_0:Play417161132(arg_544_1)
			end
		end

		function arg_544_1.onSingleLineUpdate_(arg_547_0)
			local var_547_0 = arg_544_1.actors_["10111"]
			local var_547_1 = 0

			if var_547_1 < arg_544_1.time_ and arg_544_1.time_ <= var_547_1 + arg_547_0 and not isNil(var_547_0) and arg_544_1.var_.actorSpriteComps10111 == nil then
				arg_544_1.var_.actorSpriteComps10111 = var_547_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_547_2 = 0.2

			if var_547_1 <= arg_544_1.time_ and arg_544_1.time_ < var_547_1 + var_547_2 and not isNil(var_547_0) then
				local var_547_3 = (arg_544_1.time_ - var_547_1) / var_547_2

				if arg_544_1.var_.actorSpriteComps10111 then
					for iter_547_0, iter_547_1 in pairs(arg_544_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_547_1 then
							if arg_544_1.isInRecall_ then
								local var_547_4 = Mathf.Lerp(iter_547_1.color.r, arg_544_1.hightColor1.r, var_547_3)
								local var_547_5 = Mathf.Lerp(iter_547_1.color.g, arg_544_1.hightColor1.g, var_547_3)
								local var_547_6 = Mathf.Lerp(iter_547_1.color.b, arg_544_1.hightColor1.b, var_547_3)

								iter_547_1.color = Color.New(var_547_4, var_547_5, var_547_6)
							else
								local var_547_7 = Mathf.Lerp(iter_547_1.color.r, 1, var_547_3)

								iter_547_1.color = Color.New(var_547_7, var_547_7, var_547_7)
							end
						end
					end
				end
			end

			if arg_544_1.time_ >= var_547_1 + var_547_2 and arg_544_1.time_ < var_547_1 + var_547_2 + arg_547_0 and not isNil(var_547_0) and arg_544_1.var_.actorSpriteComps10111 then
				for iter_547_2, iter_547_3 in pairs(arg_544_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_547_3 then
						if arg_544_1.isInRecall_ then
							iter_547_3.color = arg_544_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_547_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_544_1.var_.actorSpriteComps10111 = nil
			end

			local var_547_8 = arg_544_1.actors_["10128"]
			local var_547_9 = 0

			if var_547_9 < arg_544_1.time_ and arg_544_1.time_ <= var_547_9 + arg_547_0 and not isNil(var_547_8) and arg_544_1.var_.actorSpriteComps10128 == nil then
				arg_544_1.var_.actorSpriteComps10128 = var_547_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_547_10 = 0.2

			if var_547_9 <= arg_544_1.time_ and arg_544_1.time_ < var_547_9 + var_547_10 and not isNil(var_547_8) then
				local var_547_11 = (arg_544_1.time_ - var_547_9) / var_547_10

				if arg_544_1.var_.actorSpriteComps10128 then
					for iter_547_4, iter_547_5 in pairs(arg_544_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_547_5 then
							if arg_544_1.isInRecall_ then
								local var_547_12 = Mathf.Lerp(iter_547_5.color.r, arg_544_1.hightColor2.r, var_547_11)
								local var_547_13 = Mathf.Lerp(iter_547_5.color.g, arg_544_1.hightColor2.g, var_547_11)
								local var_547_14 = Mathf.Lerp(iter_547_5.color.b, arg_544_1.hightColor2.b, var_547_11)

								iter_547_5.color = Color.New(var_547_12, var_547_13, var_547_14)
							else
								local var_547_15 = Mathf.Lerp(iter_547_5.color.r, 0.5, var_547_11)

								iter_547_5.color = Color.New(var_547_15, var_547_15, var_547_15)
							end
						end
					end
				end
			end

			if arg_544_1.time_ >= var_547_9 + var_547_10 and arg_544_1.time_ < var_547_9 + var_547_10 + arg_547_0 and not isNil(var_547_8) and arg_544_1.var_.actorSpriteComps10128 then
				for iter_547_6, iter_547_7 in pairs(arg_544_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_547_7 then
						if arg_544_1.isInRecall_ then
							iter_547_7.color = arg_544_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_547_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_544_1.var_.actorSpriteComps10128 = nil
			end

			local var_547_16 = arg_544_1.actors_["10111"].transform
			local var_547_17 = 0

			if var_547_17 < arg_544_1.time_ and arg_544_1.time_ <= var_547_17 + arg_547_0 then
				arg_544_1.var_.moveOldPos10111 = var_547_16.localPosition
				var_547_16.localScale = Vector3.New(1, 1, 1)

				arg_544_1:CheckSpriteTmpPos("10111", 4)

				local var_547_18 = var_547_16.childCount

				for iter_547_8 = 0, var_547_18 - 1 do
					local var_547_19 = var_547_16:GetChild(iter_547_8)

					if var_547_19.name == "split_6" or not string.find(var_547_19.name, "split") then
						var_547_19.gameObject:SetActive(true)
					else
						var_547_19.gameObject:SetActive(false)
					end
				end
			end

			local var_547_20 = 0.001

			if var_547_17 <= arg_544_1.time_ and arg_544_1.time_ < var_547_17 + var_547_20 then
				local var_547_21 = (arg_544_1.time_ - var_547_17) / var_547_20
				local var_547_22 = Vector3.New(390, -361.1, -274.6)

				var_547_16.localPosition = Vector3.Lerp(arg_544_1.var_.moveOldPos10111, var_547_22, var_547_21)
			end

			if arg_544_1.time_ >= var_547_17 + var_547_20 and arg_544_1.time_ < var_547_17 + var_547_20 + arg_547_0 then
				var_547_16.localPosition = Vector3.New(390, -361.1, -274.6)
			end

			local var_547_23 = 0
			local var_547_24 = 0.425

			if var_547_23 < arg_544_1.time_ and arg_544_1.time_ <= var_547_23 + arg_547_0 then
				arg_544_1.talkMaxDuration = 0
				arg_544_1.dialogCg_.alpha = 1

				arg_544_1.dialog_:SetActive(true)
				SetActive(arg_544_1.leftNameGo_, true)

				local var_547_25 = arg_544_1:FormatText(StoryNameCfg[1125].name)

				arg_544_1.leftNameTxt_.text = var_547_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_544_1.leftNameTxt_.transform)

				arg_544_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_544_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_544_1:RecordName(arg_544_1.leftNameTxt_.text)
				SetActive(arg_544_1.iconTrs_.gameObject, false)
				arg_544_1.callingController_:SetSelectedState("normal")

				local var_547_26 = arg_544_1:GetWordFromCfg(417161131)
				local var_547_27 = arg_544_1:FormatText(var_547_26.content)

				arg_544_1.text_.text = var_547_27

				LuaForUtil.ClearLinePrefixSymbol(arg_544_1.text_)

				local var_547_28 = 17
				local var_547_29 = utf8.len(var_547_27)
				local var_547_30 = var_547_28 <= 0 and var_547_24 or var_547_24 * (var_547_29 / var_547_28)

				if var_547_30 > 0 and var_547_24 < var_547_30 then
					arg_544_1.talkMaxDuration = var_547_30

					if var_547_30 + var_547_23 > arg_544_1.duration_ then
						arg_544_1.duration_ = var_547_30 + var_547_23
					end
				end

				arg_544_1.text_.text = var_547_27
				arg_544_1.typewritter.percent = 0

				arg_544_1.typewritter:SetDirty()
				arg_544_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161131", "story_v_out_417161.awb") ~= 0 then
					local var_547_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161131", "story_v_out_417161.awb") / 1000

					if var_547_31 + var_547_23 > arg_544_1.duration_ then
						arg_544_1.duration_ = var_547_31 + var_547_23
					end

					if var_547_26.prefab_name ~= "" and arg_544_1.actors_[var_547_26.prefab_name] ~= nil then
						local var_547_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_544_1.actors_[var_547_26.prefab_name].transform, "story_v_out_417161", "417161131", "story_v_out_417161.awb")

						arg_544_1:RecordAudio("417161131", var_547_32)
						arg_544_1:RecordAudio("417161131", var_547_32)
					else
						arg_544_1:AudioAction("play", "voice", "story_v_out_417161", "417161131", "story_v_out_417161.awb")
					end

					arg_544_1:RecordHistoryTalkVoice("story_v_out_417161", "417161131", "story_v_out_417161.awb")
				end

				arg_544_1:RecordContent(arg_544_1.text_.text)
			end

			local var_547_33 = math.max(var_547_24, arg_544_1.talkMaxDuration)

			if var_547_23 <= arg_544_1.time_ and arg_544_1.time_ < var_547_23 + var_547_33 then
				arg_544_1.typewritter.percent = (arg_544_1.time_ - var_547_23) / var_547_33

				arg_544_1.typewritter:SetDirty()
			end

			if arg_544_1.time_ >= var_547_23 + var_547_33 and arg_544_1.time_ < var_547_23 + var_547_33 + arg_547_0 then
				arg_544_1.typewritter.percent = 1

				arg_544_1.typewritter:SetDirty()
				arg_544_1:ShowNextGo(true)
			end
		end
	end,
	Play417161132 = function(arg_548_0, arg_548_1)
		arg_548_1.time_ = 0
		arg_548_1.frameCnt_ = 0
		arg_548_1.state_ = "playing"
		arg_548_1.curTalkId_ = 417161132
		arg_548_1.duration_ = 10.93

		SetActive(arg_548_1.tipsGo_, false)

		function arg_548_1.onSingleLineFinish_()
			arg_548_1.onSingleLineUpdate_ = nil
			arg_548_1.onSingleLineFinish_ = nil
			arg_548_1.state_ = "waiting"
		end

		function arg_548_1.playNext_(arg_550_0)
			if arg_550_0 == 1 then
				arg_548_0:Play417161133(arg_548_1)
			end
		end

		function arg_548_1.onSingleLineUpdate_(arg_551_0)
			local var_551_0 = 0
			local var_551_1 = 1.1

			if var_551_0 < arg_548_1.time_ and arg_548_1.time_ <= var_551_0 + arg_551_0 then
				arg_548_1.talkMaxDuration = 0
				arg_548_1.dialogCg_.alpha = 1

				arg_548_1.dialog_:SetActive(true)
				SetActive(arg_548_1.leftNameGo_, true)

				local var_551_2 = arg_548_1:FormatText(StoryNameCfg[1125].name)

				arg_548_1.leftNameTxt_.text = var_551_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_548_1.leftNameTxt_.transform)

				arg_548_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_548_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_548_1:RecordName(arg_548_1.leftNameTxt_.text)
				SetActive(arg_548_1.iconTrs_.gameObject, false)
				arg_548_1.callingController_:SetSelectedState("normal")

				local var_551_3 = arg_548_1:GetWordFromCfg(417161132)
				local var_551_4 = arg_548_1:FormatText(var_551_3.content)

				arg_548_1.text_.text = var_551_4

				LuaForUtil.ClearLinePrefixSymbol(arg_548_1.text_)

				local var_551_5 = 44
				local var_551_6 = utf8.len(var_551_4)
				local var_551_7 = var_551_5 <= 0 and var_551_1 or var_551_1 * (var_551_6 / var_551_5)

				if var_551_7 > 0 and var_551_1 < var_551_7 then
					arg_548_1.talkMaxDuration = var_551_7

					if var_551_7 + var_551_0 > arg_548_1.duration_ then
						arg_548_1.duration_ = var_551_7 + var_551_0
					end
				end

				arg_548_1.text_.text = var_551_4
				arg_548_1.typewritter.percent = 0

				arg_548_1.typewritter:SetDirty()
				arg_548_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161132", "story_v_out_417161.awb") ~= 0 then
					local var_551_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161132", "story_v_out_417161.awb") / 1000

					if var_551_8 + var_551_0 > arg_548_1.duration_ then
						arg_548_1.duration_ = var_551_8 + var_551_0
					end

					if var_551_3.prefab_name ~= "" and arg_548_1.actors_[var_551_3.prefab_name] ~= nil then
						local var_551_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_548_1.actors_[var_551_3.prefab_name].transform, "story_v_out_417161", "417161132", "story_v_out_417161.awb")

						arg_548_1:RecordAudio("417161132", var_551_9)
						arg_548_1:RecordAudio("417161132", var_551_9)
					else
						arg_548_1:AudioAction("play", "voice", "story_v_out_417161", "417161132", "story_v_out_417161.awb")
					end

					arg_548_1:RecordHistoryTalkVoice("story_v_out_417161", "417161132", "story_v_out_417161.awb")
				end

				arg_548_1:RecordContent(arg_548_1.text_.text)
			end

			local var_551_10 = math.max(var_551_1, arg_548_1.talkMaxDuration)

			if var_551_0 <= arg_548_1.time_ and arg_548_1.time_ < var_551_0 + var_551_10 then
				arg_548_1.typewritter.percent = (arg_548_1.time_ - var_551_0) / var_551_10

				arg_548_1.typewritter:SetDirty()
			end

			if arg_548_1.time_ >= var_551_0 + var_551_10 and arg_548_1.time_ < var_551_0 + var_551_10 + arg_551_0 then
				arg_548_1.typewritter.percent = 1

				arg_548_1.typewritter:SetDirty()
				arg_548_1:ShowNextGo(true)
			end
		end
	end,
	Play417161133 = function(arg_552_0, arg_552_1)
		arg_552_1.time_ = 0
		arg_552_1.frameCnt_ = 0
		arg_552_1.state_ = "playing"
		arg_552_1.curTalkId_ = 417161133
		arg_552_1.duration_ = 1.13

		SetActive(arg_552_1.tipsGo_, false)

		function arg_552_1.onSingleLineFinish_()
			arg_552_1.onSingleLineUpdate_ = nil
			arg_552_1.onSingleLineFinish_ = nil
			arg_552_1.state_ = "waiting"
		end

		function arg_552_1.playNext_(arg_554_0)
			if arg_554_0 == 1 then
				arg_552_0:Play417161134(arg_552_1)
			end
		end

		function arg_552_1.onSingleLineUpdate_(arg_555_0)
			local var_555_0 = arg_552_1.actors_["10128"]
			local var_555_1 = 0

			if var_555_1 < arg_552_1.time_ and arg_552_1.time_ <= var_555_1 + arg_555_0 and not isNil(var_555_0) and arg_552_1.var_.actorSpriteComps10128 == nil then
				arg_552_1.var_.actorSpriteComps10128 = var_555_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_555_2 = 0.2

			if var_555_1 <= arg_552_1.time_ and arg_552_1.time_ < var_555_1 + var_555_2 and not isNil(var_555_0) then
				local var_555_3 = (arg_552_1.time_ - var_555_1) / var_555_2

				if arg_552_1.var_.actorSpriteComps10128 then
					for iter_555_0, iter_555_1 in pairs(arg_552_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_555_1 then
							if arg_552_1.isInRecall_ then
								local var_555_4 = Mathf.Lerp(iter_555_1.color.r, arg_552_1.hightColor1.r, var_555_3)
								local var_555_5 = Mathf.Lerp(iter_555_1.color.g, arg_552_1.hightColor1.g, var_555_3)
								local var_555_6 = Mathf.Lerp(iter_555_1.color.b, arg_552_1.hightColor1.b, var_555_3)

								iter_555_1.color = Color.New(var_555_4, var_555_5, var_555_6)
							else
								local var_555_7 = Mathf.Lerp(iter_555_1.color.r, 1, var_555_3)

								iter_555_1.color = Color.New(var_555_7, var_555_7, var_555_7)
							end
						end
					end
				end
			end

			if arg_552_1.time_ >= var_555_1 + var_555_2 and arg_552_1.time_ < var_555_1 + var_555_2 + arg_555_0 and not isNil(var_555_0) and arg_552_1.var_.actorSpriteComps10128 then
				for iter_555_2, iter_555_3 in pairs(arg_552_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_555_3 then
						if arg_552_1.isInRecall_ then
							iter_555_3.color = arg_552_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_555_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_552_1.var_.actorSpriteComps10128 = nil
			end

			local var_555_8 = arg_552_1.actors_["10111"]
			local var_555_9 = 0

			if var_555_9 < arg_552_1.time_ and arg_552_1.time_ <= var_555_9 + arg_555_0 and not isNil(var_555_8) and arg_552_1.var_.actorSpriteComps10111 == nil then
				arg_552_1.var_.actorSpriteComps10111 = var_555_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_555_10 = 0.2

			if var_555_9 <= arg_552_1.time_ and arg_552_1.time_ < var_555_9 + var_555_10 and not isNil(var_555_8) then
				local var_555_11 = (arg_552_1.time_ - var_555_9) / var_555_10

				if arg_552_1.var_.actorSpriteComps10111 then
					for iter_555_4, iter_555_5 in pairs(arg_552_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_555_5 then
							if arg_552_1.isInRecall_ then
								local var_555_12 = Mathf.Lerp(iter_555_5.color.r, arg_552_1.hightColor2.r, var_555_11)
								local var_555_13 = Mathf.Lerp(iter_555_5.color.g, arg_552_1.hightColor2.g, var_555_11)
								local var_555_14 = Mathf.Lerp(iter_555_5.color.b, arg_552_1.hightColor2.b, var_555_11)

								iter_555_5.color = Color.New(var_555_12, var_555_13, var_555_14)
							else
								local var_555_15 = Mathf.Lerp(iter_555_5.color.r, 0.5, var_555_11)

								iter_555_5.color = Color.New(var_555_15, var_555_15, var_555_15)
							end
						end
					end
				end
			end

			if arg_552_1.time_ >= var_555_9 + var_555_10 and arg_552_1.time_ < var_555_9 + var_555_10 + arg_555_0 and not isNil(var_555_8) and arg_552_1.var_.actorSpriteComps10111 then
				for iter_555_6, iter_555_7 in pairs(arg_552_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_555_7 then
						if arg_552_1.isInRecall_ then
							iter_555_7.color = arg_552_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_555_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_552_1.var_.actorSpriteComps10111 = nil
			end

			local var_555_16 = 0
			local var_555_17 = 0.15

			if var_555_16 < arg_552_1.time_ and arg_552_1.time_ <= var_555_16 + arg_555_0 then
				arg_552_1.talkMaxDuration = 0
				arg_552_1.dialogCg_.alpha = 1

				arg_552_1.dialog_:SetActive(true)
				SetActive(arg_552_1.leftNameGo_, true)

				local var_555_18 = arg_552_1:FormatText(StoryNameCfg[595].name)

				arg_552_1.leftNameTxt_.text = var_555_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_552_1.leftNameTxt_.transform)

				arg_552_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_552_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_552_1:RecordName(arg_552_1.leftNameTxt_.text)
				SetActive(arg_552_1.iconTrs_.gameObject, false)
				arg_552_1.callingController_:SetSelectedState("normal")

				local var_555_19 = arg_552_1:GetWordFromCfg(417161133)
				local var_555_20 = arg_552_1:FormatText(var_555_19.content)

				arg_552_1.text_.text = var_555_20

				LuaForUtil.ClearLinePrefixSymbol(arg_552_1.text_)

				local var_555_21 = 6
				local var_555_22 = utf8.len(var_555_20)
				local var_555_23 = var_555_21 <= 0 and var_555_17 or var_555_17 * (var_555_22 / var_555_21)

				if var_555_23 > 0 and var_555_17 < var_555_23 then
					arg_552_1.talkMaxDuration = var_555_23

					if var_555_23 + var_555_16 > arg_552_1.duration_ then
						arg_552_1.duration_ = var_555_23 + var_555_16
					end
				end

				arg_552_1.text_.text = var_555_20
				arg_552_1.typewritter.percent = 0

				arg_552_1.typewritter:SetDirty()
				arg_552_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161133", "story_v_out_417161.awb") ~= 0 then
					local var_555_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161133", "story_v_out_417161.awb") / 1000

					if var_555_24 + var_555_16 > arg_552_1.duration_ then
						arg_552_1.duration_ = var_555_24 + var_555_16
					end

					if var_555_19.prefab_name ~= "" and arg_552_1.actors_[var_555_19.prefab_name] ~= nil then
						local var_555_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_552_1.actors_[var_555_19.prefab_name].transform, "story_v_out_417161", "417161133", "story_v_out_417161.awb")

						arg_552_1:RecordAudio("417161133", var_555_25)
						arg_552_1:RecordAudio("417161133", var_555_25)
					else
						arg_552_1:AudioAction("play", "voice", "story_v_out_417161", "417161133", "story_v_out_417161.awb")
					end

					arg_552_1:RecordHistoryTalkVoice("story_v_out_417161", "417161133", "story_v_out_417161.awb")
				end

				arg_552_1:RecordContent(arg_552_1.text_.text)
			end

			local var_555_26 = math.max(var_555_17, arg_552_1.talkMaxDuration)

			if var_555_16 <= arg_552_1.time_ and arg_552_1.time_ < var_555_16 + var_555_26 then
				arg_552_1.typewritter.percent = (arg_552_1.time_ - var_555_16) / var_555_26

				arg_552_1.typewritter:SetDirty()
			end

			if arg_552_1.time_ >= var_555_16 + var_555_26 and arg_552_1.time_ < var_555_16 + var_555_26 + arg_555_0 then
				arg_552_1.typewritter.percent = 1

				arg_552_1.typewritter:SetDirty()
				arg_552_1:ShowNextGo(true)
			end
		end
	end,
	Play417161134 = function(arg_556_0, arg_556_1)
		arg_556_1.time_ = 0
		arg_556_1.frameCnt_ = 0
		arg_556_1.state_ = "playing"
		arg_556_1.curTalkId_ = 417161134
		arg_556_1.duration_ = 5.63

		SetActive(arg_556_1.tipsGo_, false)

		function arg_556_1.onSingleLineFinish_()
			arg_556_1.onSingleLineUpdate_ = nil
			arg_556_1.onSingleLineFinish_ = nil
			arg_556_1.state_ = "waiting"
		end

		function arg_556_1.playNext_(arg_558_0)
			if arg_558_0 == 1 then
				arg_556_0:Play417161135(arg_556_1)
			end
		end

		function arg_556_1.onSingleLineUpdate_(arg_559_0)
			local var_559_0 = arg_556_1.actors_["10111"]
			local var_559_1 = 0

			if var_559_1 < arg_556_1.time_ and arg_556_1.time_ <= var_559_1 + arg_559_0 and not isNil(var_559_0) and arg_556_1.var_.actorSpriteComps10111 == nil then
				arg_556_1.var_.actorSpriteComps10111 = var_559_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_559_2 = 0.2

			if var_559_1 <= arg_556_1.time_ and arg_556_1.time_ < var_559_1 + var_559_2 and not isNil(var_559_0) then
				local var_559_3 = (arg_556_1.time_ - var_559_1) / var_559_2

				if arg_556_1.var_.actorSpriteComps10111 then
					for iter_559_0, iter_559_1 in pairs(arg_556_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_559_1 then
							if arg_556_1.isInRecall_ then
								local var_559_4 = Mathf.Lerp(iter_559_1.color.r, arg_556_1.hightColor1.r, var_559_3)
								local var_559_5 = Mathf.Lerp(iter_559_1.color.g, arg_556_1.hightColor1.g, var_559_3)
								local var_559_6 = Mathf.Lerp(iter_559_1.color.b, arg_556_1.hightColor1.b, var_559_3)

								iter_559_1.color = Color.New(var_559_4, var_559_5, var_559_6)
							else
								local var_559_7 = Mathf.Lerp(iter_559_1.color.r, 1, var_559_3)

								iter_559_1.color = Color.New(var_559_7, var_559_7, var_559_7)
							end
						end
					end
				end
			end

			if arg_556_1.time_ >= var_559_1 + var_559_2 and arg_556_1.time_ < var_559_1 + var_559_2 + arg_559_0 and not isNil(var_559_0) and arg_556_1.var_.actorSpriteComps10111 then
				for iter_559_2, iter_559_3 in pairs(arg_556_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_559_3 then
						if arg_556_1.isInRecall_ then
							iter_559_3.color = arg_556_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_559_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_556_1.var_.actorSpriteComps10111 = nil
			end

			local var_559_8 = arg_556_1.actors_["10128"]
			local var_559_9 = 0

			if var_559_9 < arg_556_1.time_ and arg_556_1.time_ <= var_559_9 + arg_559_0 and not isNil(var_559_8) and arg_556_1.var_.actorSpriteComps10128 == nil then
				arg_556_1.var_.actorSpriteComps10128 = var_559_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_559_10 = 0.2

			if var_559_9 <= arg_556_1.time_ and arg_556_1.time_ < var_559_9 + var_559_10 and not isNil(var_559_8) then
				local var_559_11 = (arg_556_1.time_ - var_559_9) / var_559_10

				if arg_556_1.var_.actorSpriteComps10128 then
					for iter_559_4, iter_559_5 in pairs(arg_556_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_559_5 then
							if arg_556_1.isInRecall_ then
								local var_559_12 = Mathf.Lerp(iter_559_5.color.r, arg_556_1.hightColor2.r, var_559_11)
								local var_559_13 = Mathf.Lerp(iter_559_5.color.g, arg_556_1.hightColor2.g, var_559_11)
								local var_559_14 = Mathf.Lerp(iter_559_5.color.b, arg_556_1.hightColor2.b, var_559_11)

								iter_559_5.color = Color.New(var_559_12, var_559_13, var_559_14)
							else
								local var_559_15 = Mathf.Lerp(iter_559_5.color.r, 0.5, var_559_11)

								iter_559_5.color = Color.New(var_559_15, var_559_15, var_559_15)
							end
						end
					end
				end
			end

			if arg_556_1.time_ >= var_559_9 + var_559_10 and arg_556_1.time_ < var_559_9 + var_559_10 + arg_559_0 and not isNil(var_559_8) and arg_556_1.var_.actorSpriteComps10128 then
				for iter_559_6, iter_559_7 in pairs(arg_556_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_559_7 then
						if arg_556_1.isInRecall_ then
							iter_559_7.color = arg_556_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_559_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_556_1.var_.actorSpriteComps10128 = nil
			end

			local var_559_16 = 0
			local var_559_17 = 0.625

			if var_559_16 < arg_556_1.time_ and arg_556_1.time_ <= var_559_16 + arg_559_0 then
				arg_556_1.talkMaxDuration = 0
				arg_556_1.dialogCg_.alpha = 1

				arg_556_1.dialog_:SetActive(true)
				SetActive(arg_556_1.leftNameGo_, true)

				local var_559_18 = arg_556_1:FormatText(StoryNameCfg[1125].name)

				arg_556_1.leftNameTxt_.text = var_559_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_556_1.leftNameTxt_.transform)

				arg_556_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_556_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_556_1:RecordName(arg_556_1.leftNameTxt_.text)
				SetActive(arg_556_1.iconTrs_.gameObject, false)
				arg_556_1.callingController_:SetSelectedState("normal")

				local var_559_19 = arg_556_1:GetWordFromCfg(417161134)
				local var_559_20 = arg_556_1:FormatText(var_559_19.content)

				arg_556_1.text_.text = var_559_20

				LuaForUtil.ClearLinePrefixSymbol(arg_556_1.text_)

				local var_559_21 = 25
				local var_559_22 = utf8.len(var_559_20)
				local var_559_23 = var_559_21 <= 0 and var_559_17 or var_559_17 * (var_559_22 / var_559_21)

				if var_559_23 > 0 and var_559_17 < var_559_23 then
					arg_556_1.talkMaxDuration = var_559_23

					if var_559_23 + var_559_16 > arg_556_1.duration_ then
						arg_556_1.duration_ = var_559_23 + var_559_16
					end
				end

				arg_556_1.text_.text = var_559_20
				arg_556_1.typewritter.percent = 0

				arg_556_1.typewritter:SetDirty()
				arg_556_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161134", "story_v_out_417161.awb") ~= 0 then
					local var_559_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161134", "story_v_out_417161.awb") / 1000

					if var_559_24 + var_559_16 > arg_556_1.duration_ then
						arg_556_1.duration_ = var_559_24 + var_559_16
					end

					if var_559_19.prefab_name ~= "" and arg_556_1.actors_[var_559_19.prefab_name] ~= nil then
						local var_559_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_556_1.actors_[var_559_19.prefab_name].transform, "story_v_out_417161", "417161134", "story_v_out_417161.awb")

						arg_556_1:RecordAudio("417161134", var_559_25)
						arg_556_1:RecordAudio("417161134", var_559_25)
					else
						arg_556_1:AudioAction("play", "voice", "story_v_out_417161", "417161134", "story_v_out_417161.awb")
					end

					arg_556_1:RecordHistoryTalkVoice("story_v_out_417161", "417161134", "story_v_out_417161.awb")
				end

				arg_556_1:RecordContent(arg_556_1.text_.text)
			end

			local var_559_26 = math.max(var_559_17, arg_556_1.talkMaxDuration)

			if var_559_16 <= arg_556_1.time_ and arg_556_1.time_ < var_559_16 + var_559_26 then
				arg_556_1.typewritter.percent = (arg_556_1.time_ - var_559_16) / var_559_26

				arg_556_1.typewritter:SetDirty()
			end

			if arg_556_1.time_ >= var_559_16 + var_559_26 and arg_556_1.time_ < var_559_16 + var_559_26 + arg_559_0 then
				arg_556_1.typewritter.percent = 1

				arg_556_1.typewritter:SetDirty()
				arg_556_1:ShowNextGo(true)
			end
		end
	end,
	Play417161135 = function(arg_560_0, arg_560_1)
		arg_560_1.time_ = 0
		arg_560_1.frameCnt_ = 0
		arg_560_1.state_ = "playing"
		arg_560_1.curTalkId_ = 417161135
		arg_560_1.duration_ = 2.07

		SetActive(arg_560_1.tipsGo_, false)

		function arg_560_1.onSingleLineFinish_()
			arg_560_1.onSingleLineUpdate_ = nil
			arg_560_1.onSingleLineFinish_ = nil
			arg_560_1.state_ = "waiting"
		end

		function arg_560_1.playNext_(arg_562_0)
			if arg_562_0 == 1 then
				arg_560_0:Play417161136(arg_560_1)
			end
		end

		function arg_560_1.onSingleLineUpdate_(arg_563_0)
			local var_563_0 = arg_560_1.actors_["10128"]
			local var_563_1 = 0

			if var_563_1 < arg_560_1.time_ and arg_560_1.time_ <= var_563_1 + arg_563_0 and not isNil(var_563_0) and arg_560_1.var_.actorSpriteComps10128 == nil then
				arg_560_1.var_.actorSpriteComps10128 = var_563_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_563_2 = 0.2

			if var_563_1 <= arg_560_1.time_ and arg_560_1.time_ < var_563_1 + var_563_2 and not isNil(var_563_0) then
				local var_563_3 = (arg_560_1.time_ - var_563_1) / var_563_2

				if arg_560_1.var_.actorSpriteComps10128 then
					for iter_563_0, iter_563_1 in pairs(arg_560_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_563_1 then
							if arg_560_1.isInRecall_ then
								local var_563_4 = Mathf.Lerp(iter_563_1.color.r, arg_560_1.hightColor1.r, var_563_3)
								local var_563_5 = Mathf.Lerp(iter_563_1.color.g, arg_560_1.hightColor1.g, var_563_3)
								local var_563_6 = Mathf.Lerp(iter_563_1.color.b, arg_560_1.hightColor1.b, var_563_3)

								iter_563_1.color = Color.New(var_563_4, var_563_5, var_563_6)
							else
								local var_563_7 = Mathf.Lerp(iter_563_1.color.r, 1, var_563_3)

								iter_563_1.color = Color.New(var_563_7, var_563_7, var_563_7)
							end
						end
					end
				end
			end

			if arg_560_1.time_ >= var_563_1 + var_563_2 and arg_560_1.time_ < var_563_1 + var_563_2 + arg_563_0 and not isNil(var_563_0) and arg_560_1.var_.actorSpriteComps10128 then
				for iter_563_2, iter_563_3 in pairs(arg_560_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_563_3 then
						if arg_560_1.isInRecall_ then
							iter_563_3.color = arg_560_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_563_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_560_1.var_.actorSpriteComps10128 = nil
			end

			local var_563_8 = arg_560_1.actors_["10111"]
			local var_563_9 = 0

			if var_563_9 < arg_560_1.time_ and arg_560_1.time_ <= var_563_9 + arg_563_0 and not isNil(var_563_8) and arg_560_1.var_.actorSpriteComps10111 == nil then
				arg_560_1.var_.actorSpriteComps10111 = var_563_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_563_10 = 0.2

			if var_563_9 <= arg_560_1.time_ and arg_560_1.time_ < var_563_9 + var_563_10 and not isNil(var_563_8) then
				local var_563_11 = (arg_560_1.time_ - var_563_9) / var_563_10

				if arg_560_1.var_.actorSpriteComps10111 then
					for iter_563_4, iter_563_5 in pairs(arg_560_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_563_5 then
							if arg_560_1.isInRecall_ then
								local var_563_12 = Mathf.Lerp(iter_563_5.color.r, arg_560_1.hightColor2.r, var_563_11)
								local var_563_13 = Mathf.Lerp(iter_563_5.color.g, arg_560_1.hightColor2.g, var_563_11)
								local var_563_14 = Mathf.Lerp(iter_563_5.color.b, arg_560_1.hightColor2.b, var_563_11)

								iter_563_5.color = Color.New(var_563_12, var_563_13, var_563_14)
							else
								local var_563_15 = Mathf.Lerp(iter_563_5.color.r, 0.5, var_563_11)

								iter_563_5.color = Color.New(var_563_15, var_563_15, var_563_15)
							end
						end
					end
				end
			end

			if arg_560_1.time_ >= var_563_9 + var_563_10 and arg_560_1.time_ < var_563_9 + var_563_10 + arg_563_0 and not isNil(var_563_8) and arg_560_1.var_.actorSpriteComps10111 then
				for iter_563_6, iter_563_7 in pairs(arg_560_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_563_7 then
						if arg_560_1.isInRecall_ then
							iter_563_7.color = arg_560_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_563_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_560_1.var_.actorSpriteComps10111 = nil
			end

			local var_563_16 = 0
			local var_563_17 = 0.225

			if var_563_16 < arg_560_1.time_ and arg_560_1.time_ <= var_563_16 + arg_563_0 then
				arg_560_1.talkMaxDuration = 0
				arg_560_1.dialogCg_.alpha = 1

				arg_560_1.dialog_:SetActive(true)
				SetActive(arg_560_1.leftNameGo_, true)

				local var_563_18 = arg_560_1:FormatText(StoryNameCfg[595].name)

				arg_560_1.leftNameTxt_.text = var_563_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_560_1.leftNameTxt_.transform)

				arg_560_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_560_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_560_1:RecordName(arg_560_1.leftNameTxt_.text)
				SetActive(arg_560_1.iconTrs_.gameObject, false)
				arg_560_1.callingController_:SetSelectedState("normal")

				local var_563_19 = arg_560_1:GetWordFromCfg(417161135)
				local var_563_20 = arg_560_1:FormatText(var_563_19.content)

				arg_560_1.text_.text = var_563_20

				LuaForUtil.ClearLinePrefixSymbol(arg_560_1.text_)

				local var_563_21 = 9
				local var_563_22 = utf8.len(var_563_20)
				local var_563_23 = var_563_21 <= 0 and var_563_17 or var_563_17 * (var_563_22 / var_563_21)

				if var_563_23 > 0 and var_563_17 < var_563_23 then
					arg_560_1.talkMaxDuration = var_563_23

					if var_563_23 + var_563_16 > arg_560_1.duration_ then
						arg_560_1.duration_ = var_563_23 + var_563_16
					end
				end

				arg_560_1.text_.text = var_563_20
				arg_560_1.typewritter.percent = 0

				arg_560_1.typewritter:SetDirty()
				arg_560_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161135", "story_v_out_417161.awb") ~= 0 then
					local var_563_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161135", "story_v_out_417161.awb") / 1000

					if var_563_24 + var_563_16 > arg_560_1.duration_ then
						arg_560_1.duration_ = var_563_24 + var_563_16
					end

					if var_563_19.prefab_name ~= "" and arg_560_1.actors_[var_563_19.prefab_name] ~= nil then
						local var_563_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_560_1.actors_[var_563_19.prefab_name].transform, "story_v_out_417161", "417161135", "story_v_out_417161.awb")

						arg_560_1:RecordAudio("417161135", var_563_25)
						arg_560_1:RecordAudio("417161135", var_563_25)
					else
						arg_560_1:AudioAction("play", "voice", "story_v_out_417161", "417161135", "story_v_out_417161.awb")
					end

					arg_560_1:RecordHistoryTalkVoice("story_v_out_417161", "417161135", "story_v_out_417161.awb")
				end

				arg_560_1:RecordContent(arg_560_1.text_.text)
			end

			local var_563_26 = math.max(var_563_17, arg_560_1.talkMaxDuration)

			if var_563_16 <= arg_560_1.time_ and arg_560_1.time_ < var_563_16 + var_563_26 then
				arg_560_1.typewritter.percent = (arg_560_1.time_ - var_563_16) / var_563_26

				arg_560_1.typewritter:SetDirty()
			end

			if arg_560_1.time_ >= var_563_16 + var_563_26 and arg_560_1.time_ < var_563_16 + var_563_26 + arg_563_0 then
				arg_560_1.typewritter.percent = 1

				arg_560_1.typewritter:SetDirty()
				arg_560_1:ShowNextGo(true)
			end
		end
	end,
	Play417161136 = function(arg_564_0, arg_564_1)
		arg_564_1.time_ = 0
		arg_564_1.frameCnt_ = 0
		arg_564_1.state_ = "playing"
		arg_564_1.curTalkId_ = 417161136
		arg_564_1.duration_ = 4.93

		SetActive(arg_564_1.tipsGo_, false)

		function arg_564_1.onSingleLineFinish_()
			arg_564_1.onSingleLineUpdate_ = nil
			arg_564_1.onSingleLineFinish_ = nil
			arg_564_1.state_ = "waiting"
		end

		function arg_564_1.playNext_(arg_566_0)
			if arg_566_0 == 1 then
				arg_564_0:Play417161137(arg_564_1)
			end
		end

		function arg_564_1.onSingleLineUpdate_(arg_567_0)
			local var_567_0 = arg_564_1.actors_["10111"]
			local var_567_1 = 0

			if var_567_1 < arg_564_1.time_ and arg_564_1.time_ <= var_567_1 + arg_567_0 and not isNil(var_567_0) and arg_564_1.var_.actorSpriteComps10111 == nil then
				arg_564_1.var_.actorSpriteComps10111 = var_567_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_567_2 = 0.2

			if var_567_1 <= arg_564_1.time_ and arg_564_1.time_ < var_567_1 + var_567_2 and not isNil(var_567_0) then
				local var_567_3 = (arg_564_1.time_ - var_567_1) / var_567_2

				if arg_564_1.var_.actorSpriteComps10111 then
					for iter_567_0, iter_567_1 in pairs(arg_564_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_567_1 then
							if arg_564_1.isInRecall_ then
								local var_567_4 = Mathf.Lerp(iter_567_1.color.r, arg_564_1.hightColor1.r, var_567_3)
								local var_567_5 = Mathf.Lerp(iter_567_1.color.g, arg_564_1.hightColor1.g, var_567_3)
								local var_567_6 = Mathf.Lerp(iter_567_1.color.b, arg_564_1.hightColor1.b, var_567_3)

								iter_567_1.color = Color.New(var_567_4, var_567_5, var_567_6)
							else
								local var_567_7 = Mathf.Lerp(iter_567_1.color.r, 1, var_567_3)

								iter_567_1.color = Color.New(var_567_7, var_567_7, var_567_7)
							end
						end
					end
				end
			end

			if arg_564_1.time_ >= var_567_1 + var_567_2 and arg_564_1.time_ < var_567_1 + var_567_2 + arg_567_0 and not isNil(var_567_0) and arg_564_1.var_.actorSpriteComps10111 then
				for iter_567_2, iter_567_3 in pairs(arg_564_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_567_3 then
						if arg_564_1.isInRecall_ then
							iter_567_3.color = arg_564_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_567_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_564_1.var_.actorSpriteComps10111 = nil
			end

			local var_567_8 = arg_564_1.actors_["10128"]
			local var_567_9 = 0

			if var_567_9 < arg_564_1.time_ and arg_564_1.time_ <= var_567_9 + arg_567_0 and not isNil(var_567_8) and arg_564_1.var_.actorSpriteComps10128 == nil then
				arg_564_1.var_.actorSpriteComps10128 = var_567_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_567_10 = 0.2

			if var_567_9 <= arg_564_1.time_ and arg_564_1.time_ < var_567_9 + var_567_10 and not isNil(var_567_8) then
				local var_567_11 = (arg_564_1.time_ - var_567_9) / var_567_10

				if arg_564_1.var_.actorSpriteComps10128 then
					for iter_567_4, iter_567_5 in pairs(arg_564_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_567_5 then
							if arg_564_1.isInRecall_ then
								local var_567_12 = Mathf.Lerp(iter_567_5.color.r, arg_564_1.hightColor2.r, var_567_11)
								local var_567_13 = Mathf.Lerp(iter_567_5.color.g, arg_564_1.hightColor2.g, var_567_11)
								local var_567_14 = Mathf.Lerp(iter_567_5.color.b, arg_564_1.hightColor2.b, var_567_11)

								iter_567_5.color = Color.New(var_567_12, var_567_13, var_567_14)
							else
								local var_567_15 = Mathf.Lerp(iter_567_5.color.r, 0.5, var_567_11)

								iter_567_5.color = Color.New(var_567_15, var_567_15, var_567_15)
							end
						end
					end
				end
			end

			if arg_564_1.time_ >= var_567_9 + var_567_10 and arg_564_1.time_ < var_567_9 + var_567_10 + arg_567_0 and not isNil(var_567_8) and arg_564_1.var_.actorSpriteComps10128 then
				for iter_567_6, iter_567_7 in pairs(arg_564_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_567_7 then
						if arg_564_1.isInRecall_ then
							iter_567_7.color = arg_564_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_567_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_564_1.var_.actorSpriteComps10128 = nil
			end

			local var_567_16 = arg_564_1.actors_["10111"].transform
			local var_567_17 = 0

			if var_567_17 < arg_564_1.time_ and arg_564_1.time_ <= var_567_17 + arg_567_0 then
				arg_564_1.var_.moveOldPos10111 = var_567_16.localPosition
				var_567_16.localScale = Vector3.New(1, 1, 1)

				arg_564_1:CheckSpriteTmpPos("10111", 4)

				local var_567_18 = var_567_16.childCount

				for iter_567_8 = 0, var_567_18 - 1 do
					local var_567_19 = var_567_16:GetChild(iter_567_8)

					if var_567_19.name == "split_5" or not string.find(var_567_19.name, "split") then
						var_567_19.gameObject:SetActive(true)
					else
						var_567_19.gameObject:SetActive(false)
					end
				end
			end

			local var_567_20 = 0.001

			if var_567_17 <= arg_564_1.time_ and arg_564_1.time_ < var_567_17 + var_567_20 then
				local var_567_21 = (arg_564_1.time_ - var_567_17) / var_567_20
				local var_567_22 = Vector3.New(390, -361.1, -274.6)

				var_567_16.localPosition = Vector3.Lerp(arg_564_1.var_.moveOldPos10111, var_567_22, var_567_21)
			end

			if arg_564_1.time_ >= var_567_17 + var_567_20 and arg_564_1.time_ < var_567_17 + var_567_20 + arg_567_0 then
				var_567_16.localPosition = Vector3.New(390, -361.1, -274.6)
			end

			local var_567_23 = 0
			local var_567_24 = 0.375

			if var_567_23 < arg_564_1.time_ and arg_564_1.time_ <= var_567_23 + arg_567_0 then
				arg_564_1.talkMaxDuration = 0
				arg_564_1.dialogCg_.alpha = 1

				arg_564_1.dialog_:SetActive(true)
				SetActive(arg_564_1.leftNameGo_, true)

				local var_567_25 = arg_564_1:FormatText(StoryNameCfg[1125].name)

				arg_564_1.leftNameTxt_.text = var_567_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_564_1.leftNameTxt_.transform)

				arg_564_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_564_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_564_1:RecordName(arg_564_1.leftNameTxt_.text)
				SetActive(arg_564_1.iconTrs_.gameObject, false)
				arg_564_1.callingController_:SetSelectedState("normal")

				local var_567_26 = arg_564_1:GetWordFromCfg(417161136)
				local var_567_27 = arg_564_1:FormatText(var_567_26.content)

				arg_564_1.text_.text = var_567_27

				LuaForUtil.ClearLinePrefixSymbol(arg_564_1.text_)

				local var_567_28 = 15
				local var_567_29 = utf8.len(var_567_27)
				local var_567_30 = var_567_28 <= 0 and var_567_24 or var_567_24 * (var_567_29 / var_567_28)

				if var_567_30 > 0 and var_567_24 < var_567_30 then
					arg_564_1.talkMaxDuration = var_567_30

					if var_567_30 + var_567_23 > arg_564_1.duration_ then
						arg_564_1.duration_ = var_567_30 + var_567_23
					end
				end

				arg_564_1.text_.text = var_567_27
				arg_564_1.typewritter.percent = 0

				arg_564_1.typewritter:SetDirty()
				arg_564_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161136", "story_v_out_417161.awb") ~= 0 then
					local var_567_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161136", "story_v_out_417161.awb") / 1000

					if var_567_31 + var_567_23 > arg_564_1.duration_ then
						arg_564_1.duration_ = var_567_31 + var_567_23
					end

					if var_567_26.prefab_name ~= "" and arg_564_1.actors_[var_567_26.prefab_name] ~= nil then
						local var_567_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_564_1.actors_[var_567_26.prefab_name].transform, "story_v_out_417161", "417161136", "story_v_out_417161.awb")

						arg_564_1:RecordAudio("417161136", var_567_32)
						arg_564_1:RecordAudio("417161136", var_567_32)
					else
						arg_564_1:AudioAction("play", "voice", "story_v_out_417161", "417161136", "story_v_out_417161.awb")
					end

					arg_564_1:RecordHistoryTalkVoice("story_v_out_417161", "417161136", "story_v_out_417161.awb")
				end

				arg_564_1:RecordContent(arg_564_1.text_.text)
			end

			local var_567_33 = math.max(var_567_24, arg_564_1.talkMaxDuration)

			if var_567_23 <= arg_564_1.time_ and arg_564_1.time_ < var_567_23 + var_567_33 then
				arg_564_1.typewritter.percent = (arg_564_1.time_ - var_567_23) / var_567_33

				arg_564_1.typewritter:SetDirty()
			end

			if arg_564_1.time_ >= var_567_23 + var_567_33 and arg_564_1.time_ < var_567_23 + var_567_33 + arg_567_0 then
				arg_564_1.typewritter.percent = 1

				arg_564_1.typewritter:SetDirty()
				arg_564_1:ShowNextGo(true)
			end
		end
	end,
	Play417161137 = function(arg_568_0, arg_568_1)
		arg_568_1.time_ = 0
		arg_568_1.frameCnt_ = 0
		arg_568_1.state_ = "playing"
		arg_568_1.curTalkId_ = 417161137
		arg_568_1.duration_ = 8.63

		SetActive(arg_568_1.tipsGo_, false)

		function arg_568_1.onSingleLineFinish_()
			arg_568_1.onSingleLineUpdate_ = nil
			arg_568_1.onSingleLineFinish_ = nil
			arg_568_1.state_ = "waiting"
		end

		function arg_568_1.playNext_(arg_570_0)
			if arg_570_0 == 1 then
				arg_568_0:Play417161138(arg_568_1)
			end
		end

		function arg_568_1.onSingleLineUpdate_(arg_571_0)
			local var_571_0 = arg_568_1.actors_["10111"].transform
			local var_571_1 = 0

			if var_571_1 < arg_568_1.time_ and arg_568_1.time_ <= var_571_1 + arg_571_0 then
				arg_568_1.var_.moveOldPos10111 = var_571_0.localPosition
				var_571_0.localScale = Vector3.New(1, 1, 1)

				arg_568_1:CheckSpriteTmpPos("10111", 4)

				local var_571_2 = var_571_0.childCount

				for iter_571_0 = 0, var_571_2 - 1 do
					local var_571_3 = var_571_0:GetChild(iter_571_0)

					if var_571_3.name == "split_1" or not string.find(var_571_3.name, "split") then
						var_571_3.gameObject:SetActive(true)
					else
						var_571_3.gameObject:SetActive(false)
					end
				end
			end

			local var_571_4 = 0.001

			if var_571_1 <= arg_568_1.time_ and arg_568_1.time_ < var_571_1 + var_571_4 then
				local var_571_5 = (arg_568_1.time_ - var_571_1) / var_571_4
				local var_571_6 = Vector3.New(390, -361.1, -274.6)

				var_571_0.localPosition = Vector3.Lerp(arg_568_1.var_.moveOldPos10111, var_571_6, var_571_5)
			end

			if arg_568_1.time_ >= var_571_1 + var_571_4 and arg_568_1.time_ < var_571_1 + var_571_4 + arg_571_0 then
				var_571_0.localPosition = Vector3.New(390, -361.1, -274.6)
			end

			local var_571_7 = 0
			local var_571_8 = 0.925

			if var_571_7 < arg_568_1.time_ and arg_568_1.time_ <= var_571_7 + arg_571_0 then
				arg_568_1.talkMaxDuration = 0
				arg_568_1.dialogCg_.alpha = 1

				arg_568_1.dialog_:SetActive(true)
				SetActive(arg_568_1.leftNameGo_, true)

				local var_571_9 = arg_568_1:FormatText(StoryNameCfg[1125].name)

				arg_568_1.leftNameTxt_.text = var_571_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_568_1.leftNameTxt_.transform)

				arg_568_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_568_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_568_1:RecordName(arg_568_1.leftNameTxt_.text)
				SetActive(arg_568_1.iconTrs_.gameObject, false)
				arg_568_1.callingController_:SetSelectedState("normal")

				local var_571_10 = arg_568_1:GetWordFromCfg(417161137)
				local var_571_11 = arg_568_1:FormatText(var_571_10.content)

				arg_568_1.text_.text = var_571_11

				LuaForUtil.ClearLinePrefixSymbol(arg_568_1.text_)

				local var_571_12 = 37
				local var_571_13 = utf8.len(var_571_11)
				local var_571_14 = var_571_12 <= 0 and var_571_8 or var_571_8 * (var_571_13 / var_571_12)

				if var_571_14 > 0 and var_571_8 < var_571_14 then
					arg_568_1.talkMaxDuration = var_571_14

					if var_571_14 + var_571_7 > arg_568_1.duration_ then
						arg_568_1.duration_ = var_571_14 + var_571_7
					end
				end

				arg_568_1.text_.text = var_571_11
				arg_568_1.typewritter.percent = 0

				arg_568_1.typewritter:SetDirty()
				arg_568_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161137", "story_v_out_417161.awb") ~= 0 then
					local var_571_15 = manager.audio:GetVoiceLength("story_v_out_417161", "417161137", "story_v_out_417161.awb") / 1000

					if var_571_15 + var_571_7 > arg_568_1.duration_ then
						arg_568_1.duration_ = var_571_15 + var_571_7
					end

					if var_571_10.prefab_name ~= "" and arg_568_1.actors_[var_571_10.prefab_name] ~= nil then
						local var_571_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_568_1.actors_[var_571_10.prefab_name].transform, "story_v_out_417161", "417161137", "story_v_out_417161.awb")

						arg_568_1:RecordAudio("417161137", var_571_16)
						arg_568_1:RecordAudio("417161137", var_571_16)
					else
						arg_568_1:AudioAction("play", "voice", "story_v_out_417161", "417161137", "story_v_out_417161.awb")
					end

					arg_568_1:RecordHistoryTalkVoice("story_v_out_417161", "417161137", "story_v_out_417161.awb")
				end

				arg_568_1:RecordContent(arg_568_1.text_.text)
			end

			local var_571_17 = math.max(var_571_8, arg_568_1.talkMaxDuration)

			if var_571_7 <= arg_568_1.time_ and arg_568_1.time_ < var_571_7 + var_571_17 then
				arg_568_1.typewritter.percent = (arg_568_1.time_ - var_571_7) / var_571_17

				arg_568_1.typewritter:SetDirty()
			end

			if arg_568_1.time_ >= var_571_7 + var_571_17 and arg_568_1.time_ < var_571_7 + var_571_17 + arg_571_0 then
				arg_568_1.typewritter.percent = 1

				arg_568_1.typewritter:SetDirty()
				arg_568_1:ShowNextGo(true)
			end
		end
	end,
	Play417161138 = function(arg_572_0, arg_572_1)
		arg_572_1.time_ = 0
		arg_572_1.frameCnt_ = 0
		arg_572_1.state_ = "playing"
		arg_572_1.curTalkId_ = 417161138
		arg_572_1.duration_ = 7.67

		SetActive(arg_572_1.tipsGo_, false)

		function arg_572_1.onSingleLineFinish_()
			arg_572_1.onSingleLineUpdate_ = nil
			arg_572_1.onSingleLineFinish_ = nil
			arg_572_1.state_ = "waiting"
		end

		function arg_572_1.playNext_(arg_574_0)
			if arg_574_0 == 1 then
				arg_572_0:Play417161139(arg_572_1)
			end
		end

		function arg_572_1.onSingleLineUpdate_(arg_575_0)
			local var_575_0 = arg_572_1.actors_["10128"]
			local var_575_1 = 0

			if var_575_1 < arg_572_1.time_ and arg_572_1.time_ <= var_575_1 + arg_575_0 and not isNil(var_575_0) and arg_572_1.var_.actorSpriteComps10128 == nil then
				arg_572_1.var_.actorSpriteComps10128 = var_575_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_575_2 = 0.2

			if var_575_1 <= arg_572_1.time_ and arg_572_1.time_ < var_575_1 + var_575_2 and not isNil(var_575_0) then
				local var_575_3 = (arg_572_1.time_ - var_575_1) / var_575_2

				if arg_572_1.var_.actorSpriteComps10128 then
					for iter_575_0, iter_575_1 in pairs(arg_572_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_575_1 then
							if arg_572_1.isInRecall_ then
								local var_575_4 = Mathf.Lerp(iter_575_1.color.r, arg_572_1.hightColor1.r, var_575_3)
								local var_575_5 = Mathf.Lerp(iter_575_1.color.g, arg_572_1.hightColor1.g, var_575_3)
								local var_575_6 = Mathf.Lerp(iter_575_1.color.b, arg_572_1.hightColor1.b, var_575_3)

								iter_575_1.color = Color.New(var_575_4, var_575_5, var_575_6)
							else
								local var_575_7 = Mathf.Lerp(iter_575_1.color.r, 1, var_575_3)

								iter_575_1.color = Color.New(var_575_7, var_575_7, var_575_7)
							end
						end
					end
				end
			end

			if arg_572_1.time_ >= var_575_1 + var_575_2 and arg_572_1.time_ < var_575_1 + var_575_2 + arg_575_0 and not isNil(var_575_0) and arg_572_1.var_.actorSpriteComps10128 then
				for iter_575_2, iter_575_3 in pairs(arg_572_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_575_3 then
						if arg_572_1.isInRecall_ then
							iter_575_3.color = arg_572_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_575_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_572_1.var_.actorSpriteComps10128 = nil
			end

			local var_575_8 = arg_572_1.actors_["10111"]
			local var_575_9 = 0

			if var_575_9 < arg_572_1.time_ and arg_572_1.time_ <= var_575_9 + arg_575_0 and not isNil(var_575_8) and arg_572_1.var_.actorSpriteComps10111 == nil then
				arg_572_1.var_.actorSpriteComps10111 = var_575_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_575_10 = 0.2

			if var_575_9 <= arg_572_1.time_ and arg_572_1.time_ < var_575_9 + var_575_10 and not isNil(var_575_8) then
				local var_575_11 = (arg_572_1.time_ - var_575_9) / var_575_10

				if arg_572_1.var_.actorSpriteComps10111 then
					for iter_575_4, iter_575_5 in pairs(arg_572_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_575_5 then
							if arg_572_1.isInRecall_ then
								local var_575_12 = Mathf.Lerp(iter_575_5.color.r, arg_572_1.hightColor2.r, var_575_11)
								local var_575_13 = Mathf.Lerp(iter_575_5.color.g, arg_572_1.hightColor2.g, var_575_11)
								local var_575_14 = Mathf.Lerp(iter_575_5.color.b, arg_572_1.hightColor2.b, var_575_11)

								iter_575_5.color = Color.New(var_575_12, var_575_13, var_575_14)
							else
								local var_575_15 = Mathf.Lerp(iter_575_5.color.r, 0.5, var_575_11)

								iter_575_5.color = Color.New(var_575_15, var_575_15, var_575_15)
							end
						end
					end
				end
			end

			if arg_572_1.time_ >= var_575_9 + var_575_10 and arg_572_1.time_ < var_575_9 + var_575_10 + arg_575_0 and not isNil(var_575_8) and arg_572_1.var_.actorSpriteComps10111 then
				for iter_575_6, iter_575_7 in pairs(arg_572_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_575_7 then
						if arg_572_1.isInRecall_ then
							iter_575_7.color = arg_572_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_575_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_572_1.var_.actorSpriteComps10111 = nil
			end

			local var_575_16 = arg_572_1.actors_["10128"].transform
			local var_575_17 = 0

			if var_575_17 < arg_572_1.time_ and arg_572_1.time_ <= var_575_17 + arg_575_0 then
				arg_572_1.var_.moveOldPos10128 = var_575_16.localPosition
				var_575_16.localScale = Vector3.New(1, 1, 1)

				arg_572_1:CheckSpriteTmpPos("10128", 2)

				local var_575_18 = var_575_16.childCount

				for iter_575_8 = 0, var_575_18 - 1 do
					local var_575_19 = var_575_16:GetChild(iter_575_8)

					if var_575_19.name == "split_6" or not string.find(var_575_19.name, "split") then
						var_575_19.gameObject:SetActive(true)
					else
						var_575_19.gameObject:SetActive(false)
					end
				end
			end

			local var_575_20 = 0.001

			if var_575_17 <= arg_572_1.time_ and arg_572_1.time_ < var_575_17 + var_575_20 then
				local var_575_21 = (arg_572_1.time_ - var_575_17) / var_575_20
				local var_575_22 = Vector3.New(-390, -347, -300)

				var_575_16.localPosition = Vector3.Lerp(arg_572_1.var_.moveOldPos10128, var_575_22, var_575_21)
			end

			if arg_572_1.time_ >= var_575_17 + var_575_20 and arg_572_1.time_ < var_575_17 + var_575_20 + arg_575_0 then
				var_575_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_575_23 = 0
			local var_575_24 = 0.775

			if var_575_23 < arg_572_1.time_ and arg_572_1.time_ <= var_575_23 + arg_575_0 then
				arg_572_1.talkMaxDuration = 0
				arg_572_1.dialogCg_.alpha = 1

				arg_572_1.dialog_:SetActive(true)
				SetActive(arg_572_1.leftNameGo_, true)

				local var_575_25 = arg_572_1:FormatText(StoryNameCfg[595].name)

				arg_572_1.leftNameTxt_.text = var_575_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_572_1.leftNameTxt_.transform)

				arg_572_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_572_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_572_1:RecordName(arg_572_1.leftNameTxt_.text)
				SetActive(arg_572_1.iconTrs_.gameObject, false)
				arg_572_1.callingController_:SetSelectedState("normal")

				local var_575_26 = arg_572_1:GetWordFromCfg(417161138)
				local var_575_27 = arg_572_1:FormatText(var_575_26.content)

				arg_572_1.text_.text = var_575_27

				LuaForUtil.ClearLinePrefixSymbol(arg_572_1.text_)

				local var_575_28 = 31
				local var_575_29 = utf8.len(var_575_27)
				local var_575_30 = var_575_28 <= 0 and var_575_24 or var_575_24 * (var_575_29 / var_575_28)

				if var_575_30 > 0 and var_575_24 < var_575_30 then
					arg_572_1.talkMaxDuration = var_575_30

					if var_575_30 + var_575_23 > arg_572_1.duration_ then
						arg_572_1.duration_ = var_575_30 + var_575_23
					end
				end

				arg_572_1.text_.text = var_575_27
				arg_572_1.typewritter.percent = 0

				arg_572_1.typewritter:SetDirty()
				arg_572_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161138", "story_v_out_417161.awb") ~= 0 then
					local var_575_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161138", "story_v_out_417161.awb") / 1000

					if var_575_31 + var_575_23 > arg_572_1.duration_ then
						arg_572_1.duration_ = var_575_31 + var_575_23
					end

					if var_575_26.prefab_name ~= "" and arg_572_1.actors_[var_575_26.prefab_name] ~= nil then
						local var_575_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_572_1.actors_[var_575_26.prefab_name].transform, "story_v_out_417161", "417161138", "story_v_out_417161.awb")

						arg_572_1:RecordAudio("417161138", var_575_32)
						arg_572_1:RecordAudio("417161138", var_575_32)
					else
						arg_572_1:AudioAction("play", "voice", "story_v_out_417161", "417161138", "story_v_out_417161.awb")
					end

					arg_572_1:RecordHistoryTalkVoice("story_v_out_417161", "417161138", "story_v_out_417161.awb")
				end

				arg_572_1:RecordContent(arg_572_1.text_.text)
			end

			local var_575_33 = math.max(var_575_24, arg_572_1.talkMaxDuration)

			if var_575_23 <= arg_572_1.time_ and arg_572_1.time_ < var_575_23 + var_575_33 then
				arg_572_1.typewritter.percent = (arg_572_1.time_ - var_575_23) / var_575_33

				arg_572_1.typewritter:SetDirty()
			end

			if arg_572_1.time_ >= var_575_23 + var_575_33 and arg_572_1.time_ < var_575_23 + var_575_33 + arg_575_0 then
				arg_572_1.typewritter.percent = 1

				arg_572_1.typewritter:SetDirty()
				arg_572_1:ShowNextGo(true)
			end
		end
	end,
	Play417161139 = function(arg_576_0, arg_576_1)
		arg_576_1.time_ = 0
		arg_576_1.frameCnt_ = 0
		arg_576_1.state_ = "playing"
		arg_576_1.curTalkId_ = 417161139
		arg_576_1.duration_ = 3.17

		SetActive(arg_576_1.tipsGo_, false)

		function arg_576_1.onSingleLineFinish_()
			arg_576_1.onSingleLineUpdate_ = nil
			arg_576_1.onSingleLineFinish_ = nil
			arg_576_1.state_ = "waiting"
		end

		function arg_576_1.playNext_(arg_578_0)
			if arg_578_0 == 1 then
				arg_576_0:Play417161140(arg_576_1)
			end
		end

		function arg_576_1.onSingleLineUpdate_(arg_579_0)
			local var_579_0 = arg_576_1.actors_["10111"]
			local var_579_1 = 0

			if var_579_1 < arg_576_1.time_ and arg_576_1.time_ <= var_579_1 + arg_579_0 and not isNil(var_579_0) and arg_576_1.var_.actorSpriteComps10111 == nil then
				arg_576_1.var_.actorSpriteComps10111 = var_579_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_579_2 = 0.2

			if var_579_1 <= arg_576_1.time_ and arg_576_1.time_ < var_579_1 + var_579_2 and not isNil(var_579_0) then
				local var_579_3 = (arg_576_1.time_ - var_579_1) / var_579_2

				if arg_576_1.var_.actorSpriteComps10111 then
					for iter_579_0, iter_579_1 in pairs(arg_576_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_579_1 then
							if arg_576_1.isInRecall_ then
								local var_579_4 = Mathf.Lerp(iter_579_1.color.r, arg_576_1.hightColor1.r, var_579_3)
								local var_579_5 = Mathf.Lerp(iter_579_1.color.g, arg_576_1.hightColor1.g, var_579_3)
								local var_579_6 = Mathf.Lerp(iter_579_1.color.b, arg_576_1.hightColor1.b, var_579_3)

								iter_579_1.color = Color.New(var_579_4, var_579_5, var_579_6)
							else
								local var_579_7 = Mathf.Lerp(iter_579_1.color.r, 1, var_579_3)

								iter_579_1.color = Color.New(var_579_7, var_579_7, var_579_7)
							end
						end
					end
				end
			end

			if arg_576_1.time_ >= var_579_1 + var_579_2 and arg_576_1.time_ < var_579_1 + var_579_2 + arg_579_0 and not isNil(var_579_0) and arg_576_1.var_.actorSpriteComps10111 then
				for iter_579_2, iter_579_3 in pairs(arg_576_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_579_3 then
						if arg_576_1.isInRecall_ then
							iter_579_3.color = arg_576_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_579_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_576_1.var_.actorSpriteComps10111 = nil
			end

			local var_579_8 = arg_576_1.actors_["10128"]
			local var_579_9 = 0

			if var_579_9 < arg_576_1.time_ and arg_576_1.time_ <= var_579_9 + arg_579_0 and not isNil(var_579_8) and arg_576_1.var_.actorSpriteComps10128 == nil then
				arg_576_1.var_.actorSpriteComps10128 = var_579_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_579_10 = 0.2

			if var_579_9 <= arg_576_1.time_ and arg_576_1.time_ < var_579_9 + var_579_10 and not isNil(var_579_8) then
				local var_579_11 = (arg_576_1.time_ - var_579_9) / var_579_10

				if arg_576_1.var_.actorSpriteComps10128 then
					for iter_579_4, iter_579_5 in pairs(arg_576_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_579_5 then
							if arg_576_1.isInRecall_ then
								local var_579_12 = Mathf.Lerp(iter_579_5.color.r, arg_576_1.hightColor2.r, var_579_11)
								local var_579_13 = Mathf.Lerp(iter_579_5.color.g, arg_576_1.hightColor2.g, var_579_11)
								local var_579_14 = Mathf.Lerp(iter_579_5.color.b, arg_576_1.hightColor2.b, var_579_11)

								iter_579_5.color = Color.New(var_579_12, var_579_13, var_579_14)
							else
								local var_579_15 = Mathf.Lerp(iter_579_5.color.r, 0.5, var_579_11)

								iter_579_5.color = Color.New(var_579_15, var_579_15, var_579_15)
							end
						end
					end
				end
			end

			if arg_576_1.time_ >= var_579_9 + var_579_10 and arg_576_1.time_ < var_579_9 + var_579_10 + arg_579_0 and not isNil(var_579_8) and arg_576_1.var_.actorSpriteComps10128 then
				for iter_579_6, iter_579_7 in pairs(arg_576_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_579_7 then
						if arg_576_1.isInRecall_ then
							iter_579_7.color = arg_576_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_579_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_576_1.var_.actorSpriteComps10128 = nil
			end

			local var_579_16 = 0
			local var_579_17 = 0.2

			if var_579_16 < arg_576_1.time_ and arg_576_1.time_ <= var_579_16 + arg_579_0 then
				arg_576_1.talkMaxDuration = 0
				arg_576_1.dialogCg_.alpha = 1

				arg_576_1.dialog_:SetActive(true)
				SetActive(arg_576_1.leftNameGo_, true)

				local var_579_18 = arg_576_1:FormatText(StoryNameCfg[1125].name)

				arg_576_1.leftNameTxt_.text = var_579_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_576_1.leftNameTxt_.transform)

				arg_576_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_576_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_576_1:RecordName(arg_576_1.leftNameTxt_.text)
				SetActive(arg_576_1.iconTrs_.gameObject, false)
				arg_576_1.callingController_:SetSelectedState("normal")

				local var_579_19 = arg_576_1:GetWordFromCfg(417161139)
				local var_579_20 = arg_576_1:FormatText(var_579_19.content)

				arg_576_1.text_.text = var_579_20

				LuaForUtil.ClearLinePrefixSymbol(arg_576_1.text_)

				local var_579_21 = 8
				local var_579_22 = utf8.len(var_579_20)
				local var_579_23 = var_579_21 <= 0 and var_579_17 or var_579_17 * (var_579_22 / var_579_21)

				if var_579_23 > 0 and var_579_17 < var_579_23 then
					arg_576_1.talkMaxDuration = var_579_23

					if var_579_23 + var_579_16 > arg_576_1.duration_ then
						arg_576_1.duration_ = var_579_23 + var_579_16
					end
				end

				arg_576_1.text_.text = var_579_20
				arg_576_1.typewritter.percent = 0

				arg_576_1.typewritter:SetDirty()
				arg_576_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161139", "story_v_out_417161.awb") ~= 0 then
					local var_579_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161139", "story_v_out_417161.awb") / 1000

					if var_579_24 + var_579_16 > arg_576_1.duration_ then
						arg_576_1.duration_ = var_579_24 + var_579_16
					end

					if var_579_19.prefab_name ~= "" and arg_576_1.actors_[var_579_19.prefab_name] ~= nil then
						local var_579_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_576_1.actors_[var_579_19.prefab_name].transform, "story_v_out_417161", "417161139", "story_v_out_417161.awb")

						arg_576_1:RecordAudio("417161139", var_579_25)
						arg_576_1:RecordAudio("417161139", var_579_25)
					else
						arg_576_1:AudioAction("play", "voice", "story_v_out_417161", "417161139", "story_v_out_417161.awb")
					end

					arg_576_1:RecordHistoryTalkVoice("story_v_out_417161", "417161139", "story_v_out_417161.awb")
				end

				arg_576_1:RecordContent(arg_576_1.text_.text)
			end

			local var_579_26 = math.max(var_579_17, arg_576_1.talkMaxDuration)

			if var_579_16 <= arg_576_1.time_ and arg_576_1.time_ < var_579_16 + var_579_26 then
				arg_576_1.typewritter.percent = (arg_576_1.time_ - var_579_16) / var_579_26

				arg_576_1.typewritter:SetDirty()
			end

			if arg_576_1.time_ >= var_579_16 + var_579_26 and arg_576_1.time_ < var_579_16 + var_579_26 + arg_579_0 then
				arg_576_1.typewritter.percent = 1

				arg_576_1.typewritter:SetDirty()
				arg_576_1:ShowNextGo(true)
			end
		end
	end,
	Play417161140 = function(arg_580_0, arg_580_1)
		arg_580_1.time_ = 0
		arg_580_1.frameCnt_ = 0
		arg_580_1.state_ = "playing"
		arg_580_1.curTalkId_ = 417161140
		arg_580_1.duration_ = 3.1

		SetActive(arg_580_1.tipsGo_, false)

		function arg_580_1.onSingleLineFinish_()
			arg_580_1.onSingleLineUpdate_ = nil
			arg_580_1.onSingleLineFinish_ = nil
			arg_580_1.state_ = "waiting"
		end

		function arg_580_1.playNext_(arg_582_0)
			if arg_582_0 == 1 then
				arg_580_0:Play417161141(arg_580_1)
			end
		end

		function arg_580_1.onSingleLineUpdate_(arg_583_0)
			local var_583_0 = arg_580_1.actors_["10128"]
			local var_583_1 = 0

			if var_583_1 < arg_580_1.time_ and arg_580_1.time_ <= var_583_1 + arg_583_0 and not isNil(var_583_0) and arg_580_1.var_.actorSpriteComps10128 == nil then
				arg_580_1.var_.actorSpriteComps10128 = var_583_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_583_2 = 0.2

			if var_583_1 <= arg_580_1.time_ and arg_580_1.time_ < var_583_1 + var_583_2 and not isNil(var_583_0) then
				local var_583_3 = (arg_580_1.time_ - var_583_1) / var_583_2

				if arg_580_1.var_.actorSpriteComps10128 then
					for iter_583_0, iter_583_1 in pairs(arg_580_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_583_1 then
							if arg_580_1.isInRecall_ then
								local var_583_4 = Mathf.Lerp(iter_583_1.color.r, arg_580_1.hightColor1.r, var_583_3)
								local var_583_5 = Mathf.Lerp(iter_583_1.color.g, arg_580_1.hightColor1.g, var_583_3)
								local var_583_6 = Mathf.Lerp(iter_583_1.color.b, arg_580_1.hightColor1.b, var_583_3)

								iter_583_1.color = Color.New(var_583_4, var_583_5, var_583_6)
							else
								local var_583_7 = Mathf.Lerp(iter_583_1.color.r, 1, var_583_3)

								iter_583_1.color = Color.New(var_583_7, var_583_7, var_583_7)
							end
						end
					end
				end
			end

			if arg_580_1.time_ >= var_583_1 + var_583_2 and arg_580_1.time_ < var_583_1 + var_583_2 + arg_583_0 and not isNil(var_583_0) and arg_580_1.var_.actorSpriteComps10128 then
				for iter_583_2, iter_583_3 in pairs(arg_580_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_583_3 then
						if arg_580_1.isInRecall_ then
							iter_583_3.color = arg_580_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_583_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_580_1.var_.actorSpriteComps10128 = nil
			end

			local var_583_8 = arg_580_1.actors_["10111"]
			local var_583_9 = 0

			if var_583_9 < arg_580_1.time_ and arg_580_1.time_ <= var_583_9 + arg_583_0 and not isNil(var_583_8) and arg_580_1.var_.actorSpriteComps10111 == nil then
				arg_580_1.var_.actorSpriteComps10111 = var_583_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_583_10 = 0.2

			if var_583_9 <= arg_580_1.time_ and arg_580_1.time_ < var_583_9 + var_583_10 and not isNil(var_583_8) then
				local var_583_11 = (arg_580_1.time_ - var_583_9) / var_583_10

				if arg_580_1.var_.actorSpriteComps10111 then
					for iter_583_4, iter_583_5 in pairs(arg_580_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_583_5 then
							if arg_580_1.isInRecall_ then
								local var_583_12 = Mathf.Lerp(iter_583_5.color.r, arg_580_1.hightColor2.r, var_583_11)
								local var_583_13 = Mathf.Lerp(iter_583_5.color.g, arg_580_1.hightColor2.g, var_583_11)
								local var_583_14 = Mathf.Lerp(iter_583_5.color.b, arg_580_1.hightColor2.b, var_583_11)

								iter_583_5.color = Color.New(var_583_12, var_583_13, var_583_14)
							else
								local var_583_15 = Mathf.Lerp(iter_583_5.color.r, 0.5, var_583_11)

								iter_583_5.color = Color.New(var_583_15, var_583_15, var_583_15)
							end
						end
					end
				end
			end

			if arg_580_1.time_ >= var_583_9 + var_583_10 and arg_580_1.time_ < var_583_9 + var_583_10 + arg_583_0 and not isNil(var_583_8) and arg_580_1.var_.actorSpriteComps10111 then
				for iter_583_6, iter_583_7 in pairs(arg_580_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_583_7 then
						if arg_580_1.isInRecall_ then
							iter_583_7.color = arg_580_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_583_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_580_1.var_.actorSpriteComps10111 = nil
			end

			local var_583_16 = 0
			local var_583_17 = 0.25

			if var_583_16 < arg_580_1.time_ and arg_580_1.time_ <= var_583_16 + arg_583_0 then
				arg_580_1.talkMaxDuration = 0
				arg_580_1.dialogCg_.alpha = 1

				arg_580_1.dialog_:SetActive(true)
				SetActive(arg_580_1.leftNameGo_, true)

				local var_583_18 = arg_580_1:FormatText(StoryNameCfg[595].name)

				arg_580_1.leftNameTxt_.text = var_583_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_580_1.leftNameTxt_.transform)

				arg_580_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_580_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_580_1:RecordName(arg_580_1.leftNameTxt_.text)
				SetActive(arg_580_1.iconTrs_.gameObject, false)
				arg_580_1.callingController_:SetSelectedState("normal")

				local var_583_19 = arg_580_1:GetWordFromCfg(417161140)
				local var_583_20 = arg_580_1:FormatText(var_583_19.content)

				arg_580_1.text_.text = var_583_20

				LuaForUtil.ClearLinePrefixSymbol(arg_580_1.text_)

				local var_583_21 = 10
				local var_583_22 = utf8.len(var_583_20)
				local var_583_23 = var_583_21 <= 0 and var_583_17 or var_583_17 * (var_583_22 / var_583_21)

				if var_583_23 > 0 and var_583_17 < var_583_23 then
					arg_580_1.talkMaxDuration = var_583_23

					if var_583_23 + var_583_16 > arg_580_1.duration_ then
						arg_580_1.duration_ = var_583_23 + var_583_16
					end
				end

				arg_580_1.text_.text = var_583_20
				arg_580_1.typewritter.percent = 0

				arg_580_1.typewritter:SetDirty()
				arg_580_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161140", "story_v_out_417161.awb") ~= 0 then
					local var_583_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161140", "story_v_out_417161.awb") / 1000

					if var_583_24 + var_583_16 > arg_580_1.duration_ then
						arg_580_1.duration_ = var_583_24 + var_583_16
					end

					if var_583_19.prefab_name ~= "" and arg_580_1.actors_[var_583_19.prefab_name] ~= nil then
						local var_583_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_580_1.actors_[var_583_19.prefab_name].transform, "story_v_out_417161", "417161140", "story_v_out_417161.awb")

						arg_580_1:RecordAudio("417161140", var_583_25)
						arg_580_1:RecordAudio("417161140", var_583_25)
					else
						arg_580_1:AudioAction("play", "voice", "story_v_out_417161", "417161140", "story_v_out_417161.awb")
					end

					arg_580_1:RecordHistoryTalkVoice("story_v_out_417161", "417161140", "story_v_out_417161.awb")
				end

				arg_580_1:RecordContent(arg_580_1.text_.text)
			end

			local var_583_26 = math.max(var_583_17, arg_580_1.talkMaxDuration)

			if var_583_16 <= arg_580_1.time_ and arg_580_1.time_ < var_583_16 + var_583_26 then
				arg_580_1.typewritter.percent = (arg_580_1.time_ - var_583_16) / var_583_26

				arg_580_1.typewritter:SetDirty()
			end

			if arg_580_1.time_ >= var_583_16 + var_583_26 and arg_580_1.time_ < var_583_16 + var_583_26 + arg_583_0 then
				arg_580_1.typewritter.percent = 1

				arg_580_1.typewritter:SetDirty()
				arg_580_1:ShowNextGo(true)
			end
		end
	end,
	Play417161141 = function(arg_584_0, arg_584_1)
		arg_584_1.time_ = 0
		arg_584_1.frameCnt_ = 0
		arg_584_1.state_ = "playing"
		arg_584_1.curTalkId_ = 417161141
		arg_584_1.duration_ = 8.4

		SetActive(arg_584_1.tipsGo_, false)

		function arg_584_1.onSingleLineFinish_()
			arg_584_1.onSingleLineUpdate_ = nil
			arg_584_1.onSingleLineFinish_ = nil
			arg_584_1.state_ = "waiting"
		end

		function arg_584_1.playNext_(arg_586_0)
			if arg_586_0 == 1 then
				arg_584_0:Play417161142(arg_584_1)
			end
		end

		function arg_584_1.onSingleLineUpdate_(arg_587_0)
			local var_587_0 = arg_584_1.actors_["10111"]
			local var_587_1 = 0

			if var_587_1 < arg_584_1.time_ and arg_584_1.time_ <= var_587_1 + arg_587_0 and not isNil(var_587_0) and arg_584_1.var_.actorSpriteComps10111 == nil then
				arg_584_1.var_.actorSpriteComps10111 = var_587_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_587_2 = 0.2

			if var_587_1 <= arg_584_1.time_ and arg_584_1.time_ < var_587_1 + var_587_2 and not isNil(var_587_0) then
				local var_587_3 = (arg_584_1.time_ - var_587_1) / var_587_2

				if arg_584_1.var_.actorSpriteComps10111 then
					for iter_587_0, iter_587_1 in pairs(arg_584_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_587_1 then
							if arg_584_1.isInRecall_ then
								local var_587_4 = Mathf.Lerp(iter_587_1.color.r, arg_584_1.hightColor1.r, var_587_3)
								local var_587_5 = Mathf.Lerp(iter_587_1.color.g, arg_584_1.hightColor1.g, var_587_3)
								local var_587_6 = Mathf.Lerp(iter_587_1.color.b, arg_584_1.hightColor1.b, var_587_3)

								iter_587_1.color = Color.New(var_587_4, var_587_5, var_587_6)
							else
								local var_587_7 = Mathf.Lerp(iter_587_1.color.r, 1, var_587_3)

								iter_587_1.color = Color.New(var_587_7, var_587_7, var_587_7)
							end
						end
					end
				end
			end

			if arg_584_1.time_ >= var_587_1 + var_587_2 and arg_584_1.time_ < var_587_1 + var_587_2 + arg_587_0 and not isNil(var_587_0) and arg_584_1.var_.actorSpriteComps10111 then
				for iter_587_2, iter_587_3 in pairs(arg_584_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_587_3 then
						if arg_584_1.isInRecall_ then
							iter_587_3.color = arg_584_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_587_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_584_1.var_.actorSpriteComps10111 = nil
			end

			local var_587_8 = arg_584_1.actors_["10128"]
			local var_587_9 = 0

			if var_587_9 < arg_584_1.time_ and arg_584_1.time_ <= var_587_9 + arg_587_0 and not isNil(var_587_8) and arg_584_1.var_.actorSpriteComps10128 == nil then
				arg_584_1.var_.actorSpriteComps10128 = var_587_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_587_10 = 0.2

			if var_587_9 <= arg_584_1.time_ and arg_584_1.time_ < var_587_9 + var_587_10 and not isNil(var_587_8) then
				local var_587_11 = (arg_584_1.time_ - var_587_9) / var_587_10

				if arg_584_1.var_.actorSpriteComps10128 then
					for iter_587_4, iter_587_5 in pairs(arg_584_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_587_5 then
							if arg_584_1.isInRecall_ then
								local var_587_12 = Mathf.Lerp(iter_587_5.color.r, arg_584_1.hightColor2.r, var_587_11)
								local var_587_13 = Mathf.Lerp(iter_587_5.color.g, arg_584_1.hightColor2.g, var_587_11)
								local var_587_14 = Mathf.Lerp(iter_587_5.color.b, arg_584_1.hightColor2.b, var_587_11)

								iter_587_5.color = Color.New(var_587_12, var_587_13, var_587_14)
							else
								local var_587_15 = Mathf.Lerp(iter_587_5.color.r, 0.5, var_587_11)

								iter_587_5.color = Color.New(var_587_15, var_587_15, var_587_15)
							end
						end
					end
				end
			end

			if arg_584_1.time_ >= var_587_9 + var_587_10 and arg_584_1.time_ < var_587_9 + var_587_10 + arg_587_0 and not isNil(var_587_8) and arg_584_1.var_.actorSpriteComps10128 then
				for iter_587_6, iter_587_7 in pairs(arg_584_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_587_7 then
						if arg_584_1.isInRecall_ then
							iter_587_7.color = arg_584_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_587_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_584_1.var_.actorSpriteComps10128 = nil
			end

			local var_587_16 = 0
			local var_587_17 = 0.75

			if var_587_16 < arg_584_1.time_ and arg_584_1.time_ <= var_587_16 + arg_587_0 then
				arg_584_1.talkMaxDuration = 0
				arg_584_1.dialogCg_.alpha = 1

				arg_584_1.dialog_:SetActive(true)
				SetActive(arg_584_1.leftNameGo_, true)

				local var_587_18 = arg_584_1:FormatText(StoryNameCfg[1125].name)

				arg_584_1.leftNameTxt_.text = var_587_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_584_1.leftNameTxt_.transform)

				arg_584_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_584_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_584_1:RecordName(arg_584_1.leftNameTxt_.text)
				SetActive(arg_584_1.iconTrs_.gameObject, false)
				arg_584_1.callingController_:SetSelectedState("normal")

				local var_587_19 = arg_584_1:GetWordFromCfg(417161141)
				local var_587_20 = arg_584_1:FormatText(var_587_19.content)

				arg_584_1.text_.text = var_587_20

				LuaForUtil.ClearLinePrefixSymbol(arg_584_1.text_)

				local var_587_21 = 30
				local var_587_22 = utf8.len(var_587_20)
				local var_587_23 = var_587_21 <= 0 and var_587_17 or var_587_17 * (var_587_22 / var_587_21)

				if var_587_23 > 0 and var_587_17 < var_587_23 then
					arg_584_1.talkMaxDuration = var_587_23

					if var_587_23 + var_587_16 > arg_584_1.duration_ then
						arg_584_1.duration_ = var_587_23 + var_587_16
					end
				end

				arg_584_1.text_.text = var_587_20
				arg_584_1.typewritter.percent = 0

				arg_584_1.typewritter:SetDirty()
				arg_584_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161141", "story_v_out_417161.awb") ~= 0 then
					local var_587_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161141", "story_v_out_417161.awb") / 1000

					if var_587_24 + var_587_16 > arg_584_1.duration_ then
						arg_584_1.duration_ = var_587_24 + var_587_16
					end

					if var_587_19.prefab_name ~= "" and arg_584_1.actors_[var_587_19.prefab_name] ~= nil then
						local var_587_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_584_1.actors_[var_587_19.prefab_name].transform, "story_v_out_417161", "417161141", "story_v_out_417161.awb")

						arg_584_1:RecordAudio("417161141", var_587_25)
						arg_584_1:RecordAudio("417161141", var_587_25)
					else
						arg_584_1:AudioAction("play", "voice", "story_v_out_417161", "417161141", "story_v_out_417161.awb")
					end

					arg_584_1:RecordHistoryTalkVoice("story_v_out_417161", "417161141", "story_v_out_417161.awb")
				end

				arg_584_1:RecordContent(arg_584_1.text_.text)
			end

			local var_587_26 = math.max(var_587_17, arg_584_1.talkMaxDuration)

			if var_587_16 <= arg_584_1.time_ and arg_584_1.time_ < var_587_16 + var_587_26 then
				arg_584_1.typewritter.percent = (arg_584_1.time_ - var_587_16) / var_587_26

				arg_584_1.typewritter:SetDirty()
			end

			if arg_584_1.time_ >= var_587_16 + var_587_26 and arg_584_1.time_ < var_587_16 + var_587_26 + arg_587_0 then
				arg_584_1.typewritter.percent = 1

				arg_584_1.typewritter:SetDirty()
				arg_584_1:ShowNextGo(true)
			end
		end
	end,
	Play417161142 = function(arg_588_0, arg_588_1)
		arg_588_1.time_ = 0
		arg_588_1.frameCnt_ = 0
		arg_588_1.state_ = "playing"
		arg_588_1.curTalkId_ = 417161142
		arg_588_1.duration_ = 8.17

		SetActive(arg_588_1.tipsGo_, false)

		function arg_588_1.onSingleLineFinish_()
			arg_588_1.onSingleLineUpdate_ = nil
			arg_588_1.onSingleLineFinish_ = nil
			arg_588_1.state_ = "waiting"
		end

		function arg_588_1.playNext_(arg_590_0)
			if arg_590_0 == 1 then
				arg_588_0:Play417161143(arg_588_1)
			end
		end

		function arg_588_1.onSingleLineUpdate_(arg_591_0)
			local var_591_0 = 0
			local var_591_1 = 1

			if var_591_0 < arg_588_1.time_ and arg_588_1.time_ <= var_591_0 + arg_591_0 then
				arg_588_1.talkMaxDuration = 0
				arg_588_1.dialogCg_.alpha = 1

				arg_588_1.dialog_:SetActive(true)
				SetActive(arg_588_1.leftNameGo_, true)

				local var_591_2 = arg_588_1:FormatText(StoryNameCfg[1125].name)

				arg_588_1.leftNameTxt_.text = var_591_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_588_1.leftNameTxt_.transform)

				arg_588_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_588_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_588_1:RecordName(arg_588_1.leftNameTxt_.text)
				SetActive(arg_588_1.iconTrs_.gameObject, false)
				arg_588_1.callingController_:SetSelectedState("normal")

				local var_591_3 = arg_588_1:GetWordFromCfg(417161142)
				local var_591_4 = arg_588_1:FormatText(var_591_3.content)

				arg_588_1.text_.text = var_591_4

				LuaForUtil.ClearLinePrefixSymbol(arg_588_1.text_)

				local var_591_5 = 40
				local var_591_6 = utf8.len(var_591_4)
				local var_591_7 = var_591_5 <= 0 and var_591_1 or var_591_1 * (var_591_6 / var_591_5)

				if var_591_7 > 0 and var_591_1 < var_591_7 then
					arg_588_1.talkMaxDuration = var_591_7

					if var_591_7 + var_591_0 > arg_588_1.duration_ then
						arg_588_1.duration_ = var_591_7 + var_591_0
					end
				end

				arg_588_1.text_.text = var_591_4
				arg_588_1.typewritter.percent = 0

				arg_588_1.typewritter:SetDirty()
				arg_588_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161142", "story_v_out_417161.awb") ~= 0 then
					local var_591_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161142", "story_v_out_417161.awb") / 1000

					if var_591_8 + var_591_0 > arg_588_1.duration_ then
						arg_588_1.duration_ = var_591_8 + var_591_0
					end

					if var_591_3.prefab_name ~= "" and arg_588_1.actors_[var_591_3.prefab_name] ~= nil then
						local var_591_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_588_1.actors_[var_591_3.prefab_name].transform, "story_v_out_417161", "417161142", "story_v_out_417161.awb")

						arg_588_1:RecordAudio("417161142", var_591_9)
						arg_588_1:RecordAudio("417161142", var_591_9)
					else
						arg_588_1:AudioAction("play", "voice", "story_v_out_417161", "417161142", "story_v_out_417161.awb")
					end

					arg_588_1:RecordHistoryTalkVoice("story_v_out_417161", "417161142", "story_v_out_417161.awb")
				end

				arg_588_1:RecordContent(arg_588_1.text_.text)
			end

			local var_591_10 = math.max(var_591_1, arg_588_1.talkMaxDuration)

			if var_591_0 <= arg_588_1.time_ and arg_588_1.time_ < var_591_0 + var_591_10 then
				arg_588_1.typewritter.percent = (arg_588_1.time_ - var_591_0) / var_591_10

				arg_588_1.typewritter:SetDirty()
			end

			if arg_588_1.time_ >= var_591_0 + var_591_10 and arg_588_1.time_ < var_591_0 + var_591_10 + arg_591_0 then
				arg_588_1.typewritter.percent = 1

				arg_588_1.typewritter:SetDirty()
				arg_588_1:ShowNextGo(true)
			end
		end
	end,
	Play417161143 = function(arg_592_0, arg_592_1)
		arg_592_1.time_ = 0
		arg_592_1.frameCnt_ = 0
		arg_592_1.state_ = "playing"
		arg_592_1.curTalkId_ = 417161143
		arg_592_1.duration_ = 5

		SetActive(arg_592_1.tipsGo_, false)

		function arg_592_1.onSingleLineFinish_()
			arg_592_1.onSingleLineUpdate_ = nil
			arg_592_1.onSingleLineFinish_ = nil
			arg_592_1.state_ = "waiting"
		end

		function arg_592_1.playNext_(arg_594_0)
			if arg_594_0 == 1 then
				arg_592_0:Play417161144(arg_592_1)
			end
		end

		function arg_592_1.onSingleLineUpdate_(arg_595_0)
			local var_595_0 = arg_592_1.actors_["10111"]
			local var_595_1 = 0

			if var_595_1 < arg_592_1.time_ and arg_592_1.time_ <= var_595_1 + arg_595_0 and not isNil(var_595_0) and arg_592_1.var_.actorSpriteComps10111 == nil then
				arg_592_1.var_.actorSpriteComps10111 = var_595_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_595_2 = 0.2

			if var_595_1 <= arg_592_1.time_ and arg_592_1.time_ < var_595_1 + var_595_2 and not isNil(var_595_0) then
				local var_595_3 = (arg_592_1.time_ - var_595_1) / var_595_2

				if arg_592_1.var_.actorSpriteComps10111 then
					for iter_595_0, iter_595_1 in pairs(arg_592_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_595_1 then
							if arg_592_1.isInRecall_ then
								local var_595_4 = Mathf.Lerp(iter_595_1.color.r, arg_592_1.hightColor2.r, var_595_3)
								local var_595_5 = Mathf.Lerp(iter_595_1.color.g, arg_592_1.hightColor2.g, var_595_3)
								local var_595_6 = Mathf.Lerp(iter_595_1.color.b, arg_592_1.hightColor2.b, var_595_3)

								iter_595_1.color = Color.New(var_595_4, var_595_5, var_595_6)
							else
								local var_595_7 = Mathf.Lerp(iter_595_1.color.r, 0.5, var_595_3)

								iter_595_1.color = Color.New(var_595_7, var_595_7, var_595_7)
							end
						end
					end
				end
			end

			if arg_592_1.time_ >= var_595_1 + var_595_2 and arg_592_1.time_ < var_595_1 + var_595_2 + arg_595_0 and not isNil(var_595_0) and arg_592_1.var_.actorSpriteComps10111 then
				for iter_595_2, iter_595_3 in pairs(arg_592_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_595_3 then
						if arg_592_1.isInRecall_ then
							iter_595_3.color = arg_592_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_595_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_592_1.var_.actorSpriteComps10111 = nil
			end

			local var_595_8 = 0
			local var_595_9 = 1

			if var_595_8 < arg_592_1.time_ and arg_592_1.time_ <= var_595_8 + arg_595_0 then
				local var_595_10 = "play"
				local var_595_11 = "effect"

				arg_592_1:AudioAction(var_595_10, var_595_11, "se_story_1311", "se_story_1311_paper", "")
			end

			local var_595_12 = 0
			local var_595_13 = 0.525

			if var_595_12 < arg_592_1.time_ and arg_592_1.time_ <= var_595_12 + arg_595_0 then
				arg_592_1.talkMaxDuration = 0
				arg_592_1.dialogCg_.alpha = 1

				arg_592_1.dialog_:SetActive(true)
				SetActive(arg_592_1.leftNameGo_, false)

				arg_592_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_592_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_592_1:RecordName(arg_592_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_592_1.iconTrs_.gameObject, false)
				arg_592_1.callingController_:SetSelectedState("normal")

				local var_595_14 = arg_592_1:GetWordFromCfg(417161143)
				local var_595_15 = arg_592_1:FormatText(var_595_14.content)

				arg_592_1.text_.text = var_595_15

				LuaForUtil.ClearLinePrefixSymbol(arg_592_1.text_)

				local var_595_16 = 21
				local var_595_17 = utf8.len(var_595_15)
				local var_595_18 = var_595_16 <= 0 and var_595_13 or var_595_13 * (var_595_17 / var_595_16)

				if var_595_18 > 0 and var_595_13 < var_595_18 then
					arg_592_1.talkMaxDuration = var_595_18

					if var_595_18 + var_595_12 > arg_592_1.duration_ then
						arg_592_1.duration_ = var_595_18 + var_595_12
					end
				end

				arg_592_1.text_.text = var_595_15
				arg_592_1.typewritter.percent = 0

				arg_592_1.typewritter:SetDirty()
				arg_592_1:ShowNextGo(false)
				arg_592_1:RecordContent(arg_592_1.text_.text)
			end

			local var_595_19 = math.max(var_595_13, arg_592_1.talkMaxDuration)

			if var_595_12 <= arg_592_1.time_ and arg_592_1.time_ < var_595_12 + var_595_19 then
				arg_592_1.typewritter.percent = (arg_592_1.time_ - var_595_12) / var_595_19

				arg_592_1.typewritter:SetDirty()
			end

			if arg_592_1.time_ >= var_595_12 + var_595_19 and arg_592_1.time_ < var_595_12 + var_595_19 + arg_595_0 then
				arg_592_1.typewritter.percent = 1

				arg_592_1.typewritter:SetDirty()
				arg_592_1:ShowNextGo(true)
			end
		end
	end,
	Play417161144 = function(arg_596_0, arg_596_1)
		arg_596_1.time_ = 0
		arg_596_1.frameCnt_ = 0
		arg_596_1.state_ = "playing"
		arg_596_1.curTalkId_ = 417161144
		arg_596_1.duration_ = 7.1

		SetActive(arg_596_1.tipsGo_, false)

		function arg_596_1.onSingleLineFinish_()
			arg_596_1.onSingleLineUpdate_ = nil
			arg_596_1.onSingleLineFinish_ = nil
			arg_596_1.state_ = "waiting"
		end

		function arg_596_1.playNext_(arg_598_0)
			if arg_598_0 == 1 then
				arg_596_0:Play417161145(arg_596_1)
			end
		end

		function arg_596_1.onSingleLineUpdate_(arg_599_0)
			local var_599_0 = arg_596_1.actors_["10111"]
			local var_599_1 = 0

			if var_599_1 < arg_596_1.time_ and arg_596_1.time_ <= var_599_1 + arg_599_0 and not isNil(var_599_0) and arg_596_1.var_.actorSpriteComps10111 == nil then
				arg_596_1.var_.actorSpriteComps10111 = var_599_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_599_2 = 0.2

			if var_599_1 <= arg_596_1.time_ and arg_596_1.time_ < var_599_1 + var_599_2 and not isNil(var_599_0) then
				local var_599_3 = (arg_596_1.time_ - var_599_1) / var_599_2

				if arg_596_1.var_.actorSpriteComps10111 then
					for iter_599_0, iter_599_1 in pairs(arg_596_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_599_1 then
							if arg_596_1.isInRecall_ then
								local var_599_4 = Mathf.Lerp(iter_599_1.color.r, arg_596_1.hightColor1.r, var_599_3)
								local var_599_5 = Mathf.Lerp(iter_599_1.color.g, arg_596_1.hightColor1.g, var_599_3)
								local var_599_6 = Mathf.Lerp(iter_599_1.color.b, arg_596_1.hightColor1.b, var_599_3)

								iter_599_1.color = Color.New(var_599_4, var_599_5, var_599_6)
							else
								local var_599_7 = Mathf.Lerp(iter_599_1.color.r, 1, var_599_3)

								iter_599_1.color = Color.New(var_599_7, var_599_7, var_599_7)
							end
						end
					end
				end
			end

			if arg_596_1.time_ >= var_599_1 + var_599_2 and arg_596_1.time_ < var_599_1 + var_599_2 + arg_599_0 and not isNil(var_599_0) and arg_596_1.var_.actorSpriteComps10111 then
				for iter_599_2, iter_599_3 in pairs(arg_596_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_599_3 then
						if arg_596_1.isInRecall_ then
							iter_599_3.color = arg_596_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_599_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_596_1.var_.actorSpriteComps10111 = nil
			end

			local var_599_8 = 0
			local var_599_9 = 0.825

			if var_599_8 < arg_596_1.time_ and arg_596_1.time_ <= var_599_8 + arg_599_0 then
				arg_596_1.talkMaxDuration = 0
				arg_596_1.dialogCg_.alpha = 1

				arg_596_1.dialog_:SetActive(true)
				SetActive(arg_596_1.leftNameGo_, true)

				local var_599_10 = arg_596_1:FormatText(StoryNameCfg[1125].name)

				arg_596_1.leftNameTxt_.text = var_599_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_596_1.leftNameTxt_.transform)

				arg_596_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_596_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_596_1:RecordName(arg_596_1.leftNameTxt_.text)
				SetActive(arg_596_1.iconTrs_.gameObject, false)
				arg_596_1.callingController_:SetSelectedState("normal")

				local var_599_11 = arg_596_1:GetWordFromCfg(417161144)
				local var_599_12 = arg_596_1:FormatText(var_599_11.content)

				arg_596_1.text_.text = var_599_12

				LuaForUtil.ClearLinePrefixSymbol(arg_596_1.text_)

				local var_599_13 = 33
				local var_599_14 = utf8.len(var_599_12)
				local var_599_15 = var_599_13 <= 0 and var_599_9 or var_599_9 * (var_599_14 / var_599_13)

				if var_599_15 > 0 and var_599_9 < var_599_15 then
					arg_596_1.talkMaxDuration = var_599_15

					if var_599_15 + var_599_8 > arg_596_1.duration_ then
						arg_596_1.duration_ = var_599_15 + var_599_8
					end
				end

				arg_596_1.text_.text = var_599_12
				arg_596_1.typewritter.percent = 0

				arg_596_1.typewritter:SetDirty()
				arg_596_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161144", "story_v_out_417161.awb") ~= 0 then
					local var_599_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161144", "story_v_out_417161.awb") / 1000

					if var_599_16 + var_599_8 > arg_596_1.duration_ then
						arg_596_1.duration_ = var_599_16 + var_599_8
					end

					if var_599_11.prefab_name ~= "" and arg_596_1.actors_[var_599_11.prefab_name] ~= nil then
						local var_599_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_596_1.actors_[var_599_11.prefab_name].transform, "story_v_out_417161", "417161144", "story_v_out_417161.awb")

						arg_596_1:RecordAudio("417161144", var_599_17)
						arg_596_1:RecordAudio("417161144", var_599_17)
					else
						arg_596_1:AudioAction("play", "voice", "story_v_out_417161", "417161144", "story_v_out_417161.awb")
					end

					arg_596_1:RecordHistoryTalkVoice("story_v_out_417161", "417161144", "story_v_out_417161.awb")
				end

				arg_596_1:RecordContent(arg_596_1.text_.text)
			end

			local var_599_18 = math.max(var_599_9, arg_596_1.talkMaxDuration)

			if var_599_8 <= arg_596_1.time_ and arg_596_1.time_ < var_599_8 + var_599_18 then
				arg_596_1.typewritter.percent = (arg_596_1.time_ - var_599_8) / var_599_18

				arg_596_1.typewritter:SetDirty()
			end

			if arg_596_1.time_ >= var_599_8 + var_599_18 and arg_596_1.time_ < var_599_8 + var_599_18 + arg_599_0 then
				arg_596_1.typewritter.percent = 1

				arg_596_1.typewritter:SetDirty()
				arg_596_1:ShowNextGo(true)
			end
		end
	end,
	Play417161145 = function(arg_600_0, arg_600_1)
		arg_600_1.time_ = 0
		arg_600_1.frameCnt_ = 0
		arg_600_1.state_ = "playing"
		arg_600_1.curTalkId_ = 417161145
		arg_600_1.duration_ = 4.13

		SetActive(arg_600_1.tipsGo_, false)

		function arg_600_1.onSingleLineFinish_()
			arg_600_1.onSingleLineUpdate_ = nil
			arg_600_1.onSingleLineFinish_ = nil
			arg_600_1.state_ = "waiting"
		end

		function arg_600_1.playNext_(arg_602_0)
			if arg_602_0 == 1 then
				arg_600_0:Play417161146(arg_600_1)
			end
		end

		function arg_600_1.onSingleLineUpdate_(arg_603_0)
			local var_603_0 = 0
			local var_603_1 = 0.4

			if var_603_0 < arg_600_1.time_ and arg_600_1.time_ <= var_603_0 + arg_603_0 then
				arg_600_1.talkMaxDuration = 0
				arg_600_1.dialogCg_.alpha = 1

				arg_600_1.dialog_:SetActive(true)
				SetActive(arg_600_1.leftNameGo_, true)

				local var_603_2 = arg_600_1:FormatText(StoryNameCfg[1125].name)

				arg_600_1.leftNameTxt_.text = var_603_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_600_1.leftNameTxt_.transform)

				arg_600_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_600_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_600_1:RecordName(arg_600_1.leftNameTxt_.text)
				SetActive(arg_600_1.iconTrs_.gameObject, false)
				arg_600_1.callingController_:SetSelectedState("normal")

				local var_603_3 = arg_600_1:GetWordFromCfg(417161145)
				local var_603_4 = arg_600_1:FormatText(var_603_3.content)

				arg_600_1.text_.text = var_603_4

				LuaForUtil.ClearLinePrefixSymbol(arg_600_1.text_)

				local var_603_5 = 16
				local var_603_6 = utf8.len(var_603_4)
				local var_603_7 = var_603_5 <= 0 and var_603_1 or var_603_1 * (var_603_6 / var_603_5)

				if var_603_7 > 0 and var_603_1 < var_603_7 then
					arg_600_1.talkMaxDuration = var_603_7

					if var_603_7 + var_603_0 > arg_600_1.duration_ then
						arg_600_1.duration_ = var_603_7 + var_603_0
					end
				end

				arg_600_1.text_.text = var_603_4
				arg_600_1.typewritter.percent = 0

				arg_600_1.typewritter:SetDirty()
				arg_600_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161145", "story_v_out_417161.awb") ~= 0 then
					local var_603_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161145", "story_v_out_417161.awb") / 1000

					if var_603_8 + var_603_0 > arg_600_1.duration_ then
						arg_600_1.duration_ = var_603_8 + var_603_0
					end

					if var_603_3.prefab_name ~= "" and arg_600_1.actors_[var_603_3.prefab_name] ~= nil then
						local var_603_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_600_1.actors_[var_603_3.prefab_name].transform, "story_v_out_417161", "417161145", "story_v_out_417161.awb")

						arg_600_1:RecordAudio("417161145", var_603_9)
						arg_600_1:RecordAudio("417161145", var_603_9)
					else
						arg_600_1:AudioAction("play", "voice", "story_v_out_417161", "417161145", "story_v_out_417161.awb")
					end

					arg_600_1:RecordHistoryTalkVoice("story_v_out_417161", "417161145", "story_v_out_417161.awb")
				end

				arg_600_1:RecordContent(arg_600_1.text_.text)
			end

			local var_603_10 = math.max(var_603_1, arg_600_1.talkMaxDuration)

			if var_603_0 <= arg_600_1.time_ and arg_600_1.time_ < var_603_0 + var_603_10 then
				arg_600_1.typewritter.percent = (arg_600_1.time_ - var_603_0) / var_603_10

				arg_600_1.typewritter:SetDirty()
			end

			if arg_600_1.time_ >= var_603_0 + var_603_10 and arg_600_1.time_ < var_603_0 + var_603_10 + arg_603_0 then
				arg_600_1.typewritter.percent = 1

				arg_600_1.typewritter:SetDirty()
				arg_600_1:ShowNextGo(true)
			end
		end
	end,
	Play417161146 = function(arg_604_0, arg_604_1)
		arg_604_1.time_ = 0
		arg_604_1.frameCnt_ = 0
		arg_604_1.state_ = "playing"
		arg_604_1.curTalkId_ = 417161146
		arg_604_1.duration_ = 6.97

		SetActive(arg_604_1.tipsGo_, false)

		function arg_604_1.onSingleLineFinish_()
			arg_604_1.onSingleLineUpdate_ = nil
			arg_604_1.onSingleLineFinish_ = nil
			arg_604_1.state_ = "waiting"
		end

		function arg_604_1.playNext_(arg_606_0)
			if arg_606_0 == 1 then
				arg_604_0:Play417161147(arg_604_1)
			end
		end

		function arg_604_1.onSingleLineUpdate_(arg_607_0)
			local var_607_0 = 4

			if var_607_0 < arg_604_1.time_ and arg_604_1.time_ <= var_607_0 + arg_607_0 then
				arg_604_1.allBtn_.enabled = false
			end

			local var_607_1 = 0.166666666666667

			if arg_604_1.time_ >= var_607_0 + var_607_1 and arg_604_1.time_ < var_607_0 + var_607_1 + arg_607_0 then
				arg_604_1.allBtn_.enabled = true
			end

			local var_607_2 = 2

			if var_607_2 < arg_604_1.time_ and arg_604_1.time_ <= var_607_2 + arg_607_0 then
				local var_607_3 = manager.ui.mainCamera.transform.localPosition
				local var_607_4 = Vector3.New(0, 0, 10) + Vector3.New(var_607_3.x, var_607_3.y, 0)
				local var_607_5 = arg_604_1.bgs_.SS1706

				var_607_5.transform.localPosition = var_607_4
				var_607_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_607_6 = var_607_5:GetComponent("SpriteRenderer")

				if var_607_6 and var_607_6.sprite then
					local var_607_7 = (var_607_5.transform.localPosition - var_607_3).z
					local var_607_8 = manager.ui.mainCameraCom_
					local var_607_9 = 2 * var_607_7 * Mathf.Tan(var_607_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_607_10 = var_607_9 * var_607_8.aspect
					local var_607_11 = var_607_6.sprite.bounds.size.x
					local var_607_12 = var_607_6.sprite.bounds.size.y
					local var_607_13 = var_607_10 / var_607_11
					local var_607_14 = var_607_9 / var_607_12
					local var_607_15 = var_607_14 < var_607_13 and var_607_13 or var_607_14

					var_607_5.transform.localScale = Vector3.New(var_607_15, var_607_15, 0)
				end

				for iter_607_0, iter_607_1 in pairs(arg_604_1.bgs_) do
					if iter_607_0 ~= "SS1706" then
						iter_607_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_607_16 = 0

			if var_607_16 < arg_604_1.time_ and arg_604_1.time_ <= var_607_16 + arg_607_0 then
				arg_604_1.mask_.enabled = true
				arg_604_1.mask_.raycastTarget = true

				arg_604_1:SetGaussion(false)
			end

			local var_607_17 = 2

			if var_607_16 <= arg_604_1.time_ and arg_604_1.time_ < var_607_16 + var_607_17 then
				local var_607_18 = (arg_604_1.time_ - var_607_16) / var_607_17
				local var_607_19 = Color.New(0, 0, 0)

				var_607_19.a = Mathf.Lerp(0, 1, var_607_18)
				arg_604_1.mask_.color = var_607_19
			end

			if arg_604_1.time_ >= var_607_16 + var_607_17 and arg_604_1.time_ < var_607_16 + var_607_17 + arg_607_0 then
				local var_607_20 = Color.New(0, 0, 0)

				var_607_20.a = 1
				arg_604_1.mask_.color = var_607_20
			end

			local var_607_21 = 2

			if var_607_21 < arg_604_1.time_ and arg_604_1.time_ <= var_607_21 + arg_607_0 then
				arg_604_1.mask_.enabled = true
				arg_604_1.mask_.raycastTarget = true

				arg_604_1:SetGaussion(false)
			end

			local var_607_22 = 2

			if var_607_21 <= arg_604_1.time_ and arg_604_1.time_ < var_607_21 + var_607_22 then
				local var_607_23 = (arg_604_1.time_ - var_607_21) / var_607_22
				local var_607_24 = Color.New(0, 0, 0)

				var_607_24.a = Mathf.Lerp(1, 0, var_607_23)
				arg_604_1.mask_.color = var_607_24
			end

			if arg_604_1.time_ >= var_607_21 + var_607_22 and arg_604_1.time_ < var_607_21 + var_607_22 + arg_607_0 then
				local var_607_25 = Color.New(0, 0, 0)
				local var_607_26 = 0

				arg_604_1.mask_.enabled = false
				var_607_25.a = var_607_26
				arg_604_1.mask_.color = var_607_25
			end

			local var_607_27 = arg_604_1.actors_["10128"].transform
			local var_607_28 = 1.966

			if var_607_28 < arg_604_1.time_ and arg_604_1.time_ <= var_607_28 + arg_607_0 then
				arg_604_1.var_.moveOldPos10128 = var_607_27.localPosition
				var_607_27.localScale = Vector3.New(1, 1, 1)

				arg_604_1:CheckSpriteTmpPos("10128", 7)

				local var_607_29 = var_607_27.childCount

				for iter_607_2 = 0, var_607_29 - 1 do
					local var_607_30 = var_607_27:GetChild(iter_607_2)

					if var_607_30.name == "" or not string.find(var_607_30.name, "split") then
						var_607_30.gameObject:SetActive(true)
					else
						var_607_30.gameObject:SetActive(false)
					end
				end
			end

			local var_607_31 = 0.001

			if var_607_28 <= arg_604_1.time_ and arg_604_1.time_ < var_607_28 + var_607_31 then
				local var_607_32 = (arg_604_1.time_ - var_607_28) / var_607_31
				local var_607_33 = Vector3.New(0, -2000, -300)

				var_607_27.localPosition = Vector3.Lerp(arg_604_1.var_.moveOldPos10128, var_607_33, var_607_32)
			end

			if arg_604_1.time_ >= var_607_28 + var_607_31 and arg_604_1.time_ < var_607_28 + var_607_31 + arg_607_0 then
				var_607_27.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_607_34 = arg_604_1.actors_["10111"].transform
			local var_607_35 = 1.966

			if var_607_35 < arg_604_1.time_ and arg_604_1.time_ <= var_607_35 + arg_607_0 then
				arg_604_1.var_.moveOldPos10111 = var_607_34.localPosition
				var_607_34.localScale = Vector3.New(1, 1, 1)

				arg_604_1:CheckSpriteTmpPos("10111", 7)

				local var_607_36 = var_607_34.childCount

				for iter_607_3 = 0, var_607_36 - 1 do
					local var_607_37 = var_607_34:GetChild(iter_607_3)

					if var_607_37.name == "" or not string.find(var_607_37.name, "split") then
						var_607_37.gameObject:SetActive(true)
					else
						var_607_37.gameObject:SetActive(false)
					end
				end
			end

			local var_607_38 = 0.001

			if var_607_35 <= arg_604_1.time_ and arg_604_1.time_ < var_607_35 + var_607_38 then
				local var_607_39 = (arg_604_1.time_ - var_607_35) / var_607_38
				local var_607_40 = Vector3.New(0, -2000, 0)

				var_607_34.localPosition = Vector3.Lerp(arg_604_1.var_.moveOldPos10111, var_607_40, var_607_39)
			end

			if arg_604_1.time_ >= var_607_35 + var_607_38 and arg_604_1.time_ < var_607_35 + var_607_38 + arg_607_0 then
				var_607_34.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_607_41 = 1.93333333333333

			arg_604_1.isInRecall_ = false

			if var_607_41 < arg_604_1.time_ and arg_604_1.time_ <= var_607_41 + arg_607_0 then
				arg_604_1.screenFilterGo_:SetActive(false)

				for iter_607_4, iter_607_5 in pairs(arg_604_1.actors_) do
					local var_607_42 = iter_607_5:GetComponentsInChildren(typeof(Image), true):ToTable()

					for iter_607_6, iter_607_7 in ipairs(var_607_42) do
						if iter_607_7.color.r > 0.51 then
							iter_607_7.color = Color.New(1, 1, 1)
						else
							iter_607_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end
			end

			local var_607_43 = 0.0666666666666667

			if var_607_41 <= arg_604_1.time_ and arg_604_1.time_ < var_607_41 + var_607_43 then
				local var_607_44 = (arg_604_1.time_ - var_607_41) / var_607_43

				arg_604_1.screenFilterEffect_.weight = Mathf.Lerp(1, 0, var_607_44)
			end

			if arg_604_1.time_ >= var_607_41 + var_607_43 and arg_604_1.time_ < var_607_41 + var_607_43 + arg_607_0 then
				arg_604_1.screenFilterEffect_.weight = 0
			end

			if arg_604_1.frameCnt_ <= 1 then
				arg_604_1.dialog_:SetActive(false)
			end

			local var_607_45 = 4
			local var_607_46 = 0.3

			if var_607_45 < arg_604_1.time_ and arg_604_1.time_ <= var_607_45 + arg_607_0 then
				arg_604_1.talkMaxDuration = 0

				arg_604_1.dialog_:SetActive(true)

				local var_607_47 = LeanTween.value(arg_604_1.dialog_, 0, 1, 0.3)

				var_607_47:setOnUpdate(LuaHelper.FloatAction(function(arg_608_0)
					arg_604_1.dialogCg_.alpha = arg_608_0
				end))
				var_607_47:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_604_1.dialog_)
					var_607_47:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_604_1.duration_ = arg_604_1.duration_ + 0.3

				SetActive(arg_604_1.leftNameGo_, true)

				local var_607_48 = arg_604_1:FormatText(StoryNameCfg[1125].name)

				arg_604_1.leftNameTxt_.text = var_607_48

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_604_1.leftNameTxt_.transform)

				arg_604_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_604_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_604_1:RecordName(arg_604_1.leftNameTxt_.text)
				SetActive(arg_604_1.iconTrs_.gameObject, false)
				arg_604_1.callingController_:SetSelectedState("normal")

				local var_607_49 = arg_604_1:GetWordFromCfg(417161146)
				local var_607_50 = arg_604_1:FormatText(var_607_49.content)

				arg_604_1.text_.text = var_607_50

				LuaForUtil.ClearLinePrefixSymbol(arg_604_1.text_)

				local var_607_51 = 12
				local var_607_52 = utf8.len(var_607_50)
				local var_607_53 = var_607_51 <= 0 and var_607_46 or var_607_46 * (var_607_52 / var_607_51)

				if var_607_53 > 0 and var_607_46 < var_607_53 then
					arg_604_1.talkMaxDuration = var_607_53
					var_607_45 = var_607_45 + 0.3

					if var_607_53 + var_607_45 > arg_604_1.duration_ then
						arg_604_1.duration_ = var_607_53 + var_607_45
					end
				end

				arg_604_1.text_.text = var_607_50
				arg_604_1.typewritter.percent = 0

				arg_604_1.typewritter:SetDirty()
				arg_604_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161146", "story_v_out_417161.awb") ~= 0 then
					local var_607_54 = manager.audio:GetVoiceLength("story_v_out_417161", "417161146", "story_v_out_417161.awb") / 1000

					if var_607_54 + var_607_45 > arg_604_1.duration_ then
						arg_604_1.duration_ = var_607_54 + var_607_45
					end

					if var_607_49.prefab_name ~= "" and arg_604_1.actors_[var_607_49.prefab_name] ~= nil then
						local var_607_55 = LuaForUtil.PlayVoiceWithCriLipsync(arg_604_1.actors_[var_607_49.prefab_name].transform, "story_v_out_417161", "417161146", "story_v_out_417161.awb")

						arg_604_1:RecordAudio("417161146", var_607_55)
						arg_604_1:RecordAudio("417161146", var_607_55)
					else
						arg_604_1:AudioAction("play", "voice", "story_v_out_417161", "417161146", "story_v_out_417161.awb")
					end

					arg_604_1:RecordHistoryTalkVoice("story_v_out_417161", "417161146", "story_v_out_417161.awb")
				end

				arg_604_1:RecordContent(arg_604_1.text_.text)
			end

			local var_607_56 = var_607_45 + 0.3
			local var_607_57 = math.max(var_607_46, arg_604_1.talkMaxDuration)

			if var_607_56 <= arg_604_1.time_ and arg_604_1.time_ < var_607_56 + var_607_57 then
				arg_604_1.typewritter.percent = (arg_604_1.time_ - var_607_56) / var_607_57

				arg_604_1.typewritter:SetDirty()
			end

			if arg_604_1.time_ >= var_607_56 + var_607_57 and arg_604_1.time_ < var_607_56 + var_607_57 + arg_607_0 then
				arg_604_1.typewritter.percent = 1

				arg_604_1.typewritter:SetDirty()
				arg_604_1:ShowNextGo(true)
			end
		end
	end,
	Play417161147 = function(arg_610_0, arg_610_1)
		arg_610_1.time_ = 0
		arg_610_1.frameCnt_ = 0
		arg_610_1.state_ = "playing"
		arg_610_1.curTalkId_ = 417161147
		arg_610_1.duration_ = 5.17

		SetActive(arg_610_1.tipsGo_, false)

		function arg_610_1.onSingleLineFinish_()
			arg_610_1.onSingleLineUpdate_ = nil
			arg_610_1.onSingleLineFinish_ = nil
			arg_610_1.state_ = "waiting"
		end

		function arg_610_1.playNext_(arg_612_0)
			if arg_612_0 == 1 then
				arg_610_0:Play417161148(arg_610_1)
			end
		end

		function arg_610_1.onSingleLineUpdate_(arg_613_0)
			local var_613_0 = 0
			local var_613_1 = 0.7

			if var_613_0 < arg_610_1.time_ and arg_610_1.time_ <= var_613_0 + arg_613_0 then
				arg_610_1.talkMaxDuration = 0
				arg_610_1.dialogCg_.alpha = 1

				arg_610_1.dialog_:SetActive(true)
				SetActive(arg_610_1.leftNameGo_, true)

				local var_613_2 = arg_610_1:FormatText(StoryNameCfg[595].name)

				arg_610_1.leftNameTxt_.text = var_613_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_610_1.leftNameTxt_.transform)

				arg_610_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_610_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_610_1:RecordName(arg_610_1.leftNameTxt_.text)
				SetActive(arg_610_1.iconTrs_.gameObject, false)
				arg_610_1.callingController_:SetSelectedState("normal")

				local var_613_3 = arg_610_1:GetWordFromCfg(417161147)
				local var_613_4 = arg_610_1:FormatText(var_613_3.content)

				arg_610_1.text_.text = var_613_4

				LuaForUtil.ClearLinePrefixSymbol(arg_610_1.text_)

				local var_613_5 = 28
				local var_613_6 = utf8.len(var_613_4)
				local var_613_7 = var_613_5 <= 0 and var_613_1 or var_613_1 * (var_613_6 / var_613_5)

				if var_613_7 > 0 and var_613_1 < var_613_7 then
					arg_610_1.talkMaxDuration = var_613_7

					if var_613_7 + var_613_0 > arg_610_1.duration_ then
						arg_610_1.duration_ = var_613_7 + var_613_0
					end
				end

				arg_610_1.text_.text = var_613_4
				arg_610_1.typewritter.percent = 0

				arg_610_1.typewritter:SetDirty()
				arg_610_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161147", "story_v_out_417161.awb") ~= 0 then
					local var_613_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161147", "story_v_out_417161.awb") / 1000

					if var_613_8 + var_613_0 > arg_610_1.duration_ then
						arg_610_1.duration_ = var_613_8 + var_613_0
					end

					if var_613_3.prefab_name ~= "" and arg_610_1.actors_[var_613_3.prefab_name] ~= nil then
						local var_613_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_610_1.actors_[var_613_3.prefab_name].transform, "story_v_out_417161", "417161147", "story_v_out_417161.awb")

						arg_610_1:RecordAudio("417161147", var_613_9)
						arg_610_1:RecordAudio("417161147", var_613_9)
					else
						arg_610_1:AudioAction("play", "voice", "story_v_out_417161", "417161147", "story_v_out_417161.awb")
					end

					arg_610_1:RecordHistoryTalkVoice("story_v_out_417161", "417161147", "story_v_out_417161.awb")
				end

				arg_610_1:RecordContent(arg_610_1.text_.text)
			end

			local var_613_10 = math.max(var_613_1, arg_610_1.talkMaxDuration)

			if var_613_0 <= arg_610_1.time_ and arg_610_1.time_ < var_613_0 + var_613_10 then
				arg_610_1.typewritter.percent = (arg_610_1.time_ - var_613_0) / var_613_10

				arg_610_1.typewritter:SetDirty()
			end

			if arg_610_1.time_ >= var_613_0 + var_613_10 and arg_610_1.time_ < var_613_0 + var_613_10 + arg_613_0 then
				arg_610_1.typewritter.percent = 1

				arg_610_1.typewritter:SetDirty()
				arg_610_1:ShowNextGo(true)
			end
		end
	end,
	Play417161148 = function(arg_614_0, arg_614_1)
		arg_614_1.time_ = 0
		arg_614_1.frameCnt_ = 0
		arg_614_1.state_ = "playing"
		arg_614_1.curTalkId_ = 417161148
		arg_614_1.duration_ = 1

		SetActive(arg_614_1.tipsGo_, false)

		function arg_614_1.onSingleLineFinish_()
			arg_614_1.onSingleLineUpdate_ = nil
			arg_614_1.onSingleLineFinish_ = nil
			arg_614_1.state_ = "waiting"
		end

		function arg_614_1.playNext_(arg_616_0)
			if arg_616_0 == 1 then
				arg_614_0:Play417161149(arg_614_1)
			end
		end

		function arg_614_1.onSingleLineUpdate_(arg_617_0)
			local var_617_0 = 0
			local var_617_1 = 0.125

			if var_617_0 < arg_614_1.time_ and arg_614_1.time_ <= var_617_0 + arg_617_0 then
				arg_614_1.talkMaxDuration = 0
				arg_614_1.dialogCg_.alpha = 1

				arg_614_1.dialog_:SetActive(true)
				SetActive(arg_614_1.leftNameGo_, true)

				local var_617_2 = arg_614_1:FormatText(StoryNameCfg[1125].name)

				arg_614_1.leftNameTxt_.text = var_617_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_614_1.leftNameTxt_.transform)

				arg_614_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_614_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_614_1:RecordName(arg_614_1.leftNameTxt_.text)
				SetActive(arg_614_1.iconTrs_.gameObject, false)
				arg_614_1.callingController_:SetSelectedState("normal")

				local var_617_3 = arg_614_1:GetWordFromCfg(417161148)
				local var_617_4 = arg_614_1:FormatText(var_617_3.content)

				arg_614_1.text_.text = var_617_4

				LuaForUtil.ClearLinePrefixSymbol(arg_614_1.text_)

				local var_617_5 = 5
				local var_617_6 = utf8.len(var_617_4)
				local var_617_7 = var_617_5 <= 0 and var_617_1 or var_617_1 * (var_617_6 / var_617_5)

				if var_617_7 > 0 and var_617_1 < var_617_7 then
					arg_614_1.talkMaxDuration = var_617_7

					if var_617_7 + var_617_0 > arg_614_1.duration_ then
						arg_614_1.duration_ = var_617_7 + var_617_0
					end
				end

				arg_614_1.text_.text = var_617_4
				arg_614_1.typewritter.percent = 0

				arg_614_1.typewritter:SetDirty()
				arg_614_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161148", "story_v_out_417161.awb") ~= 0 then
					local var_617_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161148", "story_v_out_417161.awb") / 1000

					if var_617_8 + var_617_0 > arg_614_1.duration_ then
						arg_614_1.duration_ = var_617_8 + var_617_0
					end

					if var_617_3.prefab_name ~= "" and arg_614_1.actors_[var_617_3.prefab_name] ~= nil then
						local var_617_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_614_1.actors_[var_617_3.prefab_name].transform, "story_v_out_417161", "417161148", "story_v_out_417161.awb")

						arg_614_1:RecordAudio("417161148", var_617_9)
						arg_614_1:RecordAudio("417161148", var_617_9)
					else
						arg_614_1:AudioAction("play", "voice", "story_v_out_417161", "417161148", "story_v_out_417161.awb")
					end

					arg_614_1:RecordHistoryTalkVoice("story_v_out_417161", "417161148", "story_v_out_417161.awb")
				end

				arg_614_1:RecordContent(arg_614_1.text_.text)
			end

			local var_617_10 = math.max(var_617_1, arg_614_1.talkMaxDuration)

			if var_617_0 <= arg_614_1.time_ and arg_614_1.time_ < var_617_0 + var_617_10 then
				arg_614_1.typewritter.percent = (arg_614_1.time_ - var_617_0) / var_617_10

				arg_614_1.typewritter:SetDirty()
			end

			if arg_614_1.time_ >= var_617_0 + var_617_10 and arg_614_1.time_ < var_617_0 + var_617_10 + arg_617_0 then
				arg_614_1.typewritter.percent = 1

				arg_614_1.typewritter:SetDirty()
				arg_614_1:ShowNextGo(true)
			end
		end
	end,
	Play417161149 = function(arg_618_0, arg_618_1)
		arg_618_1.time_ = 0
		arg_618_1.frameCnt_ = 0
		arg_618_1.state_ = "playing"
		arg_618_1.curTalkId_ = 417161149
		arg_618_1.duration_ = 5

		SetActive(arg_618_1.tipsGo_, false)

		function arg_618_1.onSingleLineFinish_()
			arg_618_1.onSingleLineUpdate_ = nil
			arg_618_1.onSingleLineFinish_ = nil
			arg_618_1.state_ = "waiting"
		end

		function arg_618_1.playNext_(arg_620_0)
			if arg_620_0 == 1 then
				arg_618_0:Play417161150(arg_618_1)
			end
		end

		function arg_618_1.onSingleLineUpdate_(arg_621_0)
			local var_621_0 = 0
			local var_621_1 = 0.75

			if var_621_0 < arg_618_1.time_ and arg_618_1.time_ <= var_621_0 + arg_621_0 then
				arg_618_1.talkMaxDuration = 0
				arg_618_1.dialogCg_.alpha = 1

				arg_618_1.dialog_:SetActive(true)
				SetActive(arg_618_1.leftNameGo_, false)

				arg_618_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_618_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_618_1:RecordName(arg_618_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_618_1.iconTrs_.gameObject, false)
				arg_618_1.callingController_:SetSelectedState("normal")

				local var_621_2 = arg_618_1:GetWordFromCfg(417161149)
				local var_621_3 = arg_618_1:FormatText(var_621_2.content)

				arg_618_1.text_.text = var_621_3

				LuaForUtil.ClearLinePrefixSymbol(arg_618_1.text_)

				local var_621_4 = 30
				local var_621_5 = utf8.len(var_621_3)
				local var_621_6 = var_621_4 <= 0 and var_621_1 or var_621_1 * (var_621_5 / var_621_4)

				if var_621_6 > 0 and var_621_1 < var_621_6 then
					arg_618_1.talkMaxDuration = var_621_6

					if var_621_6 + var_621_0 > arg_618_1.duration_ then
						arg_618_1.duration_ = var_621_6 + var_621_0
					end
				end

				arg_618_1.text_.text = var_621_3
				arg_618_1.typewritter.percent = 0

				arg_618_1.typewritter:SetDirty()
				arg_618_1:ShowNextGo(false)
				arg_618_1:RecordContent(arg_618_1.text_.text)
			end

			local var_621_7 = math.max(var_621_1, arg_618_1.talkMaxDuration)

			if var_621_0 <= arg_618_1.time_ and arg_618_1.time_ < var_621_0 + var_621_7 then
				arg_618_1.typewritter.percent = (arg_618_1.time_ - var_621_0) / var_621_7

				arg_618_1.typewritter:SetDirty()
			end

			if arg_618_1.time_ >= var_621_0 + var_621_7 and arg_618_1.time_ < var_621_0 + var_621_7 + arg_621_0 then
				arg_618_1.typewritter.percent = 1

				arg_618_1.typewritter:SetDirty()
				arg_618_1:ShowNextGo(true)
			end
		end
	end,
	Play417161150 = function(arg_622_0, arg_622_1)
		arg_622_1.time_ = 0
		arg_622_1.frameCnt_ = 0
		arg_622_1.state_ = "playing"
		arg_622_1.curTalkId_ = 417161150
		arg_622_1.duration_ = 1.53

		SetActive(arg_622_1.tipsGo_, false)

		function arg_622_1.onSingleLineFinish_()
			arg_622_1.onSingleLineUpdate_ = nil
			arg_622_1.onSingleLineFinish_ = nil
			arg_622_1.state_ = "waiting"
		end

		function arg_622_1.playNext_(arg_624_0)
			if arg_624_0 == 1 then
				arg_622_0:Play417161151(arg_622_1)
			end
		end

		function arg_622_1.onSingleLineUpdate_(arg_625_0)
			local var_625_0 = 0
			local var_625_1 = 0.175

			if var_625_0 < arg_622_1.time_ and arg_622_1.time_ <= var_625_0 + arg_625_0 then
				arg_622_1.talkMaxDuration = 0
				arg_622_1.dialogCg_.alpha = 1

				arg_622_1.dialog_:SetActive(true)
				SetActive(arg_622_1.leftNameGo_, true)

				local var_625_2 = arg_622_1:FormatText(StoryNameCfg[595].name)

				arg_622_1.leftNameTxt_.text = var_625_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_622_1.leftNameTxt_.transform)

				arg_622_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_622_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_622_1:RecordName(arg_622_1.leftNameTxt_.text)
				SetActive(arg_622_1.iconTrs_.gameObject, false)
				arg_622_1.callingController_:SetSelectedState("normal")

				local var_625_3 = arg_622_1:GetWordFromCfg(417161150)
				local var_625_4 = arg_622_1:FormatText(var_625_3.content)

				arg_622_1.text_.text = var_625_4

				LuaForUtil.ClearLinePrefixSymbol(arg_622_1.text_)

				local var_625_5 = 7
				local var_625_6 = utf8.len(var_625_4)
				local var_625_7 = var_625_5 <= 0 and var_625_1 or var_625_1 * (var_625_6 / var_625_5)

				if var_625_7 > 0 and var_625_1 < var_625_7 then
					arg_622_1.talkMaxDuration = var_625_7

					if var_625_7 + var_625_0 > arg_622_1.duration_ then
						arg_622_1.duration_ = var_625_7 + var_625_0
					end
				end

				arg_622_1.text_.text = var_625_4
				arg_622_1.typewritter.percent = 0

				arg_622_1.typewritter:SetDirty()
				arg_622_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161150", "story_v_out_417161.awb") ~= 0 then
					local var_625_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161150", "story_v_out_417161.awb") / 1000

					if var_625_8 + var_625_0 > arg_622_1.duration_ then
						arg_622_1.duration_ = var_625_8 + var_625_0
					end

					if var_625_3.prefab_name ~= "" and arg_622_1.actors_[var_625_3.prefab_name] ~= nil then
						local var_625_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_622_1.actors_[var_625_3.prefab_name].transform, "story_v_out_417161", "417161150", "story_v_out_417161.awb")

						arg_622_1:RecordAudio("417161150", var_625_9)
						arg_622_1:RecordAudio("417161150", var_625_9)
					else
						arg_622_1:AudioAction("play", "voice", "story_v_out_417161", "417161150", "story_v_out_417161.awb")
					end

					arg_622_1:RecordHistoryTalkVoice("story_v_out_417161", "417161150", "story_v_out_417161.awb")
				end

				arg_622_1:RecordContent(arg_622_1.text_.text)
			end

			local var_625_10 = math.max(var_625_1, arg_622_1.talkMaxDuration)

			if var_625_0 <= arg_622_1.time_ and arg_622_1.time_ < var_625_0 + var_625_10 then
				arg_622_1.typewritter.percent = (arg_622_1.time_ - var_625_0) / var_625_10

				arg_622_1.typewritter:SetDirty()
			end

			if arg_622_1.time_ >= var_625_0 + var_625_10 and arg_622_1.time_ < var_625_0 + var_625_10 + arg_625_0 then
				arg_622_1.typewritter.percent = 1

				arg_622_1.typewritter:SetDirty()
				arg_622_1:ShowNextGo(true)
			end
		end
	end,
	Play417161151 = function(arg_626_0, arg_626_1)
		arg_626_1.time_ = 0
		arg_626_1.frameCnt_ = 0
		arg_626_1.state_ = "playing"
		arg_626_1.curTalkId_ = 417161151
		arg_626_1.duration_ = 2.9

		SetActive(arg_626_1.tipsGo_, false)

		function arg_626_1.onSingleLineFinish_()
			arg_626_1.onSingleLineUpdate_ = nil
			arg_626_1.onSingleLineFinish_ = nil
			arg_626_1.state_ = "waiting"
		end

		function arg_626_1.playNext_(arg_628_0)
			if arg_628_0 == 1 then
				arg_626_0:Play417161152(arg_626_1)
			end
		end

		function arg_626_1.onSingleLineUpdate_(arg_629_0)
			local var_629_0 = 0
			local var_629_1 = 0.3

			if var_629_0 < arg_626_1.time_ and arg_626_1.time_ <= var_629_0 + arg_629_0 then
				arg_626_1.talkMaxDuration = 0
				arg_626_1.dialogCg_.alpha = 1

				arg_626_1.dialog_:SetActive(true)
				SetActive(arg_626_1.leftNameGo_, true)

				local var_629_2 = arg_626_1:FormatText(StoryNameCfg[1125].name)

				arg_626_1.leftNameTxt_.text = var_629_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_626_1.leftNameTxt_.transform)

				arg_626_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_626_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_626_1:RecordName(arg_626_1.leftNameTxt_.text)
				SetActive(arg_626_1.iconTrs_.gameObject, false)
				arg_626_1.callingController_:SetSelectedState("normal")

				local var_629_3 = arg_626_1:GetWordFromCfg(417161151)
				local var_629_4 = arg_626_1:FormatText(var_629_3.content)

				arg_626_1.text_.text = var_629_4

				LuaForUtil.ClearLinePrefixSymbol(arg_626_1.text_)

				local var_629_5 = 12
				local var_629_6 = utf8.len(var_629_4)
				local var_629_7 = var_629_5 <= 0 and var_629_1 or var_629_1 * (var_629_6 / var_629_5)

				if var_629_7 > 0 and var_629_1 < var_629_7 then
					arg_626_1.talkMaxDuration = var_629_7

					if var_629_7 + var_629_0 > arg_626_1.duration_ then
						arg_626_1.duration_ = var_629_7 + var_629_0
					end
				end

				arg_626_1.text_.text = var_629_4
				arg_626_1.typewritter.percent = 0

				arg_626_1.typewritter:SetDirty()
				arg_626_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161151", "story_v_out_417161.awb") ~= 0 then
					local var_629_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161151", "story_v_out_417161.awb") / 1000

					if var_629_8 + var_629_0 > arg_626_1.duration_ then
						arg_626_1.duration_ = var_629_8 + var_629_0
					end

					if var_629_3.prefab_name ~= "" and arg_626_1.actors_[var_629_3.prefab_name] ~= nil then
						local var_629_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_626_1.actors_[var_629_3.prefab_name].transform, "story_v_out_417161", "417161151", "story_v_out_417161.awb")

						arg_626_1:RecordAudio("417161151", var_629_9)
						arg_626_1:RecordAudio("417161151", var_629_9)
					else
						arg_626_1:AudioAction("play", "voice", "story_v_out_417161", "417161151", "story_v_out_417161.awb")
					end

					arg_626_1:RecordHistoryTalkVoice("story_v_out_417161", "417161151", "story_v_out_417161.awb")
				end

				arg_626_1:RecordContent(arg_626_1.text_.text)
			end

			local var_629_10 = math.max(var_629_1, arg_626_1.talkMaxDuration)

			if var_629_0 <= arg_626_1.time_ and arg_626_1.time_ < var_629_0 + var_629_10 then
				arg_626_1.typewritter.percent = (arg_626_1.time_ - var_629_0) / var_629_10

				arg_626_1.typewritter:SetDirty()
			end

			if arg_626_1.time_ >= var_629_0 + var_629_10 and arg_626_1.time_ < var_629_0 + var_629_10 + arg_629_0 then
				arg_626_1.typewritter.percent = 1

				arg_626_1.typewritter:SetDirty()
				arg_626_1:ShowNextGo(true)
			end
		end
	end,
	Play417161152 = function(arg_630_0, arg_630_1)
		arg_630_1.time_ = 0
		arg_630_1.frameCnt_ = 0
		arg_630_1.state_ = "playing"
		arg_630_1.curTalkId_ = 417161152
		arg_630_1.duration_ = 1.97

		SetActive(arg_630_1.tipsGo_, false)

		function arg_630_1.onSingleLineFinish_()
			arg_630_1.onSingleLineUpdate_ = nil
			arg_630_1.onSingleLineFinish_ = nil
			arg_630_1.state_ = "waiting"
		end

		function arg_630_1.playNext_(arg_632_0)
			if arg_632_0 == 1 then
				arg_630_0:Play417161153(arg_630_1)
			end
		end

		function arg_630_1.onSingleLineUpdate_(arg_633_0)
			local var_633_0 = 0
			local var_633_1 = 0.2

			if var_633_0 < arg_630_1.time_ and arg_630_1.time_ <= var_633_0 + arg_633_0 then
				arg_630_1.talkMaxDuration = 0
				arg_630_1.dialogCg_.alpha = 1

				arg_630_1.dialog_:SetActive(true)
				SetActive(arg_630_1.leftNameGo_, true)

				local var_633_2 = arg_630_1:FormatText(StoryNameCfg[595].name)

				arg_630_1.leftNameTxt_.text = var_633_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_630_1.leftNameTxt_.transform)

				arg_630_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_630_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_630_1:RecordName(arg_630_1.leftNameTxt_.text)
				SetActive(arg_630_1.iconTrs_.gameObject, false)
				arg_630_1.callingController_:SetSelectedState("normal")

				local var_633_3 = arg_630_1:GetWordFromCfg(417161152)
				local var_633_4 = arg_630_1:FormatText(var_633_3.content)

				arg_630_1.text_.text = var_633_4

				LuaForUtil.ClearLinePrefixSymbol(arg_630_1.text_)

				local var_633_5 = 8
				local var_633_6 = utf8.len(var_633_4)
				local var_633_7 = var_633_5 <= 0 and var_633_1 or var_633_1 * (var_633_6 / var_633_5)

				if var_633_7 > 0 and var_633_1 < var_633_7 then
					arg_630_1.talkMaxDuration = var_633_7

					if var_633_7 + var_633_0 > arg_630_1.duration_ then
						arg_630_1.duration_ = var_633_7 + var_633_0
					end
				end

				arg_630_1.text_.text = var_633_4
				arg_630_1.typewritter.percent = 0

				arg_630_1.typewritter:SetDirty()
				arg_630_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161152", "story_v_out_417161.awb") ~= 0 then
					local var_633_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161152", "story_v_out_417161.awb") / 1000

					if var_633_8 + var_633_0 > arg_630_1.duration_ then
						arg_630_1.duration_ = var_633_8 + var_633_0
					end

					if var_633_3.prefab_name ~= "" and arg_630_1.actors_[var_633_3.prefab_name] ~= nil then
						local var_633_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_630_1.actors_[var_633_3.prefab_name].transform, "story_v_out_417161", "417161152", "story_v_out_417161.awb")

						arg_630_1:RecordAudio("417161152", var_633_9)
						arg_630_1:RecordAudio("417161152", var_633_9)
					else
						arg_630_1:AudioAction("play", "voice", "story_v_out_417161", "417161152", "story_v_out_417161.awb")
					end

					arg_630_1:RecordHistoryTalkVoice("story_v_out_417161", "417161152", "story_v_out_417161.awb")
				end

				arg_630_1:RecordContent(arg_630_1.text_.text)
			end

			local var_633_10 = math.max(var_633_1, arg_630_1.talkMaxDuration)

			if var_633_0 <= arg_630_1.time_ and arg_630_1.time_ < var_633_0 + var_633_10 then
				arg_630_1.typewritter.percent = (arg_630_1.time_ - var_633_0) / var_633_10

				arg_630_1.typewritter:SetDirty()
			end

			if arg_630_1.time_ >= var_633_0 + var_633_10 and arg_630_1.time_ < var_633_0 + var_633_10 + arg_633_0 then
				arg_630_1.typewritter.percent = 1

				arg_630_1.typewritter:SetDirty()
				arg_630_1:ShowNextGo(true)
			end
		end
	end,
	Play417161153 = function(arg_634_0, arg_634_1)
		arg_634_1.time_ = 0
		arg_634_1.frameCnt_ = 0
		arg_634_1.state_ = "playing"
		arg_634_1.curTalkId_ = 417161153
		arg_634_1.duration_ = 8.13

		SetActive(arg_634_1.tipsGo_, false)

		function arg_634_1.onSingleLineFinish_()
			arg_634_1.onSingleLineUpdate_ = nil
			arg_634_1.onSingleLineFinish_ = nil
			arg_634_1.state_ = "waiting"
		end

		function arg_634_1.playNext_(arg_636_0)
			if arg_636_0 == 1 then
				arg_634_0:Play417161154(arg_634_1)
			end
		end

		function arg_634_1.onSingleLineUpdate_(arg_637_0)
			local var_637_0 = 0
			local var_637_1 = 0.925

			if var_637_0 < arg_634_1.time_ and arg_634_1.time_ <= var_637_0 + arg_637_0 then
				arg_634_1.talkMaxDuration = 0
				arg_634_1.dialogCg_.alpha = 1

				arg_634_1.dialog_:SetActive(true)
				SetActive(arg_634_1.leftNameGo_, true)

				local var_637_2 = arg_634_1:FormatText(StoryNameCfg[1125].name)

				arg_634_1.leftNameTxt_.text = var_637_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_634_1.leftNameTxt_.transform)

				arg_634_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_634_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_634_1:RecordName(arg_634_1.leftNameTxt_.text)
				SetActive(arg_634_1.iconTrs_.gameObject, false)
				arg_634_1.callingController_:SetSelectedState("normal")

				local var_637_3 = arg_634_1:GetWordFromCfg(417161153)
				local var_637_4 = arg_634_1:FormatText(var_637_3.content)

				arg_634_1.text_.text = var_637_4

				LuaForUtil.ClearLinePrefixSymbol(arg_634_1.text_)

				local var_637_5 = 37
				local var_637_6 = utf8.len(var_637_4)
				local var_637_7 = var_637_5 <= 0 and var_637_1 or var_637_1 * (var_637_6 / var_637_5)

				if var_637_7 > 0 and var_637_1 < var_637_7 then
					arg_634_1.talkMaxDuration = var_637_7

					if var_637_7 + var_637_0 > arg_634_1.duration_ then
						arg_634_1.duration_ = var_637_7 + var_637_0
					end
				end

				arg_634_1.text_.text = var_637_4
				arg_634_1.typewritter.percent = 0

				arg_634_1.typewritter:SetDirty()
				arg_634_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161153", "story_v_out_417161.awb") ~= 0 then
					local var_637_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161153", "story_v_out_417161.awb") / 1000

					if var_637_8 + var_637_0 > arg_634_1.duration_ then
						arg_634_1.duration_ = var_637_8 + var_637_0
					end

					if var_637_3.prefab_name ~= "" and arg_634_1.actors_[var_637_3.prefab_name] ~= nil then
						local var_637_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_634_1.actors_[var_637_3.prefab_name].transform, "story_v_out_417161", "417161153", "story_v_out_417161.awb")

						arg_634_1:RecordAudio("417161153", var_637_9)
						arg_634_1:RecordAudio("417161153", var_637_9)
					else
						arg_634_1:AudioAction("play", "voice", "story_v_out_417161", "417161153", "story_v_out_417161.awb")
					end

					arg_634_1:RecordHistoryTalkVoice("story_v_out_417161", "417161153", "story_v_out_417161.awb")
				end

				arg_634_1:RecordContent(arg_634_1.text_.text)
			end

			local var_637_10 = math.max(var_637_1, arg_634_1.talkMaxDuration)

			if var_637_0 <= arg_634_1.time_ and arg_634_1.time_ < var_637_0 + var_637_10 then
				arg_634_1.typewritter.percent = (arg_634_1.time_ - var_637_0) / var_637_10

				arg_634_1.typewritter:SetDirty()
			end

			if arg_634_1.time_ >= var_637_0 + var_637_10 and arg_634_1.time_ < var_637_0 + var_637_10 + arg_637_0 then
				arg_634_1.typewritter.percent = 1

				arg_634_1.typewritter:SetDirty()
				arg_634_1:ShowNextGo(true)
			end
		end
	end,
	Play417161154 = function(arg_638_0, arg_638_1)
		arg_638_1.time_ = 0
		arg_638_1.frameCnt_ = 0
		arg_638_1.state_ = "playing"
		arg_638_1.curTalkId_ = 417161154
		arg_638_1.duration_ = 8.87

		SetActive(arg_638_1.tipsGo_, false)

		function arg_638_1.onSingleLineFinish_()
			arg_638_1.onSingleLineUpdate_ = nil
			arg_638_1.onSingleLineFinish_ = nil
			arg_638_1.state_ = "waiting"
		end

		function arg_638_1.playNext_(arg_640_0)
			if arg_640_0 == 1 then
				arg_638_0:Play417161155(arg_638_1)
			end
		end

		function arg_638_1.onSingleLineUpdate_(arg_641_0)
			local var_641_0 = 0
			local var_641_1 = 1.05

			if var_641_0 < arg_638_1.time_ and arg_638_1.time_ <= var_641_0 + arg_641_0 then
				arg_638_1.talkMaxDuration = 0
				arg_638_1.dialogCg_.alpha = 1

				arg_638_1.dialog_:SetActive(true)
				SetActive(arg_638_1.leftNameGo_, true)

				local var_641_2 = arg_638_1:FormatText(StoryNameCfg[1125].name)

				arg_638_1.leftNameTxt_.text = var_641_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_638_1.leftNameTxt_.transform)

				arg_638_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_638_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_638_1:RecordName(arg_638_1.leftNameTxt_.text)
				SetActive(arg_638_1.iconTrs_.gameObject, false)
				arg_638_1.callingController_:SetSelectedState("normal")

				local var_641_3 = arg_638_1:GetWordFromCfg(417161154)
				local var_641_4 = arg_638_1:FormatText(var_641_3.content)

				arg_638_1.text_.text = var_641_4

				LuaForUtil.ClearLinePrefixSymbol(arg_638_1.text_)

				local var_641_5 = 42
				local var_641_6 = utf8.len(var_641_4)
				local var_641_7 = var_641_5 <= 0 and var_641_1 or var_641_1 * (var_641_6 / var_641_5)

				if var_641_7 > 0 and var_641_1 < var_641_7 then
					arg_638_1.talkMaxDuration = var_641_7

					if var_641_7 + var_641_0 > arg_638_1.duration_ then
						arg_638_1.duration_ = var_641_7 + var_641_0
					end
				end

				arg_638_1.text_.text = var_641_4
				arg_638_1.typewritter.percent = 0

				arg_638_1.typewritter:SetDirty()
				arg_638_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161154", "story_v_out_417161.awb") ~= 0 then
					local var_641_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161154", "story_v_out_417161.awb") / 1000

					if var_641_8 + var_641_0 > arg_638_1.duration_ then
						arg_638_1.duration_ = var_641_8 + var_641_0
					end

					if var_641_3.prefab_name ~= "" and arg_638_1.actors_[var_641_3.prefab_name] ~= nil then
						local var_641_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_638_1.actors_[var_641_3.prefab_name].transform, "story_v_out_417161", "417161154", "story_v_out_417161.awb")

						arg_638_1:RecordAudio("417161154", var_641_9)
						arg_638_1:RecordAudio("417161154", var_641_9)
					else
						arg_638_1:AudioAction("play", "voice", "story_v_out_417161", "417161154", "story_v_out_417161.awb")
					end

					arg_638_1:RecordHistoryTalkVoice("story_v_out_417161", "417161154", "story_v_out_417161.awb")
				end

				arg_638_1:RecordContent(arg_638_1.text_.text)
			end

			local var_641_10 = math.max(var_641_1, arg_638_1.talkMaxDuration)

			if var_641_0 <= arg_638_1.time_ and arg_638_1.time_ < var_641_0 + var_641_10 then
				arg_638_1.typewritter.percent = (arg_638_1.time_ - var_641_0) / var_641_10

				arg_638_1.typewritter:SetDirty()
			end

			if arg_638_1.time_ >= var_641_0 + var_641_10 and arg_638_1.time_ < var_641_0 + var_641_10 + arg_641_0 then
				arg_638_1.typewritter.percent = 1

				arg_638_1.typewritter:SetDirty()
				arg_638_1:ShowNextGo(true)
			end
		end
	end,
	Play417161155 = function(arg_642_0, arg_642_1)
		arg_642_1.time_ = 0
		arg_642_1.frameCnt_ = 0
		arg_642_1.state_ = "playing"
		arg_642_1.curTalkId_ = 417161155
		arg_642_1.duration_ = 5

		SetActive(arg_642_1.tipsGo_, false)

		function arg_642_1.onSingleLineFinish_()
			arg_642_1.onSingleLineUpdate_ = nil
			arg_642_1.onSingleLineFinish_ = nil
			arg_642_1.state_ = "waiting"
		end

		function arg_642_1.playNext_(arg_644_0)
			if arg_644_0 == 1 then
				arg_642_0:Play417161156(arg_642_1)
			end
		end

		function arg_642_1.onSingleLineUpdate_(arg_645_0)
			local var_645_0 = 0
			local var_645_1 = 0.875

			if var_645_0 < arg_642_1.time_ and arg_642_1.time_ <= var_645_0 + arg_645_0 then
				arg_642_1.talkMaxDuration = 0
				arg_642_1.dialogCg_.alpha = 1

				arg_642_1.dialog_:SetActive(true)
				SetActive(arg_642_1.leftNameGo_, false)

				arg_642_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_642_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_642_1:RecordName(arg_642_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_642_1.iconTrs_.gameObject, false)
				arg_642_1.callingController_:SetSelectedState("normal")

				local var_645_2 = arg_642_1:GetWordFromCfg(417161155)
				local var_645_3 = arg_642_1:FormatText(var_645_2.content)

				arg_642_1.text_.text = var_645_3

				LuaForUtil.ClearLinePrefixSymbol(arg_642_1.text_)

				local var_645_4 = 35
				local var_645_5 = utf8.len(var_645_3)
				local var_645_6 = var_645_4 <= 0 and var_645_1 or var_645_1 * (var_645_5 / var_645_4)

				if var_645_6 > 0 and var_645_1 < var_645_6 then
					arg_642_1.talkMaxDuration = var_645_6

					if var_645_6 + var_645_0 > arg_642_1.duration_ then
						arg_642_1.duration_ = var_645_6 + var_645_0
					end
				end

				arg_642_1.text_.text = var_645_3
				arg_642_1.typewritter.percent = 0

				arg_642_1.typewritter:SetDirty()
				arg_642_1:ShowNextGo(false)
				arg_642_1:RecordContent(arg_642_1.text_.text)
			end

			local var_645_7 = math.max(var_645_1, arg_642_1.talkMaxDuration)

			if var_645_0 <= arg_642_1.time_ and arg_642_1.time_ < var_645_0 + var_645_7 then
				arg_642_1.typewritter.percent = (arg_642_1.time_ - var_645_0) / var_645_7

				arg_642_1.typewritter:SetDirty()
			end

			if arg_642_1.time_ >= var_645_0 + var_645_7 and arg_642_1.time_ < var_645_0 + var_645_7 + arg_645_0 then
				arg_642_1.typewritter.percent = 1

				arg_642_1.typewritter:SetDirty()
				arg_642_1:ShowNextGo(true)
			end
		end
	end,
	Play417161156 = function(arg_646_0, arg_646_1)
		arg_646_1.time_ = 0
		arg_646_1.frameCnt_ = 0
		arg_646_1.state_ = "playing"
		arg_646_1.curTalkId_ = 417161156
		arg_646_1.duration_ = 4.43

		SetActive(arg_646_1.tipsGo_, false)

		function arg_646_1.onSingleLineFinish_()
			arg_646_1.onSingleLineUpdate_ = nil
			arg_646_1.onSingleLineFinish_ = nil
			arg_646_1.state_ = "waiting"
		end

		function arg_646_1.playNext_(arg_648_0)
			if arg_648_0 == 1 then
				arg_646_0:Play417161157(arg_646_1)
			end
		end

		function arg_646_1.onSingleLineUpdate_(arg_649_0)
			local var_649_0 = 0
			local var_649_1 = 0.625

			if var_649_0 < arg_646_1.time_ and arg_646_1.time_ <= var_649_0 + arg_649_0 then
				arg_646_1.talkMaxDuration = 0
				arg_646_1.dialogCg_.alpha = 1

				arg_646_1.dialog_:SetActive(true)
				SetActive(arg_646_1.leftNameGo_, true)

				local var_649_2 = arg_646_1:FormatText(StoryNameCfg[595].name)

				arg_646_1.leftNameTxt_.text = var_649_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_646_1.leftNameTxt_.transform)

				arg_646_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_646_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_646_1:RecordName(arg_646_1.leftNameTxt_.text)
				SetActive(arg_646_1.iconTrs_.gameObject, false)
				arg_646_1.callingController_:SetSelectedState("normal")

				local var_649_3 = arg_646_1:GetWordFromCfg(417161156)
				local var_649_4 = arg_646_1:FormatText(var_649_3.content)

				arg_646_1.text_.text = var_649_4

				LuaForUtil.ClearLinePrefixSymbol(arg_646_1.text_)

				local var_649_5 = 25
				local var_649_6 = utf8.len(var_649_4)
				local var_649_7 = var_649_5 <= 0 and var_649_1 or var_649_1 * (var_649_6 / var_649_5)

				if var_649_7 > 0 and var_649_1 < var_649_7 then
					arg_646_1.talkMaxDuration = var_649_7

					if var_649_7 + var_649_0 > arg_646_1.duration_ then
						arg_646_1.duration_ = var_649_7 + var_649_0
					end
				end

				arg_646_1.text_.text = var_649_4
				arg_646_1.typewritter.percent = 0

				arg_646_1.typewritter:SetDirty()
				arg_646_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161156", "story_v_out_417161.awb") ~= 0 then
					local var_649_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161156", "story_v_out_417161.awb") / 1000

					if var_649_8 + var_649_0 > arg_646_1.duration_ then
						arg_646_1.duration_ = var_649_8 + var_649_0
					end

					if var_649_3.prefab_name ~= "" and arg_646_1.actors_[var_649_3.prefab_name] ~= nil then
						local var_649_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_646_1.actors_[var_649_3.prefab_name].transform, "story_v_out_417161", "417161156", "story_v_out_417161.awb")

						arg_646_1:RecordAudio("417161156", var_649_9)
						arg_646_1:RecordAudio("417161156", var_649_9)
					else
						arg_646_1:AudioAction("play", "voice", "story_v_out_417161", "417161156", "story_v_out_417161.awb")
					end

					arg_646_1:RecordHistoryTalkVoice("story_v_out_417161", "417161156", "story_v_out_417161.awb")
				end

				arg_646_1:RecordContent(arg_646_1.text_.text)
			end

			local var_649_10 = math.max(var_649_1, arg_646_1.talkMaxDuration)

			if var_649_0 <= arg_646_1.time_ and arg_646_1.time_ < var_649_0 + var_649_10 then
				arg_646_1.typewritter.percent = (arg_646_1.time_ - var_649_0) / var_649_10

				arg_646_1.typewritter:SetDirty()
			end

			if arg_646_1.time_ >= var_649_0 + var_649_10 and arg_646_1.time_ < var_649_0 + var_649_10 + arg_649_0 then
				arg_646_1.typewritter.percent = 1

				arg_646_1.typewritter:SetDirty()
				arg_646_1:ShowNextGo(true)
			end
		end
	end,
	Play417161157 = function(arg_650_0, arg_650_1)
		arg_650_1.time_ = 0
		arg_650_1.frameCnt_ = 0
		arg_650_1.state_ = "playing"
		arg_650_1.curTalkId_ = 417161157
		arg_650_1.duration_ = 9.03

		SetActive(arg_650_1.tipsGo_, false)

		function arg_650_1.onSingleLineFinish_()
			arg_650_1.onSingleLineUpdate_ = nil
			arg_650_1.onSingleLineFinish_ = nil
			arg_650_1.state_ = "waiting"
		end

		function arg_650_1.playNext_(arg_652_0)
			if arg_652_0 == 1 then
				arg_650_0:Play417161158(arg_650_1)
			end
		end

		function arg_650_1.onSingleLineUpdate_(arg_653_0)
			local var_653_0 = 0
			local var_653_1 = 1.125

			if var_653_0 < arg_650_1.time_ and arg_650_1.time_ <= var_653_0 + arg_653_0 then
				arg_650_1.talkMaxDuration = 0
				arg_650_1.dialogCg_.alpha = 1

				arg_650_1.dialog_:SetActive(true)
				SetActive(arg_650_1.leftNameGo_, true)

				local var_653_2 = arg_650_1:FormatText(StoryNameCfg[595].name)

				arg_650_1.leftNameTxt_.text = var_653_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_650_1.leftNameTxt_.transform)

				arg_650_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_650_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_650_1:RecordName(arg_650_1.leftNameTxt_.text)
				SetActive(arg_650_1.iconTrs_.gameObject, false)
				arg_650_1.callingController_:SetSelectedState("normal")

				local var_653_3 = arg_650_1:GetWordFromCfg(417161157)
				local var_653_4 = arg_650_1:FormatText(var_653_3.content)

				arg_650_1.text_.text = var_653_4

				LuaForUtil.ClearLinePrefixSymbol(arg_650_1.text_)

				local var_653_5 = 45
				local var_653_6 = utf8.len(var_653_4)
				local var_653_7 = var_653_5 <= 0 and var_653_1 or var_653_1 * (var_653_6 / var_653_5)

				if var_653_7 > 0 and var_653_1 < var_653_7 then
					arg_650_1.talkMaxDuration = var_653_7

					if var_653_7 + var_653_0 > arg_650_1.duration_ then
						arg_650_1.duration_ = var_653_7 + var_653_0
					end
				end

				arg_650_1.text_.text = var_653_4
				arg_650_1.typewritter.percent = 0

				arg_650_1.typewritter:SetDirty()
				arg_650_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161157", "story_v_out_417161.awb") ~= 0 then
					local var_653_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161157", "story_v_out_417161.awb") / 1000

					if var_653_8 + var_653_0 > arg_650_1.duration_ then
						arg_650_1.duration_ = var_653_8 + var_653_0
					end

					if var_653_3.prefab_name ~= "" and arg_650_1.actors_[var_653_3.prefab_name] ~= nil then
						local var_653_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_650_1.actors_[var_653_3.prefab_name].transform, "story_v_out_417161", "417161157", "story_v_out_417161.awb")

						arg_650_1:RecordAudio("417161157", var_653_9)
						arg_650_1:RecordAudio("417161157", var_653_9)
					else
						arg_650_1:AudioAction("play", "voice", "story_v_out_417161", "417161157", "story_v_out_417161.awb")
					end

					arg_650_1:RecordHistoryTalkVoice("story_v_out_417161", "417161157", "story_v_out_417161.awb")
				end

				arg_650_1:RecordContent(arg_650_1.text_.text)
			end

			local var_653_10 = math.max(var_653_1, arg_650_1.talkMaxDuration)

			if var_653_0 <= arg_650_1.time_ and arg_650_1.time_ < var_653_0 + var_653_10 then
				arg_650_1.typewritter.percent = (arg_650_1.time_ - var_653_0) / var_653_10

				arg_650_1.typewritter:SetDirty()
			end

			if arg_650_1.time_ >= var_653_0 + var_653_10 and arg_650_1.time_ < var_653_0 + var_653_10 + arg_653_0 then
				arg_650_1.typewritter.percent = 1

				arg_650_1.typewritter:SetDirty()
				arg_650_1:ShowNextGo(true)
			end
		end
	end,
	Play417161158 = function(arg_654_0, arg_654_1)
		arg_654_1.time_ = 0
		arg_654_1.frameCnt_ = 0
		arg_654_1.state_ = "playing"
		arg_654_1.curTalkId_ = 417161158
		arg_654_1.duration_ = 1

		SetActive(arg_654_1.tipsGo_, false)

		function arg_654_1.onSingleLineFinish_()
			arg_654_1.onSingleLineUpdate_ = nil
			arg_654_1.onSingleLineFinish_ = nil
			arg_654_1.state_ = "waiting"
		end

		function arg_654_1.playNext_(arg_656_0)
			if arg_656_0 == 1 then
				arg_654_0:Play417161159(arg_654_1)
			end
		end

		function arg_654_1.onSingleLineUpdate_(arg_657_0)
			local var_657_0 = 0
			local var_657_1 = 0.05

			if var_657_0 < arg_654_1.time_ and arg_654_1.time_ <= var_657_0 + arg_657_0 then
				arg_654_1.talkMaxDuration = 0
				arg_654_1.dialogCg_.alpha = 1

				arg_654_1.dialog_:SetActive(true)
				SetActive(arg_654_1.leftNameGo_, true)

				local var_657_2 = arg_654_1:FormatText(StoryNameCfg[1125].name)

				arg_654_1.leftNameTxt_.text = var_657_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_654_1.leftNameTxt_.transform)

				arg_654_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_654_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_654_1:RecordName(arg_654_1.leftNameTxt_.text)
				SetActive(arg_654_1.iconTrs_.gameObject, false)
				arg_654_1.callingController_:SetSelectedState("normal")

				local var_657_3 = arg_654_1:GetWordFromCfg(417161158)
				local var_657_4 = arg_654_1:FormatText(var_657_3.content)

				arg_654_1.text_.text = var_657_4

				LuaForUtil.ClearLinePrefixSymbol(arg_654_1.text_)

				local var_657_5 = 2
				local var_657_6 = utf8.len(var_657_4)
				local var_657_7 = var_657_5 <= 0 and var_657_1 or var_657_1 * (var_657_6 / var_657_5)

				if var_657_7 > 0 and var_657_1 < var_657_7 then
					arg_654_1.talkMaxDuration = var_657_7

					if var_657_7 + var_657_0 > arg_654_1.duration_ then
						arg_654_1.duration_ = var_657_7 + var_657_0
					end
				end

				arg_654_1.text_.text = var_657_4
				arg_654_1.typewritter.percent = 0

				arg_654_1.typewritter:SetDirty()
				arg_654_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161158", "story_v_out_417161.awb") ~= 0 then
					local var_657_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161158", "story_v_out_417161.awb") / 1000

					if var_657_8 + var_657_0 > arg_654_1.duration_ then
						arg_654_1.duration_ = var_657_8 + var_657_0
					end

					if var_657_3.prefab_name ~= "" and arg_654_1.actors_[var_657_3.prefab_name] ~= nil then
						local var_657_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_654_1.actors_[var_657_3.prefab_name].transform, "story_v_out_417161", "417161158", "story_v_out_417161.awb")

						arg_654_1:RecordAudio("417161158", var_657_9)
						arg_654_1:RecordAudio("417161158", var_657_9)
					else
						arg_654_1:AudioAction("play", "voice", "story_v_out_417161", "417161158", "story_v_out_417161.awb")
					end

					arg_654_1:RecordHistoryTalkVoice("story_v_out_417161", "417161158", "story_v_out_417161.awb")
				end

				arg_654_1:RecordContent(arg_654_1.text_.text)
			end

			local var_657_10 = math.max(var_657_1, arg_654_1.talkMaxDuration)

			if var_657_0 <= arg_654_1.time_ and arg_654_1.time_ < var_657_0 + var_657_10 then
				arg_654_1.typewritter.percent = (arg_654_1.time_ - var_657_0) / var_657_10

				arg_654_1.typewritter:SetDirty()
			end

			if arg_654_1.time_ >= var_657_0 + var_657_10 and arg_654_1.time_ < var_657_0 + var_657_10 + arg_657_0 then
				arg_654_1.typewritter.percent = 1

				arg_654_1.typewritter:SetDirty()
				arg_654_1:ShowNextGo(true)
			end
		end
	end,
	Play417161159 = function(arg_658_0, arg_658_1)
		arg_658_1.time_ = 0
		arg_658_1.frameCnt_ = 0
		arg_658_1.state_ = "playing"
		arg_658_1.curTalkId_ = 417161159
		arg_658_1.duration_ = 5.33

		SetActive(arg_658_1.tipsGo_, false)

		function arg_658_1.onSingleLineFinish_()
			arg_658_1.onSingleLineUpdate_ = nil
			arg_658_1.onSingleLineFinish_ = nil
			arg_658_1.state_ = "waiting"
		end

		function arg_658_1.playNext_(arg_660_0)
			if arg_660_0 == 1 then
				arg_658_0:Play417161160(arg_658_1)
			end
		end

		function arg_658_1.onSingleLineUpdate_(arg_661_0)
			local var_661_0 = 0
			local var_661_1 = 0.625

			if var_661_0 < arg_658_1.time_ and arg_658_1.time_ <= var_661_0 + arg_661_0 then
				arg_658_1.talkMaxDuration = 0
				arg_658_1.dialogCg_.alpha = 1

				arg_658_1.dialog_:SetActive(true)
				SetActive(arg_658_1.leftNameGo_, true)

				local var_661_2 = arg_658_1:FormatText(StoryNameCfg[595].name)

				arg_658_1.leftNameTxt_.text = var_661_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_658_1.leftNameTxt_.transform)

				arg_658_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_658_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_658_1:RecordName(arg_658_1.leftNameTxt_.text)
				SetActive(arg_658_1.iconTrs_.gameObject, false)
				arg_658_1.callingController_:SetSelectedState("normal")

				local var_661_3 = arg_658_1:GetWordFromCfg(417161159)
				local var_661_4 = arg_658_1:FormatText(var_661_3.content)

				arg_658_1.text_.text = var_661_4

				LuaForUtil.ClearLinePrefixSymbol(arg_658_1.text_)

				local var_661_5 = 25
				local var_661_6 = utf8.len(var_661_4)
				local var_661_7 = var_661_5 <= 0 and var_661_1 or var_661_1 * (var_661_6 / var_661_5)

				if var_661_7 > 0 and var_661_1 < var_661_7 then
					arg_658_1.talkMaxDuration = var_661_7

					if var_661_7 + var_661_0 > arg_658_1.duration_ then
						arg_658_1.duration_ = var_661_7 + var_661_0
					end
				end

				arg_658_1.text_.text = var_661_4
				arg_658_1.typewritter.percent = 0

				arg_658_1.typewritter:SetDirty()
				arg_658_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161159", "story_v_out_417161.awb") ~= 0 then
					local var_661_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161159", "story_v_out_417161.awb") / 1000

					if var_661_8 + var_661_0 > arg_658_1.duration_ then
						arg_658_1.duration_ = var_661_8 + var_661_0
					end

					if var_661_3.prefab_name ~= "" and arg_658_1.actors_[var_661_3.prefab_name] ~= nil then
						local var_661_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_658_1.actors_[var_661_3.prefab_name].transform, "story_v_out_417161", "417161159", "story_v_out_417161.awb")

						arg_658_1:RecordAudio("417161159", var_661_9)
						arg_658_1:RecordAudio("417161159", var_661_9)
					else
						arg_658_1:AudioAction("play", "voice", "story_v_out_417161", "417161159", "story_v_out_417161.awb")
					end

					arg_658_1:RecordHistoryTalkVoice("story_v_out_417161", "417161159", "story_v_out_417161.awb")
				end

				arg_658_1:RecordContent(arg_658_1.text_.text)
			end

			local var_661_10 = math.max(var_661_1, arg_658_1.talkMaxDuration)

			if var_661_0 <= arg_658_1.time_ and arg_658_1.time_ < var_661_0 + var_661_10 then
				arg_658_1.typewritter.percent = (arg_658_1.time_ - var_661_0) / var_661_10

				arg_658_1.typewritter:SetDirty()
			end

			if arg_658_1.time_ >= var_661_0 + var_661_10 and arg_658_1.time_ < var_661_0 + var_661_10 + arg_661_0 then
				arg_658_1.typewritter.percent = 1

				arg_658_1.typewritter:SetDirty()
				arg_658_1:ShowNextGo(true)
			end
		end
	end,
	Play417161160 = function(arg_662_0, arg_662_1)
		arg_662_1.time_ = 0
		arg_662_1.frameCnt_ = 0
		arg_662_1.state_ = "playing"
		arg_662_1.curTalkId_ = 417161160
		arg_662_1.duration_ = 1.8

		SetActive(arg_662_1.tipsGo_, false)

		function arg_662_1.onSingleLineFinish_()
			arg_662_1.onSingleLineUpdate_ = nil
			arg_662_1.onSingleLineFinish_ = nil
			arg_662_1.state_ = "waiting"
		end

		function arg_662_1.playNext_(arg_664_0)
			if arg_664_0 == 1 then
				arg_662_0:Play417161161(arg_662_1)
			end
		end

		function arg_662_1.onSingleLineUpdate_(arg_665_0)
			local var_665_0 = 0
			local var_665_1 = 0.125

			if var_665_0 < arg_662_1.time_ and arg_662_1.time_ <= var_665_0 + arg_665_0 then
				arg_662_1.talkMaxDuration = 0
				arg_662_1.dialogCg_.alpha = 1

				arg_662_1.dialog_:SetActive(true)
				SetActive(arg_662_1.leftNameGo_, true)

				local var_665_2 = arg_662_1:FormatText(StoryNameCfg[1125].name)

				arg_662_1.leftNameTxt_.text = var_665_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_662_1.leftNameTxt_.transform)

				arg_662_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_662_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_662_1:RecordName(arg_662_1.leftNameTxt_.text)
				SetActive(arg_662_1.iconTrs_.gameObject, false)
				arg_662_1.callingController_:SetSelectedState("normal")

				local var_665_3 = arg_662_1:GetWordFromCfg(417161160)
				local var_665_4 = arg_662_1:FormatText(var_665_3.content)

				arg_662_1.text_.text = var_665_4

				LuaForUtil.ClearLinePrefixSymbol(arg_662_1.text_)

				local var_665_5 = 5
				local var_665_6 = utf8.len(var_665_4)
				local var_665_7 = var_665_5 <= 0 and var_665_1 or var_665_1 * (var_665_6 / var_665_5)

				if var_665_7 > 0 and var_665_1 < var_665_7 then
					arg_662_1.talkMaxDuration = var_665_7

					if var_665_7 + var_665_0 > arg_662_1.duration_ then
						arg_662_1.duration_ = var_665_7 + var_665_0
					end
				end

				arg_662_1.text_.text = var_665_4
				arg_662_1.typewritter.percent = 0

				arg_662_1.typewritter:SetDirty()
				arg_662_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161160", "story_v_out_417161.awb") ~= 0 then
					local var_665_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161160", "story_v_out_417161.awb") / 1000

					if var_665_8 + var_665_0 > arg_662_1.duration_ then
						arg_662_1.duration_ = var_665_8 + var_665_0
					end

					if var_665_3.prefab_name ~= "" and arg_662_1.actors_[var_665_3.prefab_name] ~= nil then
						local var_665_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_662_1.actors_[var_665_3.prefab_name].transform, "story_v_out_417161", "417161160", "story_v_out_417161.awb")

						arg_662_1:RecordAudio("417161160", var_665_9)
						arg_662_1:RecordAudio("417161160", var_665_9)
					else
						arg_662_1:AudioAction("play", "voice", "story_v_out_417161", "417161160", "story_v_out_417161.awb")
					end

					arg_662_1:RecordHistoryTalkVoice("story_v_out_417161", "417161160", "story_v_out_417161.awb")
				end

				arg_662_1:RecordContent(arg_662_1.text_.text)
			end

			local var_665_10 = math.max(var_665_1, arg_662_1.talkMaxDuration)

			if var_665_0 <= arg_662_1.time_ and arg_662_1.time_ < var_665_0 + var_665_10 then
				arg_662_1.typewritter.percent = (arg_662_1.time_ - var_665_0) / var_665_10

				arg_662_1.typewritter:SetDirty()
			end

			if arg_662_1.time_ >= var_665_0 + var_665_10 and arg_662_1.time_ < var_665_0 + var_665_10 + arg_665_0 then
				arg_662_1.typewritter.percent = 1

				arg_662_1.typewritter:SetDirty()
				arg_662_1:ShowNextGo(true)
			end
		end
	end,
	Play417161161 = function(arg_666_0, arg_666_1)
		arg_666_1.time_ = 0
		arg_666_1.frameCnt_ = 0
		arg_666_1.state_ = "playing"
		arg_666_1.curTalkId_ = 417161161
		arg_666_1.duration_ = 4.57

		SetActive(arg_666_1.tipsGo_, false)

		function arg_666_1.onSingleLineFinish_()
			arg_666_1.onSingleLineUpdate_ = nil
			arg_666_1.onSingleLineFinish_ = nil
			arg_666_1.state_ = "waiting"
		end

		function arg_666_1.playNext_(arg_668_0)
			if arg_668_0 == 1 then
				arg_666_0:Play417161162(arg_666_1)
			end
		end

		function arg_666_1.onSingleLineUpdate_(arg_669_0)
			local var_669_0 = 0
			local var_669_1 = 0.475

			if var_669_0 < arg_666_1.time_ and arg_666_1.time_ <= var_669_0 + arg_669_0 then
				arg_666_1.talkMaxDuration = 0
				arg_666_1.dialogCg_.alpha = 1

				arg_666_1.dialog_:SetActive(true)
				SetActive(arg_666_1.leftNameGo_, true)

				local var_669_2 = arg_666_1:FormatText(StoryNameCfg[595].name)

				arg_666_1.leftNameTxt_.text = var_669_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_666_1.leftNameTxt_.transform)

				arg_666_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_666_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_666_1:RecordName(arg_666_1.leftNameTxt_.text)
				SetActive(arg_666_1.iconTrs_.gameObject, false)
				arg_666_1.callingController_:SetSelectedState("normal")

				local var_669_3 = arg_666_1:GetWordFromCfg(417161161)
				local var_669_4 = arg_666_1:FormatText(var_669_3.content)

				arg_666_1.text_.text = var_669_4

				LuaForUtil.ClearLinePrefixSymbol(arg_666_1.text_)

				local var_669_5 = 19
				local var_669_6 = utf8.len(var_669_4)
				local var_669_7 = var_669_5 <= 0 and var_669_1 or var_669_1 * (var_669_6 / var_669_5)

				if var_669_7 > 0 and var_669_1 < var_669_7 then
					arg_666_1.talkMaxDuration = var_669_7

					if var_669_7 + var_669_0 > arg_666_1.duration_ then
						arg_666_1.duration_ = var_669_7 + var_669_0
					end
				end

				arg_666_1.text_.text = var_669_4
				arg_666_1.typewritter.percent = 0

				arg_666_1.typewritter:SetDirty()
				arg_666_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161161", "story_v_out_417161.awb") ~= 0 then
					local var_669_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161161", "story_v_out_417161.awb") / 1000

					if var_669_8 + var_669_0 > arg_666_1.duration_ then
						arg_666_1.duration_ = var_669_8 + var_669_0
					end

					if var_669_3.prefab_name ~= "" and arg_666_1.actors_[var_669_3.prefab_name] ~= nil then
						local var_669_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_666_1.actors_[var_669_3.prefab_name].transform, "story_v_out_417161", "417161161", "story_v_out_417161.awb")

						arg_666_1:RecordAudio("417161161", var_669_9)
						arg_666_1:RecordAudio("417161161", var_669_9)
					else
						arg_666_1:AudioAction("play", "voice", "story_v_out_417161", "417161161", "story_v_out_417161.awb")
					end

					arg_666_1:RecordHistoryTalkVoice("story_v_out_417161", "417161161", "story_v_out_417161.awb")
				end

				arg_666_1:RecordContent(arg_666_1.text_.text)
			end

			local var_669_10 = math.max(var_669_1, arg_666_1.talkMaxDuration)

			if var_669_0 <= arg_666_1.time_ and arg_666_1.time_ < var_669_0 + var_669_10 then
				arg_666_1.typewritter.percent = (arg_666_1.time_ - var_669_0) / var_669_10

				arg_666_1.typewritter:SetDirty()
			end

			if arg_666_1.time_ >= var_669_0 + var_669_10 and arg_666_1.time_ < var_669_0 + var_669_10 + arg_669_0 then
				arg_666_1.typewritter.percent = 1

				arg_666_1.typewritter:SetDirty()
				arg_666_1:ShowNextGo(true)
			end
		end
	end,
	Play417161162 = function(arg_670_0, arg_670_1)
		arg_670_1.time_ = 0
		arg_670_1.frameCnt_ = 0
		arg_670_1.state_ = "playing"
		arg_670_1.curTalkId_ = 417161162
		arg_670_1.duration_ = 5

		SetActive(arg_670_1.tipsGo_, false)

		function arg_670_1.onSingleLineFinish_()
			arg_670_1.onSingleLineUpdate_ = nil
			arg_670_1.onSingleLineFinish_ = nil
			arg_670_1.state_ = "waiting"
		end

		function arg_670_1.playNext_(arg_672_0)
			if arg_672_0 == 1 then
				arg_670_0:Play417161163(arg_670_1)
			end
		end

		function arg_670_1.onSingleLineUpdate_(arg_673_0)
			local var_673_0 = 0
			local var_673_1 = 1.525

			if var_673_0 < arg_670_1.time_ and arg_670_1.time_ <= var_673_0 + arg_673_0 then
				arg_670_1.talkMaxDuration = 0
				arg_670_1.dialogCg_.alpha = 1

				arg_670_1.dialog_:SetActive(true)
				SetActive(arg_670_1.leftNameGo_, false)

				arg_670_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_670_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_670_1:RecordName(arg_670_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_670_1.iconTrs_.gameObject, false)
				arg_670_1.callingController_:SetSelectedState("normal")

				local var_673_2 = arg_670_1:GetWordFromCfg(417161162)
				local var_673_3 = arg_670_1:FormatText(var_673_2.content)

				arg_670_1.text_.text = var_673_3

				LuaForUtil.ClearLinePrefixSymbol(arg_670_1.text_)

				local var_673_4 = 61
				local var_673_5 = utf8.len(var_673_3)
				local var_673_6 = var_673_4 <= 0 and var_673_1 or var_673_1 * (var_673_5 / var_673_4)

				if var_673_6 > 0 and var_673_1 < var_673_6 then
					arg_670_1.talkMaxDuration = var_673_6

					if var_673_6 + var_673_0 > arg_670_1.duration_ then
						arg_670_1.duration_ = var_673_6 + var_673_0
					end
				end

				arg_670_1.text_.text = var_673_3
				arg_670_1.typewritter.percent = 0

				arg_670_1.typewritter:SetDirty()
				arg_670_1:ShowNextGo(false)
				arg_670_1:RecordContent(arg_670_1.text_.text)
			end

			local var_673_7 = math.max(var_673_1, arg_670_1.talkMaxDuration)

			if var_673_0 <= arg_670_1.time_ and arg_670_1.time_ < var_673_0 + var_673_7 then
				arg_670_1.typewritter.percent = (arg_670_1.time_ - var_673_0) / var_673_7

				arg_670_1.typewritter:SetDirty()
			end

			if arg_670_1.time_ >= var_673_0 + var_673_7 and arg_670_1.time_ < var_673_0 + var_673_7 + arg_673_0 then
				arg_670_1.typewritter.percent = 1

				arg_670_1.typewritter:SetDirty()
				arg_670_1:ShowNextGo(true)
			end
		end
	end,
	Play417161163 = function(arg_674_0, arg_674_1)
		arg_674_1.time_ = 0
		arg_674_1.frameCnt_ = 0
		arg_674_1.state_ = "playing"
		arg_674_1.curTalkId_ = 417161163
		arg_674_1.duration_ = 5

		SetActive(arg_674_1.tipsGo_, false)

		function arg_674_1.onSingleLineFinish_()
			arg_674_1.onSingleLineUpdate_ = nil
			arg_674_1.onSingleLineFinish_ = nil
			arg_674_1.state_ = "waiting"
		end

		function arg_674_1.playNext_(arg_676_0)
			if arg_676_0 == 1 then
				arg_674_0:Play417161164(arg_674_1)
			end
		end

		function arg_674_1.onSingleLineUpdate_(arg_677_0)
			local var_677_0 = 0
			local var_677_1 = 1.05

			if var_677_0 < arg_674_1.time_ and arg_674_1.time_ <= var_677_0 + arg_677_0 then
				arg_674_1.talkMaxDuration = 0
				arg_674_1.dialogCg_.alpha = 1

				arg_674_1.dialog_:SetActive(true)
				SetActive(arg_674_1.leftNameGo_, false)

				arg_674_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_674_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_674_1:RecordName(arg_674_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_674_1.iconTrs_.gameObject, false)
				arg_674_1.callingController_:SetSelectedState("normal")

				local var_677_2 = arg_674_1:GetWordFromCfg(417161163)
				local var_677_3 = arg_674_1:FormatText(var_677_2.content)

				arg_674_1.text_.text = var_677_3

				LuaForUtil.ClearLinePrefixSymbol(arg_674_1.text_)

				local var_677_4 = 42
				local var_677_5 = utf8.len(var_677_3)
				local var_677_6 = var_677_4 <= 0 and var_677_1 or var_677_1 * (var_677_5 / var_677_4)

				if var_677_6 > 0 and var_677_1 < var_677_6 then
					arg_674_1.talkMaxDuration = var_677_6

					if var_677_6 + var_677_0 > arg_674_1.duration_ then
						arg_674_1.duration_ = var_677_6 + var_677_0
					end
				end

				arg_674_1.text_.text = var_677_3
				arg_674_1.typewritter.percent = 0

				arg_674_1.typewritter:SetDirty()
				arg_674_1:ShowNextGo(false)
				arg_674_1:RecordContent(arg_674_1.text_.text)
			end

			local var_677_7 = math.max(var_677_1, arg_674_1.talkMaxDuration)

			if var_677_0 <= arg_674_1.time_ and arg_674_1.time_ < var_677_0 + var_677_7 then
				arg_674_1.typewritter.percent = (arg_674_1.time_ - var_677_0) / var_677_7

				arg_674_1.typewritter:SetDirty()
			end

			if arg_674_1.time_ >= var_677_0 + var_677_7 and arg_674_1.time_ < var_677_0 + var_677_7 + arg_677_0 then
				arg_674_1.typewritter.percent = 1

				arg_674_1.typewritter:SetDirty()
				arg_674_1:ShowNextGo(true)
			end
		end
	end,
	Play417161164 = function(arg_678_0, arg_678_1)
		arg_678_1.time_ = 0
		arg_678_1.frameCnt_ = 0
		arg_678_1.state_ = "playing"
		arg_678_1.curTalkId_ = 417161164
		arg_678_1.duration_ = 3.63

		SetActive(arg_678_1.tipsGo_, false)

		function arg_678_1.onSingleLineFinish_()
			arg_678_1.onSingleLineUpdate_ = nil
			arg_678_1.onSingleLineFinish_ = nil
			arg_678_1.state_ = "waiting"
		end

		function arg_678_1.playNext_(arg_680_0)
			if arg_680_0 == 1 then
				arg_678_0:Play417161165(arg_678_1)
			end
		end

		function arg_678_1.onSingleLineUpdate_(arg_681_0)
			local var_681_0 = 0
			local var_681_1 = 0.325

			if var_681_0 < arg_678_1.time_ and arg_678_1.time_ <= var_681_0 + arg_681_0 then
				arg_678_1.talkMaxDuration = 0
				arg_678_1.dialogCg_.alpha = 1

				arg_678_1.dialog_:SetActive(true)
				SetActive(arg_678_1.leftNameGo_, true)

				local var_681_2 = arg_678_1:FormatText(StoryNameCfg[1125].name)

				arg_678_1.leftNameTxt_.text = var_681_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_678_1.leftNameTxt_.transform)

				arg_678_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_678_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_678_1:RecordName(arg_678_1.leftNameTxt_.text)
				SetActive(arg_678_1.iconTrs_.gameObject, false)
				arg_678_1.callingController_:SetSelectedState("normal")

				local var_681_3 = arg_678_1:GetWordFromCfg(417161164)
				local var_681_4 = arg_678_1:FormatText(var_681_3.content)

				arg_678_1.text_.text = var_681_4

				LuaForUtil.ClearLinePrefixSymbol(arg_678_1.text_)

				local var_681_5 = 13
				local var_681_6 = utf8.len(var_681_4)
				local var_681_7 = var_681_5 <= 0 and var_681_1 or var_681_1 * (var_681_6 / var_681_5)

				if var_681_7 > 0 and var_681_1 < var_681_7 then
					arg_678_1.talkMaxDuration = var_681_7

					if var_681_7 + var_681_0 > arg_678_1.duration_ then
						arg_678_1.duration_ = var_681_7 + var_681_0
					end
				end

				arg_678_1.text_.text = var_681_4
				arg_678_1.typewritter.percent = 0

				arg_678_1.typewritter:SetDirty()
				arg_678_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161164", "story_v_out_417161.awb") ~= 0 then
					local var_681_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161164", "story_v_out_417161.awb") / 1000

					if var_681_8 + var_681_0 > arg_678_1.duration_ then
						arg_678_1.duration_ = var_681_8 + var_681_0
					end

					if var_681_3.prefab_name ~= "" and arg_678_1.actors_[var_681_3.prefab_name] ~= nil then
						local var_681_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_678_1.actors_[var_681_3.prefab_name].transform, "story_v_out_417161", "417161164", "story_v_out_417161.awb")

						arg_678_1:RecordAudio("417161164", var_681_9)
						arg_678_1:RecordAudio("417161164", var_681_9)
					else
						arg_678_1:AudioAction("play", "voice", "story_v_out_417161", "417161164", "story_v_out_417161.awb")
					end

					arg_678_1:RecordHistoryTalkVoice("story_v_out_417161", "417161164", "story_v_out_417161.awb")
				end

				arg_678_1:RecordContent(arg_678_1.text_.text)
			end

			local var_681_10 = math.max(var_681_1, arg_678_1.talkMaxDuration)

			if var_681_0 <= arg_678_1.time_ and arg_678_1.time_ < var_681_0 + var_681_10 then
				arg_678_1.typewritter.percent = (arg_678_1.time_ - var_681_0) / var_681_10

				arg_678_1.typewritter:SetDirty()
			end

			if arg_678_1.time_ >= var_681_0 + var_681_10 and arg_678_1.time_ < var_681_0 + var_681_10 + arg_681_0 then
				arg_678_1.typewritter.percent = 1

				arg_678_1.typewritter:SetDirty()
				arg_678_1:ShowNextGo(true)
			end
		end
	end,
	Play417161165 = function(arg_682_0, arg_682_1)
		arg_682_1.time_ = 0
		arg_682_1.frameCnt_ = 0
		arg_682_1.state_ = "playing"
		arg_682_1.curTalkId_ = 417161165
		arg_682_1.duration_ = 6.3

		SetActive(arg_682_1.tipsGo_, false)

		function arg_682_1.onSingleLineFinish_()
			arg_682_1.onSingleLineUpdate_ = nil
			arg_682_1.onSingleLineFinish_ = nil
			arg_682_1.state_ = "waiting"
		end

		function arg_682_1.playNext_(arg_684_0)
			if arg_684_0 == 1 then
				arg_682_0:Play417161166(arg_682_1)
			end
		end

		function arg_682_1.onSingleLineUpdate_(arg_685_0)
			local var_685_0 = 0
			local var_685_1 = 0.725

			if var_685_0 < arg_682_1.time_ and arg_682_1.time_ <= var_685_0 + arg_685_0 then
				arg_682_1.talkMaxDuration = 0
				arg_682_1.dialogCg_.alpha = 1

				arg_682_1.dialog_:SetActive(true)
				SetActive(arg_682_1.leftNameGo_, true)

				local var_685_2 = arg_682_1:FormatText(StoryNameCfg[595].name)

				arg_682_1.leftNameTxt_.text = var_685_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_682_1.leftNameTxt_.transform)

				arg_682_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_682_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_682_1:RecordName(arg_682_1.leftNameTxt_.text)
				SetActive(arg_682_1.iconTrs_.gameObject, false)
				arg_682_1.callingController_:SetSelectedState("normal")

				local var_685_3 = arg_682_1:GetWordFromCfg(417161165)
				local var_685_4 = arg_682_1:FormatText(var_685_3.content)

				arg_682_1.text_.text = var_685_4

				LuaForUtil.ClearLinePrefixSymbol(arg_682_1.text_)

				local var_685_5 = 29
				local var_685_6 = utf8.len(var_685_4)
				local var_685_7 = var_685_5 <= 0 and var_685_1 or var_685_1 * (var_685_6 / var_685_5)

				if var_685_7 > 0 and var_685_1 < var_685_7 then
					arg_682_1.talkMaxDuration = var_685_7

					if var_685_7 + var_685_0 > arg_682_1.duration_ then
						arg_682_1.duration_ = var_685_7 + var_685_0
					end
				end

				arg_682_1.text_.text = var_685_4
				arg_682_1.typewritter.percent = 0

				arg_682_1.typewritter:SetDirty()
				arg_682_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161165", "story_v_out_417161.awb") ~= 0 then
					local var_685_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161165", "story_v_out_417161.awb") / 1000

					if var_685_8 + var_685_0 > arg_682_1.duration_ then
						arg_682_1.duration_ = var_685_8 + var_685_0
					end

					if var_685_3.prefab_name ~= "" and arg_682_1.actors_[var_685_3.prefab_name] ~= nil then
						local var_685_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_682_1.actors_[var_685_3.prefab_name].transform, "story_v_out_417161", "417161165", "story_v_out_417161.awb")

						arg_682_1:RecordAudio("417161165", var_685_9)
						arg_682_1:RecordAudio("417161165", var_685_9)
					else
						arg_682_1:AudioAction("play", "voice", "story_v_out_417161", "417161165", "story_v_out_417161.awb")
					end

					arg_682_1:RecordHistoryTalkVoice("story_v_out_417161", "417161165", "story_v_out_417161.awb")
				end

				arg_682_1:RecordContent(arg_682_1.text_.text)
			end

			local var_685_10 = math.max(var_685_1, arg_682_1.talkMaxDuration)

			if var_685_0 <= arg_682_1.time_ and arg_682_1.time_ < var_685_0 + var_685_10 then
				arg_682_1.typewritter.percent = (arg_682_1.time_ - var_685_0) / var_685_10

				arg_682_1.typewritter:SetDirty()
			end

			if arg_682_1.time_ >= var_685_0 + var_685_10 and arg_682_1.time_ < var_685_0 + var_685_10 + arg_685_0 then
				arg_682_1.typewritter.percent = 1

				arg_682_1.typewritter:SetDirty()
				arg_682_1:ShowNextGo(true)
			end
		end
	end,
	Play417161166 = function(arg_686_0, arg_686_1)
		arg_686_1.time_ = 0
		arg_686_1.frameCnt_ = 0
		arg_686_1.state_ = "playing"
		arg_686_1.curTalkId_ = 417161166
		arg_686_1.duration_ = 6.37

		SetActive(arg_686_1.tipsGo_, false)

		function arg_686_1.onSingleLineFinish_()
			arg_686_1.onSingleLineUpdate_ = nil
			arg_686_1.onSingleLineFinish_ = nil
			arg_686_1.state_ = "waiting"
		end

		function arg_686_1.playNext_(arg_688_0)
			if arg_688_0 == 1 then
				arg_686_0:Play417161167(arg_686_1)
			end
		end

		function arg_686_1.onSingleLineUpdate_(arg_689_0)
			local var_689_0 = 0
			local var_689_1 = 0.85

			if var_689_0 < arg_686_1.time_ and arg_686_1.time_ <= var_689_0 + arg_689_0 then
				arg_686_1.talkMaxDuration = 0
				arg_686_1.dialogCg_.alpha = 1

				arg_686_1.dialog_:SetActive(true)
				SetActive(arg_686_1.leftNameGo_, true)

				local var_689_2 = arg_686_1:FormatText(StoryNameCfg[595].name)

				arg_686_1.leftNameTxt_.text = var_689_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_686_1.leftNameTxt_.transform)

				arg_686_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_686_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_686_1:RecordName(arg_686_1.leftNameTxt_.text)
				SetActive(arg_686_1.iconTrs_.gameObject, false)
				arg_686_1.callingController_:SetSelectedState("normal")

				local var_689_3 = arg_686_1:GetWordFromCfg(417161166)
				local var_689_4 = arg_686_1:FormatText(var_689_3.content)

				arg_686_1.text_.text = var_689_4

				LuaForUtil.ClearLinePrefixSymbol(arg_686_1.text_)

				local var_689_5 = 34
				local var_689_6 = utf8.len(var_689_4)
				local var_689_7 = var_689_5 <= 0 and var_689_1 or var_689_1 * (var_689_6 / var_689_5)

				if var_689_7 > 0 and var_689_1 < var_689_7 then
					arg_686_1.talkMaxDuration = var_689_7

					if var_689_7 + var_689_0 > arg_686_1.duration_ then
						arg_686_1.duration_ = var_689_7 + var_689_0
					end
				end

				arg_686_1.text_.text = var_689_4
				arg_686_1.typewritter.percent = 0

				arg_686_1.typewritter:SetDirty()
				arg_686_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161166", "story_v_out_417161.awb") ~= 0 then
					local var_689_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161166", "story_v_out_417161.awb") / 1000

					if var_689_8 + var_689_0 > arg_686_1.duration_ then
						arg_686_1.duration_ = var_689_8 + var_689_0
					end

					if var_689_3.prefab_name ~= "" and arg_686_1.actors_[var_689_3.prefab_name] ~= nil then
						local var_689_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_686_1.actors_[var_689_3.prefab_name].transform, "story_v_out_417161", "417161166", "story_v_out_417161.awb")

						arg_686_1:RecordAudio("417161166", var_689_9)
						arg_686_1:RecordAudio("417161166", var_689_9)
					else
						arg_686_1:AudioAction("play", "voice", "story_v_out_417161", "417161166", "story_v_out_417161.awb")
					end

					arg_686_1:RecordHistoryTalkVoice("story_v_out_417161", "417161166", "story_v_out_417161.awb")
				end

				arg_686_1:RecordContent(arg_686_1.text_.text)
			end

			local var_689_10 = math.max(var_689_1, arg_686_1.talkMaxDuration)

			if var_689_0 <= arg_686_1.time_ and arg_686_1.time_ < var_689_0 + var_689_10 then
				arg_686_1.typewritter.percent = (arg_686_1.time_ - var_689_0) / var_689_10

				arg_686_1.typewritter:SetDirty()
			end

			if arg_686_1.time_ >= var_689_0 + var_689_10 and arg_686_1.time_ < var_689_0 + var_689_10 + arg_689_0 then
				arg_686_1.typewritter.percent = 1

				arg_686_1.typewritter:SetDirty()
				arg_686_1:ShowNextGo(true)
			end
		end
	end,
	Play417161167 = function(arg_690_0, arg_690_1)
		arg_690_1.time_ = 0
		arg_690_1.frameCnt_ = 0
		arg_690_1.state_ = "playing"
		arg_690_1.curTalkId_ = 417161167
		arg_690_1.duration_ = 2.07

		SetActive(arg_690_1.tipsGo_, false)

		function arg_690_1.onSingleLineFinish_()
			arg_690_1.onSingleLineUpdate_ = nil
			arg_690_1.onSingleLineFinish_ = nil
			arg_690_1.state_ = "waiting"
		end

		function arg_690_1.playNext_(arg_692_0)
			if arg_692_0 == 1 then
				arg_690_0:Play417161168(arg_690_1)
			end
		end

		function arg_690_1.onSingleLineUpdate_(arg_693_0)
			local var_693_0 = 0
			local var_693_1 = 0.2

			if var_693_0 < arg_690_1.time_ and arg_690_1.time_ <= var_693_0 + arg_693_0 then
				arg_690_1.talkMaxDuration = 0
				arg_690_1.dialogCg_.alpha = 1

				arg_690_1.dialog_:SetActive(true)
				SetActive(arg_690_1.leftNameGo_, true)

				local var_693_2 = arg_690_1:FormatText(StoryNameCfg[1125].name)

				arg_690_1.leftNameTxt_.text = var_693_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_690_1.leftNameTxt_.transform)

				arg_690_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_690_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_690_1:RecordName(arg_690_1.leftNameTxt_.text)
				SetActive(arg_690_1.iconTrs_.gameObject, false)
				arg_690_1.callingController_:SetSelectedState("normal")

				local var_693_3 = arg_690_1:GetWordFromCfg(417161167)
				local var_693_4 = arg_690_1:FormatText(var_693_3.content)

				arg_690_1.text_.text = var_693_4

				LuaForUtil.ClearLinePrefixSymbol(arg_690_1.text_)

				local var_693_5 = 8
				local var_693_6 = utf8.len(var_693_4)
				local var_693_7 = var_693_5 <= 0 and var_693_1 or var_693_1 * (var_693_6 / var_693_5)

				if var_693_7 > 0 and var_693_1 < var_693_7 then
					arg_690_1.talkMaxDuration = var_693_7

					if var_693_7 + var_693_0 > arg_690_1.duration_ then
						arg_690_1.duration_ = var_693_7 + var_693_0
					end
				end

				arg_690_1.text_.text = var_693_4
				arg_690_1.typewritter.percent = 0

				arg_690_1.typewritter:SetDirty()
				arg_690_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161167", "story_v_out_417161.awb") ~= 0 then
					local var_693_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161167", "story_v_out_417161.awb") / 1000

					if var_693_8 + var_693_0 > arg_690_1.duration_ then
						arg_690_1.duration_ = var_693_8 + var_693_0
					end

					if var_693_3.prefab_name ~= "" and arg_690_1.actors_[var_693_3.prefab_name] ~= nil then
						local var_693_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_690_1.actors_[var_693_3.prefab_name].transform, "story_v_out_417161", "417161167", "story_v_out_417161.awb")

						arg_690_1:RecordAudio("417161167", var_693_9)
						arg_690_1:RecordAudio("417161167", var_693_9)
					else
						arg_690_1:AudioAction("play", "voice", "story_v_out_417161", "417161167", "story_v_out_417161.awb")
					end

					arg_690_1:RecordHistoryTalkVoice("story_v_out_417161", "417161167", "story_v_out_417161.awb")
				end

				arg_690_1:RecordContent(arg_690_1.text_.text)
			end

			local var_693_10 = math.max(var_693_1, arg_690_1.talkMaxDuration)

			if var_693_0 <= arg_690_1.time_ and arg_690_1.time_ < var_693_0 + var_693_10 then
				arg_690_1.typewritter.percent = (arg_690_1.time_ - var_693_0) / var_693_10

				arg_690_1.typewritter:SetDirty()
			end

			if arg_690_1.time_ >= var_693_0 + var_693_10 and arg_690_1.time_ < var_693_0 + var_693_10 + arg_693_0 then
				arg_690_1.typewritter.percent = 1

				arg_690_1.typewritter:SetDirty()
				arg_690_1:ShowNextGo(true)
			end
		end
	end,
	Play417161168 = function(arg_694_0, arg_694_1)
		arg_694_1.time_ = 0
		arg_694_1.frameCnt_ = 0
		arg_694_1.state_ = "playing"
		arg_694_1.curTalkId_ = 417161168
		arg_694_1.duration_ = 2.6

		SetActive(arg_694_1.tipsGo_, false)

		function arg_694_1.onSingleLineFinish_()
			arg_694_1.onSingleLineUpdate_ = nil
			arg_694_1.onSingleLineFinish_ = nil
			arg_694_1.state_ = "waiting"
		end

		function arg_694_1.playNext_(arg_696_0)
			if arg_696_0 == 1 then
				arg_694_0:Play417161169(arg_694_1)
			end
		end

		function arg_694_1.onSingleLineUpdate_(arg_697_0)
			local var_697_0 = 0
			local var_697_1 = 0.4

			if var_697_0 < arg_694_1.time_ and arg_694_1.time_ <= var_697_0 + arg_697_0 then
				arg_694_1.talkMaxDuration = 0
				arg_694_1.dialogCg_.alpha = 1

				arg_694_1.dialog_:SetActive(true)
				SetActive(arg_694_1.leftNameGo_, true)

				local var_697_2 = arg_694_1:FormatText(StoryNameCfg[595].name)

				arg_694_1.leftNameTxt_.text = var_697_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_694_1.leftNameTxt_.transform)

				arg_694_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_694_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_694_1:RecordName(arg_694_1.leftNameTxt_.text)
				SetActive(arg_694_1.iconTrs_.gameObject, false)
				arg_694_1.callingController_:SetSelectedState("normal")

				local var_697_3 = arg_694_1:GetWordFromCfg(417161168)
				local var_697_4 = arg_694_1:FormatText(var_697_3.content)

				arg_694_1.text_.text = var_697_4

				LuaForUtil.ClearLinePrefixSymbol(arg_694_1.text_)

				local var_697_5 = 16
				local var_697_6 = utf8.len(var_697_4)
				local var_697_7 = var_697_5 <= 0 and var_697_1 or var_697_1 * (var_697_6 / var_697_5)

				if var_697_7 > 0 and var_697_1 < var_697_7 then
					arg_694_1.talkMaxDuration = var_697_7

					if var_697_7 + var_697_0 > arg_694_1.duration_ then
						arg_694_1.duration_ = var_697_7 + var_697_0
					end
				end

				arg_694_1.text_.text = var_697_4
				arg_694_1.typewritter.percent = 0

				arg_694_1.typewritter:SetDirty()
				arg_694_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161168", "story_v_out_417161.awb") ~= 0 then
					local var_697_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161168", "story_v_out_417161.awb") / 1000

					if var_697_8 + var_697_0 > arg_694_1.duration_ then
						arg_694_1.duration_ = var_697_8 + var_697_0
					end

					if var_697_3.prefab_name ~= "" and arg_694_1.actors_[var_697_3.prefab_name] ~= nil then
						local var_697_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_694_1.actors_[var_697_3.prefab_name].transform, "story_v_out_417161", "417161168", "story_v_out_417161.awb")

						arg_694_1:RecordAudio("417161168", var_697_9)
						arg_694_1:RecordAudio("417161168", var_697_9)
					else
						arg_694_1:AudioAction("play", "voice", "story_v_out_417161", "417161168", "story_v_out_417161.awb")
					end

					arg_694_1:RecordHistoryTalkVoice("story_v_out_417161", "417161168", "story_v_out_417161.awb")
				end

				arg_694_1:RecordContent(arg_694_1.text_.text)
			end

			local var_697_10 = math.max(var_697_1, arg_694_1.talkMaxDuration)

			if var_697_0 <= arg_694_1.time_ and arg_694_1.time_ < var_697_0 + var_697_10 then
				arg_694_1.typewritter.percent = (arg_694_1.time_ - var_697_0) / var_697_10

				arg_694_1.typewritter:SetDirty()
			end

			if arg_694_1.time_ >= var_697_0 + var_697_10 and arg_694_1.time_ < var_697_0 + var_697_10 + arg_697_0 then
				arg_694_1.typewritter.percent = 1

				arg_694_1.typewritter:SetDirty()
				arg_694_1:ShowNextGo(true)
			end
		end
	end,
	Play417161169 = function(arg_698_0, arg_698_1)
		arg_698_1.time_ = 0
		arg_698_1.frameCnt_ = 0
		arg_698_1.state_ = "playing"
		arg_698_1.curTalkId_ = 417161169
		arg_698_1.duration_ = 8.2

		SetActive(arg_698_1.tipsGo_, false)

		function arg_698_1.onSingleLineFinish_()
			arg_698_1.onSingleLineUpdate_ = nil
			arg_698_1.onSingleLineFinish_ = nil
			arg_698_1.state_ = "waiting"
		end

		function arg_698_1.playNext_(arg_700_0)
			if arg_700_0 == 1 then
				arg_698_0:Play417161170(arg_698_1)
			end
		end

		function arg_698_1.onSingleLineUpdate_(arg_701_0)
			local var_701_0 = 0
			local var_701_1 = 0.8

			if var_701_0 < arg_698_1.time_ and arg_698_1.time_ <= var_701_0 + arg_701_0 then
				arg_698_1.talkMaxDuration = 0
				arg_698_1.dialogCg_.alpha = 1

				arg_698_1.dialog_:SetActive(true)
				SetActive(arg_698_1.leftNameGo_, true)

				local var_701_2 = arg_698_1:FormatText(StoryNameCfg[1125].name)

				arg_698_1.leftNameTxt_.text = var_701_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_698_1.leftNameTxt_.transform)

				arg_698_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_698_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_698_1:RecordName(arg_698_1.leftNameTxt_.text)
				SetActive(arg_698_1.iconTrs_.gameObject, false)
				arg_698_1.callingController_:SetSelectedState("normal")

				local var_701_3 = arg_698_1:GetWordFromCfg(417161169)
				local var_701_4 = arg_698_1:FormatText(var_701_3.content)

				arg_698_1.text_.text = var_701_4

				LuaForUtil.ClearLinePrefixSymbol(arg_698_1.text_)

				local var_701_5 = 32
				local var_701_6 = utf8.len(var_701_4)
				local var_701_7 = var_701_5 <= 0 and var_701_1 or var_701_1 * (var_701_6 / var_701_5)

				if var_701_7 > 0 and var_701_1 < var_701_7 then
					arg_698_1.talkMaxDuration = var_701_7

					if var_701_7 + var_701_0 > arg_698_1.duration_ then
						arg_698_1.duration_ = var_701_7 + var_701_0
					end
				end

				arg_698_1.text_.text = var_701_4
				arg_698_1.typewritter.percent = 0

				arg_698_1.typewritter:SetDirty()
				arg_698_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161169", "story_v_out_417161.awb") ~= 0 then
					local var_701_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161169", "story_v_out_417161.awb") / 1000

					if var_701_8 + var_701_0 > arg_698_1.duration_ then
						arg_698_1.duration_ = var_701_8 + var_701_0
					end

					if var_701_3.prefab_name ~= "" and arg_698_1.actors_[var_701_3.prefab_name] ~= nil then
						local var_701_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_698_1.actors_[var_701_3.prefab_name].transform, "story_v_out_417161", "417161169", "story_v_out_417161.awb")

						arg_698_1:RecordAudio("417161169", var_701_9)
						arg_698_1:RecordAudio("417161169", var_701_9)
					else
						arg_698_1:AudioAction("play", "voice", "story_v_out_417161", "417161169", "story_v_out_417161.awb")
					end

					arg_698_1:RecordHistoryTalkVoice("story_v_out_417161", "417161169", "story_v_out_417161.awb")
				end

				arg_698_1:RecordContent(arg_698_1.text_.text)
			end

			local var_701_10 = math.max(var_701_1, arg_698_1.talkMaxDuration)

			if var_701_0 <= arg_698_1.time_ and arg_698_1.time_ < var_701_0 + var_701_10 then
				arg_698_1.typewritter.percent = (arg_698_1.time_ - var_701_0) / var_701_10

				arg_698_1.typewritter:SetDirty()
			end

			if arg_698_1.time_ >= var_701_0 + var_701_10 and arg_698_1.time_ < var_701_0 + var_701_10 + arg_701_0 then
				arg_698_1.typewritter.percent = 1

				arg_698_1.typewritter:SetDirty()
				arg_698_1:ShowNextGo(true)
			end
		end
	end,
	Play417161170 = function(arg_702_0, arg_702_1)
		arg_702_1.time_ = 0
		arg_702_1.frameCnt_ = 0
		arg_702_1.state_ = "playing"
		arg_702_1.curTalkId_ = 417161170
		arg_702_1.duration_ = 8.83

		SetActive(arg_702_1.tipsGo_, false)

		function arg_702_1.onSingleLineFinish_()
			arg_702_1.onSingleLineUpdate_ = nil
			arg_702_1.onSingleLineFinish_ = nil
			arg_702_1.state_ = "waiting"
		end

		function arg_702_1.playNext_(arg_704_0)
			if arg_704_0 == 1 then
				arg_702_0:Play417161171(arg_702_1)
			end
		end

		function arg_702_1.onSingleLineUpdate_(arg_705_0)
			local var_705_0 = 0
			local var_705_1 = 1.2

			if var_705_0 < arg_702_1.time_ and arg_702_1.time_ <= var_705_0 + arg_705_0 then
				arg_702_1.talkMaxDuration = 0
				arg_702_1.dialogCg_.alpha = 1

				arg_702_1.dialog_:SetActive(true)
				SetActive(arg_702_1.leftNameGo_, true)

				local var_705_2 = arg_702_1:FormatText(StoryNameCfg[1125].name)

				arg_702_1.leftNameTxt_.text = var_705_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_702_1.leftNameTxt_.transform)

				arg_702_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_702_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_702_1:RecordName(arg_702_1.leftNameTxt_.text)
				SetActive(arg_702_1.iconTrs_.gameObject, false)
				arg_702_1.callingController_:SetSelectedState("normal")

				local var_705_3 = arg_702_1:GetWordFromCfg(417161170)
				local var_705_4 = arg_702_1:FormatText(var_705_3.content)

				arg_702_1.text_.text = var_705_4

				LuaForUtil.ClearLinePrefixSymbol(arg_702_1.text_)

				local var_705_5 = 48
				local var_705_6 = utf8.len(var_705_4)
				local var_705_7 = var_705_5 <= 0 and var_705_1 or var_705_1 * (var_705_6 / var_705_5)

				if var_705_7 > 0 and var_705_1 < var_705_7 then
					arg_702_1.talkMaxDuration = var_705_7

					if var_705_7 + var_705_0 > arg_702_1.duration_ then
						arg_702_1.duration_ = var_705_7 + var_705_0
					end
				end

				arg_702_1.text_.text = var_705_4
				arg_702_1.typewritter.percent = 0

				arg_702_1.typewritter:SetDirty()
				arg_702_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161170", "story_v_out_417161.awb") ~= 0 then
					local var_705_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161170", "story_v_out_417161.awb") / 1000

					if var_705_8 + var_705_0 > arg_702_1.duration_ then
						arg_702_1.duration_ = var_705_8 + var_705_0
					end

					if var_705_3.prefab_name ~= "" and arg_702_1.actors_[var_705_3.prefab_name] ~= nil then
						local var_705_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_702_1.actors_[var_705_3.prefab_name].transform, "story_v_out_417161", "417161170", "story_v_out_417161.awb")

						arg_702_1:RecordAudio("417161170", var_705_9)
						arg_702_1:RecordAudio("417161170", var_705_9)
					else
						arg_702_1:AudioAction("play", "voice", "story_v_out_417161", "417161170", "story_v_out_417161.awb")
					end

					arg_702_1:RecordHistoryTalkVoice("story_v_out_417161", "417161170", "story_v_out_417161.awb")
				end

				arg_702_1:RecordContent(arg_702_1.text_.text)
			end

			local var_705_10 = math.max(var_705_1, arg_702_1.talkMaxDuration)

			if var_705_0 <= arg_702_1.time_ and arg_702_1.time_ < var_705_0 + var_705_10 then
				arg_702_1.typewritter.percent = (arg_702_1.time_ - var_705_0) / var_705_10

				arg_702_1.typewritter:SetDirty()
			end

			if arg_702_1.time_ >= var_705_0 + var_705_10 and arg_702_1.time_ < var_705_0 + var_705_10 + arg_705_0 then
				arg_702_1.typewritter.percent = 1

				arg_702_1.typewritter:SetDirty()
				arg_702_1:ShowNextGo(true)
			end
		end
	end,
	Play417161171 = function(arg_706_0, arg_706_1)
		arg_706_1.time_ = 0
		arg_706_1.frameCnt_ = 0
		arg_706_1.state_ = "playing"
		arg_706_1.curTalkId_ = 417161171
		arg_706_1.duration_ = 10

		SetActive(arg_706_1.tipsGo_, false)

		function arg_706_1.onSingleLineFinish_()
			arg_706_1.onSingleLineUpdate_ = nil
			arg_706_1.onSingleLineFinish_ = nil
			arg_706_1.state_ = "waiting"
		end

		function arg_706_1.playNext_(arg_708_0)
			if arg_708_0 == 1 then
				arg_706_0:Play417161172(arg_706_1)
			end
		end

		function arg_706_1.onSingleLineUpdate_(arg_709_0)
			local var_709_0 = 0
			local var_709_1 = 1.2

			if var_709_0 < arg_706_1.time_ and arg_706_1.time_ <= var_709_0 + arg_709_0 then
				arg_706_1.talkMaxDuration = 0
				arg_706_1.dialogCg_.alpha = 1

				arg_706_1.dialog_:SetActive(true)
				SetActive(arg_706_1.leftNameGo_, true)

				local var_709_2 = arg_706_1:FormatText(StoryNameCfg[1125].name)

				arg_706_1.leftNameTxt_.text = var_709_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_706_1.leftNameTxt_.transform)

				arg_706_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_706_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_706_1:RecordName(arg_706_1.leftNameTxt_.text)
				SetActive(arg_706_1.iconTrs_.gameObject, false)
				arg_706_1.callingController_:SetSelectedState("normal")

				local var_709_3 = arg_706_1:GetWordFromCfg(417161171)
				local var_709_4 = arg_706_1:FormatText(var_709_3.content)

				arg_706_1.text_.text = var_709_4

				LuaForUtil.ClearLinePrefixSymbol(arg_706_1.text_)

				local var_709_5 = 48
				local var_709_6 = utf8.len(var_709_4)
				local var_709_7 = var_709_5 <= 0 and var_709_1 or var_709_1 * (var_709_6 / var_709_5)

				if var_709_7 > 0 and var_709_1 < var_709_7 then
					arg_706_1.talkMaxDuration = var_709_7

					if var_709_7 + var_709_0 > arg_706_1.duration_ then
						arg_706_1.duration_ = var_709_7 + var_709_0
					end
				end

				arg_706_1.text_.text = var_709_4
				arg_706_1.typewritter.percent = 0

				arg_706_1.typewritter:SetDirty()
				arg_706_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161171", "story_v_out_417161.awb") ~= 0 then
					local var_709_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161171", "story_v_out_417161.awb") / 1000

					if var_709_8 + var_709_0 > arg_706_1.duration_ then
						arg_706_1.duration_ = var_709_8 + var_709_0
					end

					if var_709_3.prefab_name ~= "" and arg_706_1.actors_[var_709_3.prefab_name] ~= nil then
						local var_709_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_706_1.actors_[var_709_3.prefab_name].transform, "story_v_out_417161", "417161171", "story_v_out_417161.awb")

						arg_706_1:RecordAudio("417161171", var_709_9)
						arg_706_1:RecordAudio("417161171", var_709_9)
					else
						arg_706_1:AudioAction("play", "voice", "story_v_out_417161", "417161171", "story_v_out_417161.awb")
					end

					arg_706_1:RecordHistoryTalkVoice("story_v_out_417161", "417161171", "story_v_out_417161.awb")
				end

				arg_706_1:RecordContent(arg_706_1.text_.text)
			end

			local var_709_10 = math.max(var_709_1, arg_706_1.talkMaxDuration)

			if var_709_0 <= arg_706_1.time_ and arg_706_1.time_ < var_709_0 + var_709_10 then
				arg_706_1.typewritter.percent = (arg_706_1.time_ - var_709_0) / var_709_10

				arg_706_1.typewritter:SetDirty()
			end

			if arg_706_1.time_ >= var_709_0 + var_709_10 and arg_706_1.time_ < var_709_0 + var_709_10 + arg_709_0 then
				arg_706_1.typewritter.percent = 1

				arg_706_1.typewritter:SetDirty()
				arg_706_1:ShowNextGo(true)
			end
		end
	end,
	Play417161172 = function(arg_710_0, arg_710_1)
		arg_710_1.time_ = 0
		arg_710_1.frameCnt_ = 0
		arg_710_1.state_ = "playing"
		arg_710_1.curTalkId_ = 417161172
		arg_710_1.duration_ = 4.3

		SetActive(arg_710_1.tipsGo_, false)

		function arg_710_1.onSingleLineFinish_()
			arg_710_1.onSingleLineUpdate_ = nil
			arg_710_1.onSingleLineFinish_ = nil
			arg_710_1.state_ = "waiting"
		end

		function arg_710_1.playNext_(arg_712_0)
			if arg_712_0 == 1 then
				arg_710_0:Play417161173(arg_710_1)
			end
		end

		function arg_710_1.onSingleLineUpdate_(arg_713_0)
			local var_713_0 = 0
			local var_713_1 = 0.475

			if var_713_0 < arg_710_1.time_ and arg_710_1.time_ <= var_713_0 + arg_713_0 then
				arg_710_1.talkMaxDuration = 0
				arg_710_1.dialogCg_.alpha = 1

				arg_710_1.dialog_:SetActive(true)
				SetActive(arg_710_1.leftNameGo_, true)

				local var_713_2 = arg_710_1:FormatText(StoryNameCfg[595].name)

				arg_710_1.leftNameTxt_.text = var_713_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_710_1.leftNameTxt_.transform)

				arg_710_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_710_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_710_1:RecordName(arg_710_1.leftNameTxt_.text)
				SetActive(arg_710_1.iconTrs_.gameObject, false)
				arg_710_1.callingController_:SetSelectedState("normal")

				local var_713_3 = arg_710_1:GetWordFromCfg(417161172)
				local var_713_4 = arg_710_1:FormatText(var_713_3.content)

				arg_710_1.text_.text = var_713_4

				LuaForUtil.ClearLinePrefixSymbol(arg_710_1.text_)

				local var_713_5 = 19
				local var_713_6 = utf8.len(var_713_4)
				local var_713_7 = var_713_5 <= 0 and var_713_1 or var_713_1 * (var_713_6 / var_713_5)

				if var_713_7 > 0 and var_713_1 < var_713_7 then
					arg_710_1.talkMaxDuration = var_713_7

					if var_713_7 + var_713_0 > arg_710_1.duration_ then
						arg_710_1.duration_ = var_713_7 + var_713_0
					end
				end

				arg_710_1.text_.text = var_713_4
				arg_710_1.typewritter.percent = 0

				arg_710_1.typewritter:SetDirty()
				arg_710_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161172", "story_v_out_417161.awb") ~= 0 then
					local var_713_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161172", "story_v_out_417161.awb") / 1000

					if var_713_8 + var_713_0 > arg_710_1.duration_ then
						arg_710_1.duration_ = var_713_8 + var_713_0
					end

					if var_713_3.prefab_name ~= "" and arg_710_1.actors_[var_713_3.prefab_name] ~= nil then
						local var_713_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_710_1.actors_[var_713_3.prefab_name].transform, "story_v_out_417161", "417161172", "story_v_out_417161.awb")

						arg_710_1:RecordAudio("417161172", var_713_9)
						arg_710_1:RecordAudio("417161172", var_713_9)
					else
						arg_710_1:AudioAction("play", "voice", "story_v_out_417161", "417161172", "story_v_out_417161.awb")
					end

					arg_710_1:RecordHistoryTalkVoice("story_v_out_417161", "417161172", "story_v_out_417161.awb")
				end

				arg_710_1:RecordContent(arg_710_1.text_.text)
			end

			local var_713_10 = math.max(var_713_1, arg_710_1.talkMaxDuration)

			if var_713_0 <= arg_710_1.time_ and arg_710_1.time_ < var_713_0 + var_713_10 then
				arg_710_1.typewritter.percent = (arg_710_1.time_ - var_713_0) / var_713_10

				arg_710_1.typewritter:SetDirty()
			end

			if arg_710_1.time_ >= var_713_0 + var_713_10 and arg_710_1.time_ < var_713_0 + var_713_10 + arg_713_0 then
				arg_710_1.typewritter.percent = 1

				arg_710_1.typewritter:SetDirty()
				arg_710_1:ShowNextGo(true)
			end
		end
	end,
	Play417161173 = function(arg_714_0, arg_714_1)
		arg_714_1.time_ = 0
		arg_714_1.frameCnt_ = 0
		arg_714_1.state_ = "playing"
		arg_714_1.curTalkId_ = 417161173
		arg_714_1.duration_ = 8.6

		SetActive(arg_714_1.tipsGo_, false)

		function arg_714_1.onSingleLineFinish_()
			arg_714_1.onSingleLineUpdate_ = nil
			arg_714_1.onSingleLineFinish_ = nil
			arg_714_1.state_ = "waiting"
		end

		function arg_714_1.playNext_(arg_716_0)
			if arg_716_0 == 1 then
				arg_714_0:Play417161174(arg_714_1)
			end
		end

		function arg_714_1.onSingleLineUpdate_(arg_717_0)
			local var_717_0 = 0
			local var_717_1 = 1.075

			if var_717_0 < arg_714_1.time_ and arg_714_1.time_ <= var_717_0 + arg_717_0 then
				arg_714_1.talkMaxDuration = 0
				arg_714_1.dialogCg_.alpha = 1

				arg_714_1.dialog_:SetActive(true)
				SetActive(arg_714_1.leftNameGo_, true)

				local var_717_2 = arg_714_1:FormatText(StoryNameCfg[595].name)

				arg_714_1.leftNameTxt_.text = var_717_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_714_1.leftNameTxt_.transform)

				arg_714_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_714_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_714_1:RecordName(arg_714_1.leftNameTxt_.text)
				SetActive(arg_714_1.iconTrs_.gameObject, false)
				arg_714_1.callingController_:SetSelectedState("normal")

				local var_717_3 = arg_714_1:GetWordFromCfg(417161173)
				local var_717_4 = arg_714_1:FormatText(var_717_3.content)

				arg_714_1.text_.text = var_717_4

				LuaForUtil.ClearLinePrefixSymbol(arg_714_1.text_)

				local var_717_5 = 43
				local var_717_6 = utf8.len(var_717_4)
				local var_717_7 = var_717_5 <= 0 and var_717_1 or var_717_1 * (var_717_6 / var_717_5)

				if var_717_7 > 0 and var_717_1 < var_717_7 then
					arg_714_1.talkMaxDuration = var_717_7

					if var_717_7 + var_717_0 > arg_714_1.duration_ then
						arg_714_1.duration_ = var_717_7 + var_717_0
					end
				end

				arg_714_1.text_.text = var_717_4
				arg_714_1.typewritter.percent = 0

				arg_714_1.typewritter:SetDirty()
				arg_714_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161173", "story_v_out_417161.awb") ~= 0 then
					local var_717_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161173", "story_v_out_417161.awb") / 1000

					if var_717_8 + var_717_0 > arg_714_1.duration_ then
						arg_714_1.duration_ = var_717_8 + var_717_0
					end

					if var_717_3.prefab_name ~= "" and arg_714_1.actors_[var_717_3.prefab_name] ~= nil then
						local var_717_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_714_1.actors_[var_717_3.prefab_name].transform, "story_v_out_417161", "417161173", "story_v_out_417161.awb")

						arg_714_1:RecordAudio("417161173", var_717_9)
						arg_714_1:RecordAudio("417161173", var_717_9)
					else
						arg_714_1:AudioAction("play", "voice", "story_v_out_417161", "417161173", "story_v_out_417161.awb")
					end

					arg_714_1:RecordHistoryTalkVoice("story_v_out_417161", "417161173", "story_v_out_417161.awb")
				end

				arg_714_1:RecordContent(arg_714_1.text_.text)
			end

			local var_717_10 = math.max(var_717_1, arg_714_1.talkMaxDuration)

			if var_717_0 <= arg_714_1.time_ and arg_714_1.time_ < var_717_0 + var_717_10 then
				arg_714_1.typewritter.percent = (arg_714_1.time_ - var_717_0) / var_717_10

				arg_714_1.typewritter:SetDirty()
			end

			if arg_714_1.time_ >= var_717_0 + var_717_10 and arg_714_1.time_ < var_717_0 + var_717_10 + arg_717_0 then
				arg_714_1.typewritter.percent = 1

				arg_714_1.typewritter:SetDirty()
				arg_714_1:ShowNextGo(true)
			end
		end
	end,
	Play417161174 = function(arg_718_0, arg_718_1)
		arg_718_1.time_ = 0
		arg_718_1.frameCnt_ = 0
		arg_718_1.state_ = "playing"
		arg_718_1.curTalkId_ = 417161174
		arg_718_1.duration_ = 2.1

		SetActive(arg_718_1.tipsGo_, false)

		function arg_718_1.onSingleLineFinish_()
			arg_718_1.onSingleLineUpdate_ = nil
			arg_718_1.onSingleLineFinish_ = nil
			arg_718_1.state_ = "waiting"
		end

		function arg_718_1.playNext_(arg_720_0)
			if arg_720_0 == 1 then
				arg_718_0:Play417161175(arg_718_1)
			end
		end

		function arg_718_1.onSingleLineUpdate_(arg_721_0)
			local var_721_0 = 0
			local var_721_1 = 0.275

			if var_721_0 < arg_718_1.time_ and arg_718_1.time_ <= var_721_0 + arg_721_0 then
				arg_718_1.talkMaxDuration = 0
				arg_718_1.dialogCg_.alpha = 1

				arg_718_1.dialog_:SetActive(true)
				SetActive(arg_718_1.leftNameGo_, true)

				local var_721_2 = arg_718_1:FormatText(StoryNameCfg[1125].name)

				arg_718_1.leftNameTxt_.text = var_721_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_718_1.leftNameTxt_.transform)

				arg_718_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_718_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_718_1:RecordName(arg_718_1.leftNameTxt_.text)
				SetActive(arg_718_1.iconTrs_.gameObject, false)
				arg_718_1.callingController_:SetSelectedState("normal")

				local var_721_3 = arg_718_1:GetWordFromCfg(417161174)
				local var_721_4 = arg_718_1:FormatText(var_721_3.content)

				arg_718_1.text_.text = var_721_4

				LuaForUtil.ClearLinePrefixSymbol(arg_718_1.text_)

				local var_721_5 = 11
				local var_721_6 = utf8.len(var_721_4)
				local var_721_7 = var_721_5 <= 0 and var_721_1 or var_721_1 * (var_721_6 / var_721_5)

				if var_721_7 > 0 and var_721_1 < var_721_7 then
					arg_718_1.talkMaxDuration = var_721_7

					if var_721_7 + var_721_0 > arg_718_1.duration_ then
						arg_718_1.duration_ = var_721_7 + var_721_0
					end
				end

				arg_718_1.text_.text = var_721_4
				arg_718_1.typewritter.percent = 0

				arg_718_1.typewritter:SetDirty()
				arg_718_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161174", "story_v_out_417161.awb") ~= 0 then
					local var_721_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161174", "story_v_out_417161.awb") / 1000

					if var_721_8 + var_721_0 > arg_718_1.duration_ then
						arg_718_1.duration_ = var_721_8 + var_721_0
					end

					if var_721_3.prefab_name ~= "" and arg_718_1.actors_[var_721_3.prefab_name] ~= nil then
						local var_721_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_718_1.actors_[var_721_3.prefab_name].transform, "story_v_out_417161", "417161174", "story_v_out_417161.awb")

						arg_718_1:RecordAudio("417161174", var_721_9)
						arg_718_1:RecordAudio("417161174", var_721_9)
					else
						arg_718_1:AudioAction("play", "voice", "story_v_out_417161", "417161174", "story_v_out_417161.awb")
					end

					arg_718_1:RecordHistoryTalkVoice("story_v_out_417161", "417161174", "story_v_out_417161.awb")
				end

				arg_718_1:RecordContent(arg_718_1.text_.text)
			end

			local var_721_10 = math.max(var_721_1, arg_718_1.talkMaxDuration)

			if var_721_0 <= arg_718_1.time_ and arg_718_1.time_ < var_721_0 + var_721_10 then
				arg_718_1.typewritter.percent = (arg_718_1.time_ - var_721_0) / var_721_10

				arg_718_1.typewritter:SetDirty()
			end

			if arg_718_1.time_ >= var_721_0 + var_721_10 and arg_718_1.time_ < var_721_0 + var_721_10 + arg_721_0 then
				arg_718_1.typewritter.percent = 1

				arg_718_1.typewritter:SetDirty()
				arg_718_1:ShowNextGo(true)
			end
		end
	end,
	Play417161175 = function(arg_722_0, arg_722_1)
		arg_722_1.time_ = 0
		arg_722_1.frameCnt_ = 0
		arg_722_1.state_ = "playing"
		arg_722_1.curTalkId_ = 417161175
		arg_722_1.duration_ = 1.33

		SetActive(arg_722_1.tipsGo_, false)

		function arg_722_1.onSingleLineFinish_()
			arg_722_1.onSingleLineUpdate_ = nil
			arg_722_1.onSingleLineFinish_ = nil
			arg_722_1.state_ = "waiting"
		end

		function arg_722_1.playNext_(arg_724_0)
			if arg_724_0 == 1 then
				arg_722_0:Play417161176(arg_722_1)
			end
		end

		function arg_722_1.onSingleLineUpdate_(arg_725_0)
			local var_725_0 = 0
			local var_725_1 = 0.125

			if var_725_0 < arg_722_1.time_ and arg_722_1.time_ <= var_725_0 + arg_725_0 then
				arg_722_1.talkMaxDuration = 0
				arg_722_1.dialogCg_.alpha = 1

				arg_722_1.dialog_:SetActive(true)
				SetActive(arg_722_1.leftNameGo_, true)

				local var_725_2 = arg_722_1:FormatText(StoryNameCfg[595].name)

				arg_722_1.leftNameTxt_.text = var_725_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_722_1.leftNameTxt_.transform)

				arg_722_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_722_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_722_1:RecordName(arg_722_1.leftNameTxt_.text)
				SetActive(arg_722_1.iconTrs_.gameObject, false)
				arg_722_1.callingController_:SetSelectedState("normal")

				local var_725_3 = arg_722_1:GetWordFromCfg(417161175)
				local var_725_4 = arg_722_1:FormatText(var_725_3.content)

				arg_722_1.text_.text = var_725_4

				LuaForUtil.ClearLinePrefixSymbol(arg_722_1.text_)

				local var_725_5 = 5
				local var_725_6 = utf8.len(var_725_4)
				local var_725_7 = var_725_5 <= 0 and var_725_1 or var_725_1 * (var_725_6 / var_725_5)

				if var_725_7 > 0 and var_725_1 < var_725_7 then
					arg_722_1.talkMaxDuration = var_725_7

					if var_725_7 + var_725_0 > arg_722_1.duration_ then
						arg_722_1.duration_ = var_725_7 + var_725_0
					end
				end

				arg_722_1.text_.text = var_725_4
				arg_722_1.typewritter.percent = 0

				arg_722_1.typewritter:SetDirty()
				arg_722_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161175", "story_v_out_417161.awb") ~= 0 then
					local var_725_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161175", "story_v_out_417161.awb") / 1000

					if var_725_8 + var_725_0 > arg_722_1.duration_ then
						arg_722_1.duration_ = var_725_8 + var_725_0
					end

					if var_725_3.prefab_name ~= "" and arg_722_1.actors_[var_725_3.prefab_name] ~= nil then
						local var_725_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_722_1.actors_[var_725_3.prefab_name].transform, "story_v_out_417161", "417161175", "story_v_out_417161.awb")

						arg_722_1:RecordAudio("417161175", var_725_9)
						arg_722_1:RecordAudio("417161175", var_725_9)
					else
						arg_722_1:AudioAction("play", "voice", "story_v_out_417161", "417161175", "story_v_out_417161.awb")
					end

					arg_722_1:RecordHistoryTalkVoice("story_v_out_417161", "417161175", "story_v_out_417161.awb")
				end

				arg_722_1:RecordContent(arg_722_1.text_.text)
			end

			local var_725_10 = math.max(var_725_1, arg_722_1.talkMaxDuration)

			if var_725_0 <= arg_722_1.time_ and arg_722_1.time_ < var_725_0 + var_725_10 then
				arg_722_1.typewritter.percent = (arg_722_1.time_ - var_725_0) / var_725_10

				arg_722_1.typewritter:SetDirty()
			end

			if arg_722_1.time_ >= var_725_0 + var_725_10 and arg_722_1.time_ < var_725_0 + var_725_10 + arg_725_0 then
				arg_722_1.typewritter.percent = 1

				arg_722_1.typewritter:SetDirty()
				arg_722_1:ShowNextGo(true)
			end
		end
	end,
	Play417161176 = function(arg_726_0, arg_726_1)
		arg_726_1.time_ = 0
		arg_726_1.frameCnt_ = 0
		arg_726_1.state_ = "playing"
		arg_726_1.curTalkId_ = 417161176
		arg_726_1.duration_ = 5

		SetActive(arg_726_1.tipsGo_, false)

		function arg_726_1.onSingleLineFinish_()
			arg_726_1.onSingleLineUpdate_ = nil
			arg_726_1.onSingleLineFinish_ = nil
			arg_726_1.state_ = "waiting"
		end

		function arg_726_1.playNext_(arg_728_0)
			if arg_728_0 == 1 then
				arg_726_0:Play417161177(arg_726_1)
			end
		end

		function arg_726_1.onSingleLineUpdate_(arg_729_0)
			local var_729_0 = 0.166666666666667
			local var_729_1 = 1

			if var_729_0 < arg_726_1.time_ and arg_726_1.time_ <= var_729_0 + arg_729_0 then
				local var_729_2 = "play"
				local var_729_3 = "effect"

				arg_726_1:AudioAction(var_729_2, var_729_3, "se_story_1311", "se_story_1311_pictures", "")
			end

			local var_729_4 = 0
			local var_729_5 = 0.9

			if var_729_4 < arg_726_1.time_ and arg_726_1.time_ <= var_729_4 + arg_729_0 then
				arg_726_1.talkMaxDuration = 0
				arg_726_1.dialogCg_.alpha = 1

				arg_726_1.dialog_:SetActive(true)
				SetActive(arg_726_1.leftNameGo_, false)

				arg_726_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_726_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_726_1:RecordName(arg_726_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_726_1.iconTrs_.gameObject, false)
				arg_726_1.callingController_:SetSelectedState("normal")

				local var_729_6 = arg_726_1:GetWordFromCfg(417161176)
				local var_729_7 = arg_726_1:FormatText(var_729_6.content)

				arg_726_1.text_.text = var_729_7

				LuaForUtil.ClearLinePrefixSymbol(arg_726_1.text_)

				local var_729_8 = 36
				local var_729_9 = utf8.len(var_729_7)
				local var_729_10 = var_729_8 <= 0 and var_729_5 or var_729_5 * (var_729_9 / var_729_8)

				if var_729_10 > 0 and var_729_5 < var_729_10 then
					arg_726_1.talkMaxDuration = var_729_10

					if var_729_10 + var_729_4 > arg_726_1.duration_ then
						arg_726_1.duration_ = var_729_10 + var_729_4
					end
				end

				arg_726_1.text_.text = var_729_7
				arg_726_1.typewritter.percent = 0

				arg_726_1.typewritter:SetDirty()
				arg_726_1:ShowNextGo(false)
				arg_726_1:RecordContent(arg_726_1.text_.text)
			end

			local var_729_11 = math.max(var_729_5, arg_726_1.talkMaxDuration)

			if var_729_4 <= arg_726_1.time_ and arg_726_1.time_ < var_729_4 + var_729_11 then
				arg_726_1.typewritter.percent = (arg_726_1.time_ - var_729_4) / var_729_11

				arg_726_1.typewritter:SetDirty()
			end

			if arg_726_1.time_ >= var_729_4 + var_729_11 and arg_726_1.time_ < var_729_4 + var_729_11 + arg_729_0 then
				arg_726_1.typewritter.percent = 1

				arg_726_1.typewritter:SetDirty()
				arg_726_1:ShowNextGo(true)
			end
		end
	end,
	Play417161177 = function(arg_730_0, arg_730_1)
		arg_730_1.time_ = 0
		arg_730_1.frameCnt_ = 0
		arg_730_1.state_ = "playing"
		arg_730_1.curTalkId_ = 417161177
		arg_730_1.duration_ = 10.23

		SetActive(arg_730_1.tipsGo_, false)

		function arg_730_1.onSingleLineFinish_()
			arg_730_1.onSingleLineUpdate_ = nil
			arg_730_1.onSingleLineFinish_ = nil
			arg_730_1.state_ = "waiting"
		end

		function arg_730_1.playNext_(arg_732_0)
			if arg_732_0 == 1 then
				arg_730_0:Play417161178(arg_730_1)
			end
		end

		function arg_730_1.onSingleLineUpdate_(arg_733_0)
			local var_733_0 = 0
			local var_733_1 = 1.15

			if var_733_0 < arg_730_1.time_ and arg_730_1.time_ <= var_733_0 + arg_733_0 then
				arg_730_1.talkMaxDuration = 0
				arg_730_1.dialogCg_.alpha = 1

				arg_730_1.dialog_:SetActive(true)
				SetActive(arg_730_1.leftNameGo_, true)

				local var_733_2 = arg_730_1:FormatText(StoryNameCfg[1125].name)

				arg_730_1.leftNameTxt_.text = var_733_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_730_1.leftNameTxt_.transform)

				arg_730_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_730_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_730_1:RecordName(arg_730_1.leftNameTxt_.text)
				SetActive(arg_730_1.iconTrs_.gameObject, false)
				arg_730_1.callingController_:SetSelectedState("normal")

				local var_733_3 = arg_730_1:GetWordFromCfg(417161177)
				local var_733_4 = arg_730_1:FormatText(var_733_3.content)

				arg_730_1.text_.text = var_733_4

				LuaForUtil.ClearLinePrefixSymbol(arg_730_1.text_)

				local var_733_5 = 46
				local var_733_6 = utf8.len(var_733_4)
				local var_733_7 = var_733_5 <= 0 and var_733_1 or var_733_1 * (var_733_6 / var_733_5)

				if var_733_7 > 0 and var_733_1 < var_733_7 then
					arg_730_1.talkMaxDuration = var_733_7

					if var_733_7 + var_733_0 > arg_730_1.duration_ then
						arg_730_1.duration_ = var_733_7 + var_733_0
					end
				end

				arg_730_1.text_.text = var_733_4
				arg_730_1.typewritter.percent = 0

				arg_730_1.typewritter:SetDirty()
				arg_730_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161177", "story_v_out_417161.awb") ~= 0 then
					local var_733_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161177", "story_v_out_417161.awb") / 1000

					if var_733_8 + var_733_0 > arg_730_1.duration_ then
						arg_730_1.duration_ = var_733_8 + var_733_0
					end

					if var_733_3.prefab_name ~= "" and arg_730_1.actors_[var_733_3.prefab_name] ~= nil then
						local var_733_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_730_1.actors_[var_733_3.prefab_name].transform, "story_v_out_417161", "417161177", "story_v_out_417161.awb")

						arg_730_1:RecordAudio("417161177", var_733_9)
						arg_730_1:RecordAudio("417161177", var_733_9)
					else
						arg_730_1:AudioAction("play", "voice", "story_v_out_417161", "417161177", "story_v_out_417161.awb")
					end

					arg_730_1:RecordHistoryTalkVoice("story_v_out_417161", "417161177", "story_v_out_417161.awb")
				end

				arg_730_1:RecordContent(arg_730_1.text_.text)
			end

			local var_733_10 = math.max(var_733_1, arg_730_1.talkMaxDuration)

			if var_733_0 <= arg_730_1.time_ and arg_730_1.time_ < var_733_0 + var_733_10 then
				arg_730_1.typewritter.percent = (arg_730_1.time_ - var_733_0) / var_733_10

				arg_730_1.typewritter:SetDirty()
			end

			if arg_730_1.time_ >= var_733_0 + var_733_10 and arg_730_1.time_ < var_733_0 + var_733_10 + arg_733_0 then
				arg_730_1.typewritter.percent = 1

				arg_730_1.typewritter:SetDirty()
				arg_730_1:ShowNextGo(true)
			end
		end
	end,
	Play417161178 = function(arg_734_0, arg_734_1)
		arg_734_1.time_ = 0
		arg_734_1.frameCnt_ = 0
		arg_734_1.state_ = "playing"
		arg_734_1.curTalkId_ = 417161178
		arg_734_1.duration_ = 4.2

		SetActive(arg_734_1.tipsGo_, false)

		function arg_734_1.onSingleLineFinish_()
			arg_734_1.onSingleLineUpdate_ = nil
			arg_734_1.onSingleLineFinish_ = nil
			arg_734_1.state_ = "waiting"
		end

		function arg_734_1.playNext_(arg_736_0)
			if arg_736_0 == 1 then
				arg_734_0:Play417161179(arg_734_1)
			end
		end

		function arg_734_1.onSingleLineUpdate_(arg_737_0)
			local var_737_0 = 0
			local var_737_1 = 0.475

			if var_737_0 < arg_734_1.time_ and arg_734_1.time_ <= var_737_0 + arg_737_0 then
				arg_734_1.talkMaxDuration = 0
				arg_734_1.dialogCg_.alpha = 1

				arg_734_1.dialog_:SetActive(true)
				SetActive(arg_734_1.leftNameGo_, true)

				local var_737_2 = arg_734_1:FormatText(StoryNameCfg[1125].name)

				arg_734_1.leftNameTxt_.text = var_737_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_734_1.leftNameTxt_.transform)

				arg_734_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_734_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_734_1:RecordName(arg_734_1.leftNameTxt_.text)
				SetActive(arg_734_1.iconTrs_.gameObject, false)
				arg_734_1.callingController_:SetSelectedState("normal")

				local var_737_3 = arg_734_1:GetWordFromCfg(417161178)
				local var_737_4 = arg_734_1:FormatText(var_737_3.content)

				arg_734_1.text_.text = var_737_4

				LuaForUtil.ClearLinePrefixSymbol(arg_734_1.text_)

				local var_737_5 = 19
				local var_737_6 = utf8.len(var_737_4)
				local var_737_7 = var_737_5 <= 0 and var_737_1 or var_737_1 * (var_737_6 / var_737_5)

				if var_737_7 > 0 and var_737_1 < var_737_7 then
					arg_734_1.talkMaxDuration = var_737_7

					if var_737_7 + var_737_0 > arg_734_1.duration_ then
						arg_734_1.duration_ = var_737_7 + var_737_0
					end
				end

				arg_734_1.text_.text = var_737_4
				arg_734_1.typewritter.percent = 0

				arg_734_1.typewritter:SetDirty()
				arg_734_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161178", "story_v_out_417161.awb") ~= 0 then
					local var_737_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161178", "story_v_out_417161.awb") / 1000

					if var_737_8 + var_737_0 > arg_734_1.duration_ then
						arg_734_1.duration_ = var_737_8 + var_737_0
					end

					if var_737_3.prefab_name ~= "" and arg_734_1.actors_[var_737_3.prefab_name] ~= nil then
						local var_737_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_734_1.actors_[var_737_3.prefab_name].transform, "story_v_out_417161", "417161178", "story_v_out_417161.awb")

						arg_734_1:RecordAudio("417161178", var_737_9)
						arg_734_1:RecordAudio("417161178", var_737_9)
					else
						arg_734_1:AudioAction("play", "voice", "story_v_out_417161", "417161178", "story_v_out_417161.awb")
					end

					arg_734_1:RecordHistoryTalkVoice("story_v_out_417161", "417161178", "story_v_out_417161.awb")
				end

				arg_734_1:RecordContent(arg_734_1.text_.text)
			end

			local var_737_10 = math.max(var_737_1, arg_734_1.talkMaxDuration)

			if var_737_0 <= arg_734_1.time_ and arg_734_1.time_ < var_737_0 + var_737_10 then
				arg_734_1.typewritter.percent = (arg_734_1.time_ - var_737_0) / var_737_10

				arg_734_1.typewritter:SetDirty()
			end

			if arg_734_1.time_ >= var_737_0 + var_737_10 and arg_734_1.time_ < var_737_0 + var_737_10 + arg_737_0 then
				arg_734_1.typewritter.percent = 1

				arg_734_1.typewritter:SetDirty()
				arg_734_1:ShowNextGo(true)
			end
		end
	end,
	Play417161179 = function(arg_738_0, arg_738_1)
		arg_738_1.time_ = 0
		arg_738_1.frameCnt_ = 0
		arg_738_1.state_ = "playing"
		arg_738_1.curTalkId_ = 417161179
		arg_738_1.duration_ = 5

		SetActive(arg_738_1.tipsGo_, false)

		function arg_738_1.onSingleLineFinish_()
			arg_738_1.onSingleLineUpdate_ = nil
			arg_738_1.onSingleLineFinish_ = nil
			arg_738_1.state_ = "waiting"
		end

		function arg_738_1.playNext_(arg_740_0)
			if arg_740_0 == 1 then
				arg_738_0:Play417161180(arg_738_1)
			end
		end

		function arg_738_1.onSingleLineUpdate_(arg_741_0)
			local var_741_0 = 0
			local var_741_1 = 0.725

			if var_741_0 < arg_738_1.time_ and arg_738_1.time_ <= var_741_0 + arg_741_0 then
				arg_738_1.talkMaxDuration = 0
				arg_738_1.dialogCg_.alpha = 1

				arg_738_1.dialog_:SetActive(true)
				SetActive(arg_738_1.leftNameGo_, false)

				arg_738_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_738_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_738_1:RecordName(arg_738_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_738_1.iconTrs_.gameObject, false)
				arg_738_1.callingController_:SetSelectedState("normal")

				local var_741_2 = arg_738_1:GetWordFromCfg(417161179)
				local var_741_3 = arg_738_1:FormatText(var_741_2.content)

				arg_738_1.text_.text = var_741_3

				LuaForUtil.ClearLinePrefixSymbol(arg_738_1.text_)

				local var_741_4 = 29
				local var_741_5 = utf8.len(var_741_3)
				local var_741_6 = var_741_4 <= 0 and var_741_1 or var_741_1 * (var_741_5 / var_741_4)

				if var_741_6 > 0 and var_741_1 < var_741_6 then
					arg_738_1.talkMaxDuration = var_741_6

					if var_741_6 + var_741_0 > arg_738_1.duration_ then
						arg_738_1.duration_ = var_741_6 + var_741_0
					end
				end

				arg_738_1.text_.text = var_741_3
				arg_738_1.typewritter.percent = 0

				arg_738_1.typewritter:SetDirty()
				arg_738_1:ShowNextGo(false)
				arg_738_1:RecordContent(arg_738_1.text_.text)
			end

			local var_741_7 = math.max(var_741_1, arg_738_1.talkMaxDuration)

			if var_741_0 <= arg_738_1.time_ and arg_738_1.time_ < var_741_0 + var_741_7 then
				arg_738_1.typewritter.percent = (arg_738_1.time_ - var_741_0) / var_741_7

				arg_738_1.typewritter:SetDirty()
			end

			if arg_738_1.time_ >= var_741_0 + var_741_7 and arg_738_1.time_ < var_741_0 + var_741_7 + arg_741_0 then
				arg_738_1.typewritter.percent = 1

				arg_738_1.typewritter:SetDirty()
				arg_738_1:ShowNextGo(true)
			end
		end
	end,
	Play417161180 = function(arg_742_0, arg_742_1)
		arg_742_1.time_ = 0
		arg_742_1.frameCnt_ = 0
		arg_742_1.state_ = "playing"
		arg_742_1.curTalkId_ = 417161180
		arg_742_1.duration_ = 1.3

		SetActive(arg_742_1.tipsGo_, false)

		function arg_742_1.onSingleLineFinish_()
			arg_742_1.onSingleLineUpdate_ = nil
			arg_742_1.onSingleLineFinish_ = nil
			arg_742_1.state_ = "waiting"
		end

		function arg_742_1.playNext_(arg_744_0)
			if arg_744_0 == 1 then
				arg_742_0:Play417161181(arg_742_1)
			end
		end

		function arg_742_1.onSingleLineUpdate_(arg_745_0)
			local var_745_0 = 0
			local var_745_1 = 0.125

			if var_745_0 < arg_742_1.time_ and arg_742_1.time_ <= var_745_0 + arg_745_0 then
				arg_742_1.talkMaxDuration = 0
				arg_742_1.dialogCg_.alpha = 1

				arg_742_1.dialog_:SetActive(true)
				SetActive(arg_742_1.leftNameGo_, true)

				local var_745_2 = arg_742_1:FormatText(StoryNameCfg[1125].name)

				arg_742_1.leftNameTxt_.text = var_745_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_742_1.leftNameTxt_.transform)

				arg_742_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_742_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_742_1:RecordName(arg_742_1.leftNameTxt_.text)
				SetActive(arg_742_1.iconTrs_.gameObject, false)
				arg_742_1.callingController_:SetSelectedState("normal")

				local var_745_3 = arg_742_1:GetWordFromCfg(417161180)
				local var_745_4 = arg_742_1:FormatText(var_745_3.content)

				arg_742_1.text_.text = var_745_4

				LuaForUtil.ClearLinePrefixSymbol(arg_742_1.text_)

				local var_745_5 = 5
				local var_745_6 = utf8.len(var_745_4)
				local var_745_7 = var_745_5 <= 0 and var_745_1 or var_745_1 * (var_745_6 / var_745_5)

				if var_745_7 > 0 and var_745_1 < var_745_7 then
					arg_742_1.talkMaxDuration = var_745_7

					if var_745_7 + var_745_0 > arg_742_1.duration_ then
						arg_742_1.duration_ = var_745_7 + var_745_0
					end
				end

				arg_742_1.text_.text = var_745_4
				arg_742_1.typewritter.percent = 0

				arg_742_1.typewritter:SetDirty()
				arg_742_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161180", "story_v_out_417161.awb") ~= 0 then
					local var_745_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161180", "story_v_out_417161.awb") / 1000

					if var_745_8 + var_745_0 > arg_742_1.duration_ then
						arg_742_1.duration_ = var_745_8 + var_745_0
					end

					if var_745_3.prefab_name ~= "" and arg_742_1.actors_[var_745_3.prefab_name] ~= nil then
						local var_745_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_742_1.actors_[var_745_3.prefab_name].transform, "story_v_out_417161", "417161180", "story_v_out_417161.awb")

						arg_742_1:RecordAudio("417161180", var_745_9)
						arg_742_1:RecordAudio("417161180", var_745_9)
					else
						arg_742_1:AudioAction("play", "voice", "story_v_out_417161", "417161180", "story_v_out_417161.awb")
					end

					arg_742_1:RecordHistoryTalkVoice("story_v_out_417161", "417161180", "story_v_out_417161.awb")
				end

				arg_742_1:RecordContent(arg_742_1.text_.text)
			end

			local var_745_10 = math.max(var_745_1, arg_742_1.talkMaxDuration)

			if var_745_0 <= arg_742_1.time_ and arg_742_1.time_ < var_745_0 + var_745_10 then
				arg_742_1.typewritter.percent = (arg_742_1.time_ - var_745_0) / var_745_10

				arg_742_1.typewritter:SetDirty()
			end

			if arg_742_1.time_ >= var_745_0 + var_745_10 and arg_742_1.time_ < var_745_0 + var_745_10 + arg_745_0 then
				arg_742_1.typewritter.percent = 1

				arg_742_1.typewritter:SetDirty()
				arg_742_1:ShowNextGo(true)
			end
		end
	end,
	Play417161181 = function(arg_746_0, arg_746_1)
		arg_746_1.time_ = 0
		arg_746_1.frameCnt_ = 0
		arg_746_1.state_ = "playing"
		arg_746_1.curTalkId_ = 417161181
		arg_746_1.duration_ = 3.93

		SetActive(arg_746_1.tipsGo_, false)

		function arg_746_1.onSingleLineFinish_()
			arg_746_1.onSingleLineUpdate_ = nil
			arg_746_1.onSingleLineFinish_ = nil
			arg_746_1.state_ = "waiting"
		end

		function arg_746_1.playNext_(arg_748_0)
			if arg_748_0 == 1 then
				arg_746_0:Play417161182(arg_746_1)
			end
		end

		function arg_746_1.onSingleLineUpdate_(arg_749_0)
			local var_749_0 = 0
			local var_749_1 = 0.425

			if var_749_0 < arg_746_1.time_ and arg_746_1.time_ <= var_749_0 + arg_749_0 then
				arg_746_1.talkMaxDuration = 0
				arg_746_1.dialogCg_.alpha = 1

				arg_746_1.dialog_:SetActive(true)
				SetActive(arg_746_1.leftNameGo_, true)

				local var_749_2 = arg_746_1:FormatText(StoryNameCfg[595].name)

				arg_746_1.leftNameTxt_.text = var_749_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_746_1.leftNameTxt_.transform)

				arg_746_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_746_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_746_1:RecordName(arg_746_1.leftNameTxt_.text)
				SetActive(arg_746_1.iconTrs_.gameObject, false)
				arg_746_1.callingController_:SetSelectedState("normal")

				local var_749_3 = arg_746_1:GetWordFromCfg(417161181)
				local var_749_4 = arg_746_1:FormatText(var_749_3.content)

				arg_746_1.text_.text = var_749_4

				LuaForUtil.ClearLinePrefixSymbol(arg_746_1.text_)

				local var_749_5 = 17
				local var_749_6 = utf8.len(var_749_4)
				local var_749_7 = var_749_5 <= 0 and var_749_1 or var_749_1 * (var_749_6 / var_749_5)

				if var_749_7 > 0 and var_749_1 < var_749_7 then
					arg_746_1.talkMaxDuration = var_749_7

					if var_749_7 + var_749_0 > arg_746_1.duration_ then
						arg_746_1.duration_ = var_749_7 + var_749_0
					end
				end

				arg_746_1.text_.text = var_749_4
				arg_746_1.typewritter.percent = 0

				arg_746_1.typewritter:SetDirty()
				arg_746_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161181", "story_v_out_417161.awb") ~= 0 then
					local var_749_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161181", "story_v_out_417161.awb") / 1000

					if var_749_8 + var_749_0 > arg_746_1.duration_ then
						arg_746_1.duration_ = var_749_8 + var_749_0
					end

					if var_749_3.prefab_name ~= "" and arg_746_1.actors_[var_749_3.prefab_name] ~= nil then
						local var_749_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_746_1.actors_[var_749_3.prefab_name].transform, "story_v_out_417161", "417161181", "story_v_out_417161.awb")

						arg_746_1:RecordAudio("417161181", var_749_9)
						arg_746_1:RecordAudio("417161181", var_749_9)
					else
						arg_746_1:AudioAction("play", "voice", "story_v_out_417161", "417161181", "story_v_out_417161.awb")
					end

					arg_746_1:RecordHistoryTalkVoice("story_v_out_417161", "417161181", "story_v_out_417161.awb")
				end

				arg_746_1:RecordContent(arg_746_1.text_.text)
			end

			local var_749_10 = math.max(var_749_1, arg_746_1.talkMaxDuration)

			if var_749_0 <= arg_746_1.time_ and arg_746_1.time_ < var_749_0 + var_749_10 then
				arg_746_1.typewritter.percent = (arg_746_1.time_ - var_749_0) / var_749_10

				arg_746_1.typewritter:SetDirty()
			end

			if arg_746_1.time_ >= var_749_0 + var_749_10 and arg_746_1.time_ < var_749_0 + var_749_10 + arg_749_0 then
				arg_746_1.typewritter.percent = 1

				arg_746_1.typewritter:SetDirty()
				arg_746_1:ShowNextGo(true)
			end
		end
	end,
	Play417161182 = function(arg_750_0, arg_750_1)
		arg_750_1.time_ = 0
		arg_750_1.frameCnt_ = 0
		arg_750_1.state_ = "playing"
		arg_750_1.curTalkId_ = 417161182
		arg_750_1.duration_ = 1.47

		SetActive(arg_750_1.tipsGo_, false)

		function arg_750_1.onSingleLineFinish_()
			arg_750_1.onSingleLineUpdate_ = nil
			arg_750_1.onSingleLineFinish_ = nil
			arg_750_1.state_ = "waiting"
		end

		function arg_750_1.playNext_(arg_752_0)
			if arg_752_0 == 1 then
				arg_750_0:Play417161183(arg_750_1)
			end
		end

		function arg_750_1.onSingleLineUpdate_(arg_753_0)
			local var_753_0 = 0
			local var_753_1 = 0.175

			if var_753_0 < arg_750_1.time_ and arg_750_1.time_ <= var_753_0 + arg_753_0 then
				arg_750_1.talkMaxDuration = 0
				arg_750_1.dialogCg_.alpha = 1

				arg_750_1.dialog_:SetActive(true)
				SetActive(arg_750_1.leftNameGo_, true)

				local var_753_2 = arg_750_1:FormatText(StoryNameCfg[1125].name)

				arg_750_1.leftNameTxt_.text = var_753_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_750_1.leftNameTxt_.transform)

				arg_750_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_750_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_750_1:RecordName(arg_750_1.leftNameTxt_.text)
				SetActive(arg_750_1.iconTrs_.gameObject, false)
				arg_750_1.callingController_:SetSelectedState("normal")

				local var_753_3 = arg_750_1:GetWordFromCfg(417161182)
				local var_753_4 = arg_750_1:FormatText(var_753_3.content)

				arg_750_1.text_.text = var_753_4

				LuaForUtil.ClearLinePrefixSymbol(arg_750_1.text_)

				local var_753_5 = 7
				local var_753_6 = utf8.len(var_753_4)
				local var_753_7 = var_753_5 <= 0 and var_753_1 or var_753_1 * (var_753_6 / var_753_5)

				if var_753_7 > 0 and var_753_1 < var_753_7 then
					arg_750_1.talkMaxDuration = var_753_7

					if var_753_7 + var_753_0 > arg_750_1.duration_ then
						arg_750_1.duration_ = var_753_7 + var_753_0
					end
				end

				arg_750_1.text_.text = var_753_4
				arg_750_1.typewritter.percent = 0

				arg_750_1.typewritter:SetDirty()
				arg_750_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161182", "story_v_out_417161.awb") ~= 0 then
					local var_753_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161182", "story_v_out_417161.awb") / 1000

					if var_753_8 + var_753_0 > arg_750_1.duration_ then
						arg_750_1.duration_ = var_753_8 + var_753_0
					end

					if var_753_3.prefab_name ~= "" and arg_750_1.actors_[var_753_3.prefab_name] ~= nil then
						local var_753_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_750_1.actors_[var_753_3.prefab_name].transform, "story_v_out_417161", "417161182", "story_v_out_417161.awb")

						arg_750_1:RecordAudio("417161182", var_753_9)
						arg_750_1:RecordAudio("417161182", var_753_9)
					else
						arg_750_1:AudioAction("play", "voice", "story_v_out_417161", "417161182", "story_v_out_417161.awb")
					end

					arg_750_1:RecordHistoryTalkVoice("story_v_out_417161", "417161182", "story_v_out_417161.awb")
				end

				arg_750_1:RecordContent(arg_750_1.text_.text)
			end

			local var_753_10 = math.max(var_753_1, arg_750_1.talkMaxDuration)

			if var_753_0 <= arg_750_1.time_ and arg_750_1.time_ < var_753_0 + var_753_10 then
				arg_750_1.typewritter.percent = (arg_750_1.time_ - var_753_0) / var_753_10

				arg_750_1.typewritter:SetDirty()
			end

			if arg_750_1.time_ >= var_753_0 + var_753_10 and arg_750_1.time_ < var_753_0 + var_753_10 + arg_753_0 then
				arg_750_1.typewritter.percent = 1

				arg_750_1.typewritter:SetDirty()
				arg_750_1:ShowNextGo(true)
			end
		end
	end,
	Play417161183 = function(arg_754_0, arg_754_1)
		arg_754_1.time_ = 0
		arg_754_1.frameCnt_ = 0
		arg_754_1.state_ = "playing"
		arg_754_1.curTalkId_ = 417161183
		arg_754_1.duration_ = 3.33

		SetActive(arg_754_1.tipsGo_, false)

		function arg_754_1.onSingleLineFinish_()
			arg_754_1.onSingleLineUpdate_ = nil
			arg_754_1.onSingleLineFinish_ = nil
			arg_754_1.state_ = "waiting"
		end

		function arg_754_1.playNext_(arg_756_0)
			if arg_756_0 == 1 then
				arg_754_0:Play417161184(arg_754_1)
			end
		end

		function arg_754_1.onSingleLineUpdate_(arg_757_0)
			local var_757_0 = 0
			local var_757_1 = 0.35

			if var_757_0 < arg_754_1.time_ and arg_754_1.time_ <= var_757_0 + arg_757_0 then
				arg_754_1.talkMaxDuration = 0
				arg_754_1.dialogCg_.alpha = 1

				arg_754_1.dialog_:SetActive(true)
				SetActive(arg_754_1.leftNameGo_, true)

				local var_757_2 = arg_754_1:FormatText(StoryNameCfg[1125].name)

				arg_754_1.leftNameTxt_.text = var_757_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_754_1.leftNameTxt_.transform)

				arg_754_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_754_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_754_1:RecordName(arg_754_1.leftNameTxt_.text)
				SetActive(arg_754_1.iconTrs_.gameObject, false)
				arg_754_1.callingController_:SetSelectedState("normal")

				local var_757_3 = arg_754_1:GetWordFromCfg(417161183)
				local var_757_4 = arg_754_1:FormatText(var_757_3.content)

				arg_754_1.text_.text = var_757_4

				LuaForUtil.ClearLinePrefixSymbol(arg_754_1.text_)

				local var_757_5 = 14
				local var_757_6 = utf8.len(var_757_4)
				local var_757_7 = var_757_5 <= 0 and var_757_1 or var_757_1 * (var_757_6 / var_757_5)

				if var_757_7 > 0 and var_757_1 < var_757_7 then
					arg_754_1.talkMaxDuration = var_757_7

					if var_757_7 + var_757_0 > arg_754_1.duration_ then
						arg_754_1.duration_ = var_757_7 + var_757_0
					end
				end

				arg_754_1.text_.text = var_757_4
				arg_754_1.typewritter.percent = 0

				arg_754_1.typewritter:SetDirty()
				arg_754_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161183", "story_v_out_417161.awb") ~= 0 then
					local var_757_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161183", "story_v_out_417161.awb") / 1000

					if var_757_8 + var_757_0 > arg_754_1.duration_ then
						arg_754_1.duration_ = var_757_8 + var_757_0
					end

					if var_757_3.prefab_name ~= "" and arg_754_1.actors_[var_757_3.prefab_name] ~= nil then
						local var_757_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_754_1.actors_[var_757_3.prefab_name].transform, "story_v_out_417161", "417161183", "story_v_out_417161.awb")

						arg_754_1:RecordAudio("417161183", var_757_9)
						arg_754_1:RecordAudio("417161183", var_757_9)
					else
						arg_754_1:AudioAction("play", "voice", "story_v_out_417161", "417161183", "story_v_out_417161.awb")
					end

					arg_754_1:RecordHistoryTalkVoice("story_v_out_417161", "417161183", "story_v_out_417161.awb")
				end

				arg_754_1:RecordContent(arg_754_1.text_.text)
			end

			local var_757_10 = math.max(var_757_1, arg_754_1.talkMaxDuration)

			if var_757_0 <= arg_754_1.time_ and arg_754_1.time_ < var_757_0 + var_757_10 then
				arg_754_1.typewritter.percent = (arg_754_1.time_ - var_757_0) / var_757_10

				arg_754_1.typewritter:SetDirty()
			end

			if arg_754_1.time_ >= var_757_0 + var_757_10 and arg_754_1.time_ < var_757_0 + var_757_10 + arg_757_0 then
				arg_754_1.typewritter.percent = 1

				arg_754_1.typewritter:SetDirty()
				arg_754_1:ShowNextGo(true)
			end
		end
	end,
	Play417161184 = function(arg_758_0, arg_758_1)
		arg_758_1.time_ = 0
		arg_758_1.frameCnt_ = 0
		arg_758_1.state_ = "playing"
		arg_758_1.curTalkId_ = 417161184
		arg_758_1.duration_ = 5.2

		SetActive(arg_758_1.tipsGo_, false)

		function arg_758_1.onSingleLineFinish_()
			arg_758_1.onSingleLineUpdate_ = nil
			arg_758_1.onSingleLineFinish_ = nil
			arg_758_1.state_ = "waiting"
		end

		function arg_758_1.playNext_(arg_760_0)
			if arg_760_0 == 1 then
				arg_758_0:Play417161185(arg_758_1)
			end
		end

		function arg_758_1.onSingleLineUpdate_(arg_761_0)
			local var_761_0 = 0
			local var_761_1 = 0.325

			if var_761_0 < arg_758_1.time_ and arg_758_1.time_ <= var_761_0 + arg_761_0 then
				arg_758_1.talkMaxDuration = 0
				arg_758_1.dialogCg_.alpha = 1

				arg_758_1.dialog_:SetActive(true)
				SetActive(arg_758_1.leftNameGo_, true)

				local var_761_2 = arg_758_1:FormatText(StoryNameCfg[595].name)

				arg_758_1.leftNameTxt_.text = var_761_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_758_1.leftNameTxt_.transform)

				arg_758_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_758_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_758_1:RecordName(arg_758_1.leftNameTxt_.text)
				SetActive(arg_758_1.iconTrs_.gameObject, false)
				arg_758_1.callingController_:SetSelectedState("normal")

				local var_761_3 = arg_758_1:GetWordFromCfg(417161184)
				local var_761_4 = arg_758_1:FormatText(var_761_3.content)

				arg_758_1.text_.text = var_761_4

				LuaForUtil.ClearLinePrefixSymbol(arg_758_1.text_)

				local var_761_5 = 13
				local var_761_6 = utf8.len(var_761_4)
				local var_761_7 = var_761_5 <= 0 and var_761_1 or var_761_1 * (var_761_6 / var_761_5)

				if var_761_7 > 0 and var_761_1 < var_761_7 then
					arg_758_1.talkMaxDuration = var_761_7

					if var_761_7 + var_761_0 > arg_758_1.duration_ then
						arg_758_1.duration_ = var_761_7 + var_761_0
					end
				end

				arg_758_1.text_.text = var_761_4
				arg_758_1.typewritter.percent = 0

				arg_758_1.typewritter:SetDirty()
				arg_758_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161184", "story_v_out_417161.awb") ~= 0 then
					local var_761_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161184", "story_v_out_417161.awb") / 1000

					if var_761_8 + var_761_0 > arg_758_1.duration_ then
						arg_758_1.duration_ = var_761_8 + var_761_0
					end

					if var_761_3.prefab_name ~= "" and arg_758_1.actors_[var_761_3.prefab_name] ~= nil then
						local var_761_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_758_1.actors_[var_761_3.prefab_name].transform, "story_v_out_417161", "417161184", "story_v_out_417161.awb")

						arg_758_1:RecordAudio("417161184", var_761_9)
						arg_758_1:RecordAudio("417161184", var_761_9)
					else
						arg_758_1:AudioAction("play", "voice", "story_v_out_417161", "417161184", "story_v_out_417161.awb")
					end

					arg_758_1:RecordHistoryTalkVoice("story_v_out_417161", "417161184", "story_v_out_417161.awb")
				end

				arg_758_1:RecordContent(arg_758_1.text_.text)
			end

			local var_761_10 = math.max(var_761_1, arg_758_1.talkMaxDuration)

			if var_761_0 <= arg_758_1.time_ and arg_758_1.time_ < var_761_0 + var_761_10 then
				arg_758_1.typewritter.percent = (arg_758_1.time_ - var_761_0) / var_761_10

				arg_758_1.typewritter:SetDirty()
			end

			if arg_758_1.time_ >= var_761_0 + var_761_10 and arg_758_1.time_ < var_761_0 + var_761_10 + arg_761_0 then
				arg_758_1.typewritter.percent = 1

				arg_758_1.typewritter:SetDirty()
				arg_758_1:ShowNextGo(true)
			end
		end
	end,
	Play417161185 = function(arg_762_0, arg_762_1)
		arg_762_1.time_ = 0
		arg_762_1.frameCnt_ = 0
		arg_762_1.state_ = "playing"
		arg_762_1.curTalkId_ = 417161185
		arg_762_1.duration_ = 1.97

		SetActive(arg_762_1.tipsGo_, false)

		function arg_762_1.onSingleLineFinish_()
			arg_762_1.onSingleLineUpdate_ = nil
			arg_762_1.onSingleLineFinish_ = nil
			arg_762_1.state_ = "waiting"
		end

		function arg_762_1.playNext_(arg_764_0)
			if arg_764_0 == 1 then
				arg_762_0:Play417161186(arg_762_1)
			end
		end

		function arg_762_1.onSingleLineUpdate_(arg_765_0)
			local var_765_0 = 0
			local var_765_1 = 0.125

			if var_765_0 < arg_762_1.time_ and arg_762_1.time_ <= var_765_0 + arg_765_0 then
				arg_762_1.talkMaxDuration = 0
				arg_762_1.dialogCg_.alpha = 1

				arg_762_1.dialog_:SetActive(true)
				SetActive(arg_762_1.leftNameGo_, true)

				local var_765_2 = arg_762_1:FormatText(StoryNameCfg[1125].name)

				arg_762_1.leftNameTxt_.text = var_765_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_762_1.leftNameTxt_.transform)

				arg_762_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_762_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_762_1:RecordName(arg_762_1.leftNameTxt_.text)
				SetActive(arg_762_1.iconTrs_.gameObject, false)
				arg_762_1.callingController_:SetSelectedState("normal")

				local var_765_3 = arg_762_1:GetWordFromCfg(417161185)
				local var_765_4 = arg_762_1:FormatText(var_765_3.content)

				arg_762_1.text_.text = var_765_4

				LuaForUtil.ClearLinePrefixSymbol(arg_762_1.text_)

				local var_765_5 = 5
				local var_765_6 = utf8.len(var_765_4)
				local var_765_7 = var_765_5 <= 0 and var_765_1 or var_765_1 * (var_765_6 / var_765_5)

				if var_765_7 > 0 and var_765_1 < var_765_7 then
					arg_762_1.talkMaxDuration = var_765_7

					if var_765_7 + var_765_0 > arg_762_1.duration_ then
						arg_762_1.duration_ = var_765_7 + var_765_0
					end
				end

				arg_762_1.text_.text = var_765_4
				arg_762_1.typewritter.percent = 0

				arg_762_1.typewritter:SetDirty()
				arg_762_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161185", "story_v_out_417161.awb") ~= 0 then
					local var_765_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161185", "story_v_out_417161.awb") / 1000

					if var_765_8 + var_765_0 > arg_762_1.duration_ then
						arg_762_1.duration_ = var_765_8 + var_765_0
					end

					if var_765_3.prefab_name ~= "" and arg_762_1.actors_[var_765_3.prefab_name] ~= nil then
						local var_765_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_762_1.actors_[var_765_3.prefab_name].transform, "story_v_out_417161", "417161185", "story_v_out_417161.awb")

						arg_762_1:RecordAudio("417161185", var_765_9)
						arg_762_1:RecordAudio("417161185", var_765_9)
					else
						arg_762_1:AudioAction("play", "voice", "story_v_out_417161", "417161185", "story_v_out_417161.awb")
					end

					arg_762_1:RecordHistoryTalkVoice("story_v_out_417161", "417161185", "story_v_out_417161.awb")
				end

				arg_762_1:RecordContent(arg_762_1.text_.text)
			end

			local var_765_10 = math.max(var_765_1, arg_762_1.talkMaxDuration)

			if var_765_0 <= arg_762_1.time_ and arg_762_1.time_ < var_765_0 + var_765_10 then
				arg_762_1.typewritter.percent = (arg_762_1.time_ - var_765_0) / var_765_10

				arg_762_1.typewritter:SetDirty()
			end

			if arg_762_1.time_ >= var_765_0 + var_765_10 and arg_762_1.time_ < var_765_0 + var_765_10 + arg_765_0 then
				arg_762_1.typewritter.percent = 1

				arg_762_1.typewritter:SetDirty()
				arg_762_1:ShowNextGo(true)
			end
		end
	end,
	Play417161186 = function(arg_766_0, arg_766_1)
		arg_766_1.time_ = 0
		arg_766_1.frameCnt_ = 0
		arg_766_1.state_ = "playing"
		arg_766_1.curTalkId_ = 417161186
		arg_766_1.duration_ = 3.7

		SetActive(arg_766_1.tipsGo_, false)

		function arg_766_1.onSingleLineFinish_()
			arg_766_1.onSingleLineUpdate_ = nil
			arg_766_1.onSingleLineFinish_ = nil
			arg_766_1.state_ = "waiting"
		end

		function arg_766_1.playNext_(arg_768_0)
			if arg_768_0 == 1 then
				arg_766_0:Play417161187(arg_766_1)
			end
		end

		function arg_766_1.onSingleLineUpdate_(arg_769_0)
			local var_769_0 = 0
			local var_769_1 = 0.375

			if var_769_0 < arg_766_1.time_ and arg_766_1.time_ <= var_769_0 + arg_769_0 then
				arg_766_1.talkMaxDuration = 0
				arg_766_1.dialogCg_.alpha = 1

				arg_766_1.dialog_:SetActive(true)
				SetActive(arg_766_1.leftNameGo_, true)

				local var_769_2 = arg_766_1:FormatText(StoryNameCfg[595].name)

				arg_766_1.leftNameTxt_.text = var_769_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_766_1.leftNameTxt_.transform)

				arg_766_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_766_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_766_1:RecordName(arg_766_1.leftNameTxt_.text)
				SetActive(arg_766_1.iconTrs_.gameObject, false)
				arg_766_1.callingController_:SetSelectedState("normal")

				local var_769_3 = arg_766_1:GetWordFromCfg(417161186)
				local var_769_4 = arg_766_1:FormatText(var_769_3.content)

				arg_766_1.text_.text = var_769_4

				LuaForUtil.ClearLinePrefixSymbol(arg_766_1.text_)

				local var_769_5 = 15
				local var_769_6 = utf8.len(var_769_4)
				local var_769_7 = var_769_5 <= 0 and var_769_1 or var_769_1 * (var_769_6 / var_769_5)

				if var_769_7 > 0 and var_769_1 < var_769_7 then
					arg_766_1.talkMaxDuration = var_769_7

					if var_769_7 + var_769_0 > arg_766_1.duration_ then
						arg_766_1.duration_ = var_769_7 + var_769_0
					end
				end

				arg_766_1.text_.text = var_769_4
				arg_766_1.typewritter.percent = 0

				arg_766_1.typewritter:SetDirty()
				arg_766_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161186", "story_v_out_417161.awb") ~= 0 then
					local var_769_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161186", "story_v_out_417161.awb") / 1000

					if var_769_8 + var_769_0 > arg_766_1.duration_ then
						arg_766_1.duration_ = var_769_8 + var_769_0
					end

					if var_769_3.prefab_name ~= "" and arg_766_1.actors_[var_769_3.prefab_name] ~= nil then
						local var_769_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_766_1.actors_[var_769_3.prefab_name].transform, "story_v_out_417161", "417161186", "story_v_out_417161.awb")

						arg_766_1:RecordAudio("417161186", var_769_9)
						arg_766_1:RecordAudio("417161186", var_769_9)
					else
						arg_766_1:AudioAction("play", "voice", "story_v_out_417161", "417161186", "story_v_out_417161.awb")
					end

					arg_766_1:RecordHistoryTalkVoice("story_v_out_417161", "417161186", "story_v_out_417161.awb")
				end

				arg_766_1:RecordContent(arg_766_1.text_.text)
			end

			local var_769_10 = math.max(var_769_1, arg_766_1.talkMaxDuration)

			if var_769_0 <= arg_766_1.time_ and arg_766_1.time_ < var_769_0 + var_769_10 then
				arg_766_1.typewritter.percent = (arg_766_1.time_ - var_769_0) / var_769_10

				arg_766_1.typewritter:SetDirty()
			end

			if arg_766_1.time_ >= var_769_0 + var_769_10 and arg_766_1.time_ < var_769_0 + var_769_10 + arg_769_0 then
				arg_766_1.typewritter.percent = 1

				arg_766_1.typewritter:SetDirty()
				arg_766_1:ShowNextGo(true)
			end
		end
	end,
	Play417161187 = function(arg_770_0, arg_770_1)
		arg_770_1.time_ = 0
		arg_770_1.frameCnt_ = 0
		arg_770_1.state_ = "playing"
		arg_770_1.curTalkId_ = 417161187
		arg_770_1.duration_ = 5

		SetActive(arg_770_1.tipsGo_, false)

		function arg_770_1.onSingleLineFinish_()
			arg_770_1.onSingleLineUpdate_ = nil
			arg_770_1.onSingleLineFinish_ = nil
			arg_770_1.state_ = "waiting"
		end

		function arg_770_1.playNext_(arg_772_0)
			if arg_772_0 == 1 then
				arg_770_0:Play417161188(arg_770_1)
			end
		end

		function arg_770_1.onSingleLineUpdate_(arg_773_0)
			local var_773_0 = 0.05
			local var_773_1 = 1

			if var_773_0 < arg_770_1.time_ and arg_770_1.time_ <= var_773_0 + arg_773_0 then
				local var_773_2 = "play"
				local var_773_3 = "effect"

				arg_770_1:AudioAction(var_773_2, var_773_3, "se_story_1311", "se_story_1311_taxi02", "")
			end

			local var_773_4 = 0
			local var_773_5 = 1.1

			if var_773_4 < arg_770_1.time_ and arg_770_1.time_ <= var_773_4 + arg_773_0 then
				arg_770_1.talkMaxDuration = 0
				arg_770_1.dialogCg_.alpha = 1

				arg_770_1.dialog_:SetActive(true)
				SetActive(arg_770_1.leftNameGo_, false)

				arg_770_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_770_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_770_1:RecordName(arg_770_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_770_1.iconTrs_.gameObject, false)
				arg_770_1.callingController_:SetSelectedState("normal")

				local var_773_6 = arg_770_1:GetWordFromCfg(417161187)
				local var_773_7 = arg_770_1:FormatText(var_773_6.content)

				arg_770_1.text_.text = var_773_7

				LuaForUtil.ClearLinePrefixSymbol(arg_770_1.text_)

				local var_773_8 = 44
				local var_773_9 = utf8.len(var_773_7)
				local var_773_10 = var_773_8 <= 0 and var_773_5 or var_773_5 * (var_773_9 / var_773_8)

				if var_773_10 > 0 and var_773_5 < var_773_10 then
					arg_770_1.talkMaxDuration = var_773_10

					if var_773_10 + var_773_4 > arg_770_1.duration_ then
						arg_770_1.duration_ = var_773_10 + var_773_4
					end
				end

				arg_770_1.text_.text = var_773_7
				arg_770_1.typewritter.percent = 0

				arg_770_1.typewritter:SetDirty()
				arg_770_1:ShowNextGo(false)
				arg_770_1:RecordContent(arg_770_1.text_.text)
			end

			local var_773_11 = math.max(var_773_5, arg_770_1.talkMaxDuration)

			if var_773_4 <= arg_770_1.time_ and arg_770_1.time_ < var_773_4 + var_773_11 then
				arg_770_1.typewritter.percent = (arg_770_1.time_ - var_773_4) / var_773_11

				arg_770_1.typewritter:SetDirty()
			end

			if arg_770_1.time_ >= var_773_4 + var_773_11 and arg_770_1.time_ < var_773_4 + var_773_11 + arg_773_0 then
				arg_770_1.typewritter.percent = 1

				arg_770_1.typewritter:SetDirty()
				arg_770_1:ShowNextGo(true)
			end
		end
	end,
	Play417161188 = function(arg_774_0, arg_774_1)
		arg_774_1.time_ = 0
		arg_774_1.frameCnt_ = 0
		arg_774_1.state_ = "playing"
		arg_774_1.curTalkId_ = 417161188
		arg_774_1.duration_ = 5

		SetActive(arg_774_1.tipsGo_, false)

		function arg_774_1.onSingleLineFinish_()
			arg_774_1.onSingleLineUpdate_ = nil
			arg_774_1.onSingleLineFinish_ = nil
			arg_774_1.state_ = "waiting"
		end

		function arg_774_1.playNext_(arg_776_0)
			if arg_776_0 == 1 then
				arg_774_0:Play417161189(arg_774_1)
			end
		end

		function arg_774_1.onSingleLineUpdate_(arg_777_0)
			local var_777_0 = 0
			local var_777_1 = 0.75

			if var_777_0 < arg_774_1.time_ and arg_774_1.time_ <= var_777_0 + arg_777_0 then
				arg_774_1.talkMaxDuration = 0
				arg_774_1.dialogCg_.alpha = 1

				arg_774_1.dialog_:SetActive(true)
				SetActive(arg_774_1.leftNameGo_, false)

				arg_774_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_774_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_774_1:RecordName(arg_774_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_774_1.iconTrs_.gameObject, false)
				arg_774_1.callingController_:SetSelectedState("normal")

				local var_777_2 = arg_774_1:GetWordFromCfg(417161188)
				local var_777_3 = arg_774_1:FormatText(var_777_2.content)

				arg_774_1.text_.text = var_777_3

				LuaForUtil.ClearLinePrefixSymbol(arg_774_1.text_)

				local var_777_4 = 30
				local var_777_5 = utf8.len(var_777_3)
				local var_777_6 = var_777_4 <= 0 and var_777_1 or var_777_1 * (var_777_5 / var_777_4)

				if var_777_6 > 0 and var_777_1 < var_777_6 then
					arg_774_1.talkMaxDuration = var_777_6

					if var_777_6 + var_777_0 > arg_774_1.duration_ then
						arg_774_1.duration_ = var_777_6 + var_777_0
					end
				end

				arg_774_1.text_.text = var_777_3
				arg_774_1.typewritter.percent = 0

				arg_774_1.typewritter:SetDirty()
				arg_774_1:ShowNextGo(false)
				arg_774_1:RecordContent(arg_774_1.text_.text)
			end

			local var_777_7 = math.max(var_777_1, arg_774_1.talkMaxDuration)

			if var_777_0 <= arg_774_1.time_ and arg_774_1.time_ < var_777_0 + var_777_7 then
				arg_774_1.typewritter.percent = (arg_774_1.time_ - var_777_0) / var_777_7

				arg_774_1.typewritter:SetDirty()
			end

			if arg_774_1.time_ >= var_777_0 + var_777_7 and arg_774_1.time_ < var_777_0 + var_777_7 + arg_777_0 then
				arg_774_1.typewritter.percent = 1

				arg_774_1.typewritter:SetDirty()
				arg_774_1:ShowNextGo(true)
			end
		end
	end,
	Play417161189 = function(arg_778_0, arg_778_1)
		arg_778_1.time_ = 0
		arg_778_1.frameCnt_ = 0
		arg_778_1.state_ = "playing"
		arg_778_1.curTalkId_ = 417161189
		arg_778_1.duration_ = 1.23

		SetActive(arg_778_1.tipsGo_, false)

		function arg_778_1.onSingleLineFinish_()
			arg_778_1.onSingleLineUpdate_ = nil
			arg_778_1.onSingleLineFinish_ = nil
			arg_778_1.state_ = "waiting"
		end

		function arg_778_1.playNext_(arg_780_0)
			if arg_780_0 == 1 then
				arg_778_0:Play417161190(arg_778_1)
			end
		end

		function arg_778_1.onSingleLineUpdate_(arg_781_0)
			local var_781_0 = 0
			local var_781_1 = 0.1

			if var_781_0 < arg_778_1.time_ and arg_778_1.time_ <= var_781_0 + arg_781_0 then
				arg_778_1.talkMaxDuration = 0
				arg_778_1.dialogCg_.alpha = 1

				arg_778_1.dialog_:SetActive(true)
				SetActive(arg_778_1.leftNameGo_, true)

				local var_781_2 = arg_778_1:FormatText(StoryNameCfg[1125].name)

				arg_778_1.leftNameTxt_.text = var_781_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_778_1.leftNameTxt_.transform)

				arg_778_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_778_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_778_1:RecordName(arg_778_1.leftNameTxt_.text)
				SetActive(arg_778_1.iconTrs_.gameObject, false)
				arg_778_1.callingController_:SetSelectedState("normal")

				local var_781_3 = arg_778_1:GetWordFromCfg(417161189)
				local var_781_4 = arg_778_1:FormatText(var_781_3.content)

				arg_778_1.text_.text = var_781_4

				LuaForUtil.ClearLinePrefixSymbol(arg_778_1.text_)

				local var_781_5 = 4
				local var_781_6 = utf8.len(var_781_4)
				local var_781_7 = var_781_5 <= 0 and var_781_1 or var_781_1 * (var_781_6 / var_781_5)

				if var_781_7 > 0 and var_781_1 < var_781_7 then
					arg_778_1.talkMaxDuration = var_781_7

					if var_781_7 + var_781_0 > arg_778_1.duration_ then
						arg_778_1.duration_ = var_781_7 + var_781_0
					end
				end

				arg_778_1.text_.text = var_781_4
				arg_778_1.typewritter.percent = 0

				arg_778_1.typewritter:SetDirty()
				arg_778_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161189", "story_v_out_417161.awb") ~= 0 then
					local var_781_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161189", "story_v_out_417161.awb") / 1000

					if var_781_8 + var_781_0 > arg_778_1.duration_ then
						arg_778_1.duration_ = var_781_8 + var_781_0
					end

					if var_781_3.prefab_name ~= "" and arg_778_1.actors_[var_781_3.prefab_name] ~= nil then
						local var_781_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_778_1.actors_[var_781_3.prefab_name].transform, "story_v_out_417161", "417161189", "story_v_out_417161.awb")

						arg_778_1:RecordAudio("417161189", var_781_9)
						arg_778_1:RecordAudio("417161189", var_781_9)
					else
						arg_778_1:AudioAction("play", "voice", "story_v_out_417161", "417161189", "story_v_out_417161.awb")
					end

					arg_778_1:RecordHistoryTalkVoice("story_v_out_417161", "417161189", "story_v_out_417161.awb")
				end

				arg_778_1:RecordContent(arg_778_1.text_.text)
			end

			local var_781_10 = math.max(var_781_1, arg_778_1.talkMaxDuration)

			if var_781_0 <= arg_778_1.time_ and arg_778_1.time_ < var_781_0 + var_781_10 then
				arg_778_1.typewritter.percent = (arg_778_1.time_ - var_781_0) / var_781_10

				arg_778_1.typewritter:SetDirty()
			end

			if arg_778_1.time_ >= var_781_0 + var_781_10 and arg_778_1.time_ < var_781_0 + var_781_10 + arg_781_0 then
				arg_778_1.typewritter.percent = 1

				arg_778_1.typewritter:SetDirty()
				arg_778_1:ShowNextGo(true)
			end
		end
	end,
	Play417161190 = function(arg_782_0, arg_782_1)
		arg_782_1.time_ = 0
		arg_782_1.frameCnt_ = 0
		arg_782_1.state_ = "playing"
		arg_782_1.curTalkId_ = 417161190
		arg_782_1.duration_ = 1

		SetActive(arg_782_1.tipsGo_, false)

		function arg_782_1.onSingleLineFinish_()
			arg_782_1.onSingleLineUpdate_ = nil
			arg_782_1.onSingleLineFinish_ = nil
			arg_782_1.state_ = "waiting"
		end

		function arg_782_1.playNext_(arg_784_0)
			if arg_784_0 == 1 then
				arg_782_0:Play417161191(arg_782_1)
			end
		end

		function arg_782_1.onSingleLineUpdate_(arg_785_0)
			local var_785_0 = 0
			local var_785_1 = 0.133333333333333

			if var_785_0 < arg_782_1.time_ and arg_782_1.time_ <= var_785_0 + arg_785_0 then
				arg_782_1.talkMaxDuration = 0
				arg_782_1.dialogCg_.alpha = 1

				arg_782_1.dialog_:SetActive(true)
				SetActive(arg_782_1.leftNameGo_, true)

				local var_785_2 = arg_782_1:FormatText(StoryNameCfg[595].name)

				arg_782_1.leftNameTxt_.text = var_785_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_782_1.leftNameTxt_.transform)

				arg_782_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_782_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_782_1:RecordName(arg_782_1.leftNameTxt_.text)
				SetActive(arg_782_1.iconTrs_.gameObject, false)
				arg_782_1.callingController_:SetSelectedState("normal")

				local var_785_3 = arg_782_1:GetWordFromCfg(417161190)
				local var_785_4 = arg_782_1:FormatText(var_785_3.content)

				arg_782_1.text_.text = var_785_4

				LuaForUtil.ClearLinePrefixSymbol(arg_782_1.text_)

				local var_785_5 = 3
				local var_785_6 = utf8.len(var_785_4)
				local var_785_7 = var_785_5 <= 0 and var_785_1 or var_785_1 * (var_785_6 / var_785_5)

				if var_785_7 > 0 and var_785_1 < var_785_7 then
					arg_782_1.talkMaxDuration = var_785_7

					if var_785_7 + var_785_0 > arg_782_1.duration_ then
						arg_782_1.duration_ = var_785_7 + var_785_0
					end
				end

				arg_782_1.text_.text = var_785_4
				arg_782_1.typewritter.percent = 0

				arg_782_1.typewritter:SetDirty()
				arg_782_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161190", "story_v_out_417161.awb") ~= 0 then
					local var_785_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161190", "story_v_out_417161.awb") / 1000

					if var_785_8 + var_785_0 > arg_782_1.duration_ then
						arg_782_1.duration_ = var_785_8 + var_785_0
					end

					if var_785_3.prefab_name ~= "" and arg_782_1.actors_[var_785_3.prefab_name] ~= nil then
						local var_785_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_782_1.actors_[var_785_3.prefab_name].transform, "story_v_out_417161", "417161190", "story_v_out_417161.awb")

						arg_782_1:RecordAudio("417161190", var_785_9)
						arg_782_1:RecordAudio("417161190", var_785_9)
					else
						arg_782_1:AudioAction("play", "voice", "story_v_out_417161", "417161190", "story_v_out_417161.awb")
					end

					arg_782_1:RecordHistoryTalkVoice("story_v_out_417161", "417161190", "story_v_out_417161.awb")
				end

				arg_782_1:RecordContent(arg_782_1.text_.text)
			end

			local var_785_10 = math.max(var_785_1, arg_782_1.talkMaxDuration)

			if var_785_0 <= arg_782_1.time_ and arg_782_1.time_ < var_785_0 + var_785_10 then
				arg_782_1.typewritter.percent = (arg_782_1.time_ - var_785_0) / var_785_10

				arg_782_1.typewritter:SetDirty()
			end

			if arg_782_1.time_ >= var_785_0 + var_785_10 and arg_782_1.time_ < var_785_0 + var_785_10 + arg_785_0 then
				arg_782_1.typewritter.percent = 1

				arg_782_1.typewritter:SetDirty()
				arg_782_1:ShowNextGo(true)
			end
		end
	end,
	Play417161191 = function(arg_786_0, arg_786_1)
		arg_786_1.time_ = 0
		arg_786_1.frameCnt_ = 0
		arg_786_1.state_ = "playing"
		arg_786_1.curTalkId_ = 417161191
		arg_786_1.duration_ = 3.8

		SetActive(arg_786_1.tipsGo_, false)

		function arg_786_1.onSingleLineFinish_()
			arg_786_1.onSingleLineUpdate_ = nil
			arg_786_1.onSingleLineFinish_ = nil
			arg_786_1.state_ = "waiting"
		end

		function arg_786_1.playNext_(arg_788_0)
			if arg_788_0 == 1 then
				arg_786_0:Play417161192(arg_786_1)
			end
		end

		function arg_786_1.onSingleLineUpdate_(arg_789_0)
			local var_789_0 = 0
			local var_789_1 = 0.325

			if var_789_0 < arg_786_1.time_ and arg_786_1.time_ <= var_789_0 + arg_789_0 then
				arg_786_1.talkMaxDuration = 0
				arg_786_1.dialogCg_.alpha = 1

				arg_786_1.dialog_:SetActive(true)
				SetActive(arg_786_1.leftNameGo_, true)

				local var_789_2 = arg_786_1:FormatText(StoryNameCfg[1125].name)

				arg_786_1.leftNameTxt_.text = var_789_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_786_1.leftNameTxt_.transform)

				arg_786_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_786_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_786_1:RecordName(arg_786_1.leftNameTxt_.text)
				SetActive(arg_786_1.iconTrs_.gameObject, false)
				arg_786_1.callingController_:SetSelectedState("normal")

				local var_789_3 = arg_786_1:GetWordFromCfg(417161191)
				local var_789_4 = arg_786_1:FormatText(var_789_3.content)

				arg_786_1.text_.text = var_789_4

				LuaForUtil.ClearLinePrefixSymbol(arg_786_1.text_)

				local var_789_5 = 13
				local var_789_6 = utf8.len(var_789_4)
				local var_789_7 = var_789_5 <= 0 and var_789_1 or var_789_1 * (var_789_6 / var_789_5)

				if var_789_7 > 0 and var_789_1 < var_789_7 then
					arg_786_1.talkMaxDuration = var_789_7

					if var_789_7 + var_789_0 > arg_786_1.duration_ then
						arg_786_1.duration_ = var_789_7 + var_789_0
					end
				end

				arg_786_1.text_.text = var_789_4
				arg_786_1.typewritter.percent = 0

				arg_786_1.typewritter:SetDirty()
				arg_786_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161191", "story_v_out_417161.awb") ~= 0 then
					local var_789_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161191", "story_v_out_417161.awb") / 1000

					if var_789_8 + var_789_0 > arg_786_1.duration_ then
						arg_786_1.duration_ = var_789_8 + var_789_0
					end

					if var_789_3.prefab_name ~= "" and arg_786_1.actors_[var_789_3.prefab_name] ~= nil then
						local var_789_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_786_1.actors_[var_789_3.prefab_name].transform, "story_v_out_417161", "417161191", "story_v_out_417161.awb")

						arg_786_1:RecordAudio("417161191", var_789_9)
						arg_786_1:RecordAudio("417161191", var_789_9)
					else
						arg_786_1:AudioAction("play", "voice", "story_v_out_417161", "417161191", "story_v_out_417161.awb")
					end

					arg_786_1:RecordHistoryTalkVoice("story_v_out_417161", "417161191", "story_v_out_417161.awb")
				end

				arg_786_1:RecordContent(arg_786_1.text_.text)
			end

			local var_789_10 = math.max(var_789_1, arg_786_1.talkMaxDuration)

			if var_789_0 <= arg_786_1.time_ and arg_786_1.time_ < var_789_0 + var_789_10 then
				arg_786_1.typewritter.percent = (arg_786_1.time_ - var_789_0) / var_789_10

				arg_786_1.typewritter:SetDirty()
			end

			if arg_786_1.time_ >= var_789_0 + var_789_10 and arg_786_1.time_ < var_789_0 + var_789_10 + arg_789_0 then
				arg_786_1.typewritter.percent = 1

				arg_786_1.typewritter:SetDirty()
				arg_786_1:ShowNextGo(true)
			end
		end
	end,
	Play417161192 = function(arg_790_0, arg_790_1)
		arg_790_1.time_ = 0
		arg_790_1.frameCnt_ = 0
		arg_790_1.state_ = "playing"
		arg_790_1.curTalkId_ = 417161192
		arg_790_1.duration_ = 7.7

		SetActive(arg_790_1.tipsGo_, false)

		function arg_790_1.onSingleLineFinish_()
			arg_790_1.onSingleLineUpdate_ = nil
			arg_790_1.onSingleLineFinish_ = nil
			arg_790_1.state_ = "waiting"
			arg_790_1.auto_ = false
		end

		function arg_790_1.playNext_(arg_792_0)
			arg_790_1.onStoryFinished_()
		end

		function arg_790_1.onSingleLineUpdate_(arg_793_0)
			local var_793_0 = 0
			local var_793_1 = 0.7

			if var_793_0 < arg_790_1.time_ and arg_790_1.time_ <= var_793_0 + arg_793_0 then
				arg_790_1.talkMaxDuration = 0
				arg_790_1.dialogCg_.alpha = 1

				arg_790_1.dialog_:SetActive(true)
				SetActive(arg_790_1.leftNameGo_, true)

				local var_793_2 = arg_790_1:FormatText(StoryNameCfg[1125].name)

				arg_790_1.leftNameTxt_.text = var_793_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_790_1.leftNameTxt_.transform)

				arg_790_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_790_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_790_1:RecordName(arg_790_1.leftNameTxt_.text)
				SetActive(arg_790_1.iconTrs_.gameObject, false)
				arg_790_1.callingController_:SetSelectedState("normal")

				local var_793_3 = arg_790_1:GetWordFromCfg(417161192)
				local var_793_4 = arg_790_1:FormatText(var_793_3.content)

				arg_790_1.text_.text = var_793_4

				LuaForUtil.ClearLinePrefixSymbol(arg_790_1.text_)

				local var_793_5 = 28
				local var_793_6 = utf8.len(var_793_4)
				local var_793_7 = var_793_5 <= 0 and var_793_1 or var_793_1 * (var_793_6 / var_793_5)

				if var_793_7 > 0 and var_793_1 < var_793_7 then
					arg_790_1.talkMaxDuration = var_793_7

					if var_793_7 + var_793_0 > arg_790_1.duration_ then
						arg_790_1.duration_ = var_793_7 + var_793_0
					end
				end

				arg_790_1.text_.text = var_793_4
				arg_790_1.typewritter.percent = 0

				arg_790_1.typewritter:SetDirty()
				arg_790_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161192", "story_v_out_417161.awb") ~= 0 then
					local var_793_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161192", "story_v_out_417161.awb") / 1000

					if var_793_8 + var_793_0 > arg_790_1.duration_ then
						arg_790_1.duration_ = var_793_8 + var_793_0
					end

					if var_793_3.prefab_name ~= "" and arg_790_1.actors_[var_793_3.prefab_name] ~= nil then
						local var_793_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_790_1.actors_[var_793_3.prefab_name].transform, "story_v_out_417161", "417161192", "story_v_out_417161.awb")

						arg_790_1:RecordAudio("417161192", var_793_9)
						arg_790_1:RecordAudio("417161192", var_793_9)
					else
						arg_790_1:AudioAction("play", "voice", "story_v_out_417161", "417161192", "story_v_out_417161.awb")
					end

					arg_790_1:RecordHistoryTalkVoice("story_v_out_417161", "417161192", "story_v_out_417161.awb")
				end

				arg_790_1:RecordContent(arg_790_1.text_.text)
			end

			local var_793_10 = math.max(var_793_1, arg_790_1.talkMaxDuration)

			if var_793_0 <= arg_790_1.time_ and arg_790_1.time_ < var_793_0 + var_793_10 then
				arg_790_1.typewritter.percent = (arg_790_1.time_ - var_793_0) / var_793_10

				arg_790_1.typewritter:SetDirty()
			end

			if arg_790_1.time_ >= var_793_0 + var_793_10 and arg_790_1.time_ < var_793_0 + var_793_10 + arg_793_0 then
				arg_790_1.typewritter.percent = 1

				arg_790_1.typewritter:SetDirty()
				arg_790_1:ShowNextGo(true)
			end
		end
	end,
	assets = {
		"Assets/UIResources/UI_AB/TextureConfig/Background/ST73",
		"Assets/UIResources/UI_AB/TextureConfig/Background/STblack",
		"Assets/UIResources/UI_AB/TextureConfig/Background/B13",
		"Assets/UIResources/UI_AB/TextureConfig/Background/ST03a",
		"Assets/UIResources/UI_AB/TextureConfig/Background/SS1706",
		"Assets/UIResources/UI_AB/TextureConfig/Background/D06b"
	},
	voices = {
		"story_v_out_417161.awb"
	}
}

CaptureConditionBase = import("game.captureGame.logic.CaptureTask.Conditions.CaptureConditionBase")
ElevationAngleCheck = import("game.captureGame.logic.CaptureTask.Conditions.ElevationAngleCheck")
DepressionAngleCheck = import("game.captureGame.logic.CaptureTask.Conditions.DepressionAngleCheck")
ForwardCameraCheck = import("game.captureGame.logic.CaptureTask.Conditions.ForwardCameraCheck")
BackwardCameraCheck = import("game.captureGame.logic.CaptureTask.Conditions.BackwardCameraCheck")
CaptureWithTargetCheck = import("game.captureGame.logic.CaptureTask.Conditions.CaptureWithTargetCheck")
SingleRoleOnAnimatedCheck = import("game.captureGame.logic.CaptureTask.Conditions.SingleRoleOnAnimatedCheck")
MugShotCheck = import("game.captureGame.logic.CaptureTask.Conditions.MugShotCheck")
ForwardTargetCheck = import("game.captureGame.logic.CaptureTask.Conditions.ForwardTargetCheck")
BackwardTargetCheck = import("game.captureGame.logic.CaptureTask.Conditions.BackwardTargetCheck")
AdvanceRoleOnScreenCondition = import("game.captureGame.logic.CaptureTask.Conditions.AdvanceRoleOnScreenCondition")
RoleOnHolderCondition = import("game.captureGame.logic.CaptureTask.Conditions.RoleOnHolderCondition")
TargetRoleOnAnimatedCheck = import("game.captureGame.logic.CaptureTask.Conditions.TargetRoleOnAnimatedCheck")
RolePlayAnimationOnPlaceCheck = import("game.captureGame.logic.CaptureTask.Conditions.RolePlayAnimationOnPlaceCheck")
OnYouLeftCheck = import("game.captureGame.logic.CaptureTask.Conditions.OnYouLeftCheck")
UseLensCheck = import("game.captureGame.logic.CaptureTask.Conditions.UseLensCheck")
UseAnyLensCheck = import("game.captureGame.logic.CaptureTask.Conditions.UseAnyLensCheck")
CaptureConditionMap = {
	[CaptureGameConst.ConditionType.Unknow] = CaptureConditionBase,
	[CaptureGameConst.ConditionType.ElevationAngle] = ElevationAngleCheck,
	[CaptureGameConst.ConditionType.DepressionAngle] = DepressionAngleCheck,
	[CaptureGameConst.ConditionType.ForwardCameraCheck] = ForwardCameraCheck,
	[CaptureGameConst.ConditionType.BackwardCameraCheck] = BackwardCameraCheck,
	[CaptureGameConst.ConditionType.CaptureWithTargetCheck] = CaptureWithTargetCheck,
	[CaptureGameConst.ConditionType.RoleOnAnimated] = SingleRoleOnAnimatedCheck,
	[CaptureGameConst.ConditionType.MugShotCheck] = MugShotCheck,
	[CaptureGameConst.ConditionType.ForwardTargetCheck] = ForwardTargetCheck,
	[CaptureGameConst.ConditionType.BackwardTargetCheck] = BackwardTargetCheck,
	[CaptureGameConst.ConditionType.AdvanceRoleOnScreen] = AdvanceRoleOnScreenCondition,
	[CaptureGameConst.ConditionType.TargetRoleOnAnimated] = TargetRoleOnAnimatedCheck,
	[CaptureGameConst.ConditionType.RoleOnHolder] = RoleOnHolderCondition,
	[CaptureGameConst.ConditionType.RolePlayAnimationOnPlace] = RolePlayAnimationOnPlaceCheck,
	[CaptureGameConst.ConditionType.OnYouLeft] = OnYouLeftCheck,
	[CaptureGameConst.ConditionType.UseLens] = UseLensCheck,
	[CaptureGameConst.ConditionType.UseAnyLens] = UseAnyLensCheck
}

return {
	Play413161001 = function(arg_1_0, arg_1_1)
		arg_1_1.time_ = 0
		arg_1_1.frameCnt_ = 0
		arg_1_1.state_ = "playing"
		arg_1_1.curTalkId_ = 413161001
		arg_1_1.duration_ = 6.97

		local var_1_0 = {
			zh = 5.166,
			ja = 6.966
		}
		local var_1_1 = manager.audio:GetLocalizationFlag()

		if var_1_0[var_1_1] ~= nil then
			arg_1_1.duration_ = var_1_0[var_1_1]
		end

		SetActive(arg_1_1.tipsGo_, false)

		function arg_1_1.onSingleLineFinish_()
			arg_1_1.onSingleLineUpdate_ = nil
			arg_1_1.onSingleLineFinish_ = nil
			arg_1_1.state_ = "waiting"
		end

		function arg_1_1.playNext_(arg_3_0)
			if arg_3_0 == 1 then
				arg_1_0:Play413161002(arg_1_1)
			end
		end

		function arg_1_1.onSingleLineUpdate_(arg_4_0)
			local var_4_0 = "ST0603"

			if arg_1_1.bgs_[var_4_0] == nil then
				local var_4_1 = Object.Instantiate(arg_1_1.paintGo_)

				var_4_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_4_0)
				var_4_1.name = var_4_0
				var_4_1.transform.parent = arg_1_1.stage_.transform
				var_4_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_1_1.bgs_[var_4_0] = var_4_1
			end

			local var_4_2 = 0

			if var_4_2 < arg_1_1.time_ and arg_1_1.time_ <= var_4_2 + arg_4_0 then
				local var_4_3 = manager.ui.mainCamera.transform.localPosition
				local var_4_4 = Vector3.New(0, 0, 10) + Vector3.New(var_4_3.x, var_4_3.y, 0)
				local var_4_5 = arg_1_1.bgs_.ST0603

				var_4_5.transform.localPosition = var_4_4
				var_4_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_4_6 = var_4_5:GetComponent("SpriteRenderer")

				if var_4_6 and var_4_6.sprite then
					local var_4_7 = (var_4_5.transform.localPosition - var_4_3).z
					local var_4_8 = manager.ui.mainCameraCom_
					local var_4_9 = 2 * var_4_7 * Mathf.Tan(var_4_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_4_10 = var_4_9 * var_4_8.aspect
					local var_4_11 = var_4_6.sprite.bounds.size.x
					local var_4_12 = var_4_6.sprite.bounds.size.y
					local var_4_13 = var_4_10 / var_4_11
					local var_4_14 = var_4_9 / var_4_12
					local var_4_15 = var_4_14 < var_4_13 and var_4_13 or var_4_14

					var_4_5.transform.localScale = Vector3.New(var_4_15, var_4_15, 0)
				end

				for iter_4_0, iter_4_1 in pairs(arg_1_1.bgs_) do
					if iter_4_0 ~= "ST0603" then
						iter_4_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_4_16 = 0

			if var_4_16 < arg_1_1.time_ and arg_1_1.time_ <= var_4_16 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = true

				arg_1_1:SetGaussion(false)
			end

			local var_4_17 = 2

			if var_4_16 <= arg_1_1.time_ and arg_1_1.time_ < var_4_16 + var_4_17 then
				local var_4_18 = (arg_1_1.time_ - var_4_16) / var_4_17
				local var_4_19 = Color.New(0, 0, 0)

				var_4_19.a = Mathf.Lerp(1, 0, var_4_18)
				arg_1_1.mask_.color = var_4_19
			end

			if arg_1_1.time_ >= var_4_16 + var_4_17 and arg_1_1.time_ < var_4_16 + var_4_17 + arg_4_0 then
				local var_4_20 = Color.New(0, 0, 0)
				local var_4_21 = 0

				arg_1_1.mask_.enabled = false
				var_4_20.a = var_4_21
				arg_1_1.mask_.color = var_4_20
			end

			local var_4_22 = 2

			if var_4_22 < arg_1_1.time_ and arg_1_1.time_ <= var_4_22 + arg_4_0 then
				arg_1_1.allBtn_.enabled = false
			end

			local var_4_23 = 0.3

			if arg_1_1.time_ >= var_4_22 + var_4_23 and arg_1_1.time_ < var_4_22 + var_4_23 + arg_4_0 then
				arg_1_1.allBtn_.enabled = true
			end

			local var_4_24 = 0
			local var_4_25 = 0.433333333333333

			if var_4_24 < arg_1_1.time_ and arg_1_1.time_ <= var_4_24 + arg_4_0 then
				local var_4_26 = "play"
				local var_4_27 = "music"

				arg_1_1:AudioAction(var_4_26, var_4_27, "ui_battle", "ui_battle_stopbgm", "")

				local var_4_28 = ""
				local var_4_29 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_4_29 ~= "" then
					if arg_1_1.bgmTxt_.text ~= var_4_29 and arg_1_1.bgmTxt_.text ~= "" then
						if arg_1_1.bgmTxt2_.text ~= "" then
							arg_1_1.bgmTxt_.text = arg_1_1.bgmTxt2_.text
						end

						arg_1_1.bgmTxt2_.text = var_4_29

						arg_1_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_1_1.bgmTxt_.text = var_4_29
					end

					if arg_1_1.bgmTimer then
						arg_1_1.bgmTimer:Stop()

						arg_1_1.bgmTimer = nil
					end

					if arg_1_1.settingData.show_music_name == 1 then
						arg_1_1.musicController:SetSelectedState("show")
						arg_1_1.musicAnimator_:Play("open", 0, 0)

						if arg_1_1.settingData.music_time ~= 0 then
							arg_1_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_1_1.settingData.music_time), function()
								if arg_1_1 == nil or isNil(arg_1_1.bgmTxt_) then
									return
								end

								arg_1_1.musicController:SetSelectedState("hide")
								arg_1_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_4_30 = 1.26666666666667
			local var_4_31 = 1

			if var_4_30 < arg_1_1.time_ and arg_1_1.time_ <= var_4_30 + arg_4_0 then
				local var_4_32 = "play"
				local var_4_33 = "music"

				arg_1_1:AudioAction(var_4_32, var_4_33, "bgm_activity_3_0_story_daily_quiet", "bgm_activity_3_0_story_daily_quiet", "bgm_activity_3_0_story_daily_quiet.awb")

				local var_4_34 = ""
				local var_4_35 = manager.audio:GetAudioName("bgm_activity_3_0_story_daily_quiet", "bgm_activity_3_0_story_daily_quiet")

				if var_4_35 ~= "" then
					if arg_1_1.bgmTxt_.text ~= var_4_35 and arg_1_1.bgmTxt_.text ~= "" then
						if arg_1_1.bgmTxt2_.text ~= "" then
							arg_1_1.bgmTxt_.text = arg_1_1.bgmTxt2_.text
						end

						arg_1_1.bgmTxt2_.text = var_4_35

						arg_1_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_1_1.bgmTxt_.text = var_4_35
					end

					if arg_1_1.bgmTimer then
						arg_1_1.bgmTimer:Stop()

						arg_1_1.bgmTimer = nil
					end

					if arg_1_1.settingData.show_music_name == 1 then
						arg_1_1.musicController:SetSelectedState("show")
						arg_1_1.musicAnimator_:Play("open", 0, 0)

						if arg_1_1.settingData.music_time ~= 0 then
							arg_1_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_1_1.settingData.music_time), function()
								if arg_1_1 == nil or isNil(arg_1_1.bgmTxt_) then
									return
								end

								arg_1_1.musicController:SetSelectedState("hide")
								arg_1_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			if arg_1_1.frameCnt_ <= 1 then
				arg_1_1.dialog_:SetActive(false)
			end

			local var_4_36 = 2
			local var_4_37 = 0.325

			if var_4_36 < arg_1_1.time_ and arg_1_1.time_ <= var_4_36 + arg_4_0 then
				arg_1_1.talkMaxDuration = 0

				arg_1_1.dialog_:SetActive(true)

				local var_4_38 = LeanTween.value(arg_1_1.dialog_, 0, 1, 0.3)

				var_4_38:setOnUpdate(LuaHelper.FloatAction(function(arg_7_0)
					arg_1_1.dialogCg_.alpha = arg_7_0
				end))
				var_4_38:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_1_1.dialog_)
					var_4_38:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_1_1.duration_ = arg_1_1.duration_ + 0.3

				SetActive(arg_1_1.leftNameGo_, true)

				local var_4_39 = arg_1_1:FormatText(StoryNameCfg[206].name)

				arg_1_1.leftNameTxt_.text = var_4_39

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_1_1.leftNameTxt_.transform)

				arg_1_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_1_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_1_1:RecordName(arg_1_1.leftNameTxt_.text)
				SetActive(arg_1_1.iconTrs_.gameObject, true)
				arg_1_1.iconController_:SetSelectedState("hero")

				arg_1_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1067")

				arg_1_1.callingController_:SetSelectedState("normal")

				arg_1_1.keyicon_.color = Color.New(1, 1, 1)
				arg_1_1.icon_.color = Color.New(1, 1, 1)

				local var_4_40 = arg_1_1:GetWordFromCfg(413161001)
				local var_4_41 = arg_1_1:FormatText(var_4_40.content)

				arg_1_1.text_.text = var_4_41

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_)

				local var_4_42 = 13
				local var_4_43 = utf8.len(var_4_41)
				local var_4_44 = var_4_42 <= 0 and var_4_37 or var_4_37 * (var_4_43 / var_4_42)

				if var_4_44 > 0 and var_4_37 < var_4_44 then
					arg_1_1.talkMaxDuration = var_4_44
					var_4_36 = var_4_36 + 0.3

					if var_4_44 + var_4_36 > arg_1_1.duration_ then
						arg_1_1.duration_ = var_4_44 + var_4_36
					end
				end

				arg_1_1.text_.text = var_4_41
				arg_1_1.typewritter.percent = 0

				arg_1_1.typewritter:SetDirty()
				arg_1_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161001", "story_v_out_413161.awb") ~= 0 then
					local var_4_45 = manager.audio:GetVoiceLength("story_v_out_413161", "413161001", "story_v_out_413161.awb") / 1000

					if var_4_45 + var_4_36 > arg_1_1.duration_ then
						arg_1_1.duration_ = var_4_45 + var_4_36
					end

					if var_4_40.prefab_name ~= "" and arg_1_1.actors_[var_4_40.prefab_name] ~= nil then
						local var_4_46 = LuaForUtil.PlayVoiceWithCriLipsync(arg_1_1.actors_[var_4_40.prefab_name].transform, "story_v_out_413161", "413161001", "story_v_out_413161.awb")

						arg_1_1:RecordAudio("413161001", var_4_46)
						arg_1_1:RecordAudio("413161001", var_4_46)
					else
						arg_1_1:AudioAction("play", "voice", "story_v_out_413161", "413161001", "story_v_out_413161.awb")
					end

					arg_1_1:RecordHistoryTalkVoice("story_v_out_413161", "413161001", "story_v_out_413161.awb")
				end

				arg_1_1:RecordContent(arg_1_1.text_.text)
			end

			local var_4_47 = var_4_36 + 0.3
			local var_4_48 = math.max(var_4_37, arg_1_1.talkMaxDuration)

			if var_4_47 <= arg_1_1.time_ and arg_1_1.time_ < var_4_47 + var_4_48 then
				arg_1_1.typewritter.percent = (arg_1_1.time_ - var_4_47) / var_4_48

				arg_1_1.typewritter:SetDirty()
			end

			if arg_1_1.time_ >= var_4_47 + var_4_48 and arg_1_1.time_ < var_4_47 + var_4_48 + arg_4_0 then
				arg_1_1.typewritter.percent = 1

				arg_1_1.typewritter:SetDirty()
				arg_1_1:ShowNextGo(true)
			end
		end
	end,
	Play413161002 = function(arg_9_0, arg_9_1)
		arg_9_1.time_ = 0
		arg_9_1.frameCnt_ = 0
		arg_9_1.state_ = "playing"
		arg_9_1.curTalkId_ = 413161002
		arg_9_1.duration_ = 7.57

		local var_9_0 = {
			zh = 3.366,
			ja = 7.566
		}
		local var_9_1 = manager.audio:GetLocalizationFlag()

		if var_9_0[var_9_1] ~= nil then
			arg_9_1.duration_ = var_9_0[var_9_1]
		end

		SetActive(arg_9_1.tipsGo_, false)

		function arg_9_1.onSingleLineFinish_()
			arg_9_1.onSingleLineUpdate_ = nil
			arg_9_1.onSingleLineFinish_ = nil
			arg_9_1.state_ = "waiting"
		end

		function arg_9_1.playNext_(arg_11_0)
			if arg_11_0 == 1 then
				arg_9_0:Play413161003(arg_9_1)
			end
		end

		function arg_9_1.onSingleLineUpdate_(arg_12_0)
			local var_12_0 = "10094"

			if arg_9_1.actors_[var_12_0] == nil then
				local var_12_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10094")

				if not isNil(var_12_1) then
					local var_12_2 = Object.Instantiate(var_12_1, arg_9_1.canvasGo_.transform)

					var_12_2.transform:SetSiblingIndex(1)

					var_12_2.name = var_12_0
					var_12_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_9_1.actors_[var_12_0] = var_12_2

					local var_12_3 = var_12_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_9_1.isInRecall_ then
						for iter_12_0, iter_12_1 in ipairs(var_12_3) do
							iter_12_1.color = arg_9_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_12_4 = arg_9_1.actors_["10094"].transform
			local var_12_5 = 0

			if var_12_5 < arg_9_1.time_ and arg_9_1.time_ <= var_12_5 + arg_12_0 then
				arg_9_1.var_.moveOldPos10094 = var_12_4.localPosition
				var_12_4.localScale = Vector3.New(1, 1, 1)

				arg_9_1:CheckSpriteTmpPos("10094", 3)

				local var_12_6 = var_12_4.childCount

				for iter_12_2 = 0, var_12_6 - 1 do
					local var_12_7 = var_12_4:GetChild(iter_12_2)

					if var_12_7.name == "" or not string.find(var_12_7.name, "split") then
						var_12_7.gameObject:SetActive(true)
					else
						var_12_7.gameObject:SetActive(false)
					end
				end
			end

			local var_12_8 = 0.001

			if var_12_5 <= arg_9_1.time_ and arg_9_1.time_ < var_12_5 + var_12_8 then
				local var_12_9 = (arg_9_1.time_ - var_12_5) / var_12_8
				local var_12_10 = Vector3.New(0, -340, -414)

				var_12_4.localPosition = Vector3.Lerp(arg_9_1.var_.moveOldPos10094, var_12_10, var_12_9)
			end

			if arg_9_1.time_ >= var_12_5 + var_12_8 and arg_9_1.time_ < var_12_5 + var_12_8 + arg_12_0 then
				var_12_4.localPosition = Vector3.New(0, -340, -414)
			end

			local var_12_11 = arg_9_1.actors_["10094"]
			local var_12_12 = 0

			if var_12_12 < arg_9_1.time_ and arg_9_1.time_ <= var_12_12 + arg_12_0 and not isNil(var_12_11) and arg_9_1.var_.actorSpriteComps10094 == nil then
				arg_9_1.var_.actorSpriteComps10094 = var_12_11:GetComponentsInChildren(typeof(Image), true)
			end

			local var_12_13 = 2

			if var_12_12 <= arg_9_1.time_ and arg_9_1.time_ < var_12_12 + var_12_13 and not isNil(var_12_11) then
				local var_12_14 = (arg_9_1.time_ - var_12_12) / var_12_13

				if arg_9_1.var_.actorSpriteComps10094 then
					for iter_12_3, iter_12_4 in pairs(arg_9_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_12_4 then
							if arg_9_1.isInRecall_ then
								local var_12_15 = Mathf.Lerp(iter_12_4.color.r, arg_9_1.hightColor1.r, var_12_14)
								local var_12_16 = Mathf.Lerp(iter_12_4.color.g, arg_9_1.hightColor1.g, var_12_14)
								local var_12_17 = Mathf.Lerp(iter_12_4.color.b, arg_9_1.hightColor1.b, var_12_14)

								iter_12_4.color = Color.New(var_12_15, var_12_16, var_12_17)
							else
								local var_12_18 = Mathf.Lerp(iter_12_4.color.r, 1, var_12_14)

								iter_12_4.color = Color.New(var_12_18, var_12_18, var_12_18)
							end
						end
					end
				end
			end

			if arg_9_1.time_ >= var_12_12 + var_12_13 and arg_9_1.time_ < var_12_12 + var_12_13 + arg_12_0 and not isNil(var_12_11) and arg_9_1.var_.actorSpriteComps10094 then
				for iter_12_5, iter_12_6 in pairs(arg_9_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_12_6 then
						if arg_9_1.isInRecall_ then
							iter_12_6.color = arg_9_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_12_6.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_9_1.var_.actorSpriteComps10094 = nil
			end

			local var_12_19 = arg_9_1.actors_["10094"]
			local var_12_20 = 0

			if var_12_20 < arg_9_1.time_ and arg_9_1.time_ <= var_12_20 + arg_12_0 then
				local var_12_21 = var_12_19:GetComponentInChildren(typeof(CanvasGroup))

				if var_12_21 then
					arg_9_1.var_.alphaOldValue10094 = var_12_21.alpha
					arg_9_1.var_.characterEffect10094 = var_12_21
				end

				arg_9_1.var_.alphaOldValue10094 = 0
			end

			local var_12_22 = 0.5

			if var_12_20 <= arg_9_1.time_ and arg_9_1.time_ < var_12_20 + var_12_22 then
				local var_12_23 = (arg_9_1.time_ - var_12_20) / var_12_22
				local var_12_24 = Mathf.Lerp(arg_9_1.var_.alphaOldValue10094, 1, var_12_23)

				if arg_9_1.var_.characterEffect10094 then
					arg_9_1.var_.characterEffect10094.alpha = var_12_24
				end
			end

			if arg_9_1.time_ >= var_12_20 + var_12_22 and arg_9_1.time_ < var_12_20 + var_12_22 + arg_12_0 and arg_9_1.var_.characterEffect10094 then
				arg_9_1.var_.characterEffect10094.alpha = 1
			end

			local var_12_25 = 0
			local var_12_26 = 0.375

			if var_12_25 < arg_9_1.time_ and arg_9_1.time_ <= var_12_25 + arg_12_0 then
				arg_9_1.talkMaxDuration = 0
				arg_9_1.dialogCg_.alpha = 1

				arg_9_1.dialog_:SetActive(true)
				SetActive(arg_9_1.leftNameGo_, true)

				local var_12_27 = arg_9_1:FormatText(StoryNameCfg[259].name)

				arg_9_1.leftNameTxt_.text = var_12_27

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_9_1.leftNameTxt_.transform)

				arg_9_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_9_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_9_1:RecordName(arg_9_1.leftNameTxt_.text)
				SetActive(arg_9_1.iconTrs_.gameObject, false)
				arg_9_1.callingController_:SetSelectedState("normal")

				local var_12_28 = arg_9_1:GetWordFromCfg(413161002)
				local var_12_29 = arg_9_1:FormatText(var_12_28.content)

				arg_9_1.text_.text = var_12_29

				LuaForUtil.ClearLinePrefixSymbol(arg_9_1.text_)

				local var_12_30 = 15
				local var_12_31 = utf8.len(var_12_29)
				local var_12_32 = var_12_30 <= 0 and var_12_26 or var_12_26 * (var_12_31 / var_12_30)

				if var_12_32 > 0 and var_12_26 < var_12_32 then
					arg_9_1.talkMaxDuration = var_12_32

					if var_12_32 + var_12_25 > arg_9_1.duration_ then
						arg_9_1.duration_ = var_12_32 + var_12_25
					end
				end

				arg_9_1.text_.text = var_12_29
				arg_9_1.typewritter.percent = 0

				arg_9_1.typewritter:SetDirty()
				arg_9_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161002", "story_v_out_413161.awb") ~= 0 then
					local var_12_33 = manager.audio:GetVoiceLength("story_v_out_413161", "413161002", "story_v_out_413161.awb") / 1000

					if var_12_33 + var_12_25 > arg_9_1.duration_ then
						arg_9_1.duration_ = var_12_33 + var_12_25
					end

					if var_12_28.prefab_name ~= "" and arg_9_1.actors_[var_12_28.prefab_name] ~= nil then
						local var_12_34 = LuaForUtil.PlayVoiceWithCriLipsync(arg_9_1.actors_[var_12_28.prefab_name].transform, "story_v_out_413161", "413161002", "story_v_out_413161.awb")

						arg_9_1:RecordAudio("413161002", var_12_34)
						arg_9_1:RecordAudio("413161002", var_12_34)
					else
						arg_9_1:AudioAction("play", "voice", "story_v_out_413161", "413161002", "story_v_out_413161.awb")
					end

					arg_9_1:RecordHistoryTalkVoice("story_v_out_413161", "413161002", "story_v_out_413161.awb")
				end

				arg_9_1:RecordContent(arg_9_1.text_.text)
			end

			local var_12_35 = math.max(var_12_26, arg_9_1.talkMaxDuration)

			if var_12_25 <= arg_9_1.time_ and arg_9_1.time_ < var_12_25 + var_12_35 then
				arg_9_1.typewritter.percent = (arg_9_1.time_ - var_12_25) / var_12_35

				arg_9_1.typewritter:SetDirty()
			end

			if arg_9_1.time_ >= var_12_25 + var_12_35 and arg_9_1.time_ < var_12_25 + var_12_35 + arg_12_0 then
				arg_9_1.typewritter.percent = 1

				arg_9_1.typewritter:SetDirty()
				arg_9_1:ShowNextGo(true)
			end
		end
	end,
	Play413161003 = function(arg_13_0, arg_13_1)
		arg_13_1.time_ = 0
		arg_13_1.frameCnt_ = 0
		arg_13_1.state_ = "playing"
		arg_13_1.curTalkId_ = 413161003
		arg_13_1.duration_ = 7.6

		local var_13_0 = {
			zh = 3.533,
			ja = 7.6
		}
		local var_13_1 = manager.audio:GetLocalizationFlag()

		if var_13_0[var_13_1] ~= nil then
			arg_13_1.duration_ = var_13_0[var_13_1]
		end

		SetActive(arg_13_1.tipsGo_, false)

		function arg_13_1.onSingleLineFinish_()
			arg_13_1.onSingleLineUpdate_ = nil
			arg_13_1.onSingleLineFinish_ = nil
			arg_13_1.state_ = "waiting"
		end

		function arg_13_1.playNext_(arg_15_0)
			if arg_15_0 == 1 then
				arg_13_0:Play413161004(arg_13_1)
			end
		end

		function arg_13_1.onSingleLineUpdate_(arg_16_0)
			local var_16_0 = 0
			local var_16_1 = 0.425

			if var_16_0 < arg_13_1.time_ and arg_13_1.time_ <= var_16_0 + arg_16_0 then
				arg_13_1.talkMaxDuration = 0
				arg_13_1.dialogCg_.alpha = 1

				arg_13_1.dialog_:SetActive(true)
				SetActive(arg_13_1.leftNameGo_, true)

				local var_16_2 = arg_13_1:FormatText(StoryNameCfg[259].name)

				arg_13_1.leftNameTxt_.text = var_16_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_13_1.leftNameTxt_.transform)

				arg_13_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_13_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_13_1:RecordName(arg_13_1.leftNameTxt_.text)
				SetActive(arg_13_1.iconTrs_.gameObject, false)
				arg_13_1.callingController_:SetSelectedState("normal")

				local var_16_3 = arg_13_1:GetWordFromCfg(413161003)
				local var_16_4 = arg_13_1:FormatText(var_16_3.content)

				arg_13_1.text_.text = var_16_4

				LuaForUtil.ClearLinePrefixSymbol(arg_13_1.text_)

				local var_16_5 = 17
				local var_16_6 = utf8.len(var_16_4)
				local var_16_7 = var_16_5 <= 0 and var_16_1 or var_16_1 * (var_16_6 / var_16_5)

				if var_16_7 > 0 and var_16_1 < var_16_7 then
					arg_13_1.talkMaxDuration = var_16_7

					if var_16_7 + var_16_0 > arg_13_1.duration_ then
						arg_13_1.duration_ = var_16_7 + var_16_0
					end
				end

				arg_13_1.text_.text = var_16_4
				arg_13_1.typewritter.percent = 0

				arg_13_1.typewritter:SetDirty()
				arg_13_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161003", "story_v_out_413161.awb") ~= 0 then
					local var_16_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161003", "story_v_out_413161.awb") / 1000

					if var_16_8 + var_16_0 > arg_13_1.duration_ then
						arg_13_1.duration_ = var_16_8 + var_16_0
					end

					if var_16_3.prefab_name ~= "" and arg_13_1.actors_[var_16_3.prefab_name] ~= nil then
						local var_16_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_13_1.actors_[var_16_3.prefab_name].transform, "story_v_out_413161", "413161003", "story_v_out_413161.awb")

						arg_13_1:RecordAudio("413161003", var_16_9)
						arg_13_1:RecordAudio("413161003", var_16_9)
					else
						arg_13_1:AudioAction("play", "voice", "story_v_out_413161", "413161003", "story_v_out_413161.awb")
					end

					arg_13_1:RecordHistoryTalkVoice("story_v_out_413161", "413161003", "story_v_out_413161.awb")
				end

				arg_13_1:RecordContent(arg_13_1.text_.text)
			end

			local var_16_10 = math.max(var_16_1, arg_13_1.talkMaxDuration)

			if var_16_0 <= arg_13_1.time_ and arg_13_1.time_ < var_16_0 + var_16_10 then
				arg_13_1.typewritter.percent = (arg_13_1.time_ - var_16_0) / var_16_10

				arg_13_1.typewritter:SetDirty()
			end

			if arg_13_1.time_ >= var_16_0 + var_16_10 and arg_13_1.time_ < var_16_0 + var_16_10 + arg_16_0 then
				arg_13_1.typewritter.percent = 1

				arg_13_1.typewritter:SetDirty()
				arg_13_1:ShowNextGo(true)
			end
		end
	end,
	Play413161004 = function(arg_17_0, arg_17_1)
		arg_17_1.time_ = 0
		arg_17_1.frameCnt_ = 0
		arg_17_1.state_ = "playing"
		arg_17_1.curTalkId_ = 413161004
		arg_17_1.duration_ = 8.4

		local var_17_0 = {
			zh = 4.233,
			ja = 8.4
		}
		local var_17_1 = manager.audio:GetLocalizationFlag()

		if var_17_0[var_17_1] ~= nil then
			arg_17_1.duration_ = var_17_0[var_17_1]
		end

		SetActive(arg_17_1.tipsGo_, false)

		function arg_17_1.onSingleLineFinish_()
			arg_17_1.onSingleLineUpdate_ = nil
			arg_17_1.onSingleLineFinish_ = nil
			arg_17_1.state_ = "waiting"
		end

		function arg_17_1.playNext_(arg_19_0)
			if arg_19_0 == 1 then
				arg_17_0:Play413161005(arg_17_1)
			end
		end

		function arg_17_1.onSingleLineUpdate_(arg_20_0)
			local var_20_0 = arg_17_1.actors_["10094"]
			local var_20_1 = 0

			if var_20_1 < arg_17_1.time_ and arg_17_1.time_ <= var_20_1 + arg_20_0 and not isNil(var_20_0) and arg_17_1.var_.actorSpriteComps10094 == nil then
				arg_17_1.var_.actorSpriteComps10094 = var_20_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_20_2 = 2

			if var_20_1 <= arg_17_1.time_ and arg_17_1.time_ < var_20_1 + var_20_2 and not isNil(var_20_0) then
				local var_20_3 = (arg_17_1.time_ - var_20_1) / var_20_2

				if arg_17_1.var_.actorSpriteComps10094 then
					for iter_20_0, iter_20_1 in pairs(arg_17_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_20_1 then
							if arg_17_1.isInRecall_ then
								local var_20_4 = Mathf.Lerp(iter_20_1.color.r, arg_17_1.hightColor2.r, var_20_3)
								local var_20_5 = Mathf.Lerp(iter_20_1.color.g, arg_17_1.hightColor2.g, var_20_3)
								local var_20_6 = Mathf.Lerp(iter_20_1.color.b, arg_17_1.hightColor2.b, var_20_3)

								iter_20_1.color = Color.New(var_20_4, var_20_5, var_20_6)
							else
								local var_20_7 = Mathf.Lerp(iter_20_1.color.r, 0.5, var_20_3)

								iter_20_1.color = Color.New(var_20_7, var_20_7, var_20_7)
							end
						end
					end
				end
			end

			if arg_17_1.time_ >= var_20_1 + var_20_2 and arg_17_1.time_ < var_20_1 + var_20_2 + arg_20_0 and not isNil(var_20_0) and arg_17_1.var_.actorSpriteComps10094 then
				for iter_20_2, iter_20_3 in pairs(arg_17_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_20_3 then
						if arg_17_1.isInRecall_ then
							iter_20_3.color = arg_17_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_20_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_17_1.var_.actorSpriteComps10094 = nil
			end

			local var_20_8 = 0
			local var_20_9 = 0.5

			if var_20_8 < arg_17_1.time_ and arg_17_1.time_ <= var_20_8 + arg_20_0 then
				arg_17_1.talkMaxDuration = 0
				arg_17_1.dialogCg_.alpha = 1

				arg_17_1.dialog_:SetActive(true)
				SetActive(arg_17_1.leftNameGo_, true)

				local var_20_10 = arg_17_1:FormatText(StoryNameCfg[206].name)

				arg_17_1.leftNameTxt_.text = var_20_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_17_1.leftNameTxt_.transform)

				arg_17_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_17_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_17_1:RecordName(arg_17_1.leftNameTxt_.text)
				SetActive(arg_17_1.iconTrs_.gameObject, true)
				arg_17_1.iconController_:SetSelectedState("hero")

				arg_17_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1067")

				arg_17_1.callingController_:SetSelectedState("normal")

				arg_17_1.keyicon_.color = Color.New(1, 1, 1)
				arg_17_1.icon_.color = Color.New(1, 1, 1)

				local var_20_11 = arg_17_1:GetWordFromCfg(413161004)
				local var_20_12 = arg_17_1:FormatText(var_20_11.content)

				arg_17_1.text_.text = var_20_12

				LuaForUtil.ClearLinePrefixSymbol(arg_17_1.text_)

				local var_20_13 = 20
				local var_20_14 = utf8.len(var_20_12)
				local var_20_15 = var_20_13 <= 0 and var_20_9 or var_20_9 * (var_20_14 / var_20_13)

				if var_20_15 > 0 and var_20_9 < var_20_15 then
					arg_17_1.talkMaxDuration = var_20_15

					if var_20_15 + var_20_8 > arg_17_1.duration_ then
						arg_17_1.duration_ = var_20_15 + var_20_8
					end
				end

				arg_17_1.text_.text = var_20_12
				arg_17_1.typewritter.percent = 0

				arg_17_1.typewritter:SetDirty()
				arg_17_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161004", "story_v_out_413161.awb") ~= 0 then
					local var_20_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161004", "story_v_out_413161.awb") / 1000

					if var_20_16 + var_20_8 > arg_17_1.duration_ then
						arg_17_1.duration_ = var_20_16 + var_20_8
					end

					if var_20_11.prefab_name ~= "" and arg_17_1.actors_[var_20_11.prefab_name] ~= nil then
						local var_20_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_17_1.actors_[var_20_11.prefab_name].transform, "story_v_out_413161", "413161004", "story_v_out_413161.awb")

						arg_17_1:RecordAudio("413161004", var_20_17)
						arg_17_1:RecordAudio("413161004", var_20_17)
					else
						arg_17_1:AudioAction("play", "voice", "story_v_out_413161", "413161004", "story_v_out_413161.awb")
					end

					arg_17_1:RecordHistoryTalkVoice("story_v_out_413161", "413161004", "story_v_out_413161.awb")
				end

				arg_17_1:RecordContent(arg_17_1.text_.text)
			end

			local var_20_18 = math.max(var_20_9, arg_17_1.talkMaxDuration)

			if var_20_8 <= arg_17_1.time_ and arg_17_1.time_ < var_20_8 + var_20_18 then
				arg_17_1.typewritter.percent = (arg_17_1.time_ - var_20_8) / var_20_18

				arg_17_1.typewritter:SetDirty()
			end

			if arg_17_1.time_ >= var_20_8 + var_20_18 and arg_17_1.time_ < var_20_8 + var_20_18 + arg_20_0 then
				arg_17_1.typewritter.percent = 1

				arg_17_1.typewritter:SetDirty()
				arg_17_1:ShowNextGo(true)
			end
		end
	end,
	Play413161005 = function(arg_21_0, arg_21_1)
		arg_21_1.time_ = 0
		arg_21_1.frameCnt_ = 0
		arg_21_1.state_ = "playing"
		arg_21_1.curTalkId_ = 413161005
		arg_21_1.duration_ = 5.97

		local var_21_0 = {
			zh = 5.966,
			ja = 5.233
		}
		local var_21_1 = manager.audio:GetLocalizationFlag()

		if var_21_0[var_21_1] ~= nil then
			arg_21_1.duration_ = var_21_0[var_21_1]
		end

		SetActive(arg_21_1.tipsGo_, false)

		function arg_21_1.onSingleLineFinish_()
			arg_21_1.onSingleLineUpdate_ = nil
			arg_21_1.onSingleLineFinish_ = nil
			arg_21_1.state_ = "waiting"
		end

		function arg_21_1.playNext_(arg_23_0)
			if arg_23_0 == 1 then
				arg_21_0:Play413161006(arg_21_1)
			end
		end

		function arg_21_1.onSingleLineUpdate_(arg_24_0)
			local var_24_0 = arg_21_1.actors_["10094"].transform
			local var_24_1 = 0

			if var_24_1 < arg_21_1.time_ and arg_21_1.time_ <= var_24_1 + arg_24_0 then
				arg_21_1.var_.moveOldPos10094 = var_24_0.localPosition
				var_24_0.localScale = Vector3.New(1, 1, 1)

				arg_21_1:CheckSpriteTmpPos("10094", 3)

				local var_24_2 = var_24_0.childCount

				for iter_24_0 = 0, var_24_2 - 1 do
					local var_24_3 = var_24_0:GetChild(iter_24_0)

					if var_24_3.name == "" or not string.find(var_24_3.name, "split") then
						var_24_3.gameObject:SetActive(true)
					else
						var_24_3.gameObject:SetActive(false)
					end
				end
			end

			local var_24_4 = 0.001

			if var_24_1 <= arg_21_1.time_ and arg_21_1.time_ < var_24_1 + var_24_4 then
				local var_24_5 = (arg_21_1.time_ - var_24_1) / var_24_4
				local var_24_6 = Vector3.New(0, -340, -414)

				var_24_0.localPosition = Vector3.Lerp(arg_21_1.var_.moveOldPos10094, var_24_6, var_24_5)
			end

			if arg_21_1.time_ >= var_24_1 + var_24_4 and arg_21_1.time_ < var_24_1 + var_24_4 + arg_24_0 then
				var_24_0.localPosition = Vector3.New(0, -340, -414)
			end

			local var_24_7 = arg_21_1.actors_["10094"]
			local var_24_8 = 0

			if var_24_8 < arg_21_1.time_ and arg_21_1.time_ <= var_24_8 + arg_24_0 and not isNil(var_24_7) and arg_21_1.var_.actorSpriteComps10094 == nil then
				arg_21_1.var_.actorSpriteComps10094 = var_24_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_24_9 = 2

			if var_24_8 <= arg_21_1.time_ and arg_21_1.time_ < var_24_8 + var_24_9 and not isNil(var_24_7) then
				local var_24_10 = (arg_21_1.time_ - var_24_8) / var_24_9

				if arg_21_1.var_.actorSpriteComps10094 then
					for iter_24_1, iter_24_2 in pairs(arg_21_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_24_2 then
							if arg_21_1.isInRecall_ then
								local var_24_11 = Mathf.Lerp(iter_24_2.color.r, arg_21_1.hightColor1.r, var_24_10)
								local var_24_12 = Mathf.Lerp(iter_24_2.color.g, arg_21_1.hightColor1.g, var_24_10)
								local var_24_13 = Mathf.Lerp(iter_24_2.color.b, arg_21_1.hightColor1.b, var_24_10)

								iter_24_2.color = Color.New(var_24_11, var_24_12, var_24_13)
							else
								local var_24_14 = Mathf.Lerp(iter_24_2.color.r, 1, var_24_10)

								iter_24_2.color = Color.New(var_24_14, var_24_14, var_24_14)
							end
						end
					end
				end
			end

			if arg_21_1.time_ >= var_24_8 + var_24_9 and arg_21_1.time_ < var_24_8 + var_24_9 + arg_24_0 and not isNil(var_24_7) and arg_21_1.var_.actorSpriteComps10094 then
				for iter_24_3, iter_24_4 in pairs(arg_21_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_24_4 then
						if arg_21_1.isInRecall_ then
							iter_24_4.color = arg_21_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_24_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_21_1.var_.actorSpriteComps10094 = nil
			end

			local var_24_15 = 0
			local var_24_16 = 0.65

			if var_24_15 < arg_21_1.time_ and arg_21_1.time_ <= var_24_15 + arg_24_0 then
				arg_21_1.talkMaxDuration = 0
				arg_21_1.dialogCg_.alpha = 1

				arg_21_1.dialog_:SetActive(true)
				SetActive(arg_21_1.leftNameGo_, true)

				local var_24_17 = arg_21_1:FormatText(StoryNameCfg[259].name)

				arg_21_1.leftNameTxt_.text = var_24_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_21_1.leftNameTxt_.transform)

				arg_21_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_21_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_21_1:RecordName(arg_21_1.leftNameTxt_.text)
				SetActive(arg_21_1.iconTrs_.gameObject, false)
				arg_21_1.callingController_:SetSelectedState("normal")

				local var_24_18 = arg_21_1:GetWordFromCfg(413161005)
				local var_24_19 = arg_21_1:FormatText(var_24_18.content)

				arg_21_1.text_.text = var_24_19

				LuaForUtil.ClearLinePrefixSymbol(arg_21_1.text_)

				local var_24_20 = 26
				local var_24_21 = utf8.len(var_24_19)
				local var_24_22 = var_24_20 <= 0 and var_24_16 or var_24_16 * (var_24_21 / var_24_20)

				if var_24_22 > 0 and var_24_16 < var_24_22 then
					arg_21_1.talkMaxDuration = var_24_22

					if var_24_22 + var_24_15 > arg_21_1.duration_ then
						arg_21_1.duration_ = var_24_22 + var_24_15
					end
				end

				arg_21_1.text_.text = var_24_19
				arg_21_1.typewritter.percent = 0

				arg_21_1.typewritter:SetDirty()
				arg_21_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161005", "story_v_out_413161.awb") ~= 0 then
					local var_24_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161005", "story_v_out_413161.awb") / 1000

					if var_24_23 + var_24_15 > arg_21_1.duration_ then
						arg_21_1.duration_ = var_24_23 + var_24_15
					end

					if var_24_18.prefab_name ~= "" and arg_21_1.actors_[var_24_18.prefab_name] ~= nil then
						local var_24_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_21_1.actors_[var_24_18.prefab_name].transform, "story_v_out_413161", "413161005", "story_v_out_413161.awb")

						arg_21_1:RecordAudio("413161005", var_24_24)
						arg_21_1:RecordAudio("413161005", var_24_24)
					else
						arg_21_1:AudioAction("play", "voice", "story_v_out_413161", "413161005", "story_v_out_413161.awb")
					end

					arg_21_1:RecordHistoryTalkVoice("story_v_out_413161", "413161005", "story_v_out_413161.awb")
				end

				arg_21_1:RecordContent(arg_21_1.text_.text)
			end

			local var_24_25 = math.max(var_24_16, arg_21_1.talkMaxDuration)

			if var_24_15 <= arg_21_1.time_ and arg_21_1.time_ < var_24_15 + var_24_25 then
				arg_21_1.typewritter.percent = (arg_21_1.time_ - var_24_15) / var_24_25

				arg_21_1.typewritter:SetDirty()
			end

			if arg_21_1.time_ >= var_24_15 + var_24_25 and arg_21_1.time_ < var_24_15 + var_24_25 + arg_24_0 then
				arg_21_1.typewritter.percent = 1

				arg_21_1.typewritter:SetDirty()
				arg_21_1:ShowNextGo(true)
			end
		end
	end,
	Play413161006 = function(arg_25_0, arg_25_1)
		arg_25_1.time_ = 0
		arg_25_1.frameCnt_ = 0
		arg_25_1.state_ = "playing"
		arg_25_1.curTalkId_ = 413161006
		arg_25_1.duration_ = 13.33

		local var_25_0 = {
			zh = 10.833,
			ja = 13.333
		}
		local var_25_1 = manager.audio:GetLocalizationFlag()

		if var_25_0[var_25_1] ~= nil then
			arg_25_1.duration_ = var_25_0[var_25_1]
		end

		SetActive(arg_25_1.tipsGo_, false)

		function arg_25_1.onSingleLineFinish_()
			arg_25_1.onSingleLineUpdate_ = nil
			arg_25_1.onSingleLineFinish_ = nil
			arg_25_1.state_ = "waiting"
		end

		function arg_25_1.playNext_(arg_27_0)
			if arg_27_0 == 1 then
				arg_25_0:Play413161007(arg_25_1)
			end
		end

		function arg_25_1.onSingleLineUpdate_(arg_28_0)
			local var_28_0 = arg_25_1.actors_["10094"]
			local var_28_1 = 0

			if var_28_1 < arg_25_1.time_ and arg_25_1.time_ <= var_28_1 + arg_28_0 and not isNil(var_28_0) and arg_25_1.var_.actorSpriteComps10094 == nil then
				arg_25_1.var_.actorSpriteComps10094 = var_28_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_28_2 = 2

			if var_28_1 <= arg_25_1.time_ and arg_25_1.time_ < var_28_1 + var_28_2 and not isNil(var_28_0) then
				local var_28_3 = (arg_25_1.time_ - var_28_1) / var_28_2

				if arg_25_1.var_.actorSpriteComps10094 then
					for iter_28_0, iter_28_1 in pairs(arg_25_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_28_1 then
							if arg_25_1.isInRecall_ then
								local var_28_4 = Mathf.Lerp(iter_28_1.color.r, arg_25_1.hightColor2.r, var_28_3)
								local var_28_5 = Mathf.Lerp(iter_28_1.color.g, arg_25_1.hightColor2.g, var_28_3)
								local var_28_6 = Mathf.Lerp(iter_28_1.color.b, arg_25_1.hightColor2.b, var_28_3)

								iter_28_1.color = Color.New(var_28_4, var_28_5, var_28_6)
							else
								local var_28_7 = Mathf.Lerp(iter_28_1.color.r, 0.5, var_28_3)

								iter_28_1.color = Color.New(var_28_7, var_28_7, var_28_7)
							end
						end
					end
				end
			end

			if arg_25_1.time_ >= var_28_1 + var_28_2 and arg_25_1.time_ < var_28_1 + var_28_2 + arg_28_0 and not isNil(var_28_0) and arg_25_1.var_.actorSpriteComps10094 then
				for iter_28_2, iter_28_3 in pairs(arg_25_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_28_3 then
						if arg_25_1.isInRecall_ then
							iter_28_3.color = arg_25_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_28_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_25_1.var_.actorSpriteComps10094 = nil
			end

			local var_28_8 = 0
			local var_28_9 = 1.125

			if var_28_8 < arg_25_1.time_ and arg_25_1.time_ <= var_28_8 + arg_28_0 then
				arg_25_1.talkMaxDuration = 0
				arg_25_1.dialogCg_.alpha = 1

				arg_25_1.dialog_:SetActive(true)
				SetActive(arg_25_1.leftNameGo_, true)

				local var_28_10 = arg_25_1:FormatText(StoryNameCfg[205].name)

				arg_25_1.leftNameTxt_.text = var_28_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_25_1.leftNameTxt_.transform)

				arg_25_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_25_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_25_1:RecordName(arg_25_1.leftNameTxt_.text)
				SetActive(arg_25_1.iconTrs_.gameObject, true)
				arg_25_1.iconController_:SetSelectedState("hero")

				arg_25_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1042")

				arg_25_1.callingController_:SetSelectedState("normal")

				arg_25_1.keyicon_.color = Color.New(1, 1, 1)
				arg_25_1.icon_.color = Color.New(1, 1, 1)

				local var_28_11 = arg_25_1:GetWordFromCfg(413161006)
				local var_28_12 = arg_25_1:FormatText(var_28_11.content)

				arg_25_1.text_.text = var_28_12

				LuaForUtil.ClearLinePrefixSymbol(arg_25_1.text_)

				local var_28_13 = 45
				local var_28_14 = utf8.len(var_28_12)
				local var_28_15 = var_28_13 <= 0 and var_28_9 or var_28_9 * (var_28_14 / var_28_13)

				if var_28_15 > 0 and var_28_9 < var_28_15 then
					arg_25_1.talkMaxDuration = var_28_15

					if var_28_15 + var_28_8 > arg_25_1.duration_ then
						arg_25_1.duration_ = var_28_15 + var_28_8
					end
				end

				arg_25_1.text_.text = var_28_12
				arg_25_1.typewritter.percent = 0

				arg_25_1.typewritter:SetDirty()
				arg_25_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161006", "story_v_out_413161.awb") ~= 0 then
					local var_28_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161006", "story_v_out_413161.awb") / 1000

					if var_28_16 + var_28_8 > arg_25_1.duration_ then
						arg_25_1.duration_ = var_28_16 + var_28_8
					end

					if var_28_11.prefab_name ~= "" and arg_25_1.actors_[var_28_11.prefab_name] ~= nil then
						local var_28_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_25_1.actors_[var_28_11.prefab_name].transform, "story_v_out_413161", "413161006", "story_v_out_413161.awb")

						arg_25_1:RecordAudio("413161006", var_28_17)
						arg_25_1:RecordAudio("413161006", var_28_17)
					else
						arg_25_1:AudioAction("play", "voice", "story_v_out_413161", "413161006", "story_v_out_413161.awb")
					end

					arg_25_1:RecordHistoryTalkVoice("story_v_out_413161", "413161006", "story_v_out_413161.awb")
				end

				arg_25_1:RecordContent(arg_25_1.text_.text)
			end

			local var_28_18 = math.max(var_28_9, arg_25_1.talkMaxDuration)

			if var_28_8 <= arg_25_1.time_ and arg_25_1.time_ < var_28_8 + var_28_18 then
				arg_25_1.typewritter.percent = (arg_25_1.time_ - var_28_8) / var_28_18

				arg_25_1.typewritter:SetDirty()
			end

			if arg_25_1.time_ >= var_28_8 + var_28_18 and arg_25_1.time_ < var_28_8 + var_28_18 + arg_28_0 then
				arg_25_1.typewritter.percent = 1

				arg_25_1.typewritter:SetDirty()
				arg_25_1:ShowNextGo(true)
			end
		end
	end,
	Play413161007 = function(arg_29_0, arg_29_1)
		arg_29_1.time_ = 0
		arg_29_1.frameCnt_ = 0
		arg_29_1.state_ = "playing"
		arg_29_1.curTalkId_ = 413161007
		arg_29_1.duration_ = 6.3

		local var_29_0 = {
			zh = 4.033,
			ja = 6.3
		}
		local var_29_1 = manager.audio:GetLocalizationFlag()

		if var_29_0[var_29_1] ~= nil then
			arg_29_1.duration_ = var_29_0[var_29_1]
		end

		SetActive(arg_29_1.tipsGo_, false)

		function arg_29_1.onSingleLineFinish_()
			arg_29_1.onSingleLineUpdate_ = nil
			arg_29_1.onSingleLineFinish_ = nil
			arg_29_1.state_ = "waiting"
		end

		function arg_29_1.playNext_(arg_31_0)
			if arg_31_0 == 1 then
				arg_29_0:Play413161008(arg_29_1)
			end
		end

		function arg_29_1.onSingleLineUpdate_(arg_32_0)
			local var_32_0 = arg_29_1.actors_["10094"]
			local var_32_1 = 0

			if var_32_1 < arg_29_1.time_ and arg_29_1.time_ <= var_32_1 + arg_32_0 and not isNil(var_32_0) and arg_29_1.var_.actorSpriteComps10094 == nil then
				arg_29_1.var_.actorSpriteComps10094 = var_32_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_32_2 = 2

			if var_32_1 <= arg_29_1.time_ and arg_29_1.time_ < var_32_1 + var_32_2 and not isNil(var_32_0) then
				local var_32_3 = (arg_29_1.time_ - var_32_1) / var_32_2

				if arg_29_1.var_.actorSpriteComps10094 then
					for iter_32_0, iter_32_1 in pairs(arg_29_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_32_1 then
							if arg_29_1.isInRecall_ then
								local var_32_4 = Mathf.Lerp(iter_32_1.color.r, arg_29_1.hightColor1.r, var_32_3)
								local var_32_5 = Mathf.Lerp(iter_32_1.color.g, arg_29_1.hightColor1.g, var_32_3)
								local var_32_6 = Mathf.Lerp(iter_32_1.color.b, arg_29_1.hightColor1.b, var_32_3)

								iter_32_1.color = Color.New(var_32_4, var_32_5, var_32_6)
							else
								local var_32_7 = Mathf.Lerp(iter_32_1.color.r, 1, var_32_3)

								iter_32_1.color = Color.New(var_32_7, var_32_7, var_32_7)
							end
						end
					end
				end
			end

			if arg_29_1.time_ >= var_32_1 + var_32_2 and arg_29_1.time_ < var_32_1 + var_32_2 + arg_32_0 and not isNil(var_32_0) and arg_29_1.var_.actorSpriteComps10094 then
				for iter_32_2, iter_32_3 in pairs(arg_29_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_32_3 then
						if arg_29_1.isInRecall_ then
							iter_32_3.color = arg_29_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_32_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_29_1.var_.actorSpriteComps10094 = nil
			end

			local var_32_8 = 0
			local var_32_9 = 0.425

			if var_32_8 < arg_29_1.time_ and arg_29_1.time_ <= var_32_8 + arg_32_0 then
				arg_29_1.talkMaxDuration = 0
				arg_29_1.dialogCg_.alpha = 1

				arg_29_1.dialog_:SetActive(true)
				SetActive(arg_29_1.leftNameGo_, true)

				local var_32_10 = arg_29_1:FormatText(StoryNameCfg[259].name)

				arg_29_1.leftNameTxt_.text = var_32_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_29_1.leftNameTxt_.transform)

				arg_29_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_29_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_29_1:RecordName(arg_29_1.leftNameTxt_.text)
				SetActive(arg_29_1.iconTrs_.gameObject, false)
				arg_29_1.callingController_:SetSelectedState("normal")

				local var_32_11 = arg_29_1:GetWordFromCfg(413161007)
				local var_32_12 = arg_29_1:FormatText(var_32_11.content)

				arg_29_1.text_.text = var_32_12

				LuaForUtil.ClearLinePrefixSymbol(arg_29_1.text_)

				local var_32_13 = 17
				local var_32_14 = utf8.len(var_32_12)
				local var_32_15 = var_32_13 <= 0 and var_32_9 or var_32_9 * (var_32_14 / var_32_13)

				if var_32_15 > 0 and var_32_9 < var_32_15 then
					arg_29_1.talkMaxDuration = var_32_15

					if var_32_15 + var_32_8 > arg_29_1.duration_ then
						arg_29_1.duration_ = var_32_15 + var_32_8
					end
				end

				arg_29_1.text_.text = var_32_12
				arg_29_1.typewritter.percent = 0

				arg_29_1.typewritter:SetDirty()
				arg_29_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161007", "story_v_out_413161.awb") ~= 0 then
					local var_32_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161007", "story_v_out_413161.awb") / 1000

					if var_32_16 + var_32_8 > arg_29_1.duration_ then
						arg_29_1.duration_ = var_32_16 + var_32_8
					end

					if var_32_11.prefab_name ~= "" and arg_29_1.actors_[var_32_11.prefab_name] ~= nil then
						local var_32_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_29_1.actors_[var_32_11.prefab_name].transform, "story_v_out_413161", "413161007", "story_v_out_413161.awb")

						arg_29_1:RecordAudio("413161007", var_32_17)
						arg_29_1:RecordAudio("413161007", var_32_17)
					else
						arg_29_1:AudioAction("play", "voice", "story_v_out_413161", "413161007", "story_v_out_413161.awb")
					end

					arg_29_1:RecordHistoryTalkVoice("story_v_out_413161", "413161007", "story_v_out_413161.awb")
				end

				arg_29_1:RecordContent(arg_29_1.text_.text)
			end

			local var_32_18 = math.max(var_32_9, arg_29_1.talkMaxDuration)

			if var_32_8 <= arg_29_1.time_ and arg_29_1.time_ < var_32_8 + var_32_18 then
				arg_29_1.typewritter.percent = (arg_29_1.time_ - var_32_8) / var_32_18

				arg_29_1.typewritter:SetDirty()
			end

			if arg_29_1.time_ >= var_32_8 + var_32_18 and arg_29_1.time_ < var_32_8 + var_32_18 + arg_32_0 then
				arg_29_1.typewritter.percent = 1

				arg_29_1.typewritter:SetDirty()
				arg_29_1:ShowNextGo(true)
			end
		end
	end,
	Play413161008 = function(arg_33_0, arg_33_1)
		arg_33_1.time_ = 0
		arg_33_1.frameCnt_ = 0
		arg_33_1.state_ = "playing"
		arg_33_1.curTalkId_ = 413161008
		arg_33_1.duration_ = 6.6

		local var_33_0 = {
			zh = 5.9,
			ja = 6.6
		}
		local var_33_1 = manager.audio:GetLocalizationFlag()

		if var_33_0[var_33_1] ~= nil then
			arg_33_1.duration_ = var_33_0[var_33_1]
		end

		SetActive(arg_33_1.tipsGo_, false)

		function arg_33_1.onSingleLineFinish_()
			arg_33_1.onSingleLineUpdate_ = nil
			arg_33_1.onSingleLineFinish_ = nil
			arg_33_1.state_ = "waiting"
		end

		function arg_33_1.playNext_(arg_35_0)
			if arg_35_0 == 1 then
				arg_33_0:Play413161009(arg_33_1)
			end
		end

		function arg_33_1.onSingleLineUpdate_(arg_36_0)
			local var_36_0 = 0
			local var_36_1 = 0.6

			if var_36_0 < arg_33_1.time_ and arg_33_1.time_ <= var_36_0 + arg_36_0 then
				arg_33_1.talkMaxDuration = 0
				arg_33_1.dialogCg_.alpha = 1

				arg_33_1.dialog_:SetActive(true)
				SetActive(arg_33_1.leftNameGo_, true)

				local var_36_2 = arg_33_1:FormatText(StoryNameCfg[259].name)

				arg_33_1.leftNameTxt_.text = var_36_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_33_1.leftNameTxt_.transform)

				arg_33_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_33_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_33_1:RecordName(arg_33_1.leftNameTxt_.text)
				SetActive(arg_33_1.iconTrs_.gameObject, false)
				arg_33_1.callingController_:SetSelectedState("normal")

				local var_36_3 = arg_33_1:GetWordFromCfg(413161008)
				local var_36_4 = arg_33_1:FormatText(var_36_3.content)

				arg_33_1.text_.text = var_36_4

				LuaForUtil.ClearLinePrefixSymbol(arg_33_1.text_)

				local var_36_5 = 24
				local var_36_6 = utf8.len(var_36_4)
				local var_36_7 = var_36_5 <= 0 and var_36_1 or var_36_1 * (var_36_6 / var_36_5)

				if var_36_7 > 0 and var_36_1 < var_36_7 then
					arg_33_1.talkMaxDuration = var_36_7

					if var_36_7 + var_36_0 > arg_33_1.duration_ then
						arg_33_1.duration_ = var_36_7 + var_36_0
					end
				end

				arg_33_1.text_.text = var_36_4
				arg_33_1.typewritter.percent = 0

				arg_33_1.typewritter:SetDirty()
				arg_33_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161008", "story_v_out_413161.awb") ~= 0 then
					local var_36_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161008", "story_v_out_413161.awb") / 1000

					if var_36_8 + var_36_0 > arg_33_1.duration_ then
						arg_33_1.duration_ = var_36_8 + var_36_0
					end

					if var_36_3.prefab_name ~= "" and arg_33_1.actors_[var_36_3.prefab_name] ~= nil then
						local var_36_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_33_1.actors_[var_36_3.prefab_name].transform, "story_v_out_413161", "413161008", "story_v_out_413161.awb")

						arg_33_1:RecordAudio("413161008", var_36_9)
						arg_33_1:RecordAudio("413161008", var_36_9)
					else
						arg_33_1:AudioAction("play", "voice", "story_v_out_413161", "413161008", "story_v_out_413161.awb")
					end

					arg_33_1:RecordHistoryTalkVoice("story_v_out_413161", "413161008", "story_v_out_413161.awb")
				end

				arg_33_1:RecordContent(arg_33_1.text_.text)
			end

			local var_36_10 = math.max(var_36_1, arg_33_1.talkMaxDuration)

			if var_36_0 <= arg_33_1.time_ and arg_33_1.time_ < var_36_0 + var_36_10 then
				arg_33_1.typewritter.percent = (arg_33_1.time_ - var_36_0) / var_36_10

				arg_33_1.typewritter:SetDirty()
			end

			if arg_33_1.time_ >= var_36_0 + var_36_10 and arg_33_1.time_ < var_36_0 + var_36_10 + arg_36_0 then
				arg_33_1.typewritter.percent = 1

				arg_33_1.typewritter:SetDirty()
				arg_33_1:ShowNextGo(true)
			end
		end
	end,
	Play413161009 = function(arg_37_0, arg_37_1)
		arg_37_1.time_ = 0
		arg_37_1.frameCnt_ = 0
		arg_37_1.state_ = "playing"
		arg_37_1.curTalkId_ = 413161009
		arg_37_1.duration_ = 7.73

		local var_37_0 = {
			zh = 6.866,
			ja = 7.733
		}
		local var_37_1 = manager.audio:GetLocalizationFlag()

		if var_37_0[var_37_1] ~= nil then
			arg_37_1.duration_ = var_37_0[var_37_1]
		end

		SetActive(arg_37_1.tipsGo_, false)

		function arg_37_1.onSingleLineFinish_()
			arg_37_1.onSingleLineUpdate_ = nil
			arg_37_1.onSingleLineFinish_ = nil
			arg_37_1.state_ = "waiting"
		end

		function arg_37_1.playNext_(arg_39_0)
			if arg_39_0 == 1 then
				arg_37_0:Play413161010(arg_37_1)
			end
		end

		function arg_37_1.onSingleLineUpdate_(arg_40_0)
			local var_40_0 = arg_37_1.actors_["10094"]
			local var_40_1 = 0

			if var_40_1 < arg_37_1.time_ and arg_37_1.time_ <= var_40_1 + arg_40_0 and not isNil(var_40_0) and arg_37_1.var_.actorSpriteComps10094 == nil then
				arg_37_1.var_.actorSpriteComps10094 = var_40_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_40_2 = 2

			if var_40_1 <= arg_37_1.time_ and arg_37_1.time_ < var_40_1 + var_40_2 and not isNil(var_40_0) then
				local var_40_3 = (arg_37_1.time_ - var_40_1) / var_40_2

				if arg_37_1.var_.actorSpriteComps10094 then
					for iter_40_0, iter_40_1 in pairs(arg_37_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_40_1 then
							if arg_37_1.isInRecall_ then
								local var_40_4 = Mathf.Lerp(iter_40_1.color.r, arg_37_1.hightColor2.r, var_40_3)
								local var_40_5 = Mathf.Lerp(iter_40_1.color.g, arg_37_1.hightColor2.g, var_40_3)
								local var_40_6 = Mathf.Lerp(iter_40_1.color.b, arg_37_1.hightColor2.b, var_40_3)

								iter_40_1.color = Color.New(var_40_4, var_40_5, var_40_6)
							else
								local var_40_7 = Mathf.Lerp(iter_40_1.color.r, 0.5, var_40_3)

								iter_40_1.color = Color.New(var_40_7, var_40_7, var_40_7)
							end
						end
					end
				end
			end

			if arg_37_1.time_ >= var_40_1 + var_40_2 and arg_37_1.time_ < var_40_1 + var_40_2 + arg_40_0 and not isNil(var_40_0) and arg_37_1.var_.actorSpriteComps10094 then
				for iter_40_2, iter_40_3 in pairs(arg_37_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_40_3 then
						if arg_37_1.isInRecall_ then
							iter_40_3.color = arg_37_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_40_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_37_1.var_.actorSpriteComps10094 = nil
			end

			local var_40_8 = 0
			local var_40_9 = 0.925

			if var_40_8 < arg_37_1.time_ and arg_37_1.time_ <= var_40_8 + arg_40_0 then
				arg_37_1.talkMaxDuration = 0
				arg_37_1.dialogCg_.alpha = 1

				arg_37_1.dialog_:SetActive(true)
				SetActive(arg_37_1.leftNameGo_, true)

				local var_40_10 = arg_37_1:FormatText(StoryNameCfg[206].name)

				arg_37_1.leftNameTxt_.text = var_40_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_37_1.leftNameTxt_.transform)

				arg_37_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_37_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_37_1:RecordName(arg_37_1.leftNameTxt_.text)
				SetActive(arg_37_1.iconTrs_.gameObject, true)
				arg_37_1.iconController_:SetSelectedState("hero")

				arg_37_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1067")

				arg_37_1.callingController_:SetSelectedState("normal")

				arg_37_1.keyicon_.color = Color.New(1, 1, 1)
				arg_37_1.icon_.color = Color.New(1, 1, 1)

				local var_40_11 = arg_37_1:GetWordFromCfg(413161009)
				local var_40_12 = arg_37_1:FormatText(var_40_11.content)

				arg_37_1.text_.text = var_40_12

				LuaForUtil.ClearLinePrefixSymbol(arg_37_1.text_)

				local var_40_13 = 37
				local var_40_14 = utf8.len(var_40_12)
				local var_40_15 = var_40_13 <= 0 and var_40_9 or var_40_9 * (var_40_14 / var_40_13)

				if var_40_15 > 0 and var_40_9 < var_40_15 then
					arg_37_1.talkMaxDuration = var_40_15

					if var_40_15 + var_40_8 > arg_37_1.duration_ then
						arg_37_1.duration_ = var_40_15 + var_40_8
					end
				end

				arg_37_1.text_.text = var_40_12
				arg_37_1.typewritter.percent = 0

				arg_37_1.typewritter:SetDirty()
				arg_37_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161009", "story_v_out_413161.awb") ~= 0 then
					local var_40_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161009", "story_v_out_413161.awb") / 1000

					if var_40_16 + var_40_8 > arg_37_1.duration_ then
						arg_37_1.duration_ = var_40_16 + var_40_8
					end

					if var_40_11.prefab_name ~= "" and arg_37_1.actors_[var_40_11.prefab_name] ~= nil then
						local var_40_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_37_1.actors_[var_40_11.prefab_name].transform, "story_v_out_413161", "413161009", "story_v_out_413161.awb")

						arg_37_1:RecordAudio("413161009", var_40_17)
						arg_37_1:RecordAudio("413161009", var_40_17)
					else
						arg_37_1:AudioAction("play", "voice", "story_v_out_413161", "413161009", "story_v_out_413161.awb")
					end

					arg_37_1:RecordHistoryTalkVoice("story_v_out_413161", "413161009", "story_v_out_413161.awb")
				end

				arg_37_1:RecordContent(arg_37_1.text_.text)
			end

			local var_40_18 = math.max(var_40_9, arg_37_1.talkMaxDuration)

			if var_40_8 <= arg_37_1.time_ and arg_37_1.time_ < var_40_8 + var_40_18 then
				arg_37_1.typewritter.percent = (arg_37_1.time_ - var_40_8) / var_40_18

				arg_37_1.typewritter:SetDirty()
			end

			if arg_37_1.time_ >= var_40_8 + var_40_18 and arg_37_1.time_ < var_40_8 + var_40_18 + arg_40_0 then
				arg_37_1.typewritter.percent = 1

				arg_37_1.typewritter:SetDirty()
				arg_37_1:ShowNextGo(true)
			end
		end
	end,
	Play413161010 = function(arg_41_0, arg_41_1)
		arg_41_1.time_ = 0
		arg_41_1.frameCnt_ = 0
		arg_41_1.state_ = "playing"
		arg_41_1.curTalkId_ = 413161010
		arg_41_1.duration_ = 6.8

		SetActive(arg_41_1.tipsGo_, false)

		function arg_41_1.onSingleLineFinish_()
			arg_41_1.onSingleLineUpdate_ = nil
			arg_41_1.onSingleLineFinish_ = nil
			arg_41_1.state_ = "waiting"
		end

		function arg_41_1.playNext_(arg_43_0)
			if arg_43_0 == 1 then
				arg_41_0:Play413161011(arg_41_1)
			end
		end

		function arg_41_1.onSingleLineUpdate_(arg_44_0)
			local var_44_0 = 0
			local var_44_1 = 0.825

			if var_44_0 < arg_41_1.time_ and arg_41_1.time_ <= var_44_0 + arg_44_0 then
				arg_41_1.talkMaxDuration = 0
				arg_41_1.dialogCg_.alpha = 1

				arg_41_1.dialog_:SetActive(true)
				SetActive(arg_41_1.leftNameGo_, true)

				local var_44_2 = arg_41_1:FormatText(StoryNameCfg[205].name)

				arg_41_1.leftNameTxt_.text = var_44_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_41_1.leftNameTxt_.transform)

				arg_41_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_41_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_41_1:RecordName(arg_41_1.leftNameTxt_.text)
				SetActive(arg_41_1.iconTrs_.gameObject, true)
				arg_41_1.iconController_:SetSelectedState("hero")

				arg_41_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1042")

				arg_41_1.callingController_:SetSelectedState("normal")

				arg_41_1.keyicon_.color = Color.New(1, 1, 1)
				arg_41_1.icon_.color = Color.New(1, 1, 1)

				local var_44_3 = arg_41_1:GetWordFromCfg(413161010)
				local var_44_4 = arg_41_1:FormatText(var_44_3.content)

				arg_41_1.text_.text = var_44_4

				LuaForUtil.ClearLinePrefixSymbol(arg_41_1.text_)

				local var_44_5 = 33
				local var_44_6 = utf8.len(var_44_4)
				local var_44_7 = var_44_5 <= 0 and var_44_1 or var_44_1 * (var_44_6 / var_44_5)

				if var_44_7 > 0 and var_44_1 < var_44_7 then
					arg_41_1.talkMaxDuration = var_44_7

					if var_44_7 + var_44_0 > arg_41_1.duration_ then
						arg_41_1.duration_ = var_44_7 + var_44_0
					end
				end

				arg_41_1.text_.text = var_44_4
				arg_41_1.typewritter.percent = 0

				arg_41_1.typewritter:SetDirty()
				arg_41_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161010", "story_v_out_413161.awb") ~= 0 then
					local var_44_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161010", "story_v_out_413161.awb") / 1000

					if var_44_8 + var_44_0 > arg_41_1.duration_ then
						arg_41_1.duration_ = var_44_8 + var_44_0
					end

					if var_44_3.prefab_name ~= "" and arg_41_1.actors_[var_44_3.prefab_name] ~= nil then
						local var_44_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_41_1.actors_[var_44_3.prefab_name].transform, "story_v_out_413161", "413161010", "story_v_out_413161.awb")

						arg_41_1:RecordAudio("413161010", var_44_9)
						arg_41_1:RecordAudio("413161010", var_44_9)
					else
						arg_41_1:AudioAction("play", "voice", "story_v_out_413161", "413161010", "story_v_out_413161.awb")
					end

					arg_41_1:RecordHistoryTalkVoice("story_v_out_413161", "413161010", "story_v_out_413161.awb")
				end

				arg_41_1:RecordContent(arg_41_1.text_.text)
			end

			local var_44_10 = math.max(var_44_1, arg_41_1.talkMaxDuration)

			if var_44_0 <= arg_41_1.time_ and arg_41_1.time_ < var_44_0 + var_44_10 then
				arg_41_1.typewritter.percent = (arg_41_1.time_ - var_44_0) / var_44_10

				arg_41_1.typewritter:SetDirty()
			end

			if arg_41_1.time_ >= var_44_0 + var_44_10 and arg_41_1.time_ < var_44_0 + var_44_10 + arg_44_0 then
				arg_41_1.typewritter.percent = 1

				arg_41_1.typewritter:SetDirty()
				arg_41_1:ShowNextGo(true)
			end
		end
	end,
	Play413161011 = function(arg_45_0, arg_45_1)
		arg_45_1.time_ = 0
		arg_45_1.frameCnt_ = 0
		arg_45_1.state_ = "playing"
		arg_45_1.curTalkId_ = 413161011
		arg_45_1.duration_ = 6.73

		local var_45_0 = {
			zh = 5.433,
			ja = 6.733
		}
		local var_45_1 = manager.audio:GetLocalizationFlag()

		if var_45_0[var_45_1] ~= nil then
			arg_45_1.duration_ = var_45_0[var_45_1]
		end

		SetActive(arg_45_1.tipsGo_, false)

		function arg_45_1.onSingleLineFinish_()
			arg_45_1.onSingleLineUpdate_ = nil
			arg_45_1.onSingleLineFinish_ = nil
			arg_45_1.state_ = "waiting"
		end

		function arg_45_1.playNext_(arg_47_0)
			if arg_47_0 == 1 then
				arg_45_0:Play413161012(arg_45_1)
			end
		end

		function arg_45_1.onSingleLineUpdate_(arg_48_0)
			local var_48_0 = arg_45_1.actors_["10094"]
			local var_48_1 = 0

			if var_48_1 < arg_45_1.time_ and arg_45_1.time_ <= var_48_1 + arg_48_0 and not isNil(var_48_0) and arg_45_1.var_.actorSpriteComps10094 == nil then
				arg_45_1.var_.actorSpriteComps10094 = var_48_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_48_2 = 2

			if var_48_1 <= arg_45_1.time_ and arg_45_1.time_ < var_48_1 + var_48_2 and not isNil(var_48_0) then
				local var_48_3 = (arg_45_1.time_ - var_48_1) / var_48_2

				if arg_45_1.var_.actorSpriteComps10094 then
					for iter_48_0, iter_48_1 in pairs(arg_45_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_48_1 then
							if arg_45_1.isInRecall_ then
								local var_48_4 = Mathf.Lerp(iter_48_1.color.r, arg_45_1.hightColor1.r, var_48_3)
								local var_48_5 = Mathf.Lerp(iter_48_1.color.g, arg_45_1.hightColor1.g, var_48_3)
								local var_48_6 = Mathf.Lerp(iter_48_1.color.b, arg_45_1.hightColor1.b, var_48_3)

								iter_48_1.color = Color.New(var_48_4, var_48_5, var_48_6)
							else
								local var_48_7 = Mathf.Lerp(iter_48_1.color.r, 1, var_48_3)

								iter_48_1.color = Color.New(var_48_7, var_48_7, var_48_7)
							end
						end
					end
				end
			end

			if arg_45_1.time_ >= var_48_1 + var_48_2 and arg_45_1.time_ < var_48_1 + var_48_2 + arg_48_0 and not isNil(var_48_0) and arg_45_1.var_.actorSpriteComps10094 then
				for iter_48_2, iter_48_3 in pairs(arg_45_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_48_3 then
						if arg_45_1.isInRecall_ then
							iter_48_3.color = arg_45_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_48_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_45_1.var_.actorSpriteComps10094 = nil
			end

			local var_48_8 = 0
			local var_48_9 = 0.525

			if var_48_8 < arg_45_1.time_ and arg_45_1.time_ <= var_48_8 + arg_48_0 then
				arg_45_1.talkMaxDuration = 0
				arg_45_1.dialogCg_.alpha = 1

				arg_45_1.dialog_:SetActive(true)
				SetActive(arg_45_1.leftNameGo_, true)

				local var_48_10 = arg_45_1:FormatText(StoryNameCfg[259].name)

				arg_45_1.leftNameTxt_.text = var_48_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_45_1.leftNameTxt_.transform)

				arg_45_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_45_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_45_1:RecordName(arg_45_1.leftNameTxt_.text)
				SetActive(arg_45_1.iconTrs_.gameObject, false)
				arg_45_1.callingController_:SetSelectedState("normal")

				local var_48_11 = arg_45_1:GetWordFromCfg(413161011)
				local var_48_12 = arg_45_1:FormatText(var_48_11.content)

				arg_45_1.text_.text = var_48_12

				LuaForUtil.ClearLinePrefixSymbol(arg_45_1.text_)

				local var_48_13 = 21
				local var_48_14 = utf8.len(var_48_12)
				local var_48_15 = var_48_13 <= 0 and var_48_9 or var_48_9 * (var_48_14 / var_48_13)

				if var_48_15 > 0 and var_48_9 < var_48_15 then
					arg_45_1.talkMaxDuration = var_48_15

					if var_48_15 + var_48_8 > arg_45_1.duration_ then
						arg_45_1.duration_ = var_48_15 + var_48_8
					end
				end

				arg_45_1.text_.text = var_48_12
				arg_45_1.typewritter.percent = 0

				arg_45_1.typewritter:SetDirty()
				arg_45_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161011", "story_v_out_413161.awb") ~= 0 then
					local var_48_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161011", "story_v_out_413161.awb") / 1000

					if var_48_16 + var_48_8 > arg_45_1.duration_ then
						arg_45_1.duration_ = var_48_16 + var_48_8
					end

					if var_48_11.prefab_name ~= "" and arg_45_1.actors_[var_48_11.prefab_name] ~= nil then
						local var_48_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_45_1.actors_[var_48_11.prefab_name].transform, "story_v_out_413161", "413161011", "story_v_out_413161.awb")

						arg_45_1:RecordAudio("413161011", var_48_17)
						arg_45_1:RecordAudio("413161011", var_48_17)
					else
						arg_45_1:AudioAction("play", "voice", "story_v_out_413161", "413161011", "story_v_out_413161.awb")
					end

					arg_45_1:RecordHistoryTalkVoice("story_v_out_413161", "413161011", "story_v_out_413161.awb")
				end

				arg_45_1:RecordContent(arg_45_1.text_.text)
			end

			local var_48_18 = math.max(var_48_9, arg_45_1.talkMaxDuration)

			if var_48_8 <= arg_45_1.time_ and arg_45_1.time_ < var_48_8 + var_48_18 then
				arg_45_1.typewritter.percent = (arg_45_1.time_ - var_48_8) / var_48_18

				arg_45_1.typewritter:SetDirty()
			end

			if arg_45_1.time_ >= var_48_8 + var_48_18 and arg_45_1.time_ < var_48_8 + var_48_18 + arg_48_0 then
				arg_45_1.typewritter.percent = 1

				arg_45_1.typewritter:SetDirty()
				arg_45_1:ShowNextGo(true)
			end
		end
	end,
	Play413161012 = function(arg_49_0, arg_49_1)
		arg_49_1.time_ = 0
		arg_49_1.frameCnt_ = 0
		arg_49_1.state_ = "playing"
		arg_49_1.curTalkId_ = 413161012
		arg_49_1.duration_ = 8.73

		local var_49_0 = {
			zh = 5.966,
			ja = 8.733
		}
		local var_49_1 = manager.audio:GetLocalizationFlag()

		if var_49_0[var_49_1] ~= nil then
			arg_49_1.duration_ = var_49_0[var_49_1]
		end

		SetActive(arg_49_1.tipsGo_, false)

		function arg_49_1.onSingleLineFinish_()
			arg_49_1.onSingleLineUpdate_ = nil
			arg_49_1.onSingleLineFinish_ = nil
			arg_49_1.state_ = "waiting"
		end

		function arg_49_1.playNext_(arg_51_0)
			if arg_51_0 == 1 then
				arg_49_0:Play413161013(arg_49_1)
			end
		end

		function arg_49_1.onSingleLineUpdate_(arg_52_0)
			local var_52_0 = arg_49_1.actors_["10094"].transform
			local var_52_1 = 0

			if var_52_1 < arg_49_1.time_ and arg_49_1.time_ <= var_52_1 + arg_52_0 then
				arg_49_1.var_.moveOldPos10094 = var_52_0.localPosition
				var_52_0.localScale = Vector3.New(1, 1, 1)

				arg_49_1:CheckSpriteTmpPos("10094", 3)

				local var_52_2 = var_52_0.childCount

				for iter_52_0 = 0, var_52_2 - 1 do
					local var_52_3 = var_52_0:GetChild(iter_52_0)

					if var_52_3.name == "" or not string.find(var_52_3.name, "split") then
						var_52_3.gameObject:SetActive(true)
					else
						var_52_3.gameObject:SetActive(false)
					end
				end
			end

			local var_52_4 = 0.001

			if var_52_1 <= arg_49_1.time_ and arg_49_1.time_ < var_52_1 + var_52_4 then
				local var_52_5 = (arg_49_1.time_ - var_52_1) / var_52_4
				local var_52_6 = Vector3.New(0, -340, -414)

				var_52_0.localPosition = Vector3.Lerp(arg_49_1.var_.moveOldPos10094, var_52_6, var_52_5)
			end

			if arg_49_1.time_ >= var_52_1 + var_52_4 and arg_49_1.time_ < var_52_1 + var_52_4 + arg_52_0 then
				var_52_0.localPosition = Vector3.New(0, -340, -414)
			end

			local var_52_7 = arg_49_1.actors_["10094"]
			local var_52_8 = 0

			if var_52_8 < arg_49_1.time_ and arg_49_1.time_ <= var_52_8 + arg_52_0 and not isNil(var_52_7) and arg_49_1.var_.actorSpriteComps10094 == nil then
				arg_49_1.var_.actorSpriteComps10094 = var_52_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_52_9 = 2

			if var_52_8 <= arg_49_1.time_ and arg_49_1.time_ < var_52_8 + var_52_9 and not isNil(var_52_7) then
				local var_52_10 = (arg_49_1.time_ - var_52_8) / var_52_9

				if arg_49_1.var_.actorSpriteComps10094 then
					for iter_52_1, iter_52_2 in pairs(arg_49_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_52_2 then
							if arg_49_1.isInRecall_ then
								local var_52_11 = Mathf.Lerp(iter_52_2.color.r, arg_49_1.hightColor2.r, var_52_10)
								local var_52_12 = Mathf.Lerp(iter_52_2.color.g, arg_49_1.hightColor2.g, var_52_10)
								local var_52_13 = Mathf.Lerp(iter_52_2.color.b, arg_49_1.hightColor2.b, var_52_10)

								iter_52_2.color = Color.New(var_52_11, var_52_12, var_52_13)
							else
								local var_52_14 = Mathf.Lerp(iter_52_2.color.r, 0.5, var_52_10)

								iter_52_2.color = Color.New(var_52_14, var_52_14, var_52_14)
							end
						end
					end
				end
			end

			if arg_49_1.time_ >= var_52_8 + var_52_9 and arg_49_1.time_ < var_52_8 + var_52_9 + arg_52_0 and not isNil(var_52_7) and arg_49_1.var_.actorSpriteComps10094 then
				for iter_52_3, iter_52_4 in pairs(arg_49_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_52_4 then
						if arg_49_1.isInRecall_ then
							iter_52_4.color = arg_49_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_52_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_49_1.var_.actorSpriteComps10094 = nil
			end

			local var_52_15 = 0
			local var_52_16 = 0.725

			if var_52_15 < arg_49_1.time_ and arg_49_1.time_ <= var_52_15 + arg_52_0 then
				arg_49_1.talkMaxDuration = 0
				arg_49_1.dialogCg_.alpha = 1

				arg_49_1.dialog_:SetActive(true)
				SetActive(arg_49_1.leftNameGo_, true)

				local var_52_17 = arg_49_1:FormatText(StoryNameCfg[205].name)

				arg_49_1.leftNameTxt_.text = var_52_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_49_1.leftNameTxt_.transform)

				arg_49_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_49_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_49_1:RecordName(arg_49_1.leftNameTxt_.text)
				SetActive(arg_49_1.iconTrs_.gameObject, true)
				arg_49_1.iconController_:SetSelectedState("hero")

				arg_49_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1042")

				arg_49_1.callingController_:SetSelectedState("normal")

				arg_49_1.keyicon_.color = Color.New(1, 1, 1)
				arg_49_1.icon_.color = Color.New(1, 1, 1)

				local var_52_18 = arg_49_1:GetWordFromCfg(413161012)
				local var_52_19 = arg_49_1:FormatText(var_52_18.content)

				arg_49_1.text_.text = var_52_19

				LuaForUtil.ClearLinePrefixSymbol(arg_49_1.text_)

				local var_52_20 = 29
				local var_52_21 = utf8.len(var_52_19)
				local var_52_22 = var_52_20 <= 0 and var_52_16 or var_52_16 * (var_52_21 / var_52_20)

				if var_52_22 > 0 and var_52_16 < var_52_22 then
					arg_49_1.talkMaxDuration = var_52_22

					if var_52_22 + var_52_15 > arg_49_1.duration_ then
						arg_49_1.duration_ = var_52_22 + var_52_15
					end
				end

				arg_49_1.text_.text = var_52_19
				arg_49_1.typewritter.percent = 0

				arg_49_1.typewritter:SetDirty()
				arg_49_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161012", "story_v_out_413161.awb") ~= 0 then
					local var_52_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161012", "story_v_out_413161.awb") / 1000

					if var_52_23 + var_52_15 > arg_49_1.duration_ then
						arg_49_1.duration_ = var_52_23 + var_52_15
					end

					if var_52_18.prefab_name ~= "" and arg_49_1.actors_[var_52_18.prefab_name] ~= nil then
						local var_52_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_49_1.actors_[var_52_18.prefab_name].transform, "story_v_out_413161", "413161012", "story_v_out_413161.awb")

						arg_49_1:RecordAudio("413161012", var_52_24)
						arg_49_1:RecordAudio("413161012", var_52_24)
					else
						arg_49_1:AudioAction("play", "voice", "story_v_out_413161", "413161012", "story_v_out_413161.awb")
					end

					arg_49_1:RecordHistoryTalkVoice("story_v_out_413161", "413161012", "story_v_out_413161.awb")
				end

				arg_49_1:RecordContent(arg_49_1.text_.text)
			end

			local var_52_25 = math.max(var_52_16, arg_49_1.talkMaxDuration)

			if var_52_15 <= arg_49_1.time_ and arg_49_1.time_ < var_52_15 + var_52_25 then
				arg_49_1.typewritter.percent = (arg_49_1.time_ - var_52_15) / var_52_25

				arg_49_1.typewritter:SetDirty()
			end

			if arg_49_1.time_ >= var_52_15 + var_52_25 and arg_49_1.time_ < var_52_15 + var_52_25 + arg_52_0 then
				arg_49_1.typewritter.percent = 1

				arg_49_1.typewritter:SetDirty()
				arg_49_1:ShowNextGo(true)
			end
		end
	end,
	Play413161013 = function(arg_53_0, arg_53_1)
		arg_53_1.time_ = 0
		arg_53_1.frameCnt_ = 0
		arg_53_1.state_ = "playing"
		arg_53_1.curTalkId_ = 413161013
		arg_53_1.duration_ = 6.97

		local var_53_0 = {
			zh = 3.7,
			ja = 6.966
		}
		local var_53_1 = manager.audio:GetLocalizationFlag()

		if var_53_0[var_53_1] ~= nil then
			arg_53_1.duration_ = var_53_0[var_53_1]
		end

		SetActive(arg_53_1.tipsGo_, false)

		function arg_53_1.onSingleLineFinish_()
			arg_53_1.onSingleLineUpdate_ = nil
			arg_53_1.onSingleLineFinish_ = nil
			arg_53_1.state_ = "waiting"
		end

		function arg_53_1.playNext_(arg_55_0)
			if arg_55_0 == 1 then
				arg_53_0:Play413161014(arg_53_1)
			end
		end

		function arg_53_1.onSingleLineUpdate_(arg_56_0)
			local var_56_0 = arg_53_1.actors_["10094"]
			local var_56_1 = 0

			if var_56_1 < arg_53_1.time_ and arg_53_1.time_ <= var_56_1 + arg_56_0 and not isNil(var_56_0) and arg_53_1.var_.actorSpriteComps10094 == nil then
				arg_53_1.var_.actorSpriteComps10094 = var_56_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_56_2 = 2

			if var_56_1 <= arg_53_1.time_ and arg_53_1.time_ < var_56_1 + var_56_2 and not isNil(var_56_0) then
				local var_56_3 = (arg_53_1.time_ - var_56_1) / var_56_2

				if arg_53_1.var_.actorSpriteComps10094 then
					for iter_56_0, iter_56_1 in pairs(arg_53_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_56_1 then
							if arg_53_1.isInRecall_ then
								local var_56_4 = Mathf.Lerp(iter_56_1.color.r, arg_53_1.hightColor1.r, var_56_3)
								local var_56_5 = Mathf.Lerp(iter_56_1.color.g, arg_53_1.hightColor1.g, var_56_3)
								local var_56_6 = Mathf.Lerp(iter_56_1.color.b, arg_53_1.hightColor1.b, var_56_3)

								iter_56_1.color = Color.New(var_56_4, var_56_5, var_56_6)
							else
								local var_56_7 = Mathf.Lerp(iter_56_1.color.r, 1, var_56_3)

								iter_56_1.color = Color.New(var_56_7, var_56_7, var_56_7)
							end
						end
					end
				end
			end

			if arg_53_1.time_ >= var_56_1 + var_56_2 and arg_53_1.time_ < var_56_1 + var_56_2 + arg_56_0 and not isNil(var_56_0) and arg_53_1.var_.actorSpriteComps10094 then
				for iter_56_2, iter_56_3 in pairs(arg_53_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_56_3 then
						if arg_53_1.isInRecall_ then
							iter_56_3.color = arg_53_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_56_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_53_1.var_.actorSpriteComps10094 = nil
			end

			local var_56_8 = 0
			local var_56_9 = 0.4

			if var_56_8 < arg_53_1.time_ and arg_53_1.time_ <= var_56_8 + arg_56_0 then
				arg_53_1.talkMaxDuration = 0
				arg_53_1.dialogCg_.alpha = 1

				arg_53_1.dialog_:SetActive(true)
				SetActive(arg_53_1.leftNameGo_, true)

				local var_56_10 = arg_53_1:FormatText(StoryNameCfg[259].name)

				arg_53_1.leftNameTxt_.text = var_56_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_53_1.leftNameTxt_.transform)

				arg_53_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_53_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_53_1:RecordName(arg_53_1.leftNameTxt_.text)
				SetActive(arg_53_1.iconTrs_.gameObject, false)
				arg_53_1.callingController_:SetSelectedState("normal")

				local var_56_11 = arg_53_1:GetWordFromCfg(413161013)
				local var_56_12 = arg_53_1:FormatText(var_56_11.content)

				arg_53_1.text_.text = var_56_12

				LuaForUtil.ClearLinePrefixSymbol(arg_53_1.text_)

				local var_56_13 = 16
				local var_56_14 = utf8.len(var_56_12)
				local var_56_15 = var_56_13 <= 0 and var_56_9 or var_56_9 * (var_56_14 / var_56_13)

				if var_56_15 > 0 and var_56_9 < var_56_15 then
					arg_53_1.talkMaxDuration = var_56_15

					if var_56_15 + var_56_8 > arg_53_1.duration_ then
						arg_53_1.duration_ = var_56_15 + var_56_8
					end
				end

				arg_53_1.text_.text = var_56_12
				arg_53_1.typewritter.percent = 0

				arg_53_1.typewritter:SetDirty()
				arg_53_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161013", "story_v_out_413161.awb") ~= 0 then
					local var_56_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161013", "story_v_out_413161.awb") / 1000

					if var_56_16 + var_56_8 > arg_53_1.duration_ then
						arg_53_1.duration_ = var_56_16 + var_56_8
					end

					if var_56_11.prefab_name ~= "" and arg_53_1.actors_[var_56_11.prefab_name] ~= nil then
						local var_56_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_53_1.actors_[var_56_11.prefab_name].transform, "story_v_out_413161", "413161013", "story_v_out_413161.awb")

						arg_53_1:RecordAudio("413161013", var_56_17)
						arg_53_1:RecordAudio("413161013", var_56_17)
					else
						arg_53_1:AudioAction("play", "voice", "story_v_out_413161", "413161013", "story_v_out_413161.awb")
					end

					arg_53_1:RecordHistoryTalkVoice("story_v_out_413161", "413161013", "story_v_out_413161.awb")
				end

				arg_53_1:RecordContent(arg_53_1.text_.text)
			end

			local var_56_18 = math.max(var_56_9, arg_53_1.talkMaxDuration)

			if var_56_8 <= arg_53_1.time_ and arg_53_1.time_ < var_56_8 + var_56_18 then
				arg_53_1.typewritter.percent = (arg_53_1.time_ - var_56_8) / var_56_18

				arg_53_1.typewritter:SetDirty()
			end

			if arg_53_1.time_ >= var_56_8 + var_56_18 and arg_53_1.time_ < var_56_8 + var_56_18 + arg_56_0 then
				arg_53_1.typewritter.percent = 1

				arg_53_1.typewritter:SetDirty()
				arg_53_1:ShowNextGo(true)
			end
		end
	end,
	Play413161014 = function(arg_57_0, arg_57_1)
		arg_57_1.time_ = 0
		arg_57_1.frameCnt_ = 0
		arg_57_1.state_ = "playing"
		arg_57_1.curTalkId_ = 413161014
		arg_57_1.duration_ = 11.03

		local var_57_0 = {
			zh = 8.2,
			ja = 11.033
		}
		local var_57_1 = manager.audio:GetLocalizationFlag()

		if var_57_0[var_57_1] ~= nil then
			arg_57_1.duration_ = var_57_0[var_57_1]
		end

		SetActive(arg_57_1.tipsGo_, false)

		function arg_57_1.onSingleLineFinish_()
			arg_57_1.onSingleLineUpdate_ = nil
			arg_57_1.onSingleLineFinish_ = nil
			arg_57_1.state_ = "waiting"
		end

		function arg_57_1.playNext_(arg_59_0)
			if arg_59_0 == 1 then
				arg_57_0:Play413161015(arg_57_1)
			end
		end

		function arg_57_1.onSingleLineUpdate_(arg_60_0)
			local var_60_0 = arg_57_1.actors_["10094"]
			local var_60_1 = 0

			if var_60_1 < arg_57_1.time_ and arg_57_1.time_ <= var_60_1 + arg_60_0 and not isNil(var_60_0) and arg_57_1.var_.actorSpriteComps10094 == nil then
				arg_57_1.var_.actorSpriteComps10094 = var_60_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_60_2 = 2

			if var_60_1 <= arg_57_1.time_ and arg_57_1.time_ < var_60_1 + var_60_2 and not isNil(var_60_0) then
				local var_60_3 = (arg_57_1.time_ - var_60_1) / var_60_2

				if arg_57_1.var_.actorSpriteComps10094 then
					for iter_60_0, iter_60_1 in pairs(arg_57_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_60_1 then
							if arg_57_1.isInRecall_ then
								local var_60_4 = Mathf.Lerp(iter_60_1.color.r, arg_57_1.hightColor2.r, var_60_3)
								local var_60_5 = Mathf.Lerp(iter_60_1.color.g, arg_57_1.hightColor2.g, var_60_3)
								local var_60_6 = Mathf.Lerp(iter_60_1.color.b, arg_57_1.hightColor2.b, var_60_3)

								iter_60_1.color = Color.New(var_60_4, var_60_5, var_60_6)
							else
								local var_60_7 = Mathf.Lerp(iter_60_1.color.r, 0.5, var_60_3)

								iter_60_1.color = Color.New(var_60_7, var_60_7, var_60_7)
							end
						end
					end
				end
			end

			if arg_57_1.time_ >= var_60_1 + var_60_2 and arg_57_1.time_ < var_60_1 + var_60_2 + arg_60_0 and not isNil(var_60_0) and arg_57_1.var_.actorSpriteComps10094 then
				for iter_60_2, iter_60_3 in pairs(arg_57_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_60_3 then
						if arg_57_1.isInRecall_ then
							iter_60_3.color = arg_57_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_60_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_57_1.var_.actorSpriteComps10094 = nil
			end

			local var_60_8 = 0
			local var_60_9 = 0.9

			if var_60_8 < arg_57_1.time_ and arg_57_1.time_ <= var_60_8 + arg_60_0 then
				arg_57_1.talkMaxDuration = 0
				arg_57_1.dialogCg_.alpha = 1

				arg_57_1.dialog_:SetActive(true)
				SetActive(arg_57_1.leftNameGo_, true)

				local var_60_10 = arg_57_1:FormatText(StoryNameCfg[205].name)

				arg_57_1.leftNameTxt_.text = var_60_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_57_1.leftNameTxt_.transform)

				arg_57_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_57_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_57_1:RecordName(arg_57_1.leftNameTxt_.text)
				SetActive(arg_57_1.iconTrs_.gameObject, true)
				arg_57_1.iconController_:SetSelectedState("hero")

				arg_57_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1042")

				arg_57_1.callingController_:SetSelectedState("normal")

				arg_57_1.keyicon_.color = Color.New(1, 1, 1)
				arg_57_1.icon_.color = Color.New(1, 1, 1)

				local var_60_11 = arg_57_1:GetWordFromCfg(413161014)
				local var_60_12 = arg_57_1:FormatText(var_60_11.content)

				arg_57_1.text_.text = var_60_12

				LuaForUtil.ClearLinePrefixSymbol(arg_57_1.text_)

				local var_60_13 = 36
				local var_60_14 = utf8.len(var_60_12)
				local var_60_15 = var_60_13 <= 0 and var_60_9 or var_60_9 * (var_60_14 / var_60_13)

				if var_60_15 > 0 and var_60_9 < var_60_15 then
					arg_57_1.talkMaxDuration = var_60_15

					if var_60_15 + var_60_8 > arg_57_1.duration_ then
						arg_57_1.duration_ = var_60_15 + var_60_8
					end
				end

				arg_57_1.text_.text = var_60_12
				arg_57_1.typewritter.percent = 0

				arg_57_1.typewritter:SetDirty()
				arg_57_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161014", "story_v_out_413161.awb") ~= 0 then
					local var_60_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161014", "story_v_out_413161.awb") / 1000

					if var_60_16 + var_60_8 > arg_57_1.duration_ then
						arg_57_1.duration_ = var_60_16 + var_60_8
					end

					if var_60_11.prefab_name ~= "" and arg_57_1.actors_[var_60_11.prefab_name] ~= nil then
						local var_60_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_57_1.actors_[var_60_11.prefab_name].transform, "story_v_out_413161", "413161014", "story_v_out_413161.awb")

						arg_57_1:RecordAudio("413161014", var_60_17)
						arg_57_1:RecordAudio("413161014", var_60_17)
					else
						arg_57_1:AudioAction("play", "voice", "story_v_out_413161", "413161014", "story_v_out_413161.awb")
					end

					arg_57_1:RecordHistoryTalkVoice("story_v_out_413161", "413161014", "story_v_out_413161.awb")
				end

				arg_57_1:RecordContent(arg_57_1.text_.text)
			end

			local var_60_18 = math.max(var_60_9, arg_57_1.talkMaxDuration)

			if var_60_8 <= arg_57_1.time_ and arg_57_1.time_ < var_60_8 + var_60_18 then
				arg_57_1.typewritter.percent = (arg_57_1.time_ - var_60_8) / var_60_18

				arg_57_1.typewritter:SetDirty()
			end

			if arg_57_1.time_ >= var_60_8 + var_60_18 and arg_57_1.time_ < var_60_8 + var_60_18 + arg_60_0 then
				arg_57_1.typewritter.percent = 1

				arg_57_1.typewritter:SetDirty()
				arg_57_1:ShowNextGo(true)
			end
		end
	end,
	Play413161015 = function(arg_61_0, arg_61_1)
		arg_61_1.time_ = 0
		arg_61_1.frameCnt_ = 0
		arg_61_1.state_ = "playing"
		arg_61_1.curTalkId_ = 413161015
		arg_61_1.duration_ = 7.77

		local var_61_0 = {
			zh = 3.666,
			ja = 7.766
		}
		local var_61_1 = manager.audio:GetLocalizationFlag()

		if var_61_0[var_61_1] ~= nil then
			arg_61_1.duration_ = var_61_0[var_61_1]
		end

		SetActive(arg_61_1.tipsGo_, false)

		function arg_61_1.onSingleLineFinish_()
			arg_61_1.onSingleLineUpdate_ = nil
			arg_61_1.onSingleLineFinish_ = nil
			arg_61_1.state_ = "waiting"
		end

		function arg_61_1.playNext_(arg_63_0)
			if arg_63_0 == 1 then
				arg_61_0:Play413161016(arg_61_1)
			end
		end

		function arg_61_1.onSingleLineUpdate_(arg_64_0)
			local var_64_0 = arg_61_1.actors_["10094"]
			local var_64_1 = 0

			if var_64_1 < arg_61_1.time_ and arg_61_1.time_ <= var_64_1 + arg_64_0 and not isNil(var_64_0) and arg_61_1.var_.actorSpriteComps10094 == nil then
				arg_61_1.var_.actorSpriteComps10094 = var_64_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_64_2 = 2

			if var_64_1 <= arg_61_1.time_ and arg_61_1.time_ < var_64_1 + var_64_2 and not isNil(var_64_0) then
				local var_64_3 = (arg_61_1.time_ - var_64_1) / var_64_2

				if arg_61_1.var_.actorSpriteComps10094 then
					for iter_64_0, iter_64_1 in pairs(arg_61_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_64_1 then
							if arg_61_1.isInRecall_ then
								local var_64_4 = Mathf.Lerp(iter_64_1.color.r, arg_61_1.hightColor1.r, var_64_3)
								local var_64_5 = Mathf.Lerp(iter_64_1.color.g, arg_61_1.hightColor1.g, var_64_3)
								local var_64_6 = Mathf.Lerp(iter_64_1.color.b, arg_61_1.hightColor1.b, var_64_3)

								iter_64_1.color = Color.New(var_64_4, var_64_5, var_64_6)
							else
								local var_64_7 = Mathf.Lerp(iter_64_1.color.r, 1, var_64_3)

								iter_64_1.color = Color.New(var_64_7, var_64_7, var_64_7)
							end
						end
					end
				end
			end

			if arg_61_1.time_ >= var_64_1 + var_64_2 and arg_61_1.time_ < var_64_1 + var_64_2 + arg_64_0 and not isNil(var_64_0) and arg_61_1.var_.actorSpriteComps10094 then
				for iter_64_2, iter_64_3 in pairs(arg_61_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_64_3 then
						if arg_61_1.isInRecall_ then
							iter_64_3.color = arg_61_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_64_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_61_1.var_.actorSpriteComps10094 = nil
			end

			local var_64_8 = 0
			local var_64_9 = 0.425

			if var_64_8 < arg_61_1.time_ and arg_61_1.time_ <= var_64_8 + arg_64_0 then
				arg_61_1.talkMaxDuration = 0
				arg_61_1.dialogCg_.alpha = 1

				arg_61_1.dialog_:SetActive(true)
				SetActive(arg_61_1.leftNameGo_, true)

				local var_64_10 = arg_61_1:FormatText(StoryNameCfg[259].name)

				arg_61_1.leftNameTxt_.text = var_64_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_61_1.leftNameTxt_.transform)

				arg_61_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_61_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_61_1:RecordName(arg_61_1.leftNameTxt_.text)
				SetActive(arg_61_1.iconTrs_.gameObject, false)
				arg_61_1.callingController_:SetSelectedState("normal")

				local var_64_11 = arg_61_1:GetWordFromCfg(413161015)
				local var_64_12 = arg_61_1:FormatText(var_64_11.content)

				arg_61_1.text_.text = var_64_12

				LuaForUtil.ClearLinePrefixSymbol(arg_61_1.text_)

				local var_64_13 = 17
				local var_64_14 = utf8.len(var_64_12)
				local var_64_15 = var_64_13 <= 0 and var_64_9 or var_64_9 * (var_64_14 / var_64_13)

				if var_64_15 > 0 and var_64_9 < var_64_15 then
					arg_61_1.talkMaxDuration = var_64_15

					if var_64_15 + var_64_8 > arg_61_1.duration_ then
						arg_61_1.duration_ = var_64_15 + var_64_8
					end
				end

				arg_61_1.text_.text = var_64_12
				arg_61_1.typewritter.percent = 0

				arg_61_1.typewritter:SetDirty()
				arg_61_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161015", "story_v_out_413161.awb") ~= 0 then
					local var_64_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161015", "story_v_out_413161.awb") / 1000

					if var_64_16 + var_64_8 > arg_61_1.duration_ then
						arg_61_1.duration_ = var_64_16 + var_64_8
					end

					if var_64_11.prefab_name ~= "" and arg_61_1.actors_[var_64_11.prefab_name] ~= nil then
						local var_64_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_61_1.actors_[var_64_11.prefab_name].transform, "story_v_out_413161", "413161015", "story_v_out_413161.awb")

						arg_61_1:RecordAudio("413161015", var_64_17)
						arg_61_1:RecordAudio("413161015", var_64_17)
					else
						arg_61_1:AudioAction("play", "voice", "story_v_out_413161", "413161015", "story_v_out_413161.awb")
					end

					arg_61_1:RecordHistoryTalkVoice("story_v_out_413161", "413161015", "story_v_out_413161.awb")
				end

				arg_61_1:RecordContent(arg_61_1.text_.text)
			end

			local var_64_18 = math.max(var_64_9, arg_61_1.talkMaxDuration)

			if var_64_8 <= arg_61_1.time_ and arg_61_1.time_ < var_64_8 + var_64_18 then
				arg_61_1.typewritter.percent = (arg_61_1.time_ - var_64_8) / var_64_18

				arg_61_1.typewritter:SetDirty()
			end

			if arg_61_1.time_ >= var_64_8 + var_64_18 and arg_61_1.time_ < var_64_8 + var_64_18 + arg_64_0 then
				arg_61_1.typewritter.percent = 1

				arg_61_1.typewritter:SetDirty()
				arg_61_1:ShowNextGo(true)
			end
		end
	end,
	Play413161016 = function(arg_65_0, arg_65_1)
		arg_65_1.time_ = 0
		arg_65_1.frameCnt_ = 0
		arg_65_1.state_ = "playing"
		arg_65_1.curTalkId_ = 413161016
		arg_65_1.duration_ = 10.83

		local var_65_0 = {
			zh = 4.1,
			ja = 10.833
		}
		local var_65_1 = manager.audio:GetLocalizationFlag()

		if var_65_0[var_65_1] ~= nil then
			arg_65_1.duration_ = var_65_0[var_65_1]
		end

		SetActive(arg_65_1.tipsGo_, false)

		function arg_65_1.onSingleLineFinish_()
			arg_65_1.onSingleLineUpdate_ = nil
			arg_65_1.onSingleLineFinish_ = nil
			arg_65_1.state_ = "waiting"
		end

		function arg_65_1.playNext_(arg_67_0)
			if arg_67_0 == 1 then
				arg_65_0:Play413161017(arg_65_1)
			end
		end

		function arg_65_1.onSingleLineUpdate_(arg_68_0)
			local var_68_0 = 0
			local var_68_1 = 0.5

			if var_68_0 < arg_65_1.time_ and arg_65_1.time_ <= var_68_0 + arg_68_0 then
				arg_65_1.talkMaxDuration = 0
				arg_65_1.dialogCg_.alpha = 1

				arg_65_1.dialog_:SetActive(true)
				SetActive(arg_65_1.leftNameGo_, true)

				local var_68_2 = arg_65_1:FormatText(StoryNameCfg[259].name)

				arg_65_1.leftNameTxt_.text = var_68_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_65_1.leftNameTxt_.transform)

				arg_65_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_65_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_65_1:RecordName(arg_65_1.leftNameTxt_.text)
				SetActive(arg_65_1.iconTrs_.gameObject, false)
				arg_65_1.callingController_:SetSelectedState("normal")

				local var_68_3 = arg_65_1:GetWordFromCfg(413161016)
				local var_68_4 = arg_65_1:FormatText(var_68_3.content)

				arg_65_1.text_.text = var_68_4

				LuaForUtil.ClearLinePrefixSymbol(arg_65_1.text_)

				local var_68_5 = 20
				local var_68_6 = utf8.len(var_68_4)
				local var_68_7 = var_68_5 <= 0 and var_68_1 or var_68_1 * (var_68_6 / var_68_5)

				if var_68_7 > 0 and var_68_1 < var_68_7 then
					arg_65_1.talkMaxDuration = var_68_7

					if var_68_7 + var_68_0 > arg_65_1.duration_ then
						arg_65_1.duration_ = var_68_7 + var_68_0
					end
				end

				arg_65_1.text_.text = var_68_4
				arg_65_1.typewritter.percent = 0

				arg_65_1.typewritter:SetDirty()
				arg_65_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161016", "story_v_out_413161.awb") ~= 0 then
					local var_68_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161016", "story_v_out_413161.awb") / 1000

					if var_68_8 + var_68_0 > arg_65_1.duration_ then
						arg_65_1.duration_ = var_68_8 + var_68_0
					end

					if var_68_3.prefab_name ~= "" and arg_65_1.actors_[var_68_3.prefab_name] ~= nil then
						local var_68_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_65_1.actors_[var_68_3.prefab_name].transform, "story_v_out_413161", "413161016", "story_v_out_413161.awb")

						arg_65_1:RecordAudio("413161016", var_68_9)
						arg_65_1:RecordAudio("413161016", var_68_9)
					else
						arg_65_1:AudioAction("play", "voice", "story_v_out_413161", "413161016", "story_v_out_413161.awb")
					end

					arg_65_1:RecordHistoryTalkVoice("story_v_out_413161", "413161016", "story_v_out_413161.awb")
				end

				arg_65_1:RecordContent(arg_65_1.text_.text)
			end

			local var_68_10 = math.max(var_68_1, arg_65_1.talkMaxDuration)

			if var_68_0 <= arg_65_1.time_ and arg_65_1.time_ < var_68_0 + var_68_10 then
				arg_65_1.typewritter.percent = (arg_65_1.time_ - var_68_0) / var_68_10

				arg_65_1.typewritter:SetDirty()
			end

			if arg_65_1.time_ >= var_68_0 + var_68_10 and arg_65_1.time_ < var_68_0 + var_68_10 + arg_68_0 then
				arg_65_1.typewritter.percent = 1

				arg_65_1.typewritter:SetDirty()
				arg_65_1:ShowNextGo(true)
			end
		end
	end,
	Play413161017 = function(arg_69_0, arg_69_1)
		arg_69_1.time_ = 0
		arg_69_1.frameCnt_ = 0
		arg_69_1.state_ = "playing"
		arg_69_1.curTalkId_ = 413161017
		arg_69_1.duration_ = 6.57

		local var_69_0 = {
			zh = 5.866,
			ja = 6.566
		}
		local var_69_1 = manager.audio:GetLocalizationFlag()

		if var_69_0[var_69_1] ~= nil then
			arg_69_1.duration_ = var_69_0[var_69_1]
		end

		SetActive(arg_69_1.tipsGo_, false)

		function arg_69_1.onSingleLineFinish_()
			arg_69_1.onSingleLineUpdate_ = nil
			arg_69_1.onSingleLineFinish_ = nil
			arg_69_1.state_ = "waiting"
		end

		function arg_69_1.playNext_(arg_71_0)
			if arg_71_0 == 1 then
				arg_69_0:Play413161018(arg_69_1)
			end
		end

		function arg_69_1.onSingleLineUpdate_(arg_72_0)
			local var_72_0 = arg_69_1.actors_["10094"]
			local var_72_1 = 0

			if var_72_1 < arg_69_1.time_ and arg_69_1.time_ <= var_72_1 + arg_72_0 and not isNil(var_72_0) and arg_69_1.var_.actorSpriteComps10094 == nil then
				arg_69_1.var_.actorSpriteComps10094 = var_72_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_72_2 = 2

			if var_72_1 <= arg_69_1.time_ and arg_69_1.time_ < var_72_1 + var_72_2 and not isNil(var_72_0) then
				local var_72_3 = (arg_69_1.time_ - var_72_1) / var_72_2

				if arg_69_1.var_.actorSpriteComps10094 then
					for iter_72_0, iter_72_1 in pairs(arg_69_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_72_1 then
							if arg_69_1.isInRecall_ then
								local var_72_4 = Mathf.Lerp(iter_72_1.color.r, arg_69_1.hightColor2.r, var_72_3)
								local var_72_5 = Mathf.Lerp(iter_72_1.color.g, arg_69_1.hightColor2.g, var_72_3)
								local var_72_6 = Mathf.Lerp(iter_72_1.color.b, arg_69_1.hightColor2.b, var_72_3)

								iter_72_1.color = Color.New(var_72_4, var_72_5, var_72_6)
							else
								local var_72_7 = Mathf.Lerp(iter_72_1.color.r, 0.5, var_72_3)

								iter_72_1.color = Color.New(var_72_7, var_72_7, var_72_7)
							end
						end
					end
				end
			end

			if arg_69_1.time_ >= var_72_1 + var_72_2 and arg_69_1.time_ < var_72_1 + var_72_2 + arg_72_0 and not isNil(var_72_0) and arg_69_1.var_.actorSpriteComps10094 then
				for iter_72_2, iter_72_3 in pairs(arg_69_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_72_3 then
						if arg_69_1.isInRecall_ then
							iter_72_3.color = arg_69_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_72_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_69_1.var_.actorSpriteComps10094 = nil
			end

			local var_72_8 = 0
			local var_72_9 = 0.625

			if var_72_8 < arg_69_1.time_ and arg_69_1.time_ <= var_72_8 + arg_72_0 then
				arg_69_1.talkMaxDuration = 0
				arg_69_1.dialogCg_.alpha = 1

				arg_69_1.dialog_:SetActive(true)
				SetActive(arg_69_1.leftNameGo_, true)

				local var_72_10 = arg_69_1:FormatText(StoryNameCfg[205].name)

				arg_69_1.leftNameTxt_.text = var_72_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_69_1.leftNameTxt_.transform)

				arg_69_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_69_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_69_1:RecordName(arg_69_1.leftNameTxt_.text)
				SetActive(arg_69_1.iconTrs_.gameObject, true)
				arg_69_1.iconController_:SetSelectedState("hero")

				arg_69_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1042")

				arg_69_1.callingController_:SetSelectedState("normal")

				arg_69_1.keyicon_.color = Color.New(1, 1, 1)
				arg_69_1.icon_.color = Color.New(1, 1, 1)

				local var_72_11 = arg_69_1:GetWordFromCfg(413161017)
				local var_72_12 = arg_69_1:FormatText(var_72_11.content)

				arg_69_1.text_.text = var_72_12

				LuaForUtil.ClearLinePrefixSymbol(arg_69_1.text_)

				local var_72_13 = 25
				local var_72_14 = utf8.len(var_72_12)
				local var_72_15 = var_72_13 <= 0 and var_72_9 or var_72_9 * (var_72_14 / var_72_13)

				if var_72_15 > 0 and var_72_9 < var_72_15 then
					arg_69_1.talkMaxDuration = var_72_15

					if var_72_15 + var_72_8 > arg_69_1.duration_ then
						arg_69_1.duration_ = var_72_15 + var_72_8
					end
				end

				arg_69_1.text_.text = var_72_12
				arg_69_1.typewritter.percent = 0

				arg_69_1.typewritter:SetDirty()
				arg_69_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161017", "story_v_out_413161.awb") ~= 0 then
					local var_72_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161017", "story_v_out_413161.awb") / 1000

					if var_72_16 + var_72_8 > arg_69_1.duration_ then
						arg_69_1.duration_ = var_72_16 + var_72_8
					end

					if var_72_11.prefab_name ~= "" and arg_69_1.actors_[var_72_11.prefab_name] ~= nil then
						local var_72_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_69_1.actors_[var_72_11.prefab_name].transform, "story_v_out_413161", "413161017", "story_v_out_413161.awb")

						arg_69_1:RecordAudio("413161017", var_72_17)
						arg_69_1:RecordAudio("413161017", var_72_17)
					else
						arg_69_1:AudioAction("play", "voice", "story_v_out_413161", "413161017", "story_v_out_413161.awb")
					end

					arg_69_1:RecordHistoryTalkVoice("story_v_out_413161", "413161017", "story_v_out_413161.awb")
				end

				arg_69_1:RecordContent(arg_69_1.text_.text)
			end

			local var_72_18 = math.max(var_72_9, arg_69_1.talkMaxDuration)

			if var_72_8 <= arg_69_1.time_ and arg_69_1.time_ < var_72_8 + var_72_18 then
				arg_69_1.typewritter.percent = (arg_69_1.time_ - var_72_8) / var_72_18

				arg_69_1.typewritter:SetDirty()
			end

			if arg_69_1.time_ >= var_72_8 + var_72_18 and arg_69_1.time_ < var_72_8 + var_72_18 + arg_72_0 then
				arg_69_1.typewritter.percent = 1

				arg_69_1.typewritter:SetDirty()
				arg_69_1:ShowNextGo(true)
			end
		end
	end,
	Play413161018 = function(arg_73_0, arg_73_1)
		arg_73_1.time_ = 0
		arg_73_1.frameCnt_ = 0
		arg_73_1.state_ = "playing"
		arg_73_1.curTalkId_ = 413161018
		arg_73_1.duration_ = 10.9

		local var_73_0 = {
			zh = 5.2,
			ja = 10.9
		}
		local var_73_1 = manager.audio:GetLocalizationFlag()

		if var_73_0[var_73_1] ~= nil then
			arg_73_1.duration_ = var_73_0[var_73_1]
		end

		SetActive(arg_73_1.tipsGo_, false)

		function arg_73_1.onSingleLineFinish_()
			arg_73_1.onSingleLineUpdate_ = nil
			arg_73_1.onSingleLineFinish_ = nil
			arg_73_1.state_ = "waiting"
		end

		function arg_73_1.playNext_(arg_75_0)
			if arg_75_0 == 1 then
				arg_73_0:Play413161019(arg_73_1)
			end
		end

		function arg_73_1.onSingleLineUpdate_(arg_76_0)
			local var_76_0 = arg_73_1.actors_["10094"]
			local var_76_1 = 0

			if var_76_1 < arg_73_1.time_ and arg_73_1.time_ <= var_76_1 + arg_76_0 and not isNil(var_76_0) and arg_73_1.var_.actorSpriteComps10094 == nil then
				arg_73_1.var_.actorSpriteComps10094 = var_76_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_76_2 = 2

			if var_76_1 <= arg_73_1.time_ and arg_73_1.time_ < var_76_1 + var_76_2 and not isNil(var_76_0) then
				local var_76_3 = (arg_73_1.time_ - var_76_1) / var_76_2

				if arg_73_1.var_.actorSpriteComps10094 then
					for iter_76_0, iter_76_1 in pairs(arg_73_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_76_1 then
							if arg_73_1.isInRecall_ then
								local var_76_4 = Mathf.Lerp(iter_76_1.color.r, arg_73_1.hightColor1.r, var_76_3)
								local var_76_5 = Mathf.Lerp(iter_76_1.color.g, arg_73_1.hightColor1.g, var_76_3)
								local var_76_6 = Mathf.Lerp(iter_76_1.color.b, arg_73_1.hightColor1.b, var_76_3)

								iter_76_1.color = Color.New(var_76_4, var_76_5, var_76_6)
							else
								local var_76_7 = Mathf.Lerp(iter_76_1.color.r, 1, var_76_3)

								iter_76_1.color = Color.New(var_76_7, var_76_7, var_76_7)
							end
						end
					end
				end
			end

			if arg_73_1.time_ >= var_76_1 + var_76_2 and arg_73_1.time_ < var_76_1 + var_76_2 + arg_76_0 and not isNil(var_76_0) and arg_73_1.var_.actorSpriteComps10094 then
				for iter_76_2, iter_76_3 in pairs(arg_73_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_76_3 then
						if arg_73_1.isInRecall_ then
							iter_76_3.color = arg_73_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_76_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_73_1.var_.actorSpriteComps10094 = nil
			end

			local var_76_8 = 0
			local var_76_9 = 0.55

			if var_76_8 < arg_73_1.time_ and arg_73_1.time_ <= var_76_8 + arg_76_0 then
				arg_73_1.talkMaxDuration = 0
				arg_73_1.dialogCg_.alpha = 1

				arg_73_1.dialog_:SetActive(true)
				SetActive(arg_73_1.leftNameGo_, true)

				local var_76_10 = arg_73_1:FormatText(StoryNameCfg[259].name)

				arg_73_1.leftNameTxt_.text = var_76_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_73_1.leftNameTxt_.transform)

				arg_73_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_73_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_73_1:RecordName(arg_73_1.leftNameTxt_.text)
				SetActive(arg_73_1.iconTrs_.gameObject, false)
				arg_73_1.callingController_:SetSelectedState("normal")

				local var_76_11 = arg_73_1:GetWordFromCfg(413161018)
				local var_76_12 = arg_73_1:FormatText(var_76_11.content)

				arg_73_1.text_.text = var_76_12

				LuaForUtil.ClearLinePrefixSymbol(arg_73_1.text_)

				local var_76_13 = 22
				local var_76_14 = utf8.len(var_76_12)
				local var_76_15 = var_76_13 <= 0 and var_76_9 or var_76_9 * (var_76_14 / var_76_13)

				if var_76_15 > 0 and var_76_9 < var_76_15 then
					arg_73_1.talkMaxDuration = var_76_15

					if var_76_15 + var_76_8 > arg_73_1.duration_ then
						arg_73_1.duration_ = var_76_15 + var_76_8
					end
				end

				arg_73_1.text_.text = var_76_12
				arg_73_1.typewritter.percent = 0

				arg_73_1.typewritter:SetDirty()
				arg_73_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161018", "story_v_out_413161.awb") ~= 0 then
					local var_76_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161018", "story_v_out_413161.awb") / 1000

					if var_76_16 + var_76_8 > arg_73_1.duration_ then
						arg_73_1.duration_ = var_76_16 + var_76_8
					end

					if var_76_11.prefab_name ~= "" and arg_73_1.actors_[var_76_11.prefab_name] ~= nil then
						local var_76_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_73_1.actors_[var_76_11.prefab_name].transform, "story_v_out_413161", "413161018", "story_v_out_413161.awb")

						arg_73_1:RecordAudio("413161018", var_76_17)
						arg_73_1:RecordAudio("413161018", var_76_17)
					else
						arg_73_1:AudioAction("play", "voice", "story_v_out_413161", "413161018", "story_v_out_413161.awb")
					end

					arg_73_1:RecordHistoryTalkVoice("story_v_out_413161", "413161018", "story_v_out_413161.awb")
				end

				arg_73_1:RecordContent(arg_73_1.text_.text)
			end

			local var_76_18 = math.max(var_76_9, arg_73_1.talkMaxDuration)

			if var_76_8 <= arg_73_1.time_ and arg_73_1.time_ < var_76_8 + var_76_18 then
				arg_73_1.typewritter.percent = (arg_73_1.time_ - var_76_8) / var_76_18

				arg_73_1.typewritter:SetDirty()
			end

			if arg_73_1.time_ >= var_76_8 + var_76_18 and arg_73_1.time_ < var_76_8 + var_76_18 + arg_76_0 then
				arg_73_1.typewritter.percent = 1

				arg_73_1.typewritter:SetDirty()
				arg_73_1:ShowNextGo(true)
			end
		end
	end,
	Play413161019 = function(arg_77_0, arg_77_1)
		arg_77_1.time_ = 0
		arg_77_1.frameCnt_ = 0
		arg_77_1.state_ = "playing"
		arg_77_1.curTalkId_ = 413161019
		arg_77_1.duration_ = 8.67

		local var_77_0 = {
			zh = 6.7,
			ja = 8.666
		}
		local var_77_1 = manager.audio:GetLocalizationFlag()

		if var_77_0[var_77_1] ~= nil then
			arg_77_1.duration_ = var_77_0[var_77_1]
		end

		SetActive(arg_77_1.tipsGo_, false)

		function arg_77_1.onSingleLineFinish_()
			arg_77_1.onSingleLineUpdate_ = nil
			arg_77_1.onSingleLineFinish_ = nil
			arg_77_1.state_ = "waiting"
		end

		function arg_77_1.playNext_(arg_79_0)
			if arg_79_0 == 1 then
				arg_77_0:Play413161020(arg_77_1)
			end
		end

		function arg_77_1.onSingleLineUpdate_(arg_80_0)
			local var_80_0 = 0
			local var_80_1 = 0.75

			if var_80_0 < arg_77_1.time_ and arg_77_1.time_ <= var_80_0 + arg_80_0 then
				arg_77_1.talkMaxDuration = 0
				arg_77_1.dialogCg_.alpha = 1

				arg_77_1.dialog_:SetActive(true)
				SetActive(arg_77_1.leftNameGo_, true)

				local var_80_2 = arg_77_1:FormatText(StoryNameCfg[259].name)

				arg_77_1.leftNameTxt_.text = var_80_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_77_1.leftNameTxt_.transform)

				arg_77_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_77_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_77_1:RecordName(arg_77_1.leftNameTxt_.text)
				SetActive(arg_77_1.iconTrs_.gameObject, false)
				arg_77_1.callingController_:SetSelectedState("normal")

				local var_80_3 = arg_77_1:GetWordFromCfg(413161019)
				local var_80_4 = arg_77_1:FormatText(var_80_3.content)

				arg_77_1.text_.text = var_80_4

				LuaForUtil.ClearLinePrefixSymbol(arg_77_1.text_)

				local var_80_5 = 30
				local var_80_6 = utf8.len(var_80_4)
				local var_80_7 = var_80_5 <= 0 and var_80_1 or var_80_1 * (var_80_6 / var_80_5)

				if var_80_7 > 0 and var_80_1 < var_80_7 then
					arg_77_1.talkMaxDuration = var_80_7

					if var_80_7 + var_80_0 > arg_77_1.duration_ then
						arg_77_1.duration_ = var_80_7 + var_80_0
					end
				end

				arg_77_1.text_.text = var_80_4
				arg_77_1.typewritter.percent = 0

				arg_77_1.typewritter:SetDirty()
				arg_77_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161019", "story_v_out_413161.awb") ~= 0 then
					local var_80_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161019", "story_v_out_413161.awb") / 1000

					if var_80_8 + var_80_0 > arg_77_1.duration_ then
						arg_77_1.duration_ = var_80_8 + var_80_0
					end

					if var_80_3.prefab_name ~= "" and arg_77_1.actors_[var_80_3.prefab_name] ~= nil then
						local var_80_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_77_1.actors_[var_80_3.prefab_name].transform, "story_v_out_413161", "413161019", "story_v_out_413161.awb")

						arg_77_1:RecordAudio("413161019", var_80_9)
						arg_77_1:RecordAudio("413161019", var_80_9)
					else
						arg_77_1:AudioAction("play", "voice", "story_v_out_413161", "413161019", "story_v_out_413161.awb")
					end

					arg_77_1:RecordHistoryTalkVoice("story_v_out_413161", "413161019", "story_v_out_413161.awb")
				end

				arg_77_1:RecordContent(arg_77_1.text_.text)
			end

			local var_80_10 = math.max(var_80_1, arg_77_1.talkMaxDuration)

			if var_80_0 <= arg_77_1.time_ and arg_77_1.time_ < var_80_0 + var_80_10 then
				arg_77_1.typewritter.percent = (arg_77_1.time_ - var_80_0) / var_80_10

				arg_77_1.typewritter:SetDirty()
			end

			if arg_77_1.time_ >= var_80_0 + var_80_10 and arg_77_1.time_ < var_80_0 + var_80_10 + arg_80_0 then
				arg_77_1.typewritter.percent = 1

				arg_77_1.typewritter:SetDirty()
				arg_77_1:ShowNextGo(true)
			end
		end
	end,
	Play413161020 = function(arg_81_0, arg_81_1)
		arg_81_1.time_ = 0
		arg_81_1.frameCnt_ = 0
		arg_81_1.state_ = "playing"
		arg_81_1.curTalkId_ = 413161020
		arg_81_1.duration_ = 7.9

		local var_81_0 = {
			zh = 6.332999999999,
			ja = 7.899999999999
		}
		local var_81_1 = manager.audio:GetLocalizationFlag()

		if var_81_0[var_81_1] ~= nil then
			arg_81_1.duration_ = var_81_0[var_81_1]
		end

		SetActive(arg_81_1.tipsGo_, false)

		function arg_81_1.onSingleLineFinish_()
			arg_81_1.onSingleLineUpdate_ = nil
			arg_81_1.onSingleLineFinish_ = nil
			arg_81_1.state_ = "waiting"
		end

		function arg_81_1.playNext_(arg_83_0)
			if arg_83_0 == 1 then
				arg_81_0:Play413161021(arg_81_1)
			end
		end

		function arg_81_1.onSingleLineUpdate_(arg_84_0)
			local var_84_0 = "ST0602"

			if arg_81_1.bgs_[var_84_0] == nil then
				local var_84_1 = Object.Instantiate(arg_81_1.paintGo_)

				var_84_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_84_0)
				var_84_1.name = var_84_0
				var_84_1.transform.parent = arg_81_1.stage_.transform
				var_84_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_81_1.bgs_[var_84_0] = var_84_1
			end

			local var_84_2 = 2

			if var_84_2 < arg_81_1.time_ and arg_81_1.time_ <= var_84_2 + arg_84_0 then
				local var_84_3 = manager.ui.mainCamera.transform.localPosition
				local var_84_4 = Vector3.New(0, 0, 10) + Vector3.New(var_84_3.x, var_84_3.y, 0)
				local var_84_5 = arg_81_1.bgs_.ST0602

				var_84_5.transform.localPosition = var_84_4
				var_84_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_84_6 = var_84_5:GetComponent("SpriteRenderer")

				if var_84_6 and var_84_6.sprite then
					local var_84_7 = (var_84_5.transform.localPosition - var_84_3).z
					local var_84_8 = manager.ui.mainCameraCom_
					local var_84_9 = 2 * var_84_7 * Mathf.Tan(var_84_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_84_10 = var_84_9 * var_84_8.aspect
					local var_84_11 = var_84_6.sprite.bounds.size.x
					local var_84_12 = var_84_6.sprite.bounds.size.y
					local var_84_13 = var_84_10 / var_84_11
					local var_84_14 = var_84_9 / var_84_12
					local var_84_15 = var_84_14 < var_84_13 and var_84_13 or var_84_14

					var_84_5.transform.localScale = Vector3.New(var_84_15, var_84_15, 0)
				end

				for iter_84_0, iter_84_1 in pairs(arg_81_1.bgs_) do
					if iter_84_0 ~= "ST0602" then
						iter_84_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_84_16 = 3.999999999999

			if var_84_16 < arg_81_1.time_ and arg_81_1.time_ <= var_84_16 + arg_84_0 then
				arg_81_1.allBtn_.enabled = false
			end

			local var_84_17 = 0.3

			if arg_81_1.time_ >= var_84_16 + var_84_17 and arg_81_1.time_ < var_84_16 + var_84_17 + arg_84_0 then
				arg_81_1.allBtn_.enabled = true
			end

			local var_84_18 = 0

			if var_84_18 < arg_81_1.time_ and arg_81_1.time_ <= var_84_18 + arg_84_0 then
				arg_81_1.mask_.enabled = true
				arg_81_1.mask_.raycastTarget = true

				arg_81_1:SetGaussion(false)
			end

			local var_84_19 = 2

			if var_84_18 <= arg_81_1.time_ and arg_81_1.time_ < var_84_18 + var_84_19 then
				local var_84_20 = (arg_81_1.time_ - var_84_18) / var_84_19
				local var_84_21 = Color.New(0, 0, 0)

				var_84_21.a = Mathf.Lerp(0, 1, var_84_20)
				arg_81_1.mask_.color = var_84_21
			end

			if arg_81_1.time_ >= var_84_18 + var_84_19 and arg_81_1.time_ < var_84_18 + var_84_19 + arg_84_0 then
				local var_84_22 = Color.New(0, 0, 0)

				var_84_22.a = 1
				arg_81_1.mask_.color = var_84_22
			end

			local var_84_23 = 2

			if var_84_23 < arg_81_1.time_ and arg_81_1.time_ <= var_84_23 + arg_84_0 then
				arg_81_1.mask_.enabled = true
				arg_81_1.mask_.raycastTarget = true

				arg_81_1:SetGaussion(false)
			end

			local var_84_24 = 2

			if var_84_23 <= arg_81_1.time_ and arg_81_1.time_ < var_84_23 + var_84_24 then
				local var_84_25 = (arg_81_1.time_ - var_84_23) / var_84_24
				local var_84_26 = Color.New(0, 0, 0)

				var_84_26.a = Mathf.Lerp(1, 0, var_84_25)
				arg_81_1.mask_.color = var_84_26
			end

			if arg_81_1.time_ >= var_84_23 + var_84_24 and arg_81_1.time_ < var_84_23 + var_84_24 + arg_84_0 then
				local var_84_27 = Color.New(0, 0, 0)
				local var_84_28 = 0

				arg_81_1.mask_.enabled = false
				var_84_27.a = var_84_28
				arg_81_1.mask_.color = var_84_27
			end

			local var_84_29 = arg_81_1.actors_["10094"].transform
			local var_84_30 = 2

			if var_84_30 < arg_81_1.time_ and arg_81_1.time_ <= var_84_30 + arg_84_0 then
				arg_81_1.var_.moveOldPos10094 = var_84_29.localPosition
				var_84_29.localScale = Vector3.New(1, 1, 1)

				arg_81_1:CheckSpriteTmpPos("10094", 7)

				local var_84_31 = var_84_29.childCount

				for iter_84_2 = 0, var_84_31 - 1 do
					local var_84_32 = var_84_29:GetChild(iter_84_2)

					if var_84_32.name == "" or not string.find(var_84_32.name, "split") then
						var_84_32.gameObject:SetActive(true)
					else
						var_84_32.gameObject:SetActive(false)
					end
				end
			end

			local var_84_33 = 0.001

			if var_84_30 <= arg_81_1.time_ and arg_81_1.time_ < var_84_30 + var_84_33 then
				local var_84_34 = (arg_81_1.time_ - var_84_30) / var_84_33
				local var_84_35 = Vector3.New(0, -2000, 0)

				var_84_29.localPosition = Vector3.Lerp(arg_81_1.var_.moveOldPos10094, var_84_35, var_84_34)
			end

			if arg_81_1.time_ >= var_84_30 + var_84_33 and arg_81_1.time_ < var_84_30 + var_84_33 + arg_84_0 then
				var_84_29.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_84_36 = arg_81_1.actors_["10094"]
			local var_84_37 = 2

			if var_84_37 < arg_81_1.time_ and arg_81_1.time_ <= var_84_37 + arg_84_0 and not isNil(var_84_36) and arg_81_1.var_.actorSpriteComps10094 == nil then
				arg_81_1.var_.actorSpriteComps10094 = var_84_36:GetComponentsInChildren(typeof(Image), true)
			end

			local var_84_38 = 2

			if var_84_37 <= arg_81_1.time_ and arg_81_1.time_ < var_84_37 + var_84_38 and not isNil(var_84_36) then
				local var_84_39 = (arg_81_1.time_ - var_84_37) / var_84_38

				if arg_81_1.var_.actorSpriteComps10094 then
					for iter_84_3, iter_84_4 in pairs(arg_81_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_84_4 then
							if arg_81_1.isInRecall_ then
								local var_84_40 = Mathf.Lerp(iter_84_4.color.r, arg_81_1.hightColor2.r, var_84_39)
								local var_84_41 = Mathf.Lerp(iter_84_4.color.g, arg_81_1.hightColor2.g, var_84_39)
								local var_84_42 = Mathf.Lerp(iter_84_4.color.b, arg_81_1.hightColor2.b, var_84_39)

								iter_84_4.color = Color.New(var_84_40, var_84_41, var_84_42)
							else
								local var_84_43 = Mathf.Lerp(iter_84_4.color.r, 0.5, var_84_39)

								iter_84_4.color = Color.New(var_84_43, var_84_43, var_84_43)
							end
						end
					end
				end
			end

			if arg_81_1.time_ >= var_84_37 + var_84_38 and arg_81_1.time_ < var_84_37 + var_84_38 + arg_84_0 and not isNil(var_84_36) and arg_81_1.var_.actorSpriteComps10094 then
				for iter_84_5, iter_84_6 in pairs(arg_81_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_84_6 then
						if arg_81_1.isInRecall_ then
							iter_84_6.color = arg_81_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_84_6.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_81_1.var_.actorSpriteComps10094 = nil
			end

			if arg_81_1.frameCnt_ <= 1 then
				arg_81_1.dialog_:SetActive(false)
			end

			local var_84_44 = 3.999999999999
			local var_84_45 = 0.35

			if var_84_44 < arg_81_1.time_ and arg_81_1.time_ <= var_84_44 + arg_84_0 then
				arg_81_1.talkMaxDuration = 0

				arg_81_1.dialog_:SetActive(true)

				local var_84_46 = LeanTween.value(arg_81_1.dialog_, 0, 1, 0.3)

				var_84_46:setOnUpdate(LuaHelper.FloatAction(function(arg_85_0)
					arg_81_1.dialogCg_.alpha = arg_85_0
				end))
				var_84_46:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_81_1.dialog_)
					var_84_46:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_81_1.duration_ = arg_81_1.duration_ + 0.3

				SetActive(arg_81_1.leftNameGo_, true)

				local var_84_47 = arg_81_1:FormatText(StoryNameCfg[998].name)

				arg_81_1.leftNameTxt_.text = var_84_47

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_81_1.leftNameTxt_.transform)

				arg_81_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_81_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_81_1:RecordName(arg_81_1.leftNameTxt_.text)
				SetActive(arg_81_1.iconTrs_.gameObject, true)
				arg_81_1.iconController_:SetSelectedState("hero")

				arg_81_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_81_1.callingController_:SetSelectedState("normal")

				arg_81_1.keyicon_.color = Color.New(1, 1, 1)
				arg_81_1.icon_.color = Color.New(1, 1, 1)

				local var_84_48 = arg_81_1:GetWordFromCfg(413161020)
				local var_84_49 = arg_81_1:FormatText(var_84_48.content)

				arg_81_1.text_.text = var_84_49

				LuaForUtil.ClearLinePrefixSymbol(arg_81_1.text_)

				local var_84_50 = 14
				local var_84_51 = utf8.len(var_84_49)
				local var_84_52 = var_84_50 <= 0 and var_84_45 or var_84_45 * (var_84_51 / var_84_50)

				if var_84_52 > 0 and var_84_45 < var_84_52 then
					arg_81_1.talkMaxDuration = var_84_52
					var_84_44 = var_84_44 + 0.3

					if var_84_52 + var_84_44 > arg_81_1.duration_ then
						arg_81_1.duration_ = var_84_52 + var_84_44
					end
				end

				arg_81_1.text_.text = var_84_49
				arg_81_1.typewritter.percent = 0

				arg_81_1.typewritter:SetDirty()
				arg_81_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161020", "story_v_out_413161.awb") ~= 0 then
					local var_84_53 = manager.audio:GetVoiceLength("story_v_out_413161", "413161020", "story_v_out_413161.awb") / 1000

					if var_84_53 + var_84_44 > arg_81_1.duration_ then
						arg_81_1.duration_ = var_84_53 + var_84_44
					end

					if var_84_48.prefab_name ~= "" and arg_81_1.actors_[var_84_48.prefab_name] ~= nil then
						local var_84_54 = LuaForUtil.PlayVoiceWithCriLipsync(arg_81_1.actors_[var_84_48.prefab_name].transform, "story_v_out_413161", "413161020", "story_v_out_413161.awb")

						arg_81_1:RecordAudio("413161020", var_84_54)
						arg_81_1:RecordAudio("413161020", var_84_54)
					else
						arg_81_1:AudioAction("play", "voice", "story_v_out_413161", "413161020", "story_v_out_413161.awb")
					end

					arg_81_1:RecordHistoryTalkVoice("story_v_out_413161", "413161020", "story_v_out_413161.awb")
				end

				arg_81_1:RecordContent(arg_81_1.text_.text)
			end

			local var_84_55 = var_84_44 + 0.3
			local var_84_56 = math.max(var_84_45, arg_81_1.talkMaxDuration)

			if var_84_55 <= arg_81_1.time_ and arg_81_1.time_ < var_84_55 + var_84_56 then
				arg_81_1.typewritter.percent = (arg_81_1.time_ - var_84_55) / var_84_56

				arg_81_1.typewritter:SetDirty()
			end

			if arg_81_1.time_ >= var_84_55 + var_84_56 and arg_81_1.time_ < var_84_55 + var_84_56 + arg_84_0 then
				arg_81_1.typewritter.percent = 1

				arg_81_1.typewritter:SetDirty()
				arg_81_1:ShowNextGo(true)
			end
		end
	end,
	Play413161021 = function(arg_87_0, arg_87_1)
		arg_87_1.time_ = 0
		arg_87_1.frameCnt_ = 0
		arg_87_1.state_ = "playing"
		arg_87_1.curTalkId_ = 413161021
		arg_87_1.duration_ = 3.87

		local var_87_0 = {
			zh = 3.466,
			ja = 3.866
		}
		local var_87_1 = manager.audio:GetLocalizationFlag()

		if var_87_0[var_87_1] ~= nil then
			arg_87_1.duration_ = var_87_0[var_87_1]
		end

		SetActive(arg_87_1.tipsGo_, false)

		function arg_87_1.onSingleLineFinish_()
			arg_87_1.onSingleLineUpdate_ = nil
			arg_87_1.onSingleLineFinish_ = nil
			arg_87_1.state_ = "waiting"
		end

		function arg_87_1.playNext_(arg_89_0)
			if arg_89_0 == 1 then
				arg_87_0:Play413161022(arg_87_1)
			end
		end

		function arg_87_1.onSingleLineUpdate_(arg_90_0)
			local var_90_0 = 0
			local var_90_1 = 0.575

			if var_90_0 < arg_87_1.time_ and arg_87_1.time_ <= var_90_0 + arg_90_0 then
				arg_87_1.talkMaxDuration = 0
				arg_87_1.dialogCg_.alpha = 1

				arg_87_1.dialog_:SetActive(true)
				SetActive(arg_87_1.leftNameGo_, true)

				local var_90_2 = arg_87_1:FormatText(StoryNameCfg[994].name)

				arg_87_1.leftNameTxt_.text = var_90_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_87_1.leftNameTxt_.transform)

				arg_87_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_87_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_87_1:RecordName(arg_87_1.leftNameTxt_.text)
				SetActive(arg_87_1.iconTrs_.gameObject, true)
				arg_87_1.iconController_:SetSelectedState("hero")

				arg_87_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightman1")

				arg_87_1.callingController_:SetSelectedState("normal")

				arg_87_1.keyicon_.color = Color.New(1, 1, 1)
				arg_87_1.icon_.color = Color.New(1, 1, 1)

				local var_90_3 = arg_87_1:GetWordFromCfg(413161021)
				local var_90_4 = arg_87_1:FormatText(var_90_3.content)

				arg_87_1.text_.text = var_90_4

				LuaForUtil.ClearLinePrefixSymbol(arg_87_1.text_)

				local var_90_5 = 23
				local var_90_6 = utf8.len(var_90_4)
				local var_90_7 = var_90_5 <= 0 and var_90_1 or var_90_1 * (var_90_6 / var_90_5)

				if var_90_7 > 0 and var_90_1 < var_90_7 then
					arg_87_1.talkMaxDuration = var_90_7

					if var_90_7 + var_90_0 > arg_87_1.duration_ then
						arg_87_1.duration_ = var_90_7 + var_90_0
					end
				end

				arg_87_1.text_.text = var_90_4
				arg_87_1.typewritter.percent = 0

				arg_87_1.typewritter:SetDirty()
				arg_87_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161021", "story_v_out_413161.awb") ~= 0 then
					local var_90_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161021", "story_v_out_413161.awb") / 1000

					if var_90_8 + var_90_0 > arg_87_1.duration_ then
						arg_87_1.duration_ = var_90_8 + var_90_0
					end

					if var_90_3.prefab_name ~= "" and arg_87_1.actors_[var_90_3.prefab_name] ~= nil then
						local var_90_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_87_1.actors_[var_90_3.prefab_name].transform, "story_v_out_413161", "413161021", "story_v_out_413161.awb")

						arg_87_1:RecordAudio("413161021", var_90_9)
						arg_87_1:RecordAudio("413161021", var_90_9)
					else
						arg_87_1:AudioAction("play", "voice", "story_v_out_413161", "413161021", "story_v_out_413161.awb")
					end

					arg_87_1:RecordHistoryTalkVoice("story_v_out_413161", "413161021", "story_v_out_413161.awb")
				end

				arg_87_1:RecordContent(arg_87_1.text_.text)
			end

			local var_90_10 = math.max(var_90_1, arg_87_1.talkMaxDuration)

			if var_90_0 <= arg_87_1.time_ and arg_87_1.time_ < var_90_0 + var_90_10 then
				arg_87_1.typewritter.percent = (arg_87_1.time_ - var_90_0) / var_90_10

				arg_87_1.typewritter:SetDirty()
			end

			if arg_87_1.time_ >= var_90_0 + var_90_10 and arg_87_1.time_ < var_90_0 + var_90_10 + arg_90_0 then
				arg_87_1.typewritter.percent = 1

				arg_87_1.typewritter:SetDirty()
				arg_87_1:ShowNextGo(true)
			end
		end
	end,
	Play413161022 = function(arg_91_0, arg_91_1)
		arg_91_1.time_ = 0
		arg_91_1.frameCnt_ = 0
		arg_91_1.state_ = "playing"
		arg_91_1.curTalkId_ = 413161022
		arg_91_1.duration_ = 4.5

		local var_91_0 = {
			zh = 3.066,
			ja = 4.5
		}
		local var_91_1 = manager.audio:GetLocalizationFlag()

		if var_91_0[var_91_1] ~= nil then
			arg_91_1.duration_ = var_91_0[var_91_1]
		end

		SetActive(arg_91_1.tipsGo_, false)

		function arg_91_1.onSingleLineFinish_()
			arg_91_1.onSingleLineUpdate_ = nil
			arg_91_1.onSingleLineFinish_ = nil
			arg_91_1.state_ = "waiting"
		end

		function arg_91_1.playNext_(arg_93_0)
			if arg_93_0 == 1 then
				arg_91_0:Play413161023(arg_91_1)
			end
		end

		function arg_91_1.onSingleLineUpdate_(arg_94_0)
			local var_94_0 = 0
			local var_94_1 = 0.375

			if var_94_0 < arg_91_1.time_ and arg_91_1.time_ <= var_94_0 + arg_94_0 then
				arg_91_1.talkMaxDuration = 0
				arg_91_1.dialogCg_.alpha = 1

				arg_91_1.dialog_:SetActive(true)
				SetActive(arg_91_1.leftNameGo_, true)

				local var_94_2 = arg_91_1:FormatText(StoryNameCfg[992].name)

				arg_91_1.leftNameTxt_.text = var_94_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_91_1.leftNameTxt_.transform)

				arg_91_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_91_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_91_1:RecordName(arg_91_1.leftNameTxt_.text)
				SetActive(arg_91_1.iconTrs_.gameObject, true)
				arg_91_1.iconController_:SetSelectedState("hero")

				arg_91_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightman1")

				arg_91_1.callingController_:SetSelectedState("normal")

				arg_91_1.keyicon_.color = Color.New(1, 1, 1)
				arg_91_1.icon_.color = Color.New(1, 1, 1)

				local var_94_3 = arg_91_1:GetWordFromCfg(413161022)
				local var_94_4 = arg_91_1:FormatText(var_94_3.content)

				arg_91_1.text_.text = var_94_4

				LuaForUtil.ClearLinePrefixSymbol(arg_91_1.text_)

				local var_94_5 = 15
				local var_94_6 = utf8.len(var_94_4)
				local var_94_7 = var_94_5 <= 0 and var_94_1 or var_94_1 * (var_94_6 / var_94_5)

				if var_94_7 > 0 and var_94_1 < var_94_7 then
					arg_91_1.talkMaxDuration = var_94_7

					if var_94_7 + var_94_0 > arg_91_1.duration_ then
						arg_91_1.duration_ = var_94_7 + var_94_0
					end
				end

				arg_91_1.text_.text = var_94_4
				arg_91_1.typewritter.percent = 0

				arg_91_1.typewritter:SetDirty()
				arg_91_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161022", "story_v_out_413161.awb") ~= 0 then
					local var_94_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161022", "story_v_out_413161.awb") / 1000

					if var_94_8 + var_94_0 > arg_91_1.duration_ then
						arg_91_1.duration_ = var_94_8 + var_94_0
					end

					if var_94_3.prefab_name ~= "" and arg_91_1.actors_[var_94_3.prefab_name] ~= nil then
						local var_94_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_91_1.actors_[var_94_3.prefab_name].transform, "story_v_out_413161", "413161022", "story_v_out_413161.awb")

						arg_91_1:RecordAudio("413161022", var_94_9)
						arg_91_1:RecordAudio("413161022", var_94_9)
					else
						arg_91_1:AudioAction("play", "voice", "story_v_out_413161", "413161022", "story_v_out_413161.awb")
					end

					arg_91_1:RecordHistoryTalkVoice("story_v_out_413161", "413161022", "story_v_out_413161.awb")
				end

				arg_91_1:RecordContent(arg_91_1.text_.text)
			end

			local var_94_10 = math.max(var_94_1, arg_91_1.talkMaxDuration)

			if var_94_0 <= arg_91_1.time_ and arg_91_1.time_ < var_94_0 + var_94_10 then
				arg_91_1.typewritter.percent = (arg_91_1.time_ - var_94_0) / var_94_10

				arg_91_1.typewritter:SetDirty()
			end

			if arg_91_1.time_ >= var_94_0 + var_94_10 and arg_91_1.time_ < var_94_0 + var_94_10 + arg_94_0 then
				arg_91_1.typewritter.percent = 1

				arg_91_1.typewritter:SetDirty()
				arg_91_1:ShowNextGo(true)
			end
		end
	end,
	Play413161023 = function(arg_95_0, arg_95_1)
		arg_95_1.time_ = 0
		arg_95_1.frameCnt_ = 0
		arg_95_1.state_ = "playing"
		arg_95_1.curTalkId_ = 413161023
		arg_95_1.duration_ = 5

		SetActive(arg_95_1.tipsGo_, false)

		function arg_95_1.onSingleLineFinish_()
			arg_95_1.onSingleLineUpdate_ = nil
			arg_95_1.onSingleLineFinish_ = nil
			arg_95_1.state_ = "waiting"
		end

		function arg_95_1.playNext_(arg_97_0)
			if arg_97_0 == 1 then
				arg_95_0:Play413161024(arg_95_1)
			end
		end

		function arg_95_1.onSingleLineUpdate_(arg_98_0)
			local var_98_0 = 0
			local var_98_1 = 0.7

			if var_98_0 < arg_95_1.time_ and arg_95_1.time_ <= var_98_0 + arg_98_0 then
				arg_95_1.talkMaxDuration = 0
				arg_95_1.dialogCg_.alpha = 1

				arg_95_1.dialog_:SetActive(true)
				SetActive(arg_95_1.leftNameGo_, false)

				arg_95_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_95_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_95_1:RecordName(arg_95_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_95_1.iconTrs_.gameObject, false)
				arg_95_1.callingController_:SetSelectedState("normal")

				local var_98_2 = arg_95_1:GetWordFromCfg(413161023)
				local var_98_3 = arg_95_1:FormatText(var_98_2.content)

				arg_95_1.text_.text = var_98_3

				LuaForUtil.ClearLinePrefixSymbol(arg_95_1.text_)

				local var_98_4 = 28
				local var_98_5 = utf8.len(var_98_3)
				local var_98_6 = var_98_4 <= 0 and var_98_1 or var_98_1 * (var_98_5 / var_98_4)

				if var_98_6 > 0 and var_98_1 < var_98_6 then
					arg_95_1.talkMaxDuration = var_98_6

					if var_98_6 + var_98_0 > arg_95_1.duration_ then
						arg_95_1.duration_ = var_98_6 + var_98_0
					end
				end

				arg_95_1.text_.text = var_98_3
				arg_95_1.typewritter.percent = 0

				arg_95_1.typewritter:SetDirty()
				arg_95_1:ShowNextGo(false)
				arg_95_1:RecordContent(arg_95_1.text_.text)
			end

			local var_98_7 = math.max(var_98_1, arg_95_1.talkMaxDuration)

			if var_98_0 <= arg_95_1.time_ and arg_95_1.time_ < var_98_0 + var_98_7 then
				arg_95_1.typewritter.percent = (arg_95_1.time_ - var_98_0) / var_98_7

				arg_95_1.typewritter:SetDirty()
			end

			if arg_95_1.time_ >= var_98_0 + var_98_7 and arg_95_1.time_ < var_98_0 + var_98_7 + arg_98_0 then
				arg_95_1.typewritter.percent = 1

				arg_95_1.typewritter:SetDirty()
				arg_95_1:ShowNextGo(true)
			end
		end
	end,
	Play413161024 = function(arg_99_0, arg_99_1)
		arg_99_1.time_ = 0
		arg_99_1.frameCnt_ = 0
		arg_99_1.state_ = "playing"
		arg_99_1.curTalkId_ = 413161024
		arg_99_1.duration_ = 5

		SetActive(arg_99_1.tipsGo_, false)

		function arg_99_1.onSingleLineFinish_()
			arg_99_1.onSingleLineUpdate_ = nil
			arg_99_1.onSingleLineFinish_ = nil
			arg_99_1.state_ = "waiting"
		end

		function arg_99_1.playNext_(arg_101_0)
			if arg_101_0 == 1 then
				arg_99_0:Play413161025(arg_99_1)
			end
		end

		function arg_99_1.onSingleLineUpdate_(arg_102_0)
			local var_102_0 = 0
			local var_102_1 = 1.2

			if var_102_0 < arg_99_1.time_ and arg_99_1.time_ <= var_102_0 + arg_102_0 then
				arg_99_1.talkMaxDuration = 0
				arg_99_1.dialogCg_.alpha = 1

				arg_99_1.dialog_:SetActive(true)
				SetActive(arg_99_1.leftNameGo_, false)

				arg_99_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_99_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_99_1:RecordName(arg_99_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_99_1.iconTrs_.gameObject, false)
				arg_99_1.callingController_:SetSelectedState("normal")

				local var_102_2 = arg_99_1:GetWordFromCfg(413161024)
				local var_102_3 = arg_99_1:FormatText(var_102_2.content)

				arg_99_1.text_.text = var_102_3

				LuaForUtil.ClearLinePrefixSymbol(arg_99_1.text_)

				local var_102_4 = 48
				local var_102_5 = utf8.len(var_102_3)
				local var_102_6 = var_102_4 <= 0 and var_102_1 or var_102_1 * (var_102_5 / var_102_4)

				if var_102_6 > 0 and var_102_1 < var_102_6 then
					arg_99_1.talkMaxDuration = var_102_6

					if var_102_6 + var_102_0 > arg_99_1.duration_ then
						arg_99_1.duration_ = var_102_6 + var_102_0
					end
				end

				arg_99_1.text_.text = var_102_3
				arg_99_1.typewritter.percent = 0

				arg_99_1.typewritter:SetDirty()
				arg_99_1:ShowNextGo(false)
				arg_99_1:RecordContent(arg_99_1.text_.text)
			end

			local var_102_7 = math.max(var_102_1, arg_99_1.talkMaxDuration)

			if var_102_0 <= arg_99_1.time_ and arg_99_1.time_ < var_102_0 + var_102_7 then
				arg_99_1.typewritter.percent = (arg_99_1.time_ - var_102_0) / var_102_7

				arg_99_1.typewritter:SetDirty()
			end

			if arg_99_1.time_ >= var_102_0 + var_102_7 and arg_99_1.time_ < var_102_0 + var_102_7 + arg_102_0 then
				arg_99_1.typewritter.percent = 1

				arg_99_1.typewritter:SetDirty()
				arg_99_1:ShowNextGo(true)
			end
		end
	end,
	Play413161025 = function(arg_103_0, arg_103_1)
		arg_103_1.time_ = 0
		arg_103_1.frameCnt_ = 0
		arg_103_1.state_ = "playing"
		arg_103_1.curTalkId_ = 413161025
		arg_103_1.duration_ = 10.77

		local var_103_0 = {
			zh = 7.966,
			ja = 10.766
		}
		local var_103_1 = manager.audio:GetLocalizationFlag()

		if var_103_0[var_103_1] ~= nil then
			arg_103_1.duration_ = var_103_0[var_103_1]
		end

		SetActive(arg_103_1.tipsGo_, false)

		function arg_103_1.onSingleLineFinish_()
			arg_103_1.onSingleLineUpdate_ = nil
			arg_103_1.onSingleLineFinish_ = nil
			arg_103_1.state_ = "waiting"
		end

		function arg_103_1.playNext_(arg_105_0)
			if arg_105_0 == 1 then
				arg_103_0:Play413161026(arg_103_1)
			end
		end

		function arg_103_1.onSingleLineUpdate_(arg_106_0)
			local var_106_0 = "10022"

			if arg_103_1.actors_[var_106_0] == nil then
				local var_106_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10022")

				if not isNil(var_106_1) then
					local var_106_2 = Object.Instantiate(var_106_1, arg_103_1.canvasGo_.transform)

					var_106_2.transform:SetSiblingIndex(1)

					var_106_2.name = var_106_0
					var_106_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_103_1.actors_[var_106_0] = var_106_2

					local var_106_3 = var_106_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_103_1.isInRecall_ then
						for iter_106_0, iter_106_1 in ipairs(var_106_3) do
							iter_106_1.color = arg_103_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_106_4 = arg_103_1.actors_["10022"].transform
			local var_106_5 = 0

			if var_106_5 < arg_103_1.time_ and arg_103_1.time_ <= var_106_5 + arg_106_0 then
				arg_103_1.var_.moveOldPos10022 = var_106_4.localPosition
				var_106_4.localScale = Vector3.New(1, 1, 1)

				arg_103_1:CheckSpriteTmpPos("10022", 3)

				local var_106_6 = var_106_4.childCount

				for iter_106_2 = 0, var_106_6 - 1 do
					local var_106_7 = var_106_4:GetChild(iter_106_2)

					if var_106_7.name == "" or not string.find(var_106_7.name, "split") then
						var_106_7.gameObject:SetActive(true)
					else
						var_106_7.gameObject:SetActive(false)
					end
				end
			end

			local var_106_8 = 0.001

			if var_106_5 <= arg_103_1.time_ and arg_103_1.time_ < var_106_5 + var_106_8 then
				local var_106_9 = (arg_103_1.time_ - var_106_5) / var_106_8
				local var_106_10 = Vector3.New(0, -315, -320)

				var_106_4.localPosition = Vector3.Lerp(arg_103_1.var_.moveOldPos10022, var_106_10, var_106_9)
			end

			if arg_103_1.time_ >= var_106_5 + var_106_8 and arg_103_1.time_ < var_106_5 + var_106_8 + arg_106_0 then
				var_106_4.localPosition = Vector3.New(0, -315, -320)
			end

			local var_106_11 = arg_103_1.actors_["10022"]
			local var_106_12 = 0

			if var_106_12 < arg_103_1.time_ and arg_103_1.time_ <= var_106_12 + arg_106_0 and not isNil(var_106_11) and arg_103_1.var_.actorSpriteComps10022 == nil then
				arg_103_1.var_.actorSpriteComps10022 = var_106_11:GetComponentsInChildren(typeof(Image), true)
			end

			local var_106_13 = 2

			if var_106_12 <= arg_103_1.time_ and arg_103_1.time_ < var_106_12 + var_106_13 and not isNil(var_106_11) then
				local var_106_14 = (arg_103_1.time_ - var_106_12) / var_106_13

				if arg_103_1.var_.actorSpriteComps10022 then
					for iter_106_3, iter_106_4 in pairs(arg_103_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_106_4 then
							if arg_103_1.isInRecall_ then
								local var_106_15 = Mathf.Lerp(iter_106_4.color.r, arg_103_1.hightColor1.r, var_106_14)
								local var_106_16 = Mathf.Lerp(iter_106_4.color.g, arg_103_1.hightColor1.g, var_106_14)
								local var_106_17 = Mathf.Lerp(iter_106_4.color.b, arg_103_1.hightColor1.b, var_106_14)

								iter_106_4.color = Color.New(var_106_15, var_106_16, var_106_17)
							else
								local var_106_18 = Mathf.Lerp(iter_106_4.color.r, 1, var_106_14)

								iter_106_4.color = Color.New(var_106_18, var_106_18, var_106_18)
							end
						end
					end
				end
			end

			if arg_103_1.time_ >= var_106_12 + var_106_13 and arg_103_1.time_ < var_106_12 + var_106_13 + arg_106_0 and not isNil(var_106_11) and arg_103_1.var_.actorSpriteComps10022 then
				for iter_106_5, iter_106_6 in pairs(arg_103_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_106_6 then
						if arg_103_1.isInRecall_ then
							iter_106_6.color = arg_103_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_106_6.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_103_1.var_.actorSpriteComps10022 = nil
			end

			local var_106_19 = 0
			local var_106_20 = 1.05

			if var_106_19 < arg_103_1.time_ and arg_103_1.time_ <= var_106_19 + arg_106_0 then
				arg_103_1.talkMaxDuration = 0
				arg_103_1.dialogCg_.alpha = 1

				arg_103_1.dialog_:SetActive(true)
				SetActive(arg_103_1.leftNameGo_, true)

				local var_106_21 = arg_103_1:FormatText(StoryNameCfg[614].name)

				arg_103_1.leftNameTxt_.text = var_106_21

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_103_1.leftNameTxt_.transform)

				arg_103_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_103_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_103_1:RecordName(arg_103_1.leftNameTxt_.text)
				SetActive(arg_103_1.iconTrs_.gameObject, false)
				arg_103_1.callingController_:SetSelectedState("normal")

				local var_106_22 = arg_103_1:GetWordFromCfg(413161025)
				local var_106_23 = arg_103_1:FormatText(var_106_22.content)

				arg_103_1.text_.text = var_106_23

				LuaForUtil.ClearLinePrefixSymbol(arg_103_1.text_)

				local var_106_24 = 42
				local var_106_25 = utf8.len(var_106_23)
				local var_106_26 = var_106_24 <= 0 and var_106_20 or var_106_20 * (var_106_25 / var_106_24)

				if var_106_26 > 0 and var_106_20 < var_106_26 then
					arg_103_1.talkMaxDuration = var_106_26

					if var_106_26 + var_106_19 > arg_103_1.duration_ then
						arg_103_1.duration_ = var_106_26 + var_106_19
					end
				end

				arg_103_1.text_.text = var_106_23
				arg_103_1.typewritter.percent = 0

				arg_103_1.typewritter:SetDirty()
				arg_103_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161025", "story_v_out_413161.awb") ~= 0 then
					local var_106_27 = manager.audio:GetVoiceLength("story_v_out_413161", "413161025", "story_v_out_413161.awb") / 1000

					if var_106_27 + var_106_19 > arg_103_1.duration_ then
						arg_103_1.duration_ = var_106_27 + var_106_19
					end

					if var_106_22.prefab_name ~= "" and arg_103_1.actors_[var_106_22.prefab_name] ~= nil then
						local var_106_28 = LuaForUtil.PlayVoiceWithCriLipsync(arg_103_1.actors_[var_106_22.prefab_name].transform, "story_v_out_413161", "413161025", "story_v_out_413161.awb")

						arg_103_1:RecordAudio("413161025", var_106_28)
						arg_103_1:RecordAudio("413161025", var_106_28)
					else
						arg_103_1:AudioAction("play", "voice", "story_v_out_413161", "413161025", "story_v_out_413161.awb")
					end

					arg_103_1:RecordHistoryTalkVoice("story_v_out_413161", "413161025", "story_v_out_413161.awb")
				end

				arg_103_1:RecordContent(arg_103_1.text_.text)
			end

			local var_106_29 = math.max(var_106_20, arg_103_1.talkMaxDuration)

			if var_106_19 <= arg_103_1.time_ and arg_103_1.time_ < var_106_19 + var_106_29 then
				arg_103_1.typewritter.percent = (arg_103_1.time_ - var_106_19) / var_106_29

				arg_103_1.typewritter:SetDirty()
			end

			if arg_103_1.time_ >= var_106_19 + var_106_29 and arg_103_1.time_ < var_106_19 + var_106_29 + arg_106_0 then
				arg_103_1.typewritter.percent = 1

				arg_103_1.typewritter:SetDirty()
				arg_103_1:ShowNextGo(true)
			end
		end
	end,
	Play413161026 = function(arg_107_0, arg_107_1)
		arg_107_1.time_ = 0
		arg_107_1.frameCnt_ = 0
		arg_107_1.state_ = "playing"
		arg_107_1.curTalkId_ = 413161026
		arg_107_1.duration_ = 5

		SetActive(arg_107_1.tipsGo_, false)

		function arg_107_1.onSingleLineFinish_()
			arg_107_1.onSingleLineUpdate_ = nil
			arg_107_1.onSingleLineFinish_ = nil
			arg_107_1.state_ = "waiting"
		end

		function arg_107_1.playNext_(arg_109_0)
			if arg_109_0 == 1 then
				arg_107_0:Play413161027(arg_107_1)
			end
		end

		function arg_107_1.onSingleLineUpdate_(arg_110_0)
			local var_110_0 = arg_107_1.actors_["10022"].transform
			local var_110_1 = 0

			if var_110_1 < arg_107_1.time_ and arg_107_1.time_ <= var_110_1 + arg_110_0 then
				arg_107_1.var_.moveOldPos10022 = var_110_0.localPosition
				var_110_0.localScale = Vector3.New(1, 1, 1)

				arg_107_1:CheckSpriteTmpPos("10022", 6)

				local var_110_2 = var_110_0.childCount

				for iter_110_0 = 0, var_110_2 - 1 do
					local var_110_3 = var_110_0:GetChild(iter_110_0)

					if var_110_3.name == "" or not string.find(var_110_3.name, "split") then
						var_110_3.gameObject:SetActive(true)
					else
						var_110_3.gameObject:SetActive(false)
					end
				end
			end

			local var_110_4 = 0.001

			if var_110_1 <= arg_107_1.time_ and arg_107_1.time_ < var_110_1 + var_110_4 then
				local var_110_5 = (arg_107_1.time_ - var_110_1) / var_110_4
				local var_110_6 = Vector3.New(1500, -315, -320)

				var_110_0.localPosition = Vector3.Lerp(arg_107_1.var_.moveOldPos10022, var_110_6, var_110_5)
			end

			if arg_107_1.time_ >= var_110_1 + var_110_4 and arg_107_1.time_ < var_110_1 + var_110_4 + arg_110_0 then
				var_110_0.localPosition = Vector3.New(1500, -315, -320)
			end

			local var_110_7 = arg_107_1.actors_["10022"]
			local var_110_8 = 0

			if var_110_8 < arg_107_1.time_ and arg_107_1.time_ <= var_110_8 + arg_110_0 and not isNil(var_110_7) and arg_107_1.var_.actorSpriteComps10022 == nil then
				arg_107_1.var_.actorSpriteComps10022 = var_110_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_110_9 = 2

			if var_110_8 <= arg_107_1.time_ and arg_107_1.time_ < var_110_8 + var_110_9 and not isNil(var_110_7) then
				local var_110_10 = (arg_107_1.time_ - var_110_8) / var_110_9

				if arg_107_1.var_.actorSpriteComps10022 then
					for iter_110_1, iter_110_2 in pairs(arg_107_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_110_2 then
							if arg_107_1.isInRecall_ then
								local var_110_11 = Mathf.Lerp(iter_110_2.color.r, arg_107_1.hightColor2.r, var_110_10)
								local var_110_12 = Mathf.Lerp(iter_110_2.color.g, arg_107_1.hightColor2.g, var_110_10)
								local var_110_13 = Mathf.Lerp(iter_110_2.color.b, arg_107_1.hightColor2.b, var_110_10)

								iter_110_2.color = Color.New(var_110_11, var_110_12, var_110_13)
							else
								local var_110_14 = Mathf.Lerp(iter_110_2.color.r, 0.5, var_110_10)

								iter_110_2.color = Color.New(var_110_14, var_110_14, var_110_14)
							end
						end
					end
				end
			end

			if arg_107_1.time_ >= var_110_8 + var_110_9 and arg_107_1.time_ < var_110_8 + var_110_9 + arg_110_0 and not isNil(var_110_7) and arg_107_1.var_.actorSpriteComps10022 then
				for iter_110_3, iter_110_4 in pairs(arg_107_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_110_4 then
						if arg_107_1.isInRecall_ then
							iter_110_4.color = arg_107_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_110_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_107_1.var_.actorSpriteComps10022 = nil
			end

			local var_110_15 = 0
			local var_110_16 = 0.975

			if var_110_15 < arg_107_1.time_ and arg_107_1.time_ <= var_110_15 + arg_110_0 then
				arg_107_1.talkMaxDuration = 0
				arg_107_1.dialogCg_.alpha = 1

				arg_107_1.dialog_:SetActive(true)
				SetActive(arg_107_1.leftNameGo_, false)

				arg_107_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_107_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_107_1:RecordName(arg_107_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_107_1.iconTrs_.gameObject, false)
				arg_107_1.callingController_:SetSelectedState("normal")

				local var_110_17 = arg_107_1:GetWordFromCfg(413161026)
				local var_110_18 = arg_107_1:FormatText(var_110_17.content)

				arg_107_1.text_.text = var_110_18

				LuaForUtil.ClearLinePrefixSymbol(arg_107_1.text_)

				local var_110_19 = 39
				local var_110_20 = utf8.len(var_110_18)
				local var_110_21 = var_110_19 <= 0 and var_110_16 or var_110_16 * (var_110_20 / var_110_19)

				if var_110_21 > 0 and var_110_16 < var_110_21 then
					arg_107_1.talkMaxDuration = var_110_21

					if var_110_21 + var_110_15 > arg_107_1.duration_ then
						arg_107_1.duration_ = var_110_21 + var_110_15
					end
				end

				arg_107_1.text_.text = var_110_18
				arg_107_1.typewritter.percent = 0

				arg_107_1.typewritter:SetDirty()
				arg_107_1:ShowNextGo(false)
				arg_107_1:RecordContent(arg_107_1.text_.text)
			end

			local var_110_22 = math.max(var_110_16, arg_107_1.talkMaxDuration)

			if var_110_15 <= arg_107_1.time_ and arg_107_1.time_ < var_110_15 + var_110_22 then
				arg_107_1.typewritter.percent = (arg_107_1.time_ - var_110_15) / var_110_22

				arg_107_1.typewritter:SetDirty()
			end

			if arg_107_1.time_ >= var_110_15 + var_110_22 and arg_107_1.time_ < var_110_15 + var_110_22 + arg_110_0 then
				arg_107_1.typewritter.percent = 1

				arg_107_1.typewritter:SetDirty()
				arg_107_1:ShowNextGo(true)
			end
		end
	end,
	Play413161027 = function(arg_111_0, arg_111_1)
		arg_111_1.time_ = 0
		arg_111_1.frameCnt_ = 0
		arg_111_1.state_ = "playing"
		arg_111_1.curTalkId_ = 413161027
		arg_111_1.duration_ = 7.93

		local var_111_0 = {
			zh = 6.966,
			ja = 7.933
		}
		local var_111_1 = manager.audio:GetLocalizationFlag()

		if var_111_0[var_111_1] ~= nil then
			arg_111_1.duration_ = var_111_0[var_111_1]
		end

		SetActive(arg_111_1.tipsGo_, false)

		function arg_111_1.onSingleLineFinish_()
			arg_111_1.onSingleLineUpdate_ = nil
			arg_111_1.onSingleLineFinish_ = nil
			arg_111_1.state_ = "waiting"
		end

		function arg_111_1.playNext_(arg_113_0)
			if arg_113_0 == 1 then
				arg_111_0:Play413161028(arg_111_1)
			end
		end

		function arg_111_1.onSingleLineUpdate_(arg_114_0)
			local var_114_0 = "F10g"

			if arg_111_1.bgs_[var_114_0] == nil then
				local var_114_1 = Object.Instantiate(arg_111_1.paintGo_)

				var_114_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_114_0)
				var_114_1.name = var_114_0
				var_114_1.transform.parent = arg_111_1.stage_.transform
				var_114_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_111_1.bgs_[var_114_0] = var_114_1
			end

			local var_114_2 = 2

			if var_114_2 < arg_111_1.time_ and arg_111_1.time_ <= var_114_2 + arg_114_0 then
				local var_114_3 = manager.ui.mainCamera.transform.localPosition
				local var_114_4 = Vector3.New(0, 0, 10) + Vector3.New(var_114_3.x, var_114_3.y, 0)
				local var_114_5 = arg_111_1.bgs_.F10g

				var_114_5.transform.localPosition = var_114_4
				var_114_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_114_6 = var_114_5:GetComponent("SpriteRenderer")

				if var_114_6 and var_114_6.sprite then
					local var_114_7 = (var_114_5.transform.localPosition - var_114_3).z
					local var_114_8 = manager.ui.mainCameraCom_
					local var_114_9 = 2 * var_114_7 * Mathf.Tan(var_114_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_114_10 = var_114_9 * var_114_8.aspect
					local var_114_11 = var_114_6.sprite.bounds.size.x
					local var_114_12 = var_114_6.sprite.bounds.size.y
					local var_114_13 = var_114_10 / var_114_11
					local var_114_14 = var_114_9 / var_114_12
					local var_114_15 = var_114_14 < var_114_13 and var_114_13 or var_114_14

					var_114_5.transform.localScale = Vector3.New(var_114_15, var_114_15, 0)
				end

				for iter_114_0, iter_114_1 in pairs(arg_111_1.bgs_) do
					if iter_114_0 ~= "F10g" then
						iter_114_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_114_16 = 3.96666666666667

			if var_114_16 < arg_111_1.time_ and arg_111_1.time_ <= var_114_16 + arg_114_0 then
				arg_111_1.allBtn_.enabled = false
			end

			local var_114_17 = 0.3

			if arg_111_1.time_ >= var_114_16 + var_114_17 and arg_111_1.time_ < var_114_16 + var_114_17 + arg_114_0 then
				arg_111_1.allBtn_.enabled = true
			end

			local var_114_18 = 0

			if var_114_18 < arg_111_1.time_ and arg_111_1.time_ <= var_114_18 + arg_114_0 then
				arg_111_1.mask_.enabled = true
				arg_111_1.mask_.raycastTarget = true

				arg_111_1:SetGaussion(false)
			end

			local var_114_19 = 2

			if var_114_18 <= arg_111_1.time_ and arg_111_1.time_ < var_114_18 + var_114_19 then
				local var_114_20 = (arg_111_1.time_ - var_114_18) / var_114_19
				local var_114_21 = Color.New(0, 0, 0)

				var_114_21.a = Mathf.Lerp(0, 1, var_114_20)
				arg_111_1.mask_.color = var_114_21
			end

			if arg_111_1.time_ >= var_114_18 + var_114_19 and arg_111_1.time_ < var_114_18 + var_114_19 + arg_114_0 then
				local var_114_22 = Color.New(0, 0, 0)

				var_114_22.a = 1
				arg_111_1.mask_.color = var_114_22
			end

			local var_114_23 = 2

			if var_114_23 < arg_111_1.time_ and arg_111_1.time_ <= var_114_23 + arg_114_0 then
				arg_111_1.mask_.enabled = true
				arg_111_1.mask_.raycastTarget = true

				arg_111_1:SetGaussion(false)
			end

			local var_114_24 = 2

			if var_114_23 <= arg_111_1.time_ and arg_111_1.time_ < var_114_23 + var_114_24 then
				local var_114_25 = (arg_111_1.time_ - var_114_23) / var_114_24
				local var_114_26 = Color.New(0, 0, 0)

				var_114_26.a = Mathf.Lerp(1, 0, var_114_25)
				arg_111_1.mask_.color = var_114_26
			end

			if arg_111_1.time_ >= var_114_23 + var_114_24 and arg_111_1.time_ < var_114_23 + var_114_24 + arg_114_0 then
				local var_114_27 = Color.New(0, 0, 0)
				local var_114_28 = 0

				arg_111_1.mask_.enabled = false
				var_114_27.a = var_114_28
				arg_111_1.mask_.color = var_114_27
			end

			local var_114_29 = "10092"

			if arg_111_1.actors_[var_114_29] == nil then
				local var_114_30 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10092")

				if not isNil(var_114_30) then
					local var_114_31 = Object.Instantiate(var_114_30, arg_111_1.canvasGo_.transform)

					var_114_31.transform:SetSiblingIndex(1)

					var_114_31.name = var_114_29
					var_114_31.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_111_1.actors_[var_114_29] = var_114_31

					local var_114_32 = var_114_31:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_111_1.isInRecall_ then
						for iter_114_2, iter_114_3 in ipairs(var_114_32) do
							iter_114_3.color = arg_111_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_114_33 = arg_111_1.actors_["10092"].transform
			local var_114_34 = 3.76666666666667

			if var_114_34 < arg_111_1.time_ and arg_111_1.time_ <= var_114_34 + arg_114_0 then
				arg_111_1.var_.moveOldPos10092 = var_114_33.localPosition
				var_114_33.localScale = Vector3.New(1, 1, 1)

				arg_111_1:CheckSpriteTmpPos("10092", 2)

				local var_114_35 = var_114_33.childCount

				for iter_114_4 = 0, var_114_35 - 1 do
					local var_114_36 = var_114_33:GetChild(iter_114_4)

					if var_114_36.name == "" or not string.find(var_114_36.name, "split") then
						var_114_36.gameObject:SetActive(true)
					else
						var_114_36.gameObject:SetActive(false)
					end
				end
			end

			local var_114_37 = 0.001

			if var_114_34 <= arg_111_1.time_ and arg_111_1.time_ < var_114_34 + var_114_37 then
				local var_114_38 = (arg_111_1.time_ - var_114_34) / var_114_37
				local var_114_39 = Vector3.New(-389.49, -300, -295)

				var_114_33.localPosition = Vector3.Lerp(arg_111_1.var_.moveOldPos10092, var_114_39, var_114_38)
			end

			if arg_111_1.time_ >= var_114_34 + var_114_37 and arg_111_1.time_ < var_114_34 + var_114_37 + arg_114_0 then
				var_114_33.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_114_40 = arg_111_1.actors_["10092"]
			local var_114_41 = 3.76666666666667

			if var_114_41 < arg_111_1.time_ and arg_111_1.time_ <= var_114_41 + arg_114_0 and not isNil(var_114_40) and arg_111_1.var_.actorSpriteComps10092 == nil then
				arg_111_1.var_.actorSpriteComps10092 = var_114_40:GetComponentsInChildren(typeof(Image), true)
			end

			local var_114_42 = 2

			if var_114_41 <= arg_111_1.time_ and arg_111_1.time_ < var_114_41 + var_114_42 and not isNil(var_114_40) then
				local var_114_43 = (arg_111_1.time_ - var_114_41) / var_114_42

				if arg_111_1.var_.actorSpriteComps10092 then
					for iter_114_5, iter_114_6 in pairs(arg_111_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_114_6 then
							if arg_111_1.isInRecall_ then
								local var_114_44 = Mathf.Lerp(iter_114_6.color.r, arg_111_1.hightColor1.r, var_114_43)
								local var_114_45 = Mathf.Lerp(iter_114_6.color.g, arg_111_1.hightColor1.g, var_114_43)
								local var_114_46 = Mathf.Lerp(iter_114_6.color.b, arg_111_1.hightColor1.b, var_114_43)

								iter_114_6.color = Color.New(var_114_44, var_114_45, var_114_46)
							else
								local var_114_47 = Mathf.Lerp(iter_114_6.color.r, 1, var_114_43)

								iter_114_6.color = Color.New(var_114_47, var_114_47, var_114_47)
							end
						end
					end
				end
			end

			if arg_111_1.time_ >= var_114_41 + var_114_42 and arg_111_1.time_ < var_114_41 + var_114_42 + arg_114_0 and not isNil(var_114_40) and arg_111_1.var_.actorSpriteComps10092 then
				for iter_114_7, iter_114_8 in pairs(arg_111_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_114_8 then
						if arg_111_1.isInRecall_ then
							iter_114_8.color = arg_111_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_114_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_111_1.var_.actorSpriteComps10092 = nil
			end

			local var_114_48 = arg_111_1.actors_["10092"]
			local var_114_49 = 3.76666666666667

			if var_114_49 < arg_111_1.time_ and arg_111_1.time_ <= var_114_49 + arg_114_0 then
				local var_114_50 = var_114_48:GetComponentInChildren(typeof(CanvasGroup))

				if var_114_50 then
					arg_111_1.var_.alphaOldValue10092 = var_114_50.alpha
					arg_111_1.var_.characterEffect10092 = var_114_50
				end

				arg_111_1.var_.alphaOldValue10092 = 0
			end

			local var_114_51 = 0.2

			if var_114_49 <= arg_111_1.time_ and arg_111_1.time_ < var_114_49 + var_114_51 then
				local var_114_52 = (arg_111_1.time_ - var_114_49) / var_114_51
				local var_114_53 = Mathf.Lerp(arg_111_1.var_.alphaOldValue10092, 1, var_114_52)

				if arg_111_1.var_.characterEffect10092 then
					arg_111_1.var_.characterEffect10092.alpha = var_114_53
				end
			end

			if arg_111_1.time_ >= var_114_49 + var_114_51 and arg_111_1.time_ < var_114_49 + var_114_51 + arg_114_0 and arg_111_1.var_.characterEffect10092 then
				arg_111_1.var_.characterEffect10092.alpha = 1
			end

			local var_114_54 = 2

			arg_111_1.isInRecall_ = true

			if var_114_54 < arg_111_1.time_ and arg_111_1.time_ <= var_114_54 + arg_114_0 then
				arg_111_1.screenFilterGo_:SetActive(true)

				arg_111_1.screenFilterEffect_.profile = Asset.Load("Effect/Scene/fx_vintageStyle_Profile")
				arg_111_1.hightColor1 = Color.New(0.82, 0.77, 0.62)
				arg_111_1.hightColor2 = Color.New(0.46, 0.43, 0.35)

				for iter_114_9, iter_114_10 in pairs(arg_111_1.actors_) do
					local var_114_55 = iter_114_10:GetComponentsInChildren(typeof(Image), true):ToTable()

					for iter_114_11, iter_114_12 in ipairs(var_114_55) do
						if iter_114_12.color.r > 0.51 then
							iter_114_12.color = Color.New(0.82, 0.77, 0.62)
						else
							iter_114_12.color = Color.New(0.46, 0.43, 0.35)
						end
					end
				end
			end

			local var_114_56 = 0.1

			if var_114_54 <= arg_111_1.time_ and arg_111_1.time_ < var_114_54 + var_114_56 then
				local var_114_57 = (arg_111_1.time_ - var_114_54) / var_114_56

				arg_111_1.screenFilterEffect_.weight = Mathf.Lerp(0, 1, var_114_57)
			end

			if arg_111_1.time_ >= var_114_54 + var_114_56 and arg_111_1.time_ < var_114_54 + var_114_56 + arg_114_0 then
				arg_111_1.screenFilterEffect_.weight = 1
			end

			if arg_111_1.frameCnt_ <= 1 then
				arg_111_1.dialog_:SetActive(false)
			end

			local var_114_58 = 4
			local var_114_59 = 0.375

			if var_114_58 < arg_111_1.time_ and arg_111_1.time_ <= var_114_58 + arg_114_0 then
				arg_111_1.talkMaxDuration = 0

				arg_111_1.dialog_:SetActive(true)

				local var_114_60 = LeanTween.value(arg_111_1.dialog_, 0, 1, 0.3)

				var_114_60:setOnUpdate(LuaHelper.FloatAction(function(arg_115_0)
					arg_111_1.dialogCg_.alpha = arg_115_0
				end))
				var_114_60:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_111_1.dialog_)
					var_114_60:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_111_1.duration_ = arg_111_1.duration_ + 0.3

				SetActive(arg_111_1.leftNameGo_, true)

				local var_114_61 = arg_111_1:FormatText(StoryNameCfg[996].name)

				arg_111_1.leftNameTxt_.text = var_114_61

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_111_1.leftNameTxt_.transform)

				arg_111_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_111_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_111_1:RecordName(arg_111_1.leftNameTxt_.text)
				SetActive(arg_111_1.iconTrs_.gameObject, false)
				arg_111_1.callingController_:SetSelectedState("normal")

				local var_114_62 = arg_111_1:GetWordFromCfg(413161027)
				local var_114_63 = arg_111_1:FormatText(var_114_62.content)

				arg_111_1.text_.text = var_114_63

				LuaForUtil.ClearLinePrefixSymbol(arg_111_1.text_)

				local var_114_64 = 15
				local var_114_65 = utf8.len(var_114_63)
				local var_114_66 = var_114_64 <= 0 and var_114_59 or var_114_59 * (var_114_65 / var_114_64)

				if var_114_66 > 0 and var_114_59 < var_114_66 then
					arg_111_1.talkMaxDuration = var_114_66
					var_114_58 = var_114_58 + 0.3

					if var_114_66 + var_114_58 > arg_111_1.duration_ then
						arg_111_1.duration_ = var_114_66 + var_114_58
					end
				end

				arg_111_1.text_.text = var_114_63
				arg_111_1.typewritter.percent = 0

				arg_111_1.typewritter:SetDirty()
				arg_111_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161027", "story_v_out_413161.awb") ~= 0 then
					local var_114_67 = manager.audio:GetVoiceLength("story_v_out_413161", "413161027", "story_v_out_413161.awb") / 1000

					if var_114_67 + var_114_58 > arg_111_1.duration_ then
						arg_111_1.duration_ = var_114_67 + var_114_58
					end

					if var_114_62.prefab_name ~= "" and arg_111_1.actors_[var_114_62.prefab_name] ~= nil then
						local var_114_68 = LuaForUtil.PlayVoiceWithCriLipsync(arg_111_1.actors_[var_114_62.prefab_name].transform, "story_v_out_413161", "413161027", "story_v_out_413161.awb")

						arg_111_1:RecordAudio("413161027", var_114_68)
						arg_111_1:RecordAudio("413161027", var_114_68)
					else
						arg_111_1:AudioAction("play", "voice", "story_v_out_413161", "413161027", "story_v_out_413161.awb")
					end

					arg_111_1:RecordHistoryTalkVoice("story_v_out_413161", "413161027", "story_v_out_413161.awb")
				end

				arg_111_1:RecordContent(arg_111_1.text_.text)
			end

			local var_114_69 = var_114_58 + 0.3
			local var_114_70 = math.max(var_114_59, arg_111_1.talkMaxDuration)

			if var_114_69 <= arg_111_1.time_ and arg_111_1.time_ < var_114_69 + var_114_70 then
				arg_111_1.typewritter.percent = (arg_111_1.time_ - var_114_69) / var_114_70

				arg_111_1.typewritter:SetDirty()
			end

			if arg_111_1.time_ >= var_114_69 + var_114_70 and arg_111_1.time_ < var_114_69 + var_114_70 + arg_114_0 then
				arg_111_1.typewritter.percent = 1

				arg_111_1.typewritter:SetDirty()
				arg_111_1:ShowNextGo(true)
			end
		end
	end,
	Play413161028 = function(arg_117_0, arg_117_1)
		arg_117_1.time_ = 0
		arg_117_1.frameCnt_ = 0
		arg_117_1.state_ = "playing"
		arg_117_1.curTalkId_ = 413161028
		arg_117_1.duration_ = 3.7

		local var_117_0 = {
			zh = 2.8,
			ja = 3.7
		}
		local var_117_1 = manager.audio:GetLocalizationFlag()

		if var_117_0[var_117_1] ~= nil then
			arg_117_1.duration_ = var_117_0[var_117_1]
		end

		SetActive(arg_117_1.tipsGo_, false)

		function arg_117_1.onSingleLineFinish_()
			arg_117_1.onSingleLineUpdate_ = nil
			arg_117_1.onSingleLineFinish_ = nil
			arg_117_1.state_ = "waiting"
		end

		function arg_117_1.playNext_(arg_119_0)
			if arg_119_0 == 1 then
				arg_117_0:Play413161029(arg_117_1)
			end
		end

		function arg_117_1.onSingleLineUpdate_(arg_120_0)
			local var_120_0 = arg_117_1.actors_["10092"].transform
			local var_120_1 = 0

			if var_120_1 < arg_117_1.time_ and arg_117_1.time_ <= var_120_1 + arg_120_0 then
				arg_117_1.var_.moveOldPos10092 = var_120_0.localPosition
				var_120_0.localScale = Vector3.New(1, 1, 1)

				arg_117_1:CheckSpriteTmpPos("10092", 2)

				local var_120_2 = var_120_0.childCount

				for iter_120_0 = 0, var_120_2 - 1 do
					local var_120_3 = var_120_0:GetChild(iter_120_0)

					if var_120_3.name == "" or not string.find(var_120_3.name, "split") then
						var_120_3.gameObject:SetActive(true)
					else
						var_120_3.gameObject:SetActive(false)
					end
				end
			end

			local var_120_4 = 0.001

			if var_120_1 <= arg_117_1.time_ and arg_117_1.time_ < var_120_1 + var_120_4 then
				local var_120_5 = (arg_117_1.time_ - var_120_1) / var_120_4
				local var_120_6 = Vector3.New(-389.49, -300, -295)

				var_120_0.localPosition = Vector3.Lerp(arg_117_1.var_.moveOldPos10092, var_120_6, var_120_5)
			end

			if arg_117_1.time_ >= var_120_1 + var_120_4 and arg_117_1.time_ < var_120_1 + var_120_4 + arg_120_0 then
				var_120_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_120_7 = arg_117_1.actors_["10022"].transform
			local var_120_8 = 0

			if var_120_8 < arg_117_1.time_ and arg_117_1.time_ <= var_120_8 + arg_120_0 then
				arg_117_1.var_.moveOldPos10022 = var_120_7.localPosition
				var_120_7.localScale = Vector3.New(1, 1, 1)

				arg_117_1:CheckSpriteTmpPos("10022", 4)

				local var_120_9 = var_120_7.childCount

				for iter_120_1 = 0, var_120_9 - 1 do
					local var_120_10 = var_120_7:GetChild(iter_120_1)

					if var_120_10.name == "split_6" or not string.find(var_120_10.name, "split") then
						var_120_10.gameObject:SetActive(true)
					else
						var_120_10.gameObject:SetActive(false)
					end
				end
			end

			local var_120_11 = 0.001

			if var_120_8 <= arg_117_1.time_ and arg_117_1.time_ < var_120_8 + var_120_11 then
				local var_120_12 = (arg_117_1.time_ - var_120_8) / var_120_11
				local var_120_13 = Vector3.New(390, -315, -320)

				var_120_7.localPosition = Vector3.Lerp(arg_117_1.var_.moveOldPos10022, var_120_13, var_120_12)
			end

			if arg_117_1.time_ >= var_120_8 + var_120_11 and arg_117_1.time_ < var_120_8 + var_120_11 + arg_120_0 then
				var_120_7.localPosition = Vector3.New(390, -315, -320)
			end

			local var_120_14 = arg_117_1.actors_["10092"]
			local var_120_15 = 0

			if var_120_15 < arg_117_1.time_ and arg_117_1.time_ <= var_120_15 + arg_120_0 and not isNil(var_120_14) and arg_117_1.var_.actorSpriteComps10092 == nil then
				arg_117_1.var_.actorSpriteComps10092 = var_120_14:GetComponentsInChildren(typeof(Image), true)
			end

			local var_120_16 = 2

			if var_120_15 <= arg_117_1.time_ and arg_117_1.time_ < var_120_15 + var_120_16 and not isNil(var_120_14) then
				local var_120_17 = (arg_117_1.time_ - var_120_15) / var_120_16

				if arg_117_1.var_.actorSpriteComps10092 then
					for iter_120_2, iter_120_3 in pairs(arg_117_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_120_3 then
							if arg_117_1.isInRecall_ then
								local var_120_18 = Mathf.Lerp(iter_120_3.color.r, arg_117_1.hightColor2.r, var_120_17)
								local var_120_19 = Mathf.Lerp(iter_120_3.color.g, arg_117_1.hightColor2.g, var_120_17)
								local var_120_20 = Mathf.Lerp(iter_120_3.color.b, arg_117_1.hightColor2.b, var_120_17)

								iter_120_3.color = Color.New(var_120_18, var_120_19, var_120_20)
							else
								local var_120_21 = Mathf.Lerp(iter_120_3.color.r, 0.5, var_120_17)

								iter_120_3.color = Color.New(var_120_21, var_120_21, var_120_21)
							end
						end
					end
				end
			end

			if arg_117_1.time_ >= var_120_15 + var_120_16 and arg_117_1.time_ < var_120_15 + var_120_16 + arg_120_0 and not isNil(var_120_14) and arg_117_1.var_.actorSpriteComps10092 then
				for iter_120_4, iter_120_5 in pairs(arg_117_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_120_5 then
						if arg_117_1.isInRecall_ then
							iter_120_5.color = arg_117_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_120_5.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_117_1.var_.actorSpriteComps10092 = nil
			end

			local var_120_22 = arg_117_1.actors_["10022"]
			local var_120_23 = 0

			if var_120_23 < arg_117_1.time_ and arg_117_1.time_ <= var_120_23 + arg_120_0 and not isNil(var_120_22) and arg_117_1.var_.actorSpriteComps10022 == nil then
				arg_117_1.var_.actorSpriteComps10022 = var_120_22:GetComponentsInChildren(typeof(Image), true)
			end

			local var_120_24 = 2

			if var_120_23 <= arg_117_1.time_ and arg_117_1.time_ < var_120_23 + var_120_24 and not isNil(var_120_22) then
				local var_120_25 = (arg_117_1.time_ - var_120_23) / var_120_24

				if arg_117_1.var_.actorSpriteComps10022 then
					for iter_120_6, iter_120_7 in pairs(arg_117_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_120_7 then
							if arg_117_1.isInRecall_ then
								local var_120_26 = Mathf.Lerp(iter_120_7.color.r, arg_117_1.hightColor1.r, var_120_25)
								local var_120_27 = Mathf.Lerp(iter_120_7.color.g, arg_117_1.hightColor1.g, var_120_25)
								local var_120_28 = Mathf.Lerp(iter_120_7.color.b, arg_117_1.hightColor1.b, var_120_25)

								iter_120_7.color = Color.New(var_120_26, var_120_27, var_120_28)
							else
								local var_120_29 = Mathf.Lerp(iter_120_7.color.r, 1, var_120_25)

								iter_120_7.color = Color.New(var_120_29, var_120_29, var_120_29)
							end
						end
					end
				end
			end

			if arg_117_1.time_ >= var_120_23 + var_120_24 and arg_117_1.time_ < var_120_23 + var_120_24 + arg_120_0 and not isNil(var_120_22) and arg_117_1.var_.actorSpriteComps10022 then
				for iter_120_8, iter_120_9 in pairs(arg_117_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_120_9 then
						if arg_117_1.isInRecall_ then
							iter_120_9.color = arg_117_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_120_9.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_117_1.var_.actorSpriteComps10022 = nil
			end

			local var_120_30 = 0
			local var_120_31 = 0.425

			if var_120_30 < arg_117_1.time_ and arg_117_1.time_ <= var_120_30 + arg_120_0 then
				arg_117_1.talkMaxDuration = 0
				arg_117_1.dialogCg_.alpha = 1

				arg_117_1.dialog_:SetActive(true)
				SetActive(arg_117_1.leftNameGo_, true)

				local var_120_32 = arg_117_1:FormatText(StoryNameCfg[614].name)

				arg_117_1.leftNameTxt_.text = var_120_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_117_1.leftNameTxt_.transform)

				arg_117_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_117_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_117_1:RecordName(arg_117_1.leftNameTxt_.text)
				SetActive(arg_117_1.iconTrs_.gameObject, false)
				arg_117_1.callingController_:SetSelectedState("normal")

				local var_120_33 = arg_117_1:GetWordFromCfg(413161028)
				local var_120_34 = arg_117_1:FormatText(var_120_33.content)

				arg_117_1.text_.text = var_120_34

				LuaForUtil.ClearLinePrefixSymbol(arg_117_1.text_)

				local var_120_35 = 17
				local var_120_36 = utf8.len(var_120_34)
				local var_120_37 = var_120_35 <= 0 and var_120_31 or var_120_31 * (var_120_36 / var_120_35)

				if var_120_37 > 0 and var_120_31 < var_120_37 then
					arg_117_1.talkMaxDuration = var_120_37

					if var_120_37 + var_120_30 > arg_117_1.duration_ then
						arg_117_1.duration_ = var_120_37 + var_120_30
					end
				end

				arg_117_1.text_.text = var_120_34
				arg_117_1.typewritter.percent = 0

				arg_117_1.typewritter:SetDirty()
				arg_117_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161028", "story_v_out_413161.awb") ~= 0 then
					local var_120_38 = manager.audio:GetVoiceLength("story_v_out_413161", "413161028", "story_v_out_413161.awb") / 1000

					if var_120_38 + var_120_30 > arg_117_1.duration_ then
						arg_117_1.duration_ = var_120_38 + var_120_30
					end

					if var_120_33.prefab_name ~= "" and arg_117_1.actors_[var_120_33.prefab_name] ~= nil then
						local var_120_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_117_1.actors_[var_120_33.prefab_name].transform, "story_v_out_413161", "413161028", "story_v_out_413161.awb")

						arg_117_1:RecordAudio("413161028", var_120_39)
						arg_117_1:RecordAudio("413161028", var_120_39)
					else
						arg_117_1:AudioAction("play", "voice", "story_v_out_413161", "413161028", "story_v_out_413161.awb")
					end

					arg_117_1:RecordHistoryTalkVoice("story_v_out_413161", "413161028", "story_v_out_413161.awb")
				end

				arg_117_1:RecordContent(arg_117_1.text_.text)
			end

			local var_120_40 = math.max(var_120_31, arg_117_1.talkMaxDuration)

			if var_120_30 <= arg_117_1.time_ and arg_117_1.time_ < var_120_30 + var_120_40 then
				arg_117_1.typewritter.percent = (arg_117_1.time_ - var_120_30) / var_120_40

				arg_117_1.typewritter:SetDirty()
			end

			if arg_117_1.time_ >= var_120_30 + var_120_40 and arg_117_1.time_ < var_120_30 + var_120_40 + arg_120_0 then
				arg_117_1.typewritter.percent = 1

				arg_117_1.typewritter:SetDirty()
				arg_117_1:ShowNextGo(true)
			end
		end
	end,
	Play413161029 = function(arg_121_0, arg_121_1)
		arg_121_1.time_ = 0
		arg_121_1.frameCnt_ = 0
		arg_121_1.state_ = "playing"
		arg_121_1.curTalkId_ = 413161029
		arg_121_1.duration_ = 12.5

		local var_121_0 = {
			zh = 6.7,
			ja = 12.5
		}
		local var_121_1 = manager.audio:GetLocalizationFlag()

		if var_121_0[var_121_1] ~= nil then
			arg_121_1.duration_ = var_121_0[var_121_1]
		end

		SetActive(arg_121_1.tipsGo_, false)

		function arg_121_1.onSingleLineFinish_()
			arg_121_1.onSingleLineUpdate_ = nil
			arg_121_1.onSingleLineFinish_ = nil
			arg_121_1.state_ = "waiting"
		end

		function arg_121_1.playNext_(arg_123_0)
			if arg_123_0 == 1 then
				arg_121_0:Play413161030(arg_121_1)
			end
		end

		function arg_121_1.onSingleLineUpdate_(arg_124_0)
			local var_124_0 = arg_121_1.actors_["10092"].transform
			local var_124_1 = 0

			if var_124_1 < arg_121_1.time_ and arg_121_1.time_ <= var_124_1 + arg_124_0 then
				arg_121_1.var_.moveOldPos10092 = var_124_0.localPosition
				var_124_0.localScale = Vector3.New(1, 1, 1)

				arg_121_1:CheckSpriteTmpPos("10092", 2)

				local var_124_2 = var_124_0.childCount

				for iter_124_0 = 0, var_124_2 - 1 do
					local var_124_3 = var_124_0:GetChild(iter_124_0)

					if var_124_3.name == "split_2" or not string.find(var_124_3.name, "split") then
						var_124_3.gameObject:SetActive(true)
					else
						var_124_3.gameObject:SetActive(false)
					end
				end
			end

			local var_124_4 = 0.001

			if var_124_1 <= arg_121_1.time_ and arg_121_1.time_ < var_124_1 + var_124_4 then
				local var_124_5 = (arg_121_1.time_ - var_124_1) / var_124_4
				local var_124_6 = Vector3.New(-389.49, -300, -295)

				var_124_0.localPosition = Vector3.Lerp(arg_121_1.var_.moveOldPos10092, var_124_6, var_124_5)
			end

			if arg_121_1.time_ >= var_124_1 + var_124_4 and arg_121_1.time_ < var_124_1 + var_124_4 + arg_124_0 then
				var_124_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_124_7 = arg_121_1.actors_["10022"]
			local var_124_8 = 0

			if var_124_8 < arg_121_1.time_ and arg_121_1.time_ <= var_124_8 + arg_124_0 and not isNil(var_124_7) and arg_121_1.var_.actorSpriteComps10022 == nil then
				arg_121_1.var_.actorSpriteComps10022 = var_124_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_124_9 = 2

			if var_124_8 <= arg_121_1.time_ and arg_121_1.time_ < var_124_8 + var_124_9 and not isNil(var_124_7) then
				local var_124_10 = (arg_121_1.time_ - var_124_8) / var_124_9

				if arg_121_1.var_.actorSpriteComps10022 then
					for iter_124_1, iter_124_2 in pairs(arg_121_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_124_2 then
							if arg_121_1.isInRecall_ then
								local var_124_11 = Mathf.Lerp(iter_124_2.color.r, arg_121_1.hightColor2.r, var_124_10)
								local var_124_12 = Mathf.Lerp(iter_124_2.color.g, arg_121_1.hightColor2.g, var_124_10)
								local var_124_13 = Mathf.Lerp(iter_124_2.color.b, arg_121_1.hightColor2.b, var_124_10)

								iter_124_2.color = Color.New(var_124_11, var_124_12, var_124_13)
							else
								local var_124_14 = Mathf.Lerp(iter_124_2.color.r, 0.5, var_124_10)

								iter_124_2.color = Color.New(var_124_14, var_124_14, var_124_14)
							end
						end
					end
				end
			end

			if arg_121_1.time_ >= var_124_8 + var_124_9 and arg_121_1.time_ < var_124_8 + var_124_9 + arg_124_0 and not isNil(var_124_7) and arg_121_1.var_.actorSpriteComps10022 then
				for iter_124_3, iter_124_4 in pairs(arg_121_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_124_4 then
						if arg_121_1.isInRecall_ then
							iter_124_4.color = arg_121_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_124_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_121_1.var_.actorSpriteComps10022 = nil
			end

			local var_124_15 = arg_121_1.actors_["10092"]
			local var_124_16 = 0

			if var_124_16 < arg_121_1.time_ and arg_121_1.time_ <= var_124_16 + arg_124_0 and not isNil(var_124_15) and arg_121_1.var_.actorSpriteComps10092 == nil then
				arg_121_1.var_.actorSpriteComps10092 = var_124_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_124_17 = 2

			if var_124_16 <= arg_121_1.time_ and arg_121_1.time_ < var_124_16 + var_124_17 and not isNil(var_124_15) then
				local var_124_18 = (arg_121_1.time_ - var_124_16) / var_124_17

				if arg_121_1.var_.actorSpriteComps10092 then
					for iter_124_5, iter_124_6 in pairs(arg_121_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_124_6 then
							if arg_121_1.isInRecall_ then
								local var_124_19 = Mathf.Lerp(iter_124_6.color.r, arg_121_1.hightColor1.r, var_124_18)
								local var_124_20 = Mathf.Lerp(iter_124_6.color.g, arg_121_1.hightColor1.g, var_124_18)
								local var_124_21 = Mathf.Lerp(iter_124_6.color.b, arg_121_1.hightColor1.b, var_124_18)

								iter_124_6.color = Color.New(var_124_19, var_124_20, var_124_21)
							else
								local var_124_22 = Mathf.Lerp(iter_124_6.color.r, 1, var_124_18)

								iter_124_6.color = Color.New(var_124_22, var_124_22, var_124_22)
							end
						end
					end
				end
			end

			if arg_121_1.time_ >= var_124_16 + var_124_17 and arg_121_1.time_ < var_124_16 + var_124_17 + arg_124_0 and not isNil(var_124_15) and arg_121_1.var_.actorSpriteComps10092 then
				for iter_124_7, iter_124_8 in pairs(arg_121_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_124_8 then
						if arg_121_1.isInRecall_ then
							iter_124_8.color = arg_121_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_124_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_121_1.var_.actorSpriteComps10092 = nil
			end

			local var_124_23 = 0
			local var_124_24 = 0.95

			if var_124_23 < arg_121_1.time_ and arg_121_1.time_ <= var_124_23 + arg_124_0 then
				arg_121_1.talkMaxDuration = 0
				arg_121_1.dialogCg_.alpha = 1

				arg_121_1.dialog_:SetActive(true)
				SetActive(arg_121_1.leftNameGo_, true)

				local var_124_25 = arg_121_1:FormatText(StoryNameCfg[996].name)

				arg_121_1.leftNameTxt_.text = var_124_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_121_1.leftNameTxt_.transform)

				arg_121_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_121_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_121_1:RecordName(arg_121_1.leftNameTxt_.text)
				SetActive(arg_121_1.iconTrs_.gameObject, false)
				arg_121_1.callingController_:SetSelectedState("normal")

				local var_124_26 = arg_121_1:GetWordFromCfg(413161029)
				local var_124_27 = arg_121_1:FormatText(var_124_26.content)

				arg_121_1.text_.text = var_124_27

				LuaForUtil.ClearLinePrefixSymbol(arg_121_1.text_)

				local var_124_28 = 38
				local var_124_29 = utf8.len(var_124_27)
				local var_124_30 = var_124_28 <= 0 and var_124_24 or var_124_24 * (var_124_29 / var_124_28)

				if var_124_30 > 0 and var_124_24 < var_124_30 then
					arg_121_1.talkMaxDuration = var_124_30

					if var_124_30 + var_124_23 > arg_121_1.duration_ then
						arg_121_1.duration_ = var_124_30 + var_124_23
					end
				end

				arg_121_1.text_.text = var_124_27
				arg_121_1.typewritter.percent = 0

				arg_121_1.typewritter:SetDirty()
				arg_121_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161029", "story_v_out_413161.awb") ~= 0 then
					local var_124_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161029", "story_v_out_413161.awb") / 1000

					if var_124_31 + var_124_23 > arg_121_1.duration_ then
						arg_121_1.duration_ = var_124_31 + var_124_23
					end

					if var_124_26.prefab_name ~= "" and arg_121_1.actors_[var_124_26.prefab_name] ~= nil then
						local var_124_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_121_1.actors_[var_124_26.prefab_name].transform, "story_v_out_413161", "413161029", "story_v_out_413161.awb")

						arg_121_1:RecordAudio("413161029", var_124_32)
						arg_121_1:RecordAudio("413161029", var_124_32)
					else
						arg_121_1:AudioAction("play", "voice", "story_v_out_413161", "413161029", "story_v_out_413161.awb")
					end

					arg_121_1:RecordHistoryTalkVoice("story_v_out_413161", "413161029", "story_v_out_413161.awb")
				end

				arg_121_1:RecordContent(arg_121_1.text_.text)
			end

			local var_124_33 = math.max(var_124_24, arg_121_1.talkMaxDuration)

			if var_124_23 <= arg_121_1.time_ and arg_121_1.time_ < var_124_23 + var_124_33 then
				arg_121_1.typewritter.percent = (arg_121_1.time_ - var_124_23) / var_124_33

				arg_121_1.typewritter:SetDirty()
			end

			if arg_121_1.time_ >= var_124_23 + var_124_33 and arg_121_1.time_ < var_124_23 + var_124_33 + arg_124_0 then
				arg_121_1.typewritter.percent = 1

				arg_121_1.typewritter:SetDirty()
				arg_121_1:ShowNextGo(true)
			end
		end
	end,
	Play413161030 = function(arg_125_0, arg_125_1)
		arg_125_1.time_ = 0
		arg_125_1.frameCnt_ = 0
		arg_125_1.state_ = "playing"
		arg_125_1.curTalkId_ = 413161030
		arg_125_1.duration_ = 6

		local var_125_0 = {
			zh = 6,
			ja = 4.533
		}
		local var_125_1 = manager.audio:GetLocalizationFlag()

		if var_125_0[var_125_1] ~= nil then
			arg_125_1.duration_ = var_125_0[var_125_1]
		end

		SetActive(arg_125_1.tipsGo_, false)

		function arg_125_1.onSingleLineFinish_()
			arg_125_1.onSingleLineUpdate_ = nil
			arg_125_1.onSingleLineFinish_ = nil
			arg_125_1.state_ = "waiting"
		end

		function arg_125_1.playNext_(arg_127_0)
			if arg_127_0 == 1 then
				arg_125_0:Play413161031(arg_125_1)
			end
		end

		function arg_125_1.onSingleLineUpdate_(arg_128_0)
			local var_128_0 = arg_125_1.actors_["10092"]
			local var_128_1 = 0

			if var_128_1 < arg_125_1.time_ and arg_125_1.time_ <= var_128_1 + arg_128_0 and not isNil(var_128_0) and arg_125_1.var_.actorSpriteComps10092 == nil then
				arg_125_1.var_.actorSpriteComps10092 = var_128_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_128_2 = 2

			if var_128_1 <= arg_125_1.time_ and arg_125_1.time_ < var_128_1 + var_128_2 and not isNil(var_128_0) then
				local var_128_3 = (arg_125_1.time_ - var_128_1) / var_128_2

				if arg_125_1.var_.actorSpriteComps10092 then
					for iter_128_0, iter_128_1 in pairs(arg_125_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_128_1 then
							if arg_125_1.isInRecall_ then
								local var_128_4 = Mathf.Lerp(iter_128_1.color.r, arg_125_1.hightColor2.r, var_128_3)
								local var_128_5 = Mathf.Lerp(iter_128_1.color.g, arg_125_1.hightColor2.g, var_128_3)
								local var_128_6 = Mathf.Lerp(iter_128_1.color.b, arg_125_1.hightColor2.b, var_128_3)

								iter_128_1.color = Color.New(var_128_4, var_128_5, var_128_6)
							else
								local var_128_7 = Mathf.Lerp(iter_128_1.color.r, 0.5, var_128_3)

								iter_128_1.color = Color.New(var_128_7, var_128_7, var_128_7)
							end
						end
					end
				end
			end

			if arg_125_1.time_ >= var_128_1 + var_128_2 and arg_125_1.time_ < var_128_1 + var_128_2 + arg_128_0 and not isNil(var_128_0) and arg_125_1.var_.actorSpriteComps10092 then
				for iter_128_2, iter_128_3 in pairs(arg_125_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_128_3 then
						if arg_125_1.isInRecall_ then
							iter_128_3.color = arg_125_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_128_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_125_1.var_.actorSpriteComps10092 = nil
			end

			local var_128_8 = arg_125_1.actors_["10022"]
			local var_128_9 = 0

			if var_128_9 < arg_125_1.time_ and arg_125_1.time_ <= var_128_9 + arg_128_0 and not isNil(var_128_8) and arg_125_1.var_.actorSpriteComps10022 == nil then
				arg_125_1.var_.actorSpriteComps10022 = var_128_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_128_10 = 2

			if var_128_9 <= arg_125_1.time_ and arg_125_1.time_ < var_128_9 + var_128_10 and not isNil(var_128_8) then
				local var_128_11 = (arg_125_1.time_ - var_128_9) / var_128_10

				if arg_125_1.var_.actorSpriteComps10022 then
					for iter_128_4, iter_128_5 in pairs(arg_125_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_128_5 then
							if arg_125_1.isInRecall_ then
								local var_128_12 = Mathf.Lerp(iter_128_5.color.r, arg_125_1.hightColor1.r, var_128_11)
								local var_128_13 = Mathf.Lerp(iter_128_5.color.g, arg_125_1.hightColor1.g, var_128_11)
								local var_128_14 = Mathf.Lerp(iter_128_5.color.b, arg_125_1.hightColor1.b, var_128_11)

								iter_128_5.color = Color.New(var_128_12, var_128_13, var_128_14)
							else
								local var_128_15 = Mathf.Lerp(iter_128_5.color.r, 1, var_128_11)

								iter_128_5.color = Color.New(var_128_15, var_128_15, var_128_15)
							end
						end
					end
				end
			end

			if arg_125_1.time_ >= var_128_9 + var_128_10 and arg_125_1.time_ < var_128_9 + var_128_10 + arg_128_0 and not isNil(var_128_8) and arg_125_1.var_.actorSpriteComps10022 then
				for iter_128_6, iter_128_7 in pairs(arg_125_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_128_7 then
						if arg_125_1.isInRecall_ then
							iter_128_7.color = arg_125_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_128_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_125_1.var_.actorSpriteComps10022 = nil
			end

			local var_128_16 = 0
			local var_128_17 = 0.725

			if var_128_16 < arg_125_1.time_ and arg_125_1.time_ <= var_128_16 + arg_128_0 then
				arg_125_1.talkMaxDuration = 0
				arg_125_1.dialogCg_.alpha = 1

				arg_125_1.dialog_:SetActive(true)
				SetActive(arg_125_1.leftNameGo_, true)

				local var_128_18 = arg_125_1:FormatText(StoryNameCfg[614].name)

				arg_125_1.leftNameTxt_.text = var_128_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_125_1.leftNameTxt_.transform)

				arg_125_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_125_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_125_1:RecordName(arg_125_1.leftNameTxt_.text)
				SetActive(arg_125_1.iconTrs_.gameObject, false)
				arg_125_1.callingController_:SetSelectedState("normal")

				local var_128_19 = arg_125_1:GetWordFromCfg(413161030)
				local var_128_20 = arg_125_1:FormatText(var_128_19.content)

				arg_125_1.text_.text = var_128_20

				LuaForUtil.ClearLinePrefixSymbol(arg_125_1.text_)

				local var_128_21 = 29
				local var_128_22 = utf8.len(var_128_20)
				local var_128_23 = var_128_21 <= 0 and var_128_17 or var_128_17 * (var_128_22 / var_128_21)

				if var_128_23 > 0 and var_128_17 < var_128_23 then
					arg_125_1.talkMaxDuration = var_128_23

					if var_128_23 + var_128_16 > arg_125_1.duration_ then
						arg_125_1.duration_ = var_128_23 + var_128_16
					end
				end

				arg_125_1.text_.text = var_128_20
				arg_125_1.typewritter.percent = 0

				arg_125_1.typewritter:SetDirty()
				arg_125_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161030", "story_v_out_413161.awb") ~= 0 then
					local var_128_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161030", "story_v_out_413161.awb") / 1000

					if var_128_24 + var_128_16 > arg_125_1.duration_ then
						arg_125_1.duration_ = var_128_24 + var_128_16
					end

					if var_128_19.prefab_name ~= "" and arg_125_1.actors_[var_128_19.prefab_name] ~= nil then
						local var_128_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_125_1.actors_[var_128_19.prefab_name].transform, "story_v_out_413161", "413161030", "story_v_out_413161.awb")

						arg_125_1:RecordAudio("413161030", var_128_25)
						arg_125_1:RecordAudio("413161030", var_128_25)
					else
						arg_125_1:AudioAction("play", "voice", "story_v_out_413161", "413161030", "story_v_out_413161.awb")
					end

					arg_125_1:RecordHistoryTalkVoice("story_v_out_413161", "413161030", "story_v_out_413161.awb")
				end

				arg_125_1:RecordContent(arg_125_1.text_.text)
			end

			local var_128_26 = math.max(var_128_17, arg_125_1.talkMaxDuration)

			if var_128_16 <= arg_125_1.time_ and arg_125_1.time_ < var_128_16 + var_128_26 then
				arg_125_1.typewritter.percent = (arg_125_1.time_ - var_128_16) / var_128_26

				arg_125_1.typewritter:SetDirty()
			end

			if arg_125_1.time_ >= var_128_16 + var_128_26 and arg_125_1.time_ < var_128_16 + var_128_26 + arg_128_0 then
				arg_125_1.typewritter.percent = 1

				arg_125_1.typewritter:SetDirty()
				arg_125_1:ShowNextGo(true)
			end
		end
	end,
	Play413161031 = function(arg_129_0, arg_129_1)
		arg_129_1.time_ = 0
		arg_129_1.frameCnt_ = 0
		arg_129_1.state_ = "playing"
		arg_129_1.curTalkId_ = 413161031
		arg_129_1.duration_ = 8.23

		local var_129_0 = {
			zh = 6.466,
			ja = 8.233
		}
		local var_129_1 = manager.audio:GetLocalizationFlag()

		if var_129_0[var_129_1] ~= nil then
			arg_129_1.duration_ = var_129_0[var_129_1]
		end

		SetActive(arg_129_1.tipsGo_, false)

		function arg_129_1.onSingleLineFinish_()
			arg_129_1.onSingleLineUpdate_ = nil
			arg_129_1.onSingleLineFinish_ = nil
			arg_129_1.state_ = "waiting"
		end

		function arg_129_1.playNext_(arg_131_0)
			if arg_131_0 == 1 then
				arg_129_0:Play413161032(arg_129_1)
			end
		end

		function arg_129_1.onSingleLineUpdate_(arg_132_0)
			local var_132_0 = arg_129_1.actors_["10092"].transform
			local var_132_1 = 0

			if var_132_1 < arg_129_1.time_ and arg_129_1.time_ <= var_132_1 + arg_132_0 then
				arg_129_1.var_.moveOldPos10092 = var_132_0.localPosition
				var_132_0.localScale = Vector3.New(1, 1, 1)

				arg_129_1:CheckSpriteTmpPos("10092", 2)

				local var_132_2 = var_132_0.childCount

				for iter_132_0 = 0, var_132_2 - 1 do
					local var_132_3 = var_132_0:GetChild(iter_132_0)

					if var_132_3.name == "split_1_1" or not string.find(var_132_3.name, "split") then
						var_132_3.gameObject:SetActive(true)
					else
						var_132_3.gameObject:SetActive(false)
					end
				end
			end

			local var_132_4 = 0.001

			if var_132_1 <= arg_129_1.time_ and arg_129_1.time_ < var_132_1 + var_132_4 then
				local var_132_5 = (arg_129_1.time_ - var_132_1) / var_132_4
				local var_132_6 = Vector3.New(-389.49, -300, -295)

				var_132_0.localPosition = Vector3.Lerp(arg_129_1.var_.moveOldPos10092, var_132_6, var_132_5)
			end

			if arg_129_1.time_ >= var_132_1 + var_132_4 and arg_129_1.time_ < var_132_1 + var_132_4 + arg_132_0 then
				var_132_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_132_7 = arg_129_1.actors_["10022"]
			local var_132_8 = 0

			if var_132_8 < arg_129_1.time_ and arg_129_1.time_ <= var_132_8 + arg_132_0 and not isNil(var_132_7) and arg_129_1.var_.actorSpriteComps10022 == nil then
				arg_129_1.var_.actorSpriteComps10022 = var_132_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_132_9 = 2

			if var_132_8 <= arg_129_1.time_ and arg_129_1.time_ < var_132_8 + var_132_9 and not isNil(var_132_7) then
				local var_132_10 = (arg_129_1.time_ - var_132_8) / var_132_9

				if arg_129_1.var_.actorSpriteComps10022 then
					for iter_132_1, iter_132_2 in pairs(arg_129_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_132_2 then
							if arg_129_1.isInRecall_ then
								local var_132_11 = Mathf.Lerp(iter_132_2.color.r, arg_129_1.hightColor2.r, var_132_10)
								local var_132_12 = Mathf.Lerp(iter_132_2.color.g, arg_129_1.hightColor2.g, var_132_10)
								local var_132_13 = Mathf.Lerp(iter_132_2.color.b, arg_129_1.hightColor2.b, var_132_10)

								iter_132_2.color = Color.New(var_132_11, var_132_12, var_132_13)
							else
								local var_132_14 = Mathf.Lerp(iter_132_2.color.r, 0.5, var_132_10)

								iter_132_2.color = Color.New(var_132_14, var_132_14, var_132_14)
							end
						end
					end
				end
			end

			if arg_129_1.time_ >= var_132_8 + var_132_9 and arg_129_1.time_ < var_132_8 + var_132_9 + arg_132_0 and not isNil(var_132_7) and arg_129_1.var_.actorSpriteComps10022 then
				for iter_132_3, iter_132_4 in pairs(arg_129_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_132_4 then
						if arg_129_1.isInRecall_ then
							iter_132_4.color = arg_129_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_132_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_129_1.var_.actorSpriteComps10022 = nil
			end

			local var_132_15 = arg_129_1.actors_["10092"]
			local var_132_16 = 0

			if var_132_16 < arg_129_1.time_ and arg_129_1.time_ <= var_132_16 + arg_132_0 and not isNil(var_132_15) and arg_129_1.var_.actorSpriteComps10092 == nil then
				arg_129_1.var_.actorSpriteComps10092 = var_132_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_132_17 = 2

			if var_132_16 <= arg_129_1.time_ and arg_129_1.time_ < var_132_16 + var_132_17 and not isNil(var_132_15) then
				local var_132_18 = (arg_129_1.time_ - var_132_16) / var_132_17

				if arg_129_1.var_.actorSpriteComps10092 then
					for iter_132_5, iter_132_6 in pairs(arg_129_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_132_6 then
							if arg_129_1.isInRecall_ then
								local var_132_19 = Mathf.Lerp(iter_132_6.color.r, arg_129_1.hightColor1.r, var_132_18)
								local var_132_20 = Mathf.Lerp(iter_132_6.color.g, arg_129_1.hightColor1.g, var_132_18)
								local var_132_21 = Mathf.Lerp(iter_132_6.color.b, arg_129_1.hightColor1.b, var_132_18)

								iter_132_6.color = Color.New(var_132_19, var_132_20, var_132_21)
							else
								local var_132_22 = Mathf.Lerp(iter_132_6.color.r, 1, var_132_18)

								iter_132_6.color = Color.New(var_132_22, var_132_22, var_132_22)
							end
						end
					end
				end
			end

			if arg_129_1.time_ >= var_132_16 + var_132_17 and arg_129_1.time_ < var_132_16 + var_132_17 + arg_132_0 and not isNil(var_132_15) and arg_129_1.var_.actorSpriteComps10092 then
				for iter_132_7, iter_132_8 in pairs(arg_129_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_132_8 then
						if arg_129_1.isInRecall_ then
							iter_132_8.color = arg_129_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_132_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_129_1.var_.actorSpriteComps10092 = nil
			end

			local var_132_23 = 0
			local var_132_24 = 0.775

			if var_132_23 < arg_129_1.time_ and arg_129_1.time_ <= var_132_23 + arg_132_0 then
				arg_129_1.talkMaxDuration = 0
				arg_129_1.dialogCg_.alpha = 1

				arg_129_1.dialog_:SetActive(true)
				SetActive(arg_129_1.leftNameGo_, true)

				local var_132_25 = arg_129_1:FormatText(StoryNameCfg[996].name)

				arg_129_1.leftNameTxt_.text = var_132_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_129_1.leftNameTxt_.transform)

				arg_129_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_129_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_129_1:RecordName(arg_129_1.leftNameTxt_.text)
				SetActive(arg_129_1.iconTrs_.gameObject, false)
				arg_129_1.callingController_:SetSelectedState("normal")

				local var_132_26 = arg_129_1:GetWordFromCfg(413161031)
				local var_132_27 = arg_129_1:FormatText(var_132_26.content)

				arg_129_1.text_.text = var_132_27

				LuaForUtil.ClearLinePrefixSymbol(arg_129_1.text_)

				local var_132_28 = 31
				local var_132_29 = utf8.len(var_132_27)
				local var_132_30 = var_132_28 <= 0 and var_132_24 or var_132_24 * (var_132_29 / var_132_28)

				if var_132_30 > 0 and var_132_24 < var_132_30 then
					arg_129_1.talkMaxDuration = var_132_30

					if var_132_30 + var_132_23 > arg_129_1.duration_ then
						arg_129_1.duration_ = var_132_30 + var_132_23
					end
				end

				arg_129_1.text_.text = var_132_27
				arg_129_1.typewritter.percent = 0

				arg_129_1.typewritter:SetDirty()
				arg_129_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161031", "story_v_out_413161.awb") ~= 0 then
					local var_132_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161031", "story_v_out_413161.awb") / 1000

					if var_132_31 + var_132_23 > arg_129_1.duration_ then
						arg_129_1.duration_ = var_132_31 + var_132_23
					end

					if var_132_26.prefab_name ~= "" and arg_129_1.actors_[var_132_26.prefab_name] ~= nil then
						local var_132_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_129_1.actors_[var_132_26.prefab_name].transform, "story_v_out_413161", "413161031", "story_v_out_413161.awb")

						arg_129_1:RecordAudio("413161031", var_132_32)
						arg_129_1:RecordAudio("413161031", var_132_32)
					else
						arg_129_1:AudioAction("play", "voice", "story_v_out_413161", "413161031", "story_v_out_413161.awb")
					end

					arg_129_1:RecordHistoryTalkVoice("story_v_out_413161", "413161031", "story_v_out_413161.awb")
				end

				arg_129_1:RecordContent(arg_129_1.text_.text)
			end

			local var_132_33 = math.max(var_132_24, arg_129_1.talkMaxDuration)

			if var_132_23 <= arg_129_1.time_ and arg_129_1.time_ < var_132_23 + var_132_33 then
				arg_129_1.typewritter.percent = (arg_129_1.time_ - var_132_23) / var_132_33

				arg_129_1.typewritter:SetDirty()
			end

			if arg_129_1.time_ >= var_132_23 + var_132_33 and arg_129_1.time_ < var_132_23 + var_132_33 + arg_132_0 then
				arg_129_1.typewritter.percent = 1

				arg_129_1.typewritter:SetDirty()
				arg_129_1:ShowNextGo(true)
			end
		end
	end,
	Play413161032 = function(arg_133_0, arg_133_1)
		arg_133_1.time_ = 0
		arg_133_1.frameCnt_ = 0
		arg_133_1.state_ = "playing"
		arg_133_1.curTalkId_ = 413161032
		arg_133_1.duration_ = 6.27

		local var_133_0 = {
			zh = 5.033,
			ja = 6.266
		}
		local var_133_1 = manager.audio:GetLocalizationFlag()

		if var_133_0[var_133_1] ~= nil then
			arg_133_1.duration_ = var_133_0[var_133_1]
		end

		SetActive(arg_133_1.tipsGo_, false)

		function arg_133_1.onSingleLineFinish_()
			arg_133_1.onSingleLineUpdate_ = nil
			arg_133_1.onSingleLineFinish_ = nil
			arg_133_1.state_ = "waiting"
		end

		function arg_133_1.playNext_(arg_135_0)
			if arg_135_0 == 1 then
				arg_133_0:Play413161033(arg_133_1)
			end
		end

		function arg_133_1.onSingleLineUpdate_(arg_136_0)
			local var_136_0 = arg_133_1.actors_["10092"]
			local var_136_1 = 0

			if var_136_1 < arg_133_1.time_ and arg_133_1.time_ <= var_136_1 + arg_136_0 and not isNil(var_136_0) and arg_133_1.var_.actorSpriteComps10092 == nil then
				arg_133_1.var_.actorSpriteComps10092 = var_136_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_136_2 = 2

			if var_136_1 <= arg_133_1.time_ and arg_133_1.time_ < var_136_1 + var_136_2 and not isNil(var_136_0) then
				local var_136_3 = (arg_133_1.time_ - var_136_1) / var_136_2

				if arg_133_1.var_.actorSpriteComps10092 then
					for iter_136_0, iter_136_1 in pairs(arg_133_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_136_1 then
							if arg_133_1.isInRecall_ then
								local var_136_4 = Mathf.Lerp(iter_136_1.color.r, arg_133_1.hightColor2.r, var_136_3)
								local var_136_5 = Mathf.Lerp(iter_136_1.color.g, arg_133_1.hightColor2.g, var_136_3)
								local var_136_6 = Mathf.Lerp(iter_136_1.color.b, arg_133_1.hightColor2.b, var_136_3)

								iter_136_1.color = Color.New(var_136_4, var_136_5, var_136_6)
							else
								local var_136_7 = Mathf.Lerp(iter_136_1.color.r, 0.5, var_136_3)

								iter_136_1.color = Color.New(var_136_7, var_136_7, var_136_7)
							end
						end
					end
				end
			end

			if arg_133_1.time_ >= var_136_1 + var_136_2 and arg_133_1.time_ < var_136_1 + var_136_2 + arg_136_0 and not isNil(var_136_0) and arg_133_1.var_.actorSpriteComps10092 then
				for iter_136_2, iter_136_3 in pairs(arg_133_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_136_3 then
						if arg_133_1.isInRecall_ then
							iter_136_3.color = arg_133_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_136_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_133_1.var_.actorSpriteComps10092 = nil
			end

			local var_136_8 = arg_133_1.actors_["10022"]
			local var_136_9 = 0

			if var_136_9 < arg_133_1.time_ and arg_133_1.time_ <= var_136_9 + arg_136_0 and not isNil(var_136_8) and arg_133_1.var_.actorSpriteComps10022 == nil then
				arg_133_1.var_.actorSpriteComps10022 = var_136_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_136_10 = 2

			if var_136_9 <= arg_133_1.time_ and arg_133_1.time_ < var_136_9 + var_136_10 and not isNil(var_136_8) then
				local var_136_11 = (arg_133_1.time_ - var_136_9) / var_136_10

				if arg_133_1.var_.actorSpriteComps10022 then
					for iter_136_4, iter_136_5 in pairs(arg_133_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_136_5 then
							if arg_133_1.isInRecall_ then
								local var_136_12 = Mathf.Lerp(iter_136_5.color.r, arg_133_1.hightColor1.r, var_136_11)
								local var_136_13 = Mathf.Lerp(iter_136_5.color.g, arg_133_1.hightColor1.g, var_136_11)
								local var_136_14 = Mathf.Lerp(iter_136_5.color.b, arg_133_1.hightColor1.b, var_136_11)

								iter_136_5.color = Color.New(var_136_12, var_136_13, var_136_14)
							else
								local var_136_15 = Mathf.Lerp(iter_136_5.color.r, 1, var_136_11)

								iter_136_5.color = Color.New(var_136_15, var_136_15, var_136_15)
							end
						end
					end
				end
			end

			if arg_133_1.time_ >= var_136_9 + var_136_10 and arg_133_1.time_ < var_136_9 + var_136_10 + arg_136_0 and not isNil(var_136_8) and arg_133_1.var_.actorSpriteComps10022 then
				for iter_136_6, iter_136_7 in pairs(arg_133_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_136_7 then
						if arg_133_1.isInRecall_ then
							iter_136_7.color = arg_133_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_136_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_133_1.var_.actorSpriteComps10022 = nil
			end

			local var_136_16 = 0
			local var_136_17 = 0.6

			if var_136_16 < arg_133_1.time_ and arg_133_1.time_ <= var_136_16 + arg_136_0 then
				arg_133_1.talkMaxDuration = 0
				arg_133_1.dialogCg_.alpha = 1

				arg_133_1.dialog_:SetActive(true)
				SetActive(arg_133_1.leftNameGo_, true)

				local var_136_18 = arg_133_1:FormatText(StoryNameCfg[614].name)

				arg_133_1.leftNameTxt_.text = var_136_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_133_1.leftNameTxt_.transform)

				arg_133_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_133_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_133_1:RecordName(arg_133_1.leftNameTxt_.text)
				SetActive(arg_133_1.iconTrs_.gameObject, false)
				arg_133_1.callingController_:SetSelectedState("normal")

				local var_136_19 = arg_133_1:GetWordFromCfg(413161032)
				local var_136_20 = arg_133_1:FormatText(var_136_19.content)

				arg_133_1.text_.text = var_136_20

				LuaForUtil.ClearLinePrefixSymbol(arg_133_1.text_)

				local var_136_21 = 24
				local var_136_22 = utf8.len(var_136_20)
				local var_136_23 = var_136_21 <= 0 and var_136_17 or var_136_17 * (var_136_22 / var_136_21)

				if var_136_23 > 0 and var_136_17 < var_136_23 then
					arg_133_1.talkMaxDuration = var_136_23

					if var_136_23 + var_136_16 > arg_133_1.duration_ then
						arg_133_1.duration_ = var_136_23 + var_136_16
					end
				end

				arg_133_1.text_.text = var_136_20
				arg_133_1.typewritter.percent = 0

				arg_133_1.typewritter:SetDirty()
				arg_133_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161032", "story_v_out_413161.awb") ~= 0 then
					local var_136_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161032", "story_v_out_413161.awb") / 1000

					if var_136_24 + var_136_16 > arg_133_1.duration_ then
						arg_133_1.duration_ = var_136_24 + var_136_16
					end

					if var_136_19.prefab_name ~= "" and arg_133_1.actors_[var_136_19.prefab_name] ~= nil then
						local var_136_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_133_1.actors_[var_136_19.prefab_name].transform, "story_v_out_413161", "413161032", "story_v_out_413161.awb")

						arg_133_1:RecordAudio("413161032", var_136_25)
						arg_133_1:RecordAudio("413161032", var_136_25)
					else
						arg_133_1:AudioAction("play", "voice", "story_v_out_413161", "413161032", "story_v_out_413161.awb")
					end

					arg_133_1:RecordHistoryTalkVoice("story_v_out_413161", "413161032", "story_v_out_413161.awb")
				end

				arg_133_1:RecordContent(arg_133_1.text_.text)
			end

			local var_136_26 = math.max(var_136_17, arg_133_1.talkMaxDuration)

			if var_136_16 <= arg_133_1.time_ and arg_133_1.time_ < var_136_16 + var_136_26 then
				arg_133_1.typewritter.percent = (arg_133_1.time_ - var_136_16) / var_136_26

				arg_133_1.typewritter:SetDirty()
			end

			if arg_133_1.time_ >= var_136_16 + var_136_26 and arg_133_1.time_ < var_136_16 + var_136_26 + arg_136_0 then
				arg_133_1.typewritter.percent = 1

				arg_133_1.typewritter:SetDirty()
				arg_133_1:ShowNextGo(true)
			end
		end
	end,
	Play413161033 = function(arg_137_0, arg_137_1)
		arg_137_1.time_ = 0
		arg_137_1.frameCnt_ = 0
		arg_137_1.state_ = "playing"
		arg_137_1.curTalkId_ = 413161033
		arg_137_1.duration_ = 7.63

		local var_137_0 = {
			zh = 7,
			ja = 7.633
		}
		local var_137_1 = manager.audio:GetLocalizationFlag()

		if var_137_0[var_137_1] ~= nil then
			arg_137_1.duration_ = var_137_0[var_137_1]
		end

		SetActive(arg_137_1.tipsGo_, false)

		function arg_137_1.onSingleLineFinish_()
			arg_137_1.onSingleLineUpdate_ = nil
			arg_137_1.onSingleLineFinish_ = nil
			arg_137_1.state_ = "waiting"
		end

		function arg_137_1.playNext_(arg_139_0)
			if arg_139_0 == 1 then
				arg_137_0:Play413161034(arg_137_1)
			end
		end

		function arg_137_1.onSingleLineUpdate_(arg_140_0)
			local var_140_0 = arg_137_1.actors_["10092"].transform
			local var_140_1 = 0

			if var_140_1 < arg_137_1.time_ and arg_137_1.time_ <= var_140_1 + arg_140_0 then
				arg_137_1.var_.moveOldPos10092 = var_140_0.localPosition
				var_140_0.localScale = Vector3.New(1, 1, 1)

				arg_137_1:CheckSpriteTmpPos("10092", 2)

				local var_140_2 = var_140_0.childCount

				for iter_140_0 = 0, var_140_2 - 1 do
					local var_140_3 = var_140_0:GetChild(iter_140_0)

					if var_140_3.name == "split_1_1" or not string.find(var_140_3.name, "split") then
						var_140_3.gameObject:SetActive(true)
					else
						var_140_3.gameObject:SetActive(false)
					end
				end
			end

			local var_140_4 = 0.001

			if var_140_1 <= arg_137_1.time_ and arg_137_1.time_ < var_140_1 + var_140_4 then
				local var_140_5 = (arg_137_1.time_ - var_140_1) / var_140_4
				local var_140_6 = Vector3.New(-389.49, -300, -295)

				var_140_0.localPosition = Vector3.Lerp(arg_137_1.var_.moveOldPos10092, var_140_6, var_140_5)
			end

			if arg_137_1.time_ >= var_140_1 + var_140_4 and arg_137_1.time_ < var_140_1 + var_140_4 + arg_140_0 then
				var_140_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_140_7 = arg_137_1.actors_["10022"]
			local var_140_8 = 0

			if var_140_8 < arg_137_1.time_ and arg_137_1.time_ <= var_140_8 + arg_140_0 and not isNil(var_140_7) and arg_137_1.var_.actorSpriteComps10022 == nil then
				arg_137_1.var_.actorSpriteComps10022 = var_140_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_140_9 = 2

			if var_140_8 <= arg_137_1.time_ and arg_137_1.time_ < var_140_8 + var_140_9 and not isNil(var_140_7) then
				local var_140_10 = (arg_137_1.time_ - var_140_8) / var_140_9

				if arg_137_1.var_.actorSpriteComps10022 then
					for iter_140_1, iter_140_2 in pairs(arg_137_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_140_2 then
							if arg_137_1.isInRecall_ then
								local var_140_11 = Mathf.Lerp(iter_140_2.color.r, arg_137_1.hightColor2.r, var_140_10)
								local var_140_12 = Mathf.Lerp(iter_140_2.color.g, arg_137_1.hightColor2.g, var_140_10)
								local var_140_13 = Mathf.Lerp(iter_140_2.color.b, arg_137_1.hightColor2.b, var_140_10)

								iter_140_2.color = Color.New(var_140_11, var_140_12, var_140_13)
							else
								local var_140_14 = Mathf.Lerp(iter_140_2.color.r, 0.5, var_140_10)

								iter_140_2.color = Color.New(var_140_14, var_140_14, var_140_14)
							end
						end
					end
				end
			end

			if arg_137_1.time_ >= var_140_8 + var_140_9 and arg_137_1.time_ < var_140_8 + var_140_9 + arg_140_0 and not isNil(var_140_7) and arg_137_1.var_.actorSpriteComps10022 then
				for iter_140_3, iter_140_4 in pairs(arg_137_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_140_4 then
						if arg_137_1.isInRecall_ then
							iter_140_4.color = arg_137_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_140_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_137_1.var_.actorSpriteComps10022 = nil
			end

			local var_140_15 = arg_137_1.actors_["10092"]
			local var_140_16 = 0

			if var_140_16 < arg_137_1.time_ and arg_137_1.time_ <= var_140_16 + arg_140_0 and not isNil(var_140_15) and arg_137_1.var_.actorSpriteComps10092 == nil then
				arg_137_1.var_.actorSpriteComps10092 = var_140_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_140_17 = 2

			if var_140_16 <= arg_137_1.time_ and arg_137_1.time_ < var_140_16 + var_140_17 and not isNil(var_140_15) then
				local var_140_18 = (arg_137_1.time_ - var_140_16) / var_140_17

				if arg_137_1.var_.actorSpriteComps10092 then
					for iter_140_5, iter_140_6 in pairs(arg_137_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_140_6 then
							if arg_137_1.isInRecall_ then
								local var_140_19 = Mathf.Lerp(iter_140_6.color.r, arg_137_1.hightColor1.r, var_140_18)
								local var_140_20 = Mathf.Lerp(iter_140_6.color.g, arg_137_1.hightColor1.g, var_140_18)
								local var_140_21 = Mathf.Lerp(iter_140_6.color.b, arg_137_1.hightColor1.b, var_140_18)

								iter_140_6.color = Color.New(var_140_19, var_140_20, var_140_21)
							else
								local var_140_22 = Mathf.Lerp(iter_140_6.color.r, 1, var_140_18)

								iter_140_6.color = Color.New(var_140_22, var_140_22, var_140_22)
							end
						end
					end
				end
			end

			if arg_137_1.time_ >= var_140_16 + var_140_17 and arg_137_1.time_ < var_140_16 + var_140_17 + arg_140_0 and not isNil(var_140_15) and arg_137_1.var_.actorSpriteComps10092 then
				for iter_140_7, iter_140_8 in pairs(arg_137_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_140_8 then
						if arg_137_1.isInRecall_ then
							iter_140_8.color = arg_137_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_140_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_137_1.var_.actorSpriteComps10092 = nil
			end

			local var_140_23 = 0
			local var_140_24 = 0.65

			if var_140_23 < arg_137_1.time_ and arg_137_1.time_ <= var_140_23 + arg_140_0 then
				arg_137_1.talkMaxDuration = 0
				arg_137_1.dialogCg_.alpha = 1

				arg_137_1.dialog_:SetActive(true)
				SetActive(arg_137_1.leftNameGo_, true)

				local var_140_25 = arg_137_1:FormatText(StoryNameCfg[996].name)

				arg_137_1.leftNameTxt_.text = var_140_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_137_1.leftNameTxt_.transform)

				arg_137_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_137_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_137_1:RecordName(arg_137_1.leftNameTxt_.text)
				SetActive(arg_137_1.iconTrs_.gameObject, false)
				arg_137_1.callingController_:SetSelectedState("normal")

				local var_140_26 = arg_137_1:GetWordFromCfg(413161033)
				local var_140_27 = arg_137_1:FormatText(var_140_26.content)

				arg_137_1.text_.text = var_140_27

				LuaForUtil.ClearLinePrefixSymbol(arg_137_1.text_)

				local var_140_28 = 26
				local var_140_29 = utf8.len(var_140_27)
				local var_140_30 = var_140_28 <= 0 and var_140_24 or var_140_24 * (var_140_29 / var_140_28)

				if var_140_30 > 0 and var_140_24 < var_140_30 then
					arg_137_1.talkMaxDuration = var_140_30

					if var_140_30 + var_140_23 > arg_137_1.duration_ then
						arg_137_1.duration_ = var_140_30 + var_140_23
					end
				end

				arg_137_1.text_.text = var_140_27
				arg_137_1.typewritter.percent = 0

				arg_137_1.typewritter:SetDirty()
				arg_137_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161033", "story_v_out_413161.awb") ~= 0 then
					local var_140_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161033", "story_v_out_413161.awb") / 1000

					if var_140_31 + var_140_23 > arg_137_1.duration_ then
						arg_137_1.duration_ = var_140_31 + var_140_23
					end

					if var_140_26.prefab_name ~= "" and arg_137_1.actors_[var_140_26.prefab_name] ~= nil then
						local var_140_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_137_1.actors_[var_140_26.prefab_name].transform, "story_v_out_413161", "413161033", "story_v_out_413161.awb")

						arg_137_1:RecordAudio("413161033", var_140_32)
						arg_137_1:RecordAudio("413161033", var_140_32)
					else
						arg_137_1:AudioAction("play", "voice", "story_v_out_413161", "413161033", "story_v_out_413161.awb")
					end

					arg_137_1:RecordHistoryTalkVoice("story_v_out_413161", "413161033", "story_v_out_413161.awb")
				end

				arg_137_1:RecordContent(arg_137_1.text_.text)
			end

			local var_140_33 = math.max(var_140_24, arg_137_1.talkMaxDuration)

			if var_140_23 <= arg_137_1.time_ and arg_137_1.time_ < var_140_23 + var_140_33 then
				arg_137_1.typewritter.percent = (arg_137_1.time_ - var_140_23) / var_140_33

				arg_137_1.typewritter:SetDirty()
			end

			if arg_137_1.time_ >= var_140_23 + var_140_33 and arg_137_1.time_ < var_140_23 + var_140_33 + arg_140_0 then
				arg_137_1.typewritter.percent = 1

				arg_137_1.typewritter:SetDirty()
				arg_137_1:ShowNextGo(true)
			end
		end
	end,
	Play413161034 = function(arg_141_0, arg_141_1)
		arg_141_1.time_ = 0
		arg_141_1.frameCnt_ = 0
		arg_141_1.state_ = "playing"
		arg_141_1.curTalkId_ = 413161034
		arg_141_1.duration_ = 6.63

		local var_141_0 = {
			zh = 5.5,
			ja = 6.633
		}
		local var_141_1 = manager.audio:GetLocalizationFlag()

		if var_141_0[var_141_1] ~= nil then
			arg_141_1.duration_ = var_141_0[var_141_1]
		end

		SetActive(arg_141_1.tipsGo_, false)

		function arg_141_1.onSingleLineFinish_()
			arg_141_1.onSingleLineUpdate_ = nil
			arg_141_1.onSingleLineFinish_ = nil
			arg_141_1.state_ = "waiting"
		end

		function arg_141_1.playNext_(arg_143_0)
			if arg_143_0 == 1 then
				arg_141_0:Play413161035(arg_141_1)
			end
		end

		function arg_141_1.onSingleLineUpdate_(arg_144_0)
			local var_144_0 = arg_141_1.actors_["10022"].transform
			local var_144_1 = 0

			if var_144_1 < arg_141_1.time_ and arg_141_1.time_ <= var_144_1 + arg_144_0 then
				arg_141_1.var_.moveOldPos10022 = var_144_0.localPosition
				var_144_0.localScale = Vector3.New(1, 1, 1)

				arg_141_1:CheckSpriteTmpPos("10022", 4)

				local var_144_2 = var_144_0.childCount

				for iter_144_0 = 0, var_144_2 - 1 do
					local var_144_3 = var_144_0:GetChild(iter_144_0)

					if var_144_3.name == "split_3" or not string.find(var_144_3.name, "split") then
						var_144_3.gameObject:SetActive(true)
					else
						var_144_3.gameObject:SetActive(false)
					end
				end
			end

			local var_144_4 = 0.001

			if var_144_1 <= arg_141_1.time_ and arg_141_1.time_ < var_144_1 + var_144_4 then
				local var_144_5 = (arg_141_1.time_ - var_144_1) / var_144_4
				local var_144_6 = Vector3.New(390, -315, -320)

				var_144_0.localPosition = Vector3.Lerp(arg_141_1.var_.moveOldPos10022, var_144_6, var_144_5)
			end

			if arg_141_1.time_ >= var_144_1 + var_144_4 and arg_141_1.time_ < var_144_1 + var_144_4 + arg_144_0 then
				var_144_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_144_7 = arg_141_1.actors_["10092"]
			local var_144_8 = 0

			if var_144_8 < arg_141_1.time_ and arg_141_1.time_ <= var_144_8 + arg_144_0 and not isNil(var_144_7) and arg_141_1.var_.actorSpriteComps10092 == nil then
				arg_141_1.var_.actorSpriteComps10092 = var_144_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_144_9 = 2

			if var_144_8 <= arg_141_1.time_ and arg_141_1.time_ < var_144_8 + var_144_9 and not isNil(var_144_7) then
				local var_144_10 = (arg_141_1.time_ - var_144_8) / var_144_9

				if arg_141_1.var_.actorSpriteComps10092 then
					for iter_144_1, iter_144_2 in pairs(arg_141_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_144_2 then
							if arg_141_1.isInRecall_ then
								local var_144_11 = Mathf.Lerp(iter_144_2.color.r, arg_141_1.hightColor2.r, var_144_10)
								local var_144_12 = Mathf.Lerp(iter_144_2.color.g, arg_141_1.hightColor2.g, var_144_10)
								local var_144_13 = Mathf.Lerp(iter_144_2.color.b, arg_141_1.hightColor2.b, var_144_10)

								iter_144_2.color = Color.New(var_144_11, var_144_12, var_144_13)
							else
								local var_144_14 = Mathf.Lerp(iter_144_2.color.r, 0.5, var_144_10)

								iter_144_2.color = Color.New(var_144_14, var_144_14, var_144_14)
							end
						end
					end
				end
			end

			if arg_141_1.time_ >= var_144_8 + var_144_9 and arg_141_1.time_ < var_144_8 + var_144_9 + arg_144_0 and not isNil(var_144_7) and arg_141_1.var_.actorSpriteComps10092 then
				for iter_144_3, iter_144_4 in pairs(arg_141_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_144_4 then
						if arg_141_1.isInRecall_ then
							iter_144_4.color = arg_141_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_144_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_141_1.var_.actorSpriteComps10092 = nil
			end

			local var_144_15 = arg_141_1.actors_["10022"]
			local var_144_16 = 0

			if var_144_16 < arg_141_1.time_ and arg_141_1.time_ <= var_144_16 + arg_144_0 and not isNil(var_144_15) and arg_141_1.var_.actorSpriteComps10022 == nil then
				arg_141_1.var_.actorSpriteComps10022 = var_144_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_144_17 = 2

			if var_144_16 <= arg_141_1.time_ and arg_141_1.time_ < var_144_16 + var_144_17 and not isNil(var_144_15) then
				local var_144_18 = (arg_141_1.time_ - var_144_16) / var_144_17

				if arg_141_1.var_.actorSpriteComps10022 then
					for iter_144_5, iter_144_6 in pairs(arg_141_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_144_6 then
							if arg_141_1.isInRecall_ then
								local var_144_19 = Mathf.Lerp(iter_144_6.color.r, arg_141_1.hightColor1.r, var_144_18)
								local var_144_20 = Mathf.Lerp(iter_144_6.color.g, arg_141_1.hightColor1.g, var_144_18)
								local var_144_21 = Mathf.Lerp(iter_144_6.color.b, arg_141_1.hightColor1.b, var_144_18)

								iter_144_6.color = Color.New(var_144_19, var_144_20, var_144_21)
							else
								local var_144_22 = Mathf.Lerp(iter_144_6.color.r, 1, var_144_18)

								iter_144_6.color = Color.New(var_144_22, var_144_22, var_144_22)
							end
						end
					end
				end
			end

			if arg_141_1.time_ >= var_144_16 + var_144_17 and arg_141_1.time_ < var_144_16 + var_144_17 + arg_144_0 and not isNil(var_144_15) and arg_141_1.var_.actorSpriteComps10022 then
				for iter_144_7, iter_144_8 in pairs(arg_141_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_144_8 then
						if arg_141_1.isInRecall_ then
							iter_144_8.color = arg_141_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_144_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_141_1.var_.actorSpriteComps10022 = nil
			end

			local var_144_23 = 0
			local var_144_24 = 0.725

			if var_144_23 < arg_141_1.time_ and arg_141_1.time_ <= var_144_23 + arg_144_0 then
				arg_141_1.talkMaxDuration = 0
				arg_141_1.dialogCg_.alpha = 1

				arg_141_1.dialog_:SetActive(true)
				SetActive(arg_141_1.leftNameGo_, true)

				local var_144_25 = arg_141_1:FormatText(StoryNameCfg[614].name)

				arg_141_1.leftNameTxt_.text = var_144_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_141_1.leftNameTxt_.transform)

				arg_141_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_141_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_141_1:RecordName(arg_141_1.leftNameTxt_.text)
				SetActive(arg_141_1.iconTrs_.gameObject, false)
				arg_141_1.callingController_:SetSelectedState("normal")

				local var_144_26 = arg_141_1:GetWordFromCfg(413161034)
				local var_144_27 = arg_141_1:FormatText(var_144_26.content)

				arg_141_1.text_.text = var_144_27

				LuaForUtil.ClearLinePrefixSymbol(arg_141_1.text_)

				local var_144_28 = 29
				local var_144_29 = utf8.len(var_144_27)
				local var_144_30 = var_144_28 <= 0 and var_144_24 or var_144_24 * (var_144_29 / var_144_28)

				if var_144_30 > 0 and var_144_24 < var_144_30 then
					arg_141_1.talkMaxDuration = var_144_30

					if var_144_30 + var_144_23 > arg_141_1.duration_ then
						arg_141_1.duration_ = var_144_30 + var_144_23
					end
				end

				arg_141_1.text_.text = var_144_27
				arg_141_1.typewritter.percent = 0

				arg_141_1.typewritter:SetDirty()
				arg_141_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161034", "story_v_out_413161.awb") ~= 0 then
					local var_144_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161034", "story_v_out_413161.awb") / 1000

					if var_144_31 + var_144_23 > arg_141_1.duration_ then
						arg_141_1.duration_ = var_144_31 + var_144_23
					end

					if var_144_26.prefab_name ~= "" and arg_141_1.actors_[var_144_26.prefab_name] ~= nil then
						local var_144_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_141_1.actors_[var_144_26.prefab_name].transform, "story_v_out_413161", "413161034", "story_v_out_413161.awb")

						arg_141_1:RecordAudio("413161034", var_144_32)
						arg_141_1:RecordAudio("413161034", var_144_32)
					else
						arg_141_1:AudioAction("play", "voice", "story_v_out_413161", "413161034", "story_v_out_413161.awb")
					end

					arg_141_1:RecordHistoryTalkVoice("story_v_out_413161", "413161034", "story_v_out_413161.awb")
				end

				arg_141_1:RecordContent(arg_141_1.text_.text)
			end

			local var_144_33 = math.max(var_144_24, arg_141_1.talkMaxDuration)

			if var_144_23 <= arg_141_1.time_ and arg_141_1.time_ < var_144_23 + var_144_33 then
				arg_141_1.typewritter.percent = (arg_141_1.time_ - var_144_23) / var_144_33

				arg_141_1.typewritter:SetDirty()
			end

			if arg_141_1.time_ >= var_144_23 + var_144_33 and arg_141_1.time_ < var_144_23 + var_144_33 + arg_144_0 then
				arg_141_1.typewritter.percent = 1

				arg_141_1.typewritter:SetDirty()
				arg_141_1:ShowNextGo(true)
			end
		end
	end,
	Play413161035 = function(arg_145_0, arg_145_1)
		arg_145_1.time_ = 0
		arg_145_1.frameCnt_ = 0
		arg_145_1.state_ = "playing"
		arg_145_1.curTalkId_ = 413161035
		arg_145_1.duration_ = 10.07

		local var_145_0 = {
			zh = 6,
			ja = 10.066
		}
		local var_145_1 = manager.audio:GetLocalizationFlag()

		if var_145_0[var_145_1] ~= nil then
			arg_145_1.duration_ = var_145_0[var_145_1]
		end

		SetActive(arg_145_1.tipsGo_, false)

		function arg_145_1.onSingleLineFinish_()
			arg_145_1.onSingleLineUpdate_ = nil
			arg_145_1.onSingleLineFinish_ = nil
			arg_145_1.state_ = "waiting"
		end

		function arg_145_1.playNext_(arg_147_0)
			if arg_147_0 == 1 then
				arg_145_0:Play413161036(arg_145_1)
			end
		end

		function arg_145_1.onSingleLineUpdate_(arg_148_0)
			local var_148_0 = arg_145_1.actors_["10022"]
			local var_148_1 = 0

			if var_148_1 < arg_145_1.time_ and arg_145_1.time_ <= var_148_1 + arg_148_0 and not isNil(var_148_0) and arg_145_1.var_.actorSpriteComps10022 == nil then
				arg_145_1.var_.actorSpriteComps10022 = var_148_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_148_2 = 2

			if var_148_1 <= arg_145_1.time_ and arg_145_1.time_ < var_148_1 + var_148_2 and not isNil(var_148_0) then
				local var_148_3 = (arg_145_1.time_ - var_148_1) / var_148_2

				if arg_145_1.var_.actorSpriteComps10022 then
					for iter_148_0, iter_148_1 in pairs(arg_145_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_148_1 then
							if arg_145_1.isInRecall_ then
								local var_148_4 = Mathf.Lerp(iter_148_1.color.r, arg_145_1.hightColor2.r, var_148_3)
								local var_148_5 = Mathf.Lerp(iter_148_1.color.g, arg_145_1.hightColor2.g, var_148_3)
								local var_148_6 = Mathf.Lerp(iter_148_1.color.b, arg_145_1.hightColor2.b, var_148_3)

								iter_148_1.color = Color.New(var_148_4, var_148_5, var_148_6)
							else
								local var_148_7 = Mathf.Lerp(iter_148_1.color.r, 0.5, var_148_3)

								iter_148_1.color = Color.New(var_148_7, var_148_7, var_148_7)
							end
						end
					end
				end
			end

			if arg_145_1.time_ >= var_148_1 + var_148_2 and arg_145_1.time_ < var_148_1 + var_148_2 + arg_148_0 and not isNil(var_148_0) and arg_145_1.var_.actorSpriteComps10022 then
				for iter_148_2, iter_148_3 in pairs(arg_145_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_148_3 then
						if arg_145_1.isInRecall_ then
							iter_148_3.color = arg_145_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_148_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_145_1.var_.actorSpriteComps10022 = nil
			end

			local var_148_8 = arg_145_1.actors_["10092"]
			local var_148_9 = 0

			if var_148_9 < arg_145_1.time_ and arg_145_1.time_ <= var_148_9 + arg_148_0 and not isNil(var_148_8) and arg_145_1.var_.actorSpriteComps10092 == nil then
				arg_145_1.var_.actorSpriteComps10092 = var_148_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_148_10 = 2

			if var_148_9 <= arg_145_1.time_ and arg_145_1.time_ < var_148_9 + var_148_10 and not isNil(var_148_8) then
				local var_148_11 = (arg_145_1.time_ - var_148_9) / var_148_10

				if arg_145_1.var_.actorSpriteComps10092 then
					for iter_148_4, iter_148_5 in pairs(arg_145_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_148_5 then
							if arg_145_1.isInRecall_ then
								local var_148_12 = Mathf.Lerp(iter_148_5.color.r, arg_145_1.hightColor1.r, var_148_11)
								local var_148_13 = Mathf.Lerp(iter_148_5.color.g, arg_145_1.hightColor1.g, var_148_11)
								local var_148_14 = Mathf.Lerp(iter_148_5.color.b, arg_145_1.hightColor1.b, var_148_11)

								iter_148_5.color = Color.New(var_148_12, var_148_13, var_148_14)
							else
								local var_148_15 = Mathf.Lerp(iter_148_5.color.r, 1, var_148_11)

								iter_148_5.color = Color.New(var_148_15, var_148_15, var_148_15)
							end
						end
					end
				end
			end

			if arg_145_1.time_ >= var_148_9 + var_148_10 and arg_145_1.time_ < var_148_9 + var_148_10 + arg_148_0 and not isNil(var_148_8) and arg_145_1.var_.actorSpriteComps10092 then
				for iter_148_6, iter_148_7 in pairs(arg_145_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_148_7 then
						if arg_145_1.isInRecall_ then
							iter_148_7.color = arg_145_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_148_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_145_1.var_.actorSpriteComps10092 = nil
			end

			local var_148_16 = 0
			local var_148_17 = 0.65

			if var_148_16 < arg_145_1.time_ and arg_145_1.time_ <= var_148_16 + arg_148_0 then
				arg_145_1.talkMaxDuration = 0
				arg_145_1.dialogCg_.alpha = 1

				arg_145_1.dialog_:SetActive(true)
				SetActive(arg_145_1.leftNameGo_, true)

				local var_148_18 = arg_145_1:FormatText(StoryNameCfg[996].name)

				arg_145_1.leftNameTxt_.text = var_148_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_145_1.leftNameTxt_.transform)

				arg_145_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_145_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_145_1:RecordName(arg_145_1.leftNameTxt_.text)
				SetActive(arg_145_1.iconTrs_.gameObject, false)
				arg_145_1.callingController_:SetSelectedState("normal")

				local var_148_19 = arg_145_1:GetWordFromCfg(413161035)
				local var_148_20 = arg_145_1:FormatText(var_148_19.content)

				arg_145_1.text_.text = var_148_20

				LuaForUtil.ClearLinePrefixSymbol(arg_145_1.text_)

				local var_148_21 = 26
				local var_148_22 = utf8.len(var_148_20)
				local var_148_23 = var_148_21 <= 0 and var_148_17 or var_148_17 * (var_148_22 / var_148_21)

				if var_148_23 > 0 and var_148_17 < var_148_23 then
					arg_145_1.talkMaxDuration = var_148_23

					if var_148_23 + var_148_16 > arg_145_1.duration_ then
						arg_145_1.duration_ = var_148_23 + var_148_16
					end
				end

				arg_145_1.text_.text = var_148_20
				arg_145_1.typewritter.percent = 0

				arg_145_1.typewritter:SetDirty()
				arg_145_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161035", "story_v_out_413161.awb") ~= 0 then
					local var_148_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161035", "story_v_out_413161.awb") / 1000

					if var_148_24 + var_148_16 > arg_145_1.duration_ then
						arg_145_1.duration_ = var_148_24 + var_148_16
					end

					if var_148_19.prefab_name ~= "" and arg_145_1.actors_[var_148_19.prefab_name] ~= nil then
						local var_148_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_145_1.actors_[var_148_19.prefab_name].transform, "story_v_out_413161", "413161035", "story_v_out_413161.awb")

						arg_145_1:RecordAudio("413161035", var_148_25)
						arg_145_1:RecordAudio("413161035", var_148_25)
					else
						arg_145_1:AudioAction("play", "voice", "story_v_out_413161", "413161035", "story_v_out_413161.awb")
					end

					arg_145_1:RecordHistoryTalkVoice("story_v_out_413161", "413161035", "story_v_out_413161.awb")
				end

				arg_145_1:RecordContent(arg_145_1.text_.text)
			end

			local var_148_26 = math.max(var_148_17, arg_145_1.talkMaxDuration)

			if var_148_16 <= arg_145_1.time_ and arg_145_1.time_ < var_148_16 + var_148_26 then
				arg_145_1.typewritter.percent = (arg_145_1.time_ - var_148_16) / var_148_26

				arg_145_1.typewritter:SetDirty()
			end

			if arg_145_1.time_ >= var_148_16 + var_148_26 and arg_145_1.time_ < var_148_16 + var_148_26 + arg_148_0 then
				arg_145_1.typewritter.percent = 1

				arg_145_1.typewritter:SetDirty()
				arg_145_1:ShowNextGo(true)
			end
		end
	end,
	Play413161036 = function(arg_149_0, arg_149_1)
		arg_149_1.time_ = 0
		arg_149_1.frameCnt_ = 0
		arg_149_1.state_ = "playing"
		arg_149_1.curTalkId_ = 413161036
		arg_149_1.duration_ = 5.57

		local var_149_0 = {
			zh = 5.566,
			ja = 4.9
		}
		local var_149_1 = manager.audio:GetLocalizationFlag()

		if var_149_0[var_149_1] ~= nil then
			arg_149_1.duration_ = var_149_0[var_149_1]
		end

		SetActive(arg_149_1.tipsGo_, false)

		function arg_149_1.onSingleLineFinish_()
			arg_149_1.onSingleLineUpdate_ = nil
			arg_149_1.onSingleLineFinish_ = nil
			arg_149_1.state_ = "waiting"
		end

		function arg_149_1.playNext_(arg_151_0)
			if arg_151_0 == 1 then
				arg_149_0:Play413161037(arg_149_1)
			end
		end

		function arg_149_1.onSingleLineUpdate_(arg_152_0)
			local var_152_0 = arg_149_1.actors_["10022"].transform
			local var_152_1 = 0

			if var_152_1 < arg_149_1.time_ and arg_149_1.time_ <= var_152_1 + arg_152_0 then
				arg_149_1.var_.moveOldPos10022 = var_152_0.localPosition
				var_152_0.localScale = Vector3.New(1, 1, 1)

				arg_149_1:CheckSpriteTmpPos("10022", 4)

				local var_152_2 = var_152_0.childCount

				for iter_152_0 = 0, var_152_2 - 1 do
					local var_152_3 = var_152_0:GetChild(iter_152_0)

					if var_152_3.name == "split_8" or not string.find(var_152_3.name, "split") then
						var_152_3.gameObject:SetActive(true)
					else
						var_152_3.gameObject:SetActive(false)
					end
				end
			end

			local var_152_4 = 0.001

			if var_152_1 <= arg_149_1.time_ and arg_149_1.time_ < var_152_1 + var_152_4 then
				local var_152_5 = (arg_149_1.time_ - var_152_1) / var_152_4
				local var_152_6 = Vector3.New(390, -315, -320)

				var_152_0.localPosition = Vector3.Lerp(arg_149_1.var_.moveOldPos10022, var_152_6, var_152_5)
			end

			if arg_149_1.time_ >= var_152_1 + var_152_4 and arg_149_1.time_ < var_152_1 + var_152_4 + arg_152_0 then
				var_152_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_152_7 = arg_149_1.actors_["10092"]
			local var_152_8 = 0

			if var_152_8 < arg_149_1.time_ and arg_149_1.time_ <= var_152_8 + arg_152_0 and not isNil(var_152_7) and arg_149_1.var_.actorSpriteComps10092 == nil then
				arg_149_1.var_.actorSpriteComps10092 = var_152_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_152_9 = 2

			if var_152_8 <= arg_149_1.time_ and arg_149_1.time_ < var_152_8 + var_152_9 and not isNil(var_152_7) then
				local var_152_10 = (arg_149_1.time_ - var_152_8) / var_152_9

				if arg_149_1.var_.actorSpriteComps10092 then
					for iter_152_1, iter_152_2 in pairs(arg_149_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_152_2 then
							if arg_149_1.isInRecall_ then
								local var_152_11 = Mathf.Lerp(iter_152_2.color.r, arg_149_1.hightColor2.r, var_152_10)
								local var_152_12 = Mathf.Lerp(iter_152_2.color.g, arg_149_1.hightColor2.g, var_152_10)
								local var_152_13 = Mathf.Lerp(iter_152_2.color.b, arg_149_1.hightColor2.b, var_152_10)

								iter_152_2.color = Color.New(var_152_11, var_152_12, var_152_13)
							else
								local var_152_14 = Mathf.Lerp(iter_152_2.color.r, 0.5, var_152_10)

								iter_152_2.color = Color.New(var_152_14, var_152_14, var_152_14)
							end
						end
					end
				end
			end

			if arg_149_1.time_ >= var_152_8 + var_152_9 and arg_149_1.time_ < var_152_8 + var_152_9 + arg_152_0 and not isNil(var_152_7) and arg_149_1.var_.actorSpriteComps10092 then
				for iter_152_3, iter_152_4 in pairs(arg_149_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_152_4 then
						if arg_149_1.isInRecall_ then
							iter_152_4.color = arg_149_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_152_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_149_1.var_.actorSpriteComps10092 = nil
			end

			local var_152_15 = arg_149_1.actors_["10022"]
			local var_152_16 = 0

			if var_152_16 < arg_149_1.time_ and arg_149_1.time_ <= var_152_16 + arg_152_0 and not isNil(var_152_15) and arg_149_1.var_.actorSpriteComps10022 == nil then
				arg_149_1.var_.actorSpriteComps10022 = var_152_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_152_17 = 2

			if var_152_16 <= arg_149_1.time_ and arg_149_1.time_ < var_152_16 + var_152_17 and not isNil(var_152_15) then
				local var_152_18 = (arg_149_1.time_ - var_152_16) / var_152_17

				if arg_149_1.var_.actorSpriteComps10022 then
					for iter_152_5, iter_152_6 in pairs(arg_149_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_152_6 then
							if arg_149_1.isInRecall_ then
								local var_152_19 = Mathf.Lerp(iter_152_6.color.r, arg_149_1.hightColor1.r, var_152_18)
								local var_152_20 = Mathf.Lerp(iter_152_6.color.g, arg_149_1.hightColor1.g, var_152_18)
								local var_152_21 = Mathf.Lerp(iter_152_6.color.b, arg_149_1.hightColor1.b, var_152_18)

								iter_152_6.color = Color.New(var_152_19, var_152_20, var_152_21)
							else
								local var_152_22 = Mathf.Lerp(iter_152_6.color.r, 1, var_152_18)

								iter_152_6.color = Color.New(var_152_22, var_152_22, var_152_22)
							end
						end
					end
				end
			end

			if arg_149_1.time_ >= var_152_16 + var_152_17 and arg_149_1.time_ < var_152_16 + var_152_17 + arg_152_0 and not isNil(var_152_15) and arg_149_1.var_.actorSpriteComps10022 then
				for iter_152_7, iter_152_8 in pairs(arg_149_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_152_8 then
						if arg_149_1.isInRecall_ then
							iter_152_8.color = arg_149_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_152_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_149_1.var_.actorSpriteComps10022 = nil
			end

			local var_152_23 = 0
			local var_152_24 = 0.7

			if var_152_23 < arg_149_1.time_ and arg_149_1.time_ <= var_152_23 + arg_152_0 then
				arg_149_1.talkMaxDuration = 0
				arg_149_1.dialogCg_.alpha = 1

				arg_149_1.dialog_:SetActive(true)
				SetActive(arg_149_1.leftNameGo_, true)

				local var_152_25 = arg_149_1:FormatText(StoryNameCfg[614].name)

				arg_149_1.leftNameTxt_.text = var_152_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_149_1.leftNameTxt_.transform)

				arg_149_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_149_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_149_1:RecordName(arg_149_1.leftNameTxt_.text)
				SetActive(arg_149_1.iconTrs_.gameObject, false)
				arg_149_1.callingController_:SetSelectedState("normal")

				local var_152_26 = arg_149_1:GetWordFromCfg(413161036)
				local var_152_27 = arg_149_1:FormatText(var_152_26.content)

				arg_149_1.text_.text = var_152_27

				LuaForUtil.ClearLinePrefixSymbol(arg_149_1.text_)

				local var_152_28 = 28
				local var_152_29 = utf8.len(var_152_27)
				local var_152_30 = var_152_28 <= 0 and var_152_24 or var_152_24 * (var_152_29 / var_152_28)

				if var_152_30 > 0 and var_152_24 < var_152_30 then
					arg_149_1.talkMaxDuration = var_152_30

					if var_152_30 + var_152_23 > arg_149_1.duration_ then
						arg_149_1.duration_ = var_152_30 + var_152_23
					end
				end

				arg_149_1.text_.text = var_152_27
				arg_149_1.typewritter.percent = 0

				arg_149_1.typewritter:SetDirty()
				arg_149_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161036", "story_v_out_413161.awb") ~= 0 then
					local var_152_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161036", "story_v_out_413161.awb") / 1000

					if var_152_31 + var_152_23 > arg_149_1.duration_ then
						arg_149_1.duration_ = var_152_31 + var_152_23
					end

					if var_152_26.prefab_name ~= "" and arg_149_1.actors_[var_152_26.prefab_name] ~= nil then
						local var_152_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_149_1.actors_[var_152_26.prefab_name].transform, "story_v_out_413161", "413161036", "story_v_out_413161.awb")

						arg_149_1:RecordAudio("413161036", var_152_32)
						arg_149_1:RecordAudio("413161036", var_152_32)
					else
						arg_149_1:AudioAction("play", "voice", "story_v_out_413161", "413161036", "story_v_out_413161.awb")
					end

					arg_149_1:RecordHistoryTalkVoice("story_v_out_413161", "413161036", "story_v_out_413161.awb")
				end

				arg_149_1:RecordContent(arg_149_1.text_.text)
			end

			local var_152_33 = math.max(var_152_24, arg_149_1.talkMaxDuration)

			if var_152_23 <= arg_149_1.time_ and arg_149_1.time_ < var_152_23 + var_152_33 then
				arg_149_1.typewritter.percent = (arg_149_1.time_ - var_152_23) / var_152_33

				arg_149_1.typewritter:SetDirty()
			end

			if arg_149_1.time_ >= var_152_23 + var_152_33 and arg_149_1.time_ < var_152_23 + var_152_33 + arg_152_0 then
				arg_149_1.typewritter.percent = 1

				arg_149_1.typewritter:SetDirty()
				arg_149_1:ShowNextGo(true)
			end
		end
	end,
	Play413161037 = function(arg_153_0, arg_153_1)
		arg_153_1.time_ = 0
		arg_153_1.frameCnt_ = 0
		arg_153_1.state_ = "playing"
		arg_153_1.curTalkId_ = 413161037
		arg_153_1.duration_ = 9.8

		local var_153_0 = {
			zh = 5.133,
			ja = 9.8
		}
		local var_153_1 = manager.audio:GetLocalizationFlag()

		if var_153_0[var_153_1] ~= nil then
			arg_153_1.duration_ = var_153_0[var_153_1]
		end

		SetActive(arg_153_1.tipsGo_, false)

		function arg_153_1.onSingleLineFinish_()
			arg_153_1.onSingleLineUpdate_ = nil
			arg_153_1.onSingleLineFinish_ = nil
			arg_153_1.state_ = "waiting"
		end

		function arg_153_1.playNext_(arg_155_0)
			if arg_155_0 == 1 then
				arg_153_0:Play413161038(arg_153_1)
			end
		end

		function arg_153_1.onSingleLineUpdate_(arg_156_0)
			local var_156_0 = arg_153_1.actors_["10092"].transform
			local var_156_1 = 0

			if var_156_1 < arg_153_1.time_ and arg_153_1.time_ <= var_156_1 + arg_156_0 then
				arg_153_1.var_.moveOldPos10092 = var_156_0.localPosition
				var_156_0.localScale = Vector3.New(1, 1, 1)

				arg_153_1:CheckSpriteTmpPos("10092", 2)

				local var_156_2 = var_156_0.childCount

				for iter_156_0 = 0, var_156_2 - 1 do
					local var_156_3 = var_156_0:GetChild(iter_156_0)

					if var_156_3.name == "split_1_1" or not string.find(var_156_3.name, "split") then
						var_156_3.gameObject:SetActive(true)
					else
						var_156_3.gameObject:SetActive(false)
					end
				end
			end

			local var_156_4 = 0.001

			if var_156_1 <= arg_153_1.time_ and arg_153_1.time_ < var_156_1 + var_156_4 then
				local var_156_5 = (arg_153_1.time_ - var_156_1) / var_156_4
				local var_156_6 = Vector3.New(-389.49, -300, -295)

				var_156_0.localPosition = Vector3.Lerp(arg_153_1.var_.moveOldPos10092, var_156_6, var_156_5)
			end

			if arg_153_1.time_ >= var_156_1 + var_156_4 and arg_153_1.time_ < var_156_1 + var_156_4 + arg_156_0 then
				var_156_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_156_7 = arg_153_1.actors_["10022"]
			local var_156_8 = 0

			if var_156_8 < arg_153_1.time_ and arg_153_1.time_ <= var_156_8 + arg_156_0 and not isNil(var_156_7) and arg_153_1.var_.actorSpriteComps10022 == nil then
				arg_153_1.var_.actorSpriteComps10022 = var_156_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_156_9 = 2

			if var_156_8 <= arg_153_1.time_ and arg_153_1.time_ < var_156_8 + var_156_9 and not isNil(var_156_7) then
				local var_156_10 = (arg_153_1.time_ - var_156_8) / var_156_9

				if arg_153_1.var_.actorSpriteComps10022 then
					for iter_156_1, iter_156_2 in pairs(arg_153_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_156_2 then
							if arg_153_1.isInRecall_ then
								local var_156_11 = Mathf.Lerp(iter_156_2.color.r, arg_153_1.hightColor2.r, var_156_10)
								local var_156_12 = Mathf.Lerp(iter_156_2.color.g, arg_153_1.hightColor2.g, var_156_10)
								local var_156_13 = Mathf.Lerp(iter_156_2.color.b, arg_153_1.hightColor2.b, var_156_10)

								iter_156_2.color = Color.New(var_156_11, var_156_12, var_156_13)
							else
								local var_156_14 = Mathf.Lerp(iter_156_2.color.r, 0.5, var_156_10)

								iter_156_2.color = Color.New(var_156_14, var_156_14, var_156_14)
							end
						end
					end
				end
			end

			if arg_153_1.time_ >= var_156_8 + var_156_9 and arg_153_1.time_ < var_156_8 + var_156_9 + arg_156_0 and not isNil(var_156_7) and arg_153_1.var_.actorSpriteComps10022 then
				for iter_156_3, iter_156_4 in pairs(arg_153_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_156_4 then
						if arg_153_1.isInRecall_ then
							iter_156_4.color = arg_153_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_156_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_153_1.var_.actorSpriteComps10022 = nil
			end

			local var_156_15 = arg_153_1.actors_["10092"]
			local var_156_16 = 0

			if var_156_16 < arg_153_1.time_ and arg_153_1.time_ <= var_156_16 + arg_156_0 and not isNil(var_156_15) and arg_153_1.var_.actorSpriteComps10092 == nil then
				arg_153_1.var_.actorSpriteComps10092 = var_156_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_156_17 = 2

			if var_156_16 <= arg_153_1.time_ and arg_153_1.time_ < var_156_16 + var_156_17 and not isNil(var_156_15) then
				local var_156_18 = (arg_153_1.time_ - var_156_16) / var_156_17

				if arg_153_1.var_.actorSpriteComps10092 then
					for iter_156_5, iter_156_6 in pairs(arg_153_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_156_6 then
							if arg_153_1.isInRecall_ then
								local var_156_19 = Mathf.Lerp(iter_156_6.color.r, arg_153_1.hightColor1.r, var_156_18)
								local var_156_20 = Mathf.Lerp(iter_156_6.color.g, arg_153_1.hightColor1.g, var_156_18)
								local var_156_21 = Mathf.Lerp(iter_156_6.color.b, arg_153_1.hightColor1.b, var_156_18)

								iter_156_6.color = Color.New(var_156_19, var_156_20, var_156_21)
							else
								local var_156_22 = Mathf.Lerp(iter_156_6.color.r, 1, var_156_18)

								iter_156_6.color = Color.New(var_156_22, var_156_22, var_156_22)
							end
						end
					end
				end
			end

			if arg_153_1.time_ >= var_156_16 + var_156_17 and arg_153_1.time_ < var_156_16 + var_156_17 + arg_156_0 and not isNil(var_156_15) and arg_153_1.var_.actorSpriteComps10092 then
				for iter_156_7, iter_156_8 in pairs(arg_153_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_156_8 then
						if arg_153_1.isInRecall_ then
							iter_156_8.color = arg_153_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_156_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_153_1.var_.actorSpriteComps10092 = nil
			end

			local var_156_23 = 0
			local var_156_24 = 0.775

			if var_156_23 < arg_153_1.time_ and arg_153_1.time_ <= var_156_23 + arg_156_0 then
				arg_153_1.talkMaxDuration = 0
				arg_153_1.dialogCg_.alpha = 1

				arg_153_1.dialog_:SetActive(true)
				SetActive(arg_153_1.leftNameGo_, true)

				local var_156_25 = arg_153_1:FormatText(StoryNameCfg[996].name)

				arg_153_1.leftNameTxt_.text = var_156_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_153_1.leftNameTxt_.transform)

				arg_153_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_153_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_153_1:RecordName(arg_153_1.leftNameTxt_.text)
				SetActive(arg_153_1.iconTrs_.gameObject, false)
				arg_153_1.callingController_:SetSelectedState("normal")

				local var_156_26 = arg_153_1:GetWordFromCfg(413161037)
				local var_156_27 = arg_153_1:FormatText(var_156_26.content)

				arg_153_1.text_.text = var_156_27

				LuaForUtil.ClearLinePrefixSymbol(arg_153_1.text_)

				local var_156_28 = 29
				local var_156_29 = utf8.len(var_156_27)
				local var_156_30 = var_156_28 <= 0 and var_156_24 or var_156_24 * (var_156_29 / var_156_28)

				if var_156_30 > 0 and var_156_24 < var_156_30 then
					arg_153_1.talkMaxDuration = var_156_30

					if var_156_30 + var_156_23 > arg_153_1.duration_ then
						arg_153_1.duration_ = var_156_30 + var_156_23
					end
				end

				arg_153_1.text_.text = var_156_27
				arg_153_1.typewritter.percent = 0

				arg_153_1.typewritter:SetDirty()
				arg_153_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161037", "story_v_out_413161.awb") ~= 0 then
					local var_156_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161037", "story_v_out_413161.awb") / 1000

					if var_156_31 + var_156_23 > arg_153_1.duration_ then
						arg_153_1.duration_ = var_156_31 + var_156_23
					end

					if var_156_26.prefab_name ~= "" and arg_153_1.actors_[var_156_26.prefab_name] ~= nil then
						local var_156_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_153_1.actors_[var_156_26.prefab_name].transform, "story_v_out_413161", "413161037", "story_v_out_413161.awb")

						arg_153_1:RecordAudio("413161037", var_156_32)
						arg_153_1:RecordAudio("413161037", var_156_32)
					else
						arg_153_1:AudioAction("play", "voice", "story_v_out_413161", "413161037", "story_v_out_413161.awb")
					end

					arg_153_1:RecordHistoryTalkVoice("story_v_out_413161", "413161037", "story_v_out_413161.awb")
				end

				arg_153_1:RecordContent(arg_153_1.text_.text)
			end

			local var_156_33 = math.max(var_156_24, arg_153_1.talkMaxDuration)

			if var_156_23 <= arg_153_1.time_ and arg_153_1.time_ < var_156_23 + var_156_33 then
				arg_153_1.typewritter.percent = (arg_153_1.time_ - var_156_23) / var_156_33

				arg_153_1.typewritter:SetDirty()
			end

			if arg_153_1.time_ >= var_156_23 + var_156_33 and arg_153_1.time_ < var_156_23 + var_156_33 + arg_156_0 then
				arg_153_1.typewritter.percent = 1

				arg_153_1.typewritter:SetDirty()
				arg_153_1:ShowNextGo(true)
			end
		end
	end,
	Play413161038 = function(arg_157_0, arg_157_1)
		arg_157_1.time_ = 0
		arg_157_1.frameCnt_ = 0
		arg_157_1.state_ = "playing"
		arg_157_1.curTalkId_ = 413161038
		arg_157_1.duration_ = 5

		SetActive(arg_157_1.tipsGo_, false)

		function arg_157_1.onSingleLineFinish_()
			arg_157_1.onSingleLineUpdate_ = nil
			arg_157_1.onSingleLineFinish_ = nil
			arg_157_1.state_ = "waiting"
		end

		function arg_157_1.playNext_(arg_159_0)
			if arg_159_0 == 1 then
				arg_157_0:Play413161039(arg_157_1)
			end
		end

		function arg_157_1.onSingleLineUpdate_(arg_160_0)
			local var_160_0 = arg_157_1.actors_["10092"].transform
			local var_160_1 = 0

			if var_160_1 < arg_157_1.time_ and arg_157_1.time_ <= var_160_1 + arg_160_0 then
				arg_157_1.var_.moveOldPos10092 = var_160_0.localPosition
				var_160_0.localScale = Vector3.New(1, 1, 1)

				arg_157_1:CheckSpriteTmpPos("10092", 7)

				local var_160_2 = var_160_0.childCount

				for iter_160_0 = 0, var_160_2 - 1 do
					local var_160_3 = var_160_0:GetChild(iter_160_0)

					if var_160_3.name == "" or not string.find(var_160_3.name, "split") then
						var_160_3.gameObject:SetActive(true)
					else
						var_160_3.gameObject:SetActive(false)
					end
				end
			end

			local var_160_4 = 0.001

			if var_160_1 <= arg_157_1.time_ and arg_157_1.time_ < var_160_1 + var_160_4 then
				local var_160_5 = (arg_157_1.time_ - var_160_1) / var_160_4
				local var_160_6 = Vector3.New(0, -2000, 0)

				var_160_0.localPosition = Vector3.Lerp(arg_157_1.var_.moveOldPos10092, var_160_6, var_160_5)
			end

			if arg_157_1.time_ >= var_160_1 + var_160_4 and arg_157_1.time_ < var_160_1 + var_160_4 + arg_160_0 then
				var_160_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_160_7 = arg_157_1.actors_["10092"]
			local var_160_8 = 0

			if var_160_8 < arg_157_1.time_ and arg_157_1.time_ <= var_160_8 + arg_160_0 and not isNil(var_160_7) and arg_157_1.var_.actorSpriteComps10092 == nil then
				arg_157_1.var_.actorSpriteComps10092 = var_160_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_160_9 = 2

			if var_160_8 <= arg_157_1.time_ and arg_157_1.time_ < var_160_8 + var_160_9 and not isNil(var_160_7) then
				local var_160_10 = (arg_157_1.time_ - var_160_8) / var_160_9

				if arg_157_1.var_.actorSpriteComps10092 then
					for iter_160_1, iter_160_2 in pairs(arg_157_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_160_2 then
							if arg_157_1.isInRecall_ then
								local var_160_11 = Mathf.Lerp(iter_160_2.color.r, arg_157_1.hightColor2.r, var_160_10)
								local var_160_12 = Mathf.Lerp(iter_160_2.color.g, arg_157_1.hightColor2.g, var_160_10)
								local var_160_13 = Mathf.Lerp(iter_160_2.color.b, arg_157_1.hightColor2.b, var_160_10)

								iter_160_2.color = Color.New(var_160_11, var_160_12, var_160_13)
							else
								local var_160_14 = Mathf.Lerp(iter_160_2.color.r, 0.5, var_160_10)

								iter_160_2.color = Color.New(var_160_14, var_160_14, var_160_14)
							end
						end
					end
				end
			end

			if arg_157_1.time_ >= var_160_8 + var_160_9 and arg_157_1.time_ < var_160_8 + var_160_9 + arg_160_0 and not isNil(var_160_7) and arg_157_1.var_.actorSpriteComps10092 then
				for iter_160_3, iter_160_4 in pairs(arg_157_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_160_4 then
						if arg_157_1.isInRecall_ then
							iter_160_4.color = arg_157_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_160_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_157_1.var_.actorSpriteComps10092 = nil
			end

			local var_160_15 = arg_157_1.actors_["10022"].transform
			local var_160_16 = 0

			if var_160_16 < arg_157_1.time_ and arg_157_1.time_ <= var_160_16 + arg_160_0 then
				arg_157_1.var_.moveOldPos10022 = var_160_15.localPosition
				var_160_15.localScale = Vector3.New(1, 1, 1)

				arg_157_1:CheckSpriteTmpPos("10022", 7)

				local var_160_17 = var_160_15.childCount

				for iter_160_5 = 0, var_160_17 - 1 do
					local var_160_18 = var_160_15:GetChild(iter_160_5)

					if var_160_18.name == "split_3" or not string.find(var_160_18.name, "split") then
						var_160_18.gameObject:SetActive(true)
					else
						var_160_18.gameObject:SetActive(false)
					end
				end
			end

			local var_160_19 = 0.001

			if var_160_16 <= arg_157_1.time_ and arg_157_1.time_ < var_160_16 + var_160_19 then
				local var_160_20 = (arg_157_1.time_ - var_160_16) / var_160_19
				local var_160_21 = Vector3.New(0, -2000, 0)

				var_160_15.localPosition = Vector3.Lerp(arg_157_1.var_.moveOldPos10022, var_160_21, var_160_20)
			end

			if arg_157_1.time_ >= var_160_16 + var_160_19 and arg_157_1.time_ < var_160_16 + var_160_19 + arg_160_0 then
				var_160_15.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_160_22 = 0
			local var_160_23 = 0.775

			if var_160_22 < arg_157_1.time_ and arg_157_1.time_ <= var_160_22 + arg_160_0 then
				arg_157_1.talkMaxDuration = 0
				arg_157_1.dialogCg_.alpha = 1

				arg_157_1.dialog_:SetActive(true)
				SetActive(arg_157_1.leftNameGo_, false)

				arg_157_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_157_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_157_1:RecordName(arg_157_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_157_1.iconTrs_.gameObject, false)
				arg_157_1.callingController_:SetSelectedState("normal")

				local var_160_24 = arg_157_1:GetWordFromCfg(413161038)
				local var_160_25 = arg_157_1:FormatText(var_160_24.content)

				arg_157_1.text_.text = var_160_25

				LuaForUtil.ClearLinePrefixSymbol(arg_157_1.text_)

				local var_160_26 = 31
				local var_160_27 = utf8.len(var_160_25)
				local var_160_28 = var_160_26 <= 0 and var_160_23 or var_160_23 * (var_160_27 / var_160_26)

				if var_160_28 > 0 and var_160_23 < var_160_28 then
					arg_157_1.talkMaxDuration = var_160_28

					if var_160_28 + var_160_22 > arg_157_1.duration_ then
						arg_157_1.duration_ = var_160_28 + var_160_22
					end
				end

				arg_157_1.text_.text = var_160_25
				arg_157_1.typewritter.percent = 0

				arg_157_1.typewritter:SetDirty()
				arg_157_1:ShowNextGo(false)
				arg_157_1:RecordContent(arg_157_1.text_.text)
			end

			local var_160_29 = math.max(var_160_23, arg_157_1.talkMaxDuration)

			if var_160_22 <= arg_157_1.time_ and arg_157_1.time_ < var_160_22 + var_160_29 then
				arg_157_1.typewritter.percent = (arg_157_1.time_ - var_160_22) / var_160_29

				arg_157_1.typewritter:SetDirty()
			end

			if arg_157_1.time_ >= var_160_22 + var_160_29 and arg_157_1.time_ < var_160_22 + var_160_29 + arg_160_0 then
				arg_157_1.typewritter.percent = 1

				arg_157_1.typewritter:SetDirty()
				arg_157_1:ShowNextGo(true)
			end
		end
	end,
	Play413161039 = function(arg_161_0, arg_161_1)
		arg_161_1.time_ = 0
		arg_161_1.frameCnt_ = 0
		arg_161_1.state_ = "playing"
		arg_161_1.curTalkId_ = 413161039
		arg_161_1.duration_ = 5.03

		local var_161_0 = {
			zh = 5.033,
			ja = 5
		}
		local var_161_1 = manager.audio:GetLocalizationFlag()

		if var_161_0[var_161_1] ~= nil then
			arg_161_1.duration_ = var_161_0[var_161_1]
		end

		SetActive(arg_161_1.tipsGo_, false)

		function arg_161_1.onSingleLineFinish_()
			arg_161_1.onSingleLineUpdate_ = nil
			arg_161_1.onSingleLineFinish_ = nil
			arg_161_1.state_ = "waiting"
		end

		function arg_161_1.playNext_(arg_163_0)
			if arg_163_0 == 1 then
				arg_161_0:Play413161040(arg_161_1)
			end
		end

		function arg_161_1.onSingleLineUpdate_(arg_164_0)
			local var_164_0 = arg_161_1.actors_["10092"].transform
			local var_164_1 = 0

			if var_164_1 < arg_161_1.time_ and arg_161_1.time_ <= var_164_1 + arg_164_0 then
				arg_161_1.var_.moveOldPos10092 = var_164_0.localPosition
				var_164_0.localScale = Vector3.New(1, 1, 1)

				arg_161_1:CheckSpriteTmpPos("10092", 3)

				local var_164_2 = var_164_0.childCount

				for iter_164_0 = 0, var_164_2 - 1 do
					local var_164_3 = var_164_0:GetChild(iter_164_0)

					if var_164_3.name == "split_1_1" or not string.find(var_164_3.name, "split") then
						var_164_3.gameObject:SetActive(true)
					else
						var_164_3.gameObject:SetActive(false)
					end
				end
			end

			local var_164_4 = 0.001

			if var_164_1 <= arg_161_1.time_ and arg_161_1.time_ < var_164_1 + var_164_4 then
				local var_164_5 = (arg_161_1.time_ - var_164_1) / var_164_4
				local var_164_6 = Vector3.New(0, -300, -295)

				var_164_0.localPosition = Vector3.Lerp(arg_161_1.var_.moveOldPos10092, var_164_6, var_164_5)
			end

			if arg_161_1.time_ >= var_164_1 + var_164_4 and arg_161_1.time_ < var_164_1 + var_164_4 + arg_164_0 then
				var_164_0.localPosition = Vector3.New(0, -300, -295)
			end

			local var_164_7 = arg_161_1.actors_["10092"]
			local var_164_8 = 0

			if var_164_8 < arg_161_1.time_ and arg_161_1.time_ <= var_164_8 + arg_164_0 and not isNil(var_164_7) and arg_161_1.var_.actorSpriteComps10092 == nil then
				arg_161_1.var_.actorSpriteComps10092 = var_164_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_164_9 = 2

			if var_164_8 <= arg_161_1.time_ and arg_161_1.time_ < var_164_8 + var_164_9 and not isNil(var_164_7) then
				local var_164_10 = (arg_161_1.time_ - var_164_8) / var_164_9

				if arg_161_1.var_.actorSpriteComps10092 then
					for iter_164_1, iter_164_2 in pairs(arg_161_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_164_2 then
							if arg_161_1.isInRecall_ then
								local var_164_11 = Mathf.Lerp(iter_164_2.color.r, arg_161_1.hightColor1.r, var_164_10)
								local var_164_12 = Mathf.Lerp(iter_164_2.color.g, arg_161_1.hightColor1.g, var_164_10)
								local var_164_13 = Mathf.Lerp(iter_164_2.color.b, arg_161_1.hightColor1.b, var_164_10)

								iter_164_2.color = Color.New(var_164_11, var_164_12, var_164_13)
							else
								local var_164_14 = Mathf.Lerp(iter_164_2.color.r, 1, var_164_10)

								iter_164_2.color = Color.New(var_164_14, var_164_14, var_164_14)
							end
						end
					end
				end
			end

			if arg_161_1.time_ >= var_164_8 + var_164_9 and arg_161_1.time_ < var_164_8 + var_164_9 + arg_164_0 and not isNil(var_164_7) and arg_161_1.var_.actorSpriteComps10092 then
				for iter_164_3, iter_164_4 in pairs(arg_161_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_164_4 then
						if arg_161_1.isInRecall_ then
							iter_164_4.color = arg_161_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_164_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_161_1.var_.actorSpriteComps10092 = nil
			end

			local var_164_15 = 0
			local var_164_16 = 0.625

			if var_164_15 < arg_161_1.time_ and arg_161_1.time_ <= var_164_15 + arg_164_0 then
				arg_161_1.talkMaxDuration = 0
				arg_161_1.dialogCg_.alpha = 1

				arg_161_1.dialog_:SetActive(true)
				SetActive(arg_161_1.leftNameGo_, true)

				local var_164_17 = arg_161_1:FormatText(StoryNameCfg[996].name)

				arg_161_1.leftNameTxt_.text = var_164_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_161_1.leftNameTxt_.transform)

				arg_161_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_161_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_161_1:RecordName(arg_161_1.leftNameTxt_.text)
				SetActive(arg_161_1.iconTrs_.gameObject, false)
				arg_161_1.callingController_:SetSelectedState("normal")

				local var_164_18 = arg_161_1:GetWordFromCfg(413161039)
				local var_164_19 = arg_161_1:FormatText(var_164_18.content)

				arg_161_1.text_.text = var_164_19

				LuaForUtil.ClearLinePrefixSymbol(arg_161_1.text_)

				local var_164_20 = 25
				local var_164_21 = utf8.len(var_164_19)
				local var_164_22 = var_164_20 <= 0 and var_164_16 or var_164_16 * (var_164_21 / var_164_20)

				if var_164_22 > 0 and var_164_16 < var_164_22 then
					arg_161_1.talkMaxDuration = var_164_22

					if var_164_22 + var_164_15 > arg_161_1.duration_ then
						arg_161_1.duration_ = var_164_22 + var_164_15
					end
				end

				arg_161_1.text_.text = var_164_19
				arg_161_1.typewritter.percent = 0

				arg_161_1.typewritter:SetDirty()
				arg_161_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161039", "story_v_out_413161.awb") ~= 0 then
					local var_164_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161039", "story_v_out_413161.awb") / 1000

					if var_164_23 + var_164_15 > arg_161_1.duration_ then
						arg_161_1.duration_ = var_164_23 + var_164_15
					end

					if var_164_18.prefab_name ~= "" and arg_161_1.actors_[var_164_18.prefab_name] ~= nil then
						local var_164_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_161_1.actors_[var_164_18.prefab_name].transform, "story_v_out_413161", "413161039", "story_v_out_413161.awb")

						arg_161_1:RecordAudio("413161039", var_164_24)
						arg_161_1:RecordAudio("413161039", var_164_24)
					else
						arg_161_1:AudioAction("play", "voice", "story_v_out_413161", "413161039", "story_v_out_413161.awb")
					end

					arg_161_1:RecordHistoryTalkVoice("story_v_out_413161", "413161039", "story_v_out_413161.awb")
				end

				arg_161_1:RecordContent(arg_161_1.text_.text)
			end

			local var_164_25 = math.max(var_164_16, arg_161_1.talkMaxDuration)

			if var_164_15 <= arg_161_1.time_ and arg_161_1.time_ < var_164_15 + var_164_25 then
				arg_161_1.typewritter.percent = (arg_161_1.time_ - var_164_15) / var_164_25

				arg_161_1.typewritter:SetDirty()
			end

			if arg_161_1.time_ >= var_164_15 + var_164_25 and arg_161_1.time_ < var_164_15 + var_164_25 + arg_164_0 then
				arg_161_1.typewritter.percent = 1

				arg_161_1.typewritter:SetDirty()
				arg_161_1:ShowNextGo(true)
			end
		end
	end,
	Play413161040 = function(arg_165_0, arg_165_1)
		arg_165_1.time_ = 0
		arg_165_1.frameCnt_ = 0
		arg_165_1.state_ = "playing"
		arg_165_1.curTalkId_ = 413161040
		arg_165_1.duration_ = 15.3

		local var_165_0 = {
			zh = 8.3,
			ja = 15.3
		}
		local var_165_1 = manager.audio:GetLocalizationFlag()

		if var_165_0[var_165_1] ~= nil then
			arg_165_1.duration_ = var_165_0[var_165_1]
		end

		SetActive(arg_165_1.tipsGo_, false)

		function arg_165_1.onSingleLineFinish_()
			arg_165_1.onSingleLineUpdate_ = nil
			arg_165_1.onSingleLineFinish_ = nil
			arg_165_1.state_ = "waiting"
		end

		function arg_165_1.playNext_(arg_167_0)
			if arg_167_0 == 1 then
				arg_165_0:Play413161041(arg_165_1)
			end
		end

		function arg_165_1.onSingleLineUpdate_(arg_168_0)
			local var_168_0 = arg_165_1.actors_["10092"]
			local var_168_1 = 0

			if var_168_1 < arg_165_1.time_ and arg_165_1.time_ <= var_168_1 + arg_168_0 and not isNil(var_168_0) and arg_165_1.var_.actorSpriteComps10092 == nil then
				arg_165_1.var_.actorSpriteComps10092 = var_168_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_168_2 = 2

			if var_168_1 <= arg_165_1.time_ and arg_165_1.time_ < var_168_1 + var_168_2 and not isNil(var_168_0) then
				local var_168_3 = (arg_165_1.time_ - var_168_1) / var_168_2

				if arg_165_1.var_.actorSpriteComps10092 then
					for iter_168_0, iter_168_1 in pairs(arg_165_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_168_1 then
							if arg_165_1.isInRecall_ then
								local var_168_4 = Mathf.Lerp(iter_168_1.color.r, arg_165_1.hightColor1.r, var_168_3)
								local var_168_5 = Mathf.Lerp(iter_168_1.color.g, arg_165_1.hightColor1.g, var_168_3)
								local var_168_6 = Mathf.Lerp(iter_168_1.color.b, arg_165_1.hightColor1.b, var_168_3)

								iter_168_1.color = Color.New(var_168_4, var_168_5, var_168_6)
							else
								local var_168_7 = Mathf.Lerp(iter_168_1.color.r, 1, var_168_3)

								iter_168_1.color = Color.New(var_168_7, var_168_7, var_168_7)
							end
						end
					end
				end
			end

			if arg_165_1.time_ >= var_168_1 + var_168_2 and arg_165_1.time_ < var_168_1 + var_168_2 + arg_168_0 and not isNil(var_168_0) and arg_165_1.var_.actorSpriteComps10092 then
				for iter_168_2, iter_168_3 in pairs(arg_165_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_168_3 then
						if arg_165_1.isInRecall_ then
							iter_168_3.color = arg_165_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_168_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_165_1.var_.actorSpriteComps10092 = nil
			end

			local var_168_8 = 0
			local var_168_9 = 1.075

			if var_168_8 < arg_165_1.time_ and arg_165_1.time_ <= var_168_8 + arg_168_0 then
				arg_165_1.talkMaxDuration = 0
				arg_165_1.dialogCg_.alpha = 1

				arg_165_1.dialog_:SetActive(true)
				SetActive(arg_165_1.leftNameGo_, true)

				local var_168_10 = arg_165_1:FormatText(StoryNameCfg[996].name)

				arg_165_1.leftNameTxt_.text = var_168_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_165_1.leftNameTxt_.transform)

				arg_165_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_165_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_165_1:RecordName(arg_165_1.leftNameTxt_.text)
				SetActive(arg_165_1.iconTrs_.gameObject, false)
				arg_165_1.callingController_:SetSelectedState("normal")

				local var_168_11 = arg_165_1:GetWordFromCfg(413161040)
				local var_168_12 = arg_165_1:FormatText(var_168_11.content)

				arg_165_1.text_.text = var_168_12

				LuaForUtil.ClearLinePrefixSymbol(arg_165_1.text_)

				local var_168_13 = 43
				local var_168_14 = utf8.len(var_168_12)
				local var_168_15 = var_168_13 <= 0 and var_168_9 or var_168_9 * (var_168_14 / var_168_13)

				if var_168_15 > 0 and var_168_9 < var_168_15 then
					arg_165_1.talkMaxDuration = var_168_15

					if var_168_15 + var_168_8 > arg_165_1.duration_ then
						arg_165_1.duration_ = var_168_15 + var_168_8
					end
				end

				arg_165_1.text_.text = var_168_12
				arg_165_1.typewritter.percent = 0

				arg_165_1.typewritter:SetDirty()
				arg_165_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161040", "story_v_out_413161.awb") ~= 0 then
					local var_168_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161040", "story_v_out_413161.awb") / 1000

					if var_168_16 + var_168_8 > arg_165_1.duration_ then
						arg_165_1.duration_ = var_168_16 + var_168_8
					end

					if var_168_11.prefab_name ~= "" and arg_165_1.actors_[var_168_11.prefab_name] ~= nil then
						local var_168_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_165_1.actors_[var_168_11.prefab_name].transform, "story_v_out_413161", "413161040", "story_v_out_413161.awb")

						arg_165_1:RecordAudio("413161040", var_168_17)
						arg_165_1:RecordAudio("413161040", var_168_17)
					else
						arg_165_1:AudioAction("play", "voice", "story_v_out_413161", "413161040", "story_v_out_413161.awb")
					end

					arg_165_1:RecordHistoryTalkVoice("story_v_out_413161", "413161040", "story_v_out_413161.awb")
				end

				arg_165_1:RecordContent(arg_165_1.text_.text)
			end

			local var_168_18 = math.max(var_168_9, arg_165_1.talkMaxDuration)

			if var_168_8 <= arg_165_1.time_ and arg_165_1.time_ < var_168_8 + var_168_18 then
				arg_165_1.typewritter.percent = (arg_165_1.time_ - var_168_8) / var_168_18

				arg_165_1.typewritter:SetDirty()
			end

			if arg_165_1.time_ >= var_168_8 + var_168_18 and arg_165_1.time_ < var_168_8 + var_168_18 + arg_168_0 then
				arg_165_1.typewritter.percent = 1

				arg_165_1.typewritter:SetDirty()
				arg_165_1:ShowNextGo(true)
			end
		end
	end,
	Play413161041 = function(arg_169_0, arg_169_1)
		arg_169_1.time_ = 0
		arg_169_1.frameCnt_ = 0
		arg_169_1.state_ = "playing"
		arg_169_1.curTalkId_ = 413161041
		arg_169_1.duration_ = 3.57

		local var_169_0 = {
			zh = 2.5,
			ja = 3.566
		}
		local var_169_1 = manager.audio:GetLocalizationFlag()

		if var_169_0[var_169_1] ~= nil then
			arg_169_1.duration_ = var_169_0[var_169_1]
		end

		SetActive(arg_169_1.tipsGo_, false)

		function arg_169_1.onSingleLineFinish_()
			arg_169_1.onSingleLineUpdate_ = nil
			arg_169_1.onSingleLineFinish_ = nil
			arg_169_1.state_ = "waiting"
		end

		function arg_169_1.playNext_(arg_171_0)
			if arg_171_0 == 1 then
				arg_169_0:Play413161042(arg_169_1)
			end
		end

		function arg_169_1.onSingleLineUpdate_(arg_172_0)
			local var_172_0 = arg_169_1.actors_["10022"].transform
			local var_172_1 = 0

			if var_172_1 < arg_169_1.time_ and arg_169_1.time_ <= var_172_1 + arg_172_0 then
				arg_169_1.var_.moveOldPos10022 = var_172_0.localPosition
				var_172_0.localScale = Vector3.New(1, 1, 1)

				arg_169_1:CheckSpriteTmpPos("10022", 4)

				local var_172_2 = var_172_0.childCount

				for iter_172_0 = 0, var_172_2 - 1 do
					local var_172_3 = var_172_0:GetChild(iter_172_0)

					if var_172_3.name == "" or not string.find(var_172_3.name, "split") then
						var_172_3.gameObject:SetActive(true)
					else
						var_172_3.gameObject:SetActive(false)
					end
				end
			end

			local var_172_4 = 0.001

			if var_172_1 <= arg_169_1.time_ and arg_169_1.time_ < var_172_1 + var_172_4 then
				local var_172_5 = (arg_169_1.time_ - var_172_1) / var_172_4
				local var_172_6 = Vector3.New(390, -315, -320)

				var_172_0.localPosition = Vector3.Lerp(arg_169_1.var_.moveOldPos10022, var_172_6, var_172_5)
			end

			if arg_169_1.time_ >= var_172_1 + var_172_4 and arg_169_1.time_ < var_172_1 + var_172_4 + arg_172_0 then
				var_172_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_172_7 = arg_169_1.actors_["10092"]
			local var_172_8 = 0

			if var_172_8 < arg_169_1.time_ and arg_169_1.time_ <= var_172_8 + arg_172_0 and not isNil(var_172_7) and arg_169_1.var_.actorSpriteComps10092 == nil then
				arg_169_1.var_.actorSpriteComps10092 = var_172_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_172_9 = 2

			if var_172_8 <= arg_169_1.time_ and arg_169_1.time_ < var_172_8 + var_172_9 and not isNil(var_172_7) then
				local var_172_10 = (arg_169_1.time_ - var_172_8) / var_172_9

				if arg_169_1.var_.actorSpriteComps10092 then
					for iter_172_1, iter_172_2 in pairs(arg_169_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_172_2 then
							if arg_169_1.isInRecall_ then
								local var_172_11 = Mathf.Lerp(iter_172_2.color.r, arg_169_1.hightColor2.r, var_172_10)
								local var_172_12 = Mathf.Lerp(iter_172_2.color.g, arg_169_1.hightColor2.g, var_172_10)
								local var_172_13 = Mathf.Lerp(iter_172_2.color.b, arg_169_1.hightColor2.b, var_172_10)

								iter_172_2.color = Color.New(var_172_11, var_172_12, var_172_13)
							else
								local var_172_14 = Mathf.Lerp(iter_172_2.color.r, 0.5, var_172_10)

								iter_172_2.color = Color.New(var_172_14, var_172_14, var_172_14)
							end
						end
					end
				end
			end

			if arg_169_1.time_ >= var_172_8 + var_172_9 and arg_169_1.time_ < var_172_8 + var_172_9 + arg_172_0 and not isNil(var_172_7) and arg_169_1.var_.actorSpriteComps10092 then
				for iter_172_3, iter_172_4 in pairs(arg_169_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_172_4 then
						if arg_169_1.isInRecall_ then
							iter_172_4.color = arg_169_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_172_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_169_1.var_.actorSpriteComps10092 = nil
			end

			local var_172_15 = arg_169_1.actors_["10022"]
			local var_172_16 = 0

			if var_172_16 < arg_169_1.time_ and arg_169_1.time_ <= var_172_16 + arg_172_0 and not isNil(var_172_15) and arg_169_1.var_.actorSpriteComps10022 == nil then
				arg_169_1.var_.actorSpriteComps10022 = var_172_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_172_17 = 2

			if var_172_16 <= arg_169_1.time_ and arg_169_1.time_ < var_172_16 + var_172_17 and not isNil(var_172_15) then
				local var_172_18 = (arg_169_1.time_ - var_172_16) / var_172_17

				if arg_169_1.var_.actorSpriteComps10022 then
					for iter_172_5, iter_172_6 in pairs(arg_169_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_172_6 then
							if arg_169_1.isInRecall_ then
								local var_172_19 = Mathf.Lerp(iter_172_6.color.r, arg_169_1.hightColor1.r, var_172_18)
								local var_172_20 = Mathf.Lerp(iter_172_6.color.g, arg_169_1.hightColor1.g, var_172_18)
								local var_172_21 = Mathf.Lerp(iter_172_6.color.b, arg_169_1.hightColor1.b, var_172_18)

								iter_172_6.color = Color.New(var_172_19, var_172_20, var_172_21)
							else
								local var_172_22 = Mathf.Lerp(iter_172_6.color.r, 1, var_172_18)

								iter_172_6.color = Color.New(var_172_22, var_172_22, var_172_22)
							end
						end
					end
				end
			end

			if arg_169_1.time_ >= var_172_16 + var_172_17 and arg_169_1.time_ < var_172_16 + var_172_17 + arg_172_0 and not isNil(var_172_15) and arg_169_1.var_.actorSpriteComps10022 then
				for iter_172_7, iter_172_8 in pairs(arg_169_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_172_8 then
						if arg_169_1.isInRecall_ then
							iter_172_8.color = arg_169_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_172_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_169_1.var_.actorSpriteComps10022 = nil
			end

			local var_172_23 = arg_169_1.actors_["10092"].transform
			local var_172_24 = 0

			if var_172_24 < arg_169_1.time_ and arg_169_1.time_ <= var_172_24 + arg_172_0 then
				arg_169_1.var_.moveOldPos10092 = var_172_23.localPosition
				var_172_23.localScale = Vector3.New(1, 1, 1)

				arg_169_1:CheckSpriteTmpPos("10092", 2)

				local var_172_25 = var_172_23.childCount

				for iter_172_9 = 0, var_172_25 - 1 do
					local var_172_26 = var_172_23:GetChild(iter_172_9)

					if var_172_26.name == "" or not string.find(var_172_26.name, "split") then
						var_172_26.gameObject:SetActive(true)
					else
						var_172_26.gameObject:SetActive(false)
					end
				end
			end

			local var_172_27 = 0.001

			if var_172_24 <= arg_169_1.time_ and arg_169_1.time_ < var_172_24 + var_172_27 then
				local var_172_28 = (arg_169_1.time_ - var_172_24) / var_172_27
				local var_172_29 = Vector3.New(-389.49, -300, -295)

				var_172_23.localPosition = Vector3.Lerp(arg_169_1.var_.moveOldPos10092, var_172_29, var_172_28)
			end

			if arg_169_1.time_ >= var_172_24 + var_172_27 and arg_169_1.time_ < var_172_24 + var_172_27 + arg_172_0 then
				var_172_23.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_172_30 = 0
			local var_172_31 = 0.375

			if var_172_30 < arg_169_1.time_ and arg_169_1.time_ <= var_172_30 + arg_172_0 then
				arg_169_1.talkMaxDuration = 0
				arg_169_1.dialogCg_.alpha = 1

				arg_169_1.dialog_:SetActive(true)
				SetActive(arg_169_1.leftNameGo_, true)

				local var_172_32 = arg_169_1:FormatText(StoryNameCfg[614].name)

				arg_169_1.leftNameTxt_.text = var_172_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_169_1.leftNameTxt_.transform)

				arg_169_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_169_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_169_1:RecordName(arg_169_1.leftNameTxt_.text)
				SetActive(arg_169_1.iconTrs_.gameObject, false)
				arg_169_1.callingController_:SetSelectedState("normal")

				local var_172_33 = arg_169_1:GetWordFromCfg(413161041)
				local var_172_34 = arg_169_1:FormatText(var_172_33.content)

				arg_169_1.text_.text = var_172_34

				LuaForUtil.ClearLinePrefixSymbol(arg_169_1.text_)

				local var_172_35 = 15
				local var_172_36 = utf8.len(var_172_34)
				local var_172_37 = var_172_35 <= 0 and var_172_31 or var_172_31 * (var_172_36 / var_172_35)

				if var_172_37 > 0 and var_172_31 < var_172_37 then
					arg_169_1.talkMaxDuration = var_172_37

					if var_172_37 + var_172_30 > arg_169_1.duration_ then
						arg_169_1.duration_ = var_172_37 + var_172_30
					end
				end

				arg_169_1.text_.text = var_172_34
				arg_169_1.typewritter.percent = 0

				arg_169_1.typewritter:SetDirty()
				arg_169_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161041", "story_v_out_413161.awb") ~= 0 then
					local var_172_38 = manager.audio:GetVoiceLength("story_v_out_413161", "413161041", "story_v_out_413161.awb") / 1000

					if var_172_38 + var_172_30 > arg_169_1.duration_ then
						arg_169_1.duration_ = var_172_38 + var_172_30
					end

					if var_172_33.prefab_name ~= "" and arg_169_1.actors_[var_172_33.prefab_name] ~= nil then
						local var_172_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_169_1.actors_[var_172_33.prefab_name].transform, "story_v_out_413161", "413161041", "story_v_out_413161.awb")

						arg_169_1:RecordAudio("413161041", var_172_39)
						arg_169_1:RecordAudio("413161041", var_172_39)
					else
						arg_169_1:AudioAction("play", "voice", "story_v_out_413161", "413161041", "story_v_out_413161.awb")
					end

					arg_169_1:RecordHistoryTalkVoice("story_v_out_413161", "413161041", "story_v_out_413161.awb")
				end

				arg_169_1:RecordContent(arg_169_1.text_.text)
			end

			local var_172_40 = math.max(var_172_31, arg_169_1.talkMaxDuration)

			if var_172_30 <= arg_169_1.time_ and arg_169_1.time_ < var_172_30 + var_172_40 then
				arg_169_1.typewritter.percent = (arg_169_1.time_ - var_172_30) / var_172_40

				arg_169_1.typewritter:SetDirty()
			end

			if arg_169_1.time_ >= var_172_30 + var_172_40 and arg_169_1.time_ < var_172_30 + var_172_40 + arg_172_0 then
				arg_169_1.typewritter.percent = 1

				arg_169_1.typewritter:SetDirty()
				arg_169_1:ShowNextGo(true)
			end
		end
	end,
	Play413161042 = function(arg_173_0, arg_173_1)
		arg_173_1.time_ = 0
		arg_173_1.frameCnt_ = 0
		arg_173_1.state_ = "playing"
		arg_173_1.curTalkId_ = 413161042
		arg_173_1.duration_ = 16.2

		local var_173_0 = {
			zh = 6.4,
			ja = 16.2
		}
		local var_173_1 = manager.audio:GetLocalizationFlag()

		if var_173_0[var_173_1] ~= nil then
			arg_173_1.duration_ = var_173_0[var_173_1]
		end

		SetActive(arg_173_1.tipsGo_, false)

		function arg_173_1.onSingleLineFinish_()
			arg_173_1.onSingleLineUpdate_ = nil
			arg_173_1.onSingleLineFinish_ = nil
			arg_173_1.state_ = "waiting"
		end

		function arg_173_1.playNext_(arg_175_0)
			if arg_175_0 == 1 then
				arg_173_0:Play413161043(arg_173_1)
			end
		end

		function arg_173_1.onSingleLineUpdate_(arg_176_0)
			local var_176_0 = arg_173_1.actors_["10092"].transform
			local var_176_1 = 0

			if var_176_1 < arg_173_1.time_ and arg_173_1.time_ <= var_176_1 + arg_176_0 then
				arg_173_1.var_.moveOldPos10092 = var_176_0.localPosition
				var_176_0.localScale = Vector3.New(1, 1, 1)

				arg_173_1:CheckSpriteTmpPos("10092", 2)

				local var_176_2 = var_176_0.childCount

				for iter_176_0 = 0, var_176_2 - 1 do
					local var_176_3 = var_176_0:GetChild(iter_176_0)

					if var_176_3.name == "" or not string.find(var_176_3.name, "split") then
						var_176_3.gameObject:SetActive(true)
					else
						var_176_3.gameObject:SetActive(false)
					end
				end
			end

			local var_176_4 = 0.001

			if var_176_1 <= arg_173_1.time_ and arg_173_1.time_ < var_176_1 + var_176_4 then
				local var_176_5 = (arg_173_1.time_ - var_176_1) / var_176_4
				local var_176_6 = Vector3.New(-389.49, -300, -295)

				var_176_0.localPosition = Vector3.Lerp(arg_173_1.var_.moveOldPos10092, var_176_6, var_176_5)
			end

			if arg_173_1.time_ >= var_176_1 + var_176_4 and arg_173_1.time_ < var_176_1 + var_176_4 + arg_176_0 then
				var_176_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_176_7 = arg_173_1.actors_["10022"]
			local var_176_8 = 0

			if var_176_8 < arg_173_1.time_ and arg_173_1.time_ <= var_176_8 + arg_176_0 and not isNil(var_176_7) and arg_173_1.var_.actorSpriteComps10022 == nil then
				arg_173_1.var_.actorSpriteComps10022 = var_176_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_176_9 = 2

			if var_176_8 <= arg_173_1.time_ and arg_173_1.time_ < var_176_8 + var_176_9 and not isNil(var_176_7) then
				local var_176_10 = (arg_173_1.time_ - var_176_8) / var_176_9

				if arg_173_1.var_.actorSpriteComps10022 then
					for iter_176_1, iter_176_2 in pairs(arg_173_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_176_2 then
							if arg_173_1.isInRecall_ then
								local var_176_11 = Mathf.Lerp(iter_176_2.color.r, arg_173_1.hightColor2.r, var_176_10)
								local var_176_12 = Mathf.Lerp(iter_176_2.color.g, arg_173_1.hightColor2.g, var_176_10)
								local var_176_13 = Mathf.Lerp(iter_176_2.color.b, arg_173_1.hightColor2.b, var_176_10)

								iter_176_2.color = Color.New(var_176_11, var_176_12, var_176_13)
							else
								local var_176_14 = Mathf.Lerp(iter_176_2.color.r, 0.5, var_176_10)

								iter_176_2.color = Color.New(var_176_14, var_176_14, var_176_14)
							end
						end
					end
				end
			end

			if arg_173_1.time_ >= var_176_8 + var_176_9 and arg_173_1.time_ < var_176_8 + var_176_9 + arg_176_0 and not isNil(var_176_7) and arg_173_1.var_.actorSpriteComps10022 then
				for iter_176_3, iter_176_4 in pairs(arg_173_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_176_4 then
						if arg_173_1.isInRecall_ then
							iter_176_4.color = arg_173_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_176_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_173_1.var_.actorSpriteComps10022 = nil
			end

			local var_176_15 = arg_173_1.actors_["10092"]
			local var_176_16 = 0

			if var_176_16 < arg_173_1.time_ and arg_173_1.time_ <= var_176_16 + arg_176_0 and not isNil(var_176_15) and arg_173_1.var_.actorSpriteComps10092 == nil then
				arg_173_1.var_.actorSpriteComps10092 = var_176_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_176_17 = 2

			if var_176_16 <= arg_173_1.time_ and arg_173_1.time_ < var_176_16 + var_176_17 and not isNil(var_176_15) then
				local var_176_18 = (arg_173_1.time_ - var_176_16) / var_176_17

				if arg_173_1.var_.actorSpriteComps10092 then
					for iter_176_5, iter_176_6 in pairs(arg_173_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_176_6 then
							if arg_173_1.isInRecall_ then
								local var_176_19 = Mathf.Lerp(iter_176_6.color.r, arg_173_1.hightColor1.r, var_176_18)
								local var_176_20 = Mathf.Lerp(iter_176_6.color.g, arg_173_1.hightColor1.g, var_176_18)
								local var_176_21 = Mathf.Lerp(iter_176_6.color.b, arg_173_1.hightColor1.b, var_176_18)

								iter_176_6.color = Color.New(var_176_19, var_176_20, var_176_21)
							else
								local var_176_22 = Mathf.Lerp(iter_176_6.color.r, 1, var_176_18)

								iter_176_6.color = Color.New(var_176_22, var_176_22, var_176_22)
							end
						end
					end
				end
			end

			if arg_173_1.time_ >= var_176_16 + var_176_17 and arg_173_1.time_ < var_176_16 + var_176_17 + arg_176_0 and not isNil(var_176_15) and arg_173_1.var_.actorSpriteComps10092 then
				for iter_176_7, iter_176_8 in pairs(arg_173_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_176_8 then
						if arg_173_1.isInRecall_ then
							iter_176_8.color = arg_173_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_176_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_173_1.var_.actorSpriteComps10092 = nil
			end

			local var_176_23 = 0
			local var_176_24 = 0.875

			if var_176_23 < arg_173_1.time_ and arg_173_1.time_ <= var_176_23 + arg_176_0 then
				arg_173_1.talkMaxDuration = 0
				arg_173_1.dialogCg_.alpha = 1

				arg_173_1.dialog_:SetActive(true)
				SetActive(arg_173_1.leftNameGo_, true)

				local var_176_25 = arg_173_1:FormatText(StoryNameCfg[996].name)

				arg_173_1.leftNameTxt_.text = var_176_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_173_1.leftNameTxt_.transform)

				arg_173_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_173_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_173_1:RecordName(arg_173_1.leftNameTxt_.text)
				SetActive(arg_173_1.iconTrs_.gameObject, false)
				arg_173_1.callingController_:SetSelectedState("normal")

				local var_176_26 = arg_173_1:GetWordFromCfg(413161042)
				local var_176_27 = arg_173_1:FormatText(var_176_26.content)

				arg_173_1.text_.text = var_176_27

				LuaForUtil.ClearLinePrefixSymbol(arg_173_1.text_)

				local var_176_28 = 35
				local var_176_29 = utf8.len(var_176_27)
				local var_176_30 = var_176_28 <= 0 and var_176_24 or var_176_24 * (var_176_29 / var_176_28)

				if var_176_30 > 0 and var_176_24 < var_176_30 then
					arg_173_1.talkMaxDuration = var_176_30

					if var_176_30 + var_176_23 > arg_173_1.duration_ then
						arg_173_1.duration_ = var_176_30 + var_176_23
					end
				end

				arg_173_1.text_.text = var_176_27
				arg_173_1.typewritter.percent = 0

				arg_173_1.typewritter:SetDirty()
				arg_173_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161042", "story_v_out_413161.awb") ~= 0 then
					local var_176_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161042", "story_v_out_413161.awb") / 1000

					if var_176_31 + var_176_23 > arg_173_1.duration_ then
						arg_173_1.duration_ = var_176_31 + var_176_23
					end

					if var_176_26.prefab_name ~= "" and arg_173_1.actors_[var_176_26.prefab_name] ~= nil then
						local var_176_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_173_1.actors_[var_176_26.prefab_name].transform, "story_v_out_413161", "413161042", "story_v_out_413161.awb")

						arg_173_1:RecordAudio("413161042", var_176_32)
						arg_173_1:RecordAudio("413161042", var_176_32)
					else
						arg_173_1:AudioAction("play", "voice", "story_v_out_413161", "413161042", "story_v_out_413161.awb")
					end

					arg_173_1:RecordHistoryTalkVoice("story_v_out_413161", "413161042", "story_v_out_413161.awb")
				end

				arg_173_1:RecordContent(arg_173_1.text_.text)
			end

			local var_176_33 = math.max(var_176_24, arg_173_1.talkMaxDuration)

			if var_176_23 <= arg_173_1.time_ and arg_173_1.time_ < var_176_23 + var_176_33 then
				arg_173_1.typewritter.percent = (arg_173_1.time_ - var_176_23) / var_176_33

				arg_173_1.typewritter:SetDirty()
			end

			if arg_173_1.time_ >= var_176_23 + var_176_33 and arg_173_1.time_ < var_176_23 + var_176_33 + arg_176_0 then
				arg_173_1.typewritter.percent = 1

				arg_173_1.typewritter:SetDirty()
				arg_173_1:ShowNextGo(true)
			end
		end
	end,
	Play413161043 = function(arg_177_0, arg_177_1)
		arg_177_1.time_ = 0
		arg_177_1.frameCnt_ = 0
		arg_177_1.state_ = "playing"
		arg_177_1.curTalkId_ = 413161043
		arg_177_1.duration_ = 11.07

		local var_177_0 = {
			zh = 6.4,
			ja = 11.066
		}
		local var_177_1 = manager.audio:GetLocalizationFlag()

		if var_177_0[var_177_1] ~= nil then
			arg_177_1.duration_ = var_177_0[var_177_1]
		end

		SetActive(arg_177_1.tipsGo_, false)

		function arg_177_1.onSingleLineFinish_()
			arg_177_1.onSingleLineUpdate_ = nil
			arg_177_1.onSingleLineFinish_ = nil
			arg_177_1.state_ = "waiting"
		end

		function arg_177_1.playNext_(arg_179_0)
			if arg_179_0 == 1 then
				arg_177_0:Play413161044(arg_177_1)
			end
		end

		function arg_177_1.onSingleLineUpdate_(arg_180_0)
			local var_180_0 = 0
			local var_180_1 = 0.9

			if var_180_0 < arg_177_1.time_ and arg_177_1.time_ <= var_180_0 + arg_180_0 then
				arg_177_1.talkMaxDuration = 0
				arg_177_1.dialogCg_.alpha = 1

				arg_177_1.dialog_:SetActive(true)
				SetActive(arg_177_1.leftNameGo_, true)

				local var_180_2 = arg_177_1:FormatText(StoryNameCfg[996].name)

				arg_177_1.leftNameTxt_.text = var_180_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_177_1.leftNameTxt_.transform)

				arg_177_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_177_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_177_1:RecordName(arg_177_1.leftNameTxt_.text)
				SetActive(arg_177_1.iconTrs_.gameObject, false)
				arg_177_1.callingController_:SetSelectedState("normal")

				local var_180_3 = arg_177_1:GetWordFromCfg(413161043)
				local var_180_4 = arg_177_1:FormatText(var_180_3.content)

				arg_177_1.text_.text = var_180_4

				LuaForUtil.ClearLinePrefixSymbol(arg_177_1.text_)

				local var_180_5 = 36
				local var_180_6 = utf8.len(var_180_4)
				local var_180_7 = var_180_5 <= 0 and var_180_1 or var_180_1 * (var_180_6 / var_180_5)

				if var_180_7 > 0 and var_180_1 < var_180_7 then
					arg_177_1.talkMaxDuration = var_180_7

					if var_180_7 + var_180_0 > arg_177_1.duration_ then
						arg_177_1.duration_ = var_180_7 + var_180_0
					end
				end

				arg_177_1.text_.text = var_180_4
				arg_177_1.typewritter.percent = 0

				arg_177_1.typewritter:SetDirty()
				arg_177_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161043", "story_v_out_413161.awb") ~= 0 then
					local var_180_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161043", "story_v_out_413161.awb") / 1000

					if var_180_8 + var_180_0 > arg_177_1.duration_ then
						arg_177_1.duration_ = var_180_8 + var_180_0
					end

					if var_180_3.prefab_name ~= "" and arg_177_1.actors_[var_180_3.prefab_name] ~= nil then
						local var_180_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_177_1.actors_[var_180_3.prefab_name].transform, "story_v_out_413161", "413161043", "story_v_out_413161.awb")

						arg_177_1:RecordAudio("413161043", var_180_9)
						arg_177_1:RecordAudio("413161043", var_180_9)
					else
						arg_177_1:AudioAction("play", "voice", "story_v_out_413161", "413161043", "story_v_out_413161.awb")
					end

					arg_177_1:RecordHistoryTalkVoice("story_v_out_413161", "413161043", "story_v_out_413161.awb")
				end

				arg_177_1:RecordContent(arg_177_1.text_.text)
			end

			local var_180_10 = math.max(var_180_1, arg_177_1.talkMaxDuration)

			if var_180_0 <= arg_177_1.time_ and arg_177_1.time_ < var_180_0 + var_180_10 then
				arg_177_1.typewritter.percent = (arg_177_1.time_ - var_180_0) / var_180_10

				arg_177_1.typewritter:SetDirty()
			end

			if arg_177_1.time_ >= var_180_0 + var_180_10 and arg_177_1.time_ < var_180_0 + var_180_10 + arg_180_0 then
				arg_177_1.typewritter.percent = 1

				arg_177_1.typewritter:SetDirty()
				arg_177_1:ShowNextGo(true)
			end
		end
	end,
	Play413161044 = function(arg_181_0, arg_181_1)
		arg_181_1.time_ = 0
		arg_181_1.frameCnt_ = 0
		arg_181_1.state_ = "playing"
		arg_181_1.curTalkId_ = 413161044
		arg_181_1.duration_ = 16.8

		local var_181_0 = {
			zh = 8.133,
			ja = 16.8
		}
		local var_181_1 = manager.audio:GetLocalizationFlag()

		if var_181_0[var_181_1] ~= nil then
			arg_181_1.duration_ = var_181_0[var_181_1]
		end

		SetActive(arg_181_1.tipsGo_, false)

		function arg_181_1.onSingleLineFinish_()
			arg_181_1.onSingleLineUpdate_ = nil
			arg_181_1.onSingleLineFinish_ = nil
			arg_181_1.state_ = "waiting"
		end

		function arg_181_1.playNext_(arg_183_0)
			if arg_183_0 == 1 then
				arg_181_0:Play413161045(arg_181_1)
			end
		end

		function arg_181_1.onSingleLineUpdate_(arg_184_0)
			local var_184_0 = 0
			local var_184_1 = 1.175

			if var_184_0 < arg_181_1.time_ and arg_181_1.time_ <= var_184_0 + arg_184_0 then
				arg_181_1.talkMaxDuration = 0
				arg_181_1.dialogCg_.alpha = 1

				arg_181_1.dialog_:SetActive(true)
				SetActive(arg_181_1.leftNameGo_, true)

				local var_184_2 = arg_181_1:FormatText(StoryNameCfg[996].name)

				arg_181_1.leftNameTxt_.text = var_184_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_181_1.leftNameTxt_.transform)

				arg_181_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_181_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_181_1:RecordName(arg_181_1.leftNameTxt_.text)
				SetActive(arg_181_1.iconTrs_.gameObject, false)
				arg_181_1.callingController_:SetSelectedState("normal")

				local var_184_3 = arg_181_1:GetWordFromCfg(413161044)
				local var_184_4 = arg_181_1:FormatText(var_184_3.content)

				arg_181_1.text_.text = var_184_4

				LuaForUtil.ClearLinePrefixSymbol(arg_181_1.text_)

				local var_184_5 = 47
				local var_184_6 = utf8.len(var_184_4)
				local var_184_7 = var_184_5 <= 0 and var_184_1 or var_184_1 * (var_184_6 / var_184_5)

				if var_184_7 > 0 and var_184_1 < var_184_7 then
					arg_181_1.talkMaxDuration = var_184_7

					if var_184_7 + var_184_0 > arg_181_1.duration_ then
						arg_181_1.duration_ = var_184_7 + var_184_0
					end
				end

				arg_181_1.text_.text = var_184_4
				arg_181_1.typewritter.percent = 0

				arg_181_1.typewritter:SetDirty()
				arg_181_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161044", "story_v_out_413161.awb") ~= 0 then
					local var_184_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161044", "story_v_out_413161.awb") / 1000

					if var_184_8 + var_184_0 > arg_181_1.duration_ then
						arg_181_1.duration_ = var_184_8 + var_184_0
					end

					if var_184_3.prefab_name ~= "" and arg_181_1.actors_[var_184_3.prefab_name] ~= nil then
						local var_184_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_181_1.actors_[var_184_3.prefab_name].transform, "story_v_out_413161", "413161044", "story_v_out_413161.awb")

						arg_181_1:RecordAudio("413161044", var_184_9)
						arg_181_1:RecordAudio("413161044", var_184_9)
					else
						arg_181_1:AudioAction("play", "voice", "story_v_out_413161", "413161044", "story_v_out_413161.awb")
					end

					arg_181_1:RecordHistoryTalkVoice("story_v_out_413161", "413161044", "story_v_out_413161.awb")
				end

				arg_181_1:RecordContent(arg_181_1.text_.text)
			end

			local var_184_10 = math.max(var_184_1, arg_181_1.talkMaxDuration)

			if var_184_0 <= arg_181_1.time_ and arg_181_1.time_ < var_184_0 + var_184_10 then
				arg_181_1.typewritter.percent = (arg_181_1.time_ - var_184_0) / var_184_10

				arg_181_1.typewritter:SetDirty()
			end

			if arg_181_1.time_ >= var_184_0 + var_184_10 and arg_181_1.time_ < var_184_0 + var_184_10 + arg_184_0 then
				arg_181_1.typewritter.percent = 1

				arg_181_1.typewritter:SetDirty()
				arg_181_1:ShowNextGo(true)
			end
		end
	end,
	Play413161045 = function(arg_185_0, arg_185_1)
		arg_185_1.time_ = 0
		arg_185_1.frameCnt_ = 0
		arg_185_1.state_ = "playing"
		arg_185_1.curTalkId_ = 413161045
		arg_185_1.duration_ = 14.83

		local var_185_0 = {
			zh = 8.3,
			ja = 14.833
		}
		local var_185_1 = manager.audio:GetLocalizationFlag()

		if var_185_0[var_185_1] ~= nil then
			arg_185_1.duration_ = var_185_0[var_185_1]
		end

		SetActive(arg_185_1.tipsGo_, false)

		function arg_185_1.onSingleLineFinish_()
			arg_185_1.onSingleLineUpdate_ = nil
			arg_185_1.onSingleLineFinish_ = nil
			arg_185_1.state_ = "waiting"
		end

		function arg_185_1.playNext_(arg_187_0)
			if arg_187_0 == 1 then
				arg_185_0:Play413161046(arg_185_1)
			end
		end

		function arg_185_1.onSingleLineUpdate_(arg_188_0)
			local var_188_0 = arg_185_1.actors_["10022"].transform
			local var_188_1 = 0

			if var_188_1 < arg_185_1.time_ and arg_185_1.time_ <= var_188_1 + arg_188_0 then
				arg_185_1.var_.moveOldPos10022 = var_188_0.localPosition
				var_188_0.localScale = Vector3.New(1, 1, 1)

				arg_185_1:CheckSpriteTmpPos("10022", 4)

				local var_188_2 = var_188_0.childCount

				for iter_188_0 = 0, var_188_2 - 1 do
					local var_188_3 = var_188_0:GetChild(iter_188_0)

					if var_188_3.name == "split_3" or not string.find(var_188_3.name, "split") then
						var_188_3.gameObject:SetActive(true)
					else
						var_188_3.gameObject:SetActive(false)
					end
				end
			end

			local var_188_4 = 0.001

			if var_188_1 <= arg_185_1.time_ and arg_185_1.time_ < var_188_1 + var_188_4 then
				local var_188_5 = (arg_185_1.time_ - var_188_1) / var_188_4
				local var_188_6 = Vector3.New(390, -315, -320)

				var_188_0.localPosition = Vector3.Lerp(arg_185_1.var_.moveOldPos10022, var_188_6, var_188_5)
			end

			if arg_185_1.time_ >= var_188_1 + var_188_4 and arg_185_1.time_ < var_188_1 + var_188_4 + arg_188_0 then
				var_188_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_188_7 = arg_185_1.actors_["10092"]
			local var_188_8 = 0

			if var_188_8 < arg_185_1.time_ and arg_185_1.time_ <= var_188_8 + arg_188_0 and not isNil(var_188_7) and arg_185_1.var_.actorSpriteComps10092 == nil then
				arg_185_1.var_.actorSpriteComps10092 = var_188_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_188_9 = 2

			if var_188_8 <= arg_185_1.time_ and arg_185_1.time_ < var_188_8 + var_188_9 and not isNil(var_188_7) then
				local var_188_10 = (arg_185_1.time_ - var_188_8) / var_188_9

				if arg_185_1.var_.actorSpriteComps10092 then
					for iter_188_1, iter_188_2 in pairs(arg_185_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_188_2 then
							if arg_185_1.isInRecall_ then
								local var_188_11 = Mathf.Lerp(iter_188_2.color.r, arg_185_1.hightColor2.r, var_188_10)
								local var_188_12 = Mathf.Lerp(iter_188_2.color.g, arg_185_1.hightColor2.g, var_188_10)
								local var_188_13 = Mathf.Lerp(iter_188_2.color.b, arg_185_1.hightColor2.b, var_188_10)

								iter_188_2.color = Color.New(var_188_11, var_188_12, var_188_13)
							else
								local var_188_14 = Mathf.Lerp(iter_188_2.color.r, 0.5, var_188_10)

								iter_188_2.color = Color.New(var_188_14, var_188_14, var_188_14)
							end
						end
					end
				end
			end

			if arg_185_1.time_ >= var_188_8 + var_188_9 and arg_185_1.time_ < var_188_8 + var_188_9 + arg_188_0 and not isNil(var_188_7) and arg_185_1.var_.actorSpriteComps10092 then
				for iter_188_3, iter_188_4 in pairs(arg_185_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_188_4 then
						if arg_185_1.isInRecall_ then
							iter_188_4.color = arg_185_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_188_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_185_1.var_.actorSpriteComps10092 = nil
			end

			local var_188_15 = arg_185_1.actors_["10022"]
			local var_188_16 = 0

			if var_188_16 < arg_185_1.time_ and arg_185_1.time_ <= var_188_16 + arg_188_0 and not isNil(var_188_15) and arg_185_1.var_.actorSpriteComps10022 == nil then
				arg_185_1.var_.actorSpriteComps10022 = var_188_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_188_17 = 2

			if var_188_16 <= arg_185_1.time_ and arg_185_1.time_ < var_188_16 + var_188_17 and not isNil(var_188_15) then
				local var_188_18 = (arg_185_1.time_ - var_188_16) / var_188_17

				if arg_185_1.var_.actorSpriteComps10022 then
					for iter_188_5, iter_188_6 in pairs(arg_185_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_188_6 then
							if arg_185_1.isInRecall_ then
								local var_188_19 = Mathf.Lerp(iter_188_6.color.r, arg_185_1.hightColor1.r, var_188_18)
								local var_188_20 = Mathf.Lerp(iter_188_6.color.g, arg_185_1.hightColor1.g, var_188_18)
								local var_188_21 = Mathf.Lerp(iter_188_6.color.b, arg_185_1.hightColor1.b, var_188_18)

								iter_188_6.color = Color.New(var_188_19, var_188_20, var_188_21)
							else
								local var_188_22 = Mathf.Lerp(iter_188_6.color.r, 1, var_188_18)

								iter_188_6.color = Color.New(var_188_22, var_188_22, var_188_22)
							end
						end
					end
				end
			end

			if arg_185_1.time_ >= var_188_16 + var_188_17 and arg_185_1.time_ < var_188_16 + var_188_17 + arg_188_0 and not isNil(var_188_15) and arg_185_1.var_.actorSpriteComps10022 then
				for iter_188_7, iter_188_8 in pairs(arg_185_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_188_8 then
						if arg_185_1.isInRecall_ then
							iter_188_8.color = arg_185_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_188_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_185_1.var_.actorSpriteComps10022 = nil
			end

			local var_188_23 = 0
			local var_188_24 = 0.875

			if var_188_23 < arg_185_1.time_ and arg_185_1.time_ <= var_188_23 + arg_188_0 then
				arg_185_1.talkMaxDuration = 0
				arg_185_1.dialogCg_.alpha = 1

				arg_185_1.dialog_:SetActive(true)
				SetActive(arg_185_1.leftNameGo_, true)

				local var_188_25 = arg_185_1:FormatText(StoryNameCfg[614].name)

				arg_185_1.leftNameTxt_.text = var_188_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_185_1.leftNameTxt_.transform)

				arg_185_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_185_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_185_1:RecordName(arg_185_1.leftNameTxt_.text)
				SetActive(arg_185_1.iconTrs_.gameObject, false)
				arg_185_1.callingController_:SetSelectedState("normal")

				local var_188_26 = arg_185_1:GetWordFromCfg(413161045)
				local var_188_27 = arg_185_1:FormatText(var_188_26.content)

				arg_185_1.text_.text = var_188_27

				LuaForUtil.ClearLinePrefixSymbol(arg_185_1.text_)

				local var_188_28 = 35
				local var_188_29 = utf8.len(var_188_27)
				local var_188_30 = var_188_28 <= 0 and var_188_24 or var_188_24 * (var_188_29 / var_188_28)

				if var_188_30 > 0 and var_188_24 < var_188_30 then
					arg_185_1.talkMaxDuration = var_188_30

					if var_188_30 + var_188_23 > arg_185_1.duration_ then
						arg_185_1.duration_ = var_188_30 + var_188_23
					end
				end

				arg_185_1.text_.text = var_188_27
				arg_185_1.typewritter.percent = 0

				arg_185_1.typewritter:SetDirty()
				arg_185_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161045", "story_v_out_413161.awb") ~= 0 then
					local var_188_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161045", "story_v_out_413161.awb") / 1000

					if var_188_31 + var_188_23 > arg_185_1.duration_ then
						arg_185_1.duration_ = var_188_31 + var_188_23
					end

					if var_188_26.prefab_name ~= "" and arg_185_1.actors_[var_188_26.prefab_name] ~= nil then
						local var_188_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_185_1.actors_[var_188_26.prefab_name].transform, "story_v_out_413161", "413161045", "story_v_out_413161.awb")

						arg_185_1:RecordAudio("413161045", var_188_32)
						arg_185_1:RecordAudio("413161045", var_188_32)
					else
						arg_185_1:AudioAction("play", "voice", "story_v_out_413161", "413161045", "story_v_out_413161.awb")
					end

					arg_185_1:RecordHistoryTalkVoice("story_v_out_413161", "413161045", "story_v_out_413161.awb")
				end

				arg_185_1:RecordContent(arg_185_1.text_.text)
			end

			local var_188_33 = math.max(var_188_24, arg_185_1.talkMaxDuration)

			if var_188_23 <= arg_185_1.time_ and arg_185_1.time_ < var_188_23 + var_188_33 then
				arg_185_1.typewritter.percent = (arg_185_1.time_ - var_188_23) / var_188_33

				arg_185_1.typewritter:SetDirty()
			end

			if arg_185_1.time_ >= var_188_23 + var_188_33 and arg_185_1.time_ < var_188_23 + var_188_33 + arg_188_0 then
				arg_185_1.typewritter.percent = 1

				arg_185_1.typewritter:SetDirty()
				arg_185_1:ShowNextGo(true)
			end
		end
	end,
	Play413161046 = function(arg_189_0, arg_189_1)
		arg_189_1.time_ = 0
		arg_189_1.frameCnt_ = 0
		arg_189_1.state_ = "playing"
		arg_189_1.curTalkId_ = 413161046
		arg_189_1.duration_ = 12.1

		local var_189_0 = {
			zh = 8.933,
			ja = 12.1
		}
		local var_189_1 = manager.audio:GetLocalizationFlag()

		if var_189_0[var_189_1] ~= nil then
			arg_189_1.duration_ = var_189_0[var_189_1]
		end

		SetActive(arg_189_1.tipsGo_, false)

		function arg_189_1.onSingleLineFinish_()
			arg_189_1.onSingleLineUpdate_ = nil
			arg_189_1.onSingleLineFinish_ = nil
			arg_189_1.state_ = "waiting"
		end

		function arg_189_1.playNext_(arg_191_0)
			if arg_191_0 == 1 then
				arg_189_0:Play413161047(arg_189_1)
			end
		end

		function arg_189_1.onSingleLineUpdate_(arg_192_0)
			local var_192_0 = arg_189_1.actors_["10022"].transform
			local var_192_1 = 0

			if var_192_1 < arg_189_1.time_ and arg_189_1.time_ <= var_192_1 + arg_192_0 then
				arg_189_1.var_.moveOldPos10022 = var_192_0.localPosition
				var_192_0.localScale = Vector3.New(1, 1, 1)

				arg_189_1:CheckSpriteTmpPos("10022", 4)

				local var_192_2 = var_192_0.childCount

				for iter_192_0 = 0, var_192_2 - 1 do
					local var_192_3 = var_192_0:GetChild(iter_192_0)

					if var_192_3.name == "" or not string.find(var_192_3.name, "split") then
						var_192_3.gameObject:SetActive(true)
					else
						var_192_3.gameObject:SetActive(false)
					end
				end
			end

			local var_192_4 = 0.001

			if var_192_1 <= arg_189_1.time_ and arg_189_1.time_ < var_192_1 + var_192_4 then
				local var_192_5 = (arg_189_1.time_ - var_192_1) / var_192_4
				local var_192_6 = Vector3.New(390, -315, -320)

				var_192_0.localPosition = Vector3.Lerp(arg_189_1.var_.moveOldPos10022, var_192_6, var_192_5)
			end

			if arg_189_1.time_ >= var_192_1 + var_192_4 and arg_189_1.time_ < var_192_1 + var_192_4 + arg_192_0 then
				var_192_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_192_7 = arg_189_1.actors_["10022"]
			local var_192_8 = 0

			if var_192_8 < arg_189_1.time_ and arg_189_1.time_ <= var_192_8 + arg_192_0 and not isNil(var_192_7) and arg_189_1.var_.actorSpriteComps10022 == nil then
				arg_189_1.var_.actorSpriteComps10022 = var_192_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_192_9 = 2

			if var_192_8 <= arg_189_1.time_ and arg_189_1.time_ < var_192_8 + var_192_9 and not isNil(var_192_7) then
				local var_192_10 = (arg_189_1.time_ - var_192_8) / var_192_9

				if arg_189_1.var_.actorSpriteComps10022 then
					for iter_192_1, iter_192_2 in pairs(arg_189_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_192_2 then
							if arg_189_1.isInRecall_ then
								local var_192_11 = Mathf.Lerp(iter_192_2.color.r, arg_189_1.hightColor2.r, var_192_10)
								local var_192_12 = Mathf.Lerp(iter_192_2.color.g, arg_189_1.hightColor2.g, var_192_10)
								local var_192_13 = Mathf.Lerp(iter_192_2.color.b, arg_189_1.hightColor2.b, var_192_10)

								iter_192_2.color = Color.New(var_192_11, var_192_12, var_192_13)
							else
								local var_192_14 = Mathf.Lerp(iter_192_2.color.r, 0.5, var_192_10)

								iter_192_2.color = Color.New(var_192_14, var_192_14, var_192_14)
							end
						end
					end
				end
			end

			if arg_189_1.time_ >= var_192_8 + var_192_9 and arg_189_1.time_ < var_192_8 + var_192_9 + arg_192_0 and not isNil(var_192_7) and arg_189_1.var_.actorSpriteComps10022 then
				for iter_192_3, iter_192_4 in pairs(arg_189_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_192_4 then
						if arg_189_1.isInRecall_ then
							iter_192_4.color = arg_189_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_192_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_189_1.var_.actorSpriteComps10022 = nil
			end

			local var_192_15 = arg_189_1.actors_["10092"]
			local var_192_16 = 0

			if var_192_16 < arg_189_1.time_ and arg_189_1.time_ <= var_192_16 + arg_192_0 and not isNil(var_192_15) and arg_189_1.var_.actorSpriteComps10092 == nil then
				arg_189_1.var_.actorSpriteComps10092 = var_192_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_192_17 = 2

			if var_192_16 <= arg_189_1.time_ and arg_189_1.time_ < var_192_16 + var_192_17 and not isNil(var_192_15) then
				local var_192_18 = (arg_189_1.time_ - var_192_16) / var_192_17

				if arg_189_1.var_.actorSpriteComps10092 then
					for iter_192_5, iter_192_6 in pairs(arg_189_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_192_6 then
							if arg_189_1.isInRecall_ then
								local var_192_19 = Mathf.Lerp(iter_192_6.color.r, arg_189_1.hightColor1.r, var_192_18)
								local var_192_20 = Mathf.Lerp(iter_192_6.color.g, arg_189_1.hightColor1.g, var_192_18)
								local var_192_21 = Mathf.Lerp(iter_192_6.color.b, arg_189_1.hightColor1.b, var_192_18)

								iter_192_6.color = Color.New(var_192_19, var_192_20, var_192_21)
							else
								local var_192_22 = Mathf.Lerp(iter_192_6.color.r, 1, var_192_18)

								iter_192_6.color = Color.New(var_192_22, var_192_22, var_192_22)
							end
						end
					end
				end
			end

			if arg_189_1.time_ >= var_192_16 + var_192_17 and arg_189_1.time_ < var_192_16 + var_192_17 + arg_192_0 and not isNil(var_192_15) and arg_189_1.var_.actorSpriteComps10092 then
				for iter_192_7, iter_192_8 in pairs(arg_189_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_192_8 then
						if arg_189_1.isInRecall_ then
							iter_192_8.color = arg_189_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_192_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_189_1.var_.actorSpriteComps10092 = nil
			end

			local var_192_23 = 0
			local var_192_24 = 1.025

			if var_192_23 < arg_189_1.time_ and arg_189_1.time_ <= var_192_23 + arg_192_0 then
				arg_189_1.talkMaxDuration = 0
				arg_189_1.dialogCg_.alpha = 1

				arg_189_1.dialog_:SetActive(true)
				SetActive(arg_189_1.leftNameGo_, true)

				local var_192_25 = arg_189_1:FormatText(StoryNameCfg[996].name)

				arg_189_1.leftNameTxt_.text = var_192_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_189_1.leftNameTxt_.transform)

				arg_189_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_189_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_189_1:RecordName(arg_189_1.leftNameTxt_.text)
				SetActive(arg_189_1.iconTrs_.gameObject, false)
				arg_189_1.callingController_:SetSelectedState("normal")

				local var_192_26 = arg_189_1:GetWordFromCfg(413161046)
				local var_192_27 = arg_189_1:FormatText(var_192_26.content)

				arg_189_1.text_.text = var_192_27

				LuaForUtil.ClearLinePrefixSymbol(arg_189_1.text_)

				local var_192_28 = 41
				local var_192_29 = utf8.len(var_192_27)
				local var_192_30 = var_192_28 <= 0 and var_192_24 or var_192_24 * (var_192_29 / var_192_28)

				if var_192_30 > 0 and var_192_24 < var_192_30 then
					arg_189_1.talkMaxDuration = var_192_30

					if var_192_30 + var_192_23 > arg_189_1.duration_ then
						arg_189_1.duration_ = var_192_30 + var_192_23
					end
				end

				arg_189_1.text_.text = var_192_27
				arg_189_1.typewritter.percent = 0

				arg_189_1.typewritter:SetDirty()
				arg_189_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161046", "story_v_out_413161.awb") ~= 0 then
					local var_192_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161046", "story_v_out_413161.awb") / 1000

					if var_192_31 + var_192_23 > arg_189_1.duration_ then
						arg_189_1.duration_ = var_192_31 + var_192_23
					end

					if var_192_26.prefab_name ~= "" and arg_189_1.actors_[var_192_26.prefab_name] ~= nil then
						local var_192_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_189_1.actors_[var_192_26.prefab_name].transform, "story_v_out_413161", "413161046", "story_v_out_413161.awb")

						arg_189_1:RecordAudio("413161046", var_192_32)
						arg_189_1:RecordAudio("413161046", var_192_32)
					else
						arg_189_1:AudioAction("play", "voice", "story_v_out_413161", "413161046", "story_v_out_413161.awb")
					end

					arg_189_1:RecordHistoryTalkVoice("story_v_out_413161", "413161046", "story_v_out_413161.awb")
				end

				arg_189_1:RecordContent(arg_189_1.text_.text)
			end

			local var_192_33 = math.max(var_192_24, arg_189_1.talkMaxDuration)

			if var_192_23 <= arg_189_1.time_ and arg_189_1.time_ < var_192_23 + var_192_33 then
				arg_189_1.typewritter.percent = (arg_189_1.time_ - var_192_23) / var_192_33

				arg_189_1.typewritter:SetDirty()
			end

			if arg_189_1.time_ >= var_192_23 + var_192_33 and arg_189_1.time_ < var_192_23 + var_192_33 + arg_192_0 then
				arg_189_1.typewritter.percent = 1

				arg_189_1.typewritter:SetDirty()
				arg_189_1:ShowNextGo(true)
			end
		end
	end,
	Play413161047 = function(arg_193_0, arg_193_1)
		arg_193_1.time_ = 0
		arg_193_1.frameCnt_ = 0
		arg_193_1.state_ = "playing"
		arg_193_1.curTalkId_ = 413161047
		arg_193_1.duration_ = 6.03

		local var_193_0 = {
			zh = 5.633,
			ja = 6.033
		}
		local var_193_1 = manager.audio:GetLocalizationFlag()

		if var_193_0[var_193_1] ~= nil then
			arg_193_1.duration_ = var_193_0[var_193_1]
		end

		SetActive(arg_193_1.tipsGo_, false)

		function arg_193_1.onSingleLineFinish_()
			arg_193_1.onSingleLineUpdate_ = nil
			arg_193_1.onSingleLineFinish_ = nil
			arg_193_1.state_ = "waiting"
		end

		function arg_193_1.playNext_(arg_195_0)
			if arg_195_0 == 1 then
				arg_193_0:Play413161048(arg_193_1)
			end
		end

		function arg_193_1.onSingleLineUpdate_(arg_196_0)
			local var_196_0 = 0
			local var_196_1 = 0.8

			if var_196_0 < arg_193_1.time_ and arg_193_1.time_ <= var_196_0 + arg_196_0 then
				arg_193_1.talkMaxDuration = 0
				arg_193_1.dialogCg_.alpha = 1

				arg_193_1.dialog_:SetActive(true)
				SetActive(arg_193_1.leftNameGo_, true)

				local var_196_2 = arg_193_1:FormatText(StoryNameCfg[996].name)

				arg_193_1.leftNameTxt_.text = var_196_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_193_1.leftNameTxt_.transform)

				arg_193_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_193_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_193_1:RecordName(arg_193_1.leftNameTxt_.text)
				SetActive(arg_193_1.iconTrs_.gameObject, false)
				arg_193_1.callingController_:SetSelectedState("normal")

				local var_196_3 = arg_193_1:GetWordFromCfg(413161047)
				local var_196_4 = arg_193_1:FormatText(var_196_3.content)

				arg_193_1.text_.text = var_196_4

				LuaForUtil.ClearLinePrefixSymbol(arg_193_1.text_)

				local var_196_5 = 32
				local var_196_6 = utf8.len(var_196_4)
				local var_196_7 = var_196_5 <= 0 and var_196_1 or var_196_1 * (var_196_6 / var_196_5)

				if var_196_7 > 0 and var_196_1 < var_196_7 then
					arg_193_1.talkMaxDuration = var_196_7

					if var_196_7 + var_196_0 > arg_193_1.duration_ then
						arg_193_1.duration_ = var_196_7 + var_196_0
					end
				end

				arg_193_1.text_.text = var_196_4
				arg_193_1.typewritter.percent = 0

				arg_193_1.typewritter:SetDirty()
				arg_193_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161047", "story_v_out_413161.awb") ~= 0 then
					local var_196_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161047", "story_v_out_413161.awb") / 1000

					if var_196_8 + var_196_0 > arg_193_1.duration_ then
						arg_193_1.duration_ = var_196_8 + var_196_0
					end

					if var_196_3.prefab_name ~= "" and arg_193_1.actors_[var_196_3.prefab_name] ~= nil then
						local var_196_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_193_1.actors_[var_196_3.prefab_name].transform, "story_v_out_413161", "413161047", "story_v_out_413161.awb")

						arg_193_1:RecordAudio("413161047", var_196_9)
						arg_193_1:RecordAudio("413161047", var_196_9)
					else
						arg_193_1:AudioAction("play", "voice", "story_v_out_413161", "413161047", "story_v_out_413161.awb")
					end

					arg_193_1:RecordHistoryTalkVoice("story_v_out_413161", "413161047", "story_v_out_413161.awb")
				end

				arg_193_1:RecordContent(arg_193_1.text_.text)
			end

			local var_196_10 = math.max(var_196_1, arg_193_1.talkMaxDuration)

			if var_196_0 <= arg_193_1.time_ and arg_193_1.time_ < var_196_0 + var_196_10 then
				arg_193_1.typewritter.percent = (arg_193_1.time_ - var_196_0) / var_196_10

				arg_193_1.typewritter:SetDirty()
			end

			if arg_193_1.time_ >= var_196_0 + var_196_10 and arg_193_1.time_ < var_196_0 + var_196_10 + arg_196_0 then
				arg_193_1.typewritter.percent = 1

				arg_193_1.typewritter:SetDirty()
				arg_193_1:ShowNextGo(true)
			end
		end
	end,
	Play413161048 = function(arg_197_0, arg_197_1)
		arg_197_1.time_ = 0
		arg_197_1.frameCnt_ = 0
		arg_197_1.state_ = "playing"
		arg_197_1.curTalkId_ = 413161048
		arg_197_1.duration_ = 16.4

		local var_197_0 = {
			zh = 9.133,
			ja = 16.4
		}
		local var_197_1 = manager.audio:GetLocalizationFlag()

		if var_197_0[var_197_1] ~= nil then
			arg_197_1.duration_ = var_197_0[var_197_1]
		end

		SetActive(arg_197_1.tipsGo_, false)

		function arg_197_1.onSingleLineFinish_()
			arg_197_1.onSingleLineUpdate_ = nil
			arg_197_1.onSingleLineFinish_ = nil
			arg_197_1.state_ = "waiting"
		end

		function arg_197_1.playNext_(arg_199_0)
			if arg_199_0 == 1 then
				arg_197_0:Play413161049(arg_197_1)
			end
		end

		function arg_197_1.onSingleLineUpdate_(arg_200_0)
			local var_200_0 = arg_197_1.actors_["10092"]
			local var_200_1 = 0

			if var_200_1 < arg_197_1.time_ and arg_197_1.time_ <= var_200_1 + arg_200_0 and not isNil(var_200_0) and arg_197_1.var_.actorSpriteComps10092 == nil then
				arg_197_1.var_.actorSpriteComps10092 = var_200_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_200_2 = 2

			if var_200_1 <= arg_197_1.time_ and arg_197_1.time_ < var_200_1 + var_200_2 and not isNil(var_200_0) then
				local var_200_3 = (arg_197_1.time_ - var_200_1) / var_200_2

				if arg_197_1.var_.actorSpriteComps10092 then
					for iter_200_0, iter_200_1 in pairs(arg_197_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_200_1 then
							if arg_197_1.isInRecall_ then
								local var_200_4 = Mathf.Lerp(iter_200_1.color.r, arg_197_1.hightColor2.r, var_200_3)
								local var_200_5 = Mathf.Lerp(iter_200_1.color.g, arg_197_1.hightColor2.g, var_200_3)
								local var_200_6 = Mathf.Lerp(iter_200_1.color.b, arg_197_1.hightColor2.b, var_200_3)

								iter_200_1.color = Color.New(var_200_4, var_200_5, var_200_6)
							else
								local var_200_7 = Mathf.Lerp(iter_200_1.color.r, 0.5, var_200_3)

								iter_200_1.color = Color.New(var_200_7, var_200_7, var_200_7)
							end
						end
					end
				end
			end

			if arg_197_1.time_ >= var_200_1 + var_200_2 and arg_197_1.time_ < var_200_1 + var_200_2 + arg_200_0 and not isNil(var_200_0) and arg_197_1.var_.actorSpriteComps10092 then
				for iter_200_2, iter_200_3 in pairs(arg_197_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_200_3 then
						if arg_197_1.isInRecall_ then
							iter_200_3.color = arg_197_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_200_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_197_1.var_.actorSpriteComps10092 = nil
			end

			local var_200_8 = arg_197_1.actors_["10022"]
			local var_200_9 = 0

			if var_200_9 < arg_197_1.time_ and arg_197_1.time_ <= var_200_9 + arg_200_0 and not isNil(var_200_8) and arg_197_1.var_.actorSpriteComps10022 == nil then
				arg_197_1.var_.actorSpriteComps10022 = var_200_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_200_10 = 2

			if var_200_9 <= arg_197_1.time_ and arg_197_1.time_ < var_200_9 + var_200_10 and not isNil(var_200_8) then
				local var_200_11 = (arg_197_1.time_ - var_200_9) / var_200_10

				if arg_197_1.var_.actorSpriteComps10022 then
					for iter_200_4, iter_200_5 in pairs(arg_197_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_200_5 then
							if arg_197_1.isInRecall_ then
								local var_200_12 = Mathf.Lerp(iter_200_5.color.r, arg_197_1.hightColor1.r, var_200_11)
								local var_200_13 = Mathf.Lerp(iter_200_5.color.g, arg_197_1.hightColor1.g, var_200_11)
								local var_200_14 = Mathf.Lerp(iter_200_5.color.b, arg_197_1.hightColor1.b, var_200_11)

								iter_200_5.color = Color.New(var_200_12, var_200_13, var_200_14)
							else
								local var_200_15 = Mathf.Lerp(iter_200_5.color.r, 1, var_200_11)

								iter_200_5.color = Color.New(var_200_15, var_200_15, var_200_15)
							end
						end
					end
				end
			end

			if arg_197_1.time_ >= var_200_9 + var_200_10 and arg_197_1.time_ < var_200_9 + var_200_10 + arg_200_0 and not isNil(var_200_8) and arg_197_1.var_.actorSpriteComps10022 then
				for iter_200_6, iter_200_7 in pairs(arg_197_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_200_7 then
						if arg_197_1.isInRecall_ then
							iter_200_7.color = arg_197_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_200_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_197_1.var_.actorSpriteComps10022 = nil
			end

			local var_200_16 = 0
			local var_200_17 = 0.975

			if var_200_16 < arg_197_1.time_ and arg_197_1.time_ <= var_200_16 + arg_200_0 then
				arg_197_1.talkMaxDuration = 0
				arg_197_1.dialogCg_.alpha = 1

				arg_197_1.dialog_:SetActive(true)
				SetActive(arg_197_1.leftNameGo_, true)

				local var_200_18 = arg_197_1:FormatText(StoryNameCfg[614].name)

				arg_197_1.leftNameTxt_.text = var_200_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_197_1.leftNameTxt_.transform)

				arg_197_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_197_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_197_1:RecordName(arg_197_1.leftNameTxt_.text)
				SetActive(arg_197_1.iconTrs_.gameObject, false)
				arg_197_1.callingController_:SetSelectedState("normal")

				local var_200_19 = arg_197_1:GetWordFromCfg(413161048)
				local var_200_20 = arg_197_1:FormatText(var_200_19.content)

				arg_197_1.text_.text = var_200_20

				LuaForUtil.ClearLinePrefixSymbol(arg_197_1.text_)

				local var_200_21 = 39
				local var_200_22 = utf8.len(var_200_20)
				local var_200_23 = var_200_21 <= 0 and var_200_17 or var_200_17 * (var_200_22 / var_200_21)

				if var_200_23 > 0 and var_200_17 < var_200_23 then
					arg_197_1.talkMaxDuration = var_200_23

					if var_200_23 + var_200_16 > arg_197_1.duration_ then
						arg_197_1.duration_ = var_200_23 + var_200_16
					end
				end

				arg_197_1.text_.text = var_200_20
				arg_197_1.typewritter.percent = 0

				arg_197_1.typewritter:SetDirty()
				arg_197_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161048", "story_v_out_413161.awb") ~= 0 then
					local var_200_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161048", "story_v_out_413161.awb") / 1000

					if var_200_24 + var_200_16 > arg_197_1.duration_ then
						arg_197_1.duration_ = var_200_24 + var_200_16
					end

					if var_200_19.prefab_name ~= "" and arg_197_1.actors_[var_200_19.prefab_name] ~= nil then
						local var_200_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_197_1.actors_[var_200_19.prefab_name].transform, "story_v_out_413161", "413161048", "story_v_out_413161.awb")

						arg_197_1:RecordAudio("413161048", var_200_25)
						arg_197_1:RecordAudio("413161048", var_200_25)
					else
						arg_197_1:AudioAction("play", "voice", "story_v_out_413161", "413161048", "story_v_out_413161.awb")
					end

					arg_197_1:RecordHistoryTalkVoice("story_v_out_413161", "413161048", "story_v_out_413161.awb")
				end

				arg_197_1:RecordContent(arg_197_1.text_.text)
			end

			local var_200_26 = math.max(var_200_17, arg_197_1.talkMaxDuration)

			if var_200_16 <= arg_197_1.time_ and arg_197_1.time_ < var_200_16 + var_200_26 then
				arg_197_1.typewritter.percent = (arg_197_1.time_ - var_200_16) / var_200_26

				arg_197_1.typewritter:SetDirty()
			end

			if arg_197_1.time_ >= var_200_16 + var_200_26 and arg_197_1.time_ < var_200_16 + var_200_26 + arg_200_0 then
				arg_197_1.typewritter.percent = 1

				arg_197_1.typewritter:SetDirty()
				arg_197_1:ShowNextGo(true)
			end
		end
	end,
	Play413161049 = function(arg_201_0, arg_201_1)
		arg_201_1.time_ = 0
		arg_201_1.frameCnt_ = 0
		arg_201_1.state_ = "playing"
		arg_201_1.curTalkId_ = 413161049
		arg_201_1.duration_ = 7.57

		local var_201_0 = {
			zh = 7.566,
			ja = 4.233
		}
		local var_201_1 = manager.audio:GetLocalizationFlag()

		if var_201_0[var_201_1] ~= nil then
			arg_201_1.duration_ = var_201_0[var_201_1]
		end

		SetActive(arg_201_1.tipsGo_, false)

		function arg_201_1.onSingleLineFinish_()
			arg_201_1.onSingleLineUpdate_ = nil
			arg_201_1.onSingleLineFinish_ = nil
			arg_201_1.state_ = "waiting"
		end

		function arg_201_1.playNext_(arg_203_0)
			if arg_203_0 == 1 then
				arg_201_0:Play413161050(arg_201_1)
			end
		end

		function arg_201_1.onSingleLineUpdate_(arg_204_0)
			local var_204_0 = arg_201_1.actors_["10022"]
			local var_204_1 = 0

			if var_204_1 < arg_201_1.time_ and arg_201_1.time_ <= var_204_1 + arg_204_0 and not isNil(var_204_0) and arg_201_1.var_.actorSpriteComps10022 == nil then
				arg_201_1.var_.actorSpriteComps10022 = var_204_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_204_2 = 2

			if var_204_1 <= arg_201_1.time_ and arg_201_1.time_ < var_204_1 + var_204_2 and not isNil(var_204_0) then
				local var_204_3 = (arg_201_1.time_ - var_204_1) / var_204_2

				if arg_201_1.var_.actorSpriteComps10022 then
					for iter_204_0, iter_204_1 in pairs(arg_201_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_204_1 then
							if arg_201_1.isInRecall_ then
								local var_204_4 = Mathf.Lerp(iter_204_1.color.r, arg_201_1.hightColor1.r, var_204_3)
								local var_204_5 = Mathf.Lerp(iter_204_1.color.g, arg_201_1.hightColor1.g, var_204_3)
								local var_204_6 = Mathf.Lerp(iter_204_1.color.b, arg_201_1.hightColor1.b, var_204_3)

								iter_204_1.color = Color.New(var_204_4, var_204_5, var_204_6)
							else
								local var_204_7 = Mathf.Lerp(iter_204_1.color.r, 1, var_204_3)

								iter_204_1.color = Color.New(var_204_7, var_204_7, var_204_7)
							end
						end
					end
				end
			end

			if arg_201_1.time_ >= var_204_1 + var_204_2 and arg_201_1.time_ < var_204_1 + var_204_2 + arg_204_0 and not isNil(var_204_0) and arg_201_1.var_.actorSpriteComps10022 then
				for iter_204_2, iter_204_3 in pairs(arg_201_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_204_3 then
						if arg_201_1.isInRecall_ then
							iter_204_3.color = arg_201_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_204_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_201_1.var_.actorSpriteComps10022 = nil
			end

			local var_204_8 = 0
			local var_204_9 = 0.85

			if var_204_8 < arg_201_1.time_ and arg_201_1.time_ <= var_204_8 + arg_204_0 then
				arg_201_1.talkMaxDuration = 0
				arg_201_1.dialogCg_.alpha = 1

				arg_201_1.dialog_:SetActive(true)
				SetActive(arg_201_1.leftNameGo_, true)

				local var_204_10 = arg_201_1:FormatText(StoryNameCfg[614].name)

				arg_201_1.leftNameTxt_.text = var_204_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_201_1.leftNameTxt_.transform)

				arg_201_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_201_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_201_1:RecordName(arg_201_1.leftNameTxt_.text)
				SetActive(arg_201_1.iconTrs_.gameObject, false)
				arg_201_1.callingController_:SetSelectedState("normal")

				local var_204_11 = arg_201_1:GetWordFromCfg(413161049)
				local var_204_12 = arg_201_1:FormatText(var_204_11.content)

				arg_201_1.text_.text = var_204_12

				LuaForUtil.ClearLinePrefixSymbol(arg_201_1.text_)

				local var_204_13 = 34
				local var_204_14 = utf8.len(var_204_12)
				local var_204_15 = var_204_13 <= 0 and var_204_9 or var_204_9 * (var_204_14 / var_204_13)

				if var_204_15 > 0 and var_204_9 < var_204_15 then
					arg_201_1.talkMaxDuration = var_204_15

					if var_204_15 + var_204_8 > arg_201_1.duration_ then
						arg_201_1.duration_ = var_204_15 + var_204_8
					end
				end

				arg_201_1.text_.text = var_204_12
				arg_201_1.typewritter.percent = 0

				arg_201_1.typewritter:SetDirty()
				arg_201_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161049", "story_v_out_413161.awb") ~= 0 then
					local var_204_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161049", "story_v_out_413161.awb") / 1000

					if var_204_16 + var_204_8 > arg_201_1.duration_ then
						arg_201_1.duration_ = var_204_16 + var_204_8
					end

					if var_204_11.prefab_name ~= "" and arg_201_1.actors_[var_204_11.prefab_name] ~= nil then
						local var_204_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_201_1.actors_[var_204_11.prefab_name].transform, "story_v_out_413161", "413161049", "story_v_out_413161.awb")

						arg_201_1:RecordAudio("413161049", var_204_17)
						arg_201_1:RecordAudio("413161049", var_204_17)
					else
						arg_201_1:AudioAction("play", "voice", "story_v_out_413161", "413161049", "story_v_out_413161.awb")
					end

					arg_201_1:RecordHistoryTalkVoice("story_v_out_413161", "413161049", "story_v_out_413161.awb")
				end

				arg_201_1:RecordContent(arg_201_1.text_.text)
			end

			local var_204_18 = math.max(var_204_9, arg_201_1.talkMaxDuration)

			if var_204_8 <= arg_201_1.time_ and arg_201_1.time_ < var_204_8 + var_204_18 then
				arg_201_1.typewritter.percent = (arg_201_1.time_ - var_204_8) / var_204_18

				arg_201_1.typewritter:SetDirty()
			end

			if arg_201_1.time_ >= var_204_8 + var_204_18 and arg_201_1.time_ < var_204_8 + var_204_18 + arg_204_0 then
				arg_201_1.typewritter.percent = 1

				arg_201_1.typewritter:SetDirty()
				arg_201_1:ShowNextGo(true)
			end
		end
	end,
	Play413161050 = function(arg_205_0, arg_205_1)
		arg_205_1.time_ = 0
		arg_205_1.frameCnt_ = 0
		arg_205_1.state_ = "playing"
		arg_205_1.curTalkId_ = 413161050
		arg_205_1.duration_ = 10.23

		local var_205_0 = {
			zh = 6.066,
			ja = 10.233
		}
		local var_205_1 = manager.audio:GetLocalizationFlag()

		if var_205_0[var_205_1] ~= nil then
			arg_205_1.duration_ = var_205_0[var_205_1]
		end

		SetActive(arg_205_1.tipsGo_, false)

		function arg_205_1.onSingleLineFinish_()
			arg_205_1.onSingleLineUpdate_ = nil
			arg_205_1.onSingleLineFinish_ = nil
			arg_205_1.state_ = "waiting"
		end

		function arg_205_1.playNext_(arg_207_0)
			if arg_207_0 == 1 then
				arg_205_0:Play413161051(arg_205_1)
			end
		end

		function arg_205_1.onSingleLineUpdate_(arg_208_0)
			local var_208_0 = arg_205_1.actors_["10092"].transform
			local var_208_1 = 0

			if var_208_1 < arg_205_1.time_ and arg_205_1.time_ <= var_208_1 + arg_208_0 then
				arg_205_1.var_.moveOldPos10092 = var_208_0.localPosition
				var_208_0.localScale = Vector3.New(1, 1, 1)

				arg_205_1:CheckSpriteTmpPos("10092", 2)

				local var_208_2 = var_208_0.childCount

				for iter_208_0 = 0, var_208_2 - 1 do
					local var_208_3 = var_208_0:GetChild(iter_208_0)

					if var_208_3.name == "split_6" or not string.find(var_208_3.name, "split") then
						var_208_3.gameObject:SetActive(true)
					else
						var_208_3.gameObject:SetActive(false)
					end
				end
			end

			local var_208_4 = 0.001

			if var_208_1 <= arg_205_1.time_ and arg_205_1.time_ < var_208_1 + var_208_4 then
				local var_208_5 = (arg_205_1.time_ - var_208_1) / var_208_4
				local var_208_6 = Vector3.New(-389.49, -300, -295)

				var_208_0.localPosition = Vector3.Lerp(arg_205_1.var_.moveOldPos10092, var_208_6, var_208_5)
			end

			if arg_205_1.time_ >= var_208_1 + var_208_4 and arg_205_1.time_ < var_208_1 + var_208_4 + arg_208_0 then
				var_208_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_208_7 = arg_205_1.actors_["10022"]
			local var_208_8 = 0

			if var_208_8 < arg_205_1.time_ and arg_205_1.time_ <= var_208_8 + arg_208_0 and not isNil(var_208_7) and arg_205_1.var_.actorSpriteComps10022 == nil then
				arg_205_1.var_.actorSpriteComps10022 = var_208_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_208_9 = 2

			if var_208_8 <= arg_205_1.time_ and arg_205_1.time_ < var_208_8 + var_208_9 and not isNil(var_208_7) then
				local var_208_10 = (arg_205_1.time_ - var_208_8) / var_208_9

				if arg_205_1.var_.actorSpriteComps10022 then
					for iter_208_1, iter_208_2 in pairs(arg_205_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_208_2 then
							if arg_205_1.isInRecall_ then
								local var_208_11 = Mathf.Lerp(iter_208_2.color.r, arg_205_1.hightColor2.r, var_208_10)
								local var_208_12 = Mathf.Lerp(iter_208_2.color.g, arg_205_1.hightColor2.g, var_208_10)
								local var_208_13 = Mathf.Lerp(iter_208_2.color.b, arg_205_1.hightColor2.b, var_208_10)

								iter_208_2.color = Color.New(var_208_11, var_208_12, var_208_13)
							else
								local var_208_14 = Mathf.Lerp(iter_208_2.color.r, 0.5, var_208_10)

								iter_208_2.color = Color.New(var_208_14, var_208_14, var_208_14)
							end
						end
					end
				end
			end

			if arg_205_1.time_ >= var_208_8 + var_208_9 and arg_205_1.time_ < var_208_8 + var_208_9 + arg_208_0 and not isNil(var_208_7) and arg_205_1.var_.actorSpriteComps10022 then
				for iter_208_3, iter_208_4 in pairs(arg_205_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_208_4 then
						if arg_205_1.isInRecall_ then
							iter_208_4.color = arg_205_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_208_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_205_1.var_.actorSpriteComps10022 = nil
			end

			local var_208_15 = arg_205_1.actors_["10092"]
			local var_208_16 = 0

			if var_208_16 < arg_205_1.time_ and arg_205_1.time_ <= var_208_16 + arg_208_0 and not isNil(var_208_15) and arg_205_1.var_.actorSpriteComps10092 == nil then
				arg_205_1.var_.actorSpriteComps10092 = var_208_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_208_17 = 2

			if var_208_16 <= arg_205_1.time_ and arg_205_1.time_ < var_208_16 + var_208_17 and not isNil(var_208_15) then
				local var_208_18 = (arg_205_1.time_ - var_208_16) / var_208_17

				if arg_205_1.var_.actorSpriteComps10092 then
					for iter_208_5, iter_208_6 in pairs(arg_205_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_208_6 then
							if arg_205_1.isInRecall_ then
								local var_208_19 = Mathf.Lerp(iter_208_6.color.r, arg_205_1.hightColor1.r, var_208_18)
								local var_208_20 = Mathf.Lerp(iter_208_6.color.g, arg_205_1.hightColor1.g, var_208_18)
								local var_208_21 = Mathf.Lerp(iter_208_6.color.b, arg_205_1.hightColor1.b, var_208_18)

								iter_208_6.color = Color.New(var_208_19, var_208_20, var_208_21)
							else
								local var_208_22 = Mathf.Lerp(iter_208_6.color.r, 1, var_208_18)

								iter_208_6.color = Color.New(var_208_22, var_208_22, var_208_22)
							end
						end
					end
				end
			end

			if arg_205_1.time_ >= var_208_16 + var_208_17 and arg_205_1.time_ < var_208_16 + var_208_17 + arg_208_0 and not isNil(var_208_15) and arg_205_1.var_.actorSpriteComps10092 then
				for iter_208_7, iter_208_8 in pairs(arg_205_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_208_8 then
						if arg_205_1.isInRecall_ then
							iter_208_8.color = arg_205_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_208_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_205_1.var_.actorSpriteComps10092 = nil
			end

			local var_208_23 = 0
			local var_208_24 = 0.775

			if var_208_23 < arg_205_1.time_ and arg_205_1.time_ <= var_208_23 + arg_208_0 then
				arg_205_1.talkMaxDuration = 0
				arg_205_1.dialogCg_.alpha = 1

				arg_205_1.dialog_:SetActive(true)
				SetActive(arg_205_1.leftNameGo_, true)

				local var_208_25 = arg_205_1:FormatText(StoryNameCfg[996].name)

				arg_205_1.leftNameTxt_.text = var_208_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_205_1.leftNameTxt_.transform)

				arg_205_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_205_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_205_1:RecordName(arg_205_1.leftNameTxt_.text)
				SetActive(arg_205_1.iconTrs_.gameObject, false)
				arg_205_1.callingController_:SetSelectedState("normal")

				local var_208_26 = arg_205_1:GetWordFromCfg(413161050)
				local var_208_27 = arg_205_1:FormatText(var_208_26.content)

				arg_205_1.text_.text = var_208_27

				LuaForUtil.ClearLinePrefixSymbol(arg_205_1.text_)

				local var_208_28 = 31
				local var_208_29 = utf8.len(var_208_27)
				local var_208_30 = var_208_28 <= 0 and var_208_24 or var_208_24 * (var_208_29 / var_208_28)

				if var_208_30 > 0 and var_208_24 < var_208_30 then
					arg_205_1.talkMaxDuration = var_208_30

					if var_208_30 + var_208_23 > arg_205_1.duration_ then
						arg_205_1.duration_ = var_208_30 + var_208_23
					end
				end

				arg_205_1.text_.text = var_208_27
				arg_205_1.typewritter.percent = 0

				arg_205_1.typewritter:SetDirty()
				arg_205_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161050", "story_v_out_413161.awb") ~= 0 then
					local var_208_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161050", "story_v_out_413161.awb") / 1000

					if var_208_31 + var_208_23 > arg_205_1.duration_ then
						arg_205_1.duration_ = var_208_31 + var_208_23
					end

					if var_208_26.prefab_name ~= "" and arg_205_1.actors_[var_208_26.prefab_name] ~= nil then
						local var_208_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_205_1.actors_[var_208_26.prefab_name].transform, "story_v_out_413161", "413161050", "story_v_out_413161.awb")

						arg_205_1:RecordAudio("413161050", var_208_32)
						arg_205_1:RecordAudio("413161050", var_208_32)
					else
						arg_205_1:AudioAction("play", "voice", "story_v_out_413161", "413161050", "story_v_out_413161.awb")
					end

					arg_205_1:RecordHistoryTalkVoice("story_v_out_413161", "413161050", "story_v_out_413161.awb")
				end

				arg_205_1:RecordContent(arg_205_1.text_.text)
			end

			local var_208_33 = math.max(var_208_24, arg_205_1.talkMaxDuration)

			if var_208_23 <= arg_205_1.time_ and arg_205_1.time_ < var_208_23 + var_208_33 then
				arg_205_1.typewritter.percent = (arg_205_1.time_ - var_208_23) / var_208_33

				arg_205_1.typewritter:SetDirty()
			end

			if arg_205_1.time_ >= var_208_23 + var_208_33 and arg_205_1.time_ < var_208_23 + var_208_33 + arg_208_0 then
				arg_205_1.typewritter.percent = 1

				arg_205_1.typewritter:SetDirty()
				arg_205_1:ShowNextGo(true)
			end
		end
	end,
	Play413161051 = function(arg_209_0, arg_209_1)
		arg_209_1.time_ = 0
		arg_209_1.frameCnt_ = 0
		arg_209_1.state_ = "playing"
		arg_209_1.curTalkId_ = 413161051
		arg_209_1.duration_ = 9.3

		local var_209_0 = {
			zh = 7.4,
			ja = 9.3
		}
		local var_209_1 = manager.audio:GetLocalizationFlag()

		if var_209_0[var_209_1] ~= nil then
			arg_209_1.duration_ = var_209_0[var_209_1]
		end

		SetActive(arg_209_1.tipsGo_, false)

		function arg_209_1.onSingleLineFinish_()
			arg_209_1.onSingleLineUpdate_ = nil
			arg_209_1.onSingleLineFinish_ = nil
			arg_209_1.state_ = "waiting"
		end

		function arg_209_1.playNext_(arg_211_0)
			if arg_211_0 == 1 then
				arg_209_0:Play413161052(arg_209_1)
			end
		end

		function arg_209_1.onSingleLineUpdate_(arg_212_0)
			local var_212_0 = arg_209_1.actors_["10022"].transform
			local var_212_1 = 0

			if var_212_1 < arg_209_1.time_ and arg_209_1.time_ <= var_212_1 + arg_212_0 then
				arg_209_1.var_.moveOldPos10022 = var_212_0.localPosition
				var_212_0.localScale = Vector3.New(1, 1, 1)

				arg_209_1:CheckSpriteTmpPos("10022", 4)

				local var_212_2 = var_212_0.childCount

				for iter_212_0 = 0, var_212_2 - 1 do
					local var_212_3 = var_212_0:GetChild(iter_212_0)

					if var_212_3.name == "split_4" or not string.find(var_212_3.name, "split") then
						var_212_3.gameObject:SetActive(true)
					else
						var_212_3.gameObject:SetActive(false)
					end
				end
			end

			local var_212_4 = 0.001

			if var_212_1 <= arg_209_1.time_ and arg_209_1.time_ < var_212_1 + var_212_4 then
				local var_212_5 = (arg_209_1.time_ - var_212_1) / var_212_4
				local var_212_6 = Vector3.New(390, -315, -320)

				var_212_0.localPosition = Vector3.Lerp(arg_209_1.var_.moveOldPos10022, var_212_6, var_212_5)
			end

			if arg_209_1.time_ >= var_212_1 + var_212_4 and arg_209_1.time_ < var_212_1 + var_212_4 + arg_212_0 then
				var_212_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_212_7 = arg_209_1.actors_["10092"]
			local var_212_8 = 0

			if var_212_8 < arg_209_1.time_ and arg_209_1.time_ <= var_212_8 + arg_212_0 and not isNil(var_212_7) and arg_209_1.var_.actorSpriteComps10092 == nil then
				arg_209_1.var_.actorSpriteComps10092 = var_212_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_212_9 = 2

			if var_212_8 <= arg_209_1.time_ and arg_209_1.time_ < var_212_8 + var_212_9 and not isNil(var_212_7) then
				local var_212_10 = (arg_209_1.time_ - var_212_8) / var_212_9

				if arg_209_1.var_.actorSpriteComps10092 then
					for iter_212_1, iter_212_2 in pairs(arg_209_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_212_2 then
							if arg_209_1.isInRecall_ then
								local var_212_11 = Mathf.Lerp(iter_212_2.color.r, arg_209_1.hightColor2.r, var_212_10)
								local var_212_12 = Mathf.Lerp(iter_212_2.color.g, arg_209_1.hightColor2.g, var_212_10)
								local var_212_13 = Mathf.Lerp(iter_212_2.color.b, arg_209_1.hightColor2.b, var_212_10)

								iter_212_2.color = Color.New(var_212_11, var_212_12, var_212_13)
							else
								local var_212_14 = Mathf.Lerp(iter_212_2.color.r, 0.5, var_212_10)

								iter_212_2.color = Color.New(var_212_14, var_212_14, var_212_14)
							end
						end
					end
				end
			end

			if arg_209_1.time_ >= var_212_8 + var_212_9 and arg_209_1.time_ < var_212_8 + var_212_9 + arg_212_0 and not isNil(var_212_7) and arg_209_1.var_.actorSpriteComps10092 then
				for iter_212_3, iter_212_4 in pairs(arg_209_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_212_4 then
						if arg_209_1.isInRecall_ then
							iter_212_4.color = arg_209_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_212_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_209_1.var_.actorSpriteComps10092 = nil
			end

			local var_212_15 = arg_209_1.actors_["10022"]
			local var_212_16 = 0

			if var_212_16 < arg_209_1.time_ and arg_209_1.time_ <= var_212_16 + arg_212_0 and not isNil(var_212_15) and arg_209_1.var_.actorSpriteComps10022 == nil then
				arg_209_1.var_.actorSpriteComps10022 = var_212_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_212_17 = 2

			if var_212_16 <= arg_209_1.time_ and arg_209_1.time_ < var_212_16 + var_212_17 and not isNil(var_212_15) then
				local var_212_18 = (arg_209_1.time_ - var_212_16) / var_212_17

				if arg_209_1.var_.actorSpriteComps10022 then
					for iter_212_5, iter_212_6 in pairs(arg_209_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_212_6 then
							if arg_209_1.isInRecall_ then
								local var_212_19 = Mathf.Lerp(iter_212_6.color.r, arg_209_1.hightColor1.r, var_212_18)
								local var_212_20 = Mathf.Lerp(iter_212_6.color.g, arg_209_1.hightColor1.g, var_212_18)
								local var_212_21 = Mathf.Lerp(iter_212_6.color.b, arg_209_1.hightColor1.b, var_212_18)

								iter_212_6.color = Color.New(var_212_19, var_212_20, var_212_21)
							else
								local var_212_22 = Mathf.Lerp(iter_212_6.color.r, 1, var_212_18)

								iter_212_6.color = Color.New(var_212_22, var_212_22, var_212_22)
							end
						end
					end
				end
			end

			if arg_209_1.time_ >= var_212_16 + var_212_17 and arg_209_1.time_ < var_212_16 + var_212_17 + arg_212_0 and not isNil(var_212_15) and arg_209_1.var_.actorSpriteComps10022 then
				for iter_212_7, iter_212_8 in pairs(arg_209_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_212_8 then
						if arg_209_1.isInRecall_ then
							iter_212_8.color = arg_209_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_212_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_209_1.var_.actorSpriteComps10022 = nil
			end

			local var_212_23 = 0
			local var_212_24 = 0.85

			if var_212_23 < arg_209_1.time_ and arg_209_1.time_ <= var_212_23 + arg_212_0 then
				arg_209_1.talkMaxDuration = 0
				arg_209_1.dialogCg_.alpha = 1

				arg_209_1.dialog_:SetActive(true)
				SetActive(arg_209_1.leftNameGo_, true)

				local var_212_25 = arg_209_1:FormatText(StoryNameCfg[614].name)

				arg_209_1.leftNameTxt_.text = var_212_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_209_1.leftNameTxt_.transform)

				arg_209_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_209_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_209_1:RecordName(arg_209_1.leftNameTxt_.text)
				SetActive(arg_209_1.iconTrs_.gameObject, false)
				arg_209_1.callingController_:SetSelectedState("normal")

				local var_212_26 = arg_209_1:GetWordFromCfg(413161051)
				local var_212_27 = arg_209_1:FormatText(var_212_26.content)

				arg_209_1.text_.text = var_212_27

				LuaForUtil.ClearLinePrefixSymbol(arg_209_1.text_)

				local var_212_28 = 34
				local var_212_29 = utf8.len(var_212_27)
				local var_212_30 = var_212_28 <= 0 and var_212_24 or var_212_24 * (var_212_29 / var_212_28)

				if var_212_30 > 0 and var_212_24 < var_212_30 then
					arg_209_1.talkMaxDuration = var_212_30

					if var_212_30 + var_212_23 > arg_209_1.duration_ then
						arg_209_1.duration_ = var_212_30 + var_212_23
					end
				end

				arg_209_1.text_.text = var_212_27
				arg_209_1.typewritter.percent = 0

				arg_209_1.typewritter:SetDirty()
				arg_209_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161051", "story_v_out_413161.awb") ~= 0 then
					local var_212_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161051", "story_v_out_413161.awb") / 1000

					if var_212_31 + var_212_23 > arg_209_1.duration_ then
						arg_209_1.duration_ = var_212_31 + var_212_23
					end

					if var_212_26.prefab_name ~= "" and arg_209_1.actors_[var_212_26.prefab_name] ~= nil then
						local var_212_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_209_1.actors_[var_212_26.prefab_name].transform, "story_v_out_413161", "413161051", "story_v_out_413161.awb")

						arg_209_1:RecordAudio("413161051", var_212_32)
						arg_209_1:RecordAudio("413161051", var_212_32)
					else
						arg_209_1:AudioAction("play", "voice", "story_v_out_413161", "413161051", "story_v_out_413161.awb")
					end

					arg_209_1:RecordHistoryTalkVoice("story_v_out_413161", "413161051", "story_v_out_413161.awb")
				end

				arg_209_1:RecordContent(arg_209_1.text_.text)
			end

			local var_212_33 = math.max(var_212_24, arg_209_1.talkMaxDuration)

			if var_212_23 <= arg_209_1.time_ and arg_209_1.time_ < var_212_23 + var_212_33 then
				arg_209_1.typewritter.percent = (arg_209_1.time_ - var_212_23) / var_212_33

				arg_209_1.typewritter:SetDirty()
			end

			if arg_209_1.time_ >= var_212_23 + var_212_33 and arg_209_1.time_ < var_212_23 + var_212_33 + arg_212_0 then
				arg_209_1.typewritter.percent = 1

				arg_209_1.typewritter:SetDirty()
				arg_209_1:ShowNextGo(true)
			end
		end
	end,
	Play413161052 = function(arg_213_0, arg_213_1)
		arg_213_1.time_ = 0
		arg_213_1.frameCnt_ = 0
		arg_213_1.state_ = "playing"
		arg_213_1.curTalkId_ = 413161052
		arg_213_1.duration_ = 5.9

		local var_213_0 = {
			zh = 5.9,
			ja = 5.866
		}
		local var_213_1 = manager.audio:GetLocalizationFlag()

		if var_213_0[var_213_1] ~= nil then
			arg_213_1.duration_ = var_213_0[var_213_1]
		end

		SetActive(arg_213_1.tipsGo_, false)

		function arg_213_1.onSingleLineFinish_()
			arg_213_1.onSingleLineUpdate_ = nil
			arg_213_1.onSingleLineFinish_ = nil
			arg_213_1.state_ = "waiting"
		end

		function arg_213_1.playNext_(arg_215_0)
			if arg_215_0 == 1 then
				arg_213_0:Play413161053(arg_213_1)
			end
		end

		function arg_213_1.onSingleLineUpdate_(arg_216_0)
			local var_216_0 = arg_213_1.actors_["10022"]
			local var_216_1 = 0

			if var_216_1 < arg_213_1.time_ and arg_213_1.time_ <= var_216_1 + arg_216_0 and not isNil(var_216_0) and arg_213_1.var_.actorSpriteComps10022 == nil then
				arg_213_1.var_.actorSpriteComps10022 = var_216_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_216_2 = 2

			if var_216_1 <= arg_213_1.time_ and arg_213_1.time_ < var_216_1 + var_216_2 and not isNil(var_216_0) then
				local var_216_3 = (arg_213_1.time_ - var_216_1) / var_216_2

				if arg_213_1.var_.actorSpriteComps10022 then
					for iter_216_0, iter_216_1 in pairs(arg_213_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_216_1 then
							if arg_213_1.isInRecall_ then
								local var_216_4 = Mathf.Lerp(iter_216_1.color.r, arg_213_1.hightColor1.r, var_216_3)
								local var_216_5 = Mathf.Lerp(iter_216_1.color.g, arg_213_1.hightColor1.g, var_216_3)
								local var_216_6 = Mathf.Lerp(iter_216_1.color.b, arg_213_1.hightColor1.b, var_216_3)

								iter_216_1.color = Color.New(var_216_4, var_216_5, var_216_6)
							else
								local var_216_7 = Mathf.Lerp(iter_216_1.color.r, 1, var_216_3)

								iter_216_1.color = Color.New(var_216_7, var_216_7, var_216_7)
							end
						end
					end
				end
			end

			if arg_213_1.time_ >= var_216_1 + var_216_2 and arg_213_1.time_ < var_216_1 + var_216_2 + arg_216_0 and not isNil(var_216_0) and arg_213_1.var_.actorSpriteComps10022 then
				for iter_216_2, iter_216_3 in pairs(arg_213_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_216_3 then
						if arg_213_1.isInRecall_ then
							iter_216_3.color = arg_213_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_216_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_213_1.var_.actorSpriteComps10022 = nil
			end

			local var_216_8 = arg_213_1.actors_["10022"].transform
			local var_216_9 = 0

			if var_216_9 < arg_213_1.time_ and arg_213_1.time_ <= var_216_9 + arg_216_0 then
				arg_213_1.var_.moveOldPos10022 = var_216_8.localPosition
				var_216_8.localScale = Vector3.New(1, 1, 1)

				arg_213_1:CheckSpriteTmpPos("10022", 4)

				local var_216_10 = var_216_8.childCount

				for iter_216_4 = 0, var_216_10 - 1 do
					local var_216_11 = var_216_8:GetChild(iter_216_4)

					if var_216_11.name == "split_6" or not string.find(var_216_11.name, "split") then
						var_216_11.gameObject:SetActive(true)
					else
						var_216_11.gameObject:SetActive(false)
					end
				end
			end

			local var_216_12 = 0.001

			if var_216_9 <= arg_213_1.time_ and arg_213_1.time_ < var_216_9 + var_216_12 then
				local var_216_13 = (arg_213_1.time_ - var_216_9) / var_216_12
				local var_216_14 = Vector3.New(390, -315, -320)

				var_216_8.localPosition = Vector3.Lerp(arg_213_1.var_.moveOldPos10022, var_216_14, var_216_13)
			end

			if arg_213_1.time_ >= var_216_9 + var_216_12 and arg_213_1.time_ < var_216_9 + var_216_12 + arg_216_0 then
				var_216_8.localPosition = Vector3.New(390, -315, -320)
			end

			local var_216_15 = 0
			local var_216_16 = 0.75

			if var_216_15 < arg_213_1.time_ and arg_213_1.time_ <= var_216_15 + arg_216_0 then
				arg_213_1.talkMaxDuration = 0
				arg_213_1.dialogCg_.alpha = 1

				arg_213_1.dialog_:SetActive(true)
				SetActive(arg_213_1.leftNameGo_, true)

				local var_216_17 = arg_213_1:FormatText(StoryNameCfg[614].name)

				arg_213_1.leftNameTxt_.text = var_216_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_213_1.leftNameTxt_.transform)

				arg_213_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_213_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_213_1:RecordName(arg_213_1.leftNameTxt_.text)
				SetActive(arg_213_1.iconTrs_.gameObject, false)
				arg_213_1.callingController_:SetSelectedState("normal")

				local var_216_18 = arg_213_1:GetWordFromCfg(413161052)
				local var_216_19 = arg_213_1:FormatText(var_216_18.content)

				arg_213_1.text_.text = var_216_19

				LuaForUtil.ClearLinePrefixSymbol(arg_213_1.text_)

				local var_216_20 = 31
				local var_216_21 = utf8.len(var_216_19)
				local var_216_22 = var_216_20 <= 0 and var_216_16 or var_216_16 * (var_216_21 / var_216_20)

				if var_216_22 > 0 and var_216_16 < var_216_22 then
					arg_213_1.talkMaxDuration = var_216_22

					if var_216_22 + var_216_15 > arg_213_1.duration_ then
						arg_213_1.duration_ = var_216_22 + var_216_15
					end
				end

				arg_213_1.text_.text = var_216_19
				arg_213_1.typewritter.percent = 0

				arg_213_1.typewritter:SetDirty()
				arg_213_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161052", "story_v_out_413161.awb") ~= 0 then
					local var_216_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161052", "story_v_out_413161.awb") / 1000

					if var_216_23 + var_216_15 > arg_213_1.duration_ then
						arg_213_1.duration_ = var_216_23 + var_216_15
					end

					if var_216_18.prefab_name ~= "" and arg_213_1.actors_[var_216_18.prefab_name] ~= nil then
						local var_216_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_213_1.actors_[var_216_18.prefab_name].transform, "story_v_out_413161", "413161052", "story_v_out_413161.awb")

						arg_213_1:RecordAudio("413161052", var_216_24)
						arg_213_1:RecordAudio("413161052", var_216_24)
					else
						arg_213_1:AudioAction("play", "voice", "story_v_out_413161", "413161052", "story_v_out_413161.awb")
					end

					arg_213_1:RecordHistoryTalkVoice("story_v_out_413161", "413161052", "story_v_out_413161.awb")
				end

				arg_213_1:RecordContent(arg_213_1.text_.text)
			end

			local var_216_25 = math.max(var_216_16, arg_213_1.talkMaxDuration)

			if var_216_15 <= arg_213_1.time_ and arg_213_1.time_ < var_216_15 + var_216_25 then
				arg_213_1.typewritter.percent = (arg_213_1.time_ - var_216_15) / var_216_25

				arg_213_1.typewritter:SetDirty()
			end

			if arg_213_1.time_ >= var_216_15 + var_216_25 and arg_213_1.time_ < var_216_15 + var_216_25 + arg_216_0 then
				arg_213_1.typewritter.percent = 1

				arg_213_1.typewritter:SetDirty()
				arg_213_1:ShowNextGo(true)
			end
		end
	end,
	Play413161053 = function(arg_217_0, arg_217_1)
		arg_217_1.time_ = 0
		arg_217_1.frameCnt_ = 0
		arg_217_1.state_ = "playing"
		arg_217_1.curTalkId_ = 413161053
		arg_217_1.duration_ = 3.9

		local var_217_0 = {
			zh = 3.733,
			ja = 3.9
		}
		local var_217_1 = manager.audio:GetLocalizationFlag()

		if var_217_0[var_217_1] ~= nil then
			arg_217_1.duration_ = var_217_0[var_217_1]
		end

		SetActive(arg_217_1.tipsGo_, false)

		function arg_217_1.onSingleLineFinish_()
			arg_217_1.onSingleLineUpdate_ = nil
			arg_217_1.onSingleLineFinish_ = nil
			arg_217_1.state_ = "waiting"
		end

		function arg_217_1.playNext_(arg_219_0)
			if arg_219_0 == 1 then
				arg_217_0:Play413161054(arg_217_1)
			end
		end

		function arg_217_1.onSingleLineUpdate_(arg_220_0)
			local var_220_0 = arg_217_1.actors_["10092"].transform
			local var_220_1 = 0

			if var_220_1 < arg_217_1.time_ and arg_217_1.time_ <= var_220_1 + arg_220_0 then
				arg_217_1.var_.moveOldPos10092 = var_220_0.localPosition
				var_220_0.localScale = Vector3.New(1, 1, 1)

				arg_217_1:CheckSpriteTmpPos("10092", 2)

				local var_220_2 = var_220_0.childCount

				for iter_220_0 = 0, var_220_2 - 1 do
					local var_220_3 = var_220_0:GetChild(iter_220_0)

					if var_220_3.name == "split_6" or not string.find(var_220_3.name, "split") then
						var_220_3.gameObject:SetActive(true)
					else
						var_220_3.gameObject:SetActive(false)
					end
				end
			end

			local var_220_4 = 0.001

			if var_220_1 <= arg_217_1.time_ and arg_217_1.time_ < var_220_1 + var_220_4 then
				local var_220_5 = (arg_217_1.time_ - var_220_1) / var_220_4
				local var_220_6 = Vector3.New(-389.49, -300, -295)

				var_220_0.localPosition = Vector3.Lerp(arg_217_1.var_.moveOldPos10092, var_220_6, var_220_5)
			end

			if arg_217_1.time_ >= var_220_1 + var_220_4 and arg_217_1.time_ < var_220_1 + var_220_4 + arg_220_0 then
				var_220_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_220_7 = arg_217_1.actors_["10022"]
			local var_220_8 = 0

			if var_220_8 < arg_217_1.time_ and arg_217_1.time_ <= var_220_8 + arg_220_0 and not isNil(var_220_7) and arg_217_1.var_.actorSpriteComps10022 == nil then
				arg_217_1.var_.actorSpriteComps10022 = var_220_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_220_9 = 2

			if var_220_8 <= arg_217_1.time_ and arg_217_1.time_ < var_220_8 + var_220_9 and not isNil(var_220_7) then
				local var_220_10 = (arg_217_1.time_ - var_220_8) / var_220_9

				if arg_217_1.var_.actorSpriteComps10022 then
					for iter_220_1, iter_220_2 in pairs(arg_217_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_220_2 then
							if arg_217_1.isInRecall_ then
								local var_220_11 = Mathf.Lerp(iter_220_2.color.r, arg_217_1.hightColor2.r, var_220_10)
								local var_220_12 = Mathf.Lerp(iter_220_2.color.g, arg_217_1.hightColor2.g, var_220_10)
								local var_220_13 = Mathf.Lerp(iter_220_2.color.b, arg_217_1.hightColor2.b, var_220_10)

								iter_220_2.color = Color.New(var_220_11, var_220_12, var_220_13)
							else
								local var_220_14 = Mathf.Lerp(iter_220_2.color.r, 0.5, var_220_10)

								iter_220_2.color = Color.New(var_220_14, var_220_14, var_220_14)
							end
						end
					end
				end
			end

			if arg_217_1.time_ >= var_220_8 + var_220_9 and arg_217_1.time_ < var_220_8 + var_220_9 + arg_220_0 and not isNil(var_220_7) and arg_217_1.var_.actorSpriteComps10022 then
				for iter_220_3, iter_220_4 in pairs(arg_217_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_220_4 then
						if arg_217_1.isInRecall_ then
							iter_220_4.color = arg_217_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_220_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_217_1.var_.actorSpriteComps10022 = nil
			end

			local var_220_15 = arg_217_1.actors_["10092"]
			local var_220_16 = 0

			if var_220_16 < arg_217_1.time_ and arg_217_1.time_ <= var_220_16 + arg_220_0 and not isNil(var_220_15) and arg_217_1.var_.actorSpriteComps10092 == nil then
				arg_217_1.var_.actorSpriteComps10092 = var_220_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_220_17 = 2

			if var_220_16 <= arg_217_1.time_ and arg_217_1.time_ < var_220_16 + var_220_17 and not isNil(var_220_15) then
				local var_220_18 = (arg_217_1.time_ - var_220_16) / var_220_17

				if arg_217_1.var_.actorSpriteComps10092 then
					for iter_220_5, iter_220_6 in pairs(arg_217_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_220_6 then
							if arg_217_1.isInRecall_ then
								local var_220_19 = Mathf.Lerp(iter_220_6.color.r, arg_217_1.hightColor1.r, var_220_18)
								local var_220_20 = Mathf.Lerp(iter_220_6.color.g, arg_217_1.hightColor1.g, var_220_18)
								local var_220_21 = Mathf.Lerp(iter_220_6.color.b, arg_217_1.hightColor1.b, var_220_18)

								iter_220_6.color = Color.New(var_220_19, var_220_20, var_220_21)
							else
								local var_220_22 = Mathf.Lerp(iter_220_6.color.r, 1, var_220_18)

								iter_220_6.color = Color.New(var_220_22, var_220_22, var_220_22)
							end
						end
					end
				end
			end

			if arg_217_1.time_ >= var_220_16 + var_220_17 and arg_217_1.time_ < var_220_16 + var_220_17 + arg_220_0 and not isNil(var_220_15) and arg_217_1.var_.actorSpriteComps10092 then
				for iter_220_7, iter_220_8 in pairs(arg_217_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_220_8 then
						if arg_217_1.isInRecall_ then
							iter_220_8.color = arg_217_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_220_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_217_1.var_.actorSpriteComps10092 = nil
			end

			local var_220_23 = 0
			local var_220_24 = 0.325

			if var_220_23 < arg_217_1.time_ and arg_217_1.time_ <= var_220_23 + arg_220_0 then
				arg_217_1.talkMaxDuration = 0
				arg_217_1.dialogCg_.alpha = 1

				arg_217_1.dialog_:SetActive(true)
				SetActive(arg_217_1.leftNameGo_, true)

				local var_220_25 = arg_217_1:FormatText(StoryNameCfg[996].name)

				arg_217_1.leftNameTxt_.text = var_220_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_217_1.leftNameTxt_.transform)

				arg_217_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_217_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_217_1:RecordName(arg_217_1.leftNameTxt_.text)
				SetActive(arg_217_1.iconTrs_.gameObject, false)
				arg_217_1.callingController_:SetSelectedState("normal")

				local var_220_26 = arg_217_1:GetWordFromCfg(413161053)
				local var_220_27 = arg_217_1:FormatText(var_220_26.content)

				arg_217_1.text_.text = var_220_27

				LuaForUtil.ClearLinePrefixSymbol(arg_217_1.text_)

				local var_220_28 = 13
				local var_220_29 = utf8.len(var_220_27)
				local var_220_30 = var_220_28 <= 0 and var_220_24 or var_220_24 * (var_220_29 / var_220_28)

				if var_220_30 > 0 and var_220_24 < var_220_30 then
					arg_217_1.talkMaxDuration = var_220_30

					if var_220_30 + var_220_23 > arg_217_1.duration_ then
						arg_217_1.duration_ = var_220_30 + var_220_23
					end
				end

				arg_217_1.text_.text = var_220_27
				arg_217_1.typewritter.percent = 0

				arg_217_1.typewritter:SetDirty()
				arg_217_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161053", "story_v_out_413161.awb") ~= 0 then
					local var_220_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161053", "story_v_out_413161.awb") / 1000

					if var_220_31 + var_220_23 > arg_217_1.duration_ then
						arg_217_1.duration_ = var_220_31 + var_220_23
					end

					if var_220_26.prefab_name ~= "" and arg_217_1.actors_[var_220_26.prefab_name] ~= nil then
						local var_220_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_217_1.actors_[var_220_26.prefab_name].transform, "story_v_out_413161", "413161053", "story_v_out_413161.awb")

						arg_217_1:RecordAudio("413161053", var_220_32)
						arg_217_1:RecordAudio("413161053", var_220_32)
					else
						arg_217_1:AudioAction("play", "voice", "story_v_out_413161", "413161053", "story_v_out_413161.awb")
					end

					arg_217_1:RecordHistoryTalkVoice("story_v_out_413161", "413161053", "story_v_out_413161.awb")
				end

				arg_217_1:RecordContent(arg_217_1.text_.text)
			end

			local var_220_33 = math.max(var_220_24, arg_217_1.talkMaxDuration)

			if var_220_23 <= arg_217_1.time_ and arg_217_1.time_ < var_220_23 + var_220_33 then
				arg_217_1.typewritter.percent = (arg_217_1.time_ - var_220_23) / var_220_33

				arg_217_1.typewritter:SetDirty()
			end

			if arg_217_1.time_ >= var_220_23 + var_220_33 and arg_217_1.time_ < var_220_23 + var_220_33 + arg_220_0 then
				arg_217_1.typewritter.percent = 1

				arg_217_1.typewritter:SetDirty()
				arg_217_1:ShowNextGo(true)
			end
		end
	end,
	Play413161054 = function(arg_221_0, arg_221_1)
		arg_221_1.time_ = 0
		arg_221_1.frameCnt_ = 0
		arg_221_1.state_ = "playing"
		arg_221_1.curTalkId_ = 413161054
		arg_221_1.duration_ = 7.1

		local var_221_0 = {
			zh = 6.6,
			ja = 7.1
		}
		local var_221_1 = manager.audio:GetLocalizationFlag()

		if var_221_0[var_221_1] ~= nil then
			arg_221_1.duration_ = var_221_0[var_221_1]
		end

		SetActive(arg_221_1.tipsGo_, false)

		function arg_221_1.onSingleLineFinish_()
			arg_221_1.onSingleLineUpdate_ = nil
			arg_221_1.onSingleLineFinish_ = nil
			arg_221_1.state_ = "waiting"
		end

		function arg_221_1.playNext_(arg_223_0)
			if arg_223_0 == 1 then
				arg_221_0:Play413161055(arg_221_1)
			end
		end

		function arg_221_1.onSingleLineUpdate_(arg_224_0)
			local var_224_0 = 0
			local var_224_1 = 0.825

			if var_224_0 < arg_221_1.time_ and arg_221_1.time_ <= var_224_0 + arg_224_0 then
				arg_221_1.talkMaxDuration = 0
				arg_221_1.dialogCg_.alpha = 1

				arg_221_1.dialog_:SetActive(true)
				SetActive(arg_221_1.leftNameGo_, true)

				local var_224_2 = arg_221_1:FormatText(StoryNameCfg[996].name)

				arg_221_1.leftNameTxt_.text = var_224_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_221_1.leftNameTxt_.transform)

				arg_221_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_221_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_221_1:RecordName(arg_221_1.leftNameTxt_.text)
				SetActive(arg_221_1.iconTrs_.gameObject, false)
				arg_221_1.callingController_:SetSelectedState("normal")

				local var_224_3 = arg_221_1:GetWordFromCfg(413161054)
				local var_224_4 = arg_221_1:FormatText(var_224_3.content)

				arg_221_1.text_.text = var_224_4

				LuaForUtil.ClearLinePrefixSymbol(arg_221_1.text_)

				local var_224_5 = 33
				local var_224_6 = utf8.len(var_224_4)
				local var_224_7 = var_224_5 <= 0 and var_224_1 or var_224_1 * (var_224_6 / var_224_5)

				if var_224_7 > 0 and var_224_1 < var_224_7 then
					arg_221_1.talkMaxDuration = var_224_7

					if var_224_7 + var_224_0 > arg_221_1.duration_ then
						arg_221_1.duration_ = var_224_7 + var_224_0
					end
				end

				arg_221_1.text_.text = var_224_4
				arg_221_1.typewritter.percent = 0

				arg_221_1.typewritter:SetDirty()
				arg_221_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161054", "story_v_out_413161.awb") ~= 0 then
					local var_224_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161054", "story_v_out_413161.awb") / 1000

					if var_224_8 + var_224_0 > arg_221_1.duration_ then
						arg_221_1.duration_ = var_224_8 + var_224_0
					end

					if var_224_3.prefab_name ~= "" and arg_221_1.actors_[var_224_3.prefab_name] ~= nil then
						local var_224_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_221_1.actors_[var_224_3.prefab_name].transform, "story_v_out_413161", "413161054", "story_v_out_413161.awb")

						arg_221_1:RecordAudio("413161054", var_224_9)
						arg_221_1:RecordAudio("413161054", var_224_9)
					else
						arg_221_1:AudioAction("play", "voice", "story_v_out_413161", "413161054", "story_v_out_413161.awb")
					end

					arg_221_1:RecordHistoryTalkVoice("story_v_out_413161", "413161054", "story_v_out_413161.awb")
				end

				arg_221_1:RecordContent(arg_221_1.text_.text)
			end

			local var_224_10 = math.max(var_224_1, arg_221_1.talkMaxDuration)

			if var_224_0 <= arg_221_1.time_ and arg_221_1.time_ < var_224_0 + var_224_10 then
				arg_221_1.typewritter.percent = (arg_221_1.time_ - var_224_0) / var_224_10

				arg_221_1.typewritter:SetDirty()
			end

			if arg_221_1.time_ >= var_224_0 + var_224_10 and arg_221_1.time_ < var_224_0 + var_224_10 + arg_224_0 then
				arg_221_1.typewritter.percent = 1

				arg_221_1.typewritter:SetDirty()
				arg_221_1:ShowNextGo(true)
			end
		end
	end,
	Play413161055 = function(arg_225_0, arg_225_1)
		arg_225_1.time_ = 0
		arg_225_1.frameCnt_ = 0
		arg_225_1.state_ = "playing"
		arg_225_1.curTalkId_ = 413161055
		arg_225_1.duration_ = 13.03

		local var_225_0 = {
			zh = 7.166,
			ja = 13.033
		}
		local var_225_1 = manager.audio:GetLocalizationFlag()

		if var_225_0[var_225_1] ~= nil then
			arg_225_1.duration_ = var_225_0[var_225_1]
		end

		SetActive(arg_225_1.tipsGo_, false)

		function arg_225_1.onSingleLineFinish_()
			arg_225_1.onSingleLineUpdate_ = nil
			arg_225_1.onSingleLineFinish_ = nil
			arg_225_1.state_ = "waiting"
		end

		function arg_225_1.playNext_(arg_227_0)
			if arg_227_0 == 1 then
				arg_225_0:Play413161056(arg_225_1)
			end
		end

		function arg_225_1.onSingleLineUpdate_(arg_228_0)
			local var_228_0 = arg_225_1.actors_["10092"]
			local var_228_1 = 0

			if var_228_1 < arg_225_1.time_ and arg_225_1.time_ <= var_228_1 + arg_228_0 and not isNil(var_228_0) and arg_225_1.var_.actorSpriteComps10092 == nil then
				arg_225_1.var_.actorSpriteComps10092 = var_228_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_228_2 = 2

			if var_228_1 <= arg_225_1.time_ and arg_225_1.time_ < var_228_1 + var_228_2 and not isNil(var_228_0) then
				local var_228_3 = (arg_225_1.time_ - var_228_1) / var_228_2

				if arg_225_1.var_.actorSpriteComps10092 then
					for iter_228_0, iter_228_1 in pairs(arg_225_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_228_1 then
							if arg_225_1.isInRecall_ then
								local var_228_4 = Mathf.Lerp(iter_228_1.color.r, arg_225_1.hightColor2.r, var_228_3)
								local var_228_5 = Mathf.Lerp(iter_228_1.color.g, arg_225_1.hightColor2.g, var_228_3)
								local var_228_6 = Mathf.Lerp(iter_228_1.color.b, arg_225_1.hightColor2.b, var_228_3)

								iter_228_1.color = Color.New(var_228_4, var_228_5, var_228_6)
							else
								local var_228_7 = Mathf.Lerp(iter_228_1.color.r, 0.5, var_228_3)

								iter_228_1.color = Color.New(var_228_7, var_228_7, var_228_7)
							end
						end
					end
				end
			end

			if arg_225_1.time_ >= var_228_1 + var_228_2 and arg_225_1.time_ < var_228_1 + var_228_2 + arg_228_0 and not isNil(var_228_0) and arg_225_1.var_.actorSpriteComps10092 then
				for iter_228_2, iter_228_3 in pairs(arg_225_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_228_3 then
						if arg_225_1.isInRecall_ then
							iter_228_3.color = arg_225_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_228_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_225_1.var_.actorSpriteComps10092 = nil
			end

			local var_228_8 = arg_225_1.actors_["10022"]
			local var_228_9 = 0

			if var_228_9 < arg_225_1.time_ and arg_225_1.time_ <= var_228_9 + arg_228_0 and not isNil(var_228_8) and arg_225_1.var_.actorSpriteComps10022 == nil then
				arg_225_1.var_.actorSpriteComps10022 = var_228_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_228_10 = 2

			if var_228_9 <= arg_225_1.time_ and arg_225_1.time_ < var_228_9 + var_228_10 and not isNil(var_228_8) then
				local var_228_11 = (arg_225_1.time_ - var_228_9) / var_228_10

				if arg_225_1.var_.actorSpriteComps10022 then
					for iter_228_4, iter_228_5 in pairs(arg_225_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_228_5 then
							if arg_225_1.isInRecall_ then
								local var_228_12 = Mathf.Lerp(iter_228_5.color.r, arg_225_1.hightColor1.r, var_228_11)
								local var_228_13 = Mathf.Lerp(iter_228_5.color.g, arg_225_1.hightColor1.g, var_228_11)
								local var_228_14 = Mathf.Lerp(iter_228_5.color.b, arg_225_1.hightColor1.b, var_228_11)

								iter_228_5.color = Color.New(var_228_12, var_228_13, var_228_14)
							else
								local var_228_15 = Mathf.Lerp(iter_228_5.color.r, 1, var_228_11)

								iter_228_5.color = Color.New(var_228_15, var_228_15, var_228_15)
							end
						end
					end
				end
			end

			if arg_225_1.time_ >= var_228_9 + var_228_10 and arg_225_1.time_ < var_228_9 + var_228_10 + arg_228_0 and not isNil(var_228_8) and arg_225_1.var_.actorSpriteComps10022 then
				for iter_228_6, iter_228_7 in pairs(arg_225_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_228_7 then
						if arg_225_1.isInRecall_ then
							iter_228_7.color = arg_225_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_228_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_225_1.var_.actorSpriteComps10022 = nil
			end

			local var_228_16 = 0
			local var_228_17 = 1

			if var_228_16 < arg_225_1.time_ and arg_225_1.time_ <= var_228_16 + arg_228_0 then
				arg_225_1.talkMaxDuration = 0
				arg_225_1.dialogCg_.alpha = 1

				arg_225_1.dialog_:SetActive(true)
				SetActive(arg_225_1.leftNameGo_, true)

				local var_228_18 = arg_225_1:FormatText(StoryNameCfg[614].name)

				arg_225_1.leftNameTxt_.text = var_228_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_225_1.leftNameTxt_.transform)

				arg_225_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_225_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_225_1:RecordName(arg_225_1.leftNameTxt_.text)
				SetActive(arg_225_1.iconTrs_.gameObject, false)
				arg_225_1.callingController_:SetSelectedState("normal")

				local var_228_19 = arg_225_1:GetWordFromCfg(413161055)
				local var_228_20 = arg_225_1:FormatText(var_228_19.content)

				arg_225_1.text_.text = var_228_20

				LuaForUtil.ClearLinePrefixSymbol(arg_225_1.text_)

				local var_228_21 = 40
				local var_228_22 = utf8.len(var_228_20)
				local var_228_23 = var_228_21 <= 0 and var_228_17 or var_228_17 * (var_228_22 / var_228_21)

				if var_228_23 > 0 and var_228_17 < var_228_23 then
					arg_225_1.talkMaxDuration = var_228_23

					if var_228_23 + var_228_16 > arg_225_1.duration_ then
						arg_225_1.duration_ = var_228_23 + var_228_16
					end
				end

				arg_225_1.text_.text = var_228_20
				arg_225_1.typewritter.percent = 0

				arg_225_1.typewritter:SetDirty()
				arg_225_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161055", "story_v_out_413161.awb") ~= 0 then
					local var_228_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161055", "story_v_out_413161.awb") / 1000

					if var_228_24 + var_228_16 > arg_225_1.duration_ then
						arg_225_1.duration_ = var_228_24 + var_228_16
					end

					if var_228_19.prefab_name ~= "" and arg_225_1.actors_[var_228_19.prefab_name] ~= nil then
						local var_228_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_225_1.actors_[var_228_19.prefab_name].transform, "story_v_out_413161", "413161055", "story_v_out_413161.awb")

						arg_225_1:RecordAudio("413161055", var_228_25)
						arg_225_1:RecordAudio("413161055", var_228_25)
					else
						arg_225_1:AudioAction("play", "voice", "story_v_out_413161", "413161055", "story_v_out_413161.awb")
					end

					arg_225_1:RecordHistoryTalkVoice("story_v_out_413161", "413161055", "story_v_out_413161.awb")
				end

				arg_225_1:RecordContent(arg_225_1.text_.text)
			end

			local var_228_26 = math.max(var_228_17, arg_225_1.talkMaxDuration)

			if var_228_16 <= arg_225_1.time_ and arg_225_1.time_ < var_228_16 + var_228_26 then
				arg_225_1.typewritter.percent = (arg_225_1.time_ - var_228_16) / var_228_26

				arg_225_1.typewritter:SetDirty()
			end

			if arg_225_1.time_ >= var_228_16 + var_228_26 and arg_225_1.time_ < var_228_16 + var_228_26 + arg_228_0 then
				arg_225_1.typewritter.percent = 1

				arg_225_1.typewritter:SetDirty()
				arg_225_1:ShowNextGo(true)
			end
		end
	end,
	Play413161056 = function(arg_229_0, arg_229_1)
		arg_229_1.time_ = 0
		arg_229_1.frameCnt_ = 0
		arg_229_1.state_ = "playing"
		arg_229_1.curTalkId_ = 413161056
		arg_229_1.duration_ = 7.87

		local var_229_0 = {
			zh = 6.666,
			ja = 7.866
		}
		local var_229_1 = manager.audio:GetLocalizationFlag()

		if var_229_0[var_229_1] ~= nil then
			arg_229_1.duration_ = var_229_0[var_229_1]
		end

		SetActive(arg_229_1.tipsGo_, false)

		function arg_229_1.onSingleLineFinish_()
			arg_229_1.onSingleLineUpdate_ = nil
			arg_229_1.onSingleLineFinish_ = nil
			arg_229_1.state_ = "waiting"
		end

		function arg_229_1.playNext_(arg_231_0)
			if arg_231_0 == 1 then
				arg_229_0:Play413161057(arg_229_1)
			end
		end

		function arg_229_1.onSingleLineUpdate_(arg_232_0)
			local var_232_0 = 0
			local var_232_1 = 0.75

			if var_232_0 < arg_229_1.time_ and arg_229_1.time_ <= var_232_0 + arg_232_0 then
				arg_229_1.talkMaxDuration = 0
				arg_229_1.dialogCg_.alpha = 1

				arg_229_1.dialog_:SetActive(true)
				SetActive(arg_229_1.leftNameGo_, true)

				local var_232_2 = arg_229_1:FormatText(StoryNameCfg[614].name)

				arg_229_1.leftNameTxt_.text = var_232_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_229_1.leftNameTxt_.transform)

				arg_229_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_229_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_229_1:RecordName(arg_229_1.leftNameTxt_.text)
				SetActive(arg_229_1.iconTrs_.gameObject, false)
				arg_229_1.callingController_:SetSelectedState("normal")

				local var_232_3 = arg_229_1:GetWordFromCfg(413161056)
				local var_232_4 = arg_229_1:FormatText(var_232_3.content)

				arg_229_1.text_.text = var_232_4

				LuaForUtil.ClearLinePrefixSymbol(arg_229_1.text_)

				local var_232_5 = 30
				local var_232_6 = utf8.len(var_232_4)
				local var_232_7 = var_232_5 <= 0 and var_232_1 or var_232_1 * (var_232_6 / var_232_5)

				if var_232_7 > 0 and var_232_1 < var_232_7 then
					arg_229_1.talkMaxDuration = var_232_7

					if var_232_7 + var_232_0 > arg_229_1.duration_ then
						arg_229_1.duration_ = var_232_7 + var_232_0
					end
				end

				arg_229_1.text_.text = var_232_4
				arg_229_1.typewritter.percent = 0

				arg_229_1.typewritter:SetDirty()
				arg_229_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161056", "story_v_out_413161.awb") ~= 0 then
					local var_232_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161056", "story_v_out_413161.awb") / 1000

					if var_232_8 + var_232_0 > arg_229_1.duration_ then
						arg_229_1.duration_ = var_232_8 + var_232_0
					end

					if var_232_3.prefab_name ~= "" and arg_229_1.actors_[var_232_3.prefab_name] ~= nil then
						local var_232_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_229_1.actors_[var_232_3.prefab_name].transform, "story_v_out_413161", "413161056", "story_v_out_413161.awb")

						arg_229_1:RecordAudio("413161056", var_232_9)
						arg_229_1:RecordAudio("413161056", var_232_9)
					else
						arg_229_1:AudioAction("play", "voice", "story_v_out_413161", "413161056", "story_v_out_413161.awb")
					end

					arg_229_1:RecordHistoryTalkVoice("story_v_out_413161", "413161056", "story_v_out_413161.awb")
				end

				arg_229_1:RecordContent(arg_229_1.text_.text)
			end

			local var_232_10 = math.max(var_232_1, arg_229_1.talkMaxDuration)

			if var_232_0 <= arg_229_1.time_ and arg_229_1.time_ < var_232_0 + var_232_10 then
				arg_229_1.typewritter.percent = (arg_229_1.time_ - var_232_0) / var_232_10

				arg_229_1.typewritter:SetDirty()
			end

			if arg_229_1.time_ >= var_232_0 + var_232_10 and arg_229_1.time_ < var_232_0 + var_232_10 + arg_232_0 then
				arg_229_1.typewritter.percent = 1

				arg_229_1.typewritter:SetDirty()
				arg_229_1:ShowNextGo(true)
			end
		end
	end,
	Play413161057 = function(arg_233_0, arg_233_1)
		arg_233_1.time_ = 0
		arg_233_1.frameCnt_ = 0
		arg_233_1.state_ = "playing"
		arg_233_1.curTalkId_ = 413161057
		arg_233_1.duration_ = 6.77

		local var_233_0 = {
			zh = 5.2,
			ja = 6.766
		}
		local var_233_1 = manager.audio:GetLocalizationFlag()

		if var_233_0[var_233_1] ~= nil then
			arg_233_1.duration_ = var_233_0[var_233_1]
		end

		SetActive(arg_233_1.tipsGo_, false)

		function arg_233_1.onSingleLineFinish_()
			arg_233_1.onSingleLineUpdate_ = nil
			arg_233_1.onSingleLineFinish_ = nil
			arg_233_1.state_ = "waiting"
		end

		function arg_233_1.playNext_(arg_235_0)
			if arg_235_0 == 1 then
				arg_233_0:Play413161058(arg_233_1)
			end
		end

		function arg_233_1.onSingleLineUpdate_(arg_236_0)
			local var_236_0 = arg_233_1.actors_["10092"].transform
			local var_236_1 = 0

			if var_236_1 < arg_233_1.time_ and arg_233_1.time_ <= var_236_1 + arg_236_0 then
				arg_233_1.var_.moveOldPos10092 = var_236_0.localPosition
				var_236_0.localScale = Vector3.New(1, 1, 1)

				arg_233_1:CheckSpriteTmpPos("10092", 2)

				local var_236_2 = var_236_0.childCount

				for iter_236_0 = 0, var_236_2 - 1 do
					local var_236_3 = var_236_0:GetChild(iter_236_0)

					if var_236_3.name == "" or not string.find(var_236_3.name, "split") then
						var_236_3.gameObject:SetActive(true)
					else
						var_236_3.gameObject:SetActive(false)
					end
				end
			end

			local var_236_4 = 0.001

			if var_236_1 <= arg_233_1.time_ and arg_233_1.time_ < var_236_1 + var_236_4 then
				local var_236_5 = (arg_233_1.time_ - var_236_1) / var_236_4
				local var_236_6 = Vector3.New(-389.49, -300, -295)

				var_236_0.localPosition = Vector3.Lerp(arg_233_1.var_.moveOldPos10092, var_236_6, var_236_5)
			end

			if arg_233_1.time_ >= var_236_1 + var_236_4 and arg_233_1.time_ < var_236_1 + var_236_4 + arg_236_0 then
				var_236_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_236_7 = arg_233_1.actors_["10022"]
			local var_236_8 = 0

			if var_236_8 < arg_233_1.time_ and arg_233_1.time_ <= var_236_8 + arg_236_0 and not isNil(var_236_7) and arg_233_1.var_.actorSpriteComps10022 == nil then
				arg_233_1.var_.actorSpriteComps10022 = var_236_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_236_9 = 2

			if var_236_8 <= arg_233_1.time_ and arg_233_1.time_ < var_236_8 + var_236_9 and not isNil(var_236_7) then
				local var_236_10 = (arg_233_1.time_ - var_236_8) / var_236_9

				if arg_233_1.var_.actorSpriteComps10022 then
					for iter_236_1, iter_236_2 in pairs(arg_233_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_236_2 then
							if arg_233_1.isInRecall_ then
								local var_236_11 = Mathf.Lerp(iter_236_2.color.r, arg_233_1.hightColor2.r, var_236_10)
								local var_236_12 = Mathf.Lerp(iter_236_2.color.g, arg_233_1.hightColor2.g, var_236_10)
								local var_236_13 = Mathf.Lerp(iter_236_2.color.b, arg_233_1.hightColor2.b, var_236_10)

								iter_236_2.color = Color.New(var_236_11, var_236_12, var_236_13)
							else
								local var_236_14 = Mathf.Lerp(iter_236_2.color.r, 0.5, var_236_10)

								iter_236_2.color = Color.New(var_236_14, var_236_14, var_236_14)
							end
						end
					end
				end
			end

			if arg_233_1.time_ >= var_236_8 + var_236_9 and arg_233_1.time_ < var_236_8 + var_236_9 + arg_236_0 and not isNil(var_236_7) and arg_233_1.var_.actorSpriteComps10022 then
				for iter_236_3, iter_236_4 in pairs(arg_233_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_236_4 then
						if arg_233_1.isInRecall_ then
							iter_236_4.color = arg_233_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_236_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_233_1.var_.actorSpriteComps10022 = nil
			end

			local var_236_15 = arg_233_1.actors_["10092"]
			local var_236_16 = 0

			if var_236_16 < arg_233_1.time_ and arg_233_1.time_ <= var_236_16 + arg_236_0 and not isNil(var_236_15) and arg_233_1.var_.actorSpriteComps10092 == nil then
				arg_233_1.var_.actorSpriteComps10092 = var_236_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_236_17 = 2

			if var_236_16 <= arg_233_1.time_ and arg_233_1.time_ < var_236_16 + var_236_17 and not isNil(var_236_15) then
				local var_236_18 = (arg_233_1.time_ - var_236_16) / var_236_17

				if arg_233_1.var_.actorSpriteComps10092 then
					for iter_236_5, iter_236_6 in pairs(arg_233_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_236_6 then
							if arg_233_1.isInRecall_ then
								local var_236_19 = Mathf.Lerp(iter_236_6.color.r, arg_233_1.hightColor1.r, var_236_18)
								local var_236_20 = Mathf.Lerp(iter_236_6.color.g, arg_233_1.hightColor1.g, var_236_18)
								local var_236_21 = Mathf.Lerp(iter_236_6.color.b, arg_233_1.hightColor1.b, var_236_18)

								iter_236_6.color = Color.New(var_236_19, var_236_20, var_236_21)
							else
								local var_236_22 = Mathf.Lerp(iter_236_6.color.r, 1, var_236_18)

								iter_236_6.color = Color.New(var_236_22, var_236_22, var_236_22)
							end
						end
					end
				end
			end

			if arg_233_1.time_ >= var_236_16 + var_236_17 and arg_233_1.time_ < var_236_16 + var_236_17 + arg_236_0 and not isNil(var_236_15) and arg_233_1.var_.actorSpriteComps10092 then
				for iter_236_7, iter_236_8 in pairs(arg_233_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_236_8 then
						if arg_233_1.isInRecall_ then
							iter_236_8.color = arg_233_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_236_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_233_1.var_.actorSpriteComps10092 = nil
			end

			local var_236_23 = 0
			local var_236_24 = 0.65

			if var_236_23 < arg_233_1.time_ and arg_233_1.time_ <= var_236_23 + arg_236_0 then
				arg_233_1.talkMaxDuration = 0
				arg_233_1.dialogCg_.alpha = 1

				arg_233_1.dialog_:SetActive(true)
				SetActive(arg_233_1.leftNameGo_, true)

				local var_236_25 = arg_233_1:FormatText(StoryNameCfg[996].name)

				arg_233_1.leftNameTxt_.text = var_236_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_233_1.leftNameTxt_.transform)

				arg_233_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_233_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_233_1:RecordName(arg_233_1.leftNameTxt_.text)
				SetActive(arg_233_1.iconTrs_.gameObject, false)
				arg_233_1.callingController_:SetSelectedState("normal")

				local var_236_26 = arg_233_1:GetWordFromCfg(413161057)
				local var_236_27 = arg_233_1:FormatText(var_236_26.content)

				arg_233_1.text_.text = var_236_27

				LuaForUtil.ClearLinePrefixSymbol(arg_233_1.text_)

				local var_236_28 = 26
				local var_236_29 = utf8.len(var_236_27)
				local var_236_30 = var_236_28 <= 0 and var_236_24 or var_236_24 * (var_236_29 / var_236_28)

				if var_236_30 > 0 and var_236_24 < var_236_30 then
					arg_233_1.talkMaxDuration = var_236_30

					if var_236_30 + var_236_23 > arg_233_1.duration_ then
						arg_233_1.duration_ = var_236_30 + var_236_23
					end
				end

				arg_233_1.text_.text = var_236_27
				arg_233_1.typewritter.percent = 0

				arg_233_1.typewritter:SetDirty()
				arg_233_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161057", "story_v_out_413161.awb") ~= 0 then
					local var_236_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161057", "story_v_out_413161.awb") / 1000

					if var_236_31 + var_236_23 > arg_233_1.duration_ then
						arg_233_1.duration_ = var_236_31 + var_236_23
					end

					if var_236_26.prefab_name ~= "" and arg_233_1.actors_[var_236_26.prefab_name] ~= nil then
						local var_236_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_233_1.actors_[var_236_26.prefab_name].transform, "story_v_out_413161", "413161057", "story_v_out_413161.awb")

						arg_233_1:RecordAudio("413161057", var_236_32)
						arg_233_1:RecordAudio("413161057", var_236_32)
					else
						arg_233_1:AudioAction("play", "voice", "story_v_out_413161", "413161057", "story_v_out_413161.awb")
					end

					arg_233_1:RecordHistoryTalkVoice("story_v_out_413161", "413161057", "story_v_out_413161.awb")
				end

				arg_233_1:RecordContent(arg_233_1.text_.text)
			end

			local var_236_33 = math.max(var_236_24, arg_233_1.talkMaxDuration)

			if var_236_23 <= arg_233_1.time_ and arg_233_1.time_ < var_236_23 + var_236_33 then
				arg_233_1.typewritter.percent = (arg_233_1.time_ - var_236_23) / var_236_33

				arg_233_1.typewritter:SetDirty()
			end

			if arg_233_1.time_ >= var_236_23 + var_236_33 and arg_233_1.time_ < var_236_23 + var_236_33 + arg_236_0 then
				arg_233_1.typewritter.percent = 1

				arg_233_1.typewritter:SetDirty()
				arg_233_1:ShowNextGo(true)
			end
		end
	end,
	Play413161058 = function(arg_237_0, arg_237_1)
		arg_237_1.time_ = 0
		arg_237_1.frameCnt_ = 0
		arg_237_1.state_ = "playing"
		arg_237_1.curTalkId_ = 413161058
		arg_237_1.duration_ = 4.2

		local var_237_0 = {
			zh = 4.2,
			ja = 3.566
		}
		local var_237_1 = manager.audio:GetLocalizationFlag()

		if var_237_0[var_237_1] ~= nil then
			arg_237_1.duration_ = var_237_0[var_237_1]
		end

		SetActive(arg_237_1.tipsGo_, false)

		function arg_237_1.onSingleLineFinish_()
			arg_237_1.onSingleLineUpdate_ = nil
			arg_237_1.onSingleLineFinish_ = nil
			arg_237_1.state_ = "waiting"
		end

		function arg_237_1.playNext_(arg_239_0)
			if arg_239_0 == 1 then
				arg_237_0:Play413161059(arg_237_1)
			end
		end

		function arg_237_1.onSingleLineUpdate_(arg_240_0)
			local var_240_0 = arg_237_1.actors_["10022"].transform
			local var_240_1 = 0

			if var_240_1 < arg_237_1.time_ and arg_237_1.time_ <= var_240_1 + arg_240_0 then
				arg_237_1.var_.moveOldPos10022 = var_240_0.localPosition
				var_240_0.localScale = Vector3.New(1, 1, 1)

				arg_237_1:CheckSpriteTmpPos("10022", 4)

				local var_240_2 = var_240_0.childCount

				for iter_240_0 = 0, var_240_2 - 1 do
					local var_240_3 = var_240_0:GetChild(iter_240_0)

					if var_240_3.name == "split_3" or not string.find(var_240_3.name, "split") then
						var_240_3.gameObject:SetActive(true)
					else
						var_240_3.gameObject:SetActive(false)
					end
				end
			end

			local var_240_4 = 0.001

			if var_240_1 <= arg_237_1.time_ and arg_237_1.time_ < var_240_1 + var_240_4 then
				local var_240_5 = (arg_237_1.time_ - var_240_1) / var_240_4
				local var_240_6 = Vector3.New(390, -315, -320)

				var_240_0.localPosition = Vector3.Lerp(arg_237_1.var_.moveOldPos10022, var_240_6, var_240_5)
			end

			if arg_237_1.time_ >= var_240_1 + var_240_4 and arg_237_1.time_ < var_240_1 + var_240_4 + arg_240_0 then
				var_240_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_240_7 = arg_237_1.actors_["10092"]
			local var_240_8 = 0

			if var_240_8 < arg_237_1.time_ and arg_237_1.time_ <= var_240_8 + arg_240_0 and not isNil(var_240_7) and arg_237_1.var_.actorSpriteComps10092 == nil then
				arg_237_1.var_.actorSpriteComps10092 = var_240_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_240_9 = 2

			if var_240_8 <= arg_237_1.time_ and arg_237_1.time_ < var_240_8 + var_240_9 and not isNil(var_240_7) then
				local var_240_10 = (arg_237_1.time_ - var_240_8) / var_240_9

				if arg_237_1.var_.actorSpriteComps10092 then
					for iter_240_1, iter_240_2 in pairs(arg_237_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_240_2 then
							if arg_237_1.isInRecall_ then
								local var_240_11 = Mathf.Lerp(iter_240_2.color.r, arg_237_1.hightColor2.r, var_240_10)
								local var_240_12 = Mathf.Lerp(iter_240_2.color.g, arg_237_1.hightColor2.g, var_240_10)
								local var_240_13 = Mathf.Lerp(iter_240_2.color.b, arg_237_1.hightColor2.b, var_240_10)

								iter_240_2.color = Color.New(var_240_11, var_240_12, var_240_13)
							else
								local var_240_14 = Mathf.Lerp(iter_240_2.color.r, 0.5, var_240_10)

								iter_240_2.color = Color.New(var_240_14, var_240_14, var_240_14)
							end
						end
					end
				end
			end

			if arg_237_1.time_ >= var_240_8 + var_240_9 and arg_237_1.time_ < var_240_8 + var_240_9 + arg_240_0 and not isNil(var_240_7) and arg_237_1.var_.actorSpriteComps10092 then
				for iter_240_3, iter_240_4 in pairs(arg_237_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_240_4 then
						if arg_237_1.isInRecall_ then
							iter_240_4.color = arg_237_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_240_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_237_1.var_.actorSpriteComps10092 = nil
			end

			local var_240_15 = arg_237_1.actors_["10022"]
			local var_240_16 = 0

			if var_240_16 < arg_237_1.time_ and arg_237_1.time_ <= var_240_16 + arg_240_0 and not isNil(var_240_15) and arg_237_1.var_.actorSpriteComps10022 == nil then
				arg_237_1.var_.actorSpriteComps10022 = var_240_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_240_17 = 2

			if var_240_16 <= arg_237_1.time_ and arg_237_1.time_ < var_240_16 + var_240_17 and not isNil(var_240_15) then
				local var_240_18 = (arg_237_1.time_ - var_240_16) / var_240_17

				if arg_237_1.var_.actorSpriteComps10022 then
					for iter_240_5, iter_240_6 in pairs(arg_237_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_240_6 then
							if arg_237_1.isInRecall_ then
								local var_240_19 = Mathf.Lerp(iter_240_6.color.r, arg_237_1.hightColor1.r, var_240_18)
								local var_240_20 = Mathf.Lerp(iter_240_6.color.g, arg_237_1.hightColor1.g, var_240_18)
								local var_240_21 = Mathf.Lerp(iter_240_6.color.b, arg_237_1.hightColor1.b, var_240_18)

								iter_240_6.color = Color.New(var_240_19, var_240_20, var_240_21)
							else
								local var_240_22 = Mathf.Lerp(iter_240_6.color.r, 1, var_240_18)

								iter_240_6.color = Color.New(var_240_22, var_240_22, var_240_22)
							end
						end
					end
				end
			end

			if arg_237_1.time_ >= var_240_16 + var_240_17 and arg_237_1.time_ < var_240_16 + var_240_17 + arg_240_0 and not isNil(var_240_15) and arg_237_1.var_.actorSpriteComps10022 then
				for iter_240_7, iter_240_8 in pairs(arg_237_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_240_8 then
						if arg_237_1.isInRecall_ then
							iter_240_8.color = arg_237_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_240_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_237_1.var_.actorSpriteComps10022 = nil
			end

			local var_240_23 = 0
			local var_240_24 = 0.525

			if var_240_23 < arg_237_1.time_ and arg_237_1.time_ <= var_240_23 + arg_240_0 then
				arg_237_1.talkMaxDuration = 0
				arg_237_1.dialogCg_.alpha = 1

				arg_237_1.dialog_:SetActive(true)
				SetActive(arg_237_1.leftNameGo_, true)

				local var_240_25 = arg_237_1:FormatText(StoryNameCfg[614].name)

				arg_237_1.leftNameTxt_.text = var_240_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_237_1.leftNameTxt_.transform)

				arg_237_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_237_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_237_1:RecordName(arg_237_1.leftNameTxt_.text)
				SetActive(arg_237_1.iconTrs_.gameObject, false)
				arg_237_1.callingController_:SetSelectedState("normal")

				local var_240_26 = arg_237_1:GetWordFromCfg(413161058)
				local var_240_27 = arg_237_1:FormatText(var_240_26.content)

				arg_237_1.text_.text = var_240_27

				LuaForUtil.ClearLinePrefixSymbol(arg_237_1.text_)

				local var_240_28 = 21
				local var_240_29 = utf8.len(var_240_27)
				local var_240_30 = var_240_28 <= 0 and var_240_24 or var_240_24 * (var_240_29 / var_240_28)

				if var_240_30 > 0 and var_240_24 < var_240_30 then
					arg_237_1.talkMaxDuration = var_240_30

					if var_240_30 + var_240_23 > arg_237_1.duration_ then
						arg_237_1.duration_ = var_240_30 + var_240_23
					end
				end

				arg_237_1.text_.text = var_240_27
				arg_237_1.typewritter.percent = 0

				arg_237_1.typewritter:SetDirty()
				arg_237_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161058", "story_v_out_413161.awb") ~= 0 then
					local var_240_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161058", "story_v_out_413161.awb") / 1000

					if var_240_31 + var_240_23 > arg_237_1.duration_ then
						arg_237_1.duration_ = var_240_31 + var_240_23
					end

					if var_240_26.prefab_name ~= "" and arg_237_1.actors_[var_240_26.prefab_name] ~= nil then
						local var_240_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_237_1.actors_[var_240_26.prefab_name].transform, "story_v_out_413161", "413161058", "story_v_out_413161.awb")

						arg_237_1:RecordAudio("413161058", var_240_32)
						arg_237_1:RecordAudio("413161058", var_240_32)
					else
						arg_237_1:AudioAction("play", "voice", "story_v_out_413161", "413161058", "story_v_out_413161.awb")
					end

					arg_237_1:RecordHistoryTalkVoice("story_v_out_413161", "413161058", "story_v_out_413161.awb")
				end

				arg_237_1:RecordContent(arg_237_1.text_.text)
			end

			local var_240_33 = math.max(var_240_24, arg_237_1.talkMaxDuration)

			if var_240_23 <= arg_237_1.time_ and arg_237_1.time_ < var_240_23 + var_240_33 then
				arg_237_1.typewritter.percent = (arg_237_1.time_ - var_240_23) / var_240_33

				arg_237_1.typewritter:SetDirty()
			end

			if arg_237_1.time_ >= var_240_23 + var_240_33 and arg_237_1.time_ < var_240_23 + var_240_33 + arg_240_0 then
				arg_237_1.typewritter.percent = 1

				arg_237_1.typewritter:SetDirty()
				arg_237_1:ShowNextGo(true)
			end
		end
	end,
	Play413161059 = function(arg_241_0, arg_241_1)
		arg_241_1.time_ = 0
		arg_241_1.frameCnt_ = 0
		arg_241_1.state_ = "playing"
		arg_241_1.curTalkId_ = 413161059
		arg_241_1.duration_ = 6.43

		local var_241_0 = {
			zh = 4.866,
			ja = 6.433
		}
		local var_241_1 = manager.audio:GetLocalizationFlag()

		if var_241_0[var_241_1] ~= nil then
			arg_241_1.duration_ = var_241_0[var_241_1]
		end

		SetActive(arg_241_1.tipsGo_, false)

		function arg_241_1.onSingleLineFinish_()
			arg_241_1.onSingleLineUpdate_ = nil
			arg_241_1.onSingleLineFinish_ = nil
			arg_241_1.state_ = "waiting"
		end

		function arg_241_1.playNext_(arg_243_0)
			if arg_243_0 == 1 then
				arg_241_0:Play413161060(arg_241_1)
			end
		end

		function arg_241_1.onSingleLineUpdate_(arg_244_0)
			local var_244_0 = arg_241_1.actors_["10092"].transform
			local var_244_1 = 0

			if var_244_1 < arg_241_1.time_ and arg_241_1.time_ <= var_244_1 + arg_244_0 then
				arg_241_1.var_.moveOldPos10092 = var_244_0.localPosition
				var_244_0.localScale = Vector3.New(1, 1, 1)

				arg_241_1:CheckSpriteTmpPos("10092", 2)

				local var_244_2 = var_244_0.childCount

				for iter_244_0 = 0, var_244_2 - 1 do
					local var_244_3 = var_244_0:GetChild(iter_244_0)

					if var_244_3.name == "split_1_1" or not string.find(var_244_3.name, "split") then
						var_244_3.gameObject:SetActive(true)
					else
						var_244_3.gameObject:SetActive(false)
					end
				end
			end

			local var_244_4 = 0.001

			if var_244_1 <= arg_241_1.time_ and arg_241_1.time_ < var_244_1 + var_244_4 then
				local var_244_5 = (arg_241_1.time_ - var_244_1) / var_244_4
				local var_244_6 = Vector3.New(-389.49, -300, -295)

				var_244_0.localPosition = Vector3.Lerp(arg_241_1.var_.moveOldPos10092, var_244_6, var_244_5)
			end

			if arg_241_1.time_ >= var_244_1 + var_244_4 and arg_241_1.time_ < var_244_1 + var_244_4 + arg_244_0 then
				var_244_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_244_7 = arg_241_1.actors_["10022"]
			local var_244_8 = 0

			if var_244_8 < arg_241_1.time_ and arg_241_1.time_ <= var_244_8 + arg_244_0 and not isNil(var_244_7) and arg_241_1.var_.actorSpriteComps10022 == nil then
				arg_241_1.var_.actorSpriteComps10022 = var_244_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_244_9 = 2

			if var_244_8 <= arg_241_1.time_ and arg_241_1.time_ < var_244_8 + var_244_9 and not isNil(var_244_7) then
				local var_244_10 = (arg_241_1.time_ - var_244_8) / var_244_9

				if arg_241_1.var_.actorSpriteComps10022 then
					for iter_244_1, iter_244_2 in pairs(arg_241_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_244_2 then
							if arg_241_1.isInRecall_ then
								local var_244_11 = Mathf.Lerp(iter_244_2.color.r, arg_241_1.hightColor2.r, var_244_10)
								local var_244_12 = Mathf.Lerp(iter_244_2.color.g, arg_241_1.hightColor2.g, var_244_10)
								local var_244_13 = Mathf.Lerp(iter_244_2.color.b, arg_241_1.hightColor2.b, var_244_10)

								iter_244_2.color = Color.New(var_244_11, var_244_12, var_244_13)
							else
								local var_244_14 = Mathf.Lerp(iter_244_2.color.r, 0.5, var_244_10)

								iter_244_2.color = Color.New(var_244_14, var_244_14, var_244_14)
							end
						end
					end
				end
			end

			if arg_241_1.time_ >= var_244_8 + var_244_9 and arg_241_1.time_ < var_244_8 + var_244_9 + arg_244_0 and not isNil(var_244_7) and arg_241_1.var_.actorSpriteComps10022 then
				for iter_244_3, iter_244_4 in pairs(arg_241_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_244_4 then
						if arg_241_1.isInRecall_ then
							iter_244_4.color = arg_241_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_244_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_241_1.var_.actorSpriteComps10022 = nil
			end

			local var_244_15 = arg_241_1.actors_["10092"]
			local var_244_16 = 0

			if var_244_16 < arg_241_1.time_ and arg_241_1.time_ <= var_244_16 + arg_244_0 and not isNil(var_244_15) and arg_241_1.var_.actorSpriteComps10092 == nil then
				arg_241_1.var_.actorSpriteComps10092 = var_244_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_244_17 = 2

			if var_244_16 <= arg_241_1.time_ and arg_241_1.time_ < var_244_16 + var_244_17 and not isNil(var_244_15) then
				local var_244_18 = (arg_241_1.time_ - var_244_16) / var_244_17

				if arg_241_1.var_.actorSpriteComps10092 then
					for iter_244_5, iter_244_6 in pairs(arg_241_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_244_6 then
							if arg_241_1.isInRecall_ then
								local var_244_19 = Mathf.Lerp(iter_244_6.color.r, arg_241_1.hightColor1.r, var_244_18)
								local var_244_20 = Mathf.Lerp(iter_244_6.color.g, arg_241_1.hightColor1.g, var_244_18)
								local var_244_21 = Mathf.Lerp(iter_244_6.color.b, arg_241_1.hightColor1.b, var_244_18)

								iter_244_6.color = Color.New(var_244_19, var_244_20, var_244_21)
							else
								local var_244_22 = Mathf.Lerp(iter_244_6.color.r, 1, var_244_18)

								iter_244_6.color = Color.New(var_244_22, var_244_22, var_244_22)
							end
						end
					end
				end
			end

			if arg_241_1.time_ >= var_244_16 + var_244_17 and arg_241_1.time_ < var_244_16 + var_244_17 + arg_244_0 and not isNil(var_244_15) and arg_241_1.var_.actorSpriteComps10092 then
				for iter_244_7, iter_244_8 in pairs(arg_241_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_244_8 then
						if arg_241_1.isInRecall_ then
							iter_244_8.color = arg_241_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_244_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_241_1.var_.actorSpriteComps10092 = nil
			end

			local var_244_23 = 0
			local var_244_24 = 0.625

			if var_244_23 < arg_241_1.time_ and arg_241_1.time_ <= var_244_23 + arg_244_0 then
				arg_241_1.talkMaxDuration = 0
				arg_241_1.dialogCg_.alpha = 1

				arg_241_1.dialog_:SetActive(true)
				SetActive(arg_241_1.leftNameGo_, true)

				local var_244_25 = arg_241_1:FormatText(StoryNameCfg[996].name)

				arg_241_1.leftNameTxt_.text = var_244_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_241_1.leftNameTxt_.transform)

				arg_241_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_241_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_241_1:RecordName(arg_241_1.leftNameTxt_.text)
				SetActive(arg_241_1.iconTrs_.gameObject, false)
				arg_241_1.callingController_:SetSelectedState("normal")

				local var_244_26 = arg_241_1:GetWordFromCfg(413161059)
				local var_244_27 = arg_241_1:FormatText(var_244_26.content)

				arg_241_1.text_.text = var_244_27

				LuaForUtil.ClearLinePrefixSymbol(arg_241_1.text_)

				local var_244_28 = 25
				local var_244_29 = utf8.len(var_244_27)
				local var_244_30 = var_244_28 <= 0 and var_244_24 or var_244_24 * (var_244_29 / var_244_28)

				if var_244_30 > 0 and var_244_24 < var_244_30 then
					arg_241_1.talkMaxDuration = var_244_30

					if var_244_30 + var_244_23 > arg_241_1.duration_ then
						arg_241_1.duration_ = var_244_30 + var_244_23
					end
				end

				arg_241_1.text_.text = var_244_27
				arg_241_1.typewritter.percent = 0

				arg_241_1.typewritter:SetDirty()
				arg_241_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161059", "story_v_out_413161.awb") ~= 0 then
					local var_244_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161059", "story_v_out_413161.awb") / 1000

					if var_244_31 + var_244_23 > arg_241_1.duration_ then
						arg_241_1.duration_ = var_244_31 + var_244_23
					end

					if var_244_26.prefab_name ~= "" and arg_241_1.actors_[var_244_26.prefab_name] ~= nil then
						local var_244_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_241_1.actors_[var_244_26.prefab_name].transform, "story_v_out_413161", "413161059", "story_v_out_413161.awb")

						arg_241_1:RecordAudio("413161059", var_244_32)
						arg_241_1:RecordAudio("413161059", var_244_32)
					else
						arg_241_1:AudioAction("play", "voice", "story_v_out_413161", "413161059", "story_v_out_413161.awb")
					end

					arg_241_1:RecordHistoryTalkVoice("story_v_out_413161", "413161059", "story_v_out_413161.awb")
				end

				arg_241_1:RecordContent(arg_241_1.text_.text)
			end

			local var_244_33 = math.max(var_244_24, arg_241_1.talkMaxDuration)

			if var_244_23 <= arg_241_1.time_ and arg_241_1.time_ < var_244_23 + var_244_33 then
				arg_241_1.typewritter.percent = (arg_241_1.time_ - var_244_23) / var_244_33

				arg_241_1.typewritter:SetDirty()
			end

			if arg_241_1.time_ >= var_244_23 + var_244_33 and arg_241_1.time_ < var_244_23 + var_244_33 + arg_244_0 then
				arg_241_1.typewritter.percent = 1

				arg_241_1.typewritter:SetDirty()
				arg_241_1:ShowNextGo(true)
			end
		end
	end,
	Play413161060 = function(arg_245_0, arg_245_1)
		arg_245_1.time_ = 0
		arg_245_1.frameCnt_ = 0
		arg_245_1.state_ = "playing"
		arg_245_1.curTalkId_ = 413161060
		arg_245_1.duration_ = 4.87

		local var_245_0 = {
			zh = 4.866,
			ja = 4.433
		}
		local var_245_1 = manager.audio:GetLocalizationFlag()

		if var_245_0[var_245_1] ~= nil then
			arg_245_1.duration_ = var_245_0[var_245_1]
		end

		SetActive(arg_245_1.tipsGo_, false)

		function arg_245_1.onSingleLineFinish_()
			arg_245_1.onSingleLineUpdate_ = nil
			arg_245_1.onSingleLineFinish_ = nil
			arg_245_1.state_ = "waiting"
		end

		function arg_245_1.playNext_(arg_247_0)
			if arg_247_0 == 1 then
				arg_245_0:Play413161061(arg_245_1)
			end
		end

		function arg_245_1.onSingleLineUpdate_(arg_248_0)
			local var_248_0 = arg_245_1.actors_["10022"].transform
			local var_248_1 = 0

			if var_248_1 < arg_245_1.time_ and arg_245_1.time_ <= var_248_1 + arg_248_0 then
				arg_245_1.var_.moveOldPos10022 = var_248_0.localPosition
				var_248_0.localScale = Vector3.New(1, 1, 1)

				arg_245_1:CheckSpriteTmpPos("10022", 4)

				local var_248_2 = var_248_0.childCount

				for iter_248_0 = 0, var_248_2 - 1 do
					local var_248_3 = var_248_0:GetChild(iter_248_0)

					if var_248_3.name == "" or not string.find(var_248_3.name, "split") then
						var_248_3.gameObject:SetActive(true)
					else
						var_248_3.gameObject:SetActive(false)
					end
				end
			end

			local var_248_4 = 0.001

			if var_248_1 <= arg_245_1.time_ and arg_245_1.time_ < var_248_1 + var_248_4 then
				local var_248_5 = (arg_245_1.time_ - var_248_1) / var_248_4
				local var_248_6 = Vector3.New(390, -315, -320)

				var_248_0.localPosition = Vector3.Lerp(arg_245_1.var_.moveOldPos10022, var_248_6, var_248_5)
			end

			if arg_245_1.time_ >= var_248_1 + var_248_4 and arg_245_1.time_ < var_248_1 + var_248_4 + arg_248_0 then
				var_248_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_248_7 = arg_245_1.actors_["10092"]
			local var_248_8 = 0

			if var_248_8 < arg_245_1.time_ and arg_245_1.time_ <= var_248_8 + arg_248_0 and not isNil(var_248_7) and arg_245_1.var_.actorSpriteComps10092 == nil then
				arg_245_1.var_.actorSpriteComps10092 = var_248_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_248_9 = 2

			if var_248_8 <= arg_245_1.time_ and arg_245_1.time_ < var_248_8 + var_248_9 and not isNil(var_248_7) then
				local var_248_10 = (arg_245_1.time_ - var_248_8) / var_248_9

				if arg_245_1.var_.actorSpriteComps10092 then
					for iter_248_1, iter_248_2 in pairs(arg_245_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_248_2 then
							if arg_245_1.isInRecall_ then
								local var_248_11 = Mathf.Lerp(iter_248_2.color.r, arg_245_1.hightColor2.r, var_248_10)
								local var_248_12 = Mathf.Lerp(iter_248_2.color.g, arg_245_1.hightColor2.g, var_248_10)
								local var_248_13 = Mathf.Lerp(iter_248_2.color.b, arg_245_1.hightColor2.b, var_248_10)

								iter_248_2.color = Color.New(var_248_11, var_248_12, var_248_13)
							else
								local var_248_14 = Mathf.Lerp(iter_248_2.color.r, 0.5, var_248_10)

								iter_248_2.color = Color.New(var_248_14, var_248_14, var_248_14)
							end
						end
					end
				end
			end

			if arg_245_1.time_ >= var_248_8 + var_248_9 and arg_245_1.time_ < var_248_8 + var_248_9 + arg_248_0 and not isNil(var_248_7) and arg_245_1.var_.actorSpriteComps10092 then
				for iter_248_3, iter_248_4 in pairs(arg_245_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_248_4 then
						if arg_245_1.isInRecall_ then
							iter_248_4.color = arg_245_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_248_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_245_1.var_.actorSpriteComps10092 = nil
			end

			local var_248_15 = arg_245_1.actors_["10022"]
			local var_248_16 = 0

			if var_248_16 < arg_245_1.time_ and arg_245_1.time_ <= var_248_16 + arg_248_0 and not isNil(var_248_15) and arg_245_1.var_.actorSpriteComps10022 == nil then
				arg_245_1.var_.actorSpriteComps10022 = var_248_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_248_17 = 2

			if var_248_16 <= arg_245_1.time_ and arg_245_1.time_ < var_248_16 + var_248_17 and not isNil(var_248_15) then
				local var_248_18 = (arg_245_1.time_ - var_248_16) / var_248_17

				if arg_245_1.var_.actorSpriteComps10022 then
					for iter_248_5, iter_248_6 in pairs(arg_245_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_248_6 then
							if arg_245_1.isInRecall_ then
								local var_248_19 = Mathf.Lerp(iter_248_6.color.r, arg_245_1.hightColor1.r, var_248_18)
								local var_248_20 = Mathf.Lerp(iter_248_6.color.g, arg_245_1.hightColor1.g, var_248_18)
								local var_248_21 = Mathf.Lerp(iter_248_6.color.b, arg_245_1.hightColor1.b, var_248_18)

								iter_248_6.color = Color.New(var_248_19, var_248_20, var_248_21)
							else
								local var_248_22 = Mathf.Lerp(iter_248_6.color.r, 1, var_248_18)

								iter_248_6.color = Color.New(var_248_22, var_248_22, var_248_22)
							end
						end
					end
				end
			end

			if arg_245_1.time_ >= var_248_16 + var_248_17 and arg_245_1.time_ < var_248_16 + var_248_17 + arg_248_0 and not isNil(var_248_15) and arg_245_1.var_.actorSpriteComps10022 then
				for iter_248_7, iter_248_8 in pairs(arg_245_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_248_8 then
						if arg_245_1.isInRecall_ then
							iter_248_8.color = arg_245_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_248_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_245_1.var_.actorSpriteComps10022 = nil
			end

			local var_248_23 = 0
			local var_248_24 = 0.6

			if var_248_23 < arg_245_1.time_ and arg_245_1.time_ <= var_248_23 + arg_248_0 then
				arg_245_1.talkMaxDuration = 0
				arg_245_1.dialogCg_.alpha = 1

				arg_245_1.dialog_:SetActive(true)
				SetActive(arg_245_1.leftNameGo_, true)

				local var_248_25 = arg_245_1:FormatText(StoryNameCfg[614].name)

				arg_245_1.leftNameTxt_.text = var_248_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_245_1.leftNameTxt_.transform)

				arg_245_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_245_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_245_1:RecordName(arg_245_1.leftNameTxt_.text)
				SetActive(arg_245_1.iconTrs_.gameObject, false)
				arg_245_1.callingController_:SetSelectedState("normal")

				local var_248_26 = arg_245_1:GetWordFromCfg(413161060)
				local var_248_27 = arg_245_1:FormatText(var_248_26.content)

				arg_245_1.text_.text = var_248_27

				LuaForUtil.ClearLinePrefixSymbol(arg_245_1.text_)

				local var_248_28 = 24
				local var_248_29 = utf8.len(var_248_27)
				local var_248_30 = var_248_28 <= 0 and var_248_24 or var_248_24 * (var_248_29 / var_248_28)

				if var_248_30 > 0 and var_248_24 < var_248_30 then
					arg_245_1.talkMaxDuration = var_248_30

					if var_248_30 + var_248_23 > arg_245_1.duration_ then
						arg_245_1.duration_ = var_248_30 + var_248_23
					end
				end

				arg_245_1.text_.text = var_248_27
				arg_245_1.typewritter.percent = 0

				arg_245_1.typewritter:SetDirty()
				arg_245_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161060", "story_v_out_413161.awb") ~= 0 then
					local var_248_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161060", "story_v_out_413161.awb") / 1000

					if var_248_31 + var_248_23 > arg_245_1.duration_ then
						arg_245_1.duration_ = var_248_31 + var_248_23
					end

					if var_248_26.prefab_name ~= "" and arg_245_1.actors_[var_248_26.prefab_name] ~= nil then
						local var_248_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_245_1.actors_[var_248_26.prefab_name].transform, "story_v_out_413161", "413161060", "story_v_out_413161.awb")

						arg_245_1:RecordAudio("413161060", var_248_32)
						arg_245_1:RecordAudio("413161060", var_248_32)
					else
						arg_245_1:AudioAction("play", "voice", "story_v_out_413161", "413161060", "story_v_out_413161.awb")
					end

					arg_245_1:RecordHistoryTalkVoice("story_v_out_413161", "413161060", "story_v_out_413161.awb")
				end

				arg_245_1:RecordContent(arg_245_1.text_.text)
			end

			local var_248_33 = math.max(var_248_24, arg_245_1.talkMaxDuration)

			if var_248_23 <= arg_245_1.time_ and arg_245_1.time_ < var_248_23 + var_248_33 then
				arg_245_1.typewritter.percent = (arg_245_1.time_ - var_248_23) / var_248_33

				arg_245_1.typewritter:SetDirty()
			end

			if arg_245_1.time_ >= var_248_23 + var_248_33 and arg_245_1.time_ < var_248_23 + var_248_33 + arg_248_0 then
				arg_245_1.typewritter.percent = 1

				arg_245_1.typewritter:SetDirty()
				arg_245_1:ShowNextGo(true)
			end
		end
	end,
	Play413161061 = function(arg_249_0, arg_249_1)
		arg_249_1.time_ = 0
		arg_249_1.frameCnt_ = 0
		arg_249_1.state_ = "playing"
		arg_249_1.curTalkId_ = 413161061
		arg_249_1.duration_ = 4.9

		local var_249_0 = {
			zh = 4.9,
			ja = 4.5
		}
		local var_249_1 = manager.audio:GetLocalizationFlag()

		if var_249_0[var_249_1] ~= nil then
			arg_249_1.duration_ = var_249_0[var_249_1]
		end

		SetActive(arg_249_1.tipsGo_, false)

		function arg_249_1.onSingleLineFinish_()
			arg_249_1.onSingleLineUpdate_ = nil
			arg_249_1.onSingleLineFinish_ = nil
			arg_249_1.state_ = "waiting"
		end

		function arg_249_1.playNext_(arg_251_0)
			if arg_251_0 == 1 then
				arg_249_0:Play413161062(arg_249_1)
			end
		end

		function arg_249_1.onSingleLineUpdate_(arg_252_0)
			local var_252_0 = arg_249_1.actors_["10022"]
			local var_252_1 = 0

			if var_252_1 < arg_249_1.time_ and arg_249_1.time_ <= var_252_1 + arg_252_0 and not isNil(var_252_0) and arg_249_1.var_.actorSpriteComps10022 == nil then
				arg_249_1.var_.actorSpriteComps10022 = var_252_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_252_2 = 2

			if var_252_1 <= arg_249_1.time_ and arg_249_1.time_ < var_252_1 + var_252_2 and not isNil(var_252_0) then
				local var_252_3 = (arg_249_1.time_ - var_252_1) / var_252_2

				if arg_249_1.var_.actorSpriteComps10022 then
					for iter_252_0, iter_252_1 in pairs(arg_249_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_252_1 then
							if arg_249_1.isInRecall_ then
								local var_252_4 = Mathf.Lerp(iter_252_1.color.r, arg_249_1.hightColor2.r, var_252_3)
								local var_252_5 = Mathf.Lerp(iter_252_1.color.g, arg_249_1.hightColor2.g, var_252_3)
								local var_252_6 = Mathf.Lerp(iter_252_1.color.b, arg_249_1.hightColor2.b, var_252_3)

								iter_252_1.color = Color.New(var_252_4, var_252_5, var_252_6)
							else
								local var_252_7 = Mathf.Lerp(iter_252_1.color.r, 0.5, var_252_3)

								iter_252_1.color = Color.New(var_252_7, var_252_7, var_252_7)
							end
						end
					end
				end
			end

			if arg_249_1.time_ >= var_252_1 + var_252_2 and arg_249_1.time_ < var_252_1 + var_252_2 + arg_252_0 and not isNil(var_252_0) and arg_249_1.var_.actorSpriteComps10022 then
				for iter_252_2, iter_252_3 in pairs(arg_249_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_252_3 then
						if arg_249_1.isInRecall_ then
							iter_252_3.color = arg_249_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_252_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_249_1.var_.actorSpriteComps10022 = nil
			end

			local var_252_8 = arg_249_1.actors_["10092"]
			local var_252_9 = 0

			if var_252_9 < arg_249_1.time_ and arg_249_1.time_ <= var_252_9 + arg_252_0 and not isNil(var_252_8) and arg_249_1.var_.actorSpriteComps10092 == nil then
				arg_249_1.var_.actorSpriteComps10092 = var_252_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_252_10 = 2

			if var_252_9 <= arg_249_1.time_ and arg_249_1.time_ < var_252_9 + var_252_10 and not isNil(var_252_8) then
				local var_252_11 = (arg_249_1.time_ - var_252_9) / var_252_10

				if arg_249_1.var_.actorSpriteComps10092 then
					for iter_252_4, iter_252_5 in pairs(arg_249_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_252_5 then
							if arg_249_1.isInRecall_ then
								local var_252_12 = Mathf.Lerp(iter_252_5.color.r, arg_249_1.hightColor1.r, var_252_11)
								local var_252_13 = Mathf.Lerp(iter_252_5.color.g, arg_249_1.hightColor1.g, var_252_11)
								local var_252_14 = Mathf.Lerp(iter_252_5.color.b, arg_249_1.hightColor1.b, var_252_11)

								iter_252_5.color = Color.New(var_252_12, var_252_13, var_252_14)
							else
								local var_252_15 = Mathf.Lerp(iter_252_5.color.r, 1, var_252_11)

								iter_252_5.color = Color.New(var_252_15, var_252_15, var_252_15)
							end
						end
					end
				end
			end

			if arg_249_1.time_ >= var_252_9 + var_252_10 and arg_249_1.time_ < var_252_9 + var_252_10 + arg_252_0 and not isNil(var_252_8) and arg_249_1.var_.actorSpriteComps10092 then
				for iter_252_6, iter_252_7 in pairs(arg_249_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_252_7 then
						if arg_249_1.isInRecall_ then
							iter_252_7.color = arg_249_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_252_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_249_1.var_.actorSpriteComps10092 = nil
			end

			local var_252_16 = 0
			local var_252_17 = 0.675

			if var_252_16 < arg_249_1.time_ and arg_249_1.time_ <= var_252_16 + arg_252_0 then
				arg_249_1.talkMaxDuration = 0
				arg_249_1.dialogCg_.alpha = 1

				arg_249_1.dialog_:SetActive(true)
				SetActive(arg_249_1.leftNameGo_, true)

				local var_252_18 = arg_249_1:FormatText(StoryNameCfg[996].name)

				arg_249_1.leftNameTxt_.text = var_252_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_249_1.leftNameTxt_.transform)

				arg_249_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_249_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_249_1:RecordName(arg_249_1.leftNameTxt_.text)
				SetActive(arg_249_1.iconTrs_.gameObject, false)
				arg_249_1.callingController_:SetSelectedState("normal")

				local var_252_19 = arg_249_1:GetWordFromCfg(413161061)
				local var_252_20 = arg_249_1:FormatText(var_252_19.content)

				arg_249_1.text_.text = var_252_20

				LuaForUtil.ClearLinePrefixSymbol(arg_249_1.text_)

				local var_252_21 = 27
				local var_252_22 = utf8.len(var_252_20)
				local var_252_23 = var_252_21 <= 0 and var_252_17 or var_252_17 * (var_252_22 / var_252_21)

				if var_252_23 > 0 and var_252_17 < var_252_23 then
					arg_249_1.talkMaxDuration = var_252_23

					if var_252_23 + var_252_16 > arg_249_1.duration_ then
						arg_249_1.duration_ = var_252_23 + var_252_16
					end
				end

				arg_249_1.text_.text = var_252_20
				arg_249_1.typewritter.percent = 0

				arg_249_1.typewritter:SetDirty()
				arg_249_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161061", "story_v_out_413161.awb") ~= 0 then
					local var_252_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161061", "story_v_out_413161.awb") / 1000

					if var_252_24 + var_252_16 > arg_249_1.duration_ then
						arg_249_1.duration_ = var_252_24 + var_252_16
					end

					if var_252_19.prefab_name ~= "" and arg_249_1.actors_[var_252_19.prefab_name] ~= nil then
						local var_252_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_249_1.actors_[var_252_19.prefab_name].transform, "story_v_out_413161", "413161061", "story_v_out_413161.awb")

						arg_249_1:RecordAudio("413161061", var_252_25)
						arg_249_1:RecordAudio("413161061", var_252_25)
					else
						arg_249_1:AudioAction("play", "voice", "story_v_out_413161", "413161061", "story_v_out_413161.awb")
					end

					arg_249_1:RecordHistoryTalkVoice("story_v_out_413161", "413161061", "story_v_out_413161.awb")
				end

				arg_249_1:RecordContent(arg_249_1.text_.text)
			end

			local var_252_26 = math.max(var_252_17, arg_249_1.talkMaxDuration)

			if var_252_16 <= arg_249_1.time_ and arg_249_1.time_ < var_252_16 + var_252_26 then
				arg_249_1.typewritter.percent = (arg_249_1.time_ - var_252_16) / var_252_26

				arg_249_1.typewritter:SetDirty()
			end

			if arg_249_1.time_ >= var_252_16 + var_252_26 and arg_249_1.time_ < var_252_16 + var_252_26 + arg_252_0 then
				arg_249_1.typewritter.percent = 1

				arg_249_1.typewritter:SetDirty()
				arg_249_1:ShowNextGo(true)
			end
		end
	end,
	Play413161062 = function(arg_253_0, arg_253_1)
		arg_253_1.time_ = 0
		arg_253_1.frameCnt_ = 0
		arg_253_1.state_ = "playing"
		arg_253_1.curTalkId_ = 413161062
		arg_253_1.duration_ = 5

		SetActive(arg_253_1.tipsGo_, false)

		function arg_253_1.onSingleLineFinish_()
			arg_253_1.onSingleLineUpdate_ = nil
			arg_253_1.onSingleLineFinish_ = nil
			arg_253_1.state_ = "waiting"
		end

		function arg_253_1.playNext_(arg_255_0)
			if arg_255_0 == 1 then
				arg_253_0:Play413161063(arg_253_1)
			end
		end

		function arg_253_1.onSingleLineUpdate_(arg_256_0)
			local var_256_0 = arg_253_1.actors_["10092"].transform
			local var_256_1 = 0

			if var_256_1 < arg_253_1.time_ and arg_253_1.time_ <= var_256_1 + arg_256_0 then
				arg_253_1.var_.moveOldPos10092 = var_256_0.localPosition
				var_256_0.localScale = Vector3.New(1, 1, 1)

				arg_253_1:CheckSpriteTmpPos("10092", 7)

				local var_256_2 = var_256_0.childCount

				for iter_256_0 = 0, var_256_2 - 1 do
					local var_256_3 = var_256_0:GetChild(iter_256_0)

					if var_256_3.name == "split_1_1" or not string.find(var_256_3.name, "split") then
						var_256_3.gameObject:SetActive(true)
					else
						var_256_3.gameObject:SetActive(false)
					end
				end
			end

			local var_256_4 = 0.001

			if var_256_1 <= arg_253_1.time_ and arg_253_1.time_ < var_256_1 + var_256_4 then
				local var_256_5 = (arg_253_1.time_ - var_256_1) / var_256_4
				local var_256_6 = Vector3.New(0, -2000, 0)

				var_256_0.localPosition = Vector3.Lerp(arg_253_1.var_.moveOldPos10092, var_256_6, var_256_5)
			end

			if arg_253_1.time_ >= var_256_1 + var_256_4 and arg_253_1.time_ < var_256_1 + var_256_4 + arg_256_0 then
				var_256_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_256_7 = arg_253_1.actors_["10092"]
			local var_256_8 = 0

			if var_256_8 < arg_253_1.time_ and arg_253_1.time_ <= var_256_8 + arg_256_0 and not isNil(var_256_7) and arg_253_1.var_.actorSpriteComps10092 == nil then
				arg_253_1.var_.actorSpriteComps10092 = var_256_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_256_9 = 2

			if var_256_8 <= arg_253_1.time_ and arg_253_1.time_ < var_256_8 + var_256_9 and not isNil(var_256_7) then
				local var_256_10 = (arg_253_1.time_ - var_256_8) / var_256_9

				if arg_253_1.var_.actorSpriteComps10092 then
					for iter_256_1, iter_256_2 in pairs(arg_253_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_256_2 then
							if arg_253_1.isInRecall_ then
								local var_256_11 = Mathf.Lerp(iter_256_2.color.r, arg_253_1.hightColor2.r, var_256_10)
								local var_256_12 = Mathf.Lerp(iter_256_2.color.g, arg_253_1.hightColor2.g, var_256_10)
								local var_256_13 = Mathf.Lerp(iter_256_2.color.b, arg_253_1.hightColor2.b, var_256_10)

								iter_256_2.color = Color.New(var_256_11, var_256_12, var_256_13)
							else
								local var_256_14 = Mathf.Lerp(iter_256_2.color.r, 0.5, var_256_10)

								iter_256_2.color = Color.New(var_256_14, var_256_14, var_256_14)
							end
						end
					end
				end
			end

			if arg_253_1.time_ >= var_256_8 + var_256_9 and arg_253_1.time_ < var_256_8 + var_256_9 + arg_256_0 and not isNil(var_256_7) and arg_253_1.var_.actorSpriteComps10092 then
				for iter_256_3, iter_256_4 in pairs(arg_253_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_256_4 then
						if arg_253_1.isInRecall_ then
							iter_256_4.color = arg_253_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_256_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_253_1.var_.actorSpriteComps10092 = nil
			end

			local var_256_15 = arg_253_1.actors_["10022"].transform
			local var_256_16 = 0

			if var_256_16 < arg_253_1.time_ and arg_253_1.time_ <= var_256_16 + arg_256_0 then
				arg_253_1.var_.moveOldPos10022 = var_256_15.localPosition
				var_256_15.localScale = Vector3.New(1, 1, 1)

				arg_253_1:CheckSpriteTmpPos("10022", 7)

				local var_256_17 = var_256_15.childCount

				for iter_256_5 = 0, var_256_17 - 1 do
					local var_256_18 = var_256_15:GetChild(iter_256_5)

					if var_256_18.name == "split_3" or not string.find(var_256_18.name, "split") then
						var_256_18.gameObject:SetActive(true)
					else
						var_256_18.gameObject:SetActive(false)
					end
				end
			end

			local var_256_19 = 0.001

			if var_256_16 <= arg_253_1.time_ and arg_253_1.time_ < var_256_16 + var_256_19 then
				local var_256_20 = (arg_253_1.time_ - var_256_16) / var_256_19
				local var_256_21 = Vector3.New(0, -2000, 0)

				var_256_15.localPosition = Vector3.Lerp(arg_253_1.var_.moveOldPos10022, var_256_21, var_256_20)
			end

			if arg_253_1.time_ >= var_256_16 + var_256_19 and arg_253_1.time_ < var_256_16 + var_256_19 + arg_256_0 then
				var_256_15.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_256_22 = 0
			local var_256_23 = 1

			if var_256_22 < arg_253_1.time_ and arg_253_1.time_ <= var_256_22 + arg_256_0 then
				arg_253_1.talkMaxDuration = 0
				arg_253_1.dialogCg_.alpha = 1

				arg_253_1.dialog_:SetActive(true)
				SetActive(arg_253_1.leftNameGo_, false)

				arg_253_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_253_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_253_1:RecordName(arg_253_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_253_1.iconTrs_.gameObject, false)
				arg_253_1.callingController_:SetSelectedState("normal")

				local var_256_24 = arg_253_1:GetWordFromCfg(413161062)
				local var_256_25 = arg_253_1:FormatText(var_256_24.content)

				arg_253_1.text_.text = var_256_25

				LuaForUtil.ClearLinePrefixSymbol(arg_253_1.text_)

				local var_256_26 = 40
				local var_256_27 = utf8.len(var_256_25)
				local var_256_28 = var_256_26 <= 0 and var_256_23 or var_256_23 * (var_256_27 / var_256_26)

				if var_256_28 > 0 and var_256_23 < var_256_28 then
					arg_253_1.talkMaxDuration = var_256_28

					if var_256_28 + var_256_22 > arg_253_1.duration_ then
						arg_253_1.duration_ = var_256_28 + var_256_22
					end
				end

				arg_253_1.text_.text = var_256_25
				arg_253_1.typewritter.percent = 0

				arg_253_1.typewritter:SetDirty()
				arg_253_1:ShowNextGo(false)
				arg_253_1:RecordContent(arg_253_1.text_.text)
			end

			local var_256_29 = math.max(var_256_23, arg_253_1.talkMaxDuration)

			if var_256_22 <= arg_253_1.time_ and arg_253_1.time_ < var_256_22 + var_256_29 then
				arg_253_1.typewritter.percent = (arg_253_1.time_ - var_256_22) / var_256_29

				arg_253_1.typewritter:SetDirty()
			end

			if arg_253_1.time_ >= var_256_22 + var_256_29 and arg_253_1.time_ < var_256_22 + var_256_29 + arg_256_0 then
				arg_253_1.typewritter.percent = 1

				arg_253_1.typewritter:SetDirty()
				arg_253_1:ShowNextGo(true)
			end
		end
	end,
	Play413161063 = function(arg_257_0, arg_257_1)
		arg_257_1.time_ = 0
		arg_257_1.frameCnt_ = 0
		arg_257_1.state_ = "playing"
		arg_257_1.curTalkId_ = 413161063
		arg_257_1.duration_ = 14.2

		local var_257_0 = {
			zh = 7.3,
			ja = 14.2
		}
		local var_257_1 = manager.audio:GetLocalizationFlag()

		if var_257_0[var_257_1] ~= nil then
			arg_257_1.duration_ = var_257_0[var_257_1]
		end

		SetActive(arg_257_1.tipsGo_, false)

		function arg_257_1.onSingleLineFinish_()
			arg_257_1.onSingleLineUpdate_ = nil
			arg_257_1.onSingleLineFinish_ = nil
			arg_257_1.state_ = "waiting"
		end

		function arg_257_1.playNext_(arg_259_0)
			if arg_259_0 == 1 then
				arg_257_0:Play413161064(arg_257_1)
			end
		end

		function arg_257_1.onSingleLineUpdate_(arg_260_0)
			local var_260_0 = arg_257_1.actors_["10092"].transform
			local var_260_1 = 2.00066666666733

			if var_260_1 < arg_257_1.time_ and arg_257_1.time_ <= var_260_1 + arg_260_0 then
				arg_257_1.var_.moveOldPos10092 = var_260_0.localPosition
				var_260_0.localScale = Vector3.New(1, 1, 1)

				arg_257_1:CheckSpriteTmpPos("10092", 2)

				local var_260_2 = var_260_0.childCount

				for iter_260_0 = 0, var_260_2 - 1 do
					local var_260_3 = var_260_0:GetChild(iter_260_0)

					if var_260_3.name == "" or not string.find(var_260_3.name, "split") then
						var_260_3.gameObject:SetActive(true)
					else
						var_260_3.gameObject:SetActive(false)
					end
				end
			end

			local var_260_4 = 0.001

			if var_260_1 <= arg_257_1.time_ and arg_257_1.time_ < var_260_1 + var_260_4 then
				local var_260_5 = (arg_257_1.time_ - var_260_1) / var_260_4
				local var_260_6 = Vector3.New(-389.49, -300, -295)

				var_260_0.localPosition = Vector3.Lerp(arg_257_1.var_.moveOldPos10092, var_260_6, var_260_5)
			end

			if arg_257_1.time_ >= var_260_1 + var_260_4 and arg_257_1.time_ < var_260_1 + var_260_4 + arg_260_0 then
				var_260_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_260_7 = arg_257_1.actors_["10092"]
			local var_260_8 = 2.00066666666667

			if var_260_8 < arg_257_1.time_ and arg_257_1.time_ <= var_260_8 + arg_260_0 and not isNil(var_260_7) and arg_257_1.var_.actorSpriteComps10092 == nil then
				arg_257_1.var_.actorSpriteComps10092 = var_260_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_260_9 = 2

			if var_260_8 <= arg_257_1.time_ and arg_257_1.time_ < var_260_8 + var_260_9 and not isNil(var_260_7) then
				local var_260_10 = (arg_257_1.time_ - var_260_8) / var_260_9

				if arg_257_1.var_.actorSpriteComps10092 then
					for iter_260_1, iter_260_2 in pairs(arg_257_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_260_2 then
							if arg_257_1.isInRecall_ then
								local var_260_11 = Mathf.Lerp(iter_260_2.color.r, arg_257_1.hightColor1.r, var_260_10)
								local var_260_12 = Mathf.Lerp(iter_260_2.color.g, arg_257_1.hightColor1.g, var_260_10)
								local var_260_13 = Mathf.Lerp(iter_260_2.color.b, arg_257_1.hightColor1.b, var_260_10)

								iter_260_2.color = Color.New(var_260_11, var_260_12, var_260_13)
							else
								local var_260_14 = Mathf.Lerp(iter_260_2.color.r, 1, var_260_10)

								iter_260_2.color = Color.New(var_260_14, var_260_14, var_260_14)
							end
						end
					end
				end
			end

			if arg_257_1.time_ >= var_260_8 + var_260_9 and arg_257_1.time_ < var_260_8 + var_260_9 + arg_260_0 and not isNil(var_260_7) and arg_257_1.var_.actorSpriteComps10092 then
				for iter_260_3, iter_260_4 in pairs(arg_257_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_260_4 then
						if arg_257_1.isInRecall_ then
							iter_260_4.color = arg_257_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_260_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_257_1.var_.actorSpriteComps10092 = nil
			end

			local var_260_15 = 0

			if var_260_15 < arg_257_1.time_ and arg_257_1.time_ <= var_260_15 + arg_260_0 then
				arg_257_1.mask_.enabled = true
				arg_257_1.mask_.raycastTarget = true

				arg_257_1:SetGaussion(false)
			end

			local var_260_16 = 1.2

			if var_260_15 <= arg_257_1.time_ and arg_257_1.time_ < var_260_15 + var_260_16 then
				local var_260_17 = (arg_257_1.time_ - var_260_15) / var_260_16
				local var_260_18 = Color.New(0, 0, 0)

				var_260_18.a = Mathf.Lerp(0, 1, var_260_17)
				arg_257_1.mask_.color = var_260_18
			end

			if arg_257_1.time_ >= var_260_15 + var_260_16 and arg_257_1.time_ < var_260_15 + var_260_16 + arg_260_0 then
				local var_260_19 = Color.New(0, 0, 0)

				var_260_19.a = 1
				arg_257_1.mask_.color = var_260_19
			end

			local var_260_20 = 1.2

			if var_260_20 < arg_257_1.time_ and arg_257_1.time_ <= var_260_20 + arg_260_0 then
				arg_257_1.mask_.enabled = true
				arg_257_1.mask_.raycastTarget = true

				arg_257_1:SetGaussion(false)
			end

			local var_260_21 = 1.2

			if var_260_20 <= arg_257_1.time_ and arg_257_1.time_ < var_260_20 + var_260_21 then
				local var_260_22 = (arg_257_1.time_ - var_260_20) / var_260_21
				local var_260_23 = Color.New(0, 0, 0)

				var_260_23.a = Mathf.Lerp(1, 0, var_260_22)
				arg_257_1.mask_.color = var_260_23
			end

			if arg_257_1.time_ >= var_260_20 + var_260_21 and arg_257_1.time_ < var_260_20 + var_260_21 + arg_260_0 then
				local var_260_24 = Color.New(0, 0, 0)
				local var_260_25 = 0

				arg_257_1.mask_.enabled = false
				var_260_24.a = var_260_25
				arg_257_1.mask_.color = var_260_24
			end

			local var_260_26 = arg_257_1.actors_["10092"]
			local var_260_27 = 2.00066666666667

			if var_260_27 < arg_257_1.time_ and arg_257_1.time_ <= var_260_27 + arg_260_0 then
				local var_260_28 = var_260_26:GetComponentInChildren(typeof(CanvasGroup))

				if var_260_28 then
					arg_257_1.var_.alphaOldValue10092 = var_260_28.alpha
					arg_257_1.var_.characterEffect10092 = var_260_28
				end

				arg_257_1.var_.alphaOldValue10092 = 0
			end

			local var_260_29 = 0.2

			if var_260_27 <= arg_257_1.time_ and arg_257_1.time_ < var_260_27 + var_260_29 then
				local var_260_30 = (arg_257_1.time_ - var_260_27) / var_260_29
				local var_260_31 = Mathf.Lerp(arg_257_1.var_.alphaOldValue10092, 1, var_260_30)

				if arg_257_1.var_.characterEffect10092 then
					arg_257_1.var_.characterEffect10092.alpha = var_260_31
				end
			end

			if arg_257_1.time_ >= var_260_27 + var_260_29 and arg_257_1.time_ < var_260_27 + var_260_29 + arg_260_0 and arg_257_1.var_.characterEffect10092 then
				arg_257_1.var_.characterEffect10092.alpha = 1
			end

			if arg_257_1.frameCnt_ <= 1 then
				arg_257_1.dialog_:SetActive(false)
			end

			local var_260_32 = 2.4
			local var_260_33 = 0.575

			if var_260_32 < arg_257_1.time_ and arg_257_1.time_ <= var_260_32 + arg_260_0 then
				arg_257_1.talkMaxDuration = 0

				arg_257_1.dialog_:SetActive(true)

				local var_260_34 = LeanTween.value(arg_257_1.dialog_, 0, 1, 0.3)

				var_260_34:setOnUpdate(LuaHelper.FloatAction(function(arg_261_0)
					arg_257_1.dialogCg_.alpha = arg_261_0
				end))
				var_260_34:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_257_1.dialog_)
					var_260_34:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_257_1.duration_ = arg_257_1.duration_ + 0.3

				SetActive(arg_257_1.leftNameGo_, true)

				local var_260_35 = arg_257_1:FormatText(StoryNameCfg[996].name)

				arg_257_1.leftNameTxt_.text = var_260_35

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_257_1.leftNameTxt_.transform)

				arg_257_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_257_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_257_1:RecordName(arg_257_1.leftNameTxt_.text)
				SetActive(arg_257_1.iconTrs_.gameObject, false)
				arg_257_1.callingController_:SetSelectedState("normal")

				local var_260_36 = arg_257_1:GetWordFromCfg(413161063)
				local var_260_37 = arg_257_1:FormatText(var_260_36.content)

				arg_257_1.text_.text = var_260_37

				LuaForUtil.ClearLinePrefixSymbol(arg_257_1.text_)

				local var_260_38 = 23
				local var_260_39 = utf8.len(var_260_37)
				local var_260_40 = var_260_38 <= 0 and var_260_33 or var_260_33 * (var_260_39 / var_260_38)

				if var_260_40 > 0 and var_260_33 < var_260_40 then
					arg_257_1.talkMaxDuration = var_260_40
					var_260_32 = var_260_32 + 0.3

					if var_260_40 + var_260_32 > arg_257_1.duration_ then
						arg_257_1.duration_ = var_260_40 + var_260_32
					end
				end

				arg_257_1.text_.text = var_260_37
				arg_257_1.typewritter.percent = 0

				arg_257_1.typewritter:SetDirty()
				arg_257_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161063", "story_v_out_413161.awb") ~= 0 then
					local var_260_41 = manager.audio:GetVoiceLength("story_v_out_413161", "413161063", "story_v_out_413161.awb") / 1000

					if var_260_41 + var_260_32 > arg_257_1.duration_ then
						arg_257_1.duration_ = var_260_41 + var_260_32
					end

					if var_260_36.prefab_name ~= "" and arg_257_1.actors_[var_260_36.prefab_name] ~= nil then
						local var_260_42 = LuaForUtil.PlayVoiceWithCriLipsync(arg_257_1.actors_[var_260_36.prefab_name].transform, "story_v_out_413161", "413161063", "story_v_out_413161.awb")

						arg_257_1:RecordAudio("413161063", var_260_42)
						arg_257_1:RecordAudio("413161063", var_260_42)
					else
						arg_257_1:AudioAction("play", "voice", "story_v_out_413161", "413161063", "story_v_out_413161.awb")
					end

					arg_257_1:RecordHistoryTalkVoice("story_v_out_413161", "413161063", "story_v_out_413161.awb")
				end

				arg_257_1:RecordContent(arg_257_1.text_.text)
			end

			local var_260_43 = var_260_32 + 0.3
			local var_260_44 = math.max(var_260_33, arg_257_1.talkMaxDuration)

			if var_260_43 <= arg_257_1.time_ and arg_257_1.time_ < var_260_43 + var_260_44 then
				arg_257_1.typewritter.percent = (arg_257_1.time_ - var_260_43) / var_260_44

				arg_257_1.typewritter:SetDirty()
			end

			if arg_257_1.time_ >= var_260_43 + var_260_44 and arg_257_1.time_ < var_260_43 + var_260_44 + arg_260_0 then
				arg_257_1.typewritter.percent = 1

				arg_257_1.typewritter:SetDirty()
				arg_257_1:ShowNextGo(true)
			end
		end
	end,
	Play413161064 = function(arg_263_0, arg_263_1)
		arg_263_1.time_ = 0
		arg_263_1.frameCnt_ = 0
		arg_263_1.state_ = "playing"
		arg_263_1.curTalkId_ = 413161064
		arg_263_1.duration_ = 2.13

		local var_263_0 = {
			zh = 2.13333333333333,
			ja = 1.999999999999
		}
		local var_263_1 = manager.audio:GetLocalizationFlag()

		if var_263_0[var_263_1] ~= nil then
			arg_263_1.duration_ = var_263_0[var_263_1]
		end

		SetActive(arg_263_1.tipsGo_, false)

		function arg_263_1.onSingleLineFinish_()
			arg_263_1.onSingleLineUpdate_ = nil
			arg_263_1.onSingleLineFinish_ = nil
			arg_263_1.state_ = "waiting"
		end

		function arg_263_1.playNext_(arg_265_0)
			if arg_265_0 == 1 then
				arg_263_0:Play413161065(arg_263_1)
			end
		end

		function arg_263_1.onSingleLineUpdate_(arg_266_0)
			local var_266_0 = arg_263_1.actors_["10092"].transform
			local var_266_1 = 0

			if var_266_1 < arg_263_1.time_ and arg_263_1.time_ <= var_266_1 + arg_266_0 then
				arg_263_1.var_.moveOldPos10092 = var_266_0.localPosition
				var_266_0.localScale = Vector3.New(1, 1, 1)

				arg_263_1:CheckSpriteTmpPos("10092", 2)

				local var_266_2 = var_266_0.childCount

				for iter_266_0 = 0, var_266_2 - 1 do
					local var_266_3 = var_266_0:GetChild(iter_266_0)

					if var_266_3.name == "" or not string.find(var_266_3.name, "split") then
						var_266_3.gameObject:SetActive(true)
					else
						var_266_3.gameObject:SetActive(false)
					end
				end
			end

			local var_266_4 = 0.001

			if var_266_1 <= arg_263_1.time_ and arg_263_1.time_ < var_266_1 + var_266_4 then
				local var_266_5 = (arg_263_1.time_ - var_266_1) / var_266_4
				local var_266_6 = Vector3.New(-389.49, -300, -295)

				var_266_0.localPosition = Vector3.Lerp(arg_263_1.var_.moveOldPos10092, var_266_6, var_266_5)
			end

			if arg_263_1.time_ >= var_266_1 + var_266_4 and arg_263_1.time_ < var_266_1 + var_266_4 + arg_266_0 then
				var_266_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_266_7 = arg_263_1.actors_["10022"].transform
			local var_266_8 = 0

			if var_266_8 < arg_263_1.time_ and arg_263_1.time_ <= var_266_8 + arg_266_0 then
				arg_263_1.var_.moveOldPos10022 = var_266_7.localPosition
				var_266_7.localScale = Vector3.New(1, 1, 1)

				arg_263_1:CheckSpriteTmpPos("10022", 4)

				local var_266_9 = var_266_7.childCount

				for iter_266_1 = 0, var_266_9 - 1 do
					local var_266_10 = var_266_7:GetChild(iter_266_1)

					if var_266_10.name == "split_6" or not string.find(var_266_10.name, "split") then
						var_266_10.gameObject:SetActive(true)
					else
						var_266_10.gameObject:SetActive(false)
					end
				end
			end

			local var_266_11 = 0.001

			if var_266_8 <= arg_263_1.time_ and arg_263_1.time_ < var_266_8 + var_266_11 then
				local var_266_12 = (arg_263_1.time_ - var_266_8) / var_266_11
				local var_266_13 = Vector3.New(390, -315, -320)

				var_266_7.localPosition = Vector3.Lerp(arg_263_1.var_.moveOldPos10022, var_266_13, var_266_12)
			end

			if arg_263_1.time_ >= var_266_8 + var_266_11 and arg_263_1.time_ < var_266_8 + var_266_11 + arg_266_0 then
				var_266_7.localPosition = Vector3.New(390, -315, -320)
			end

			local var_266_14 = arg_263_1.actors_["10092"]
			local var_266_15 = 0

			if var_266_15 < arg_263_1.time_ and arg_263_1.time_ <= var_266_15 + arg_266_0 and not isNil(var_266_14) and arg_263_1.var_.actorSpriteComps10092 == nil then
				arg_263_1.var_.actorSpriteComps10092 = var_266_14:GetComponentsInChildren(typeof(Image), true)
			end

			local var_266_16 = 2

			if var_266_15 <= arg_263_1.time_ and arg_263_1.time_ < var_266_15 + var_266_16 and not isNil(var_266_14) then
				local var_266_17 = (arg_263_1.time_ - var_266_15) / var_266_16

				if arg_263_1.var_.actorSpriteComps10092 then
					for iter_266_2, iter_266_3 in pairs(arg_263_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_266_3 then
							if arg_263_1.isInRecall_ then
								local var_266_18 = Mathf.Lerp(iter_266_3.color.r, arg_263_1.hightColor2.r, var_266_17)
								local var_266_19 = Mathf.Lerp(iter_266_3.color.g, arg_263_1.hightColor2.g, var_266_17)
								local var_266_20 = Mathf.Lerp(iter_266_3.color.b, arg_263_1.hightColor2.b, var_266_17)

								iter_266_3.color = Color.New(var_266_18, var_266_19, var_266_20)
							else
								local var_266_21 = Mathf.Lerp(iter_266_3.color.r, 0.5, var_266_17)

								iter_266_3.color = Color.New(var_266_21, var_266_21, var_266_21)
							end
						end
					end
				end
			end

			if arg_263_1.time_ >= var_266_15 + var_266_16 and arg_263_1.time_ < var_266_15 + var_266_16 + arg_266_0 and not isNil(var_266_14) and arg_263_1.var_.actorSpriteComps10092 then
				for iter_266_4, iter_266_5 in pairs(arg_263_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_266_5 then
						if arg_263_1.isInRecall_ then
							iter_266_5.color = arg_263_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_266_5.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_263_1.var_.actorSpriteComps10092 = nil
			end

			local var_266_22 = arg_263_1.actors_["10022"]
			local var_266_23 = 0

			if var_266_23 < arg_263_1.time_ and arg_263_1.time_ <= var_266_23 + arg_266_0 and not isNil(var_266_22) and arg_263_1.var_.actorSpriteComps10022 == nil then
				arg_263_1.var_.actorSpriteComps10022 = var_266_22:GetComponentsInChildren(typeof(Image), true)
			end

			local var_266_24 = 2

			if var_266_23 <= arg_263_1.time_ and arg_263_1.time_ < var_266_23 + var_266_24 and not isNil(var_266_22) then
				local var_266_25 = (arg_263_1.time_ - var_266_23) / var_266_24

				if arg_263_1.var_.actorSpriteComps10022 then
					for iter_266_6, iter_266_7 in pairs(arg_263_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_266_7 then
							if arg_263_1.isInRecall_ then
								local var_266_26 = Mathf.Lerp(iter_266_7.color.r, arg_263_1.hightColor1.r, var_266_25)
								local var_266_27 = Mathf.Lerp(iter_266_7.color.g, arg_263_1.hightColor1.g, var_266_25)
								local var_266_28 = Mathf.Lerp(iter_266_7.color.b, arg_263_1.hightColor1.b, var_266_25)

								iter_266_7.color = Color.New(var_266_26, var_266_27, var_266_28)
							else
								local var_266_29 = Mathf.Lerp(iter_266_7.color.r, 1, var_266_25)

								iter_266_7.color = Color.New(var_266_29, var_266_29, var_266_29)
							end
						end
					end
				end
			end

			if arg_263_1.time_ >= var_266_23 + var_266_24 and arg_263_1.time_ < var_266_23 + var_266_24 + arg_266_0 and not isNil(var_266_22) and arg_263_1.var_.actorSpriteComps10022 then
				for iter_266_8, iter_266_9 in pairs(arg_263_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_266_9 then
						if arg_263_1.isInRecall_ then
							iter_266_9.color = arg_263_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_266_9.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_263_1.var_.actorSpriteComps10022 = nil
			end

			local var_266_30 = arg_263_1.actors_["10022"]
			local var_266_31 = 0

			if var_266_31 < arg_263_1.time_ and arg_263_1.time_ <= var_266_31 + arg_266_0 then
				local var_266_32 = var_266_30:GetComponentInChildren(typeof(CanvasGroup))

				if var_266_32 then
					arg_263_1.var_.alphaOldValue10022 = var_266_32.alpha
					arg_263_1.var_.characterEffect10022 = var_266_32
				end

				arg_263_1.var_.alphaOldValue10022 = 0
			end

			local var_266_33 = 0.2

			if var_266_31 <= arg_263_1.time_ and arg_263_1.time_ < var_266_31 + var_266_33 then
				local var_266_34 = (arg_263_1.time_ - var_266_31) / var_266_33
				local var_266_35 = Mathf.Lerp(arg_263_1.var_.alphaOldValue10022, 1, var_266_34)

				if arg_263_1.var_.characterEffect10022 then
					arg_263_1.var_.characterEffect10022.alpha = var_266_35
				end
			end

			if arg_263_1.time_ >= var_266_31 + var_266_33 and arg_263_1.time_ < var_266_31 + var_266_33 + arg_266_0 and arg_263_1.var_.characterEffect10022 then
				arg_263_1.var_.characterEffect10022.alpha = 1
			end

			local var_266_36 = 0.333333333333333
			local var_266_37 = 0.175

			if var_266_36 < arg_263_1.time_ and arg_263_1.time_ <= var_266_36 + arg_266_0 then
				arg_263_1.talkMaxDuration = 0
				arg_263_1.dialogCg_.alpha = 1

				arg_263_1.dialog_:SetActive(true)
				SetActive(arg_263_1.leftNameGo_, true)

				local var_266_38 = arg_263_1:FormatText(StoryNameCfg[614].name)

				arg_263_1.leftNameTxt_.text = var_266_38

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_263_1.leftNameTxt_.transform)

				arg_263_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_263_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_263_1:RecordName(arg_263_1.leftNameTxt_.text)
				SetActive(arg_263_1.iconTrs_.gameObject, false)
				arg_263_1.callingController_:SetSelectedState("normal")

				local var_266_39 = arg_263_1:GetWordFromCfg(413161064)
				local var_266_40 = arg_263_1:FormatText(var_266_39.content)

				arg_263_1.text_.text = var_266_40

				LuaForUtil.ClearLinePrefixSymbol(arg_263_1.text_)

				local var_266_41 = 7
				local var_266_42 = utf8.len(var_266_40)
				local var_266_43 = var_266_41 <= 0 and var_266_37 or var_266_37 * (var_266_42 / var_266_41)

				if var_266_43 > 0 and var_266_37 < var_266_43 then
					arg_263_1.talkMaxDuration = var_266_43

					if var_266_43 + var_266_36 > arg_263_1.duration_ then
						arg_263_1.duration_ = var_266_43 + var_266_36
					end
				end

				arg_263_1.text_.text = var_266_40
				arg_263_1.typewritter.percent = 0

				arg_263_1.typewritter:SetDirty()
				arg_263_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161064", "story_v_out_413161.awb") ~= 0 then
					local var_266_44 = manager.audio:GetVoiceLength("story_v_out_413161", "413161064", "story_v_out_413161.awb") / 1000

					if var_266_44 + var_266_36 > arg_263_1.duration_ then
						arg_263_1.duration_ = var_266_44 + var_266_36
					end

					if var_266_39.prefab_name ~= "" and arg_263_1.actors_[var_266_39.prefab_name] ~= nil then
						local var_266_45 = LuaForUtil.PlayVoiceWithCriLipsync(arg_263_1.actors_[var_266_39.prefab_name].transform, "story_v_out_413161", "413161064", "story_v_out_413161.awb")

						arg_263_1:RecordAudio("413161064", var_266_45)
						arg_263_1:RecordAudio("413161064", var_266_45)
					else
						arg_263_1:AudioAction("play", "voice", "story_v_out_413161", "413161064", "story_v_out_413161.awb")
					end

					arg_263_1:RecordHistoryTalkVoice("story_v_out_413161", "413161064", "story_v_out_413161.awb")
				end

				arg_263_1:RecordContent(arg_263_1.text_.text)
			end

			local var_266_46 = math.max(var_266_37, arg_263_1.talkMaxDuration)

			if var_266_36 <= arg_263_1.time_ and arg_263_1.time_ < var_266_36 + var_266_46 then
				arg_263_1.typewritter.percent = (arg_263_1.time_ - var_266_36) / var_266_46

				arg_263_1.typewritter:SetDirty()
			end

			if arg_263_1.time_ >= var_266_36 + var_266_46 and arg_263_1.time_ < var_266_36 + var_266_46 + arg_266_0 then
				arg_263_1.typewritter.percent = 1

				arg_263_1.typewritter:SetDirty()
				arg_263_1:ShowNextGo(true)
			end
		end
	end,
	Play413161065 = function(arg_267_0, arg_267_1)
		arg_267_1.time_ = 0
		arg_267_1.frameCnt_ = 0
		arg_267_1.state_ = "playing"
		arg_267_1.curTalkId_ = 413161065
		arg_267_1.duration_ = 6.83

		local var_267_0 = {
			zh = 6.833,
			ja = 4.2
		}
		local var_267_1 = manager.audio:GetLocalizationFlag()

		if var_267_0[var_267_1] ~= nil then
			arg_267_1.duration_ = var_267_0[var_267_1]
		end

		SetActive(arg_267_1.tipsGo_, false)

		function arg_267_1.onSingleLineFinish_()
			arg_267_1.onSingleLineUpdate_ = nil
			arg_267_1.onSingleLineFinish_ = nil
			arg_267_1.state_ = "waiting"
		end

		function arg_267_1.playNext_(arg_269_0)
			if arg_269_0 == 1 then
				arg_267_0:Play413161066(arg_267_1)
			end
		end

		function arg_267_1.onSingleLineUpdate_(arg_270_0)
			local var_270_0 = arg_267_1.actors_["10092"].transform
			local var_270_1 = 0

			if var_270_1 < arg_267_1.time_ and arg_267_1.time_ <= var_270_1 + arg_270_0 then
				arg_267_1.var_.moveOldPos10092 = var_270_0.localPosition
				var_270_0.localScale = Vector3.New(1, 1, 1)

				arg_267_1:CheckSpriteTmpPos("10092", 2)

				local var_270_2 = var_270_0.childCount

				for iter_270_0 = 0, var_270_2 - 1 do
					local var_270_3 = var_270_0:GetChild(iter_270_0)

					if var_270_3.name == "split_1_1" or not string.find(var_270_3.name, "split") then
						var_270_3.gameObject:SetActive(true)
					else
						var_270_3.gameObject:SetActive(false)
					end
				end
			end

			local var_270_4 = 0.001

			if var_270_1 <= arg_267_1.time_ and arg_267_1.time_ < var_270_1 + var_270_4 then
				local var_270_5 = (arg_267_1.time_ - var_270_1) / var_270_4
				local var_270_6 = Vector3.New(-389.49, -300, -295)

				var_270_0.localPosition = Vector3.Lerp(arg_267_1.var_.moveOldPos10092, var_270_6, var_270_5)
			end

			if arg_267_1.time_ >= var_270_1 + var_270_4 and arg_267_1.time_ < var_270_1 + var_270_4 + arg_270_0 then
				var_270_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_270_7 = arg_267_1.actors_["10022"]
			local var_270_8 = 0

			if var_270_8 < arg_267_1.time_ and arg_267_1.time_ <= var_270_8 + arg_270_0 and not isNil(var_270_7) and arg_267_1.var_.actorSpriteComps10022 == nil then
				arg_267_1.var_.actorSpriteComps10022 = var_270_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_270_9 = 2

			if var_270_8 <= arg_267_1.time_ and arg_267_1.time_ < var_270_8 + var_270_9 and not isNil(var_270_7) then
				local var_270_10 = (arg_267_1.time_ - var_270_8) / var_270_9

				if arg_267_1.var_.actorSpriteComps10022 then
					for iter_270_1, iter_270_2 in pairs(arg_267_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_270_2 then
							if arg_267_1.isInRecall_ then
								local var_270_11 = Mathf.Lerp(iter_270_2.color.r, arg_267_1.hightColor2.r, var_270_10)
								local var_270_12 = Mathf.Lerp(iter_270_2.color.g, arg_267_1.hightColor2.g, var_270_10)
								local var_270_13 = Mathf.Lerp(iter_270_2.color.b, arg_267_1.hightColor2.b, var_270_10)

								iter_270_2.color = Color.New(var_270_11, var_270_12, var_270_13)
							else
								local var_270_14 = Mathf.Lerp(iter_270_2.color.r, 0.5, var_270_10)

								iter_270_2.color = Color.New(var_270_14, var_270_14, var_270_14)
							end
						end
					end
				end
			end

			if arg_267_1.time_ >= var_270_8 + var_270_9 and arg_267_1.time_ < var_270_8 + var_270_9 + arg_270_0 and not isNil(var_270_7) and arg_267_1.var_.actorSpriteComps10022 then
				for iter_270_3, iter_270_4 in pairs(arg_267_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_270_4 then
						if arg_267_1.isInRecall_ then
							iter_270_4.color = arg_267_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_270_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_267_1.var_.actorSpriteComps10022 = nil
			end

			local var_270_15 = arg_267_1.actors_["10092"]
			local var_270_16 = 0

			if var_270_16 < arg_267_1.time_ and arg_267_1.time_ <= var_270_16 + arg_270_0 and not isNil(var_270_15) and arg_267_1.var_.actorSpriteComps10092 == nil then
				arg_267_1.var_.actorSpriteComps10092 = var_270_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_270_17 = 2

			if var_270_16 <= arg_267_1.time_ and arg_267_1.time_ < var_270_16 + var_270_17 and not isNil(var_270_15) then
				local var_270_18 = (arg_267_1.time_ - var_270_16) / var_270_17

				if arg_267_1.var_.actorSpriteComps10092 then
					for iter_270_5, iter_270_6 in pairs(arg_267_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_270_6 then
							if arg_267_1.isInRecall_ then
								local var_270_19 = Mathf.Lerp(iter_270_6.color.r, arg_267_1.hightColor1.r, var_270_18)
								local var_270_20 = Mathf.Lerp(iter_270_6.color.g, arg_267_1.hightColor1.g, var_270_18)
								local var_270_21 = Mathf.Lerp(iter_270_6.color.b, arg_267_1.hightColor1.b, var_270_18)

								iter_270_6.color = Color.New(var_270_19, var_270_20, var_270_21)
							else
								local var_270_22 = Mathf.Lerp(iter_270_6.color.r, 1, var_270_18)

								iter_270_6.color = Color.New(var_270_22, var_270_22, var_270_22)
							end
						end
					end
				end
			end

			if arg_267_1.time_ >= var_270_16 + var_270_17 and arg_267_1.time_ < var_270_16 + var_270_17 + arg_270_0 and not isNil(var_270_15) and arg_267_1.var_.actorSpriteComps10092 then
				for iter_270_7, iter_270_8 in pairs(arg_267_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_270_8 then
						if arg_267_1.isInRecall_ then
							iter_270_8.color = arg_267_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_270_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_267_1.var_.actorSpriteComps10092 = nil
			end

			local var_270_23 = 0
			local var_270_24 = 0.675

			if var_270_23 < arg_267_1.time_ and arg_267_1.time_ <= var_270_23 + arg_270_0 then
				arg_267_1.talkMaxDuration = 0
				arg_267_1.dialogCg_.alpha = 1

				arg_267_1.dialog_:SetActive(true)
				SetActive(arg_267_1.leftNameGo_, true)

				local var_270_25 = arg_267_1:FormatText(StoryNameCfg[996].name)

				arg_267_1.leftNameTxt_.text = var_270_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_267_1.leftNameTxt_.transform)

				arg_267_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_267_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_267_1:RecordName(arg_267_1.leftNameTxt_.text)
				SetActive(arg_267_1.iconTrs_.gameObject, false)
				arg_267_1.callingController_:SetSelectedState("normal")

				local var_270_26 = arg_267_1:GetWordFromCfg(413161065)
				local var_270_27 = arg_267_1:FormatText(var_270_26.content)

				arg_267_1.text_.text = var_270_27

				LuaForUtil.ClearLinePrefixSymbol(arg_267_1.text_)

				local var_270_28 = 27
				local var_270_29 = utf8.len(var_270_27)
				local var_270_30 = var_270_28 <= 0 and var_270_24 or var_270_24 * (var_270_29 / var_270_28)

				if var_270_30 > 0 and var_270_24 < var_270_30 then
					arg_267_1.talkMaxDuration = var_270_30

					if var_270_30 + var_270_23 > arg_267_1.duration_ then
						arg_267_1.duration_ = var_270_30 + var_270_23
					end
				end

				arg_267_1.text_.text = var_270_27
				arg_267_1.typewritter.percent = 0

				arg_267_1.typewritter:SetDirty()
				arg_267_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161065", "story_v_out_413161.awb") ~= 0 then
					local var_270_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161065", "story_v_out_413161.awb") / 1000

					if var_270_31 + var_270_23 > arg_267_1.duration_ then
						arg_267_1.duration_ = var_270_31 + var_270_23
					end

					if var_270_26.prefab_name ~= "" and arg_267_1.actors_[var_270_26.prefab_name] ~= nil then
						local var_270_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_267_1.actors_[var_270_26.prefab_name].transform, "story_v_out_413161", "413161065", "story_v_out_413161.awb")

						arg_267_1:RecordAudio("413161065", var_270_32)
						arg_267_1:RecordAudio("413161065", var_270_32)
					else
						arg_267_1:AudioAction("play", "voice", "story_v_out_413161", "413161065", "story_v_out_413161.awb")
					end

					arg_267_1:RecordHistoryTalkVoice("story_v_out_413161", "413161065", "story_v_out_413161.awb")
				end

				arg_267_1:RecordContent(arg_267_1.text_.text)
			end

			local var_270_33 = math.max(var_270_24, arg_267_1.talkMaxDuration)

			if var_270_23 <= arg_267_1.time_ and arg_267_1.time_ < var_270_23 + var_270_33 then
				arg_267_1.typewritter.percent = (arg_267_1.time_ - var_270_23) / var_270_33

				arg_267_1.typewritter:SetDirty()
			end

			if arg_267_1.time_ >= var_270_23 + var_270_33 and arg_267_1.time_ < var_270_23 + var_270_33 + arg_270_0 then
				arg_267_1.typewritter.percent = 1

				arg_267_1.typewritter:SetDirty()
				arg_267_1:ShowNextGo(true)
			end
		end
	end,
	Play413161066 = function(arg_271_0, arg_271_1)
		arg_271_1.time_ = 0
		arg_271_1.frameCnt_ = 0
		arg_271_1.state_ = "playing"
		arg_271_1.curTalkId_ = 413161066
		arg_271_1.duration_ = 10.73

		local var_271_0 = {
			zh = 7.033,
			ja = 10.733
		}
		local var_271_1 = manager.audio:GetLocalizationFlag()

		if var_271_0[var_271_1] ~= nil then
			arg_271_1.duration_ = var_271_0[var_271_1]
		end

		SetActive(arg_271_1.tipsGo_, false)

		function arg_271_1.onSingleLineFinish_()
			arg_271_1.onSingleLineUpdate_ = nil
			arg_271_1.onSingleLineFinish_ = nil
			arg_271_1.state_ = "waiting"
		end

		function arg_271_1.playNext_(arg_273_0)
			if arg_273_0 == 1 then
				arg_271_0:Play413161067(arg_271_1)
			end
		end

		function arg_271_1.onSingleLineUpdate_(arg_274_0)
			local var_274_0 = 0
			local var_274_1 = 0.925

			if var_274_0 < arg_271_1.time_ and arg_271_1.time_ <= var_274_0 + arg_274_0 then
				arg_271_1.talkMaxDuration = 0
				arg_271_1.dialogCg_.alpha = 1

				arg_271_1.dialog_:SetActive(true)
				SetActive(arg_271_1.leftNameGo_, true)

				local var_274_2 = arg_271_1:FormatText(StoryNameCfg[996].name)

				arg_271_1.leftNameTxt_.text = var_274_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_271_1.leftNameTxt_.transform)

				arg_271_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_271_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_271_1:RecordName(arg_271_1.leftNameTxt_.text)
				SetActive(arg_271_1.iconTrs_.gameObject, false)
				arg_271_1.callingController_:SetSelectedState("normal")

				local var_274_3 = arg_271_1:GetWordFromCfg(413161066)
				local var_274_4 = arg_271_1:FormatText(var_274_3.content)

				arg_271_1.text_.text = var_274_4

				LuaForUtil.ClearLinePrefixSymbol(arg_271_1.text_)

				local var_274_5 = 37
				local var_274_6 = utf8.len(var_274_4)
				local var_274_7 = var_274_5 <= 0 and var_274_1 or var_274_1 * (var_274_6 / var_274_5)

				if var_274_7 > 0 and var_274_1 < var_274_7 then
					arg_271_1.talkMaxDuration = var_274_7

					if var_274_7 + var_274_0 > arg_271_1.duration_ then
						arg_271_1.duration_ = var_274_7 + var_274_0
					end
				end

				arg_271_1.text_.text = var_274_4
				arg_271_1.typewritter.percent = 0

				arg_271_1.typewritter:SetDirty()
				arg_271_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161066", "story_v_out_413161.awb") ~= 0 then
					local var_274_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161066", "story_v_out_413161.awb") / 1000

					if var_274_8 + var_274_0 > arg_271_1.duration_ then
						arg_271_1.duration_ = var_274_8 + var_274_0
					end

					if var_274_3.prefab_name ~= "" and arg_271_1.actors_[var_274_3.prefab_name] ~= nil then
						local var_274_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_271_1.actors_[var_274_3.prefab_name].transform, "story_v_out_413161", "413161066", "story_v_out_413161.awb")

						arg_271_1:RecordAudio("413161066", var_274_9)
						arg_271_1:RecordAudio("413161066", var_274_9)
					else
						arg_271_1:AudioAction("play", "voice", "story_v_out_413161", "413161066", "story_v_out_413161.awb")
					end

					arg_271_1:RecordHistoryTalkVoice("story_v_out_413161", "413161066", "story_v_out_413161.awb")
				end

				arg_271_1:RecordContent(arg_271_1.text_.text)
			end

			local var_274_10 = math.max(var_274_1, arg_271_1.talkMaxDuration)

			if var_274_0 <= arg_271_1.time_ and arg_271_1.time_ < var_274_0 + var_274_10 then
				arg_271_1.typewritter.percent = (arg_271_1.time_ - var_274_0) / var_274_10

				arg_271_1.typewritter:SetDirty()
			end

			if arg_271_1.time_ >= var_274_0 + var_274_10 and arg_271_1.time_ < var_274_0 + var_274_10 + arg_274_0 then
				arg_271_1.typewritter.percent = 1

				arg_271_1.typewritter:SetDirty()
				arg_271_1:ShowNextGo(true)
			end
		end
	end,
	Play413161067 = function(arg_275_0, arg_275_1)
		arg_275_1.time_ = 0
		arg_275_1.frameCnt_ = 0
		arg_275_1.state_ = "playing"
		arg_275_1.curTalkId_ = 413161067
		arg_275_1.duration_ = 11.7

		local var_275_0 = {
			zh = 6.133,
			ja = 11.7
		}
		local var_275_1 = manager.audio:GetLocalizationFlag()

		if var_275_0[var_275_1] ~= nil then
			arg_275_1.duration_ = var_275_0[var_275_1]
		end

		SetActive(arg_275_1.tipsGo_, false)

		function arg_275_1.onSingleLineFinish_()
			arg_275_1.onSingleLineUpdate_ = nil
			arg_275_1.onSingleLineFinish_ = nil
			arg_275_1.state_ = "waiting"
		end

		function arg_275_1.playNext_(arg_277_0)
			if arg_277_0 == 1 then
				arg_275_0:Play413161068(arg_275_1)
			end
		end

		function arg_275_1.onSingleLineUpdate_(arg_278_0)
			local var_278_0 = arg_275_1.actors_["10092"]
			local var_278_1 = 0

			if var_278_1 < arg_275_1.time_ and arg_275_1.time_ <= var_278_1 + arg_278_0 and not isNil(var_278_0) and arg_275_1.var_.actorSpriteComps10092 == nil then
				arg_275_1.var_.actorSpriteComps10092 = var_278_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_278_2 = 2

			if var_278_1 <= arg_275_1.time_ and arg_275_1.time_ < var_278_1 + var_278_2 and not isNil(var_278_0) then
				local var_278_3 = (arg_275_1.time_ - var_278_1) / var_278_2

				if arg_275_1.var_.actorSpriteComps10092 then
					for iter_278_0, iter_278_1 in pairs(arg_275_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_278_1 then
							if arg_275_1.isInRecall_ then
								local var_278_4 = Mathf.Lerp(iter_278_1.color.r, arg_275_1.hightColor1.r, var_278_3)
								local var_278_5 = Mathf.Lerp(iter_278_1.color.g, arg_275_1.hightColor1.g, var_278_3)
								local var_278_6 = Mathf.Lerp(iter_278_1.color.b, arg_275_1.hightColor1.b, var_278_3)

								iter_278_1.color = Color.New(var_278_4, var_278_5, var_278_6)
							else
								local var_278_7 = Mathf.Lerp(iter_278_1.color.r, 1, var_278_3)

								iter_278_1.color = Color.New(var_278_7, var_278_7, var_278_7)
							end
						end
					end
				end
			end

			if arg_275_1.time_ >= var_278_1 + var_278_2 and arg_275_1.time_ < var_278_1 + var_278_2 + arg_278_0 and not isNil(var_278_0) and arg_275_1.var_.actorSpriteComps10092 then
				for iter_278_2, iter_278_3 in pairs(arg_275_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_278_3 then
						if arg_275_1.isInRecall_ then
							iter_278_3.color = arg_275_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_278_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_275_1.var_.actorSpriteComps10092 = nil
			end

			local var_278_8 = 0
			local var_278_9 = 0.85

			if var_278_8 < arg_275_1.time_ and arg_275_1.time_ <= var_278_8 + arg_278_0 then
				arg_275_1.talkMaxDuration = 0
				arg_275_1.dialogCg_.alpha = 1

				arg_275_1.dialog_:SetActive(true)
				SetActive(arg_275_1.leftNameGo_, true)

				local var_278_10 = arg_275_1:FormatText(StoryNameCfg[996].name)

				arg_275_1.leftNameTxt_.text = var_278_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_275_1.leftNameTxt_.transform)

				arg_275_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_275_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_275_1:RecordName(arg_275_1.leftNameTxt_.text)
				SetActive(arg_275_1.iconTrs_.gameObject, false)
				arg_275_1.callingController_:SetSelectedState("normal")

				local var_278_11 = arg_275_1:GetWordFromCfg(413161067)
				local var_278_12 = arg_275_1:FormatText(var_278_11.content)

				arg_275_1.text_.text = var_278_12

				LuaForUtil.ClearLinePrefixSymbol(arg_275_1.text_)

				local var_278_13 = 34
				local var_278_14 = utf8.len(var_278_12)
				local var_278_15 = var_278_13 <= 0 and var_278_9 or var_278_9 * (var_278_14 / var_278_13)

				if var_278_15 > 0 and var_278_9 < var_278_15 then
					arg_275_1.talkMaxDuration = var_278_15

					if var_278_15 + var_278_8 > arg_275_1.duration_ then
						arg_275_1.duration_ = var_278_15 + var_278_8
					end
				end

				arg_275_1.text_.text = var_278_12
				arg_275_1.typewritter.percent = 0

				arg_275_1.typewritter:SetDirty()
				arg_275_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161067", "story_v_out_413161.awb") ~= 0 then
					local var_278_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161067", "story_v_out_413161.awb") / 1000

					if var_278_16 + var_278_8 > arg_275_1.duration_ then
						arg_275_1.duration_ = var_278_16 + var_278_8
					end

					if var_278_11.prefab_name ~= "" and arg_275_1.actors_[var_278_11.prefab_name] ~= nil then
						local var_278_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_275_1.actors_[var_278_11.prefab_name].transform, "story_v_out_413161", "413161067", "story_v_out_413161.awb")

						arg_275_1:RecordAudio("413161067", var_278_17)
						arg_275_1:RecordAudio("413161067", var_278_17)
					else
						arg_275_1:AudioAction("play", "voice", "story_v_out_413161", "413161067", "story_v_out_413161.awb")
					end

					arg_275_1:RecordHistoryTalkVoice("story_v_out_413161", "413161067", "story_v_out_413161.awb")
				end

				arg_275_1:RecordContent(arg_275_1.text_.text)
			end

			local var_278_18 = math.max(var_278_9, arg_275_1.talkMaxDuration)

			if var_278_8 <= arg_275_1.time_ and arg_275_1.time_ < var_278_8 + var_278_18 then
				arg_275_1.typewritter.percent = (arg_275_1.time_ - var_278_8) / var_278_18

				arg_275_1.typewritter:SetDirty()
			end

			if arg_275_1.time_ >= var_278_8 + var_278_18 and arg_275_1.time_ < var_278_8 + var_278_18 + arg_278_0 then
				arg_275_1.typewritter.percent = 1

				arg_275_1.typewritter:SetDirty()
				arg_275_1:ShowNextGo(true)
			end
		end
	end,
	Play413161068 = function(arg_279_0, arg_279_1)
		arg_279_1.time_ = 0
		arg_279_1.frameCnt_ = 0
		arg_279_1.state_ = "playing"
		arg_279_1.curTalkId_ = 413161068
		arg_279_1.duration_ = 6.93

		local var_279_0 = {
			zh = 6,
			ja = 6.933
		}
		local var_279_1 = manager.audio:GetLocalizationFlag()

		if var_279_0[var_279_1] ~= nil then
			arg_279_1.duration_ = var_279_0[var_279_1]
		end

		SetActive(arg_279_1.tipsGo_, false)

		function arg_279_1.onSingleLineFinish_()
			arg_279_1.onSingleLineUpdate_ = nil
			arg_279_1.onSingleLineFinish_ = nil
			arg_279_1.state_ = "waiting"
		end

		function arg_279_1.playNext_(arg_281_0)
			if arg_281_0 == 1 then
				arg_279_0:Play413161069(arg_279_1)
			end
		end

		function arg_279_1.onSingleLineUpdate_(arg_282_0)
			local var_282_0 = arg_279_1.actors_["10022"].transform
			local var_282_1 = 0

			if var_282_1 < arg_279_1.time_ and arg_279_1.time_ <= var_282_1 + arg_282_0 then
				arg_279_1.var_.moveOldPos10022 = var_282_0.localPosition
				var_282_0.localScale = Vector3.New(1, 1, 1)

				arg_279_1:CheckSpriteTmpPos("10022", 4)

				local var_282_2 = var_282_0.childCount

				for iter_282_0 = 0, var_282_2 - 1 do
					local var_282_3 = var_282_0:GetChild(iter_282_0)

					if var_282_3.name == "split_8" or not string.find(var_282_3.name, "split") then
						var_282_3.gameObject:SetActive(true)
					else
						var_282_3.gameObject:SetActive(false)
					end
				end
			end

			local var_282_4 = 0.001

			if var_282_1 <= arg_279_1.time_ and arg_279_1.time_ < var_282_1 + var_282_4 then
				local var_282_5 = (arg_279_1.time_ - var_282_1) / var_282_4
				local var_282_6 = Vector3.New(390, -315, -320)

				var_282_0.localPosition = Vector3.Lerp(arg_279_1.var_.moveOldPos10022, var_282_6, var_282_5)
			end

			if arg_279_1.time_ >= var_282_1 + var_282_4 and arg_279_1.time_ < var_282_1 + var_282_4 + arg_282_0 then
				var_282_0.localPosition = Vector3.New(390, -315, -320)
			end

			local var_282_7 = arg_279_1.actors_["10092"]
			local var_282_8 = 0

			if var_282_8 < arg_279_1.time_ and arg_279_1.time_ <= var_282_8 + arg_282_0 and not isNil(var_282_7) and arg_279_1.var_.actorSpriteComps10092 == nil then
				arg_279_1.var_.actorSpriteComps10092 = var_282_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_282_9 = 2

			if var_282_8 <= arg_279_1.time_ and arg_279_1.time_ < var_282_8 + var_282_9 and not isNil(var_282_7) then
				local var_282_10 = (arg_279_1.time_ - var_282_8) / var_282_9

				if arg_279_1.var_.actorSpriteComps10092 then
					for iter_282_1, iter_282_2 in pairs(arg_279_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_282_2 then
							if arg_279_1.isInRecall_ then
								local var_282_11 = Mathf.Lerp(iter_282_2.color.r, arg_279_1.hightColor2.r, var_282_10)
								local var_282_12 = Mathf.Lerp(iter_282_2.color.g, arg_279_1.hightColor2.g, var_282_10)
								local var_282_13 = Mathf.Lerp(iter_282_2.color.b, arg_279_1.hightColor2.b, var_282_10)

								iter_282_2.color = Color.New(var_282_11, var_282_12, var_282_13)
							else
								local var_282_14 = Mathf.Lerp(iter_282_2.color.r, 0.5, var_282_10)

								iter_282_2.color = Color.New(var_282_14, var_282_14, var_282_14)
							end
						end
					end
				end
			end

			if arg_279_1.time_ >= var_282_8 + var_282_9 and arg_279_1.time_ < var_282_8 + var_282_9 + arg_282_0 and not isNil(var_282_7) and arg_279_1.var_.actorSpriteComps10092 then
				for iter_282_3, iter_282_4 in pairs(arg_279_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_282_4 then
						if arg_279_1.isInRecall_ then
							iter_282_4.color = arg_279_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_282_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_279_1.var_.actorSpriteComps10092 = nil
			end

			local var_282_15 = arg_279_1.actors_["10022"]
			local var_282_16 = 0

			if var_282_16 < arg_279_1.time_ and arg_279_1.time_ <= var_282_16 + arg_282_0 and not isNil(var_282_15) and arg_279_1.var_.actorSpriteComps10022 == nil then
				arg_279_1.var_.actorSpriteComps10022 = var_282_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_282_17 = 2

			if var_282_16 <= arg_279_1.time_ and arg_279_1.time_ < var_282_16 + var_282_17 and not isNil(var_282_15) then
				local var_282_18 = (arg_279_1.time_ - var_282_16) / var_282_17

				if arg_279_1.var_.actorSpriteComps10022 then
					for iter_282_5, iter_282_6 in pairs(arg_279_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_282_6 then
							if arg_279_1.isInRecall_ then
								local var_282_19 = Mathf.Lerp(iter_282_6.color.r, arg_279_1.hightColor1.r, var_282_18)
								local var_282_20 = Mathf.Lerp(iter_282_6.color.g, arg_279_1.hightColor1.g, var_282_18)
								local var_282_21 = Mathf.Lerp(iter_282_6.color.b, arg_279_1.hightColor1.b, var_282_18)

								iter_282_6.color = Color.New(var_282_19, var_282_20, var_282_21)
							else
								local var_282_22 = Mathf.Lerp(iter_282_6.color.r, 1, var_282_18)

								iter_282_6.color = Color.New(var_282_22, var_282_22, var_282_22)
							end
						end
					end
				end
			end

			if arg_279_1.time_ >= var_282_16 + var_282_17 and arg_279_1.time_ < var_282_16 + var_282_17 + arg_282_0 and not isNil(var_282_15) and arg_279_1.var_.actorSpriteComps10022 then
				for iter_282_7, iter_282_8 in pairs(arg_279_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_282_8 then
						if arg_279_1.isInRecall_ then
							iter_282_8.color = arg_279_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_282_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_279_1.var_.actorSpriteComps10022 = nil
			end

			local var_282_23 = 0
			local var_282_24 = 0.625

			if var_282_23 < arg_279_1.time_ and arg_279_1.time_ <= var_282_23 + arg_282_0 then
				arg_279_1.talkMaxDuration = 0
				arg_279_1.dialogCg_.alpha = 1

				arg_279_1.dialog_:SetActive(true)
				SetActive(arg_279_1.leftNameGo_, true)

				local var_282_25 = arg_279_1:FormatText(StoryNameCfg[614].name)

				arg_279_1.leftNameTxt_.text = var_282_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_279_1.leftNameTxt_.transform)

				arg_279_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_279_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_279_1:RecordName(arg_279_1.leftNameTxt_.text)
				SetActive(arg_279_1.iconTrs_.gameObject, false)
				arg_279_1.callingController_:SetSelectedState("normal")

				local var_282_26 = arg_279_1:GetWordFromCfg(413161068)
				local var_282_27 = arg_279_1:FormatText(var_282_26.content)

				arg_279_1.text_.text = var_282_27

				LuaForUtil.ClearLinePrefixSymbol(arg_279_1.text_)

				local var_282_28 = 25
				local var_282_29 = utf8.len(var_282_27)
				local var_282_30 = var_282_28 <= 0 and var_282_24 or var_282_24 * (var_282_29 / var_282_28)

				if var_282_30 > 0 and var_282_24 < var_282_30 then
					arg_279_1.talkMaxDuration = var_282_30

					if var_282_30 + var_282_23 > arg_279_1.duration_ then
						arg_279_1.duration_ = var_282_30 + var_282_23
					end
				end

				arg_279_1.text_.text = var_282_27
				arg_279_1.typewritter.percent = 0

				arg_279_1.typewritter:SetDirty()
				arg_279_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161068", "story_v_out_413161.awb") ~= 0 then
					local var_282_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161068", "story_v_out_413161.awb") / 1000

					if var_282_31 + var_282_23 > arg_279_1.duration_ then
						arg_279_1.duration_ = var_282_31 + var_282_23
					end

					if var_282_26.prefab_name ~= "" and arg_279_1.actors_[var_282_26.prefab_name] ~= nil then
						local var_282_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_279_1.actors_[var_282_26.prefab_name].transform, "story_v_out_413161", "413161068", "story_v_out_413161.awb")

						arg_279_1:RecordAudio("413161068", var_282_32)
						arg_279_1:RecordAudio("413161068", var_282_32)
					else
						arg_279_1:AudioAction("play", "voice", "story_v_out_413161", "413161068", "story_v_out_413161.awb")
					end

					arg_279_1:RecordHistoryTalkVoice("story_v_out_413161", "413161068", "story_v_out_413161.awb")
				end

				arg_279_1:RecordContent(arg_279_1.text_.text)
			end

			local var_282_33 = math.max(var_282_24, arg_279_1.talkMaxDuration)

			if var_282_23 <= arg_279_1.time_ and arg_279_1.time_ < var_282_23 + var_282_33 then
				arg_279_1.typewritter.percent = (arg_279_1.time_ - var_282_23) / var_282_33

				arg_279_1.typewritter:SetDirty()
			end

			if arg_279_1.time_ >= var_282_23 + var_282_33 and arg_279_1.time_ < var_282_23 + var_282_33 + arg_282_0 then
				arg_279_1.typewritter.percent = 1

				arg_279_1.typewritter:SetDirty()
				arg_279_1:ShowNextGo(true)
			end
		end
	end,
	Play413161069 = function(arg_283_0, arg_283_1)
		arg_283_1.time_ = 0
		arg_283_1.frameCnt_ = 0
		arg_283_1.state_ = "playing"
		arg_283_1.curTalkId_ = 413161069
		arg_283_1.duration_ = 7.2

		local var_283_0 = {
			zh = 5.766,
			ja = 7.2
		}
		local var_283_1 = manager.audio:GetLocalizationFlag()

		if var_283_0[var_283_1] ~= nil then
			arg_283_1.duration_ = var_283_0[var_283_1]
		end

		SetActive(arg_283_1.tipsGo_, false)

		function arg_283_1.onSingleLineFinish_()
			arg_283_1.onSingleLineUpdate_ = nil
			arg_283_1.onSingleLineFinish_ = nil
			arg_283_1.state_ = "waiting"
		end

		function arg_283_1.playNext_(arg_285_0)
			if arg_285_0 == 1 then
				arg_283_0:Play413161070(arg_283_1)
			end
		end

		function arg_283_1.onSingleLineUpdate_(arg_286_0)
			local var_286_0 = arg_283_1.actors_["10092"].transform
			local var_286_1 = 0

			if var_286_1 < arg_283_1.time_ and arg_283_1.time_ <= var_286_1 + arg_286_0 then
				arg_283_1.var_.moveOldPos10092 = var_286_0.localPosition
				var_286_0.localScale = Vector3.New(1, 1, 1)

				arg_283_1:CheckSpriteTmpPos("10092", 2)

				local var_286_2 = var_286_0.childCount

				for iter_286_0 = 0, var_286_2 - 1 do
					local var_286_3 = var_286_0:GetChild(iter_286_0)

					if var_286_3.name == "split_6" or not string.find(var_286_3.name, "split") then
						var_286_3.gameObject:SetActive(true)
					else
						var_286_3.gameObject:SetActive(false)
					end
				end
			end

			local var_286_4 = 0.001

			if var_286_1 <= arg_283_1.time_ and arg_283_1.time_ < var_286_1 + var_286_4 then
				local var_286_5 = (arg_283_1.time_ - var_286_1) / var_286_4
				local var_286_6 = Vector3.New(-389.49, -300, -295)

				var_286_0.localPosition = Vector3.Lerp(arg_283_1.var_.moveOldPos10092, var_286_6, var_286_5)
			end

			if arg_283_1.time_ >= var_286_1 + var_286_4 and arg_283_1.time_ < var_286_1 + var_286_4 + arg_286_0 then
				var_286_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_286_7 = arg_283_1.actors_["10022"]
			local var_286_8 = 0

			if var_286_8 < arg_283_1.time_ and arg_283_1.time_ <= var_286_8 + arg_286_0 and not isNil(var_286_7) and arg_283_1.var_.actorSpriteComps10022 == nil then
				arg_283_1.var_.actorSpriteComps10022 = var_286_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_286_9 = 2

			if var_286_8 <= arg_283_1.time_ and arg_283_1.time_ < var_286_8 + var_286_9 and not isNil(var_286_7) then
				local var_286_10 = (arg_283_1.time_ - var_286_8) / var_286_9

				if arg_283_1.var_.actorSpriteComps10022 then
					for iter_286_1, iter_286_2 in pairs(arg_283_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_286_2 then
							if arg_283_1.isInRecall_ then
								local var_286_11 = Mathf.Lerp(iter_286_2.color.r, arg_283_1.hightColor2.r, var_286_10)
								local var_286_12 = Mathf.Lerp(iter_286_2.color.g, arg_283_1.hightColor2.g, var_286_10)
								local var_286_13 = Mathf.Lerp(iter_286_2.color.b, arg_283_1.hightColor2.b, var_286_10)

								iter_286_2.color = Color.New(var_286_11, var_286_12, var_286_13)
							else
								local var_286_14 = Mathf.Lerp(iter_286_2.color.r, 0.5, var_286_10)

								iter_286_2.color = Color.New(var_286_14, var_286_14, var_286_14)
							end
						end
					end
				end
			end

			if arg_283_1.time_ >= var_286_8 + var_286_9 and arg_283_1.time_ < var_286_8 + var_286_9 + arg_286_0 and not isNil(var_286_7) and arg_283_1.var_.actorSpriteComps10022 then
				for iter_286_3, iter_286_4 in pairs(arg_283_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_286_4 then
						if arg_283_1.isInRecall_ then
							iter_286_4.color = arg_283_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_286_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_283_1.var_.actorSpriteComps10022 = nil
			end

			local var_286_15 = arg_283_1.actors_["10092"]
			local var_286_16 = 0

			if var_286_16 < arg_283_1.time_ and arg_283_1.time_ <= var_286_16 + arg_286_0 and not isNil(var_286_15) and arg_283_1.var_.actorSpriteComps10092 == nil then
				arg_283_1.var_.actorSpriteComps10092 = var_286_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_286_17 = 2

			if var_286_16 <= arg_283_1.time_ and arg_283_1.time_ < var_286_16 + var_286_17 and not isNil(var_286_15) then
				local var_286_18 = (arg_283_1.time_ - var_286_16) / var_286_17

				if arg_283_1.var_.actorSpriteComps10092 then
					for iter_286_5, iter_286_6 in pairs(arg_283_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_286_6 then
							if arg_283_1.isInRecall_ then
								local var_286_19 = Mathf.Lerp(iter_286_6.color.r, arg_283_1.hightColor1.r, var_286_18)
								local var_286_20 = Mathf.Lerp(iter_286_6.color.g, arg_283_1.hightColor1.g, var_286_18)
								local var_286_21 = Mathf.Lerp(iter_286_6.color.b, arg_283_1.hightColor1.b, var_286_18)

								iter_286_6.color = Color.New(var_286_19, var_286_20, var_286_21)
							else
								local var_286_22 = Mathf.Lerp(iter_286_6.color.r, 1, var_286_18)

								iter_286_6.color = Color.New(var_286_22, var_286_22, var_286_22)
							end
						end
					end
				end
			end

			if arg_283_1.time_ >= var_286_16 + var_286_17 and arg_283_1.time_ < var_286_16 + var_286_17 + arg_286_0 and not isNil(var_286_15) and arg_283_1.var_.actorSpriteComps10092 then
				for iter_286_7, iter_286_8 in pairs(arg_283_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_286_8 then
						if arg_283_1.isInRecall_ then
							iter_286_8.color = arg_283_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_286_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_283_1.var_.actorSpriteComps10092 = nil
			end

			local var_286_23 = 0
			local var_286_24 = 0.875

			if var_286_23 < arg_283_1.time_ and arg_283_1.time_ <= var_286_23 + arg_286_0 then
				arg_283_1.talkMaxDuration = 0
				arg_283_1.dialogCg_.alpha = 1

				arg_283_1.dialog_:SetActive(true)
				SetActive(arg_283_1.leftNameGo_, true)

				local var_286_25 = arg_283_1:FormatText(StoryNameCfg[996].name)

				arg_283_1.leftNameTxt_.text = var_286_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_283_1.leftNameTxt_.transform)

				arg_283_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_283_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_283_1:RecordName(arg_283_1.leftNameTxt_.text)
				SetActive(arg_283_1.iconTrs_.gameObject, false)
				arg_283_1.callingController_:SetSelectedState("normal")

				local var_286_26 = arg_283_1:GetWordFromCfg(413161069)
				local var_286_27 = arg_283_1:FormatText(var_286_26.content)

				arg_283_1.text_.text = var_286_27

				LuaForUtil.ClearLinePrefixSymbol(arg_283_1.text_)

				local var_286_28 = 35
				local var_286_29 = utf8.len(var_286_27)
				local var_286_30 = var_286_28 <= 0 and var_286_24 or var_286_24 * (var_286_29 / var_286_28)

				if var_286_30 > 0 and var_286_24 < var_286_30 then
					arg_283_1.talkMaxDuration = var_286_30

					if var_286_30 + var_286_23 > arg_283_1.duration_ then
						arg_283_1.duration_ = var_286_30 + var_286_23
					end
				end

				arg_283_1.text_.text = var_286_27
				arg_283_1.typewritter.percent = 0

				arg_283_1.typewritter:SetDirty()
				arg_283_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161069", "story_v_out_413161.awb") ~= 0 then
					local var_286_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161069", "story_v_out_413161.awb") / 1000

					if var_286_31 + var_286_23 > arg_283_1.duration_ then
						arg_283_1.duration_ = var_286_31 + var_286_23
					end

					if var_286_26.prefab_name ~= "" and arg_283_1.actors_[var_286_26.prefab_name] ~= nil then
						local var_286_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_283_1.actors_[var_286_26.prefab_name].transform, "story_v_out_413161", "413161069", "story_v_out_413161.awb")

						arg_283_1:RecordAudio("413161069", var_286_32)
						arg_283_1:RecordAudio("413161069", var_286_32)
					else
						arg_283_1:AudioAction("play", "voice", "story_v_out_413161", "413161069", "story_v_out_413161.awb")
					end

					arg_283_1:RecordHistoryTalkVoice("story_v_out_413161", "413161069", "story_v_out_413161.awb")
				end

				arg_283_1:RecordContent(arg_283_1.text_.text)
			end

			local var_286_33 = math.max(var_286_24, arg_283_1.talkMaxDuration)

			if var_286_23 <= arg_283_1.time_ and arg_283_1.time_ < var_286_23 + var_286_33 then
				arg_283_1.typewritter.percent = (arg_283_1.time_ - var_286_23) / var_286_33

				arg_283_1.typewritter:SetDirty()
			end

			if arg_283_1.time_ >= var_286_23 + var_286_33 and arg_283_1.time_ < var_286_23 + var_286_33 + arg_286_0 then
				arg_283_1.typewritter.percent = 1

				arg_283_1.typewritter:SetDirty()
				arg_283_1:ShowNextGo(true)
			end
		end
	end,
	Play413161070 = function(arg_287_0, arg_287_1)
		arg_287_1.time_ = 0
		arg_287_1.frameCnt_ = 0
		arg_287_1.state_ = "playing"
		arg_287_1.curTalkId_ = 413161070
		arg_287_1.duration_ = 15.07

		local var_287_0 = {
			zh = 5.833,
			ja = 15.066
		}
		local var_287_1 = manager.audio:GetLocalizationFlag()

		if var_287_0[var_287_1] ~= nil then
			arg_287_1.duration_ = var_287_0[var_287_1]
		end

		SetActive(arg_287_1.tipsGo_, false)

		function arg_287_1.onSingleLineFinish_()
			arg_287_1.onSingleLineUpdate_ = nil
			arg_287_1.onSingleLineFinish_ = nil
			arg_287_1.state_ = "waiting"
		end

		function arg_287_1.playNext_(arg_289_0)
			if arg_289_0 == 1 then
				arg_287_0:Play413161071(arg_287_1)
			end
		end

		function arg_287_1.onSingleLineUpdate_(arg_290_0)
			local var_290_0 = arg_287_1.actors_["10092"]
			local var_290_1 = 0

			if var_290_1 < arg_287_1.time_ and arg_287_1.time_ <= var_290_1 + arg_290_0 and not isNil(var_290_0) and arg_287_1.var_.actorSpriteComps10092 == nil then
				arg_287_1.var_.actorSpriteComps10092 = var_290_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_290_2 = 2

			if var_290_1 <= arg_287_1.time_ and arg_287_1.time_ < var_290_1 + var_290_2 and not isNil(var_290_0) then
				local var_290_3 = (arg_287_1.time_ - var_290_1) / var_290_2

				if arg_287_1.var_.actorSpriteComps10092 then
					for iter_290_0, iter_290_1 in pairs(arg_287_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_290_1 then
							if arg_287_1.isInRecall_ then
								local var_290_4 = Mathf.Lerp(iter_290_1.color.r, arg_287_1.hightColor1.r, var_290_3)
								local var_290_5 = Mathf.Lerp(iter_290_1.color.g, arg_287_1.hightColor1.g, var_290_3)
								local var_290_6 = Mathf.Lerp(iter_290_1.color.b, arg_287_1.hightColor1.b, var_290_3)

								iter_290_1.color = Color.New(var_290_4, var_290_5, var_290_6)
							else
								local var_290_7 = Mathf.Lerp(iter_290_1.color.r, 1, var_290_3)

								iter_290_1.color = Color.New(var_290_7, var_290_7, var_290_7)
							end
						end
					end
				end
			end

			if arg_287_1.time_ >= var_290_1 + var_290_2 and arg_287_1.time_ < var_290_1 + var_290_2 + arg_290_0 and not isNil(var_290_0) and arg_287_1.var_.actorSpriteComps10092 then
				for iter_290_2, iter_290_3 in pairs(arg_287_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_290_3 then
						if arg_287_1.isInRecall_ then
							iter_290_3.color = arg_287_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_290_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_287_1.var_.actorSpriteComps10092 = nil
			end

			local var_290_8 = 0
			local var_290_9 = 0.775

			if var_290_8 < arg_287_1.time_ and arg_287_1.time_ <= var_290_8 + arg_290_0 then
				arg_287_1.talkMaxDuration = 0
				arg_287_1.dialogCg_.alpha = 1

				arg_287_1.dialog_:SetActive(true)
				SetActive(arg_287_1.leftNameGo_, true)

				local var_290_10 = arg_287_1:FormatText(StoryNameCfg[996].name)

				arg_287_1.leftNameTxt_.text = var_290_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_287_1.leftNameTxt_.transform)

				arg_287_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_287_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_287_1:RecordName(arg_287_1.leftNameTxt_.text)
				SetActive(arg_287_1.iconTrs_.gameObject, false)
				arg_287_1.callingController_:SetSelectedState("normal")

				local var_290_11 = arg_287_1:GetWordFromCfg(413161070)
				local var_290_12 = arg_287_1:FormatText(var_290_11.content)

				arg_287_1.text_.text = var_290_12

				LuaForUtil.ClearLinePrefixSymbol(arg_287_1.text_)

				local var_290_13 = 31
				local var_290_14 = utf8.len(var_290_12)
				local var_290_15 = var_290_13 <= 0 and var_290_9 or var_290_9 * (var_290_14 / var_290_13)

				if var_290_15 > 0 and var_290_9 < var_290_15 then
					arg_287_1.talkMaxDuration = var_290_15

					if var_290_15 + var_290_8 > arg_287_1.duration_ then
						arg_287_1.duration_ = var_290_15 + var_290_8
					end
				end

				arg_287_1.text_.text = var_290_12
				arg_287_1.typewritter.percent = 0

				arg_287_1.typewritter:SetDirty()
				arg_287_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161070", "story_v_out_413161.awb") ~= 0 then
					local var_290_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161070", "story_v_out_413161.awb") / 1000

					if var_290_16 + var_290_8 > arg_287_1.duration_ then
						arg_287_1.duration_ = var_290_16 + var_290_8
					end

					if var_290_11.prefab_name ~= "" and arg_287_1.actors_[var_290_11.prefab_name] ~= nil then
						local var_290_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_287_1.actors_[var_290_11.prefab_name].transform, "story_v_out_413161", "413161070", "story_v_out_413161.awb")

						arg_287_1:RecordAudio("413161070", var_290_17)
						arg_287_1:RecordAudio("413161070", var_290_17)
					else
						arg_287_1:AudioAction("play", "voice", "story_v_out_413161", "413161070", "story_v_out_413161.awb")
					end

					arg_287_1:RecordHistoryTalkVoice("story_v_out_413161", "413161070", "story_v_out_413161.awb")
				end

				arg_287_1:RecordContent(arg_287_1.text_.text)
			end

			local var_290_18 = math.max(var_290_9, arg_287_1.talkMaxDuration)

			if var_290_8 <= arg_287_1.time_ and arg_287_1.time_ < var_290_8 + var_290_18 then
				arg_287_1.typewritter.percent = (arg_287_1.time_ - var_290_8) / var_290_18

				arg_287_1.typewritter:SetDirty()
			end

			if arg_287_1.time_ >= var_290_8 + var_290_18 and arg_287_1.time_ < var_290_8 + var_290_18 + arg_290_0 then
				arg_287_1.typewritter.percent = 1

				arg_287_1.typewritter:SetDirty()
				arg_287_1:ShowNextGo(true)
			end
		end
	end,
	Play413161071 = function(arg_291_0, arg_291_1)
		arg_291_1.time_ = 0
		arg_291_1.frameCnt_ = 0
		arg_291_1.state_ = "playing"
		arg_291_1.curTalkId_ = 413161071
		arg_291_1.duration_ = 5

		SetActive(arg_291_1.tipsGo_, false)

		function arg_291_1.onSingleLineFinish_()
			arg_291_1.onSingleLineUpdate_ = nil
			arg_291_1.onSingleLineFinish_ = nil
			arg_291_1.state_ = "waiting"
		end

		function arg_291_1.playNext_(arg_293_0)
			if arg_293_0 == 1 then
				arg_291_0:Play413161072(arg_291_1)
			end
		end

		function arg_291_1.onSingleLineUpdate_(arg_294_0)
			local var_294_0 = arg_291_1.actors_["10092"].transform
			local var_294_1 = 0

			if var_294_1 < arg_291_1.time_ and arg_291_1.time_ <= var_294_1 + arg_294_0 then
				arg_291_1.var_.moveOldPos10092 = var_294_0.localPosition
				var_294_0.localScale = Vector3.New(1, 1, 1)

				arg_291_1:CheckSpriteTmpPos("10092", 2)

				local var_294_2 = var_294_0.childCount

				for iter_294_0 = 0, var_294_2 - 1 do
					local var_294_3 = var_294_0:GetChild(iter_294_0)

					if var_294_3.name == "" or not string.find(var_294_3.name, "split") then
						var_294_3.gameObject:SetActive(true)
					else
						var_294_3.gameObject:SetActive(false)
					end
				end
			end

			local var_294_4 = 0.001

			if var_294_1 <= arg_291_1.time_ and arg_291_1.time_ < var_294_1 + var_294_4 then
				local var_294_5 = (arg_291_1.time_ - var_294_1) / var_294_4
				local var_294_6 = Vector3.New(-389.49, -300, -295)

				var_294_0.localPosition = Vector3.Lerp(arg_291_1.var_.moveOldPos10092, var_294_6, var_294_5)
			end

			if arg_291_1.time_ >= var_294_1 + var_294_4 and arg_291_1.time_ < var_294_1 + var_294_4 + arg_294_0 then
				var_294_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_294_7 = arg_291_1.actors_["10092"]
			local var_294_8 = 0

			if var_294_8 < arg_291_1.time_ and arg_291_1.time_ <= var_294_8 + arg_294_0 and not isNil(var_294_7) and arg_291_1.var_.actorSpriteComps10092 == nil then
				arg_291_1.var_.actorSpriteComps10092 = var_294_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_294_9 = 2

			if var_294_8 <= arg_291_1.time_ and arg_291_1.time_ < var_294_8 + var_294_9 and not isNil(var_294_7) then
				local var_294_10 = (arg_291_1.time_ - var_294_8) / var_294_9

				if arg_291_1.var_.actorSpriteComps10092 then
					for iter_294_1, iter_294_2 in pairs(arg_291_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_294_2 then
							if arg_291_1.isInRecall_ then
								local var_294_11 = Mathf.Lerp(iter_294_2.color.r, arg_291_1.hightColor2.r, var_294_10)
								local var_294_12 = Mathf.Lerp(iter_294_2.color.g, arg_291_1.hightColor2.g, var_294_10)
								local var_294_13 = Mathf.Lerp(iter_294_2.color.b, arg_291_1.hightColor2.b, var_294_10)

								iter_294_2.color = Color.New(var_294_11, var_294_12, var_294_13)
							else
								local var_294_14 = Mathf.Lerp(iter_294_2.color.r, 0.5, var_294_10)

								iter_294_2.color = Color.New(var_294_14, var_294_14, var_294_14)
							end
						end
					end
				end
			end

			if arg_291_1.time_ >= var_294_8 + var_294_9 and arg_291_1.time_ < var_294_8 + var_294_9 + arg_294_0 and not isNil(var_294_7) and arg_291_1.var_.actorSpriteComps10092 then
				for iter_294_3, iter_294_4 in pairs(arg_291_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_294_4 then
						if arg_291_1.isInRecall_ then
							iter_294_4.color = arg_291_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_294_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_291_1.var_.actorSpriteComps10092 = nil
			end

			local var_294_15 = arg_291_1.actors_["10022"].transform
			local var_294_16 = 0

			if var_294_16 < arg_291_1.time_ and arg_291_1.time_ <= var_294_16 + arg_294_0 then
				arg_291_1.var_.moveOldPos10022 = var_294_15.localPosition
				var_294_15.localScale = Vector3.New(1, 1, 1)

				arg_291_1:CheckSpriteTmpPos("10022", 4)

				local var_294_17 = var_294_15.childCount

				for iter_294_5 = 0, var_294_17 - 1 do
					local var_294_18 = var_294_15:GetChild(iter_294_5)

					if var_294_18.name == "" or not string.find(var_294_18.name, "split") then
						var_294_18.gameObject:SetActive(true)
					else
						var_294_18.gameObject:SetActive(false)
					end
				end
			end

			local var_294_19 = 0.001

			if var_294_16 <= arg_291_1.time_ and arg_291_1.time_ < var_294_16 + var_294_19 then
				local var_294_20 = (arg_291_1.time_ - var_294_16) / var_294_19
				local var_294_21 = Vector3.New(390, -315, -320)

				var_294_15.localPosition = Vector3.Lerp(arg_291_1.var_.moveOldPos10022, var_294_21, var_294_20)
			end

			if arg_291_1.time_ >= var_294_16 + var_294_19 and arg_291_1.time_ < var_294_16 + var_294_19 + arg_294_0 then
				var_294_15.localPosition = Vector3.New(390, -315, -320)
			end

			local var_294_22 = 0
			local var_294_23 = 0.675

			if var_294_22 < arg_291_1.time_ and arg_291_1.time_ <= var_294_22 + arg_294_0 then
				arg_291_1.talkMaxDuration = 0
				arg_291_1.dialogCg_.alpha = 1

				arg_291_1.dialog_:SetActive(true)
				SetActive(arg_291_1.leftNameGo_, false)

				arg_291_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_291_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_291_1:RecordName(arg_291_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_291_1.iconTrs_.gameObject, false)
				arg_291_1.callingController_:SetSelectedState("normal")

				local var_294_24 = arg_291_1:GetWordFromCfg(413161071)
				local var_294_25 = arg_291_1:FormatText(var_294_24.content)

				arg_291_1.text_.text = var_294_25

				LuaForUtil.ClearLinePrefixSymbol(arg_291_1.text_)

				local var_294_26 = 27
				local var_294_27 = utf8.len(var_294_25)
				local var_294_28 = var_294_26 <= 0 and var_294_23 or var_294_23 * (var_294_27 / var_294_26)

				if var_294_28 > 0 and var_294_23 < var_294_28 then
					arg_291_1.talkMaxDuration = var_294_28

					if var_294_28 + var_294_22 > arg_291_1.duration_ then
						arg_291_1.duration_ = var_294_28 + var_294_22
					end
				end

				arg_291_1.text_.text = var_294_25
				arg_291_1.typewritter.percent = 0

				arg_291_1.typewritter:SetDirty()
				arg_291_1:ShowNextGo(false)
				arg_291_1:RecordContent(arg_291_1.text_.text)
			end

			local var_294_29 = math.max(var_294_23, arg_291_1.talkMaxDuration)

			if var_294_22 <= arg_291_1.time_ and arg_291_1.time_ < var_294_22 + var_294_29 then
				arg_291_1.typewritter.percent = (arg_291_1.time_ - var_294_22) / var_294_29

				arg_291_1.typewritter:SetDirty()
			end

			if arg_291_1.time_ >= var_294_22 + var_294_29 and arg_291_1.time_ < var_294_22 + var_294_29 + arg_294_0 then
				arg_291_1.typewritter.percent = 1

				arg_291_1.typewritter:SetDirty()
				arg_291_1:ShowNextGo(true)
			end
		end
	end,
	Play413161072 = function(arg_295_0, arg_295_1)
		arg_295_1.time_ = 0
		arg_295_1.frameCnt_ = 0
		arg_295_1.state_ = "playing"
		arg_295_1.curTalkId_ = 413161072
		arg_295_1.duration_ = 10.83

		local var_295_0 = {
			zh = 5.933,
			ja = 10.833
		}
		local var_295_1 = manager.audio:GetLocalizationFlag()

		if var_295_0[var_295_1] ~= nil then
			arg_295_1.duration_ = var_295_0[var_295_1]
		end

		SetActive(arg_295_1.tipsGo_, false)

		function arg_295_1.onSingleLineFinish_()
			arg_295_1.onSingleLineUpdate_ = nil
			arg_295_1.onSingleLineFinish_ = nil
			arg_295_1.state_ = "waiting"
		end

		function arg_295_1.playNext_(arg_297_0)
			if arg_297_0 == 1 then
				arg_295_0:Play413161073(arg_295_1)
			end
		end

		function arg_295_1.onSingleLineUpdate_(arg_298_0)
			local var_298_0 = arg_295_1.actors_["10092"].transform
			local var_298_1 = 0

			if var_298_1 < arg_295_1.time_ and arg_295_1.time_ <= var_298_1 + arg_298_0 then
				arg_295_1.var_.moveOldPos10092 = var_298_0.localPosition
				var_298_0.localScale = Vector3.New(1, 1, 1)

				arg_295_1:CheckSpriteTmpPos("10092", 2)

				local var_298_2 = var_298_0.childCount

				for iter_298_0 = 0, var_298_2 - 1 do
					local var_298_3 = var_298_0:GetChild(iter_298_0)

					if var_298_3.name == "split_1_1" or not string.find(var_298_3.name, "split") then
						var_298_3.gameObject:SetActive(true)
					else
						var_298_3.gameObject:SetActive(false)
					end
				end
			end

			local var_298_4 = 0.001

			if var_298_1 <= arg_295_1.time_ and arg_295_1.time_ < var_298_1 + var_298_4 then
				local var_298_5 = (arg_295_1.time_ - var_298_1) / var_298_4
				local var_298_6 = Vector3.New(-389.49, -300, -295)

				var_298_0.localPosition = Vector3.Lerp(arg_295_1.var_.moveOldPos10092, var_298_6, var_298_5)
			end

			if arg_295_1.time_ >= var_298_1 + var_298_4 and arg_295_1.time_ < var_298_1 + var_298_4 + arg_298_0 then
				var_298_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_298_7 = arg_295_1.actors_["10092"]
			local var_298_8 = 0

			if var_298_8 < arg_295_1.time_ and arg_295_1.time_ <= var_298_8 + arg_298_0 and not isNil(var_298_7) and arg_295_1.var_.actorSpriteComps10092 == nil then
				arg_295_1.var_.actorSpriteComps10092 = var_298_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_298_9 = 2

			if var_298_8 <= arg_295_1.time_ and arg_295_1.time_ < var_298_8 + var_298_9 and not isNil(var_298_7) then
				local var_298_10 = (arg_295_1.time_ - var_298_8) / var_298_9

				if arg_295_1.var_.actorSpriteComps10092 then
					for iter_298_1, iter_298_2 in pairs(arg_295_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_298_2 then
							if arg_295_1.isInRecall_ then
								local var_298_11 = Mathf.Lerp(iter_298_2.color.r, arg_295_1.hightColor1.r, var_298_10)
								local var_298_12 = Mathf.Lerp(iter_298_2.color.g, arg_295_1.hightColor1.g, var_298_10)
								local var_298_13 = Mathf.Lerp(iter_298_2.color.b, arg_295_1.hightColor1.b, var_298_10)

								iter_298_2.color = Color.New(var_298_11, var_298_12, var_298_13)
							else
								local var_298_14 = Mathf.Lerp(iter_298_2.color.r, 1, var_298_10)

								iter_298_2.color = Color.New(var_298_14, var_298_14, var_298_14)
							end
						end
					end
				end
			end

			if arg_295_1.time_ >= var_298_8 + var_298_9 and arg_295_1.time_ < var_298_8 + var_298_9 + arg_298_0 and not isNil(var_298_7) and arg_295_1.var_.actorSpriteComps10092 then
				for iter_298_3, iter_298_4 in pairs(arg_295_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_298_4 then
						if arg_295_1.isInRecall_ then
							iter_298_4.color = arg_295_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_298_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_295_1.var_.actorSpriteComps10092 = nil
			end

			local var_298_15 = 0
			local var_298_16 = 0.725

			if var_298_15 < arg_295_1.time_ and arg_295_1.time_ <= var_298_15 + arg_298_0 then
				arg_295_1.talkMaxDuration = 0
				arg_295_1.dialogCg_.alpha = 1

				arg_295_1.dialog_:SetActive(true)
				SetActive(arg_295_1.leftNameGo_, true)

				local var_298_17 = arg_295_1:FormatText(StoryNameCfg[996].name)

				arg_295_1.leftNameTxt_.text = var_298_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_295_1.leftNameTxt_.transform)

				arg_295_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_295_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_295_1:RecordName(arg_295_1.leftNameTxt_.text)
				SetActive(arg_295_1.iconTrs_.gameObject, false)
				arg_295_1.callingController_:SetSelectedState("normal")

				local var_298_18 = arg_295_1:GetWordFromCfg(413161072)
				local var_298_19 = arg_295_1:FormatText(var_298_18.content)

				arg_295_1.text_.text = var_298_19

				LuaForUtil.ClearLinePrefixSymbol(arg_295_1.text_)

				local var_298_20 = 29
				local var_298_21 = utf8.len(var_298_19)
				local var_298_22 = var_298_20 <= 0 and var_298_16 or var_298_16 * (var_298_21 / var_298_20)

				if var_298_22 > 0 and var_298_16 < var_298_22 then
					arg_295_1.talkMaxDuration = var_298_22

					if var_298_22 + var_298_15 > arg_295_1.duration_ then
						arg_295_1.duration_ = var_298_22 + var_298_15
					end
				end

				arg_295_1.text_.text = var_298_19
				arg_295_1.typewritter.percent = 0

				arg_295_1.typewritter:SetDirty()
				arg_295_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161072", "story_v_out_413161.awb") ~= 0 then
					local var_298_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161072", "story_v_out_413161.awb") / 1000

					if var_298_23 + var_298_15 > arg_295_1.duration_ then
						arg_295_1.duration_ = var_298_23 + var_298_15
					end

					if var_298_18.prefab_name ~= "" and arg_295_1.actors_[var_298_18.prefab_name] ~= nil then
						local var_298_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_295_1.actors_[var_298_18.prefab_name].transform, "story_v_out_413161", "413161072", "story_v_out_413161.awb")

						arg_295_1:RecordAudio("413161072", var_298_24)
						arg_295_1:RecordAudio("413161072", var_298_24)
					else
						arg_295_1:AudioAction("play", "voice", "story_v_out_413161", "413161072", "story_v_out_413161.awb")
					end

					arg_295_1:RecordHistoryTalkVoice("story_v_out_413161", "413161072", "story_v_out_413161.awb")
				end

				arg_295_1:RecordContent(arg_295_1.text_.text)
			end

			local var_298_25 = math.max(var_298_16, arg_295_1.talkMaxDuration)

			if var_298_15 <= arg_295_1.time_ and arg_295_1.time_ < var_298_15 + var_298_25 then
				arg_295_1.typewritter.percent = (arg_295_1.time_ - var_298_15) / var_298_25

				arg_295_1.typewritter:SetDirty()
			end

			if arg_295_1.time_ >= var_298_15 + var_298_25 and arg_295_1.time_ < var_298_15 + var_298_25 + arg_298_0 then
				arg_295_1.typewritter.percent = 1

				arg_295_1.typewritter:SetDirty()
				arg_295_1:ShowNextGo(true)
			end
		end
	end,
	Play413161073 = function(arg_299_0, arg_299_1)
		arg_299_1.time_ = 0
		arg_299_1.frameCnt_ = 0
		arg_299_1.state_ = "playing"
		arg_299_1.curTalkId_ = 413161073
		arg_299_1.duration_ = 4.2

		local var_299_0 = {
			zh = 2.733,
			ja = 4.2
		}
		local var_299_1 = manager.audio:GetLocalizationFlag()

		if var_299_0[var_299_1] ~= nil then
			arg_299_1.duration_ = var_299_0[var_299_1]
		end

		SetActive(arg_299_1.tipsGo_, false)

		function arg_299_1.onSingleLineFinish_()
			arg_299_1.onSingleLineUpdate_ = nil
			arg_299_1.onSingleLineFinish_ = nil
			arg_299_1.state_ = "waiting"
		end

		function arg_299_1.playNext_(arg_301_0)
			if arg_301_0 == 1 then
				arg_299_0:Play413161074(arg_299_1)
			end
		end

		function arg_299_1.onSingleLineUpdate_(arg_302_0)
			local var_302_0 = 0
			local var_302_1 = 0.45

			if var_302_0 < arg_299_1.time_ and arg_299_1.time_ <= var_302_0 + arg_302_0 then
				arg_299_1.talkMaxDuration = 0
				arg_299_1.dialogCg_.alpha = 1

				arg_299_1.dialog_:SetActive(true)
				SetActive(arg_299_1.leftNameGo_, true)

				local var_302_2 = arg_299_1:FormatText(StoryNameCfg[996].name)

				arg_299_1.leftNameTxt_.text = var_302_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_299_1.leftNameTxt_.transform)

				arg_299_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_299_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_299_1:RecordName(arg_299_1.leftNameTxt_.text)
				SetActive(arg_299_1.iconTrs_.gameObject, false)
				arg_299_1.callingController_:SetSelectedState("normal")

				local var_302_3 = arg_299_1:GetWordFromCfg(413161073)
				local var_302_4 = arg_299_1:FormatText(var_302_3.content)

				arg_299_1.text_.text = var_302_4

				LuaForUtil.ClearLinePrefixSymbol(arg_299_1.text_)

				local var_302_5 = 18
				local var_302_6 = utf8.len(var_302_4)
				local var_302_7 = var_302_5 <= 0 and var_302_1 or var_302_1 * (var_302_6 / var_302_5)

				if var_302_7 > 0 and var_302_1 < var_302_7 then
					arg_299_1.talkMaxDuration = var_302_7

					if var_302_7 + var_302_0 > arg_299_1.duration_ then
						arg_299_1.duration_ = var_302_7 + var_302_0
					end
				end

				arg_299_1.text_.text = var_302_4
				arg_299_1.typewritter.percent = 0

				arg_299_1.typewritter:SetDirty()
				arg_299_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161073", "story_v_out_413161.awb") ~= 0 then
					local var_302_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161073", "story_v_out_413161.awb") / 1000

					if var_302_8 + var_302_0 > arg_299_1.duration_ then
						arg_299_1.duration_ = var_302_8 + var_302_0
					end

					if var_302_3.prefab_name ~= "" and arg_299_1.actors_[var_302_3.prefab_name] ~= nil then
						local var_302_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_299_1.actors_[var_302_3.prefab_name].transform, "story_v_out_413161", "413161073", "story_v_out_413161.awb")

						arg_299_1:RecordAudio("413161073", var_302_9)
						arg_299_1:RecordAudio("413161073", var_302_9)
					else
						arg_299_1:AudioAction("play", "voice", "story_v_out_413161", "413161073", "story_v_out_413161.awb")
					end

					arg_299_1:RecordHistoryTalkVoice("story_v_out_413161", "413161073", "story_v_out_413161.awb")
				end

				arg_299_1:RecordContent(arg_299_1.text_.text)
			end

			local var_302_10 = math.max(var_302_1, arg_299_1.talkMaxDuration)

			if var_302_0 <= arg_299_1.time_ and arg_299_1.time_ < var_302_0 + var_302_10 then
				arg_299_1.typewritter.percent = (arg_299_1.time_ - var_302_0) / var_302_10

				arg_299_1.typewritter:SetDirty()
			end

			if arg_299_1.time_ >= var_302_0 + var_302_10 and arg_299_1.time_ < var_302_0 + var_302_10 + arg_302_0 then
				arg_299_1.typewritter.percent = 1

				arg_299_1.typewritter:SetDirty()
				arg_299_1:ShowNextGo(true)
			end
		end
	end,
	Play413161074 = function(arg_303_0, arg_303_1)
		arg_303_1.time_ = 0
		arg_303_1.frameCnt_ = 0
		arg_303_1.state_ = "playing"
		arg_303_1.curTalkId_ = 413161074
		arg_303_1.duration_ = 8.7

		local var_303_0 = {
			zh = 5.433,
			ja = 8.7
		}
		local var_303_1 = manager.audio:GetLocalizationFlag()

		if var_303_0[var_303_1] ~= nil then
			arg_303_1.duration_ = var_303_0[var_303_1]
		end

		SetActive(arg_303_1.tipsGo_, false)

		function arg_303_1.onSingleLineFinish_()
			arg_303_1.onSingleLineUpdate_ = nil
			arg_303_1.onSingleLineFinish_ = nil
			arg_303_1.state_ = "waiting"
		end

		function arg_303_1.playNext_(arg_305_0)
			if arg_305_0 == 1 then
				arg_303_0:Play413161075(arg_303_1)
			end
		end

		function arg_303_1.onSingleLineUpdate_(arg_306_0)
			local var_306_0 = arg_303_1.actors_["10092"]
			local var_306_1 = 0

			if var_306_1 < arg_303_1.time_ and arg_303_1.time_ <= var_306_1 + arg_306_0 and not isNil(var_306_0) and arg_303_1.var_.actorSpriteComps10092 == nil then
				arg_303_1.var_.actorSpriteComps10092 = var_306_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_306_2 = 2

			if var_306_1 <= arg_303_1.time_ and arg_303_1.time_ < var_306_1 + var_306_2 and not isNil(var_306_0) then
				local var_306_3 = (arg_303_1.time_ - var_306_1) / var_306_2

				if arg_303_1.var_.actorSpriteComps10092 then
					for iter_306_0, iter_306_1 in pairs(arg_303_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_306_1 then
							if arg_303_1.isInRecall_ then
								local var_306_4 = Mathf.Lerp(iter_306_1.color.r, arg_303_1.hightColor2.r, var_306_3)
								local var_306_5 = Mathf.Lerp(iter_306_1.color.g, arg_303_1.hightColor2.g, var_306_3)
								local var_306_6 = Mathf.Lerp(iter_306_1.color.b, arg_303_1.hightColor2.b, var_306_3)

								iter_306_1.color = Color.New(var_306_4, var_306_5, var_306_6)
							else
								local var_306_7 = Mathf.Lerp(iter_306_1.color.r, 0.5, var_306_3)

								iter_306_1.color = Color.New(var_306_7, var_306_7, var_306_7)
							end
						end
					end
				end
			end

			if arg_303_1.time_ >= var_306_1 + var_306_2 and arg_303_1.time_ < var_306_1 + var_306_2 + arg_306_0 and not isNil(var_306_0) and arg_303_1.var_.actorSpriteComps10092 then
				for iter_306_2, iter_306_3 in pairs(arg_303_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_306_3 then
						if arg_303_1.isInRecall_ then
							iter_306_3.color = arg_303_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_306_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_303_1.var_.actorSpriteComps10092 = nil
			end

			local var_306_8 = arg_303_1.actors_["10022"]
			local var_306_9 = 0

			if var_306_9 < arg_303_1.time_ and arg_303_1.time_ <= var_306_9 + arg_306_0 and not isNil(var_306_8) and arg_303_1.var_.actorSpriteComps10022 == nil then
				arg_303_1.var_.actorSpriteComps10022 = var_306_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_306_10 = 2

			if var_306_9 <= arg_303_1.time_ and arg_303_1.time_ < var_306_9 + var_306_10 and not isNil(var_306_8) then
				local var_306_11 = (arg_303_1.time_ - var_306_9) / var_306_10

				if arg_303_1.var_.actorSpriteComps10022 then
					for iter_306_4, iter_306_5 in pairs(arg_303_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_306_5 then
							if arg_303_1.isInRecall_ then
								local var_306_12 = Mathf.Lerp(iter_306_5.color.r, arg_303_1.hightColor1.r, var_306_11)
								local var_306_13 = Mathf.Lerp(iter_306_5.color.g, arg_303_1.hightColor1.g, var_306_11)
								local var_306_14 = Mathf.Lerp(iter_306_5.color.b, arg_303_1.hightColor1.b, var_306_11)

								iter_306_5.color = Color.New(var_306_12, var_306_13, var_306_14)
							else
								local var_306_15 = Mathf.Lerp(iter_306_5.color.r, 1, var_306_11)

								iter_306_5.color = Color.New(var_306_15, var_306_15, var_306_15)
							end
						end
					end
				end
			end

			if arg_303_1.time_ >= var_306_9 + var_306_10 and arg_303_1.time_ < var_306_9 + var_306_10 + arg_306_0 and not isNil(var_306_8) and arg_303_1.var_.actorSpriteComps10022 then
				for iter_306_6, iter_306_7 in pairs(arg_303_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_306_7 then
						if arg_303_1.isInRecall_ then
							iter_306_7.color = arg_303_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_306_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_303_1.var_.actorSpriteComps10022 = nil
			end

			local var_306_16 = 0
			local var_306_17 = 0.6

			if var_306_16 < arg_303_1.time_ and arg_303_1.time_ <= var_306_16 + arg_306_0 then
				arg_303_1.talkMaxDuration = 0

				arg_303_1.dialog_:SetActive(true)

				local var_306_18 = LeanTween.value(arg_303_1.dialog_, 0, 1, 0.3)

				var_306_18:setOnUpdate(LuaHelper.FloatAction(function(arg_307_0)
					arg_303_1.dialogCg_.alpha = arg_307_0
				end))
				var_306_18:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_303_1.dialog_)
					var_306_18:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_303_1.duration_ = arg_303_1.duration_ + 0.3

				SetActive(arg_303_1.leftNameGo_, true)

				local var_306_19 = arg_303_1:FormatText(StoryNameCfg[614].name)

				arg_303_1.leftNameTxt_.text = var_306_19

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_303_1.leftNameTxt_.transform)

				arg_303_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_303_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_303_1:RecordName(arg_303_1.leftNameTxt_.text)
				SetActive(arg_303_1.iconTrs_.gameObject, false)
				arg_303_1.callingController_:SetSelectedState("normal")

				local var_306_20 = arg_303_1:GetWordFromCfg(413161074)
				local var_306_21 = arg_303_1:FormatText(var_306_20.content)

				arg_303_1.text_.text = var_306_21

				LuaForUtil.ClearLinePrefixSymbol(arg_303_1.text_)

				local var_306_22 = 24
				local var_306_23 = utf8.len(var_306_21)
				local var_306_24 = var_306_22 <= 0 and var_306_17 or var_306_17 * (var_306_23 / var_306_22)

				if var_306_24 > 0 and var_306_17 < var_306_24 then
					arg_303_1.talkMaxDuration = var_306_24
					var_306_16 = var_306_16 + 0.3

					if var_306_24 + var_306_16 > arg_303_1.duration_ then
						arg_303_1.duration_ = var_306_24 + var_306_16
					end
				end

				arg_303_1.text_.text = var_306_21
				arg_303_1.typewritter.percent = 0

				arg_303_1.typewritter:SetDirty()
				arg_303_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161074", "story_v_out_413161.awb") ~= 0 then
					local var_306_25 = manager.audio:GetVoiceLength("story_v_out_413161", "413161074", "story_v_out_413161.awb") / 1000

					if var_306_25 + var_306_16 > arg_303_1.duration_ then
						arg_303_1.duration_ = var_306_25 + var_306_16
					end

					if var_306_20.prefab_name ~= "" and arg_303_1.actors_[var_306_20.prefab_name] ~= nil then
						local var_306_26 = LuaForUtil.PlayVoiceWithCriLipsync(arg_303_1.actors_[var_306_20.prefab_name].transform, "story_v_out_413161", "413161074", "story_v_out_413161.awb")

						arg_303_1:RecordAudio("413161074", var_306_26)
						arg_303_1:RecordAudio("413161074", var_306_26)
					else
						arg_303_1:AudioAction("play", "voice", "story_v_out_413161", "413161074", "story_v_out_413161.awb")
					end

					arg_303_1:RecordHistoryTalkVoice("story_v_out_413161", "413161074", "story_v_out_413161.awb")
				end

				arg_303_1:RecordContent(arg_303_1.text_.text)
			end

			local var_306_27 = var_306_16 + 0.3
			local var_306_28 = math.max(var_306_17, arg_303_1.talkMaxDuration)

			if var_306_27 <= arg_303_1.time_ and arg_303_1.time_ < var_306_27 + var_306_28 then
				arg_303_1.typewritter.percent = (arg_303_1.time_ - var_306_27) / var_306_28

				arg_303_1.typewritter:SetDirty()
			end

			if arg_303_1.time_ >= var_306_27 + var_306_28 and arg_303_1.time_ < var_306_27 + var_306_28 + arg_306_0 then
				arg_303_1.typewritter.percent = 1

				arg_303_1.typewritter:SetDirty()
				arg_303_1:ShowNextGo(true)
			end
		end
	end,
	Play413161075 = function(arg_309_0, arg_309_1)
		arg_309_1.time_ = 0
		arg_309_1.frameCnt_ = 0
		arg_309_1.state_ = "playing"
		arg_309_1.curTalkId_ = 413161075
		arg_309_1.duration_ = 2.23

		local var_309_0 = {
			zh = 1.999999999999,
			ja = 2.233
		}
		local var_309_1 = manager.audio:GetLocalizationFlag()

		if var_309_0[var_309_1] ~= nil then
			arg_309_1.duration_ = var_309_0[var_309_1]
		end

		SetActive(arg_309_1.tipsGo_, false)

		function arg_309_1.onSingleLineFinish_()
			arg_309_1.onSingleLineUpdate_ = nil
			arg_309_1.onSingleLineFinish_ = nil
			arg_309_1.state_ = "waiting"
		end

		function arg_309_1.playNext_(arg_311_0)
			if arg_311_0 == 1 then
				arg_309_0:Play413161076(arg_309_1)
			end
		end

		function arg_309_1.onSingleLineUpdate_(arg_312_0)
			local var_312_0 = arg_309_1.actors_["10092"].transform
			local var_312_1 = 0

			if var_312_1 < arg_309_1.time_ and arg_309_1.time_ <= var_312_1 + arg_312_0 then
				arg_309_1.var_.moveOldPos10092 = var_312_0.localPosition
				var_312_0.localScale = Vector3.New(1, 1, 1)

				arg_309_1:CheckSpriteTmpPos("10092", 2)

				local var_312_2 = var_312_0.childCount

				for iter_312_0 = 0, var_312_2 - 1 do
					local var_312_3 = var_312_0:GetChild(iter_312_0)

					if var_312_3.name == "split_2" or not string.find(var_312_3.name, "split") then
						var_312_3.gameObject:SetActive(true)
					else
						var_312_3.gameObject:SetActive(false)
					end
				end
			end

			local var_312_4 = 0.001

			if var_312_1 <= arg_309_1.time_ and arg_309_1.time_ < var_312_1 + var_312_4 then
				local var_312_5 = (arg_309_1.time_ - var_312_1) / var_312_4
				local var_312_6 = Vector3.New(-389.49, -300, -295)

				var_312_0.localPosition = Vector3.Lerp(arg_309_1.var_.moveOldPos10092, var_312_6, var_312_5)
			end

			if arg_309_1.time_ >= var_312_1 + var_312_4 and arg_309_1.time_ < var_312_1 + var_312_4 + arg_312_0 then
				var_312_0.localPosition = Vector3.New(-389.49, -300, -295)
			end

			local var_312_7 = arg_309_1.actors_["10022"]
			local var_312_8 = 0

			if var_312_8 < arg_309_1.time_ and arg_309_1.time_ <= var_312_8 + arg_312_0 and not isNil(var_312_7) and arg_309_1.var_.actorSpriteComps10022 == nil then
				arg_309_1.var_.actorSpriteComps10022 = var_312_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_312_9 = 2

			if var_312_8 <= arg_309_1.time_ and arg_309_1.time_ < var_312_8 + var_312_9 and not isNil(var_312_7) then
				local var_312_10 = (arg_309_1.time_ - var_312_8) / var_312_9

				if arg_309_1.var_.actorSpriteComps10022 then
					for iter_312_1, iter_312_2 in pairs(arg_309_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_312_2 then
							if arg_309_1.isInRecall_ then
								local var_312_11 = Mathf.Lerp(iter_312_2.color.r, arg_309_1.hightColor2.r, var_312_10)
								local var_312_12 = Mathf.Lerp(iter_312_2.color.g, arg_309_1.hightColor2.g, var_312_10)
								local var_312_13 = Mathf.Lerp(iter_312_2.color.b, arg_309_1.hightColor2.b, var_312_10)

								iter_312_2.color = Color.New(var_312_11, var_312_12, var_312_13)
							else
								local var_312_14 = Mathf.Lerp(iter_312_2.color.r, 0.5, var_312_10)

								iter_312_2.color = Color.New(var_312_14, var_312_14, var_312_14)
							end
						end
					end
				end
			end

			if arg_309_1.time_ >= var_312_8 + var_312_9 and arg_309_1.time_ < var_312_8 + var_312_9 + arg_312_0 and not isNil(var_312_7) and arg_309_1.var_.actorSpriteComps10022 then
				for iter_312_3, iter_312_4 in pairs(arg_309_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_312_4 then
						if arg_309_1.isInRecall_ then
							iter_312_4.color = arg_309_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_312_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_309_1.var_.actorSpriteComps10022 = nil
			end

			local var_312_15 = arg_309_1.actors_["10092"]
			local var_312_16 = 0

			if var_312_16 < arg_309_1.time_ and arg_309_1.time_ <= var_312_16 + arg_312_0 and not isNil(var_312_15) and arg_309_1.var_.actorSpriteComps10092 == nil then
				arg_309_1.var_.actorSpriteComps10092 = var_312_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_312_17 = 2

			if var_312_16 <= arg_309_1.time_ and arg_309_1.time_ < var_312_16 + var_312_17 and not isNil(var_312_15) then
				local var_312_18 = (arg_309_1.time_ - var_312_16) / var_312_17

				if arg_309_1.var_.actorSpriteComps10092 then
					for iter_312_5, iter_312_6 in pairs(arg_309_1.var_.actorSpriteComps10092:ToTable()) do
						if iter_312_6 then
							if arg_309_1.isInRecall_ then
								local var_312_19 = Mathf.Lerp(iter_312_6.color.r, arg_309_1.hightColor1.r, var_312_18)
								local var_312_20 = Mathf.Lerp(iter_312_6.color.g, arg_309_1.hightColor1.g, var_312_18)
								local var_312_21 = Mathf.Lerp(iter_312_6.color.b, arg_309_1.hightColor1.b, var_312_18)

								iter_312_6.color = Color.New(var_312_19, var_312_20, var_312_21)
							else
								local var_312_22 = Mathf.Lerp(iter_312_6.color.r, 1, var_312_18)

								iter_312_6.color = Color.New(var_312_22, var_312_22, var_312_22)
							end
						end
					end
				end
			end

			if arg_309_1.time_ >= var_312_16 + var_312_17 and arg_309_1.time_ < var_312_16 + var_312_17 + arg_312_0 and not isNil(var_312_15) and arg_309_1.var_.actorSpriteComps10092 then
				for iter_312_7, iter_312_8 in pairs(arg_309_1.var_.actorSpriteComps10092:ToTable()) do
					if iter_312_8 then
						if arg_309_1.isInRecall_ then
							iter_312_8.color = arg_309_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_312_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_309_1.var_.actorSpriteComps10092 = nil
			end

			local var_312_23 = 0
			local var_312_24 = 0.225

			if var_312_23 < arg_309_1.time_ and arg_309_1.time_ <= var_312_23 + arg_312_0 then
				arg_309_1.talkMaxDuration = 0
				arg_309_1.dialogCg_.alpha = 1

				arg_309_1.dialog_:SetActive(true)
				SetActive(arg_309_1.leftNameGo_, true)

				local var_312_25 = arg_309_1:FormatText(StoryNameCfg[996].name)

				arg_309_1.leftNameTxt_.text = var_312_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_309_1.leftNameTxt_.transform)

				arg_309_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_309_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_309_1:RecordName(arg_309_1.leftNameTxt_.text)
				SetActive(arg_309_1.iconTrs_.gameObject, false)
				arg_309_1.callingController_:SetSelectedState("normal")

				local var_312_26 = arg_309_1:GetWordFromCfg(413161075)
				local var_312_27 = arg_309_1:FormatText(var_312_26.content)

				arg_309_1.text_.text = var_312_27

				LuaForUtil.ClearLinePrefixSymbol(arg_309_1.text_)

				local var_312_28 = 9
				local var_312_29 = utf8.len(var_312_27)
				local var_312_30 = var_312_28 <= 0 and var_312_24 or var_312_24 * (var_312_29 / var_312_28)

				if var_312_30 > 0 and var_312_24 < var_312_30 then
					arg_309_1.talkMaxDuration = var_312_30

					if var_312_30 + var_312_23 > arg_309_1.duration_ then
						arg_309_1.duration_ = var_312_30 + var_312_23
					end
				end

				arg_309_1.text_.text = var_312_27
				arg_309_1.typewritter.percent = 0

				arg_309_1.typewritter:SetDirty()
				arg_309_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161075", "story_v_out_413161.awb") ~= 0 then
					local var_312_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161075", "story_v_out_413161.awb") / 1000

					if var_312_31 + var_312_23 > arg_309_1.duration_ then
						arg_309_1.duration_ = var_312_31 + var_312_23
					end

					if var_312_26.prefab_name ~= "" and arg_309_1.actors_[var_312_26.prefab_name] ~= nil then
						local var_312_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_309_1.actors_[var_312_26.prefab_name].transform, "story_v_out_413161", "413161075", "story_v_out_413161.awb")

						arg_309_1:RecordAudio("413161075", var_312_32)
						arg_309_1:RecordAudio("413161075", var_312_32)
					else
						arg_309_1:AudioAction("play", "voice", "story_v_out_413161", "413161075", "story_v_out_413161.awb")
					end

					arg_309_1:RecordHistoryTalkVoice("story_v_out_413161", "413161075", "story_v_out_413161.awb")
				end

				arg_309_1:RecordContent(arg_309_1.text_.text)
			end

			local var_312_33 = math.max(var_312_24, arg_309_1.talkMaxDuration)

			if var_312_23 <= arg_309_1.time_ and arg_309_1.time_ < var_312_23 + var_312_33 then
				arg_309_1.typewritter.percent = (arg_309_1.time_ - var_312_23) / var_312_33

				arg_309_1.typewritter:SetDirty()
			end

			if arg_309_1.time_ >= var_312_23 + var_312_33 and arg_309_1.time_ < var_312_23 + var_312_33 + arg_312_0 then
				arg_309_1.typewritter.percent = 1

				arg_309_1.typewritter:SetDirty()
				arg_309_1:ShowNextGo(true)
			end
		end
	end,
	Play413161076 = function(arg_313_0, arg_313_1)
		arg_313_1.time_ = 0
		arg_313_1.frameCnt_ = 0
		arg_313_1.state_ = "playing"
		arg_313_1.curTalkId_ = 413161076
		arg_313_1.duration_ = 9.73

		local var_313_0 = {
			zh = 6.733,
			ja = 9.733
		}
		local var_313_1 = manager.audio:GetLocalizationFlag()

		if var_313_0[var_313_1] ~= nil then
			arg_313_1.duration_ = var_313_0[var_313_1]
		end

		SetActive(arg_313_1.tipsGo_, false)

		function arg_313_1.onSingleLineFinish_()
			arg_313_1.onSingleLineUpdate_ = nil
			arg_313_1.onSingleLineFinish_ = nil
			arg_313_1.state_ = "waiting"
		end

		function arg_313_1.playNext_(arg_315_0)
			if arg_315_0 == 1 then
				arg_313_0:Play413161077(arg_313_1)
			end
		end

		function arg_313_1.onSingleLineUpdate_(arg_316_0)
			local var_316_0 = "10092_1"

			if arg_313_1.actors_[var_316_0] == nil then
				local var_316_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10092_1")

				if not isNil(var_316_1) then
					local var_316_2 = Object.Instantiate(var_316_1, arg_313_1.canvasGo_.transform)

					var_316_2.transform:SetSiblingIndex(1)

					var_316_2.name = var_316_0
					var_316_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_313_1.actors_[var_316_0] = var_316_2

					local var_316_3 = var_316_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_313_1.isInRecall_ then
						for iter_316_0, iter_316_1 in ipairs(var_316_3) do
							iter_316_1.color = arg_313_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_316_4 = arg_313_1.actors_["10092_1"]
			local var_316_5 = 0

			if var_316_5 < arg_313_1.time_ and arg_313_1.time_ <= var_316_5 + arg_316_0 and not isNil(var_316_4) and arg_313_1.var_.actorSpriteComps10092_1 == nil then
				arg_313_1.var_.actorSpriteComps10092_1 = var_316_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_316_6 = 2

			if var_316_5 <= arg_313_1.time_ and arg_313_1.time_ < var_316_5 + var_316_6 and not isNil(var_316_4) then
				local var_316_7 = (arg_313_1.time_ - var_316_5) / var_316_6

				if arg_313_1.var_.actorSpriteComps10092_1 then
					for iter_316_2, iter_316_3 in pairs(arg_313_1.var_.actorSpriteComps10092_1:ToTable()) do
						if iter_316_3 then
							if arg_313_1.isInRecall_ then
								local var_316_8 = Mathf.Lerp(iter_316_3.color.r, arg_313_1.hightColor1.r, var_316_7)
								local var_316_9 = Mathf.Lerp(iter_316_3.color.g, arg_313_1.hightColor1.g, var_316_7)
								local var_316_10 = Mathf.Lerp(iter_316_3.color.b, arg_313_1.hightColor1.b, var_316_7)

								iter_316_3.color = Color.New(var_316_8, var_316_9, var_316_10)
							else
								local var_316_11 = Mathf.Lerp(iter_316_3.color.r, 1, var_316_7)

								iter_316_3.color = Color.New(var_316_11, var_316_11, var_316_11)
							end
						end
					end
				end
			end

			if arg_313_1.time_ >= var_316_5 + var_316_6 and arg_313_1.time_ < var_316_5 + var_316_6 + arg_316_0 and not isNil(var_316_4) and arg_313_1.var_.actorSpriteComps10092_1 then
				for iter_316_4, iter_316_5 in pairs(arg_313_1.var_.actorSpriteComps10092_1:ToTable()) do
					if iter_316_5 then
						if arg_313_1.isInRecall_ then
							iter_316_5.color = arg_313_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_316_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_313_1.var_.actorSpriteComps10092_1 = nil
			end

			local var_316_12 = 0
			local var_316_13 = 0.925

			if var_316_12 < arg_313_1.time_ and arg_313_1.time_ <= var_316_12 + arg_316_0 then
				arg_313_1.talkMaxDuration = 0
				arg_313_1.dialogCg_.alpha = 1

				arg_313_1.dialog_:SetActive(true)
				SetActive(arg_313_1.leftNameGo_, true)

				local var_316_14 = arg_313_1:FormatText(StoryNameCfg[996].name)

				arg_313_1.leftNameTxt_.text = var_316_14

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_313_1.leftNameTxt_.transform)

				arg_313_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_313_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_313_1:RecordName(arg_313_1.leftNameTxt_.text)
				SetActive(arg_313_1.iconTrs_.gameObject, false)
				arg_313_1.callingController_:SetSelectedState("normal")

				local var_316_15 = arg_313_1:GetWordFromCfg(413161076)
				local var_316_16 = arg_313_1:FormatText(var_316_15.content)

				arg_313_1.text_.text = var_316_16

				LuaForUtil.ClearLinePrefixSymbol(arg_313_1.text_)

				local var_316_17 = 37
				local var_316_18 = utf8.len(var_316_16)
				local var_316_19 = var_316_17 <= 0 and var_316_13 or var_316_13 * (var_316_18 / var_316_17)

				if var_316_19 > 0 and var_316_13 < var_316_19 then
					arg_313_1.talkMaxDuration = var_316_19

					if var_316_19 + var_316_12 > arg_313_1.duration_ then
						arg_313_1.duration_ = var_316_19 + var_316_12
					end
				end

				arg_313_1.text_.text = var_316_16
				arg_313_1.typewritter.percent = 0

				arg_313_1.typewritter:SetDirty()
				arg_313_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161076", "story_v_out_413161.awb") ~= 0 then
					local var_316_20 = manager.audio:GetVoiceLength("story_v_out_413161", "413161076", "story_v_out_413161.awb") / 1000

					if var_316_20 + var_316_12 > arg_313_1.duration_ then
						arg_313_1.duration_ = var_316_20 + var_316_12
					end

					if var_316_15.prefab_name ~= "" and arg_313_1.actors_[var_316_15.prefab_name] ~= nil then
						local var_316_21 = LuaForUtil.PlayVoiceWithCriLipsync(arg_313_1.actors_[var_316_15.prefab_name].transform, "story_v_out_413161", "413161076", "story_v_out_413161.awb")

						arg_313_1:RecordAudio("413161076", var_316_21)
						arg_313_1:RecordAudio("413161076", var_316_21)
					else
						arg_313_1:AudioAction("play", "voice", "story_v_out_413161", "413161076", "story_v_out_413161.awb")
					end

					arg_313_1:RecordHistoryTalkVoice("story_v_out_413161", "413161076", "story_v_out_413161.awb")
				end

				arg_313_1:RecordContent(arg_313_1.text_.text)
			end

			local var_316_22 = math.max(var_316_13, arg_313_1.talkMaxDuration)

			if var_316_12 <= arg_313_1.time_ and arg_313_1.time_ < var_316_12 + var_316_22 then
				arg_313_1.typewritter.percent = (arg_313_1.time_ - var_316_12) / var_316_22

				arg_313_1.typewritter:SetDirty()
			end

			if arg_313_1.time_ >= var_316_12 + var_316_22 and arg_313_1.time_ < var_316_12 + var_316_22 + arg_316_0 then
				arg_313_1.typewritter.percent = 1

				arg_313_1.typewritter:SetDirty()
				arg_313_1:ShowNextGo(true)
			end
		end
	end,
	Play413161077 = function(arg_317_0, arg_317_1)
		arg_317_1.time_ = 0
		arg_317_1.frameCnt_ = 0
		arg_317_1.state_ = "playing"
		arg_317_1.curTalkId_ = 413161077
		arg_317_1.duration_ = 7.97

		local var_317_0 = {
			zh = 6.6,
			ja = 7.966
		}
		local var_317_1 = manager.audio:GetLocalizationFlag()

		if var_317_0[var_317_1] ~= nil then
			arg_317_1.duration_ = var_317_0[var_317_1]
		end

		SetActive(arg_317_1.tipsGo_, false)

		function arg_317_1.onSingleLineFinish_()
			arg_317_1.onSingleLineUpdate_ = nil
			arg_317_1.onSingleLineFinish_ = nil
			arg_317_1.state_ = "waiting"
		end

		function arg_317_1.playNext_(arg_319_0)
			if arg_319_0 == 1 then
				arg_317_0:Play413161078(arg_317_1)
			end
		end

		function arg_317_1.onSingleLineUpdate_(arg_320_0)
			local var_320_0 = 2

			if var_320_0 < arg_317_1.time_ and arg_317_1.time_ <= var_320_0 + arg_320_0 then
				local var_320_1 = manager.ui.mainCamera.transform.localPosition
				local var_320_2 = Vector3.New(0, 0, 10) + Vector3.New(var_320_1.x, var_320_1.y, 0)
				local var_320_3 = arg_317_1.bgs_.ST0602

				var_320_3.transform.localPosition = var_320_2
				var_320_3.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_320_4 = var_320_3:GetComponent("SpriteRenderer")

				if var_320_4 and var_320_4.sprite then
					local var_320_5 = (var_320_3.transform.localPosition - var_320_1).z
					local var_320_6 = manager.ui.mainCameraCom_
					local var_320_7 = 2 * var_320_5 * Mathf.Tan(var_320_6.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_320_8 = var_320_7 * var_320_6.aspect
					local var_320_9 = var_320_4.sprite.bounds.size.x
					local var_320_10 = var_320_4.sprite.bounds.size.y
					local var_320_11 = var_320_8 / var_320_9
					local var_320_12 = var_320_7 / var_320_10
					local var_320_13 = var_320_12 < var_320_11 and var_320_11 or var_320_12

					var_320_3.transform.localScale = Vector3.New(var_320_13, var_320_13, 0)
				end

				for iter_320_0, iter_320_1 in pairs(arg_317_1.bgs_) do
					if iter_320_0 ~= "ST0602" then
						iter_320_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_320_14 = 0

			if var_320_14 < arg_317_1.time_ and arg_317_1.time_ <= var_320_14 + arg_320_0 then
				arg_317_1.mask_.enabled = true
				arg_317_1.mask_.raycastTarget = true

				arg_317_1:SetGaussion(false)
			end

			local var_320_15 = 2

			if var_320_14 <= arg_317_1.time_ and arg_317_1.time_ < var_320_14 + var_320_15 then
				local var_320_16 = (arg_317_1.time_ - var_320_14) / var_320_15
				local var_320_17 = Color.New(0, 0, 0)

				var_320_17.a = Mathf.Lerp(0, 1, var_320_16)
				arg_317_1.mask_.color = var_320_17
			end

			if arg_317_1.time_ >= var_320_14 + var_320_15 and arg_317_1.time_ < var_320_14 + var_320_15 + arg_320_0 then
				local var_320_18 = Color.New(0, 0, 0)

				var_320_18.a = 1
				arg_317_1.mask_.color = var_320_18
			end

			local var_320_19 = 2

			if var_320_19 < arg_317_1.time_ and arg_317_1.time_ <= var_320_19 + arg_320_0 then
				arg_317_1.mask_.enabled = true
				arg_317_1.mask_.raycastTarget = true

				arg_317_1:SetGaussion(false)
			end

			local var_320_20 = 2

			if var_320_19 <= arg_317_1.time_ and arg_317_1.time_ < var_320_19 + var_320_20 then
				local var_320_21 = (arg_317_1.time_ - var_320_19) / var_320_20
				local var_320_22 = Color.New(0, 0, 0)

				var_320_22.a = Mathf.Lerp(1, 0, var_320_21)
				arg_317_1.mask_.color = var_320_22
			end

			if arg_317_1.time_ >= var_320_19 + var_320_20 and arg_317_1.time_ < var_320_19 + var_320_20 + arg_320_0 then
				local var_320_23 = Color.New(0, 0, 0)
				local var_320_24 = 0

				arg_317_1.mask_.enabled = false
				var_320_23.a = var_320_24
				arg_317_1.mask_.color = var_320_23
			end

			local var_320_25 = arg_317_1.actors_["10092"].transform
			local var_320_26 = 1.966

			if var_320_26 < arg_317_1.time_ and arg_317_1.time_ <= var_320_26 + arg_320_0 then
				arg_317_1.var_.moveOldPos10092 = var_320_25.localPosition
				var_320_25.localScale = Vector3.New(1, 1, 1)

				arg_317_1:CheckSpriteTmpPos("10092", 7)

				local var_320_27 = var_320_25.childCount

				for iter_320_2 = 0, var_320_27 - 1 do
					local var_320_28 = var_320_25:GetChild(iter_320_2)

					if var_320_28.name == "" or not string.find(var_320_28.name, "split") then
						var_320_28.gameObject:SetActive(true)
					else
						var_320_28.gameObject:SetActive(false)
					end
				end
			end

			local var_320_29 = 0.001

			if var_320_26 <= arg_317_1.time_ and arg_317_1.time_ < var_320_26 + var_320_29 then
				local var_320_30 = (arg_317_1.time_ - var_320_26) / var_320_29
				local var_320_31 = Vector3.New(0, -2000, 0)

				var_320_25.localPosition = Vector3.Lerp(arg_317_1.var_.moveOldPos10092, var_320_31, var_320_30)
			end

			if arg_317_1.time_ >= var_320_26 + var_320_29 and arg_317_1.time_ < var_320_26 + var_320_29 + arg_320_0 then
				var_320_25.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_320_32 = arg_317_1.actors_["10022"].transform
			local var_320_33 = 1.966

			if var_320_33 < arg_317_1.time_ and arg_317_1.time_ <= var_320_33 + arg_320_0 then
				arg_317_1.var_.moveOldPos10022 = var_320_32.localPosition
				var_320_32.localScale = Vector3.New(1, 1, 1)

				arg_317_1:CheckSpriteTmpPos("10022", 7)

				local var_320_34 = var_320_32.childCount

				for iter_320_3 = 0, var_320_34 - 1 do
					local var_320_35 = var_320_32:GetChild(iter_320_3)

					if var_320_35.name == "" or not string.find(var_320_35.name, "split") then
						var_320_35.gameObject:SetActive(true)
					else
						var_320_35.gameObject:SetActive(false)
					end
				end
			end

			local var_320_36 = 0.001

			if var_320_33 <= arg_317_1.time_ and arg_317_1.time_ < var_320_33 + var_320_36 then
				local var_320_37 = (arg_317_1.time_ - var_320_33) / var_320_36
				local var_320_38 = Vector3.New(0, -2000, 0)

				var_320_32.localPosition = Vector3.Lerp(arg_317_1.var_.moveOldPos10022, var_320_38, var_320_37)
			end

			if arg_317_1.time_ >= var_320_33 + var_320_36 and arg_317_1.time_ < var_320_33 + var_320_36 + arg_320_0 then
				var_320_32.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_320_39 = arg_317_1.actors_["10022"].transform
			local var_320_40 = 3.8

			if var_320_40 < arg_317_1.time_ and arg_317_1.time_ <= var_320_40 + arg_320_0 then
				arg_317_1.var_.moveOldPos10022 = var_320_39.localPosition
				var_320_39.localScale = Vector3.New(1, 1, 1)

				arg_317_1:CheckSpriteTmpPos("10022", 3)

				local var_320_41 = var_320_39.childCount

				for iter_320_4 = 0, var_320_41 - 1 do
					local var_320_42 = var_320_39:GetChild(iter_320_4)

					if var_320_42.name == "split_8" or not string.find(var_320_42.name, "split") then
						var_320_42.gameObject:SetActive(true)
					else
						var_320_42.gameObject:SetActive(false)
					end
				end
			end

			local var_320_43 = 0.001

			if var_320_40 <= arg_317_1.time_ and arg_317_1.time_ < var_320_40 + var_320_43 then
				local var_320_44 = (arg_317_1.time_ - var_320_40) / var_320_43
				local var_320_45 = Vector3.New(0, -315, -320)

				var_320_39.localPosition = Vector3.Lerp(arg_317_1.var_.moveOldPos10022, var_320_45, var_320_44)
			end

			if arg_317_1.time_ >= var_320_40 + var_320_43 and arg_317_1.time_ < var_320_40 + var_320_43 + arg_320_0 then
				var_320_39.localPosition = Vector3.New(0, -315, -320)
			end

			local var_320_46 = arg_317_1.actors_["10022"]
			local var_320_47 = 3.8

			if var_320_47 < arg_317_1.time_ and arg_317_1.time_ <= var_320_47 + arg_320_0 and not isNil(var_320_46) and arg_317_1.var_.actorSpriteComps10022 == nil then
				arg_317_1.var_.actorSpriteComps10022 = var_320_46:GetComponentsInChildren(typeof(Image), true)
			end

			local var_320_48 = 2

			if var_320_47 <= arg_317_1.time_ and arg_317_1.time_ < var_320_47 + var_320_48 and not isNil(var_320_46) then
				local var_320_49 = (arg_317_1.time_ - var_320_47) / var_320_48

				if arg_317_1.var_.actorSpriteComps10022 then
					for iter_320_5, iter_320_6 in pairs(arg_317_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_320_6 then
							if arg_317_1.isInRecall_ then
								local var_320_50 = Mathf.Lerp(iter_320_6.color.r, arg_317_1.hightColor1.r, var_320_49)
								local var_320_51 = Mathf.Lerp(iter_320_6.color.g, arg_317_1.hightColor1.g, var_320_49)
								local var_320_52 = Mathf.Lerp(iter_320_6.color.b, arg_317_1.hightColor1.b, var_320_49)

								iter_320_6.color = Color.New(var_320_50, var_320_51, var_320_52)
							else
								local var_320_53 = Mathf.Lerp(iter_320_6.color.r, 1, var_320_49)

								iter_320_6.color = Color.New(var_320_53, var_320_53, var_320_53)
							end
						end
					end
				end
			end

			if arg_317_1.time_ >= var_320_47 + var_320_48 and arg_317_1.time_ < var_320_47 + var_320_48 + arg_320_0 and not isNil(var_320_46) and arg_317_1.var_.actorSpriteComps10022 then
				for iter_320_7, iter_320_8 in pairs(arg_317_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_320_8 then
						if arg_317_1.isInRecall_ then
							iter_320_8.color = arg_317_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_320_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_317_1.var_.actorSpriteComps10022 = nil
			end

			local var_320_54 = 1.966

			arg_317_1.isInRecall_ = false

			if var_320_54 < arg_317_1.time_ and arg_317_1.time_ <= var_320_54 + arg_320_0 then
				arg_317_1.screenFilterGo_:SetActive(false)

				for iter_320_9, iter_320_10 in pairs(arg_317_1.actors_) do
					local var_320_55 = iter_320_10:GetComponentsInChildren(typeof(Image), true):ToTable()

					for iter_320_11, iter_320_12 in ipairs(var_320_55) do
						if iter_320_12.color.r > 0.51 then
							iter_320_12.color = Color.New(1, 1, 1)
						else
							iter_320_12.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end
			end

			local var_320_56 = 0.034

			if var_320_54 <= arg_317_1.time_ and arg_317_1.time_ < var_320_54 + var_320_56 then
				local var_320_57 = (arg_317_1.time_ - var_320_54) / var_320_56

				arg_317_1.screenFilterEffect_.weight = Mathf.Lerp(1, 0, var_320_57)
			end

			if arg_317_1.time_ >= var_320_54 + var_320_56 and arg_317_1.time_ < var_320_54 + var_320_56 + arg_320_0 then
				arg_317_1.screenFilterEffect_.weight = 0
			end

			local var_320_58 = arg_317_1.actors_["10022"]
			local var_320_59 = 3.8

			if var_320_59 < arg_317_1.time_ and arg_317_1.time_ <= var_320_59 + arg_320_0 then
				local var_320_60 = var_320_58:GetComponentInChildren(typeof(CanvasGroup))

				if var_320_60 then
					arg_317_1.var_.alphaOldValue10022 = var_320_60.alpha
					arg_317_1.var_.characterEffect10022 = var_320_60
				end

				arg_317_1.var_.alphaOldValue10022 = 0
			end

			local var_320_61 = 0.166666666666667

			if var_320_59 <= arg_317_1.time_ and arg_317_1.time_ < var_320_59 + var_320_61 then
				local var_320_62 = (arg_317_1.time_ - var_320_59) / var_320_61
				local var_320_63 = Mathf.Lerp(arg_317_1.var_.alphaOldValue10022, 1, var_320_62)

				if arg_317_1.var_.characterEffect10022 then
					arg_317_1.var_.characterEffect10022.alpha = var_320_63
				end
			end

			if arg_317_1.time_ >= var_320_59 + var_320_61 and arg_317_1.time_ < var_320_59 + var_320_61 + arg_320_0 and arg_317_1.var_.characterEffect10022 then
				arg_317_1.var_.characterEffect10022.alpha = 1
			end

			if arg_317_1.frameCnt_ <= 1 then
				arg_317_1.dialog_:SetActive(false)
			end

			local var_320_64 = 4
			local var_320_65 = 0.275

			if var_320_64 < arg_317_1.time_ and arg_317_1.time_ <= var_320_64 + arg_320_0 then
				arg_317_1.talkMaxDuration = 0

				arg_317_1.dialog_:SetActive(true)

				local var_320_66 = LeanTween.value(arg_317_1.dialog_, 0, 1, 0.3)

				var_320_66:setOnUpdate(LuaHelper.FloatAction(function(arg_321_0)
					arg_317_1.dialogCg_.alpha = arg_321_0
				end))
				var_320_66:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_317_1.dialog_)
					var_320_66:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_317_1.duration_ = arg_317_1.duration_ + 0.3

				SetActive(arg_317_1.leftNameGo_, true)

				local var_320_67 = arg_317_1:FormatText(StoryNameCfg[614].name)

				arg_317_1.leftNameTxt_.text = var_320_67

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_317_1.leftNameTxt_.transform)

				arg_317_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_317_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_317_1:RecordName(arg_317_1.leftNameTxt_.text)
				SetActive(arg_317_1.iconTrs_.gameObject, false)
				arg_317_1.callingController_:SetSelectedState("normal")

				local var_320_68 = arg_317_1:GetWordFromCfg(413161077)
				local var_320_69 = arg_317_1:FormatText(var_320_68.content)

				arg_317_1.text_.text = var_320_69

				LuaForUtil.ClearLinePrefixSymbol(arg_317_1.text_)

				local var_320_70 = 11
				local var_320_71 = utf8.len(var_320_69)
				local var_320_72 = var_320_70 <= 0 and var_320_65 or var_320_65 * (var_320_71 / var_320_70)

				if var_320_72 > 0 and var_320_65 < var_320_72 then
					arg_317_1.talkMaxDuration = var_320_72
					var_320_64 = var_320_64 + 0.3

					if var_320_72 + var_320_64 > arg_317_1.duration_ then
						arg_317_1.duration_ = var_320_72 + var_320_64
					end
				end

				arg_317_1.text_.text = var_320_69
				arg_317_1.typewritter.percent = 0

				arg_317_1.typewritter:SetDirty()
				arg_317_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161077", "story_v_out_413161.awb") ~= 0 then
					local var_320_73 = manager.audio:GetVoiceLength("story_v_out_413161", "413161077", "story_v_out_413161.awb") / 1000

					if var_320_73 + var_320_64 > arg_317_1.duration_ then
						arg_317_1.duration_ = var_320_73 + var_320_64
					end

					if var_320_68.prefab_name ~= "" and arg_317_1.actors_[var_320_68.prefab_name] ~= nil then
						local var_320_74 = LuaForUtil.PlayVoiceWithCriLipsync(arg_317_1.actors_[var_320_68.prefab_name].transform, "story_v_out_413161", "413161077", "story_v_out_413161.awb")

						arg_317_1:RecordAudio("413161077", var_320_74)
						arg_317_1:RecordAudio("413161077", var_320_74)
					else
						arg_317_1:AudioAction("play", "voice", "story_v_out_413161", "413161077", "story_v_out_413161.awb")
					end

					arg_317_1:RecordHistoryTalkVoice("story_v_out_413161", "413161077", "story_v_out_413161.awb")
				end

				arg_317_1:RecordContent(arg_317_1.text_.text)
			end

			local var_320_75 = var_320_64 + 0.3
			local var_320_76 = math.max(var_320_65, arg_317_1.talkMaxDuration)

			if var_320_75 <= arg_317_1.time_ and arg_317_1.time_ < var_320_75 + var_320_76 then
				arg_317_1.typewritter.percent = (arg_317_1.time_ - var_320_75) / var_320_76

				arg_317_1.typewritter:SetDirty()
			end

			if arg_317_1.time_ >= var_320_75 + var_320_76 and arg_317_1.time_ < var_320_75 + var_320_76 + arg_320_0 then
				arg_317_1.typewritter.percent = 1

				arg_317_1.typewritter:SetDirty()
				arg_317_1:ShowNextGo(true)
			end
		end
	end,
	Play413161078 = function(arg_323_0, arg_323_1)
		arg_323_1.time_ = 0
		arg_323_1.frameCnt_ = 0
		arg_323_1.state_ = "playing"
		arg_323_1.curTalkId_ = 413161078
		arg_323_1.duration_ = 4.9

		local var_323_0 = {
			zh = 3.133,
			ja = 4.9
		}
		local var_323_1 = manager.audio:GetLocalizationFlag()

		if var_323_0[var_323_1] ~= nil then
			arg_323_1.duration_ = var_323_0[var_323_1]
		end

		SetActive(arg_323_1.tipsGo_, false)

		function arg_323_1.onSingleLineFinish_()
			arg_323_1.onSingleLineUpdate_ = nil
			arg_323_1.onSingleLineFinish_ = nil
			arg_323_1.state_ = "waiting"
		end

		function arg_323_1.playNext_(arg_325_0)
			if arg_325_0 == 1 then
				arg_323_0:Play413161079(arg_323_1)
			end
		end

		function arg_323_1.onSingleLineUpdate_(arg_326_0)
			local var_326_0 = arg_323_1.actors_["10022"].transform
			local var_326_1 = 0

			if var_326_1 < arg_323_1.time_ and arg_323_1.time_ <= var_326_1 + arg_326_0 then
				arg_323_1.var_.moveOldPos10022 = var_326_0.localPosition
				var_326_0.localScale = Vector3.New(1, 1, 1)

				arg_323_1:CheckSpriteTmpPos("10022", 6)

				local var_326_2 = var_326_0.childCount

				for iter_326_0 = 0, var_326_2 - 1 do
					local var_326_3 = var_326_0:GetChild(iter_326_0)

					if var_326_3.name == "" or not string.find(var_326_3.name, "split") then
						var_326_3.gameObject:SetActive(true)
					else
						var_326_3.gameObject:SetActive(false)
					end
				end
			end

			local var_326_4 = 0.001

			if var_326_1 <= arg_323_1.time_ and arg_323_1.time_ < var_326_1 + var_326_4 then
				local var_326_5 = (arg_323_1.time_ - var_326_1) / var_326_4
				local var_326_6 = Vector3.New(1500, -315, -320)

				var_326_0.localPosition = Vector3.Lerp(arg_323_1.var_.moveOldPos10022, var_326_6, var_326_5)
			end

			if arg_323_1.time_ >= var_326_1 + var_326_4 and arg_323_1.time_ < var_326_1 + var_326_4 + arg_326_0 then
				var_326_0.localPosition = Vector3.New(1500, -315, -320)
			end

			local var_326_7 = arg_323_1.actors_["10022"]
			local var_326_8 = 0

			if var_326_8 < arg_323_1.time_ and arg_323_1.time_ <= var_326_8 + arg_326_0 and not isNil(var_326_7) and arg_323_1.var_.actorSpriteComps10022 == nil then
				arg_323_1.var_.actorSpriteComps10022 = var_326_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_326_9 = 2

			if var_326_8 <= arg_323_1.time_ and arg_323_1.time_ < var_326_8 + var_326_9 and not isNil(var_326_7) then
				local var_326_10 = (arg_323_1.time_ - var_326_8) / var_326_9

				if arg_323_1.var_.actorSpriteComps10022 then
					for iter_326_1, iter_326_2 in pairs(arg_323_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_326_2 then
							if arg_323_1.isInRecall_ then
								local var_326_11 = Mathf.Lerp(iter_326_2.color.r, arg_323_1.hightColor2.r, var_326_10)
								local var_326_12 = Mathf.Lerp(iter_326_2.color.g, arg_323_1.hightColor2.g, var_326_10)
								local var_326_13 = Mathf.Lerp(iter_326_2.color.b, arg_323_1.hightColor2.b, var_326_10)

								iter_326_2.color = Color.New(var_326_11, var_326_12, var_326_13)
							else
								local var_326_14 = Mathf.Lerp(iter_326_2.color.r, 0.5, var_326_10)

								iter_326_2.color = Color.New(var_326_14, var_326_14, var_326_14)
							end
						end
					end
				end
			end

			if arg_323_1.time_ >= var_326_8 + var_326_9 and arg_323_1.time_ < var_326_8 + var_326_9 + arg_326_0 and not isNil(var_326_7) and arg_323_1.var_.actorSpriteComps10022 then
				for iter_326_3, iter_326_4 in pairs(arg_323_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_326_4 then
						if arg_323_1.isInRecall_ then
							iter_326_4.color = arg_323_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_326_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_323_1.var_.actorSpriteComps10022 = nil
			end

			local var_326_15 = 0
			local var_326_16 = 0.425

			if var_326_15 < arg_323_1.time_ and arg_323_1.time_ <= var_326_15 + arg_326_0 then
				arg_323_1.talkMaxDuration = 0
				arg_323_1.dialogCg_.alpha = 1

				arg_323_1.dialog_:SetActive(true)
				SetActive(arg_323_1.leftNameGo_, true)

				local var_326_17 = arg_323_1:FormatText(StoryNameCfg[998].name)

				arg_323_1.leftNameTxt_.text = var_326_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_323_1.leftNameTxt_.transform)

				arg_323_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_323_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_323_1:RecordName(arg_323_1.leftNameTxt_.text)
				SetActive(arg_323_1.iconTrs_.gameObject, true)
				arg_323_1.iconController_:SetSelectedState("hero")

				arg_323_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_323_1.callingController_:SetSelectedState("normal")

				arg_323_1.keyicon_.color = Color.New(1, 1, 1)
				arg_323_1.icon_.color = Color.New(1, 1, 1)

				local var_326_18 = arg_323_1:GetWordFromCfg(413161078)
				local var_326_19 = arg_323_1:FormatText(var_326_18.content)

				arg_323_1.text_.text = var_326_19

				LuaForUtil.ClearLinePrefixSymbol(arg_323_1.text_)

				local var_326_20 = 17
				local var_326_21 = utf8.len(var_326_19)
				local var_326_22 = var_326_20 <= 0 and var_326_16 or var_326_16 * (var_326_21 / var_326_20)

				if var_326_22 > 0 and var_326_16 < var_326_22 then
					arg_323_1.talkMaxDuration = var_326_22

					if var_326_22 + var_326_15 > arg_323_1.duration_ then
						arg_323_1.duration_ = var_326_22 + var_326_15
					end
				end

				arg_323_1.text_.text = var_326_19
				arg_323_1.typewritter.percent = 0

				arg_323_1.typewritter:SetDirty()
				arg_323_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161078", "story_v_out_413161.awb") ~= 0 then
					local var_326_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161078", "story_v_out_413161.awb") / 1000

					if var_326_23 + var_326_15 > arg_323_1.duration_ then
						arg_323_1.duration_ = var_326_23 + var_326_15
					end

					if var_326_18.prefab_name ~= "" and arg_323_1.actors_[var_326_18.prefab_name] ~= nil then
						local var_326_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_323_1.actors_[var_326_18.prefab_name].transform, "story_v_out_413161", "413161078", "story_v_out_413161.awb")

						arg_323_1:RecordAudio("413161078", var_326_24)
						arg_323_1:RecordAudio("413161078", var_326_24)
					else
						arg_323_1:AudioAction("play", "voice", "story_v_out_413161", "413161078", "story_v_out_413161.awb")
					end

					arg_323_1:RecordHistoryTalkVoice("story_v_out_413161", "413161078", "story_v_out_413161.awb")
				end

				arg_323_1:RecordContent(arg_323_1.text_.text)
			end

			local var_326_25 = math.max(var_326_16, arg_323_1.talkMaxDuration)

			if var_326_15 <= arg_323_1.time_ and arg_323_1.time_ < var_326_15 + var_326_25 then
				arg_323_1.typewritter.percent = (arg_323_1.time_ - var_326_15) / var_326_25

				arg_323_1.typewritter:SetDirty()
			end

			if arg_323_1.time_ >= var_326_15 + var_326_25 and arg_323_1.time_ < var_326_15 + var_326_25 + arg_326_0 then
				arg_323_1.typewritter.percent = 1

				arg_323_1.typewritter:SetDirty()
				arg_323_1:ShowNextGo(true)
			end
		end
	end,
	Play413161079 = function(arg_327_0, arg_327_1)
		arg_327_1.time_ = 0
		arg_327_1.frameCnt_ = 0
		arg_327_1.state_ = "playing"
		arg_327_1.curTalkId_ = 413161079
		arg_327_1.duration_ = 3.57

		local var_327_0 = {
			zh = 2.833,
			ja = 3.566
		}
		local var_327_1 = manager.audio:GetLocalizationFlag()

		if var_327_0[var_327_1] ~= nil then
			arg_327_1.duration_ = var_327_0[var_327_1]
		end

		SetActive(arg_327_1.tipsGo_, false)

		function arg_327_1.onSingleLineFinish_()
			arg_327_1.onSingleLineUpdate_ = nil
			arg_327_1.onSingleLineFinish_ = nil
			arg_327_1.state_ = "waiting"
		end

		function arg_327_1.playNext_(arg_329_0)
			if arg_329_0 == 1 then
				arg_327_0:Play413161080(arg_327_1)
			end
		end

		function arg_327_1.onSingleLineUpdate_(arg_330_0)
			local var_330_0 = 0
			local var_330_1 = 0.275

			if var_330_0 < arg_327_1.time_ and arg_327_1.time_ <= var_330_0 + arg_330_0 then
				arg_327_1.talkMaxDuration = 0
				arg_327_1.dialogCg_.alpha = 1

				arg_327_1.dialog_:SetActive(true)
				SetActive(arg_327_1.leftNameGo_, true)

				local var_330_2 = arg_327_1:FormatText(StoryNameCfg[998].name)

				arg_327_1.leftNameTxt_.text = var_330_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_327_1.leftNameTxt_.transform)

				arg_327_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_327_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_327_1:RecordName(arg_327_1.leftNameTxt_.text)
				SetActive(arg_327_1.iconTrs_.gameObject, true)
				arg_327_1.iconController_:SetSelectedState("hero")

				arg_327_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_327_1.callingController_:SetSelectedState("normal")

				arg_327_1.keyicon_.color = Color.New(1, 1, 1)
				arg_327_1.icon_.color = Color.New(1, 1, 1)

				local var_330_3 = arg_327_1:GetWordFromCfg(413161079)
				local var_330_4 = arg_327_1:FormatText(var_330_3.content)

				arg_327_1.text_.text = var_330_4

				LuaForUtil.ClearLinePrefixSymbol(arg_327_1.text_)

				local var_330_5 = 11
				local var_330_6 = utf8.len(var_330_4)
				local var_330_7 = var_330_5 <= 0 and var_330_1 or var_330_1 * (var_330_6 / var_330_5)

				if var_330_7 > 0 and var_330_1 < var_330_7 then
					arg_327_1.talkMaxDuration = var_330_7

					if var_330_7 + var_330_0 > arg_327_1.duration_ then
						arg_327_1.duration_ = var_330_7 + var_330_0
					end
				end

				arg_327_1.text_.text = var_330_4
				arg_327_1.typewritter.percent = 0

				arg_327_1.typewritter:SetDirty()
				arg_327_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161079", "story_v_out_413161.awb") ~= 0 then
					local var_330_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161079", "story_v_out_413161.awb") / 1000

					if var_330_8 + var_330_0 > arg_327_1.duration_ then
						arg_327_1.duration_ = var_330_8 + var_330_0
					end

					if var_330_3.prefab_name ~= "" and arg_327_1.actors_[var_330_3.prefab_name] ~= nil then
						local var_330_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_327_1.actors_[var_330_3.prefab_name].transform, "story_v_out_413161", "413161079", "story_v_out_413161.awb")

						arg_327_1:RecordAudio("413161079", var_330_9)
						arg_327_1:RecordAudio("413161079", var_330_9)
					else
						arg_327_1:AudioAction("play", "voice", "story_v_out_413161", "413161079", "story_v_out_413161.awb")
					end

					arg_327_1:RecordHistoryTalkVoice("story_v_out_413161", "413161079", "story_v_out_413161.awb")
				end

				arg_327_1:RecordContent(arg_327_1.text_.text)
			end

			local var_330_10 = math.max(var_330_1, arg_327_1.talkMaxDuration)

			if var_330_0 <= arg_327_1.time_ and arg_327_1.time_ < var_330_0 + var_330_10 then
				arg_327_1.typewritter.percent = (arg_327_1.time_ - var_330_0) / var_330_10

				arg_327_1.typewritter:SetDirty()
			end

			if arg_327_1.time_ >= var_330_0 + var_330_10 and arg_327_1.time_ < var_330_0 + var_330_10 + arg_330_0 then
				arg_327_1.typewritter.percent = 1

				arg_327_1.typewritter:SetDirty()
				arg_327_1:ShowNextGo(true)
			end
		end
	end,
	Play413161080 = function(arg_331_0, arg_331_1)
		arg_331_1.time_ = 0
		arg_331_1.frameCnt_ = 0
		arg_331_1.state_ = "playing"
		arg_331_1.curTalkId_ = 413161080
		arg_331_1.duration_ = 5.2

		local var_331_0 = {
			zh = 2.466,
			ja = 5.2
		}
		local var_331_1 = manager.audio:GetLocalizationFlag()

		if var_331_0[var_331_1] ~= nil then
			arg_331_1.duration_ = var_331_0[var_331_1]
		end

		SetActive(arg_331_1.tipsGo_, false)

		function arg_331_1.onSingleLineFinish_()
			arg_331_1.onSingleLineUpdate_ = nil
			arg_331_1.onSingleLineFinish_ = nil
			arg_331_1.state_ = "waiting"
		end

		function arg_331_1.playNext_(arg_333_0)
			if arg_333_0 == 1 then
				arg_331_0:Play413161081(arg_331_1)
			end
		end

		function arg_331_1.onSingleLineUpdate_(arg_334_0)
			local var_334_0 = arg_331_1.actors_["10022"].transform
			local var_334_1 = 0

			if var_334_1 < arg_331_1.time_ and arg_331_1.time_ <= var_334_1 + arg_334_0 then
				arg_331_1.var_.moveOldPos10022 = var_334_0.localPosition
				var_334_0.localScale = Vector3.New(1, 1, 1)

				arg_331_1:CheckSpriteTmpPos("10022", 3)

				local var_334_2 = var_334_0.childCount

				for iter_334_0 = 0, var_334_2 - 1 do
					local var_334_3 = var_334_0:GetChild(iter_334_0)

					if var_334_3.name == "split_6" or not string.find(var_334_3.name, "split") then
						var_334_3.gameObject:SetActive(true)
					else
						var_334_3.gameObject:SetActive(false)
					end
				end
			end

			local var_334_4 = 0.001

			if var_334_1 <= arg_331_1.time_ and arg_331_1.time_ < var_334_1 + var_334_4 then
				local var_334_5 = (arg_331_1.time_ - var_334_1) / var_334_4
				local var_334_6 = Vector3.New(0, -315, -320)

				var_334_0.localPosition = Vector3.Lerp(arg_331_1.var_.moveOldPos10022, var_334_6, var_334_5)
			end

			if arg_331_1.time_ >= var_334_1 + var_334_4 and arg_331_1.time_ < var_334_1 + var_334_4 + arg_334_0 then
				var_334_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_334_7 = arg_331_1.actors_["10022"]
			local var_334_8 = 0

			if var_334_8 < arg_331_1.time_ and arg_331_1.time_ <= var_334_8 + arg_334_0 and not isNil(var_334_7) and arg_331_1.var_.actorSpriteComps10022 == nil then
				arg_331_1.var_.actorSpriteComps10022 = var_334_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_334_9 = 2

			if var_334_8 <= arg_331_1.time_ and arg_331_1.time_ < var_334_8 + var_334_9 and not isNil(var_334_7) then
				local var_334_10 = (arg_331_1.time_ - var_334_8) / var_334_9

				if arg_331_1.var_.actorSpriteComps10022 then
					for iter_334_1, iter_334_2 in pairs(arg_331_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_334_2 then
							if arg_331_1.isInRecall_ then
								local var_334_11 = Mathf.Lerp(iter_334_2.color.r, arg_331_1.hightColor1.r, var_334_10)
								local var_334_12 = Mathf.Lerp(iter_334_2.color.g, arg_331_1.hightColor1.g, var_334_10)
								local var_334_13 = Mathf.Lerp(iter_334_2.color.b, arg_331_1.hightColor1.b, var_334_10)

								iter_334_2.color = Color.New(var_334_11, var_334_12, var_334_13)
							else
								local var_334_14 = Mathf.Lerp(iter_334_2.color.r, 1, var_334_10)

								iter_334_2.color = Color.New(var_334_14, var_334_14, var_334_14)
							end
						end
					end
				end
			end

			if arg_331_1.time_ >= var_334_8 + var_334_9 and arg_331_1.time_ < var_334_8 + var_334_9 + arg_334_0 and not isNil(var_334_7) and arg_331_1.var_.actorSpriteComps10022 then
				for iter_334_3, iter_334_4 in pairs(arg_331_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_334_4 then
						if arg_331_1.isInRecall_ then
							iter_334_4.color = arg_331_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_334_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_331_1.var_.actorSpriteComps10022 = nil
			end

			local var_334_15 = 0
			local var_334_16 = 0.4

			if var_334_15 < arg_331_1.time_ and arg_331_1.time_ <= var_334_15 + arg_334_0 then
				arg_331_1.talkMaxDuration = 0
				arg_331_1.dialogCg_.alpha = 1

				arg_331_1.dialog_:SetActive(true)
				SetActive(arg_331_1.leftNameGo_, true)

				local var_334_17 = arg_331_1:FormatText(StoryNameCfg[614].name)

				arg_331_1.leftNameTxt_.text = var_334_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_331_1.leftNameTxt_.transform)

				arg_331_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_331_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_331_1:RecordName(arg_331_1.leftNameTxt_.text)
				SetActive(arg_331_1.iconTrs_.gameObject, false)
				arg_331_1.callingController_:SetSelectedState("normal")

				local var_334_18 = arg_331_1:GetWordFromCfg(413161080)
				local var_334_19 = arg_331_1:FormatText(var_334_18.content)

				arg_331_1.text_.text = var_334_19

				LuaForUtil.ClearLinePrefixSymbol(arg_331_1.text_)

				local var_334_20 = 12
				local var_334_21 = utf8.len(var_334_19)
				local var_334_22 = var_334_20 <= 0 and var_334_16 or var_334_16 * (var_334_21 / var_334_20)

				if var_334_22 > 0 and var_334_16 < var_334_22 then
					arg_331_1.talkMaxDuration = var_334_22

					if var_334_22 + var_334_15 > arg_331_1.duration_ then
						arg_331_1.duration_ = var_334_22 + var_334_15
					end
				end

				arg_331_1.text_.text = var_334_19
				arg_331_1.typewritter.percent = 0

				arg_331_1.typewritter:SetDirty()
				arg_331_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161080", "story_v_out_413161.awb") ~= 0 then
					local var_334_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161080", "story_v_out_413161.awb") / 1000

					if var_334_23 + var_334_15 > arg_331_1.duration_ then
						arg_331_1.duration_ = var_334_23 + var_334_15
					end

					if var_334_18.prefab_name ~= "" and arg_331_1.actors_[var_334_18.prefab_name] ~= nil then
						local var_334_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_331_1.actors_[var_334_18.prefab_name].transform, "story_v_out_413161", "413161080", "story_v_out_413161.awb")

						arg_331_1:RecordAudio("413161080", var_334_24)
						arg_331_1:RecordAudio("413161080", var_334_24)
					else
						arg_331_1:AudioAction("play", "voice", "story_v_out_413161", "413161080", "story_v_out_413161.awb")
					end

					arg_331_1:RecordHistoryTalkVoice("story_v_out_413161", "413161080", "story_v_out_413161.awb")
				end

				arg_331_1:RecordContent(arg_331_1.text_.text)
			end

			local var_334_25 = math.max(var_334_16, arg_331_1.talkMaxDuration)

			if var_334_15 <= arg_331_1.time_ and arg_331_1.time_ < var_334_15 + var_334_25 then
				arg_331_1.typewritter.percent = (arg_331_1.time_ - var_334_15) / var_334_25

				arg_331_1.typewritter:SetDirty()
			end

			if arg_331_1.time_ >= var_334_15 + var_334_25 and arg_331_1.time_ < var_334_15 + var_334_25 + arg_334_0 then
				arg_331_1.typewritter.percent = 1

				arg_331_1.typewritter:SetDirty()
				arg_331_1:ShowNextGo(true)
			end
		end
	end,
	Play413161081 = function(arg_335_0, arg_335_1)
		arg_335_1.time_ = 0
		arg_335_1.frameCnt_ = 0
		arg_335_1.state_ = "playing"
		arg_335_1.curTalkId_ = 413161081
		arg_335_1.duration_ = 9.23

		local var_335_0 = {
			zh = 5.9,
			ja = 9.233
		}
		local var_335_1 = manager.audio:GetLocalizationFlag()

		if var_335_0[var_335_1] ~= nil then
			arg_335_1.duration_ = var_335_0[var_335_1]
		end

		SetActive(arg_335_1.tipsGo_, false)

		function arg_335_1.onSingleLineFinish_()
			arg_335_1.onSingleLineUpdate_ = nil
			arg_335_1.onSingleLineFinish_ = nil
			arg_335_1.state_ = "waiting"
		end

		function arg_335_1.playNext_(arg_337_0)
			if arg_337_0 == 1 then
				arg_335_0:Play413161082(arg_335_1)
			end
		end

		function arg_335_1.onSingleLineUpdate_(arg_338_0)
			local var_338_0 = arg_335_1.actors_["10022"]
			local var_338_1 = 0

			if var_338_1 < arg_335_1.time_ and arg_335_1.time_ <= var_338_1 + arg_338_0 and not isNil(var_338_0) and arg_335_1.var_.actorSpriteComps10022 == nil then
				arg_335_1.var_.actorSpriteComps10022 = var_338_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_338_2 = 2

			if var_338_1 <= arg_335_1.time_ and arg_335_1.time_ < var_338_1 + var_338_2 and not isNil(var_338_0) then
				local var_338_3 = (arg_335_1.time_ - var_338_1) / var_338_2

				if arg_335_1.var_.actorSpriteComps10022 then
					for iter_338_0, iter_338_1 in pairs(arg_335_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_338_1 then
							if arg_335_1.isInRecall_ then
								local var_338_4 = Mathf.Lerp(iter_338_1.color.r, arg_335_1.hightColor2.r, var_338_3)
								local var_338_5 = Mathf.Lerp(iter_338_1.color.g, arg_335_1.hightColor2.g, var_338_3)
								local var_338_6 = Mathf.Lerp(iter_338_1.color.b, arg_335_1.hightColor2.b, var_338_3)

								iter_338_1.color = Color.New(var_338_4, var_338_5, var_338_6)
							else
								local var_338_7 = Mathf.Lerp(iter_338_1.color.r, 0.5, var_338_3)

								iter_338_1.color = Color.New(var_338_7, var_338_7, var_338_7)
							end
						end
					end
				end
			end

			if arg_335_1.time_ >= var_338_1 + var_338_2 and arg_335_1.time_ < var_338_1 + var_338_2 + arg_338_0 and not isNil(var_338_0) and arg_335_1.var_.actorSpriteComps10022 then
				for iter_338_2, iter_338_3 in pairs(arg_335_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_338_3 then
						if arg_335_1.isInRecall_ then
							iter_338_3.color = arg_335_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_338_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_335_1.var_.actorSpriteComps10022 = nil
			end

			local var_338_8 = 0
			local var_338_9 = 0.6

			if var_338_8 < arg_335_1.time_ and arg_335_1.time_ <= var_338_8 + arg_338_0 then
				arg_335_1.talkMaxDuration = 0
				arg_335_1.dialogCg_.alpha = 1

				arg_335_1.dialog_:SetActive(true)
				SetActive(arg_335_1.leftNameGo_, true)

				local var_338_10 = arg_335_1:FormatText(StoryNameCfg[998].name)

				arg_335_1.leftNameTxt_.text = var_338_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_335_1.leftNameTxt_.transform)

				arg_335_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_335_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_335_1:RecordName(arg_335_1.leftNameTxt_.text)
				SetActive(arg_335_1.iconTrs_.gameObject, true)
				arg_335_1.iconController_:SetSelectedState("hero")

				arg_335_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_335_1.callingController_:SetSelectedState("normal")

				arg_335_1.keyicon_.color = Color.New(1, 1, 1)
				arg_335_1.icon_.color = Color.New(1, 1, 1)

				local var_338_11 = arg_335_1:GetWordFromCfg(413161081)
				local var_338_12 = arg_335_1:FormatText(var_338_11.content)

				arg_335_1.text_.text = var_338_12

				LuaForUtil.ClearLinePrefixSymbol(arg_335_1.text_)

				local var_338_13 = 24
				local var_338_14 = utf8.len(var_338_12)
				local var_338_15 = var_338_13 <= 0 and var_338_9 or var_338_9 * (var_338_14 / var_338_13)

				if var_338_15 > 0 and var_338_9 < var_338_15 then
					arg_335_1.talkMaxDuration = var_338_15

					if var_338_15 + var_338_8 > arg_335_1.duration_ then
						arg_335_1.duration_ = var_338_15 + var_338_8
					end
				end

				arg_335_1.text_.text = var_338_12
				arg_335_1.typewritter.percent = 0

				arg_335_1.typewritter:SetDirty()
				arg_335_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161081", "story_v_out_413161.awb") ~= 0 then
					local var_338_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161081", "story_v_out_413161.awb") / 1000

					if var_338_16 + var_338_8 > arg_335_1.duration_ then
						arg_335_1.duration_ = var_338_16 + var_338_8
					end

					if var_338_11.prefab_name ~= "" and arg_335_1.actors_[var_338_11.prefab_name] ~= nil then
						local var_338_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_335_1.actors_[var_338_11.prefab_name].transform, "story_v_out_413161", "413161081", "story_v_out_413161.awb")

						arg_335_1:RecordAudio("413161081", var_338_17)
						arg_335_1:RecordAudio("413161081", var_338_17)
					else
						arg_335_1:AudioAction("play", "voice", "story_v_out_413161", "413161081", "story_v_out_413161.awb")
					end

					arg_335_1:RecordHistoryTalkVoice("story_v_out_413161", "413161081", "story_v_out_413161.awb")
				end

				arg_335_1:RecordContent(arg_335_1.text_.text)
			end

			local var_338_18 = math.max(var_338_9, arg_335_1.talkMaxDuration)

			if var_338_8 <= arg_335_1.time_ and arg_335_1.time_ < var_338_8 + var_338_18 then
				arg_335_1.typewritter.percent = (arg_335_1.time_ - var_338_8) / var_338_18

				arg_335_1.typewritter:SetDirty()
			end

			if arg_335_1.time_ >= var_338_8 + var_338_18 and arg_335_1.time_ < var_338_8 + var_338_18 + arg_338_0 then
				arg_335_1.typewritter.percent = 1

				arg_335_1.typewritter:SetDirty()
				arg_335_1:ShowNextGo(true)
			end
		end
	end,
	Play413161082 = function(arg_339_0, arg_339_1)
		arg_339_1.time_ = 0
		arg_339_1.frameCnt_ = 0
		arg_339_1.state_ = "playing"
		arg_339_1.curTalkId_ = 413161082
		arg_339_1.duration_ = 9.27

		local var_339_0 = {
			zh = 6.533,
			ja = 9.266
		}
		local var_339_1 = manager.audio:GetLocalizationFlag()

		if var_339_0[var_339_1] ~= nil then
			arg_339_1.duration_ = var_339_0[var_339_1]
		end

		SetActive(arg_339_1.tipsGo_, false)

		function arg_339_1.onSingleLineFinish_()
			arg_339_1.onSingleLineUpdate_ = nil
			arg_339_1.onSingleLineFinish_ = nil
			arg_339_1.state_ = "waiting"
		end

		function arg_339_1.playNext_(arg_341_0)
			if arg_341_0 == 1 then
				arg_339_0:Play413161083(arg_339_1)
			end
		end

		function arg_339_1.onSingleLineUpdate_(arg_342_0)
			local var_342_0 = arg_339_1.actors_["10022"]
			local var_342_1 = 0

			if var_342_1 < arg_339_1.time_ and arg_339_1.time_ <= var_342_1 + arg_342_0 and not isNil(var_342_0) and arg_339_1.var_.actorSpriteComps10022 == nil then
				arg_339_1.var_.actorSpriteComps10022 = var_342_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_342_2 = 2

			if var_342_1 <= arg_339_1.time_ and arg_339_1.time_ < var_342_1 + var_342_2 and not isNil(var_342_0) then
				local var_342_3 = (arg_339_1.time_ - var_342_1) / var_342_2

				if arg_339_1.var_.actorSpriteComps10022 then
					for iter_342_0, iter_342_1 in pairs(arg_339_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_342_1 then
							if arg_339_1.isInRecall_ then
								local var_342_4 = Mathf.Lerp(iter_342_1.color.r, arg_339_1.hightColor1.r, var_342_3)
								local var_342_5 = Mathf.Lerp(iter_342_1.color.g, arg_339_1.hightColor1.g, var_342_3)
								local var_342_6 = Mathf.Lerp(iter_342_1.color.b, arg_339_1.hightColor1.b, var_342_3)

								iter_342_1.color = Color.New(var_342_4, var_342_5, var_342_6)
							else
								local var_342_7 = Mathf.Lerp(iter_342_1.color.r, 1, var_342_3)

								iter_342_1.color = Color.New(var_342_7, var_342_7, var_342_7)
							end
						end
					end
				end
			end

			if arg_339_1.time_ >= var_342_1 + var_342_2 and arg_339_1.time_ < var_342_1 + var_342_2 + arg_342_0 and not isNil(var_342_0) and arg_339_1.var_.actorSpriteComps10022 then
				for iter_342_2, iter_342_3 in pairs(arg_339_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_342_3 then
						if arg_339_1.isInRecall_ then
							iter_342_3.color = arg_339_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_342_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_339_1.var_.actorSpriteComps10022 = nil
			end

			local var_342_8 = 0
			local var_342_9 = 0.775

			if var_342_8 < arg_339_1.time_ and arg_339_1.time_ <= var_342_8 + arg_342_0 then
				arg_339_1.talkMaxDuration = 0
				arg_339_1.dialogCg_.alpha = 1

				arg_339_1.dialog_:SetActive(true)
				SetActive(arg_339_1.leftNameGo_, true)

				local var_342_10 = arg_339_1:FormatText(StoryNameCfg[614].name)

				arg_339_1.leftNameTxt_.text = var_342_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_339_1.leftNameTxt_.transform)

				arg_339_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_339_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_339_1:RecordName(arg_339_1.leftNameTxt_.text)
				SetActive(arg_339_1.iconTrs_.gameObject, false)
				arg_339_1.callingController_:SetSelectedState("normal")

				local var_342_11 = arg_339_1:GetWordFromCfg(413161082)
				local var_342_12 = arg_339_1:FormatText(var_342_11.content)

				arg_339_1.text_.text = var_342_12

				LuaForUtil.ClearLinePrefixSymbol(arg_339_1.text_)

				local var_342_13 = 31
				local var_342_14 = utf8.len(var_342_12)
				local var_342_15 = var_342_13 <= 0 and var_342_9 or var_342_9 * (var_342_14 / var_342_13)

				if var_342_15 > 0 and var_342_9 < var_342_15 then
					arg_339_1.talkMaxDuration = var_342_15

					if var_342_15 + var_342_8 > arg_339_1.duration_ then
						arg_339_1.duration_ = var_342_15 + var_342_8
					end
				end

				arg_339_1.text_.text = var_342_12
				arg_339_1.typewritter.percent = 0

				arg_339_1.typewritter:SetDirty()
				arg_339_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161082", "story_v_out_413161.awb") ~= 0 then
					local var_342_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161082", "story_v_out_413161.awb") / 1000

					if var_342_16 + var_342_8 > arg_339_1.duration_ then
						arg_339_1.duration_ = var_342_16 + var_342_8
					end

					if var_342_11.prefab_name ~= "" and arg_339_1.actors_[var_342_11.prefab_name] ~= nil then
						local var_342_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_339_1.actors_[var_342_11.prefab_name].transform, "story_v_out_413161", "413161082", "story_v_out_413161.awb")

						arg_339_1:RecordAudio("413161082", var_342_17)
						arg_339_1:RecordAudio("413161082", var_342_17)
					else
						arg_339_1:AudioAction("play", "voice", "story_v_out_413161", "413161082", "story_v_out_413161.awb")
					end

					arg_339_1:RecordHistoryTalkVoice("story_v_out_413161", "413161082", "story_v_out_413161.awb")
				end

				arg_339_1:RecordContent(arg_339_1.text_.text)
			end

			local var_342_18 = math.max(var_342_9, arg_339_1.talkMaxDuration)

			if var_342_8 <= arg_339_1.time_ and arg_339_1.time_ < var_342_8 + var_342_18 then
				arg_339_1.typewritter.percent = (arg_339_1.time_ - var_342_8) / var_342_18

				arg_339_1.typewritter:SetDirty()
			end

			if arg_339_1.time_ >= var_342_8 + var_342_18 and arg_339_1.time_ < var_342_8 + var_342_18 + arg_342_0 then
				arg_339_1.typewritter.percent = 1

				arg_339_1.typewritter:SetDirty()
				arg_339_1:ShowNextGo(true)
			end
		end
	end,
	Play413161083 = function(arg_343_0, arg_343_1)
		arg_343_1.time_ = 0
		arg_343_1.frameCnt_ = 0
		arg_343_1.state_ = "playing"
		arg_343_1.curTalkId_ = 413161083
		arg_343_1.duration_ = 5.2

		local var_343_0 = {
			zh = 5.2,
			ja = 4.466
		}
		local var_343_1 = manager.audio:GetLocalizationFlag()

		if var_343_0[var_343_1] ~= nil then
			arg_343_1.duration_ = var_343_0[var_343_1]
		end

		SetActive(arg_343_1.tipsGo_, false)

		function arg_343_1.onSingleLineFinish_()
			arg_343_1.onSingleLineUpdate_ = nil
			arg_343_1.onSingleLineFinish_ = nil
			arg_343_1.state_ = "waiting"
		end

		function arg_343_1.playNext_(arg_345_0)
			if arg_345_0 == 1 then
				arg_343_0:Play413161084(arg_343_1)
			end
		end

		function arg_343_1.onSingleLineUpdate_(arg_346_0)
			local var_346_0 = arg_343_1.actors_["10022"]
			local var_346_1 = 0

			if var_346_1 < arg_343_1.time_ and arg_343_1.time_ <= var_346_1 + arg_346_0 and not isNil(var_346_0) and arg_343_1.var_.actorSpriteComps10022 == nil then
				arg_343_1.var_.actorSpriteComps10022 = var_346_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_346_2 = 2

			if var_346_1 <= arg_343_1.time_ and arg_343_1.time_ < var_346_1 + var_346_2 and not isNil(var_346_0) then
				local var_346_3 = (arg_343_1.time_ - var_346_1) / var_346_2

				if arg_343_1.var_.actorSpriteComps10022 then
					for iter_346_0, iter_346_1 in pairs(arg_343_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_346_1 then
							if arg_343_1.isInRecall_ then
								local var_346_4 = Mathf.Lerp(iter_346_1.color.r, arg_343_1.hightColor2.r, var_346_3)
								local var_346_5 = Mathf.Lerp(iter_346_1.color.g, arg_343_1.hightColor2.g, var_346_3)
								local var_346_6 = Mathf.Lerp(iter_346_1.color.b, arg_343_1.hightColor2.b, var_346_3)

								iter_346_1.color = Color.New(var_346_4, var_346_5, var_346_6)
							else
								local var_346_7 = Mathf.Lerp(iter_346_1.color.r, 0.5, var_346_3)

								iter_346_1.color = Color.New(var_346_7, var_346_7, var_346_7)
							end
						end
					end
				end
			end

			if arg_343_1.time_ >= var_346_1 + var_346_2 and arg_343_1.time_ < var_346_1 + var_346_2 + arg_346_0 and not isNil(var_346_0) and arg_343_1.var_.actorSpriteComps10022 then
				for iter_346_2, iter_346_3 in pairs(arg_343_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_346_3 then
						if arg_343_1.isInRecall_ then
							iter_346_3.color = arg_343_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_346_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_343_1.var_.actorSpriteComps10022 = nil
			end

			local var_346_8 = 0
			local var_346_9 = 0.575

			if var_346_8 < arg_343_1.time_ and arg_343_1.time_ <= var_346_8 + arg_346_0 then
				arg_343_1.talkMaxDuration = 0
				arg_343_1.dialogCg_.alpha = 1

				arg_343_1.dialog_:SetActive(true)
				SetActive(arg_343_1.leftNameGo_, true)

				local var_346_10 = arg_343_1:FormatText(StoryNameCfg[998].name)

				arg_343_1.leftNameTxt_.text = var_346_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_343_1.leftNameTxt_.transform)

				arg_343_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_343_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_343_1:RecordName(arg_343_1.leftNameTxt_.text)
				SetActive(arg_343_1.iconTrs_.gameObject, true)
				arg_343_1.iconController_:SetSelectedState("hero")

				arg_343_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_343_1.callingController_:SetSelectedState("normal")

				arg_343_1.keyicon_.color = Color.New(1, 1, 1)
				arg_343_1.icon_.color = Color.New(1, 1, 1)

				local var_346_11 = arg_343_1:GetWordFromCfg(413161083)
				local var_346_12 = arg_343_1:FormatText(var_346_11.content)

				arg_343_1.text_.text = var_346_12

				LuaForUtil.ClearLinePrefixSymbol(arg_343_1.text_)

				local var_346_13 = 23
				local var_346_14 = utf8.len(var_346_12)
				local var_346_15 = var_346_13 <= 0 and var_346_9 or var_346_9 * (var_346_14 / var_346_13)

				if var_346_15 > 0 and var_346_9 < var_346_15 then
					arg_343_1.talkMaxDuration = var_346_15

					if var_346_15 + var_346_8 > arg_343_1.duration_ then
						arg_343_1.duration_ = var_346_15 + var_346_8
					end
				end

				arg_343_1.text_.text = var_346_12
				arg_343_1.typewritter.percent = 0

				arg_343_1.typewritter:SetDirty()
				arg_343_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161083", "story_v_out_413161.awb") ~= 0 then
					local var_346_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161083", "story_v_out_413161.awb") / 1000

					if var_346_16 + var_346_8 > arg_343_1.duration_ then
						arg_343_1.duration_ = var_346_16 + var_346_8
					end

					if var_346_11.prefab_name ~= "" and arg_343_1.actors_[var_346_11.prefab_name] ~= nil then
						local var_346_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_343_1.actors_[var_346_11.prefab_name].transform, "story_v_out_413161", "413161083", "story_v_out_413161.awb")

						arg_343_1:RecordAudio("413161083", var_346_17)
						arg_343_1:RecordAudio("413161083", var_346_17)
					else
						arg_343_1:AudioAction("play", "voice", "story_v_out_413161", "413161083", "story_v_out_413161.awb")
					end

					arg_343_1:RecordHistoryTalkVoice("story_v_out_413161", "413161083", "story_v_out_413161.awb")
				end

				arg_343_1:RecordContent(arg_343_1.text_.text)
			end

			local var_346_18 = math.max(var_346_9, arg_343_1.talkMaxDuration)

			if var_346_8 <= arg_343_1.time_ and arg_343_1.time_ < var_346_8 + var_346_18 then
				arg_343_1.typewritter.percent = (arg_343_1.time_ - var_346_8) / var_346_18

				arg_343_1.typewritter:SetDirty()
			end

			if arg_343_1.time_ >= var_346_8 + var_346_18 and arg_343_1.time_ < var_346_8 + var_346_18 + arg_346_0 then
				arg_343_1.typewritter.percent = 1

				arg_343_1.typewritter:SetDirty()
				arg_343_1:ShowNextGo(true)
			end
		end
	end,
	Play413161084 = function(arg_347_0, arg_347_1)
		arg_347_1.time_ = 0
		arg_347_1.frameCnt_ = 0
		arg_347_1.state_ = "playing"
		arg_347_1.curTalkId_ = 413161084
		arg_347_1.duration_ = 11.77

		local var_347_0 = {
			zh = 11.766,
			ja = 10.6
		}
		local var_347_1 = manager.audio:GetLocalizationFlag()

		if var_347_0[var_347_1] ~= nil then
			arg_347_1.duration_ = var_347_0[var_347_1]
		end

		SetActive(arg_347_1.tipsGo_, false)

		function arg_347_1.onSingleLineFinish_()
			arg_347_1.onSingleLineUpdate_ = nil
			arg_347_1.onSingleLineFinish_ = nil
			arg_347_1.state_ = "waiting"
		end

		function arg_347_1.playNext_(arg_349_0)
			if arg_349_0 == 1 then
				arg_347_0:Play413161085(arg_347_1)
			end
		end

		function arg_347_1.onSingleLineUpdate_(arg_350_0)
			local var_350_0 = 0
			local var_350_1 = 1.35

			if var_350_0 < arg_347_1.time_ and arg_347_1.time_ <= var_350_0 + arg_350_0 then
				arg_347_1.talkMaxDuration = 0
				arg_347_1.dialogCg_.alpha = 1

				arg_347_1.dialog_:SetActive(true)
				SetActive(arg_347_1.leftNameGo_, true)

				local var_350_2 = arg_347_1:FormatText(StoryNameCfg[998].name)

				arg_347_1.leftNameTxt_.text = var_350_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_347_1.leftNameTxt_.transform)

				arg_347_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_347_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_347_1:RecordName(arg_347_1.leftNameTxt_.text)
				SetActive(arg_347_1.iconTrs_.gameObject, true)
				arg_347_1.iconController_:SetSelectedState("hero")

				arg_347_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_347_1.callingController_:SetSelectedState("normal")

				arg_347_1.keyicon_.color = Color.New(1, 1, 1)
				arg_347_1.icon_.color = Color.New(1, 1, 1)

				local var_350_3 = arg_347_1:GetWordFromCfg(413161084)
				local var_350_4 = arg_347_1:FormatText(var_350_3.content)

				arg_347_1.text_.text = var_350_4

				LuaForUtil.ClearLinePrefixSymbol(arg_347_1.text_)

				local var_350_5 = 54
				local var_350_6 = utf8.len(var_350_4)
				local var_350_7 = var_350_5 <= 0 and var_350_1 or var_350_1 * (var_350_6 / var_350_5)

				if var_350_7 > 0 and var_350_1 < var_350_7 then
					arg_347_1.talkMaxDuration = var_350_7

					if var_350_7 + var_350_0 > arg_347_1.duration_ then
						arg_347_1.duration_ = var_350_7 + var_350_0
					end
				end

				arg_347_1.text_.text = var_350_4
				arg_347_1.typewritter.percent = 0

				arg_347_1.typewritter:SetDirty()
				arg_347_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161084", "story_v_out_413161.awb") ~= 0 then
					local var_350_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161084", "story_v_out_413161.awb") / 1000

					if var_350_8 + var_350_0 > arg_347_1.duration_ then
						arg_347_1.duration_ = var_350_8 + var_350_0
					end

					if var_350_3.prefab_name ~= "" and arg_347_1.actors_[var_350_3.prefab_name] ~= nil then
						local var_350_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_347_1.actors_[var_350_3.prefab_name].transform, "story_v_out_413161", "413161084", "story_v_out_413161.awb")

						arg_347_1:RecordAudio("413161084", var_350_9)
						arg_347_1:RecordAudio("413161084", var_350_9)
					else
						arg_347_1:AudioAction("play", "voice", "story_v_out_413161", "413161084", "story_v_out_413161.awb")
					end

					arg_347_1:RecordHistoryTalkVoice("story_v_out_413161", "413161084", "story_v_out_413161.awb")
				end

				arg_347_1:RecordContent(arg_347_1.text_.text)
			end

			local var_350_10 = math.max(var_350_1, arg_347_1.talkMaxDuration)

			if var_350_0 <= arg_347_1.time_ and arg_347_1.time_ < var_350_0 + var_350_10 then
				arg_347_1.typewritter.percent = (arg_347_1.time_ - var_350_0) / var_350_10

				arg_347_1.typewritter:SetDirty()
			end

			if arg_347_1.time_ >= var_350_0 + var_350_10 and arg_347_1.time_ < var_350_0 + var_350_10 + arg_350_0 then
				arg_347_1.typewritter.percent = 1

				arg_347_1.typewritter:SetDirty()
				arg_347_1:ShowNextGo(true)
			end
		end
	end,
	Play413161085 = function(arg_351_0, arg_351_1)
		arg_351_1.time_ = 0
		arg_351_1.frameCnt_ = 0
		arg_351_1.state_ = "playing"
		arg_351_1.curTalkId_ = 413161085
		arg_351_1.duration_ = 5.93

		local var_351_0 = {
			zh = 5.933,
			ja = 4.333
		}
		local var_351_1 = manager.audio:GetLocalizationFlag()

		if var_351_0[var_351_1] ~= nil then
			arg_351_1.duration_ = var_351_0[var_351_1]
		end

		SetActive(arg_351_1.tipsGo_, false)

		function arg_351_1.onSingleLineFinish_()
			arg_351_1.onSingleLineUpdate_ = nil
			arg_351_1.onSingleLineFinish_ = nil
			arg_351_1.state_ = "waiting"
		end

		function arg_351_1.playNext_(arg_353_0)
			if arg_353_0 == 1 then
				arg_351_0:Play413161086(arg_351_1)
			end
		end

		function arg_351_1.onSingleLineUpdate_(arg_354_0)
			local var_354_0 = 0
			local var_354_1 = 0.575

			if var_354_0 < arg_351_1.time_ and arg_351_1.time_ <= var_354_0 + arg_354_0 then
				arg_351_1.talkMaxDuration = 0
				arg_351_1.dialogCg_.alpha = 1

				arg_351_1.dialog_:SetActive(true)
				SetActive(arg_351_1.leftNameGo_, true)

				local var_354_2 = arg_351_1:FormatText(StoryNameCfg[998].name)

				arg_351_1.leftNameTxt_.text = var_354_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_351_1.leftNameTxt_.transform)

				arg_351_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_351_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_351_1:RecordName(arg_351_1.leftNameTxt_.text)
				SetActive(arg_351_1.iconTrs_.gameObject, true)
				arg_351_1.iconController_:SetSelectedState("hero")

				arg_351_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_351_1.callingController_:SetSelectedState("normal")

				arg_351_1.keyicon_.color = Color.New(1, 1, 1)
				arg_351_1.icon_.color = Color.New(1, 1, 1)

				local var_354_3 = arg_351_1:GetWordFromCfg(413161085)
				local var_354_4 = arg_351_1:FormatText(var_354_3.content)

				arg_351_1.text_.text = var_354_4

				LuaForUtil.ClearLinePrefixSymbol(arg_351_1.text_)

				local var_354_5 = 23
				local var_354_6 = utf8.len(var_354_4)
				local var_354_7 = var_354_5 <= 0 and var_354_1 or var_354_1 * (var_354_6 / var_354_5)

				if var_354_7 > 0 and var_354_1 < var_354_7 then
					arg_351_1.talkMaxDuration = var_354_7

					if var_354_7 + var_354_0 > arg_351_1.duration_ then
						arg_351_1.duration_ = var_354_7 + var_354_0
					end
				end

				arg_351_1.text_.text = var_354_4
				arg_351_1.typewritter.percent = 0

				arg_351_1.typewritter:SetDirty()
				arg_351_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161085", "story_v_out_413161.awb") ~= 0 then
					local var_354_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161085", "story_v_out_413161.awb") / 1000

					if var_354_8 + var_354_0 > arg_351_1.duration_ then
						arg_351_1.duration_ = var_354_8 + var_354_0
					end

					if var_354_3.prefab_name ~= "" and arg_351_1.actors_[var_354_3.prefab_name] ~= nil then
						local var_354_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_351_1.actors_[var_354_3.prefab_name].transform, "story_v_out_413161", "413161085", "story_v_out_413161.awb")

						arg_351_1:RecordAudio("413161085", var_354_9)
						arg_351_1:RecordAudio("413161085", var_354_9)
					else
						arg_351_1:AudioAction("play", "voice", "story_v_out_413161", "413161085", "story_v_out_413161.awb")
					end

					arg_351_1:RecordHistoryTalkVoice("story_v_out_413161", "413161085", "story_v_out_413161.awb")
				end

				arg_351_1:RecordContent(arg_351_1.text_.text)
			end

			local var_354_10 = math.max(var_354_1, arg_351_1.talkMaxDuration)

			if var_354_0 <= arg_351_1.time_ and arg_351_1.time_ < var_354_0 + var_354_10 then
				arg_351_1.typewritter.percent = (arg_351_1.time_ - var_354_0) / var_354_10

				arg_351_1.typewritter:SetDirty()
			end

			if arg_351_1.time_ >= var_354_0 + var_354_10 and arg_351_1.time_ < var_354_0 + var_354_10 + arg_354_0 then
				arg_351_1.typewritter.percent = 1

				arg_351_1.typewritter:SetDirty()
				arg_351_1:ShowNextGo(true)
			end
		end
	end,
	Play413161086 = function(arg_355_0, arg_355_1)
		arg_355_1.time_ = 0
		arg_355_1.frameCnt_ = 0
		arg_355_1.state_ = "playing"
		arg_355_1.curTalkId_ = 413161086
		arg_355_1.duration_ = 5

		SetActive(arg_355_1.tipsGo_, false)

		function arg_355_1.onSingleLineFinish_()
			arg_355_1.onSingleLineUpdate_ = nil
			arg_355_1.onSingleLineFinish_ = nil
			arg_355_1.state_ = "waiting"
		end

		function arg_355_1.playNext_(arg_357_0)
			if arg_357_0 == 1 then
				arg_355_0:Play413161087(arg_355_1)
			end
		end

		function arg_355_1.onSingleLineUpdate_(arg_358_0)
			local var_358_0 = arg_355_1.actors_["10022"].transform
			local var_358_1 = 0

			if var_358_1 < arg_355_1.time_ and arg_355_1.time_ <= var_358_1 + arg_358_0 then
				arg_355_1.var_.moveOldPos10022 = var_358_0.localPosition
				var_358_0.localScale = Vector3.New(1, 1, 1)

				arg_355_1:CheckSpriteTmpPos("10022", 7)

				local var_358_2 = var_358_0.childCount

				for iter_358_0 = 0, var_358_2 - 1 do
					local var_358_3 = var_358_0:GetChild(iter_358_0)

					if var_358_3.name == "split_3" or not string.find(var_358_3.name, "split") then
						var_358_3.gameObject:SetActive(true)
					else
						var_358_3.gameObject:SetActive(false)
					end
				end
			end

			local var_358_4 = 0.001

			if var_358_1 <= arg_355_1.time_ and arg_355_1.time_ < var_358_1 + var_358_4 then
				local var_358_5 = (arg_355_1.time_ - var_358_1) / var_358_4
				local var_358_6 = Vector3.New(0, -2000, 0)

				var_358_0.localPosition = Vector3.Lerp(arg_355_1.var_.moveOldPos10022, var_358_6, var_358_5)
			end

			if arg_355_1.time_ >= var_358_1 + var_358_4 and arg_355_1.time_ < var_358_1 + var_358_4 + arg_358_0 then
				var_358_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_358_7 = 0
			local var_358_8 = 0.7

			if var_358_7 < arg_355_1.time_ and arg_355_1.time_ <= var_358_7 + arg_358_0 then
				arg_355_1.talkMaxDuration = 0
				arg_355_1.dialogCg_.alpha = 1

				arg_355_1.dialog_:SetActive(true)
				SetActive(arg_355_1.leftNameGo_, false)

				arg_355_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_355_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_355_1:RecordName(arg_355_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_355_1.iconTrs_.gameObject, false)
				arg_355_1.callingController_:SetSelectedState("normal")

				local var_358_9 = arg_355_1:GetWordFromCfg(413161086)
				local var_358_10 = arg_355_1:FormatText(var_358_9.content)

				arg_355_1.text_.text = var_358_10

				LuaForUtil.ClearLinePrefixSymbol(arg_355_1.text_)

				local var_358_11 = 28
				local var_358_12 = utf8.len(var_358_10)
				local var_358_13 = var_358_11 <= 0 and var_358_8 or var_358_8 * (var_358_12 / var_358_11)

				if var_358_13 > 0 and var_358_8 < var_358_13 then
					arg_355_1.talkMaxDuration = var_358_13

					if var_358_13 + var_358_7 > arg_355_1.duration_ then
						arg_355_1.duration_ = var_358_13 + var_358_7
					end
				end

				arg_355_1.text_.text = var_358_10
				arg_355_1.typewritter.percent = 0

				arg_355_1.typewritter:SetDirty()
				arg_355_1:ShowNextGo(false)
				arg_355_1:RecordContent(arg_355_1.text_.text)
			end

			local var_358_14 = math.max(var_358_8, arg_355_1.talkMaxDuration)

			if var_358_7 <= arg_355_1.time_ and arg_355_1.time_ < var_358_7 + var_358_14 then
				arg_355_1.typewritter.percent = (arg_355_1.time_ - var_358_7) / var_358_14

				arg_355_1.typewritter:SetDirty()
			end

			if arg_355_1.time_ >= var_358_7 + var_358_14 and arg_355_1.time_ < var_358_7 + var_358_14 + arg_358_0 then
				arg_355_1.typewritter.percent = 1

				arg_355_1.typewritter:SetDirty()
				arg_355_1:ShowNextGo(true)
			end
		end
	end,
	Play413161087 = function(arg_359_0, arg_359_1)
		arg_359_1.time_ = 0
		arg_359_1.frameCnt_ = 0
		arg_359_1.state_ = "playing"
		arg_359_1.curTalkId_ = 413161087
		arg_359_1.duration_ = 3.9

		local var_359_0 = {
			zh = 1.999999999999,
			ja = 3.9
		}
		local var_359_1 = manager.audio:GetLocalizationFlag()

		if var_359_0[var_359_1] ~= nil then
			arg_359_1.duration_ = var_359_0[var_359_1]
		end

		SetActive(arg_359_1.tipsGo_, false)

		function arg_359_1.onSingleLineFinish_()
			arg_359_1.onSingleLineUpdate_ = nil
			arg_359_1.onSingleLineFinish_ = nil
			arg_359_1.state_ = "waiting"
		end

		function arg_359_1.playNext_(arg_361_0)
			if arg_361_0 == 1 then
				arg_359_0:Play413161088(arg_359_1)
			end
		end

		function arg_359_1.onSingleLineUpdate_(arg_362_0)
			local var_362_0 = arg_359_1.actors_["10022"].transform
			local var_362_1 = 0

			if var_362_1 < arg_359_1.time_ and arg_359_1.time_ <= var_362_1 + arg_362_0 then
				arg_359_1.var_.moveOldPos10022 = var_362_0.localPosition
				var_362_0.localScale = Vector3.New(1, 1, 1)

				arg_359_1:CheckSpriteTmpPos("10022", 3)

				local var_362_2 = var_362_0.childCount

				for iter_362_0 = 0, var_362_2 - 1 do
					local var_362_3 = var_362_0:GetChild(iter_362_0)

					if var_362_3.name == "split_6" or not string.find(var_362_3.name, "split") then
						var_362_3.gameObject:SetActive(true)
					else
						var_362_3.gameObject:SetActive(false)
					end
				end
			end

			local var_362_4 = 0.001

			if var_362_1 <= arg_359_1.time_ and arg_359_1.time_ < var_362_1 + var_362_4 then
				local var_362_5 = (arg_359_1.time_ - var_362_1) / var_362_4
				local var_362_6 = Vector3.New(0, -315, -320)

				var_362_0.localPosition = Vector3.Lerp(arg_359_1.var_.moveOldPos10022, var_362_6, var_362_5)
			end

			if arg_359_1.time_ >= var_362_1 + var_362_4 and arg_359_1.time_ < var_362_1 + var_362_4 + arg_362_0 then
				var_362_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_362_7 = arg_359_1.actors_["10022"]
			local var_362_8 = 0

			if var_362_8 < arg_359_1.time_ and arg_359_1.time_ <= var_362_8 + arg_362_0 and not isNil(var_362_7) and arg_359_1.var_.actorSpriteComps10022 == nil then
				arg_359_1.var_.actorSpriteComps10022 = var_362_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_362_9 = 2

			if var_362_8 <= arg_359_1.time_ and arg_359_1.time_ < var_362_8 + var_362_9 and not isNil(var_362_7) then
				local var_362_10 = (arg_359_1.time_ - var_362_8) / var_362_9

				if arg_359_1.var_.actorSpriteComps10022 then
					for iter_362_1, iter_362_2 in pairs(arg_359_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_362_2 then
							if arg_359_1.isInRecall_ then
								local var_362_11 = Mathf.Lerp(iter_362_2.color.r, arg_359_1.hightColor1.r, var_362_10)
								local var_362_12 = Mathf.Lerp(iter_362_2.color.g, arg_359_1.hightColor1.g, var_362_10)
								local var_362_13 = Mathf.Lerp(iter_362_2.color.b, arg_359_1.hightColor1.b, var_362_10)

								iter_362_2.color = Color.New(var_362_11, var_362_12, var_362_13)
							else
								local var_362_14 = Mathf.Lerp(iter_362_2.color.r, 1, var_362_10)

								iter_362_2.color = Color.New(var_362_14, var_362_14, var_362_14)
							end
						end
					end
				end
			end

			if arg_359_1.time_ >= var_362_8 + var_362_9 and arg_359_1.time_ < var_362_8 + var_362_9 + arg_362_0 and not isNil(var_362_7) and arg_359_1.var_.actorSpriteComps10022 then
				for iter_362_3, iter_362_4 in pairs(arg_359_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_362_4 then
						if arg_359_1.isInRecall_ then
							iter_362_4.color = arg_359_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_362_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_359_1.var_.actorSpriteComps10022 = nil
			end

			local var_362_15 = 0
			local var_362_16 = 0.225

			if var_362_15 < arg_359_1.time_ and arg_359_1.time_ <= var_362_15 + arg_362_0 then
				arg_359_1.talkMaxDuration = 0
				arg_359_1.dialogCg_.alpha = 1

				arg_359_1.dialog_:SetActive(true)
				SetActive(arg_359_1.leftNameGo_, true)

				local var_362_17 = arg_359_1:FormatText(StoryNameCfg[614].name)

				arg_359_1.leftNameTxt_.text = var_362_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_359_1.leftNameTxt_.transform)

				arg_359_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_359_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_359_1:RecordName(arg_359_1.leftNameTxt_.text)
				SetActive(arg_359_1.iconTrs_.gameObject, false)
				arg_359_1.callingController_:SetSelectedState("normal")

				local var_362_18 = arg_359_1:GetWordFromCfg(413161087)
				local var_362_19 = arg_359_1:FormatText(var_362_18.content)

				arg_359_1.text_.text = var_362_19

				LuaForUtil.ClearLinePrefixSymbol(arg_359_1.text_)

				local var_362_20 = 9
				local var_362_21 = utf8.len(var_362_19)
				local var_362_22 = var_362_20 <= 0 and var_362_16 or var_362_16 * (var_362_21 / var_362_20)

				if var_362_22 > 0 and var_362_16 < var_362_22 then
					arg_359_1.talkMaxDuration = var_362_22

					if var_362_22 + var_362_15 > arg_359_1.duration_ then
						arg_359_1.duration_ = var_362_22 + var_362_15
					end
				end

				arg_359_1.text_.text = var_362_19
				arg_359_1.typewritter.percent = 0

				arg_359_1.typewritter:SetDirty()
				arg_359_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161087", "story_v_out_413161.awb") ~= 0 then
					local var_362_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161087", "story_v_out_413161.awb") / 1000

					if var_362_23 + var_362_15 > arg_359_1.duration_ then
						arg_359_1.duration_ = var_362_23 + var_362_15
					end

					if var_362_18.prefab_name ~= "" and arg_359_1.actors_[var_362_18.prefab_name] ~= nil then
						local var_362_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_359_1.actors_[var_362_18.prefab_name].transform, "story_v_out_413161", "413161087", "story_v_out_413161.awb")

						arg_359_1:RecordAudio("413161087", var_362_24)
						arg_359_1:RecordAudio("413161087", var_362_24)
					else
						arg_359_1:AudioAction("play", "voice", "story_v_out_413161", "413161087", "story_v_out_413161.awb")
					end

					arg_359_1:RecordHistoryTalkVoice("story_v_out_413161", "413161087", "story_v_out_413161.awb")
				end

				arg_359_1:RecordContent(arg_359_1.text_.text)
			end

			local var_362_25 = math.max(var_362_16, arg_359_1.talkMaxDuration)

			if var_362_15 <= arg_359_1.time_ and arg_359_1.time_ < var_362_15 + var_362_25 then
				arg_359_1.typewritter.percent = (arg_359_1.time_ - var_362_15) / var_362_25

				arg_359_1.typewritter:SetDirty()
			end

			if arg_359_1.time_ >= var_362_15 + var_362_25 and arg_359_1.time_ < var_362_15 + var_362_25 + arg_362_0 then
				arg_359_1.typewritter.percent = 1

				arg_359_1.typewritter:SetDirty()
				arg_359_1:ShowNextGo(true)
			end
		end
	end,
	Play413161088 = function(arg_363_0, arg_363_1)
		arg_363_1.time_ = 0
		arg_363_1.frameCnt_ = 0
		arg_363_1.state_ = "playing"
		arg_363_1.curTalkId_ = 413161088
		arg_363_1.duration_ = 5

		SetActive(arg_363_1.tipsGo_, false)

		function arg_363_1.onSingleLineFinish_()
			arg_363_1.onSingleLineUpdate_ = nil
			arg_363_1.onSingleLineFinish_ = nil
			arg_363_1.state_ = "waiting"
		end

		function arg_363_1.playNext_(arg_365_0)
			if arg_365_0 == 1 then
				arg_363_0:Play413161089(arg_363_1)
			end
		end

		function arg_363_1.onSingleLineUpdate_(arg_366_0)
			local var_366_0 = arg_363_1.actors_["10022"]
			local var_366_1 = 0

			if var_366_1 < arg_363_1.time_ and arg_363_1.time_ <= var_366_1 + arg_366_0 and not isNil(var_366_0) and arg_363_1.var_.actorSpriteComps10022 == nil then
				arg_363_1.var_.actorSpriteComps10022 = var_366_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_366_2 = 2

			if var_366_1 <= arg_363_1.time_ and arg_363_1.time_ < var_366_1 + var_366_2 and not isNil(var_366_0) then
				local var_366_3 = (arg_363_1.time_ - var_366_1) / var_366_2

				if arg_363_1.var_.actorSpriteComps10022 then
					for iter_366_0, iter_366_1 in pairs(arg_363_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_366_1 then
							if arg_363_1.isInRecall_ then
								local var_366_4 = Mathf.Lerp(iter_366_1.color.r, arg_363_1.hightColor2.r, var_366_3)
								local var_366_5 = Mathf.Lerp(iter_366_1.color.g, arg_363_1.hightColor2.g, var_366_3)
								local var_366_6 = Mathf.Lerp(iter_366_1.color.b, arg_363_1.hightColor2.b, var_366_3)

								iter_366_1.color = Color.New(var_366_4, var_366_5, var_366_6)
							else
								local var_366_7 = Mathf.Lerp(iter_366_1.color.r, 0.5, var_366_3)

								iter_366_1.color = Color.New(var_366_7, var_366_7, var_366_7)
							end
						end
					end
				end
			end

			if arg_363_1.time_ >= var_366_1 + var_366_2 and arg_363_1.time_ < var_366_1 + var_366_2 + arg_366_0 and not isNil(var_366_0) and arg_363_1.var_.actorSpriteComps10022 then
				for iter_366_2, iter_366_3 in pairs(arg_363_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_366_3 then
						if arg_363_1.isInRecall_ then
							iter_366_3.color = arg_363_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_366_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_363_1.var_.actorSpriteComps10022 = nil
			end

			local var_366_8 = 0
			local var_366_9 = 0.775

			if var_366_8 < arg_363_1.time_ and arg_363_1.time_ <= var_366_8 + arg_366_0 then
				arg_363_1.talkMaxDuration = 0
				arg_363_1.dialogCg_.alpha = 1

				arg_363_1.dialog_:SetActive(true)
				SetActive(arg_363_1.leftNameGo_, false)

				arg_363_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_363_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_363_1:RecordName(arg_363_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_363_1.iconTrs_.gameObject, false)
				arg_363_1.callingController_:SetSelectedState("normal")

				local var_366_10 = arg_363_1:GetWordFromCfg(413161088)
				local var_366_11 = arg_363_1:FormatText(var_366_10.content)

				arg_363_1.text_.text = var_366_11

				LuaForUtil.ClearLinePrefixSymbol(arg_363_1.text_)

				local var_366_12 = 31
				local var_366_13 = utf8.len(var_366_11)
				local var_366_14 = var_366_12 <= 0 and var_366_9 or var_366_9 * (var_366_13 / var_366_12)

				if var_366_14 > 0 and var_366_9 < var_366_14 then
					arg_363_1.talkMaxDuration = var_366_14

					if var_366_14 + var_366_8 > arg_363_1.duration_ then
						arg_363_1.duration_ = var_366_14 + var_366_8
					end
				end

				arg_363_1.text_.text = var_366_11
				arg_363_1.typewritter.percent = 0

				arg_363_1.typewritter:SetDirty()
				arg_363_1:ShowNextGo(false)
				arg_363_1:RecordContent(arg_363_1.text_.text)
			end

			local var_366_15 = math.max(var_366_9, arg_363_1.talkMaxDuration)

			if var_366_8 <= arg_363_1.time_ and arg_363_1.time_ < var_366_8 + var_366_15 then
				arg_363_1.typewritter.percent = (arg_363_1.time_ - var_366_8) / var_366_15

				arg_363_1.typewritter:SetDirty()
			end

			if arg_363_1.time_ >= var_366_8 + var_366_15 and arg_363_1.time_ < var_366_8 + var_366_15 + arg_366_0 then
				arg_363_1.typewritter.percent = 1

				arg_363_1.typewritter:SetDirty()
				arg_363_1:ShowNextGo(true)
			end
		end
	end,
	Play413161089 = function(arg_367_0, arg_367_1)
		arg_367_1.time_ = 0
		arg_367_1.frameCnt_ = 0
		arg_367_1.state_ = "playing"
		arg_367_1.curTalkId_ = 413161089
		arg_367_1.duration_ = 4.6

		local var_367_0 = {
			zh = 4.166,
			ja = 4.6
		}
		local var_367_1 = manager.audio:GetLocalizationFlag()

		if var_367_0[var_367_1] ~= nil then
			arg_367_1.duration_ = var_367_0[var_367_1]
		end

		SetActive(arg_367_1.tipsGo_, false)

		function arg_367_1.onSingleLineFinish_()
			arg_367_1.onSingleLineUpdate_ = nil
			arg_367_1.onSingleLineFinish_ = nil
			arg_367_1.state_ = "waiting"
		end

		function arg_367_1.playNext_(arg_369_0)
			if arg_369_0 == 1 then
				arg_367_0:Play413161090(arg_367_1)
			end
		end

		function arg_367_1.onSingleLineUpdate_(arg_370_0)
			local var_370_0 = arg_367_1.actors_["10022"]
			local var_370_1 = 0

			if var_370_1 < arg_367_1.time_ and arg_367_1.time_ <= var_370_1 + arg_370_0 and not isNil(var_370_0) and arg_367_1.var_.actorSpriteComps10022 == nil then
				arg_367_1.var_.actorSpriteComps10022 = var_370_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_370_2 = 2

			if var_370_1 <= arg_367_1.time_ and arg_367_1.time_ < var_370_1 + var_370_2 and not isNil(var_370_0) then
				local var_370_3 = (arg_367_1.time_ - var_370_1) / var_370_2

				if arg_367_1.var_.actorSpriteComps10022 then
					for iter_370_0, iter_370_1 in pairs(arg_367_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_370_1 then
							if arg_367_1.isInRecall_ then
								local var_370_4 = Mathf.Lerp(iter_370_1.color.r, arg_367_1.hightColor1.r, var_370_3)
								local var_370_5 = Mathf.Lerp(iter_370_1.color.g, arg_367_1.hightColor1.g, var_370_3)
								local var_370_6 = Mathf.Lerp(iter_370_1.color.b, arg_367_1.hightColor1.b, var_370_3)

								iter_370_1.color = Color.New(var_370_4, var_370_5, var_370_6)
							else
								local var_370_7 = Mathf.Lerp(iter_370_1.color.r, 1, var_370_3)

								iter_370_1.color = Color.New(var_370_7, var_370_7, var_370_7)
							end
						end
					end
				end
			end

			if arg_367_1.time_ >= var_370_1 + var_370_2 and arg_367_1.time_ < var_370_1 + var_370_2 + arg_370_0 and not isNil(var_370_0) and arg_367_1.var_.actorSpriteComps10022 then
				for iter_370_2, iter_370_3 in pairs(arg_367_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_370_3 then
						if arg_367_1.isInRecall_ then
							iter_370_3.color = arg_367_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_370_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_367_1.var_.actorSpriteComps10022 = nil
			end

			local var_370_8 = 0
			local var_370_9 = 0.525

			if var_370_8 < arg_367_1.time_ and arg_367_1.time_ <= var_370_8 + arg_370_0 then
				arg_367_1.talkMaxDuration = 0
				arg_367_1.dialogCg_.alpha = 1

				arg_367_1.dialog_:SetActive(true)
				SetActive(arg_367_1.leftNameGo_, true)

				local var_370_10 = arg_367_1:FormatText(StoryNameCfg[614].name)

				arg_367_1.leftNameTxt_.text = var_370_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_367_1.leftNameTxt_.transform)

				arg_367_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_367_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_367_1:RecordName(arg_367_1.leftNameTxt_.text)
				SetActive(arg_367_1.iconTrs_.gameObject, false)
				arg_367_1.callingController_:SetSelectedState("normal")

				local var_370_11 = arg_367_1:GetWordFromCfg(413161089)
				local var_370_12 = arg_367_1:FormatText(var_370_11.content)

				arg_367_1.text_.text = var_370_12

				LuaForUtil.ClearLinePrefixSymbol(arg_367_1.text_)

				local var_370_13 = 21
				local var_370_14 = utf8.len(var_370_12)
				local var_370_15 = var_370_13 <= 0 and var_370_9 or var_370_9 * (var_370_14 / var_370_13)

				if var_370_15 > 0 and var_370_9 < var_370_15 then
					arg_367_1.talkMaxDuration = var_370_15

					if var_370_15 + var_370_8 > arg_367_1.duration_ then
						arg_367_1.duration_ = var_370_15 + var_370_8
					end
				end

				arg_367_1.text_.text = var_370_12
				arg_367_1.typewritter.percent = 0

				arg_367_1.typewritter:SetDirty()
				arg_367_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161089", "story_v_out_413161.awb") ~= 0 then
					local var_370_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161089", "story_v_out_413161.awb") / 1000

					if var_370_16 + var_370_8 > arg_367_1.duration_ then
						arg_367_1.duration_ = var_370_16 + var_370_8
					end

					if var_370_11.prefab_name ~= "" and arg_367_1.actors_[var_370_11.prefab_name] ~= nil then
						local var_370_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_367_1.actors_[var_370_11.prefab_name].transform, "story_v_out_413161", "413161089", "story_v_out_413161.awb")

						arg_367_1:RecordAudio("413161089", var_370_17)
						arg_367_1:RecordAudio("413161089", var_370_17)
					else
						arg_367_1:AudioAction("play", "voice", "story_v_out_413161", "413161089", "story_v_out_413161.awb")
					end

					arg_367_1:RecordHistoryTalkVoice("story_v_out_413161", "413161089", "story_v_out_413161.awb")
				end

				arg_367_1:RecordContent(arg_367_1.text_.text)
			end

			local var_370_18 = math.max(var_370_9, arg_367_1.talkMaxDuration)

			if var_370_8 <= arg_367_1.time_ and arg_367_1.time_ < var_370_8 + var_370_18 then
				arg_367_1.typewritter.percent = (arg_367_1.time_ - var_370_8) / var_370_18

				arg_367_1.typewritter:SetDirty()
			end

			if arg_367_1.time_ >= var_370_8 + var_370_18 and arg_367_1.time_ < var_370_8 + var_370_18 + arg_370_0 then
				arg_367_1.typewritter.percent = 1

				arg_367_1.typewritter:SetDirty()
				arg_367_1:ShowNextGo(true)
			end
		end
	end,
	Play413161090 = function(arg_371_0, arg_371_1)
		arg_371_1.time_ = 0
		arg_371_1.frameCnt_ = 0
		arg_371_1.state_ = "playing"
		arg_371_1.curTalkId_ = 413161090
		arg_371_1.duration_ = 12.17

		local var_371_0 = {
			zh = 6.466,
			ja = 12.166
		}
		local var_371_1 = manager.audio:GetLocalizationFlag()

		if var_371_0[var_371_1] ~= nil then
			arg_371_1.duration_ = var_371_0[var_371_1]
		end

		SetActive(arg_371_1.tipsGo_, false)

		function arg_371_1.onSingleLineFinish_()
			arg_371_1.onSingleLineUpdate_ = nil
			arg_371_1.onSingleLineFinish_ = nil
			arg_371_1.state_ = "waiting"
		end

		function arg_371_1.playNext_(arg_373_0)
			if arg_373_0 == 1 then
				arg_371_0:Play413161091(arg_371_1)
			end
		end

		function arg_371_1.onSingleLineUpdate_(arg_374_0)
			local var_374_0 = arg_371_1.actors_["10022"]
			local var_374_1 = 0

			if var_374_1 < arg_371_1.time_ and arg_371_1.time_ <= var_374_1 + arg_374_0 and not isNil(var_374_0) and arg_371_1.var_.actorSpriteComps10022 == nil then
				arg_371_1.var_.actorSpriteComps10022 = var_374_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_374_2 = 2

			if var_374_1 <= arg_371_1.time_ and arg_371_1.time_ < var_374_1 + var_374_2 and not isNil(var_374_0) then
				local var_374_3 = (arg_371_1.time_ - var_374_1) / var_374_2

				if arg_371_1.var_.actorSpriteComps10022 then
					for iter_374_0, iter_374_1 in pairs(arg_371_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_374_1 then
							if arg_371_1.isInRecall_ then
								local var_374_4 = Mathf.Lerp(iter_374_1.color.r, arg_371_1.hightColor2.r, var_374_3)
								local var_374_5 = Mathf.Lerp(iter_374_1.color.g, arg_371_1.hightColor2.g, var_374_3)
								local var_374_6 = Mathf.Lerp(iter_374_1.color.b, arg_371_1.hightColor2.b, var_374_3)

								iter_374_1.color = Color.New(var_374_4, var_374_5, var_374_6)
							else
								local var_374_7 = Mathf.Lerp(iter_374_1.color.r, 0.5, var_374_3)

								iter_374_1.color = Color.New(var_374_7, var_374_7, var_374_7)
							end
						end
					end
				end
			end

			if arg_371_1.time_ >= var_374_1 + var_374_2 and arg_371_1.time_ < var_374_1 + var_374_2 + arg_374_0 and not isNil(var_374_0) and arg_371_1.var_.actorSpriteComps10022 then
				for iter_374_2, iter_374_3 in pairs(arg_371_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_374_3 then
						if arg_371_1.isInRecall_ then
							iter_374_3.color = arg_371_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_374_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_371_1.var_.actorSpriteComps10022 = nil
			end

			local var_374_8 = 0
			local var_374_9 = 0.7

			if var_374_8 < arg_371_1.time_ and arg_371_1.time_ <= var_374_8 + arg_374_0 then
				arg_371_1.talkMaxDuration = 0
				arg_371_1.dialogCg_.alpha = 1

				arg_371_1.dialog_:SetActive(true)
				SetActive(arg_371_1.leftNameGo_, true)

				local var_374_10 = arg_371_1:FormatText(StoryNameCfg[998].name)

				arg_371_1.leftNameTxt_.text = var_374_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_371_1.leftNameTxt_.transform)

				arg_371_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_371_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_371_1:RecordName(arg_371_1.leftNameTxt_.text)
				SetActive(arg_371_1.iconTrs_.gameObject, true)
				arg_371_1.iconController_:SetSelectedState("hero")

				arg_371_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_371_1.callingController_:SetSelectedState("normal")

				arg_371_1.keyicon_.color = Color.New(1, 1, 1)
				arg_371_1.icon_.color = Color.New(1, 1, 1)

				local var_374_11 = arg_371_1:GetWordFromCfg(413161090)
				local var_374_12 = arg_371_1:FormatText(var_374_11.content)

				arg_371_1.text_.text = var_374_12

				LuaForUtil.ClearLinePrefixSymbol(arg_371_1.text_)

				local var_374_13 = 28
				local var_374_14 = utf8.len(var_374_12)
				local var_374_15 = var_374_13 <= 0 and var_374_9 or var_374_9 * (var_374_14 / var_374_13)

				if var_374_15 > 0 and var_374_9 < var_374_15 then
					arg_371_1.talkMaxDuration = var_374_15

					if var_374_15 + var_374_8 > arg_371_1.duration_ then
						arg_371_1.duration_ = var_374_15 + var_374_8
					end
				end

				arg_371_1.text_.text = var_374_12
				arg_371_1.typewritter.percent = 0

				arg_371_1.typewritter:SetDirty()
				arg_371_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161090", "story_v_out_413161.awb") ~= 0 then
					local var_374_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161090", "story_v_out_413161.awb") / 1000

					if var_374_16 + var_374_8 > arg_371_1.duration_ then
						arg_371_1.duration_ = var_374_16 + var_374_8
					end

					if var_374_11.prefab_name ~= "" and arg_371_1.actors_[var_374_11.prefab_name] ~= nil then
						local var_374_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_371_1.actors_[var_374_11.prefab_name].transform, "story_v_out_413161", "413161090", "story_v_out_413161.awb")

						arg_371_1:RecordAudio("413161090", var_374_17)
						arg_371_1:RecordAudio("413161090", var_374_17)
					else
						arg_371_1:AudioAction("play", "voice", "story_v_out_413161", "413161090", "story_v_out_413161.awb")
					end

					arg_371_1:RecordHistoryTalkVoice("story_v_out_413161", "413161090", "story_v_out_413161.awb")
				end

				arg_371_1:RecordContent(arg_371_1.text_.text)
			end

			local var_374_18 = math.max(var_374_9, arg_371_1.talkMaxDuration)

			if var_374_8 <= arg_371_1.time_ and arg_371_1.time_ < var_374_8 + var_374_18 then
				arg_371_1.typewritter.percent = (arg_371_1.time_ - var_374_8) / var_374_18

				arg_371_1.typewritter:SetDirty()
			end

			if arg_371_1.time_ >= var_374_8 + var_374_18 and arg_371_1.time_ < var_374_8 + var_374_18 + arg_374_0 then
				arg_371_1.typewritter.percent = 1

				arg_371_1.typewritter:SetDirty()
				arg_371_1:ShowNextGo(true)
			end
		end
	end,
	Play413161091 = function(arg_375_0, arg_375_1)
		arg_375_1.time_ = 0
		arg_375_1.frameCnt_ = 0
		arg_375_1.state_ = "playing"
		arg_375_1.curTalkId_ = 413161091
		arg_375_1.duration_ = 9.33

		local var_375_0 = {
			zh = 5.9,
			ja = 9.333
		}
		local var_375_1 = manager.audio:GetLocalizationFlag()

		if var_375_0[var_375_1] ~= nil then
			arg_375_1.duration_ = var_375_0[var_375_1]
		end

		SetActive(arg_375_1.tipsGo_, false)

		function arg_375_1.onSingleLineFinish_()
			arg_375_1.onSingleLineUpdate_ = nil
			arg_375_1.onSingleLineFinish_ = nil
			arg_375_1.state_ = "waiting"
		end

		function arg_375_1.playNext_(arg_377_0)
			if arg_377_0 == 1 then
				arg_375_0:Play413161092(arg_375_1)
			end
		end

		function arg_375_1.onSingleLineUpdate_(arg_378_0)
			local var_378_0 = arg_375_1.actors_["10022"]
			local var_378_1 = 0

			if var_378_1 < arg_375_1.time_ and arg_375_1.time_ <= var_378_1 + arg_378_0 and not isNil(var_378_0) and arg_375_1.var_.actorSpriteComps10022 == nil then
				arg_375_1.var_.actorSpriteComps10022 = var_378_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_378_2 = 2

			if var_378_1 <= arg_375_1.time_ and arg_375_1.time_ < var_378_1 + var_378_2 and not isNil(var_378_0) then
				local var_378_3 = (arg_375_1.time_ - var_378_1) / var_378_2

				if arg_375_1.var_.actorSpriteComps10022 then
					for iter_378_0, iter_378_1 in pairs(arg_375_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_378_1 then
							if arg_375_1.isInRecall_ then
								local var_378_4 = Mathf.Lerp(iter_378_1.color.r, arg_375_1.hightColor1.r, var_378_3)
								local var_378_5 = Mathf.Lerp(iter_378_1.color.g, arg_375_1.hightColor1.g, var_378_3)
								local var_378_6 = Mathf.Lerp(iter_378_1.color.b, arg_375_1.hightColor1.b, var_378_3)

								iter_378_1.color = Color.New(var_378_4, var_378_5, var_378_6)
							else
								local var_378_7 = Mathf.Lerp(iter_378_1.color.r, 1, var_378_3)

								iter_378_1.color = Color.New(var_378_7, var_378_7, var_378_7)
							end
						end
					end
				end
			end

			if arg_375_1.time_ >= var_378_1 + var_378_2 and arg_375_1.time_ < var_378_1 + var_378_2 + arg_378_0 and not isNil(var_378_0) and arg_375_1.var_.actorSpriteComps10022 then
				for iter_378_2, iter_378_3 in pairs(arg_375_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_378_3 then
						if arg_375_1.isInRecall_ then
							iter_378_3.color = arg_375_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_378_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_375_1.var_.actorSpriteComps10022 = nil
			end

			local var_378_8 = 0
			local var_378_9 = 0.725

			if var_378_8 < arg_375_1.time_ and arg_375_1.time_ <= var_378_8 + arg_378_0 then
				arg_375_1.talkMaxDuration = 0
				arg_375_1.dialogCg_.alpha = 1

				arg_375_1.dialog_:SetActive(true)
				SetActive(arg_375_1.leftNameGo_, true)

				local var_378_10 = arg_375_1:FormatText(StoryNameCfg[614].name)

				arg_375_1.leftNameTxt_.text = var_378_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_375_1.leftNameTxt_.transform)

				arg_375_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_375_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_375_1:RecordName(arg_375_1.leftNameTxt_.text)
				SetActive(arg_375_1.iconTrs_.gameObject, false)
				arg_375_1.callingController_:SetSelectedState("normal")

				local var_378_11 = arg_375_1:GetWordFromCfg(413161091)
				local var_378_12 = arg_375_1:FormatText(var_378_11.content)

				arg_375_1.text_.text = var_378_12

				LuaForUtil.ClearLinePrefixSymbol(arg_375_1.text_)

				local var_378_13 = 29
				local var_378_14 = utf8.len(var_378_12)
				local var_378_15 = var_378_13 <= 0 and var_378_9 or var_378_9 * (var_378_14 / var_378_13)

				if var_378_15 > 0 and var_378_9 < var_378_15 then
					arg_375_1.talkMaxDuration = var_378_15

					if var_378_15 + var_378_8 > arg_375_1.duration_ then
						arg_375_1.duration_ = var_378_15 + var_378_8
					end
				end

				arg_375_1.text_.text = var_378_12
				arg_375_1.typewritter.percent = 0

				arg_375_1.typewritter:SetDirty()
				arg_375_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161091", "story_v_out_413161.awb") ~= 0 then
					local var_378_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161091", "story_v_out_413161.awb") / 1000

					if var_378_16 + var_378_8 > arg_375_1.duration_ then
						arg_375_1.duration_ = var_378_16 + var_378_8
					end

					if var_378_11.prefab_name ~= "" and arg_375_1.actors_[var_378_11.prefab_name] ~= nil then
						local var_378_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_375_1.actors_[var_378_11.prefab_name].transform, "story_v_out_413161", "413161091", "story_v_out_413161.awb")

						arg_375_1:RecordAudio("413161091", var_378_17)
						arg_375_1:RecordAudio("413161091", var_378_17)
					else
						arg_375_1:AudioAction("play", "voice", "story_v_out_413161", "413161091", "story_v_out_413161.awb")
					end

					arg_375_1:RecordHistoryTalkVoice("story_v_out_413161", "413161091", "story_v_out_413161.awb")
				end

				arg_375_1:RecordContent(arg_375_1.text_.text)
			end

			local var_378_18 = math.max(var_378_9, arg_375_1.talkMaxDuration)

			if var_378_8 <= arg_375_1.time_ and arg_375_1.time_ < var_378_8 + var_378_18 then
				arg_375_1.typewritter.percent = (arg_375_1.time_ - var_378_8) / var_378_18

				arg_375_1.typewritter:SetDirty()
			end

			if arg_375_1.time_ >= var_378_8 + var_378_18 and arg_375_1.time_ < var_378_8 + var_378_18 + arg_378_0 then
				arg_375_1.typewritter.percent = 1

				arg_375_1.typewritter:SetDirty()
				arg_375_1:ShowNextGo(true)
			end
		end
	end,
	Play413161092 = function(arg_379_0, arg_379_1)
		arg_379_1.time_ = 0
		arg_379_1.frameCnt_ = 0
		arg_379_1.state_ = "playing"
		arg_379_1.curTalkId_ = 413161092
		arg_379_1.duration_ = 5

		SetActive(arg_379_1.tipsGo_, false)

		function arg_379_1.onSingleLineFinish_()
			arg_379_1.onSingleLineUpdate_ = nil
			arg_379_1.onSingleLineFinish_ = nil
			arg_379_1.state_ = "waiting"
		end

		function arg_379_1.playNext_(arg_381_0)
			if arg_381_0 == 1 then
				arg_379_0:Play413161093(arg_379_1)
			end
		end

		function arg_379_1.onSingleLineUpdate_(arg_382_0)
			local var_382_0 = arg_379_1.actors_["10022"]
			local var_382_1 = 0

			if var_382_1 < arg_379_1.time_ and arg_379_1.time_ <= var_382_1 + arg_382_0 and not isNil(var_382_0) and arg_379_1.var_.actorSpriteComps10022 == nil then
				arg_379_1.var_.actorSpriteComps10022 = var_382_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_382_2 = 2

			if var_382_1 <= arg_379_1.time_ and arg_379_1.time_ < var_382_1 + var_382_2 and not isNil(var_382_0) then
				local var_382_3 = (arg_379_1.time_ - var_382_1) / var_382_2

				if arg_379_1.var_.actorSpriteComps10022 then
					for iter_382_0, iter_382_1 in pairs(arg_379_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_382_1 then
							if arg_379_1.isInRecall_ then
								local var_382_4 = Mathf.Lerp(iter_382_1.color.r, arg_379_1.hightColor2.r, var_382_3)
								local var_382_5 = Mathf.Lerp(iter_382_1.color.g, arg_379_1.hightColor2.g, var_382_3)
								local var_382_6 = Mathf.Lerp(iter_382_1.color.b, arg_379_1.hightColor2.b, var_382_3)

								iter_382_1.color = Color.New(var_382_4, var_382_5, var_382_6)
							else
								local var_382_7 = Mathf.Lerp(iter_382_1.color.r, 0.5, var_382_3)

								iter_382_1.color = Color.New(var_382_7, var_382_7, var_382_7)
							end
						end
					end
				end
			end

			if arg_379_1.time_ >= var_382_1 + var_382_2 and arg_379_1.time_ < var_382_1 + var_382_2 + arg_382_0 and not isNil(var_382_0) and arg_379_1.var_.actorSpriteComps10022 then
				for iter_382_2, iter_382_3 in pairs(arg_379_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_382_3 then
						if arg_379_1.isInRecall_ then
							iter_382_3.color = arg_379_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_382_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_379_1.var_.actorSpriteComps10022 = nil
			end

			local var_382_8 = 0
			local var_382_9 = 1

			if var_382_8 < arg_379_1.time_ and arg_379_1.time_ <= var_382_8 + arg_382_0 then
				arg_379_1.talkMaxDuration = 0
				arg_379_1.dialogCg_.alpha = 1

				arg_379_1.dialog_:SetActive(true)
				SetActive(arg_379_1.leftNameGo_, false)

				arg_379_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_379_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_379_1:RecordName(arg_379_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_379_1.iconTrs_.gameObject, false)
				arg_379_1.callingController_:SetSelectedState("normal")

				local var_382_10 = arg_379_1:GetWordFromCfg(413161092)
				local var_382_11 = arg_379_1:FormatText(var_382_10.content)

				arg_379_1.text_.text = var_382_11

				LuaForUtil.ClearLinePrefixSymbol(arg_379_1.text_)

				local var_382_12 = 40
				local var_382_13 = utf8.len(var_382_11)
				local var_382_14 = var_382_12 <= 0 and var_382_9 or var_382_9 * (var_382_13 / var_382_12)

				if var_382_14 > 0 and var_382_9 < var_382_14 then
					arg_379_1.talkMaxDuration = var_382_14

					if var_382_14 + var_382_8 > arg_379_1.duration_ then
						arg_379_1.duration_ = var_382_14 + var_382_8
					end
				end

				arg_379_1.text_.text = var_382_11
				arg_379_1.typewritter.percent = 0

				arg_379_1.typewritter:SetDirty()
				arg_379_1:ShowNextGo(false)
				arg_379_1:RecordContent(arg_379_1.text_.text)
			end

			local var_382_15 = math.max(var_382_9, arg_379_1.talkMaxDuration)

			if var_382_8 <= arg_379_1.time_ and arg_379_1.time_ < var_382_8 + var_382_15 then
				arg_379_1.typewritter.percent = (arg_379_1.time_ - var_382_8) / var_382_15

				arg_379_1.typewritter:SetDirty()
			end

			if arg_379_1.time_ >= var_382_8 + var_382_15 and arg_379_1.time_ < var_382_8 + var_382_15 + arg_382_0 then
				arg_379_1.typewritter.percent = 1

				arg_379_1.typewritter:SetDirty()
				arg_379_1:ShowNextGo(true)
			end
		end
	end,
	Play413161093 = function(arg_383_0, arg_383_1)
		arg_383_1.time_ = 0
		arg_383_1.frameCnt_ = 0
		arg_383_1.state_ = "playing"
		arg_383_1.curTalkId_ = 413161093
		arg_383_1.duration_ = 7.43

		local var_383_0 = {
			zh = 5.266,
			ja = 7.433
		}
		local var_383_1 = manager.audio:GetLocalizationFlag()

		if var_383_0[var_383_1] ~= nil then
			arg_383_1.duration_ = var_383_0[var_383_1]
		end

		SetActive(arg_383_1.tipsGo_, false)

		function arg_383_1.onSingleLineFinish_()
			arg_383_1.onSingleLineUpdate_ = nil
			arg_383_1.onSingleLineFinish_ = nil
			arg_383_1.state_ = "waiting"
		end

		function arg_383_1.playNext_(arg_385_0)
			if arg_385_0 == 1 then
				arg_383_0:Play413161094(arg_383_1)
			end
		end

		function arg_383_1.onSingleLineUpdate_(arg_386_0)
			local var_386_0 = arg_383_1.actors_["10022"].transform
			local var_386_1 = 0

			if var_386_1 < arg_383_1.time_ and arg_383_1.time_ <= var_386_1 + arg_386_0 then
				arg_383_1.var_.moveOldPos10022 = var_386_0.localPosition
				var_386_0.localScale = Vector3.New(1, 1, 1)

				arg_383_1:CheckSpriteTmpPos("10022", 3)

				local var_386_2 = var_386_0.childCount

				for iter_386_0 = 0, var_386_2 - 1 do
					local var_386_3 = var_386_0:GetChild(iter_386_0)

					if var_386_3.name == "split_1" or not string.find(var_386_3.name, "split") then
						var_386_3.gameObject:SetActive(true)
					else
						var_386_3.gameObject:SetActive(false)
					end
				end
			end

			local var_386_4 = 0.001

			if var_386_1 <= arg_383_1.time_ and arg_383_1.time_ < var_386_1 + var_386_4 then
				local var_386_5 = (arg_383_1.time_ - var_386_1) / var_386_4
				local var_386_6 = Vector3.New(0, -315, -320)

				var_386_0.localPosition = Vector3.Lerp(arg_383_1.var_.moveOldPos10022, var_386_6, var_386_5)
			end

			if arg_383_1.time_ >= var_386_1 + var_386_4 and arg_383_1.time_ < var_386_1 + var_386_4 + arg_386_0 then
				var_386_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_386_7 = arg_383_1.actors_["10022"]
			local var_386_8 = 0

			if var_386_8 < arg_383_1.time_ and arg_383_1.time_ <= var_386_8 + arg_386_0 and not isNil(var_386_7) and arg_383_1.var_.actorSpriteComps10022 == nil then
				arg_383_1.var_.actorSpriteComps10022 = var_386_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_386_9 = 2

			if var_386_8 <= arg_383_1.time_ and arg_383_1.time_ < var_386_8 + var_386_9 and not isNil(var_386_7) then
				local var_386_10 = (arg_383_1.time_ - var_386_8) / var_386_9

				if arg_383_1.var_.actorSpriteComps10022 then
					for iter_386_1, iter_386_2 in pairs(arg_383_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_386_2 then
							if arg_383_1.isInRecall_ then
								local var_386_11 = Mathf.Lerp(iter_386_2.color.r, arg_383_1.hightColor1.r, var_386_10)
								local var_386_12 = Mathf.Lerp(iter_386_2.color.g, arg_383_1.hightColor1.g, var_386_10)
								local var_386_13 = Mathf.Lerp(iter_386_2.color.b, arg_383_1.hightColor1.b, var_386_10)

								iter_386_2.color = Color.New(var_386_11, var_386_12, var_386_13)
							else
								local var_386_14 = Mathf.Lerp(iter_386_2.color.r, 1, var_386_10)

								iter_386_2.color = Color.New(var_386_14, var_386_14, var_386_14)
							end
						end
					end
				end
			end

			if arg_383_1.time_ >= var_386_8 + var_386_9 and arg_383_1.time_ < var_386_8 + var_386_9 + arg_386_0 and not isNil(var_386_7) and arg_383_1.var_.actorSpriteComps10022 then
				for iter_386_3, iter_386_4 in pairs(arg_383_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_386_4 then
						if arg_383_1.isInRecall_ then
							iter_386_4.color = arg_383_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_386_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_383_1.var_.actorSpriteComps10022 = nil
			end

			local var_386_15 = 0
			local var_386_16 = 0.6

			if var_386_15 < arg_383_1.time_ and arg_383_1.time_ <= var_386_15 + arg_386_0 then
				arg_383_1.talkMaxDuration = 0
				arg_383_1.dialogCg_.alpha = 1

				arg_383_1.dialog_:SetActive(true)
				SetActive(arg_383_1.leftNameGo_, true)

				local var_386_17 = arg_383_1:FormatText(StoryNameCfg[614].name)

				arg_383_1.leftNameTxt_.text = var_386_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_383_1.leftNameTxt_.transform)

				arg_383_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_383_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_383_1:RecordName(arg_383_1.leftNameTxt_.text)
				SetActive(arg_383_1.iconTrs_.gameObject, false)
				arg_383_1.callingController_:SetSelectedState("normal")

				local var_386_18 = arg_383_1:GetWordFromCfg(413161093)
				local var_386_19 = arg_383_1:FormatText(var_386_18.content)

				arg_383_1.text_.text = var_386_19

				LuaForUtil.ClearLinePrefixSymbol(arg_383_1.text_)

				local var_386_20 = 24
				local var_386_21 = utf8.len(var_386_19)
				local var_386_22 = var_386_20 <= 0 and var_386_16 or var_386_16 * (var_386_21 / var_386_20)

				if var_386_22 > 0 and var_386_16 < var_386_22 then
					arg_383_1.talkMaxDuration = var_386_22

					if var_386_22 + var_386_15 > arg_383_1.duration_ then
						arg_383_1.duration_ = var_386_22 + var_386_15
					end
				end

				arg_383_1.text_.text = var_386_19
				arg_383_1.typewritter.percent = 0

				arg_383_1.typewritter:SetDirty()
				arg_383_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161093", "story_v_out_413161.awb") ~= 0 then
					local var_386_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161093", "story_v_out_413161.awb") / 1000

					if var_386_23 + var_386_15 > arg_383_1.duration_ then
						arg_383_1.duration_ = var_386_23 + var_386_15
					end

					if var_386_18.prefab_name ~= "" and arg_383_1.actors_[var_386_18.prefab_name] ~= nil then
						local var_386_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_383_1.actors_[var_386_18.prefab_name].transform, "story_v_out_413161", "413161093", "story_v_out_413161.awb")

						arg_383_1:RecordAudio("413161093", var_386_24)
						arg_383_1:RecordAudio("413161093", var_386_24)
					else
						arg_383_1:AudioAction("play", "voice", "story_v_out_413161", "413161093", "story_v_out_413161.awb")
					end

					arg_383_1:RecordHistoryTalkVoice("story_v_out_413161", "413161093", "story_v_out_413161.awb")
				end

				arg_383_1:RecordContent(arg_383_1.text_.text)
			end

			local var_386_25 = math.max(var_386_16, arg_383_1.talkMaxDuration)

			if var_386_15 <= arg_383_1.time_ and arg_383_1.time_ < var_386_15 + var_386_25 then
				arg_383_1.typewritter.percent = (arg_383_1.time_ - var_386_15) / var_386_25

				arg_383_1.typewritter:SetDirty()
			end

			if arg_383_1.time_ >= var_386_15 + var_386_25 and arg_383_1.time_ < var_386_15 + var_386_25 + arg_386_0 then
				arg_383_1.typewritter.percent = 1

				arg_383_1.typewritter:SetDirty()
				arg_383_1:ShowNextGo(true)
			end
		end
	end,
	Play413161094 = function(arg_387_0, arg_387_1)
		arg_387_1.time_ = 0
		arg_387_1.frameCnt_ = 0
		arg_387_1.state_ = "playing"
		arg_387_1.curTalkId_ = 413161094
		arg_387_1.duration_ = 10.17

		local var_387_0 = {
			zh = 5.1,
			ja = 10.166
		}
		local var_387_1 = manager.audio:GetLocalizationFlag()

		if var_387_0[var_387_1] ~= nil then
			arg_387_1.duration_ = var_387_0[var_387_1]
		end

		SetActive(arg_387_1.tipsGo_, false)

		function arg_387_1.onSingleLineFinish_()
			arg_387_1.onSingleLineUpdate_ = nil
			arg_387_1.onSingleLineFinish_ = nil
			arg_387_1.state_ = "waiting"
		end

		function arg_387_1.playNext_(arg_389_0)
			if arg_389_0 == 1 then
				arg_387_0:Play413161095(arg_387_1)
			end
		end

		function arg_387_1.onSingleLineUpdate_(arg_390_0)
			local var_390_0 = 0
			local var_390_1 = 0.7

			if var_390_0 < arg_387_1.time_ and arg_387_1.time_ <= var_390_0 + arg_390_0 then
				arg_387_1.talkMaxDuration = 0
				arg_387_1.dialogCg_.alpha = 1

				arg_387_1.dialog_:SetActive(true)
				SetActive(arg_387_1.leftNameGo_, true)

				local var_390_2 = arg_387_1:FormatText(StoryNameCfg[614].name)

				arg_387_1.leftNameTxt_.text = var_390_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_387_1.leftNameTxt_.transform)

				arg_387_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_387_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_387_1:RecordName(arg_387_1.leftNameTxt_.text)
				SetActive(arg_387_1.iconTrs_.gameObject, false)
				arg_387_1.callingController_:SetSelectedState("normal")

				local var_390_3 = arg_387_1:GetWordFromCfg(413161094)
				local var_390_4 = arg_387_1:FormatText(var_390_3.content)

				arg_387_1.text_.text = var_390_4

				LuaForUtil.ClearLinePrefixSymbol(arg_387_1.text_)

				local var_390_5 = 28
				local var_390_6 = utf8.len(var_390_4)
				local var_390_7 = var_390_5 <= 0 and var_390_1 or var_390_1 * (var_390_6 / var_390_5)

				if var_390_7 > 0 and var_390_1 < var_390_7 then
					arg_387_1.talkMaxDuration = var_390_7

					if var_390_7 + var_390_0 > arg_387_1.duration_ then
						arg_387_1.duration_ = var_390_7 + var_390_0
					end
				end

				arg_387_1.text_.text = var_390_4
				arg_387_1.typewritter.percent = 0

				arg_387_1.typewritter:SetDirty()
				arg_387_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161094", "story_v_out_413161.awb") ~= 0 then
					local var_390_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161094", "story_v_out_413161.awb") / 1000

					if var_390_8 + var_390_0 > arg_387_1.duration_ then
						arg_387_1.duration_ = var_390_8 + var_390_0
					end

					if var_390_3.prefab_name ~= "" and arg_387_1.actors_[var_390_3.prefab_name] ~= nil then
						local var_390_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_387_1.actors_[var_390_3.prefab_name].transform, "story_v_out_413161", "413161094", "story_v_out_413161.awb")

						arg_387_1:RecordAudio("413161094", var_390_9)
						arg_387_1:RecordAudio("413161094", var_390_9)
					else
						arg_387_1:AudioAction("play", "voice", "story_v_out_413161", "413161094", "story_v_out_413161.awb")
					end

					arg_387_1:RecordHistoryTalkVoice("story_v_out_413161", "413161094", "story_v_out_413161.awb")
				end

				arg_387_1:RecordContent(arg_387_1.text_.text)
			end

			local var_390_10 = math.max(var_390_1, arg_387_1.talkMaxDuration)

			if var_390_0 <= arg_387_1.time_ and arg_387_1.time_ < var_390_0 + var_390_10 then
				arg_387_1.typewritter.percent = (arg_387_1.time_ - var_390_0) / var_390_10

				arg_387_1.typewritter:SetDirty()
			end

			if arg_387_1.time_ >= var_390_0 + var_390_10 and arg_387_1.time_ < var_390_0 + var_390_10 + arg_390_0 then
				arg_387_1.typewritter.percent = 1

				arg_387_1.typewritter:SetDirty()
				arg_387_1:ShowNextGo(true)
			end
		end
	end,
	Play413161095 = function(arg_391_0, arg_391_1)
		arg_391_1.time_ = 0
		arg_391_1.frameCnt_ = 0
		arg_391_1.state_ = "playing"
		arg_391_1.curTalkId_ = 413161095
		arg_391_1.duration_ = 2.27

		local var_391_0 = {
			zh = 1.999999999999,
			ja = 2.266
		}
		local var_391_1 = manager.audio:GetLocalizationFlag()

		if var_391_0[var_391_1] ~= nil then
			arg_391_1.duration_ = var_391_0[var_391_1]
		end

		SetActive(arg_391_1.tipsGo_, false)

		function arg_391_1.onSingleLineFinish_()
			arg_391_1.onSingleLineUpdate_ = nil
			arg_391_1.onSingleLineFinish_ = nil
			arg_391_1.state_ = "waiting"
		end

		function arg_391_1.playNext_(arg_393_0)
			if arg_393_0 == 1 then
				arg_391_0:Play413161096(arg_391_1)
			end
		end

		function arg_391_1.onSingleLineUpdate_(arg_394_0)
			local var_394_0 = arg_391_1.actors_["10022"]
			local var_394_1 = 0

			if var_394_1 < arg_391_1.time_ and arg_391_1.time_ <= var_394_1 + arg_394_0 and not isNil(var_394_0) and arg_391_1.var_.actorSpriteComps10022 == nil then
				arg_391_1.var_.actorSpriteComps10022 = var_394_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_394_2 = 2

			if var_394_1 <= arg_391_1.time_ and arg_391_1.time_ < var_394_1 + var_394_2 and not isNil(var_394_0) then
				local var_394_3 = (arg_391_1.time_ - var_394_1) / var_394_2

				if arg_391_1.var_.actorSpriteComps10022 then
					for iter_394_0, iter_394_1 in pairs(arg_391_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_394_1 then
							if arg_391_1.isInRecall_ then
								local var_394_4 = Mathf.Lerp(iter_394_1.color.r, arg_391_1.hightColor2.r, var_394_3)
								local var_394_5 = Mathf.Lerp(iter_394_1.color.g, arg_391_1.hightColor2.g, var_394_3)
								local var_394_6 = Mathf.Lerp(iter_394_1.color.b, arg_391_1.hightColor2.b, var_394_3)

								iter_394_1.color = Color.New(var_394_4, var_394_5, var_394_6)
							else
								local var_394_7 = Mathf.Lerp(iter_394_1.color.r, 0.5, var_394_3)

								iter_394_1.color = Color.New(var_394_7, var_394_7, var_394_7)
							end
						end
					end
				end
			end

			if arg_391_1.time_ >= var_394_1 + var_394_2 and arg_391_1.time_ < var_394_1 + var_394_2 + arg_394_0 and not isNil(var_394_0) and arg_391_1.var_.actorSpriteComps10022 then
				for iter_394_2, iter_394_3 in pairs(arg_391_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_394_3 then
						if arg_391_1.isInRecall_ then
							iter_394_3.color = arg_391_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_394_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_391_1.var_.actorSpriteComps10022 = nil
			end

			local var_394_8 = 0
			local var_394_9 = 0.175

			if var_394_8 < arg_391_1.time_ and arg_391_1.time_ <= var_394_8 + arg_394_0 then
				arg_391_1.talkMaxDuration = 0
				arg_391_1.dialogCg_.alpha = 1

				arg_391_1.dialog_:SetActive(true)
				SetActive(arg_391_1.leftNameGo_, true)

				local var_394_10 = arg_391_1:FormatText(StoryNameCfg[998].name)

				arg_391_1.leftNameTxt_.text = var_394_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_391_1.leftNameTxt_.transform)

				arg_391_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_391_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_391_1:RecordName(arg_391_1.leftNameTxt_.text)
				SetActive(arg_391_1.iconTrs_.gameObject, true)
				arg_391_1.iconController_:SetSelectedState("hero")

				arg_391_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_391_1.callingController_:SetSelectedState("normal")

				arg_391_1.keyicon_.color = Color.New(1, 1, 1)
				arg_391_1.icon_.color = Color.New(1, 1, 1)

				local var_394_11 = arg_391_1:GetWordFromCfg(413161095)
				local var_394_12 = arg_391_1:FormatText(var_394_11.content)

				arg_391_1.text_.text = var_394_12

				LuaForUtil.ClearLinePrefixSymbol(arg_391_1.text_)

				local var_394_13 = 7
				local var_394_14 = utf8.len(var_394_12)
				local var_394_15 = var_394_13 <= 0 and var_394_9 or var_394_9 * (var_394_14 / var_394_13)

				if var_394_15 > 0 and var_394_9 < var_394_15 then
					arg_391_1.talkMaxDuration = var_394_15

					if var_394_15 + var_394_8 > arg_391_1.duration_ then
						arg_391_1.duration_ = var_394_15 + var_394_8
					end
				end

				arg_391_1.text_.text = var_394_12
				arg_391_1.typewritter.percent = 0

				arg_391_1.typewritter:SetDirty()
				arg_391_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161095", "story_v_out_413161.awb") ~= 0 then
					local var_394_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161095", "story_v_out_413161.awb") / 1000

					if var_394_16 + var_394_8 > arg_391_1.duration_ then
						arg_391_1.duration_ = var_394_16 + var_394_8
					end

					if var_394_11.prefab_name ~= "" and arg_391_1.actors_[var_394_11.prefab_name] ~= nil then
						local var_394_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_391_1.actors_[var_394_11.prefab_name].transform, "story_v_out_413161", "413161095", "story_v_out_413161.awb")

						arg_391_1:RecordAudio("413161095", var_394_17)
						arg_391_1:RecordAudio("413161095", var_394_17)
					else
						arg_391_1:AudioAction("play", "voice", "story_v_out_413161", "413161095", "story_v_out_413161.awb")
					end

					arg_391_1:RecordHistoryTalkVoice("story_v_out_413161", "413161095", "story_v_out_413161.awb")
				end

				arg_391_1:RecordContent(arg_391_1.text_.text)
			end

			local var_394_18 = math.max(var_394_9, arg_391_1.talkMaxDuration)

			if var_394_8 <= arg_391_1.time_ and arg_391_1.time_ < var_394_8 + var_394_18 then
				arg_391_1.typewritter.percent = (arg_391_1.time_ - var_394_8) / var_394_18

				arg_391_1.typewritter:SetDirty()
			end

			if arg_391_1.time_ >= var_394_8 + var_394_18 and arg_391_1.time_ < var_394_8 + var_394_18 + arg_394_0 then
				arg_391_1.typewritter.percent = 1

				arg_391_1.typewritter:SetDirty()
				arg_391_1:ShowNextGo(true)
			end
		end
	end,
	Play413161096 = function(arg_395_0, arg_395_1)
		arg_395_1.time_ = 0
		arg_395_1.frameCnt_ = 0
		arg_395_1.state_ = "playing"
		arg_395_1.curTalkId_ = 413161096
		arg_395_1.duration_ = 4.17

		local var_395_0 = {
			zh = 2.666,
			ja = 4.166
		}
		local var_395_1 = manager.audio:GetLocalizationFlag()

		if var_395_0[var_395_1] ~= nil then
			arg_395_1.duration_ = var_395_0[var_395_1]
		end

		SetActive(arg_395_1.tipsGo_, false)

		function arg_395_1.onSingleLineFinish_()
			arg_395_1.onSingleLineUpdate_ = nil
			arg_395_1.onSingleLineFinish_ = nil
			arg_395_1.state_ = "waiting"
		end

		function arg_395_1.playNext_(arg_397_0)
			if arg_397_0 == 1 then
				arg_395_0:Play413161097(arg_395_1)
			end
		end

		function arg_395_1.onSingleLineUpdate_(arg_398_0)
			local var_398_0 = arg_395_1.actors_["10022"]
			local var_398_1 = 0

			if var_398_1 < arg_395_1.time_ and arg_395_1.time_ <= var_398_1 + arg_398_0 and not isNil(var_398_0) and arg_395_1.var_.actorSpriteComps10022 == nil then
				arg_395_1.var_.actorSpriteComps10022 = var_398_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_398_2 = 2

			if var_398_1 <= arg_395_1.time_ and arg_395_1.time_ < var_398_1 + var_398_2 and not isNil(var_398_0) then
				local var_398_3 = (arg_395_1.time_ - var_398_1) / var_398_2

				if arg_395_1.var_.actorSpriteComps10022 then
					for iter_398_0, iter_398_1 in pairs(arg_395_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_398_1 then
							if arg_395_1.isInRecall_ then
								local var_398_4 = Mathf.Lerp(iter_398_1.color.r, arg_395_1.hightColor1.r, var_398_3)
								local var_398_5 = Mathf.Lerp(iter_398_1.color.g, arg_395_1.hightColor1.g, var_398_3)
								local var_398_6 = Mathf.Lerp(iter_398_1.color.b, arg_395_1.hightColor1.b, var_398_3)

								iter_398_1.color = Color.New(var_398_4, var_398_5, var_398_6)
							else
								local var_398_7 = Mathf.Lerp(iter_398_1.color.r, 1, var_398_3)

								iter_398_1.color = Color.New(var_398_7, var_398_7, var_398_7)
							end
						end
					end
				end
			end

			if arg_395_1.time_ >= var_398_1 + var_398_2 and arg_395_1.time_ < var_398_1 + var_398_2 + arg_398_0 and not isNil(var_398_0) and arg_395_1.var_.actorSpriteComps10022 then
				for iter_398_2, iter_398_3 in pairs(arg_395_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_398_3 then
						if arg_395_1.isInRecall_ then
							iter_398_3.color = arg_395_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_398_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_395_1.var_.actorSpriteComps10022 = nil
			end

			local var_398_8 = 0
			local var_398_9 = 0.325

			if var_398_8 < arg_395_1.time_ and arg_395_1.time_ <= var_398_8 + arg_398_0 then
				arg_395_1.talkMaxDuration = 0
				arg_395_1.dialogCg_.alpha = 1

				arg_395_1.dialog_:SetActive(true)
				SetActive(arg_395_1.leftNameGo_, true)

				local var_398_10 = arg_395_1:FormatText(StoryNameCfg[614].name)

				arg_395_1.leftNameTxt_.text = var_398_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_395_1.leftNameTxt_.transform)

				arg_395_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_395_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_395_1:RecordName(arg_395_1.leftNameTxt_.text)
				SetActive(arg_395_1.iconTrs_.gameObject, false)
				arg_395_1.callingController_:SetSelectedState("normal")

				local var_398_11 = arg_395_1:GetWordFromCfg(413161096)
				local var_398_12 = arg_395_1:FormatText(var_398_11.content)

				arg_395_1.text_.text = var_398_12

				LuaForUtil.ClearLinePrefixSymbol(arg_395_1.text_)

				local var_398_13 = 13
				local var_398_14 = utf8.len(var_398_12)
				local var_398_15 = var_398_13 <= 0 and var_398_9 or var_398_9 * (var_398_14 / var_398_13)

				if var_398_15 > 0 and var_398_9 < var_398_15 then
					arg_395_1.talkMaxDuration = var_398_15

					if var_398_15 + var_398_8 > arg_395_1.duration_ then
						arg_395_1.duration_ = var_398_15 + var_398_8
					end
				end

				arg_395_1.text_.text = var_398_12
				arg_395_1.typewritter.percent = 0

				arg_395_1.typewritter:SetDirty()
				arg_395_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161096", "story_v_out_413161.awb") ~= 0 then
					local var_398_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161096", "story_v_out_413161.awb") / 1000

					if var_398_16 + var_398_8 > arg_395_1.duration_ then
						arg_395_1.duration_ = var_398_16 + var_398_8
					end

					if var_398_11.prefab_name ~= "" and arg_395_1.actors_[var_398_11.prefab_name] ~= nil then
						local var_398_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_395_1.actors_[var_398_11.prefab_name].transform, "story_v_out_413161", "413161096", "story_v_out_413161.awb")

						arg_395_1:RecordAudio("413161096", var_398_17)
						arg_395_1:RecordAudio("413161096", var_398_17)
					else
						arg_395_1:AudioAction("play", "voice", "story_v_out_413161", "413161096", "story_v_out_413161.awb")
					end

					arg_395_1:RecordHistoryTalkVoice("story_v_out_413161", "413161096", "story_v_out_413161.awb")
				end

				arg_395_1:RecordContent(arg_395_1.text_.text)
			end

			local var_398_18 = math.max(var_398_9, arg_395_1.talkMaxDuration)

			if var_398_8 <= arg_395_1.time_ and arg_395_1.time_ < var_398_8 + var_398_18 then
				arg_395_1.typewritter.percent = (arg_395_1.time_ - var_398_8) / var_398_18

				arg_395_1.typewritter:SetDirty()
			end

			if arg_395_1.time_ >= var_398_8 + var_398_18 and arg_395_1.time_ < var_398_8 + var_398_18 + arg_398_0 then
				arg_395_1.typewritter.percent = 1

				arg_395_1.typewritter:SetDirty()
				arg_395_1:ShowNextGo(true)
			end
		end
	end,
	Play413161097 = function(arg_399_0, arg_399_1)
		arg_399_1.time_ = 0
		arg_399_1.frameCnt_ = 0
		arg_399_1.state_ = "playing"
		arg_399_1.curTalkId_ = 413161097
		arg_399_1.duration_ = 9.47

		local var_399_0 = {
			zh = 7.6,
			ja = 9.466
		}
		local var_399_1 = manager.audio:GetLocalizationFlag()

		if var_399_0[var_399_1] ~= nil then
			arg_399_1.duration_ = var_399_0[var_399_1]
		end

		SetActive(arg_399_1.tipsGo_, false)

		function arg_399_1.onSingleLineFinish_()
			arg_399_1.onSingleLineUpdate_ = nil
			arg_399_1.onSingleLineFinish_ = nil
			arg_399_1.state_ = "waiting"
		end

		function arg_399_1.playNext_(arg_401_0)
			if arg_401_0 == 1 then
				arg_399_0:Play413161098(arg_399_1)
			end
		end

		function arg_399_1.onSingleLineUpdate_(arg_402_0)
			local var_402_0 = arg_399_1.actors_["10022"]
			local var_402_1 = 0

			if var_402_1 < arg_399_1.time_ and arg_399_1.time_ <= var_402_1 + arg_402_0 and not isNil(var_402_0) and arg_399_1.var_.actorSpriteComps10022 == nil then
				arg_399_1.var_.actorSpriteComps10022 = var_402_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_402_2 = 2

			if var_402_1 <= arg_399_1.time_ and arg_399_1.time_ < var_402_1 + var_402_2 and not isNil(var_402_0) then
				local var_402_3 = (arg_399_1.time_ - var_402_1) / var_402_2

				if arg_399_1.var_.actorSpriteComps10022 then
					for iter_402_0, iter_402_1 in pairs(arg_399_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_402_1 then
							if arg_399_1.isInRecall_ then
								local var_402_4 = Mathf.Lerp(iter_402_1.color.r, arg_399_1.hightColor2.r, var_402_3)
								local var_402_5 = Mathf.Lerp(iter_402_1.color.g, arg_399_1.hightColor2.g, var_402_3)
								local var_402_6 = Mathf.Lerp(iter_402_1.color.b, arg_399_1.hightColor2.b, var_402_3)

								iter_402_1.color = Color.New(var_402_4, var_402_5, var_402_6)
							else
								local var_402_7 = Mathf.Lerp(iter_402_1.color.r, 0.5, var_402_3)

								iter_402_1.color = Color.New(var_402_7, var_402_7, var_402_7)
							end
						end
					end
				end
			end

			if arg_399_1.time_ >= var_402_1 + var_402_2 and arg_399_1.time_ < var_402_1 + var_402_2 + arg_402_0 and not isNil(var_402_0) and arg_399_1.var_.actorSpriteComps10022 then
				for iter_402_2, iter_402_3 in pairs(arg_399_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_402_3 then
						if arg_399_1.isInRecall_ then
							iter_402_3.color = arg_399_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_402_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_399_1.var_.actorSpriteComps10022 = nil
			end

			local var_402_8 = 0
			local var_402_9 = 0.95

			if var_402_8 < arg_399_1.time_ and arg_399_1.time_ <= var_402_8 + arg_402_0 then
				arg_399_1.talkMaxDuration = 0
				arg_399_1.dialogCg_.alpha = 1

				arg_399_1.dialog_:SetActive(true)
				SetActive(arg_399_1.leftNameGo_, true)

				local var_402_10 = arg_399_1:FormatText(StoryNameCfg[998].name)

				arg_399_1.leftNameTxt_.text = var_402_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_399_1.leftNameTxt_.transform)

				arg_399_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_399_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_399_1:RecordName(arg_399_1.leftNameTxt_.text)
				SetActive(arg_399_1.iconTrs_.gameObject, true)
				arg_399_1.iconController_:SetSelectedState("hero")

				arg_399_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_399_1.callingController_:SetSelectedState("normal")

				arg_399_1.keyicon_.color = Color.New(1, 1, 1)
				arg_399_1.icon_.color = Color.New(1, 1, 1)

				local var_402_11 = arg_399_1:GetWordFromCfg(413161097)
				local var_402_12 = arg_399_1:FormatText(var_402_11.content)

				arg_399_1.text_.text = var_402_12

				LuaForUtil.ClearLinePrefixSymbol(arg_399_1.text_)

				local var_402_13 = 38
				local var_402_14 = utf8.len(var_402_12)
				local var_402_15 = var_402_13 <= 0 and var_402_9 or var_402_9 * (var_402_14 / var_402_13)

				if var_402_15 > 0 and var_402_9 < var_402_15 then
					arg_399_1.talkMaxDuration = var_402_15

					if var_402_15 + var_402_8 > arg_399_1.duration_ then
						arg_399_1.duration_ = var_402_15 + var_402_8
					end
				end

				arg_399_1.text_.text = var_402_12
				arg_399_1.typewritter.percent = 0

				arg_399_1.typewritter:SetDirty()
				arg_399_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161097", "story_v_out_413161.awb") ~= 0 then
					local var_402_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161097", "story_v_out_413161.awb") / 1000

					if var_402_16 + var_402_8 > arg_399_1.duration_ then
						arg_399_1.duration_ = var_402_16 + var_402_8
					end

					if var_402_11.prefab_name ~= "" and arg_399_1.actors_[var_402_11.prefab_name] ~= nil then
						local var_402_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_399_1.actors_[var_402_11.prefab_name].transform, "story_v_out_413161", "413161097", "story_v_out_413161.awb")

						arg_399_1:RecordAudio("413161097", var_402_17)
						arg_399_1:RecordAudio("413161097", var_402_17)
					else
						arg_399_1:AudioAction("play", "voice", "story_v_out_413161", "413161097", "story_v_out_413161.awb")
					end

					arg_399_1:RecordHistoryTalkVoice("story_v_out_413161", "413161097", "story_v_out_413161.awb")
				end

				arg_399_1:RecordContent(arg_399_1.text_.text)
			end

			local var_402_18 = math.max(var_402_9, arg_399_1.talkMaxDuration)

			if var_402_8 <= arg_399_1.time_ and arg_399_1.time_ < var_402_8 + var_402_18 then
				arg_399_1.typewritter.percent = (arg_399_1.time_ - var_402_8) / var_402_18

				arg_399_1.typewritter:SetDirty()
			end

			if arg_399_1.time_ >= var_402_8 + var_402_18 and arg_399_1.time_ < var_402_8 + var_402_18 + arg_402_0 then
				arg_399_1.typewritter.percent = 1

				arg_399_1.typewritter:SetDirty()
				arg_399_1:ShowNextGo(true)
			end
		end
	end,
	Play413161098 = function(arg_403_0, arg_403_1)
		arg_403_1.time_ = 0
		arg_403_1.frameCnt_ = 0
		arg_403_1.state_ = "playing"
		arg_403_1.curTalkId_ = 413161098
		arg_403_1.duration_ = 7.8

		local var_403_0 = {
			zh = 4,
			ja = 7.8
		}
		local var_403_1 = manager.audio:GetLocalizationFlag()

		if var_403_0[var_403_1] ~= nil then
			arg_403_1.duration_ = var_403_0[var_403_1]
		end

		SetActive(arg_403_1.tipsGo_, false)

		function arg_403_1.onSingleLineFinish_()
			arg_403_1.onSingleLineUpdate_ = nil
			arg_403_1.onSingleLineFinish_ = nil
			arg_403_1.state_ = "waiting"
		end

		function arg_403_1.playNext_(arg_405_0)
			if arg_405_0 == 1 then
				arg_403_0:Play413161099(arg_403_1)
			end
		end

		function arg_403_1.onSingleLineUpdate_(arg_406_0)
			local var_406_0 = arg_403_1.actors_["10022"].transform
			local var_406_1 = 0

			if var_406_1 < arg_403_1.time_ and arg_403_1.time_ <= var_406_1 + arg_406_0 then
				arg_403_1.var_.moveOldPos10022 = var_406_0.localPosition
				var_406_0.localScale = Vector3.New(1, 1, 1)

				arg_403_1:CheckSpriteTmpPos("10022", 3)

				local var_406_2 = var_406_0.childCount

				for iter_406_0 = 0, var_406_2 - 1 do
					local var_406_3 = var_406_0:GetChild(iter_406_0)

					if var_406_3.name == "split_3" or not string.find(var_406_3.name, "split") then
						var_406_3.gameObject:SetActive(true)
					else
						var_406_3.gameObject:SetActive(false)
					end
				end
			end

			local var_406_4 = 0.001

			if var_406_1 <= arg_403_1.time_ and arg_403_1.time_ < var_406_1 + var_406_4 then
				local var_406_5 = (arg_403_1.time_ - var_406_1) / var_406_4
				local var_406_6 = Vector3.New(0, -315, -320)

				var_406_0.localPosition = Vector3.Lerp(arg_403_1.var_.moveOldPos10022, var_406_6, var_406_5)
			end

			if arg_403_1.time_ >= var_406_1 + var_406_4 and arg_403_1.time_ < var_406_1 + var_406_4 + arg_406_0 then
				var_406_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_406_7 = arg_403_1.actors_["10022"]
			local var_406_8 = 0

			if var_406_8 < arg_403_1.time_ and arg_403_1.time_ <= var_406_8 + arg_406_0 and not isNil(var_406_7) and arg_403_1.var_.actorSpriteComps10022 == nil then
				arg_403_1.var_.actorSpriteComps10022 = var_406_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_406_9 = 2

			if var_406_8 <= arg_403_1.time_ and arg_403_1.time_ < var_406_8 + var_406_9 and not isNil(var_406_7) then
				local var_406_10 = (arg_403_1.time_ - var_406_8) / var_406_9

				if arg_403_1.var_.actorSpriteComps10022 then
					for iter_406_1, iter_406_2 in pairs(arg_403_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_406_2 then
							if arg_403_1.isInRecall_ then
								local var_406_11 = Mathf.Lerp(iter_406_2.color.r, arg_403_1.hightColor1.r, var_406_10)
								local var_406_12 = Mathf.Lerp(iter_406_2.color.g, arg_403_1.hightColor1.g, var_406_10)
								local var_406_13 = Mathf.Lerp(iter_406_2.color.b, arg_403_1.hightColor1.b, var_406_10)

								iter_406_2.color = Color.New(var_406_11, var_406_12, var_406_13)
							else
								local var_406_14 = Mathf.Lerp(iter_406_2.color.r, 1, var_406_10)

								iter_406_2.color = Color.New(var_406_14, var_406_14, var_406_14)
							end
						end
					end
				end
			end

			if arg_403_1.time_ >= var_406_8 + var_406_9 and arg_403_1.time_ < var_406_8 + var_406_9 + arg_406_0 and not isNil(var_406_7) and arg_403_1.var_.actorSpriteComps10022 then
				for iter_406_3, iter_406_4 in pairs(arg_403_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_406_4 then
						if arg_403_1.isInRecall_ then
							iter_406_4.color = arg_403_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_406_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_403_1.var_.actorSpriteComps10022 = nil
			end

			local var_406_15 = 0
			local var_406_16 = 0.6

			if var_406_15 < arg_403_1.time_ and arg_403_1.time_ <= var_406_15 + arg_406_0 then
				arg_403_1.talkMaxDuration = 0
				arg_403_1.dialogCg_.alpha = 1

				arg_403_1.dialog_:SetActive(true)
				SetActive(arg_403_1.leftNameGo_, true)

				local var_406_17 = arg_403_1:FormatText(StoryNameCfg[614].name)

				arg_403_1.leftNameTxt_.text = var_406_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_403_1.leftNameTxt_.transform)

				arg_403_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_403_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_403_1:RecordName(arg_403_1.leftNameTxt_.text)
				SetActive(arg_403_1.iconTrs_.gameObject, false)
				arg_403_1.callingController_:SetSelectedState("normal")

				local var_406_18 = arg_403_1:GetWordFromCfg(413161098)
				local var_406_19 = arg_403_1:FormatText(var_406_18.content)

				arg_403_1.text_.text = var_406_19

				LuaForUtil.ClearLinePrefixSymbol(arg_403_1.text_)

				local var_406_20 = 24
				local var_406_21 = utf8.len(var_406_19)
				local var_406_22 = var_406_20 <= 0 and var_406_16 or var_406_16 * (var_406_21 / var_406_20)

				if var_406_22 > 0 and var_406_16 < var_406_22 then
					arg_403_1.talkMaxDuration = var_406_22

					if var_406_22 + var_406_15 > arg_403_1.duration_ then
						arg_403_1.duration_ = var_406_22 + var_406_15
					end
				end

				arg_403_1.text_.text = var_406_19
				arg_403_1.typewritter.percent = 0

				arg_403_1.typewritter:SetDirty()
				arg_403_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161098", "story_v_out_413161.awb") ~= 0 then
					local var_406_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161098", "story_v_out_413161.awb") / 1000

					if var_406_23 + var_406_15 > arg_403_1.duration_ then
						arg_403_1.duration_ = var_406_23 + var_406_15
					end

					if var_406_18.prefab_name ~= "" and arg_403_1.actors_[var_406_18.prefab_name] ~= nil then
						local var_406_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_403_1.actors_[var_406_18.prefab_name].transform, "story_v_out_413161", "413161098", "story_v_out_413161.awb")

						arg_403_1:RecordAudio("413161098", var_406_24)
						arg_403_1:RecordAudio("413161098", var_406_24)
					else
						arg_403_1:AudioAction("play", "voice", "story_v_out_413161", "413161098", "story_v_out_413161.awb")
					end

					arg_403_1:RecordHistoryTalkVoice("story_v_out_413161", "413161098", "story_v_out_413161.awb")
				end

				arg_403_1:RecordContent(arg_403_1.text_.text)
			end

			local var_406_25 = math.max(var_406_16, arg_403_1.talkMaxDuration)

			if var_406_15 <= arg_403_1.time_ and arg_403_1.time_ < var_406_15 + var_406_25 then
				arg_403_1.typewritter.percent = (arg_403_1.time_ - var_406_15) / var_406_25

				arg_403_1.typewritter:SetDirty()
			end

			if arg_403_1.time_ >= var_406_15 + var_406_25 and arg_403_1.time_ < var_406_15 + var_406_25 + arg_406_0 then
				arg_403_1.typewritter.percent = 1

				arg_403_1.typewritter:SetDirty()
				arg_403_1:ShowNextGo(true)
			end
		end
	end,
	Play413161099 = function(arg_407_0, arg_407_1)
		arg_407_1.time_ = 0
		arg_407_1.frameCnt_ = 0
		arg_407_1.state_ = "playing"
		arg_407_1.curTalkId_ = 413161099
		arg_407_1.duration_ = 6.3

		local var_407_0 = {
			zh = 4.8,
			ja = 6.3
		}
		local var_407_1 = manager.audio:GetLocalizationFlag()

		if var_407_0[var_407_1] ~= nil then
			arg_407_1.duration_ = var_407_0[var_407_1]
		end

		SetActive(arg_407_1.tipsGo_, false)

		function arg_407_1.onSingleLineFinish_()
			arg_407_1.onSingleLineUpdate_ = nil
			arg_407_1.onSingleLineFinish_ = nil
			arg_407_1.state_ = "waiting"
		end

		function arg_407_1.playNext_(arg_409_0)
			if arg_409_0 == 1 then
				arg_407_0:Play413161100(arg_407_1)
			end
		end

		function arg_407_1.onSingleLineUpdate_(arg_410_0)
			local var_410_0 = arg_407_1.actors_["10022"]
			local var_410_1 = 0

			if var_410_1 < arg_407_1.time_ and arg_407_1.time_ <= var_410_1 + arg_410_0 and not isNil(var_410_0) and arg_407_1.var_.actorSpriteComps10022 == nil then
				arg_407_1.var_.actorSpriteComps10022 = var_410_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_410_2 = 2

			if var_410_1 <= arg_407_1.time_ and arg_407_1.time_ < var_410_1 + var_410_2 and not isNil(var_410_0) then
				local var_410_3 = (arg_407_1.time_ - var_410_1) / var_410_2

				if arg_407_1.var_.actorSpriteComps10022 then
					for iter_410_0, iter_410_1 in pairs(arg_407_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_410_1 then
							if arg_407_1.isInRecall_ then
								local var_410_4 = Mathf.Lerp(iter_410_1.color.r, arg_407_1.hightColor2.r, var_410_3)
								local var_410_5 = Mathf.Lerp(iter_410_1.color.g, arg_407_1.hightColor2.g, var_410_3)
								local var_410_6 = Mathf.Lerp(iter_410_1.color.b, arg_407_1.hightColor2.b, var_410_3)

								iter_410_1.color = Color.New(var_410_4, var_410_5, var_410_6)
							else
								local var_410_7 = Mathf.Lerp(iter_410_1.color.r, 0.5, var_410_3)

								iter_410_1.color = Color.New(var_410_7, var_410_7, var_410_7)
							end
						end
					end
				end
			end

			if arg_407_1.time_ >= var_410_1 + var_410_2 and arg_407_1.time_ < var_410_1 + var_410_2 + arg_410_0 and not isNil(var_410_0) and arg_407_1.var_.actorSpriteComps10022 then
				for iter_410_2, iter_410_3 in pairs(arg_407_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_410_3 then
						if arg_407_1.isInRecall_ then
							iter_410_3.color = arg_407_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_410_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_407_1.var_.actorSpriteComps10022 = nil
			end

			local var_410_8 = 0
			local var_410_9 = 0.65

			if var_410_8 < arg_407_1.time_ and arg_407_1.time_ <= var_410_8 + arg_410_0 then
				arg_407_1.talkMaxDuration = 0
				arg_407_1.dialogCg_.alpha = 1

				arg_407_1.dialog_:SetActive(true)
				SetActive(arg_407_1.leftNameGo_, true)

				local var_410_10 = arg_407_1:FormatText(StoryNameCfg[998].name)

				arg_407_1.leftNameTxt_.text = var_410_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_407_1.leftNameTxt_.transform)

				arg_407_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_407_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_407_1:RecordName(arg_407_1.leftNameTxt_.text)
				SetActive(arg_407_1.iconTrs_.gameObject, true)
				arg_407_1.iconController_:SetSelectedState("hero")

				arg_407_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_407_1.callingController_:SetSelectedState("normal")

				arg_407_1.keyicon_.color = Color.New(1, 1, 1)
				arg_407_1.icon_.color = Color.New(1, 1, 1)

				local var_410_11 = arg_407_1:GetWordFromCfg(413161099)
				local var_410_12 = arg_407_1:FormatText(var_410_11.content)

				arg_407_1.text_.text = var_410_12

				LuaForUtil.ClearLinePrefixSymbol(arg_407_1.text_)

				local var_410_13 = 21
				local var_410_14 = utf8.len(var_410_12)
				local var_410_15 = var_410_13 <= 0 and var_410_9 or var_410_9 * (var_410_14 / var_410_13)

				if var_410_15 > 0 and var_410_9 < var_410_15 then
					arg_407_1.talkMaxDuration = var_410_15

					if var_410_15 + var_410_8 > arg_407_1.duration_ then
						arg_407_1.duration_ = var_410_15 + var_410_8
					end
				end

				arg_407_1.text_.text = var_410_12
				arg_407_1.typewritter.percent = 0

				arg_407_1.typewritter:SetDirty()
				arg_407_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161099", "story_v_out_413161.awb") ~= 0 then
					local var_410_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161099", "story_v_out_413161.awb") / 1000

					if var_410_16 + var_410_8 > arg_407_1.duration_ then
						arg_407_1.duration_ = var_410_16 + var_410_8
					end

					if var_410_11.prefab_name ~= "" and arg_407_1.actors_[var_410_11.prefab_name] ~= nil then
						local var_410_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_407_1.actors_[var_410_11.prefab_name].transform, "story_v_out_413161", "413161099", "story_v_out_413161.awb")

						arg_407_1:RecordAudio("413161099", var_410_17)
						arg_407_1:RecordAudio("413161099", var_410_17)
					else
						arg_407_1:AudioAction("play", "voice", "story_v_out_413161", "413161099", "story_v_out_413161.awb")
					end

					arg_407_1:RecordHistoryTalkVoice("story_v_out_413161", "413161099", "story_v_out_413161.awb")
				end

				arg_407_1:RecordContent(arg_407_1.text_.text)
			end

			local var_410_18 = math.max(var_410_9, arg_407_1.talkMaxDuration)

			if var_410_8 <= arg_407_1.time_ and arg_407_1.time_ < var_410_8 + var_410_18 then
				arg_407_1.typewritter.percent = (arg_407_1.time_ - var_410_8) / var_410_18

				arg_407_1.typewritter:SetDirty()
			end

			if arg_407_1.time_ >= var_410_8 + var_410_18 and arg_407_1.time_ < var_410_8 + var_410_18 + arg_410_0 then
				arg_407_1.typewritter.percent = 1

				arg_407_1.typewritter:SetDirty()
				arg_407_1:ShowNextGo(true)
			end
		end
	end,
	Play413161100 = function(arg_411_0, arg_411_1)
		arg_411_1.time_ = 0
		arg_411_1.frameCnt_ = 0
		arg_411_1.state_ = "playing"
		arg_411_1.curTalkId_ = 413161100
		arg_411_1.duration_ = 4.2

		local var_411_0 = {
			zh = 2.933,
			ja = 4.2
		}
		local var_411_1 = manager.audio:GetLocalizationFlag()

		if var_411_0[var_411_1] ~= nil then
			arg_411_1.duration_ = var_411_0[var_411_1]
		end

		SetActive(arg_411_1.tipsGo_, false)

		function arg_411_1.onSingleLineFinish_()
			arg_411_1.onSingleLineUpdate_ = nil
			arg_411_1.onSingleLineFinish_ = nil
			arg_411_1.state_ = "waiting"
		end

		function arg_411_1.playNext_(arg_413_0)
			if arg_413_0 == 1 then
				arg_411_0:Play413161101(arg_411_1)
			end
		end

		function arg_411_1.onSingleLineUpdate_(arg_414_0)
			local var_414_0 = arg_411_1.actors_["10022"]
			local var_414_1 = 0

			if var_414_1 < arg_411_1.time_ and arg_411_1.time_ <= var_414_1 + arg_414_0 and not isNil(var_414_0) and arg_411_1.var_.actorSpriteComps10022 == nil then
				arg_411_1.var_.actorSpriteComps10022 = var_414_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_414_2 = 2

			if var_414_1 <= arg_411_1.time_ and arg_411_1.time_ < var_414_1 + var_414_2 and not isNil(var_414_0) then
				local var_414_3 = (arg_411_1.time_ - var_414_1) / var_414_2

				if arg_411_1.var_.actorSpriteComps10022 then
					for iter_414_0, iter_414_1 in pairs(arg_411_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_414_1 then
							if arg_411_1.isInRecall_ then
								local var_414_4 = Mathf.Lerp(iter_414_1.color.r, arg_411_1.hightColor1.r, var_414_3)
								local var_414_5 = Mathf.Lerp(iter_414_1.color.g, arg_411_1.hightColor1.g, var_414_3)
								local var_414_6 = Mathf.Lerp(iter_414_1.color.b, arg_411_1.hightColor1.b, var_414_3)

								iter_414_1.color = Color.New(var_414_4, var_414_5, var_414_6)
							else
								local var_414_7 = Mathf.Lerp(iter_414_1.color.r, 1, var_414_3)

								iter_414_1.color = Color.New(var_414_7, var_414_7, var_414_7)
							end
						end
					end
				end
			end

			if arg_411_1.time_ >= var_414_1 + var_414_2 and arg_411_1.time_ < var_414_1 + var_414_2 + arg_414_0 and not isNil(var_414_0) and arg_411_1.var_.actorSpriteComps10022 then
				for iter_414_2, iter_414_3 in pairs(arg_411_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_414_3 then
						if arg_411_1.isInRecall_ then
							iter_414_3.color = arg_411_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_414_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_411_1.var_.actorSpriteComps10022 = nil
			end

			local var_414_8 = 0
			local var_414_9 = 0.375

			if var_414_8 < arg_411_1.time_ and arg_411_1.time_ <= var_414_8 + arg_414_0 then
				arg_411_1.talkMaxDuration = 0
				arg_411_1.dialogCg_.alpha = 1

				arg_411_1.dialog_:SetActive(true)
				SetActive(arg_411_1.leftNameGo_, true)

				local var_414_10 = arg_411_1:FormatText(StoryNameCfg[614].name)

				arg_411_1.leftNameTxt_.text = var_414_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_411_1.leftNameTxt_.transform)

				arg_411_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_411_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_411_1:RecordName(arg_411_1.leftNameTxt_.text)
				SetActive(arg_411_1.iconTrs_.gameObject, false)
				arg_411_1.callingController_:SetSelectedState("normal")

				local var_414_11 = arg_411_1:GetWordFromCfg(413161100)
				local var_414_12 = arg_411_1:FormatText(var_414_11.content)

				arg_411_1.text_.text = var_414_12

				LuaForUtil.ClearLinePrefixSymbol(arg_411_1.text_)

				local var_414_13 = 15
				local var_414_14 = utf8.len(var_414_12)
				local var_414_15 = var_414_13 <= 0 and var_414_9 or var_414_9 * (var_414_14 / var_414_13)

				if var_414_15 > 0 and var_414_9 < var_414_15 then
					arg_411_1.talkMaxDuration = var_414_15

					if var_414_15 + var_414_8 > arg_411_1.duration_ then
						arg_411_1.duration_ = var_414_15 + var_414_8
					end
				end

				arg_411_1.text_.text = var_414_12
				arg_411_1.typewritter.percent = 0

				arg_411_1.typewritter:SetDirty()
				arg_411_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161100", "story_v_out_413161.awb") ~= 0 then
					local var_414_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161100", "story_v_out_413161.awb") / 1000

					if var_414_16 + var_414_8 > arg_411_1.duration_ then
						arg_411_1.duration_ = var_414_16 + var_414_8
					end

					if var_414_11.prefab_name ~= "" and arg_411_1.actors_[var_414_11.prefab_name] ~= nil then
						local var_414_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_411_1.actors_[var_414_11.prefab_name].transform, "story_v_out_413161", "413161100", "story_v_out_413161.awb")

						arg_411_1:RecordAudio("413161100", var_414_17)
						arg_411_1:RecordAudio("413161100", var_414_17)
					else
						arg_411_1:AudioAction("play", "voice", "story_v_out_413161", "413161100", "story_v_out_413161.awb")
					end

					arg_411_1:RecordHistoryTalkVoice("story_v_out_413161", "413161100", "story_v_out_413161.awb")
				end

				arg_411_1:RecordContent(arg_411_1.text_.text)
			end

			local var_414_18 = math.max(var_414_9, arg_411_1.talkMaxDuration)

			if var_414_8 <= arg_411_1.time_ and arg_411_1.time_ < var_414_8 + var_414_18 then
				arg_411_1.typewritter.percent = (arg_411_1.time_ - var_414_8) / var_414_18

				arg_411_1.typewritter:SetDirty()
			end

			if arg_411_1.time_ >= var_414_8 + var_414_18 and arg_411_1.time_ < var_414_8 + var_414_18 + arg_414_0 then
				arg_411_1.typewritter.percent = 1

				arg_411_1.typewritter:SetDirty()
				arg_411_1:ShowNextGo(true)
			end
		end
	end,
	Play413161101 = function(arg_415_0, arg_415_1)
		arg_415_1.time_ = 0
		arg_415_1.frameCnt_ = 0
		arg_415_1.state_ = "playing"
		arg_415_1.curTalkId_ = 413161101
		arg_415_1.duration_ = 9.77

		local var_415_0 = {
			zh = 9.766,
			ja = 5.366
		}
		local var_415_1 = manager.audio:GetLocalizationFlag()

		if var_415_0[var_415_1] ~= nil then
			arg_415_1.duration_ = var_415_0[var_415_1]
		end

		SetActive(arg_415_1.tipsGo_, false)

		function arg_415_1.onSingleLineFinish_()
			arg_415_1.onSingleLineUpdate_ = nil
			arg_415_1.onSingleLineFinish_ = nil
			arg_415_1.state_ = "waiting"
		end

		function arg_415_1.playNext_(arg_417_0)
			if arg_417_0 == 1 then
				arg_415_0:Play413161102(arg_415_1)
			end
		end

		function arg_415_1.onSingleLineUpdate_(arg_418_0)
			local var_418_0 = arg_415_1.actors_["10022"]
			local var_418_1 = 0

			if var_418_1 < arg_415_1.time_ and arg_415_1.time_ <= var_418_1 + arg_418_0 and not isNil(var_418_0) and arg_415_1.var_.actorSpriteComps10022 == nil then
				arg_415_1.var_.actorSpriteComps10022 = var_418_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_418_2 = 2

			if var_418_1 <= arg_415_1.time_ and arg_415_1.time_ < var_418_1 + var_418_2 and not isNil(var_418_0) then
				local var_418_3 = (arg_415_1.time_ - var_418_1) / var_418_2

				if arg_415_1.var_.actorSpriteComps10022 then
					for iter_418_0, iter_418_1 in pairs(arg_415_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_418_1 then
							if arg_415_1.isInRecall_ then
								local var_418_4 = Mathf.Lerp(iter_418_1.color.r, arg_415_1.hightColor2.r, var_418_3)
								local var_418_5 = Mathf.Lerp(iter_418_1.color.g, arg_415_1.hightColor2.g, var_418_3)
								local var_418_6 = Mathf.Lerp(iter_418_1.color.b, arg_415_1.hightColor2.b, var_418_3)

								iter_418_1.color = Color.New(var_418_4, var_418_5, var_418_6)
							else
								local var_418_7 = Mathf.Lerp(iter_418_1.color.r, 0.5, var_418_3)

								iter_418_1.color = Color.New(var_418_7, var_418_7, var_418_7)
							end
						end
					end
				end
			end

			if arg_415_1.time_ >= var_418_1 + var_418_2 and arg_415_1.time_ < var_418_1 + var_418_2 + arg_418_0 and not isNil(var_418_0) and arg_415_1.var_.actorSpriteComps10022 then
				for iter_418_2, iter_418_3 in pairs(arg_415_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_418_3 then
						if arg_415_1.isInRecall_ then
							iter_418_3.color = arg_415_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_418_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_415_1.var_.actorSpriteComps10022 = nil
			end

			local var_418_8 = 0
			local var_418_9 = 1.125

			if var_418_8 < arg_415_1.time_ and arg_415_1.time_ <= var_418_8 + arg_418_0 then
				arg_415_1.talkMaxDuration = 0
				arg_415_1.dialogCg_.alpha = 1

				arg_415_1.dialog_:SetActive(true)
				SetActive(arg_415_1.leftNameGo_, true)

				local var_418_10 = arg_415_1:FormatText(StoryNameCfg[998].name)

				arg_415_1.leftNameTxt_.text = var_418_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_415_1.leftNameTxt_.transform)

				arg_415_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_415_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_415_1:RecordName(arg_415_1.leftNameTxt_.text)
				SetActive(arg_415_1.iconTrs_.gameObject, true)
				arg_415_1.iconController_:SetSelectedState("hero")

				arg_415_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_415_1.callingController_:SetSelectedState("normal")

				arg_415_1.keyicon_.color = Color.New(1, 1, 1)
				arg_415_1.icon_.color = Color.New(1, 1, 1)

				local var_418_11 = arg_415_1:GetWordFromCfg(413161101)
				local var_418_12 = arg_415_1:FormatText(var_418_11.content)

				arg_415_1.text_.text = var_418_12

				LuaForUtil.ClearLinePrefixSymbol(arg_415_1.text_)

				local var_418_13 = 45
				local var_418_14 = utf8.len(var_418_12)
				local var_418_15 = var_418_13 <= 0 and var_418_9 or var_418_9 * (var_418_14 / var_418_13)

				if var_418_15 > 0 and var_418_9 < var_418_15 then
					arg_415_1.talkMaxDuration = var_418_15

					if var_418_15 + var_418_8 > arg_415_1.duration_ then
						arg_415_1.duration_ = var_418_15 + var_418_8
					end
				end

				arg_415_1.text_.text = var_418_12
				arg_415_1.typewritter.percent = 0

				arg_415_1.typewritter:SetDirty()
				arg_415_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161101", "story_v_out_413161.awb") ~= 0 then
					local var_418_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161101", "story_v_out_413161.awb") / 1000

					if var_418_16 + var_418_8 > arg_415_1.duration_ then
						arg_415_1.duration_ = var_418_16 + var_418_8
					end

					if var_418_11.prefab_name ~= "" and arg_415_1.actors_[var_418_11.prefab_name] ~= nil then
						local var_418_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_415_1.actors_[var_418_11.prefab_name].transform, "story_v_out_413161", "413161101", "story_v_out_413161.awb")

						arg_415_1:RecordAudio("413161101", var_418_17)
						arg_415_1:RecordAudio("413161101", var_418_17)
					else
						arg_415_1:AudioAction("play", "voice", "story_v_out_413161", "413161101", "story_v_out_413161.awb")
					end

					arg_415_1:RecordHistoryTalkVoice("story_v_out_413161", "413161101", "story_v_out_413161.awb")
				end

				arg_415_1:RecordContent(arg_415_1.text_.text)
			end

			local var_418_18 = math.max(var_418_9, arg_415_1.talkMaxDuration)

			if var_418_8 <= arg_415_1.time_ and arg_415_1.time_ < var_418_8 + var_418_18 then
				arg_415_1.typewritter.percent = (arg_415_1.time_ - var_418_8) / var_418_18

				arg_415_1.typewritter:SetDirty()
			end

			if arg_415_1.time_ >= var_418_8 + var_418_18 and arg_415_1.time_ < var_418_8 + var_418_18 + arg_418_0 then
				arg_415_1.typewritter.percent = 1

				arg_415_1.typewritter:SetDirty()
				arg_415_1:ShowNextGo(true)
			end
		end
	end,
	Play413161102 = function(arg_419_0, arg_419_1)
		arg_419_1.time_ = 0
		arg_419_1.frameCnt_ = 0
		arg_419_1.state_ = "playing"
		arg_419_1.curTalkId_ = 413161102
		arg_419_1.duration_ = 5.6

		local var_419_0 = {
			zh = 2.7,
			ja = 5.6
		}
		local var_419_1 = manager.audio:GetLocalizationFlag()

		if var_419_0[var_419_1] ~= nil then
			arg_419_1.duration_ = var_419_0[var_419_1]
		end

		SetActive(arg_419_1.tipsGo_, false)

		function arg_419_1.onSingleLineFinish_()
			arg_419_1.onSingleLineUpdate_ = nil
			arg_419_1.onSingleLineFinish_ = nil
			arg_419_1.state_ = "waiting"
		end

		function arg_419_1.playNext_(arg_421_0)
			if arg_421_0 == 1 then
				arg_419_0:Play413161103(arg_419_1)
			end
		end

		function arg_419_1.onSingleLineUpdate_(arg_422_0)
			local var_422_0 = 0
			local var_422_1 = 0.4

			if var_422_0 < arg_419_1.time_ and arg_419_1.time_ <= var_422_0 + arg_422_0 then
				arg_419_1.talkMaxDuration = 0
				arg_419_1.dialogCg_.alpha = 1

				arg_419_1.dialog_:SetActive(true)
				SetActive(arg_419_1.leftNameGo_, true)

				local var_422_2 = arg_419_1:FormatText(StoryNameCfg[998].name)

				arg_419_1.leftNameTxt_.text = var_422_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_419_1.leftNameTxt_.transform)

				arg_419_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_419_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_419_1:RecordName(arg_419_1.leftNameTxt_.text)
				SetActive(arg_419_1.iconTrs_.gameObject, true)
				arg_419_1.iconController_:SetSelectedState("hero")

				arg_419_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_419_1.callingController_:SetSelectedState("normal")

				arg_419_1.keyicon_.color = Color.New(1, 1, 1)
				arg_419_1.icon_.color = Color.New(1, 1, 1)

				local var_422_3 = arg_419_1:GetWordFromCfg(413161102)
				local var_422_4 = arg_419_1:FormatText(var_422_3.content)

				arg_419_1.text_.text = var_422_4

				LuaForUtil.ClearLinePrefixSymbol(arg_419_1.text_)

				local var_422_5 = 16
				local var_422_6 = utf8.len(var_422_4)
				local var_422_7 = var_422_5 <= 0 and var_422_1 or var_422_1 * (var_422_6 / var_422_5)

				if var_422_7 > 0 and var_422_1 < var_422_7 then
					arg_419_1.talkMaxDuration = var_422_7

					if var_422_7 + var_422_0 > arg_419_1.duration_ then
						arg_419_1.duration_ = var_422_7 + var_422_0
					end
				end

				arg_419_1.text_.text = var_422_4
				arg_419_1.typewritter.percent = 0

				arg_419_1.typewritter:SetDirty()
				arg_419_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161102", "story_v_out_413161.awb") ~= 0 then
					local var_422_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161102", "story_v_out_413161.awb") / 1000

					if var_422_8 + var_422_0 > arg_419_1.duration_ then
						arg_419_1.duration_ = var_422_8 + var_422_0
					end

					if var_422_3.prefab_name ~= "" and arg_419_1.actors_[var_422_3.prefab_name] ~= nil then
						local var_422_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_419_1.actors_[var_422_3.prefab_name].transform, "story_v_out_413161", "413161102", "story_v_out_413161.awb")

						arg_419_1:RecordAudio("413161102", var_422_9)
						arg_419_1:RecordAudio("413161102", var_422_9)
					else
						arg_419_1:AudioAction("play", "voice", "story_v_out_413161", "413161102", "story_v_out_413161.awb")
					end

					arg_419_1:RecordHistoryTalkVoice("story_v_out_413161", "413161102", "story_v_out_413161.awb")
				end

				arg_419_1:RecordContent(arg_419_1.text_.text)
			end

			local var_422_10 = math.max(var_422_1, arg_419_1.talkMaxDuration)

			if var_422_0 <= arg_419_1.time_ and arg_419_1.time_ < var_422_0 + var_422_10 then
				arg_419_1.typewritter.percent = (arg_419_1.time_ - var_422_0) / var_422_10

				arg_419_1.typewritter:SetDirty()
			end

			if arg_419_1.time_ >= var_422_0 + var_422_10 and arg_419_1.time_ < var_422_0 + var_422_10 + arg_422_0 then
				arg_419_1.typewritter.percent = 1

				arg_419_1.typewritter:SetDirty()
				arg_419_1:ShowNextGo(true)
			end
		end
	end,
	Play413161103 = function(arg_423_0, arg_423_1)
		arg_423_1.time_ = 0
		arg_423_1.frameCnt_ = 0
		arg_423_1.state_ = "playing"
		arg_423_1.curTalkId_ = 413161103
		arg_423_1.duration_ = 10.2

		local var_423_0 = {
			zh = 7.5,
			ja = 10.2
		}
		local var_423_1 = manager.audio:GetLocalizationFlag()

		if var_423_0[var_423_1] ~= nil then
			arg_423_1.duration_ = var_423_0[var_423_1]
		end

		SetActive(arg_423_1.tipsGo_, false)

		function arg_423_1.onSingleLineFinish_()
			arg_423_1.onSingleLineUpdate_ = nil
			arg_423_1.onSingleLineFinish_ = nil
			arg_423_1.state_ = "waiting"
		end

		function arg_423_1.playNext_(arg_425_0)
			if arg_425_0 == 1 then
				arg_423_0:Play413161104(arg_423_1)
			end
		end

		function arg_423_1.onSingleLineUpdate_(arg_426_0)
			local var_426_0 = arg_423_1.actors_["10022"]
			local var_426_1 = 0

			if var_426_1 < arg_423_1.time_ and arg_423_1.time_ <= var_426_1 + arg_426_0 and not isNil(var_426_0) and arg_423_1.var_.actorSpriteComps10022 == nil then
				arg_423_1.var_.actorSpriteComps10022 = var_426_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_426_2 = 2

			if var_426_1 <= arg_423_1.time_ and arg_423_1.time_ < var_426_1 + var_426_2 and not isNil(var_426_0) then
				local var_426_3 = (arg_423_1.time_ - var_426_1) / var_426_2

				if arg_423_1.var_.actorSpriteComps10022 then
					for iter_426_0, iter_426_1 in pairs(arg_423_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_426_1 then
							if arg_423_1.isInRecall_ then
								local var_426_4 = Mathf.Lerp(iter_426_1.color.r, arg_423_1.hightColor1.r, var_426_3)
								local var_426_5 = Mathf.Lerp(iter_426_1.color.g, arg_423_1.hightColor1.g, var_426_3)
								local var_426_6 = Mathf.Lerp(iter_426_1.color.b, arg_423_1.hightColor1.b, var_426_3)

								iter_426_1.color = Color.New(var_426_4, var_426_5, var_426_6)
							else
								local var_426_7 = Mathf.Lerp(iter_426_1.color.r, 1, var_426_3)

								iter_426_1.color = Color.New(var_426_7, var_426_7, var_426_7)
							end
						end
					end
				end
			end

			if arg_423_1.time_ >= var_426_1 + var_426_2 and arg_423_1.time_ < var_426_1 + var_426_2 + arg_426_0 and not isNil(var_426_0) and arg_423_1.var_.actorSpriteComps10022 then
				for iter_426_2, iter_426_3 in pairs(arg_423_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_426_3 then
						if arg_423_1.isInRecall_ then
							iter_426_3.color = arg_423_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_426_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_423_1.var_.actorSpriteComps10022 = nil
			end

			local var_426_8 = 0
			local var_426_9 = 0.75

			if var_426_8 < arg_423_1.time_ and arg_423_1.time_ <= var_426_8 + arg_426_0 then
				arg_423_1.talkMaxDuration = 0
				arg_423_1.dialogCg_.alpha = 1

				arg_423_1.dialog_:SetActive(true)
				SetActive(arg_423_1.leftNameGo_, true)

				local var_426_10 = arg_423_1:FormatText(StoryNameCfg[614].name)

				arg_423_1.leftNameTxt_.text = var_426_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_423_1.leftNameTxt_.transform)

				arg_423_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_423_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_423_1:RecordName(arg_423_1.leftNameTxt_.text)
				SetActive(arg_423_1.iconTrs_.gameObject, false)
				arg_423_1.callingController_:SetSelectedState("normal")

				local var_426_11 = arg_423_1:GetWordFromCfg(413161103)
				local var_426_12 = arg_423_1:FormatText(var_426_11.content)

				arg_423_1.text_.text = var_426_12

				LuaForUtil.ClearLinePrefixSymbol(arg_423_1.text_)

				local var_426_13 = 30
				local var_426_14 = utf8.len(var_426_12)
				local var_426_15 = var_426_13 <= 0 and var_426_9 or var_426_9 * (var_426_14 / var_426_13)

				if var_426_15 > 0 and var_426_9 < var_426_15 then
					arg_423_1.talkMaxDuration = var_426_15

					if var_426_15 + var_426_8 > arg_423_1.duration_ then
						arg_423_1.duration_ = var_426_15 + var_426_8
					end
				end

				arg_423_1.text_.text = var_426_12
				arg_423_1.typewritter.percent = 0

				arg_423_1.typewritter:SetDirty()
				arg_423_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161103", "story_v_out_413161.awb") ~= 0 then
					local var_426_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161103", "story_v_out_413161.awb") / 1000

					if var_426_16 + var_426_8 > arg_423_1.duration_ then
						arg_423_1.duration_ = var_426_16 + var_426_8
					end

					if var_426_11.prefab_name ~= "" and arg_423_1.actors_[var_426_11.prefab_name] ~= nil then
						local var_426_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_423_1.actors_[var_426_11.prefab_name].transform, "story_v_out_413161", "413161103", "story_v_out_413161.awb")

						arg_423_1:RecordAudio("413161103", var_426_17)
						arg_423_1:RecordAudio("413161103", var_426_17)
					else
						arg_423_1:AudioAction("play", "voice", "story_v_out_413161", "413161103", "story_v_out_413161.awb")
					end

					arg_423_1:RecordHistoryTalkVoice("story_v_out_413161", "413161103", "story_v_out_413161.awb")
				end

				arg_423_1:RecordContent(arg_423_1.text_.text)
			end

			local var_426_18 = math.max(var_426_9, arg_423_1.talkMaxDuration)

			if var_426_8 <= arg_423_1.time_ and arg_423_1.time_ < var_426_8 + var_426_18 then
				arg_423_1.typewritter.percent = (arg_423_1.time_ - var_426_8) / var_426_18

				arg_423_1.typewritter:SetDirty()
			end

			if arg_423_1.time_ >= var_426_8 + var_426_18 and arg_423_1.time_ < var_426_8 + var_426_18 + arg_426_0 then
				arg_423_1.typewritter.percent = 1

				arg_423_1.typewritter:SetDirty()
				arg_423_1:ShowNextGo(true)
			end
		end
	end,
	Play413161104 = function(arg_427_0, arg_427_1)
		arg_427_1.time_ = 0
		arg_427_1.frameCnt_ = 0
		arg_427_1.state_ = "playing"
		arg_427_1.curTalkId_ = 413161104
		arg_427_1.duration_ = 12.53

		local var_427_0 = {
			zh = 7.5,
			ja = 12.533
		}
		local var_427_1 = manager.audio:GetLocalizationFlag()

		if var_427_0[var_427_1] ~= nil then
			arg_427_1.duration_ = var_427_0[var_427_1]
		end

		SetActive(arg_427_1.tipsGo_, false)

		function arg_427_1.onSingleLineFinish_()
			arg_427_1.onSingleLineUpdate_ = nil
			arg_427_1.onSingleLineFinish_ = nil
			arg_427_1.state_ = "waiting"
		end

		function arg_427_1.playNext_(arg_429_0)
			if arg_429_0 == 1 then
				arg_427_0:Play413161105(arg_427_1)
			end
		end

		function arg_427_1.onSingleLineUpdate_(arg_430_0)
			local var_430_0 = 0
			local var_430_1 = 0.75

			if var_430_0 < arg_427_1.time_ and arg_427_1.time_ <= var_430_0 + arg_430_0 then
				arg_427_1.talkMaxDuration = 0
				arg_427_1.dialogCg_.alpha = 1

				arg_427_1.dialog_:SetActive(true)
				SetActive(arg_427_1.leftNameGo_, true)

				local var_430_2 = arg_427_1:FormatText(StoryNameCfg[614].name)

				arg_427_1.leftNameTxt_.text = var_430_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_427_1.leftNameTxt_.transform)

				arg_427_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_427_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_427_1:RecordName(arg_427_1.leftNameTxt_.text)
				SetActive(arg_427_1.iconTrs_.gameObject, false)
				arg_427_1.callingController_:SetSelectedState("normal")

				local var_430_3 = arg_427_1:GetWordFromCfg(413161104)
				local var_430_4 = arg_427_1:FormatText(var_430_3.content)

				arg_427_1.text_.text = var_430_4

				LuaForUtil.ClearLinePrefixSymbol(arg_427_1.text_)

				local var_430_5 = 30
				local var_430_6 = utf8.len(var_430_4)
				local var_430_7 = var_430_5 <= 0 and var_430_1 or var_430_1 * (var_430_6 / var_430_5)

				if var_430_7 > 0 and var_430_1 < var_430_7 then
					arg_427_1.talkMaxDuration = var_430_7

					if var_430_7 + var_430_0 > arg_427_1.duration_ then
						arg_427_1.duration_ = var_430_7 + var_430_0
					end
				end

				arg_427_1.text_.text = var_430_4
				arg_427_1.typewritter.percent = 0

				arg_427_1.typewritter:SetDirty()
				arg_427_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161104", "story_v_out_413161.awb") ~= 0 then
					local var_430_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161104", "story_v_out_413161.awb") / 1000

					if var_430_8 + var_430_0 > arg_427_1.duration_ then
						arg_427_1.duration_ = var_430_8 + var_430_0
					end

					if var_430_3.prefab_name ~= "" and arg_427_1.actors_[var_430_3.prefab_name] ~= nil then
						local var_430_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_427_1.actors_[var_430_3.prefab_name].transform, "story_v_out_413161", "413161104", "story_v_out_413161.awb")

						arg_427_1:RecordAudio("413161104", var_430_9)
						arg_427_1:RecordAudio("413161104", var_430_9)
					else
						arg_427_1:AudioAction("play", "voice", "story_v_out_413161", "413161104", "story_v_out_413161.awb")
					end

					arg_427_1:RecordHistoryTalkVoice("story_v_out_413161", "413161104", "story_v_out_413161.awb")
				end

				arg_427_1:RecordContent(arg_427_1.text_.text)
			end

			local var_430_10 = math.max(var_430_1, arg_427_1.talkMaxDuration)

			if var_430_0 <= arg_427_1.time_ and arg_427_1.time_ < var_430_0 + var_430_10 then
				arg_427_1.typewritter.percent = (arg_427_1.time_ - var_430_0) / var_430_10

				arg_427_1.typewritter:SetDirty()
			end

			if arg_427_1.time_ >= var_430_0 + var_430_10 and arg_427_1.time_ < var_430_0 + var_430_10 + arg_430_0 then
				arg_427_1.typewritter.percent = 1

				arg_427_1.typewritter:SetDirty()
				arg_427_1:ShowNextGo(true)
			end
		end
	end,
	Play413161105 = function(arg_431_0, arg_431_1)
		arg_431_1.time_ = 0
		arg_431_1.frameCnt_ = 0
		arg_431_1.state_ = "playing"
		arg_431_1.curTalkId_ = 413161105
		arg_431_1.duration_ = 7.2

		local var_431_0 = {
			zh = 6,
			ja = 7.2
		}
		local var_431_1 = manager.audio:GetLocalizationFlag()

		if var_431_0[var_431_1] ~= nil then
			arg_431_1.duration_ = var_431_0[var_431_1]
		end

		SetActive(arg_431_1.tipsGo_, false)

		function arg_431_1.onSingleLineFinish_()
			arg_431_1.onSingleLineUpdate_ = nil
			arg_431_1.onSingleLineFinish_ = nil
			arg_431_1.state_ = "waiting"
		end

		function arg_431_1.playNext_(arg_433_0)
			if arg_433_0 == 1 then
				arg_431_0:Play413161106(arg_431_1)
			end
		end

		function arg_431_1.onSingleLineUpdate_(arg_434_0)
			local var_434_0 = 0
			local var_434_1 = 0.65

			if var_434_0 < arg_431_1.time_ and arg_431_1.time_ <= var_434_0 + arg_434_0 then
				arg_431_1.talkMaxDuration = 0
				arg_431_1.dialogCg_.alpha = 1

				arg_431_1.dialog_:SetActive(true)
				SetActive(arg_431_1.leftNameGo_, true)

				local var_434_2 = arg_431_1:FormatText(StoryNameCfg[614].name)

				arg_431_1.leftNameTxt_.text = var_434_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_431_1.leftNameTxt_.transform)

				arg_431_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_431_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_431_1:RecordName(arg_431_1.leftNameTxt_.text)
				SetActive(arg_431_1.iconTrs_.gameObject, false)
				arg_431_1.callingController_:SetSelectedState("normal")

				local var_434_3 = arg_431_1:GetWordFromCfg(413161105)
				local var_434_4 = arg_431_1:FormatText(var_434_3.content)

				arg_431_1.text_.text = var_434_4

				LuaForUtil.ClearLinePrefixSymbol(arg_431_1.text_)

				local var_434_5 = 26
				local var_434_6 = utf8.len(var_434_4)
				local var_434_7 = var_434_5 <= 0 and var_434_1 or var_434_1 * (var_434_6 / var_434_5)

				if var_434_7 > 0 and var_434_1 < var_434_7 then
					arg_431_1.talkMaxDuration = var_434_7

					if var_434_7 + var_434_0 > arg_431_1.duration_ then
						arg_431_1.duration_ = var_434_7 + var_434_0
					end
				end

				arg_431_1.text_.text = var_434_4
				arg_431_1.typewritter.percent = 0

				arg_431_1.typewritter:SetDirty()
				arg_431_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161105", "story_v_out_413161.awb") ~= 0 then
					local var_434_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161105", "story_v_out_413161.awb") / 1000

					if var_434_8 + var_434_0 > arg_431_1.duration_ then
						arg_431_1.duration_ = var_434_8 + var_434_0
					end

					if var_434_3.prefab_name ~= "" and arg_431_1.actors_[var_434_3.prefab_name] ~= nil then
						local var_434_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_431_1.actors_[var_434_3.prefab_name].transform, "story_v_out_413161", "413161105", "story_v_out_413161.awb")

						arg_431_1:RecordAudio("413161105", var_434_9)
						arg_431_1:RecordAudio("413161105", var_434_9)
					else
						arg_431_1:AudioAction("play", "voice", "story_v_out_413161", "413161105", "story_v_out_413161.awb")
					end

					arg_431_1:RecordHistoryTalkVoice("story_v_out_413161", "413161105", "story_v_out_413161.awb")
				end

				arg_431_1:RecordContent(arg_431_1.text_.text)
			end

			local var_434_10 = math.max(var_434_1, arg_431_1.talkMaxDuration)

			if var_434_0 <= arg_431_1.time_ and arg_431_1.time_ < var_434_0 + var_434_10 then
				arg_431_1.typewritter.percent = (arg_431_1.time_ - var_434_0) / var_434_10

				arg_431_1.typewritter:SetDirty()
			end

			if arg_431_1.time_ >= var_434_0 + var_434_10 and arg_431_1.time_ < var_434_0 + var_434_10 + arg_434_0 then
				arg_431_1.typewritter.percent = 1

				arg_431_1.typewritter:SetDirty()
				arg_431_1:ShowNextGo(true)
			end
		end
	end,
	Play413161106 = function(arg_435_0, arg_435_1)
		arg_435_1.time_ = 0
		arg_435_1.frameCnt_ = 0
		arg_435_1.state_ = "playing"
		arg_435_1.curTalkId_ = 413161106
		arg_435_1.duration_ = 6.1

		local var_435_0 = {
			zh = 3.5,
			ja = 6.1
		}
		local var_435_1 = manager.audio:GetLocalizationFlag()

		if var_435_0[var_435_1] ~= nil then
			arg_435_1.duration_ = var_435_0[var_435_1]
		end

		SetActive(arg_435_1.tipsGo_, false)

		function arg_435_1.onSingleLineFinish_()
			arg_435_1.onSingleLineUpdate_ = nil
			arg_435_1.onSingleLineFinish_ = nil
			arg_435_1.state_ = "waiting"
		end

		function arg_435_1.playNext_(arg_437_0)
			if arg_437_0 == 1 then
				arg_435_0:Play413161107(arg_435_1)
			end
		end

		function arg_435_1.onSingleLineUpdate_(arg_438_0)
			local var_438_0 = 0
			local var_438_1 = 0.45

			if var_438_0 < arg_435_1.time_ and arg_435_1.time_ <= var_438_0 + arg_438_0 then
				arg_435_1.talkMaxDuration = 0
				arg_435_1.dialogCg_.alpha = 1

				arg_435_1.dialog_:SetActive(true)
				SetActive(arg_435_1.leftNameGo_, true)

				local var_438_2 = arg_435_1:FormatText(StoryNameCfg[614].name)

				arg_435_1.leftNameTxt_.text = var_438_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_435_1.leftNameTxt_.transform)

				arg_435_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_435_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_435_1:RecordName(arg_435_1.leftNameTxt_.text)
				SetActive(arg_435_1.iconTrs_.gameObject, false)
				arg_435_1.callingController_:SetSelectedState("normal")

				local var_438_3 = arg_435_1:GetWordFromCfg(413161106)
				local var_438_4 = arg_435_1:FormatText(var_438_3.content)

				arg_435_1.text_.text = var_438_4

				LuaForUtil.ClearLinePrefixSymbol(arg_435_1.text_)

				local var_438_5 = 18
				local var_438_6 = utf8.len(var_438_4)
				local var_438_7 = var_438_5 <= 0 and var_438_1 or var_438_1 * (var_438_6 / var_438_5)

				if var_438_7 > 0 and var_438_1 < var_438_7 then
					arg_435_1.talkMaxDuration = var_438_7

					if var_438_7 + var_438_0 > arg_435_1.duration_ then
						arg_435_1.duration_ = var_438_7 + var_438_0
					end
				end

				arg_435_1.text_.text = var_438_4
				arg_435_1.typewritter.percent = 0

				arg_435_1.typewritter:SetDirty()
				arg_435_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161106", "story_v_out_413161.awb") ~= 0 then
					local var_438_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161106", "story_v_out_413161.awb") / 1000

					if var_438_8 + var_438_0 > arg_435_1.duration_ then
						arg_435_1.duration_ = var_438_8 + var_438_0
					end

					if var_438_3.prefab_name ~= "" and arg_435_1.actors_[var_438_3.prefab_name] ~= nil then
						local var_438_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_435_1.actors_[var_438_3.prefab_name].transform, "story_v_out_413161", "413161106", "story_v_out_413161.awb")

						arg_435_1:RecordAudio("413161106", var_438_9)
						arg_435_1:RecordAudio("413161106", var_438_9)
					else
						arg_435_1:AudioAction("play", "voice", "story_v_out_413161", "413161106", "story_v_out_413161.awb")
					end

					arg_435_1:RecordHistoryTalkVoice("story_v_out_413161", "413161106", "story_v_out_413161.awb")
				end

				arg_435_1:RecordContent(arg_435_1.text_.text)
			end

			local var_438_10 = math.max(var_438_1, arg_435_1.talkMaxDuration)

			if var_438_0 <= arg_435_1.time_ and arg_435_1.time_ < var_438_0 + var_438_10 then
				arg_435_1.typewritter.percent = (arg_435_1.time_ - var_438_0) / var_438_10

				arg_435_1.typewritter:SetDirty()
			end

			if arg_435_1.time_ >= var_438_0 + var_438_10 and arg_435_1.time_ < var_438_0 + var_438_10 + arg_438_0 then
				arg_435_1.typewritter.percent = 1

				arg_435_1.typewritter:SetDirty()
				arg_435_1:ShowNextGo(true)
			end
		end
	end,
	Play413161107 = function(arg_439_0, arg_439_1)
		arg_439_1.time_ = 0
		arg_439_1.frameCnt_ = 0
		arg_439_1.state_ = "playing"
		arg_439_1.curTalkId_ = 413161107
		arg_439_1.duration_ = 9.4

		local var_439_0 = {
			zh = 9.4,
			ja = 7.8
		}
		local var_439_1 = manager.audio:GetLocalizationFlag()

		if var_439_0[var_439_1] ~= nil then
			arg_439_1.duration_ = var_439_0[var_439_1]
		end

		SetActive(arg_439_1.tipsGo_, false)

		function arg_439_1.onSingleLineFinish_()
			arg_439_1.onSingleLineUpdate_ = nil
			arg_439_1.onSingleLineFinish_ = nil
			arg_439_1.state_ = "waiting"
		end

		function arg_439_1.playNext_(arg_441_0)
			if arg_441_0 == 1 then
				arg_439_0:Play413161108(arg_439_1)
			end
		end

		function arg_439_1.onSingleLineUpdate_(arg_442_0)
			local var_442_0 = arg_439_1.actors_["10022"]
			local var_442_1 = 0

			if var_442_1 < arg_439_1.time_ and arg_439_1.time_ <= var_442_1 + arg_442_0 and not isNil(var_442_0) and arg_439_1.var_.actorSpriteComps10022 == nil then
				arg_439_1.var_.actorSpriteComps10022 = var_442_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_442_2 = 2

			if var_442_1 <= arg_439_1.time_ and arg_439_1.time_ < var_442_1 + var_442_2 and not isNil(var_442_0) then
				local var_442_3 = (arg_439_1.time_ - var_442_1) / var_442_2

				if arg_439_1.var_.actorSpriteComps10022 then
					for iter_442_0, iter_442_1 in pairs(arg_439_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_442_1 then
							if arg_439_1.isInRecall_ then
								local var_442_4 = Mathf.Lerp(iter_442_1.color.r, arg_439_1.hightColor2.r, var_442_3)
								local var_442_5 = Mathf.Lerp(iter_442_1.color.g, arg_439_1.hightColor2.g, var_442_3)
								local var_442_6 = Mathf.Lerp(iter_442_1.color.b, arg_439_1.hightColor2.b, var_442_3)

								iter_442_1.color = Color.New(var_442_4, var_442_5, var_442_6)
							else
								local var_442_7 = Mathf.Lerp(iter_442_1.color.r, 0.5, var_442_3)

								iter_442_1.color = Color.New(var_442_7, var_442_7, var_442_7)
							end
						end
					end
				end
			end

			if arg_439_1.time_ >= var_442_1 + var_442_2 and arg_439_1.time_ < var_442_1 + var_442_2 + arg_442_0 and not isNil(var_442_0) and arg_439_1.var_.actorSpriteComps10022 then
				for iter_442_2, iter_442_3 in pairs(arg_439_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_442_3 then
						if arg_439_1.isInRecall_ then
							iter_442_3.color = arg_439_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_442_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_439_1.var_.actorSpriteComps10022 = nil
			end

			local var_442_8 = 0
			local var_442_9 = 1.075

			if var_442_8 < arg_439_1.time_ and arg_439_1.time_ <= var_442_8 + arg_442_0 then
				arg_439_1.talkMaxDuration = 0
				arg_439_1.dialogCg_.alpha = 1

				arg_439_1.dialog_:SetActive(true)
				SetActive(arg_439_1.leftNameGo_, true)

				local var_442_10 = arg_439_1:FormatText(StoryNameCfg[998].name)

				arg_439_1.leftNameTxt_.text = var_442_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_439_1.leftNameTxt_.transform)

				arg_439_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_439_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_439_1:RecordName(arg_439_1.leftNameTxt_.text)
				SetActive(arg_439_1.iconTrs_.gameObject, true)
				arg_439_1.iconController_:SetSelectedState("hero")

				arg_439_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_439_1.callingController_:SetSelectedState("normal")

				arg_439_1.keyicon_.color = Color.New(1, 1, 1)
				arg_439_1.icon_.color = Color.New(1, 1, 1)

				local var_442_11 = arg_439_1:GetWordFromCfg(413161107)
				local var_442_12 = arg_439_1:FormatText(var_442_11.content)

				arg_439_1.text_.text = var_442_12

				LuaForUtil.ClearLinePrefixSymbol(arg_439_1.text_)

				local var_442_13 = 43
				local var_442_14 = utf8.len(var_442_12)
				local var_442_15 = var_442_13 <= 0 and var_442_9 or var_442_9 * (var_442_14 / var_442_13)

				if var_442_15 > 0 and var_442_9 < var_442_15 then
					arg_439_1.talkMaxDuration = var_442_15

					if var_442_15 + var_442_8 > arg_439_1.duration_ then
						arg_439_1.duration_ = var_442_15 + var_442_8
					end
				end

				arg_439_1.text_.text = var_442_12
				arg_439_1.typewritter.percent = 0

				arg_439_1.typewritter:SetDirty()
				arg_439_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161107", "story_v_out_413161.awb") ~= 0 then
					local var_442_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161107", "story_v_out_413161.awb") / 1000

					if var_442_16 + var_442_8 > arg_439_1.duration_ then
						arg_439_1.duration_ = var_442_16 + var_442_8
					end

					if var_442_11.prefab_name ~= "" and arg_439_1.actors_[var_442_11.prefab_name] ~= nil then
						local var_442_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_439_1.actors_[var_442_11.prefab_name].transform, "story_v_out_413161", "413161107", "story_v_out_413161.awb")

						arg_439_1:RecordAudio("413161107", var_442_17)
						arg_439_1:RecordAudio("413161107", var_442_17)
					else
						arg_439_1:AudioAction("play", "voice", "story_v_out_413161", "413161107", "story_v_out_413161.awb")
					end

					arg_439_1:RecordHistoryTalkVoice("story_v_out_413161", "413161107", "story_v_out_413161.awb")
				end

				arg_439_1:RecordContent(arg_439_1.text_.text)
			end

			local var_442_18 = math.max(var_442_9, arg_439_1.talkMaxDuration)

			if var_442_8 <= arg_439_1.time_ and arg_439_1.time_ < var_442_8 + var_442_18 then
				arg_439_1.typewritter.percent = (arg_439_1.time_ - var_442_8) / var_442_18

				arg_439_1.typewritter:SetDirty()
			end

			if arg_439_1.time_ >= var_442_8 + var_442_18 and arg_439_1.time_ < var_442_8 + var_442_18 + arg_442_0 then
				arg_439_1.typewritter.percent = 1

				arg_439_1.typewritter:SetDirty()
				arg_439_1:ShowNextGo(true)
			end
		end
	end,
	Play413161108 = function(arg_443_0, arg_443_1)
		arg_443_1.time_ = 0
		arg_443_1.frameCnt_ = 0
		arg_443_1.state_ = "playing"
		arg_443_1.curTalkId_ = 413161108
		arg_443_1.duration_ = 8.37

		local var_443_0 = {
			zh = 3.7,
			ja = 8.366
		}
		local var_443_1 = manager.audio:GetLocalizationFlag()

		if var_443_0[var_443_1] ~= nil then
			arg_443_1.duration_ = var_443_0[var_443_1]
		end

		SetActive(arg_443_1.tipsGo_, false)

		function arg_443_1.onSingleLineFinish_()
			arg_443_1.onSingleLineUpdate_ = nil
			arg_443_1.onSingleLineFinish_ = nil
			arg_443_1.state_ = "waiting"
		end

		function arg_443_1.playNext_(arg_445_0)
			if arg_445_0 == 1 then
				arg_443_0:Play413161109(arg_443_1)
			end
		end

		function arg_443_1.onSingleLineUpdate_(arg_446_0)
			local var_446_0 = arg_443_1.actors_["10022"].transform
			local var_446_1 = 0

			if var_446_1 < arg_443_1.time_ and arg_443_1.time_ <= var_446_1 + arg_446_0 then
				arg_443_1.var_.moveOldPos10022 = var_446_0.localPosition
				var_446_0.localScale = Vector3.New(1, 1, 1)

				arg_443_1:CheckSpriteTmpPos("10022", 3)

				local var_446_2 = var_446_0.childCount

				for iter_446_0 = 0, var_446_2 - 1 do
					local var_446_3 = var_446_0:GetChild(iter_446_0)

					if var_446_3.name == "split_8" or not string.find(var_446_3.name, "split") then
						var_446_3.gameObject:SetActive(true)
					else
						var_446_3.gameObject:SetActive(false)
					end
				end
			end

			local var_446_4 = 0.001

			if var_446_1 <= arg_443_1.time_ and arg_443_1.time_ < var_446_1 + var_446_4 then
				local var_446_5 = (arg_443_1.time_ - var_446_1) / var_446_4
				local var_446_6 = Vector3.New(0, -315, -320)

				var_446_0.localPosition = Vector3.Lerp(arg_443_1.var_.moveOldPos10022, var_446_6, var_446_5)
			end

			if arg_443_1.time_ >= var_446_1 + var_446_4 and arg_443_1.time_ < var_446_1 + var_446_4 + arg_446_0 then
				var_446_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_446_7 = arg_443_1.actors_["10022"]
			local var_446_8 = 0

			if var_446_8 < arg_443_1.time_ and arg_443_1.time_ <= var_446_8 + arg_446_0 and not isNil(var_446_7) and arg_443_1.var_.actorSpriteComps10022 == nil then
				arg_443_1.var_.actorSpriteComps10022 = var_446_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_446_9 = 2

			if var_446_8 <= arg_443_1.time_ and arg_443_1.time_ < var_446_8 + var_446_9 and not isNil(var_446_7) then
				local var_446_10 = (arg_443_1.time_ - var_446_8) / var_446_9

				if arg_443_1.var_.actorSpriteComps10022 then
					for iter_446_1, iter_446_2 in pairs(arg_443_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_446_2 then
							if arg_443_1.isInRecall_ then
								local var_446_11 = Mathf.Lerp(iter_446_2.color.r, arg_443_1.hightColor1.r, var_446_10)
								local var_446_12 = Mathf.Lerp(iter_446_2.color.g, arg_443_1.hightColor1.g, var_446_10)
								local var_446_13 = Mathf.Lerp(iter_446_2.color.b, arg_443_1.hightColor1.b, var_446_10)

								iter_446_2.color = Color.New(var_446_11, var_446_12, var_446_13)
							else
								local var_446_14 = Mathf.Lerp(iter_446_2.color.r, 1, var_446_10)

								iter_446_2.color = Color.New(var_446_14, var_446_14, var_446_14)
							end
						end
					end
				end
			end

			if arg_443_1.time_ >= var_446_8 + var_446_9 and arg_443_1.time_ < var_446_8 + var_446_9 + arg_446_0 and not isNil(var_446_7) and arg_443_1.var_.actorSpriteComps10022 then
				for iter_446_3, iter_446_4 in pairs(arg_443_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_446_4 then
						if arg_443_1.isInRecall_ then
							iter_446_4.color = arg_443_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_446_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_443_1.var_.actorSpriteComps10022 = nil
			end

			local var_446_15 = 0
			local var_446_16 = 0.475

			if var_446_15 < arg_443_1.time_ and arg_443_1.time_ <= var_446_15 + arg_446_0 then
				arg_443_1.talkMaxDuration = 0
				arg_443_1.dialogCg_.alpha = 1

				arg_443_1.dialog_:SetActive(true)
				SetActive(arg_443_1.leftNameGo_, true)

				local var_446_17 = arg_443_1:FormatText(StoryNameCfg[614].name)

				arg_443_1.leftNameTxt_.text = var_446_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_443_1.leftNameTxt_.transform)

				arg_443_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_443_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_443_1:RecordName(arg_443_1.leftNameTxt_.text)
				SetActive(arg_443_1.iconTrs_.gameObject, false)
				arg_443_1.callingController_:SetSelectedState("normal")

				local var_446_18 = arg_443_1:GetWordFromCfg(413161108)
				local var_446_19 = arg_443_1:FormatText(var_446_18.content)

				arg_443_1.text_.text = var_446_19

				LuaForUtil.ClearLinePrefixSymbol(arg_443_1.text_)

				local var_446_20 = 19
				local var_446_21 = utf8.len(var_446_19)
				local var_446_22 = var_446_20 <= 0 and var_446_16 or var_446_16 * (var_446_21 / var_446_20)

				if var_446_22 > 0 and var_446_16 < var_446_22 then
					arg_443_1.talkMaxDuration = var_446_22

					if var_446_22 + var_446_15 > arg_443_1.duration_ then
						arg_443_1.duration_ = var_446_22 + var_446_15
					end
				end

				arg_443_1.text_.text = var_446_19
				arg_443_1.typewritter.percent = 0

				arg_443_1.typewritter:SetDirty()
				arg_443_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161108", "story_v_out_413161.awb") ~= 0 then
					local var_446_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161108", "story_v_out_413161.awb") / 1000

					if var_446_23 + var_446_15 > arg_443_1.duration_ then
						arg_443_1.duration_ = var_446_23 + var_446_15
					end

					if var_446_18.prefab_name ~= "" and arg_443_1.actors_[var_446_18.prefab_name] ~= nil then
						local var_446_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_443_1.actors_[var_446_18.prefab_name].transform, "story_v_out_413161", "413161108", "story_v_out_413161.awb")

						arg_443_1:RecordAudio("413161108", var_446_24)
						arg_443_1:RecordAudio("413161108", var_446_24)
					else
						arg_443_1:AudioAction("play", "voice", "story_v_out_413161", "413161108", "story_v_out_413161.awb")
					end

					arg_443_1:RecordHistoryTalkVoice("story_v_out_413161", "413161108", "story_v_out_413161.awb")
				end

				arg_443_1:RecordContent(arg_443_1.text_.text)
			end

			local var_446_25 = math.max(var_446_16, arg_443_1.talkMaxDuration)

			if var_446_15 <= arg_443_1.time_ and arg_443_1.time_ < var_446_15 + var_446_25 then
				arg_443_1.typewritter.percent = (arg_443_1.time_ - var_446_15) / var_446_25

				arg_443_1.typewritter:SetDirty()
			end

			if arg_443_1.time_ >= var_446_15 + var_446_25 and arg_443_1.time_ < var_446_15 + var_446_25 + arg_446_0 then
				arg_443_1.typewritter.percent = 1

				arg_443_1.typewritter:SetDirty()
				arg_443_1:ShowNextGo(true)
			end
		end
	end,
	Play413161109 = function(arg_447_0, arg_447_1)
		arg_447_1.time_ = 0
		arg_447_1.frameCnt_ = 0
		arg_447_1.state_ = "playing"
		arg_447_1.curTalkId_ = 413161109
		arg_447_1.duration_ = 2.67

		local var_447_0 = {
			zh = 2.666,
			ja = 1.999999999999
		}
		local var_447_1 = manager.audio:GetLocalizationFlag()

		if var_447_0[var_447_1] ~= nil then
			arg_447_1.duration_ = var_447_0[var_447_1]
		end

		SetActive(arg_447_1.tipsGo_, false)

		function arg_447_1.onSingleLineFinish_()
			arg_447_1.onSingleLineUpdate_ = nil
			arg_447_1.onSingleLineFinish_ = nil
			arg_447_1.state_ = "waiting"
		end

		function arg_447_1.playNext_(arg_449_0)
			if arg_449_0 == 1 then
				arg_447_0:Play413161110(arg_447_1)
			end
		end

		function arg_447_1.onSingleLineUpdate_(arg_450_0)
			local var_450_0 = arg_447_1.actors_["10022"]
			local var_450_1 = 0

			if var_450_1 < arg_447_1.time_ and arg_447_1.time_ <= var_450_1 + arg_450_0 and not isNil(var_450_0) and arg_447_1.var_.actorSpriteComps10022 == nil then
				arg_447_1.var_.actorSpriteComps10022 = var_450_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_450_2 = 2

			if var_450_1 <= arg_447_1.time_ and arg_447_1.time_ < var_450_1 + var_450_2 and not isNil(var_450_0) then
				local var_450_3 = (arg_447_1.time_ - var_450_1) / var_450_2

				if arg_447_1.var_.actorSpriteComps10022 then
					for iter_450_0, iter_450_1 in pairs(arg_447_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_450_1 then
							if arg_447_1.isInRecall_ then
								local var_450_4 = Mathf.Lerp(iter_450_1.color.r, arg_447_1.hightColor2.r, var_450_3)
								local var_450_5 = Mathf.Lerp(iter_450_1.color.g, arg_447_1.hightColor2.g, var_450_3)
								local var_450_6 = Mathf.Lerp(iter_450_1.color.b, arg_447_1.hightColor2.b, var_450_3)

								iter_450_1.color = Color.New(var_450_4, var_450_5, var_450_6)
							else
								local var_450_7 = Mathf.Lerp(iter_450_1.color.r, 0.5, var_450_3)

								iter_450_1.color = Color.New(var_450_7, var_450_7, var_450_7)
							end
						end
					end
				end
			end

			if arg_447_1.time_ >= var_450_1 + var_450_2 and arg_447_1.time_ < var_450_1 + var_450_2 + arg_450_0 and not isNil(var_450_0) and arg_447_1.var_.actorSpriteComps10022 then
				for iter_450_2, iter_450_3 in pairs(arg_447_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_450_3 then
						if arg_447_1.isInRecall_ then
							iter_450_3.color = arg_447_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_450_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_447_1.var_.actorSpriteComps10022 = nil
			end

			local var_450_8 = 0
			local var_450_9 = 0.225

			if var_450_8 < arg_447_1.time_ and arg_447_1.time_ <= var_450_8 + arg_450_0 then
				arg_447_1.talkMaxDuration = 0
				arg_447_1.dialogCg_.alpha = 1

				arg_447_1.dialog_:SetActive(true)
				SetActive(arg_447_1.leftNameGo_, true)

				local var_450_10 = arg_447_1:FormatText(StoryNameCfg[998].name)

				arg_447_1.leftNameTxt_.text = var_450_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_447_1.leftNameTxt_.transform)

				arg_447_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_447_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_447_1:RecordName(arg_447_1.leftNameTxt_.text)
				SetActive(arg_447_1.iconTrs_.gameObject, true)
				arg_447_1.iconController_:SetSelectedState("hero")

				arg_447_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_447_1.callingController_:SetSelectedState("normal")

				arg_447_1.keyicon_.color = Color.New(1, 1, 1)
				arg_447_1.icon_.color = Color.New(1, 1, 1)

				local var_450_11 = arg_447_1:GetWordFromCfg(413161109)
				local var_450_12 = arg_447_1:FormatText(var_450_11.content)

				arg_447_1.text_.text = var_450_12

				LuaForUtil.ClearLinePrefixSymbol(arg_447_1.text_)

				local var_450_13 = 9
				local var_450_14 = utf8.len(var_450_12)
				local var_450_15 = var_450_13 <= 0 and var_450_9 or var_450_9 * (var_450_14 / var_450_13)

				if var_450_15 > 0 and var_450_9 < var_450_15 then
					arg_447_1.talkMaxDuration = var_450_15

					if var_450_15 + var_450_8 > arg_447_1.duration_ then
						arg_447_1.duration_ = var_450_15 + var_450_8
					end
				end

				arg_447_1.text_.text = var_450_12
				arg_447_1.typewritter.percent = 0

				arg_447_1.typewritter:SetDirty()
				arg_447_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161109", "story_v_out_413161.awb") ~= 0 then
					local var_450_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161109", "story_v_out_413161.awb") / 1000

					if var_450_16 + var_450_8 > arg_447_1.duration_ then
						arg_447_1.duration_ = var_450_16 + var_450_8
					end

					if var_450_11.prefab_name ~= "" and arg_447_1.actors_[var_450_11.prefab_name] ~= nil then
						local var_450_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_447_1.actors_[var_450_11.prefab_name].transform, "story_v_out_413161", "413161109", "story_v_out_413161.awb")

						arg_447_1:RecordAudio("413161109", var_450_17)
						arg_447_1:RecordAudio("413161109", var_450_17)
					else
						arg_447_1:AudioAction("play", "voice", "story_v_out_413161", "413161109", "story_v_out_413161.awb")
					end

					arg_447_1:RecordHistoryTalkVoice("story_v_out_413161", "413161109", "story_v_out_413161.awb")
				end

				arg_447_1:RecordContent(arg_447_1.text_.text)
			end

			local var_450_18 = math.max(var_450_9, arg_447_1.talkMaxDuration)

			if var_450_8 <= arg_447_1.time_ and arg_447_1.time_ < var_450_8 + var_450_18 then
				arg_447_1.typewritter.percent = (arg_447_1.time_ - var_450_8) / var_450_18

				arg_447_1.typewritter:SetDirty()
			end

			if arg_447_1.time_ >= var_450_8 + var_450_18 and arg_447_1.time_ < var_450_8 + var_450_18 + arg_450_0 then
				arg_447_1.typewritter.percent = 1

				arg_447_1.typewritter:SetDirty()
				arg_447_1:ShowNextGo(true)
			end
		end
	end,
	Play413161110 = function(arg_451_0, arg_451_1)
		arg_451_1.time_ = 0
		arg_451_1.frameCnt_ = 0
		arg_451_1.state_ = "playing"
		arg_451_1.curTalkId_ = 413161110
		arg_451_1.duration_ = 5

		SetActive(arg_451_1.tipsGo_, false)

		function arg_451_1.onSingleLineFinish_()
			arg_451_1.onSingleLineUpdate_ = nil
			arg_451_1.onSingleLineFinish_ = nil
			arg_451_1.state_ = "waiting"
		end

		function arg_451_1.playNext_(arg_453_0)
			if arg_453_0 == 1 then
				arg_451_0:Play413161111(arg_451_1)
			end
		end

		function arg_451_1.onSingleLineUpdate_(arg_454_0)
			local var_454_0 = arg_451_1.actors_["10022"].transform
			local var_454_1 = 0

			if var_454_1 < arg_451_1.time_ and arg_451_1.time_ <= var_454_1 + arg_454_0 then
				arg_451_1.var_.moveOldPos10022 = var_454_0.localPosition
				var_454_0.localScale = Vector3.New(1, 1, 1)

				arg_451_1:CheckSpriteTmpPos("10022", 7)

				local var_454_2 = var_454_0.childCount

				for iter_454_0 = 0, var_454_2 - 1 do
					local var_454_3 = var_454_0:GetChild(iter_454_0)

					if var_454_3.name == "" or not string.find(var_454_3.name, "split") then
						var_454_3.gameObject:SetActive(true)
					else
						var_454_3.gameObject:SetActive(false)
					end
				end
			end

			local var_454_4 = 0.001

			if var_454_1 <= arg_451_1.time_ and arg_451_1.time_ < var_454_1 + var_454_4 then
				local var_454_5 = (arg_451_1.time_ - var_454_1) / var_454_4
				local var_454_6 = Vector3.New(0, -2000, 0)

				var_454_0.localPosition = Vector3.Lerp(arg_451_1.var_.moveOldPos10022, var_454_6, var_454_5)
			end

			if arg_451_1.time_ >= var_454_1 + var_454_4 and arg_451_1.time_ < var_454_1 + var_454_4 + arg_454_0 then
				var_454_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_454_7 = 0
			local var_454_8 = 0.975

			if var_454_7 < arg_451_1.time_ and arg_451_1.time_ <= var_454_7 + arg_454_0 then
				arg_451_1.talkMaxDuration = 0
				arg_451_1.dialogCg_.alpha = 1

				arg_451_1.dialog_:SetActive(true)
				SetActive(arg_451_1.leftNameGo_, false)

				arg_451_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_451_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_451_1:RecordName(arg_451_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_451_1.iconTrs_.gameObject, false)
				arg_451_1.callingController_:SetSelectedState("normal")

				local var_454_9 = arg_451_1:GetWordFromCfg(413161110)
				local var_454_10 = arg_451_1:FormatText(var_454_9.content)

				arg_451_1.text_.text = var_454_10

				LuaForUtil.ClearLinePrefixSymbol(arg_451_1.text_)

				local var_454_11 = 39
				local var_454_12 = utf8.len(var_454_10)
				local var_454_13 = var_454_11 <= 0 and var_454_8 or var_454_8 * (var_454_12 / var_454_11)

				if var_454_13 > 0 and var_454_8 < var_454_13 then
					arg_451_1.talkMaxDuration = var_454_13

					if var_454_13 + var_454_7 > arg_451_1.duration_ then
						arg_451_1.duration_ = var_454_13 + var_454_7
					end
				end

				arg_451_1.text_.text = var_454_10
				arg_451_1.typewritter.percent = 0

				arg_451_1.typewritter:SetDirty()
				arg_451_1:ShowNextGo(false)
				arg_451_1:RecordContent(arg_451_1.text_.text)
			end

			local var_454_14 = math.max(var_454_8, arg_451_1.talkMaxDuration)

			if var_454_7 <= arg_451_1.time_ and arg_451_1.time_ < var_454_7 + var_454_14 then
				arg_451_1.typewritter.percent = (arg_451_1.time_ - var_454_7) / var_454_14

				arg_451_1.typewritter:SetDirty()
			end

			if arg_451_1.time_ >= var_454_7 + var_454_14 and arg_451_1.time_ < var_454_7 + var_454_14 + arg_454_0 then
				arg_451_1.typewritter.percent = 1

				arg_451_1.typewritter:SetDirty()
				arg_451_1:ShowNextGo(true)
			end
		end
	end,
	Play413161111 = function(arg_455_0, arg_455_1)
		arg_455_1.time_ = 0
		arg_455_1.frameCnt_ = 0
		arg_455_1.state_ = "playing"
		arg_455_1.curTalkId_ = 413161111
		arg_455_1.duration_ = 5

		local var_455_0 = {
			zh = 4.633,
			ja = 5
		}
		local var_455_1 = manager.audio:GetLocalizationFlag()

		if var_455_0[var_455_1] ~= nil then
			arg_455_1.duration_ = var_455_0[var_455_1]
		end

		SetActive(arg_455_1.tipsGo_, false)

		function arg_455_1.onSingleLineFinish_()
			arg_455_1.onSingleLineUpdate_ = nil
			arg_455_1.onSingleLineFinish_ = nil
			arg_455_1.state_ = "waiting"
		end

		function arg_455_1.playNext_(arg_457_0)
			if arg_457_0 == 1 then
				arg_455_0:Play413161112(arg_455_1)
			end
		end

		function arg_455_1.onSingleLineUpdate_(arg_458_0)
			local var_458_0 = arg_455_1.actors_["10022"].transform
			local var_458_1 = 0

			if var_458_1 < arg_455_1.time_ and arg_455_1.time_ <= var_458_1 + arg_458_0 then
				arg_455_1.var_.moveOldPos10022 = var_458_0.localPosition
				var_458_0.localScale = Vector3.New(1, 1, 1)

				arg_455_1:CheckSpriteTmpPos("10022", 3)

				local var_458_2 = var_458_0.childCount

				for iter_458_0 = 0, var_458_2 - 1 do
					local var_458_3 = var_458_0:GetChild(iter_458_0)

					if var_458_3.name == "split_6" or not string.find(var_458_3.name, "split") then
						var_458_3.gameObject:SetActive(true)
					else
						var_458_3.gameObject:SetActive(false)
					end
				end
			end

			local var_458_4 = 0.001

			if var_458_1 <= arg_455_1.time_ and arg_455_1.time_ < var_458_1 + var_458_4 then
				local var_458_5 = (arg_455_1.time_ - var_458_1) / var_458_4
				local var_458_6 = Vector3.New(0, -315, -320)

				var_458_0.localPosition = Vector3.Lerp(arg_455_1.var_.moveOldPos10022, var_458_6, var_458_5)
			end

			if arg_455_1.time_ >= var_458_1 + var_458_4 and arg_455_1.time_ < var_458_1 + var_458_4 + arg_458_0 then
				var_458_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_458_7 = arg_455_1.actors_["10022"]
			local var_458_8 = 0

			if var_458_8 < arg_455_1.time_ and arg_455_1.time_ <= var_458_8 + arg_458_0 and not isNil(var_458_7) and arg_455_1.var_.actorSpriteComps10022 == nil then
				arg_455_1.var_.actorSpriteComps10022 = var_458_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_458_9 = 2

			if var_458_8 <= arg_455_1.time_ and arg_455_1.time_ < var_458_8 + var_458_9 and not isNil(var_458_7) then
				local var_458_10 = (arg_455_1.time_ - var_458_8) / var_458_9

				if arg_455_1.var_.actorSpriteComps10022 then
					for iter_458_1, iter_458_2 in pairs(arg_455_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_458_2 then
							if arg_455_1.isInRecall_ then
								local var_458_11 = Mathf.Lerp(iter_458_2.color.r, arg_455_1.hightColor1.r, var_458_10)
								local var_458_12 = Mathf.Lerp(iter_458_2.color.g, arg_455_1.hightColor1.g, var_458_10)
								local var_458_13 = Mathf.Lerp(iter_458_2.color.b, arg_455_1.hightColor1.b, var_458_10)

								iter_458_2.color = Color.New(var_458_11, var_458_12, var_458_13)
							else
								local var_458_14 = Mathf.Lerp(iter_458_2.color.r, 1, var_458_10)

								iter_458_2.color = Color.New(var_458_14, var_458_14, var_458_14)
							end
						end
					end
				end
			end

			if arg_455_1.time_ >= var_458_8 + var_458_9 and arg_455_1.time_ < var_458_8 + var_458_9 + arg_458_0 and not isNil(var_458_7) and arg_455_1.var_.actorSpriteComps10022 then
				for iter_458_3, iter_458_4 in pairs(arg_455_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_458_4 then
						if arg_455_1.isInRecall_ then
							iter_458_4.color = arg_455_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_458_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_455_1.var_.actorSpriteComps10022 = nil
			end

			local var_458_15 = 0
			local var_458_16 = 0.475

			if var_458_15 < arg_455_1.time_ and arg_455_1.time_ <= var_458_15 + arg_458_0 then
				arg_455_1.talkMaxDuration = 0
				arg_455_1.dialogCg_.alpha = 1

				arg_455_1.dialog_:SetActive(true)
				SetActive(arg_455_1.leftNameGo_, true)

				local var_458_17 = arg_455_1:FormatText(StoryNameCfg[614].name)

				arg_455_1.leftNameTxt_.text = var_458_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_455_1.leftNameTxt_.transform)

				arg_455_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_455_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_455_1:RecordName(arg_455_1.leftNameTxt_.text)
				SetActive(arg_455_1.iconTrs_.gameObject, false)
				arg_455_1.callingController_:SetSelectedState("normal")

				local var_458_18 = arg_455_1:GetWordFromCfg(413161111)
				local var_458_19 = arg_455_1:FormatText(var_458_18.content)

				arg_455_1.text_.text = var_458_19

				LuaForUtil.ClearLinePrefixSymbol(arg_455_1.text_)

				local var_458_20 = 19
				local var_458_21 = utf8.len(var_458_19)
				local var_458_22 = var_458_20 <= 0 and var_458_16 or var_458_16 * (var_458_21 / var_458_20)

				if var_458_22 > 0 and var_458_16 < var_458_22 then
					arg_455_1.talkMaxDuration = var_458_22

					if var_458_22 + var_458_15 > arg_455_1.duration_ then
						arg_455_1.duration_ = var_458_22 + var_458_15
					end
				end

				arg_455_1.text_.text = var_458_19
				arg_455_1.typewritter.percent = 0

				arg_455_1.typewritter:SetDirty()
				arg_455_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161111", "story_v_out_413161.awb") ~= 0 then
					local var_458_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161111", "story_v_out_413161.awb") / 1000

					if var_458_23 + var_458_15 > arg_455_1.duration_ then
						arg_455_1.duration_ = var_458_23 + var_458_15
					end

					if var_458_18.prefab_name ~= "" and arg_455_1.actors_[var_458_18.prefab_name] ~= nil then
						local var_458_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_455_1.actors_[var_458_18.prefab_name].transform, "story_v_out_413161", "413161111", "story_v_out_413161.awb")

						arg_455_1:RecordAudio("413161111", var_458_24)
						arg_455_1:RecordAudio("413161111", var_458_24)
					else
						arg_455_1:AudioAction("play", "voice", "story_v_out_413161", "413161111", "story_v_out_413161.awb")
					end

					arg_455_1:RecordHistoryTalkVoice("story_v_out_413161", "413161111", "story_v_out_413161.awb")
				end

				arg_455_1:RecordContent(arg_455_1.text_.text)
			end

			local var_458_25 = math.max(var_458_16, arg_455_1.talkMaxDuration)

			if var_458_15 <= arg_455_1.time_ and arg_455_1.time_ < var_458_15 + var_458_25 then
				arg_455_1.typewritter.percent = (arg_455_1.time_ - var_458_15) / var_458_25

				arg_455_1.typewritter:SetDirty()
			end

			if arg_455_1.time_ >= var_458_15 + var_458_25 and arg_455_1.time_ < var_458_15 + var_458_25 + arg_458_0 then
				arg_455_1.typewritter.percent = 1

				arg_455_1.typewritter:SetDirty()
				arg_455_1:ShowNextGo(true)
			end
		end
	end,
	Play413161112 = function(arg_459_0, arg_459_1)
		arg_459_1.time_ = 0
		arg_459_1.frameCnt_ = 0
		arg_459_1.state_ = "playing"
		arg_459_1.curTalkId_ = 413161112
		arg_459_1.duration_ = 5

		SetActive(arg_459_1.tipsGo_, false)

		function arg_459_1.onSingleLineFinish_()
			arg_459_1.onSingleLineUpdate_ = nil
			arg_459_1.onSingleLineFinish_ = nil
			arg_459_1.state_ = "waiting"
		end

		function arg_459_1.playNext_(arg_461_0)
			if arg_461_0 == 1 then
				arg_459_0:Play413161113(arg_459_1)
			end
		end

		function arg_459_1.onSingleLineUpdate_(arg_462_0)
			local var_462_0 = arg_459_1.actors_["10022"].transform
			local var_462_1 = 0

			if var_462_1 < arg_459_1.time_ and arg_459_1.time_ <= var_462_1 + arg_462_0 then
				arg_459_1.var_.moveOldPos10022 = var_462_0.localPosition
				var_462_0.localScale = Vector3.New(1, 1, 1)

				arg_459_1:CheckSpriteTmpPos("10022", 7)

				local var_462_2 = var_462_0.childCount

				for iter_462_0 = 0, var_462_2 - 1 do
					local var_462_3 = var_462_0:GetChild(iter_462_0)

					if var_462_3.name == "" or not string.find(var_462_3.name, "split") then
						var_462_3.gameObject:SetActive(true)
					else
						var_462_3.gameObject:SetActive(false)
					end
				end
			end

			local var_462_4 = 0.001

			if var_462_1 <= arg_459_1.time_ and arg_459_1.time_ < var_462_1 + var_462_4 then
				local var_462_5 = (arg_459_1.time_ - var_462_1) / var_462_4
				local var_462_6 = Vector3.New(0, -2000, 0)

				var_462_0.localPosition = Vector3.Lerp(arg_459_1.var_.moveOldPos10022, var_462_6, var_462_5)
			end

			if arg_459_1.time_ >= var_462_1 + var_462_4 and arg_459_1.time_ < var_462_1 + var_462_4 + arg_462_0 then
				var_462_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_462_7 = 0
			local var_462_8 = 0.975

			if var_462_7 < arg_459_1.time_ and arg_459_1.time_ <= var_462_7 + arg_462_0 then
				arg_459_1.talkMaxDuration = 0
				arg_459_1.dialogCg_.alpha = 1

				arg_459_1.dialog_:SetActive(true)
				SetActive(arg_459_1.leftNameGo_, false)

				arg_459_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_459_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_459_1:RecordName(arg_459_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_459_1.iconTrs_.gameObject, false)
				arg_459_1.callingController_:SetSelectedState("normal")

				local var_462_9 = arg_459_1:GetWordFromCfg(413161112)
				local var_462_10 = arg_459_1:FormatText(var_462_9.content)

				arg_459_1.text_.text = var_462_10

				LuaForUtil.ClearLinePrefixSymbol(arg_459_1.text_)

				local var_462_11 = 39
				local var_462_12 = utf8.len(var_462_10)
				local var_462_13 = var_462_11 <= 0 and var_462_8 or var_462_8 * (var_462_12 / var_462_11)

				if var_462_13 > 0 and var_462_8 < var_462_13 then
					arg_459_1.talkMaxDuration = var_462_13

					if var_462_13 + var_462_7 > arg_459_1.duration_ then
						arg_459_1.duration_ = var_462_13 + var_462_7
					end
				end

				arg_459_1.text_.text = var_462_10
				arg_459_1.typewritter.percent = 0

				arg_459_1.typewritter:SetDirty()
				arg_459_1:ShowNextGo(false)
				arg_459_1:RecordContent(arg_459_1.text_.text)
			end

			local var_462_14 = math.max(var_462_8, arg_459_1.talkMaxDuration)

			if var_462_7 <= arg_459_1.time_ and arg_459_1.time_ < var_462_7 + var_462_14 then
				arg_459_1.typewritter.percent = (arg_459_1.time_ - var_462_7) / var_462_14

				arg_459_1.typewritter:SetDirty()
			end

			if arg_459_1.time_ >= var_462_7 + var_462_14 and arg_459_1.time_ < var_462_7 + var_462_14 + arg_462_0 then
				arg_459_1.typewritter.percent = 1

				arg_459_1.typewritter:SetDirty()
				arg_459_1:ShowNextGo(true)
			end
		end
	end,
	Play413161113 = function(arg_463_0, arg_463_1)
		arg_463_1.time_ = 0
		arg_463_1.frameCnt_ = 0
		arg_463_1.state_ = "playing"
		arg_463_1.curTalkId_ = 413161113
		arg_463_1.duration_ = 7.1

		local var_463_0 = {
			zh = 6.4,
			ja = 7.1
		}
		local var_463_1 = manager.audio:GetLocalizationFlag()

		if var_463_0[var_463_1] ~= nil then
			arg_463_1.duration_ = var_463_0[var_463_1]
		end

		SetActive(arg_463_1.tipsGo_, false)

		function arg_463_1.onSingleLineFinish_()
			arg_463_1.onSingleLineUpdate_ = nil
			arg_463_1.onSingleLineFinish_ = nil
			arg_463_1.state_ = "waiting"
		end

		function arg_463_1.playNext_(arg_465_0)
			if arg_465_0 == 1 then
				arg_463_0:Play413161114(arg_463_1)
			end
		end

		function arg_463_1.onSingleLineUpdate_(arg_466_0)
			local var_466_0 = arg_463_1.actors_["10022"].transform
			local var_466_1 = 0

			if var_466_1 < arg_463_1.time_ and arg_463_1.time_ <= var_466_1 + arg_466_0 then
				arg_463_1.var_.moveOldPos10022 = var_466_0.localPosition
				var_466_0.localScale = Vector3.New(1, 1, 1)

				arg_463_1:CheckSpriteTmpPos("10022", 3)

				local var_466_2 = var_466_0.childCount

				for iter_466_0 = 0, var_466_2 - 1 do
					local var_466_3 = var_466_0:GetChild(iter_466_0)

					if var_466_3.name == "split_3" or not string.find(var_466_3.name, "split") then
						var_466_3.gameObject:SetActive(true)
					else
						var_466_3.gameObject:SetActive(false)
					end
				end
			end

			local var_466_4 = 0.001

			if var_466_1 <= arg_463_1.time_ and arg_463_1.time_ < var_466_1 + var_466_4 then
				local var_466_5 = (arg_463_1.time_ - var_466_1) / var_466_4
				local var_466_6 = Vector3.New(0, -315, -320)

				var_466_0.localPosition = Vector3.Lerp(arg_463_1.var_.moveOldPos10022, var_466_6, var_466_5)
			end

			if arg_463_1.time_ >= var_466_1 + var_466_4 and arg_463_1.time_ < var_466_1 + var_466_4 + arg_466_0 then
				var_466_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_466_7 = arg_463_1.actors_["10022"]
			local var_466_8 = 0

			if var_466_8 < arg_463_1.time_ and arg_463_1.time_ <= var_466_8 + arg_466_0 and not isNil(var_466_7) and arg_463_1.var_.actorSpriteComps10022 == nil then
				arg_463_1.var_.actorSpriteComps10022 = var_466_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_466_9 = 2

			if var_466_8 <= arg_463_1.time_ and arg_463_1.time_ < var_466_8 + var_466_9 and not isNil(var_466_7) then
				local var_466_10 = (arg_463_1.time_ - var_466_8) / var_466_9

				if arg_463_1.var_.actorSpriteComps10022 then
					for iter_466_1, iter_466_2 in pairs(arg_463_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_466_2 then
							if arg_463_1.isInRecall_ then
								local var_466_11 = Mathf.Lerp(iter_466_2.color.r, arg_463_1.hightColor1.r, var_466_10)
								local var_466_12 = Mathf.Lerp(iter_466_2.color.g, arg_463_1.hightColor1.g, var_466_10)
								local var_466_13 = Mathf.Lerp(iter_466_2.color.b, arg_463_1.hightColor1.b, var_466_10)

								iter_466_2.color = Color.New(var_466_11, var_466_12, var_466_13)
							else
								local var_466_14 = Mathf.Lerp(iter_466_2.color.r, 1, var_466_10)

								iter_466_2.color = Color.New(var_466_14, var_466_14, var_466_14)
							end
						end
					end
				end
			end

			if arg_463_1.time_ >= var_466_8 + var_466_9 and arg_463_1.time_ < var_466_8 + var_466_9 + arg_466_0 and not isNil(var_466_7) and arg_463_1.var_.actorSpriteComps10022 then
				for iter_466_3, iter_466_4 in pairs(arg_463_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_466_4 then
						if arg_463_1.isInRecall_ then
							iter_466_4.color = arg_463_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_466_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_463_1.var_.actorSpriteComps10022 = nil
			end

			local var_466_15 = 0
			local var_466_16 = 0.675

			if var_466_15 < arg_463_1.time_ and arg_463_1.time_ <= var_466_15 + arg_466_0 then
				arg_463_1.talkMaxDuration = 0
				arg_463_1.dialogCg_.alpha = 1

				arg_463_1.dialog_:SetActive(true)
				SetActive(arg_463_1.leftNameGo_, true)

				local var_466_17 = arg_463_1:FormatText(StoryNameCfg[614].name)

				arg_463_1.leftNameTxt_.text = var_466_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_463_1.leftNameTxt_.transform)

				arg_463_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_463_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_463_1:RecordName(arg_463_1.leftNameTxt_.text)
				SetActive(arg_463_1.iconTrs_.gameObject, false)
				arg_463_1.callingController_:SetSelectedState("normal")

				local var_466_18 = arg_463_1:GetWordFromCfg(413161113)
				local var_466_19 = arg_463_1:FormatText(var_466_18.content)

				arg_463_1.text_.text = var_466_19

				LuaForUtil.ClearLinePrefixSymbol(arg_463_1.text_)

				local var_466_20 = 27
				local var_466_21 = utf8.len(var_466_19)
				local var_466_22 = var_466_20 <= 0 and var_466_16 or var_466_16 * (var_466_21 / var_466_20)

				if var_466_22 > 0 and var_466_16 < var_466_22 then
					arg_463_1.talkMaxDuration = var_466_22

					if var_466_22 + var_466_15 > arg_463_1.duration_ then
						arg_463_1.duration_ = var_466_22 + var_466_15
					end
				end

				arg_463_1.text_.text = var_466_19
				arg_463_1.typewritter.percent = 0

				arg_463_1.typewritter:SetDirty()
				arg_463_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161113", "story_v_out_413161.awb") ~= 0 then
					local var_466_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161113", "story_v_out_413161.awb") / 1000

					if var_466_23 + var_466_15 > arg_463_1.duration_ then
						arg_463_1.duration_ = var_466_23 + var_466_15
					end

					if var_466_18.prefab_name ~= "" and arg_463_1.actors_[var_466_18.prefab_name] ~= nil then
						local var_466_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_463_1.actors_[var_466_18.prefab_name].transform, "story_v_out_413161", "413161113", "story_v_out_413161.awb")

						arg_463_1:RecordAudio("413161113", var_466_24)
						arg_463_1:RecordAudio("413161113", var_466_24)
					else
						arg_463_1:AudioAction("play", "voice", "story_v_out_413161", "413161113", "story_v_out_413161.awb")
					end

					arg_463_1:RecordHistoryTalkVoice("story_v_out_413161", "413161113", "story_v_out_413161.awb")
				end

				arg_463_1:RecordContent(arg_463_1.text_.text)
			end

			local var_466_25 = math.max(var_466_16, arg_463_1.talkMaxDuration)

			if var_466_15 <= arg_463_1.time_ and arg_463_1.time_ < var_466_15 + var_466_25 then
				arg_463_1.typewritter.percent = (arg_463_1.time_ - var_466_15) / var_466_25

				arg_463_1.typewritter:SetDirty()
			end

			if arg_463_1.time_ >= var_466_15 + var_466_25 and arg_463_1.time_ < var_466_15 + var_466_25 + arg_466_0 then
				arg_463_1.typewritter.percent = 1

				arg_463_1.typewritter:SetDirty()
				arg_463_1:ShowNextGo(true)
			end
		end
	end,
	Play413161114 = function(arg_467_0, arg_467_1)
		arg_467_1.time_ = 0
		arg_467_1.frameCnt_ = 0
		arg_467_1.state_ = "playing"
		arg_467_1.curTalkId_ = 413161114
		arg_467_1.duration_ = 9.4

		local var_467_0 = {
			zh = 4.766,
			ja = 9.4
		}
		local var_467_1 = manager.audio:GetLocalizationFlag()

		if var_467_0[var_467_1] ~= nil then
			arg_467_1.duration_ = var_467_0[var_467_1]
		end

		SetActive(arg_467_1.tipsGo_, false)

		function arg_467_1.onSingleLineFinish_()
			arg_467_1.onSingleLineUpdate_ = nil
			arg_467_1.onSingleLineFinish_ = nil
			arg_467_1.state_ = "waiting"
		end

		function arg_467_1.playNext_(arg_469_0)
			if arg_469_0 == 1 then
				arg_467_0:Play413161115(arg_467_1)
			end
		end

		function arg_467_1.onSingleLineUpdate_(arg_470_0)
			local var_470_0 = arg_467_1.actors_["10022"]
			local var_470_1 = 0

			if var_470_1 < arg_467_1.time_ and arg_467_1.time_ <= var_470_1 + arg_470_0 and not isNil(var_470_0) and arg_467_1.var_.actorSpriteComps10022 == nil then
				arg_467_1.var_.actorSpriteComps10022 = var_470_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_470_2 = 2

			if var_470_1 <= arg_467_1.time_ and arg_467_1.time_ < var_470_1 + var_470_2 and not isNil(var_470_0) then
				local var_470_3 = (arg_467_1.time_ - var_470_1) / var_470_2

				if arg_467_1.var_.actorSpriteComps10022 then
					for iter_470_0, iter_470_1 in pairs(arg_467_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_470_1 then
							if arg_467_1.isInRecall_ then
								local var_470_4 = Mathf.Lerp(iter_470_1.color.r, arg_467_1.hightColor2.r, var_470_3)
								local var_470_5 = Mathf.Lerp(iter_470_1.color.g, arg_467_1.hightColor2.g, var_470_3)
								local var_470_6 = Mathf.Lerp(iter_470_1.color.b, arg_467_1.hightColor2.b, var_470_3)

								iter_470_1.color = Color.New(var_470_4, var_470_5, var_470_6)
							else
								local var_470_7 = Mathf.Lerp(iter_470_1.color.r, 0.5, var_470_3)

								iter_470_1.color = Color.New(var_470_7, var_470_7, var_470_7)
							end
						end
					end
				end
			end

			if arg_467_1.time_ >= var_470_1 + var_470_2 and arg_467_1.time_ < var_470_1 + var_470_2 + arg_470_0 and not isNil(var_470_0) and arg_467_1.var_.actorSpriteComps10022 then
				for iter_470_2, iter_470_3 in pairs(arg_467_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_470_3 then
						if arg_467_1.isInRecall_ then
							iter_470_3.color = arg_467_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_470_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_467_1.var_.actorSpriteComps10022 = nil
			end

			local var_470_8 = 0
			local var_470_9 = 0.5

			if var_470_8 < arg_467_1.time_ and arg_467_1.time_ <= var_470_8 + arg_470_0 then
				arg_467_1.talkMaxDuration = 0
				arg_467_1.dialogCg_.alpha = 1

				arg_467_1.dialog_:SetActive(true)
				SetActive(arg_467_1.leftNameGo_, true)

				local var_470_10 = arg_467_1:FormatText(StoryNameCfg[998].name)

				arg_467_1.leftNameTxt_.text = var_470_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_467_1.leftNameTxt_.transform)

				arg_467_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_467_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_467_1:RecordName(arg_467_1.leftNameTxt_.text)
				SetActive(arg_467_1.iconTrs_.gameObject, true)
				arg_467_1.iconController_:SetSelectedState("hero")

				arg_467_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_467_1.callingController_:SetSelectedState("normal")

				arg_467_1.keyicon_.color = Color.New(1, 1, 1)
				arg_467_1.icon_.color = Color.New(1, 1, 1)

				local var_470_11 = arg_467_1:GetWordFromCfg(413161114)
				local var_470_12 = arg_467_1:FormatText(var_470_11.content)

				arg_467_1.text_.text = var_470_12

				LuaForUtil.ClearLinePrefixSymbol(arg_467_1.text_)

				local var_470_13 = 20
				local var_470_14 = utf8.len(var_470_12)
				local var_470_15 = var_470_13 <= 0 and var_470_9 or var_470_9 * (var_470_14 / var_470_13)

				if var_470_15 > 0 and var_470_9 < var_470_15 then
					arg_467_1.talkMaxDuration = var_470_15

					if var_470_15 + var_470_8 > arg_467_1.duration_ then
						arg_467_1.duration_ = var_470_15 + var_470_8
					end
				end

				arg_467_1.text_.text = var_470_12
				arg_467_1.typewritter.percent = 0

				arg_467_1.typewritter:SetDirty()
				arg_467_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161114", "story_v_out_413161.awb") ~= 0 then
					local var_470_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161114", "story_v_out_413161.awb") / 1000

					if var_470_16 + var_470_8 > arg_467_1.duration_ then
						arg_467_1.duration_ = var_470_16 + var_470_8
					end

					if var_470_11.prefab_name ~= "" and arg_467_1.actors_[var_470_11.prefab_name] ~= nil then
						local var_470_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_467_1.actors_[var_470_11.prefab_name].transform, "story_v_out_413161", "413161114", "story_v_out_413161.awb")

						arg_467_1:RecordAudio("413161114", var_470_17)
						arg_467_1:RecordAudio("413161114", var_470_17)
					else
						arg_467_1:AudioAction("play", "voice", "story_v_out_413161", "413161114", "story_v_out_413161.awb")
					end

					arg_467_1:RecordHistoryTalkVoice("story_v_out_413161", "413161114", "story_v_out_413161.awb")
				end

				arg_467_1:RecordContent(arg_467_1.text_.text)
			end

			local var_470_18 = math.max(var_470_9, arg_467_1.talkMaxDuration)

			if var_470_8 <= arg_467_1.time_ and arg_467_1.time_ < var_470_8 + var_470_18 then
				arg_467_1.typewritter.percent = (arg_467_1.time_ - var_470_8) / var_470_18

				arg_467_1.typewritter:SetDirty()
			end

			if arg_467_1.time_ >= var_470_8 + var_470_18 and arg_467_1.time_ < var_470_8 + var_470_18 + arg_470_0 then
				arg_467_1.typewritter.percent = 1

				arg_467_1.typewritter:SetDirty()
				arg_467_1:ShowNextGo(true)
			end
		end
	end,
	Play413161115 = function(arg_471_0, arg_471_1)
		arg_471_1.time_ = 0
		arg_471_1.frameCnt_ = 0
		arg_471_1.state_ = "playing"
		arg_471_1.curTalkId_ = 413161115
		arg_471_1.duration_ = 8.83

		local var_471_0 = {
			zh = 8.833,
			ja = 6.433
		}
		local var_471_1 = manager.audio:GetLocalizationFlag()

		if var_471_0[var_471_1] ~= nil then
			arg_471_1.duration_ = var_471_0[var_471_1]
		end

		SetActive(arg_471_1.tipsGo_, false)

		function arg_471_1.onSingleLineFinish_()
			arg_471_1.onSingleLineUpdate_ = nil
			arg_471_1.onSingleLineFinish_ = nil
			arg_471_1.state_ = "waiting"
		end

		function arg_471_1.playNext_(arg_473_0)
			if arg_473_0 == 1 then
				arg_471_0:Play413161116(arg_471_1)
			end
		end

		function arg_471_1.onSingleLineUpdate_(arg_474_0)
			local var_474_0 = arg_471_1.actors_["10022"]
			local var_474_1 = 0

			if var_474_1 < arg_471_1.time_ and arg_471_1.time_ <= var_474_1 + arg_474_0 and not isNil(var_474_0) and arg_471_1.var_.actorSpriteComps10022 == nil then
				arg_471_1.var_.actorSpriteComps10022 = var_474_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_474_2 = 2

			if var_474_1 <= arg_471_1.time_ and arg_471_1.time_ < var_474_1 + var_474_2 and not isNil(var_474_0) then
				local var_474_3 = (arg_471_1.time_ - var_474_1) / var_474_2

				if arg_471_1.var_.actorSpriteComps10022 then
					for iter_474_0, iter_474_1 in pairs(arg_471_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_474_1 then
							if arg_471_1.isInRecall_ then
								local var_474_4 = Mathf.Lerp(iter_474_1.color.r, arg_471_1.hightColor1.r, var_474_3)
								local var_474_5 = Mathf.Lerp(iter_474_1.color.g, arg_471_1.hightColor1.g, var_474_3)
								local var_474_6 = Mathf.Lerp(iter_474_1.color.b, arg_471_1.hightColor1.b, var_474_3)

								iter_474_1.color = Color.New(var_474_4, var_474_5, var_474_6)
							else
								local var_474_7 = Mathf.Lerp(iter_474_1.color.r, 1, var_474_3)

								iter_474_1.color = Color.New(var_474_7, var_474_7, var_474_7)
							end
						end
					end
				end
			end

			if arg_471_1.time_ >= var_474_1 + var_474_2 and arg_471_1.time_ < var_474_1 + var_474_2 + arg_474_0 and not isNil(var_474_0) and arg_471_1.var_.actorSpriteComps10022 then
				for iter_474_2, iter_474_3 in pairs(arg_471_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_474_3 then
						if arg_471_1.isInRecall_ then
							iter_474_3.color = arg_471_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_474_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_471_1.var_.actorSpriteComps10022 = nil
			end

			local var_474_8 = 0
			local var_474_9 = 0.825

			if var_474_8 < arg_471_1.time_ and arg_471_1.time_ <= var_474_8 + arg_474_0 then
				arg_471_1.talkMaxDuration = 0
				arg_471_1.dialogCg_.alpha = 1

				arg_471_1.dialog_:SetActive(true)
				SetActive(arg_471_1.leftNameGo_, true)

				local var_474_10 = arg_471_1:FormatText(StoryNameCfg[614].name)

				arg_471_1.leftNameTxt_.text = var_474_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_471_1.leftNameTxt_.transform)

				arg_471_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_471_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_471_1:RecordName(arg_471_1.leftNameTxt_.text)
				SetActive(arg_471_1.iconTrs_.gameObject, false)
				arg_471_1.callingController_:SetSelectedState("normal")

				local var_474_11 = arg_471_1:GetWordFromCfg(413161115)
				local var_474_12 = arg_471_1:FormatText(var_474_11.content)

				arg_471_1.text_.text = var_474_12

				LuaForUtil.ClearLinePrefixSymbol(arg_471_1.text_)

				local var_474_13 = 33
				local var_474_14 = utf8.len(var_474_12)
				local var_474_15 = var_474_13 <= 0 and var_474_9 or var_474_9 * (var_474_14 / var_474_13)

				if var_474_15 > 0 and var_474_9 < var_474_15 then
					arg_471_1.talkMaxDuration = var_474_15

					if var_474_15 + var_474_8 > arg_471_1.duration_ then
						arg_471_1.duration_ = var_474_15 + var_474_8
					end
				end

				arg_471_1.text_.text = var_474_12
				arg_471_1.typewritter.percent = 0

				arg_471_1.typewritter:SetDirty()
				arg_471_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161115", "story_v_out_413161.awb") ~= 0 then
					local var_474_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161115", "story_v_out_413161.awb") / 1000

					if var_474_16 + var_474_8 > arg_471_1.duration_ then
						arg_471_1.duration_ = var_474_16 + var_474_8
					end

					if var_474_11.prefab_name ~= "" and arg_471_1.actors_[var_474_11.prefab_name] ~= nil then
						local var_474_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_471_1.actors_[var_474_11.prefab_name].transform, "story_v_out_413161", "413161115", "story_v_out_413161.awb")

						arg_471_1:RecordAudio("413161115", var_474_17)
						arg_471_1:RecordAudio("413161115", var_474_17)
					else
						arg_471_1:AudioAction("play", "voice", "story_v_out_413161", "413161115", "story_v_out_413161.awb")
					end

					arg_471_1:RecordHistoryTalkVoice("story_v_out_413161", "413161115", "story_v_out_413161.awb")
				end

				arg_471_1:RecordContent(arg_471_1.text_.text)
			end

			local var_474_18 = math.max(var_474_9, arg_471_1.talkMaxDuration)

			if var_474_8 <= arg_471_1.time_ and arg_471_1.time_ < var_474_8 + var_474_18 then
				arg_471_1.typewritter.percent = (arg_471_1.time_ - var_474_8) / var_474_18

				arg_471_1.typewritter:SetDirty()
			end

			if arg_471_1.time_ >= var_474_8 + var_474_18 and arg_471_1.time_ < var_474_8 + var_474_18 + arg_474_0 then
				arg_471_1.typewritter.percent = 1

				arg_471_1.typewritter:SetDirty()
				arg_471_1:ShowNextGo(true)
			end
		end
	end,
	Play413161116 = function(arg_475_0, arg_475_1)
		arg_475_1.time_ = 0
		arg_475_1.frameCnt_ = 0
		arg_475_1.state_ = "playing"
		arg_475_1.curTalkId_ = 413161116
		arg_475_1.duration_ = 4.3

		local var_475_0 = {
			zh = 3.1,
			ja = 4.3
		}
		local var_475_1 = manager.audio:GetLocalizationFlag()

		if var_475_0[var_475_1] ~= nil then
			arg_475_1.duration_ = var_475_0[var_475_1]
		end

		SetActive(arg_475_1.tipsGo_, false)

		function arg_475_1.onSingleLineFinish_()
			arg_475_1.onSingleLineUpdate_ = nil
			arg_475_1.onSingleLineFinish_ = nil
			arg_475_1.state_ = "waiting"
		end

		function arg_475_1.playNext_(arg_477_0)
			if arg_477_0 == 1 then
				arg_475_0:Play413161117(arg_475_1)
			end
		end

		function arg_475_1.onSingleLineUpdate_(arg_478_0)
			local var_478_0 = arg_475_1.actors_["10022"]
			local var_478_1 = 0

			if var_478_1 < arg_475_1.time_ and arg_475_1.time_ <= var_478_1 + arg_478_0 and not isNil(var_478_0) and arg_475_1.var_.actorSpriteComps10022 == nil then
				arg_475_1.var_.actorSpriteComps10022 = var_478_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_478_2 = 2

			if var_478_1 <= arg_475_1.time_ and arg_475_1.time_ < var_478_1 + var_478_2 and not isNil(var_478_0) then
				local var_478_3 = (arg_475_1.time_ - var_478_1) / var_478_2

				if arg_475_1.var_.actorSpriteComps10022 then
					for iter_478_0, iter_478_1 in pairs(arg_475_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_478_1 then
							if arg_475_1.isInRecall_ then
								local var_478_4 = Mathf.Lerp(iter_478_1.color.r, arg_475_1.hightColor2.r, var_478_3)
								local var_478_5 = Mathf.Lerp(iter_478_1.color.g, arg_475_1.hightColor2.g, var_478_3)
								local var_478_6 = Mathf.Lerp(iter_478_1.color.b, arg_475_1.hightColor2.b, var_478_3)

								iter_478_1.color = Color.New(var_478_4, var_478_5, var_478_6)
							else
								local var_478_7 = Mathf.Lerp(iter_478_1.color.r, 0.5, var_478_3)

								iter_478_1.color = Color.New(var_478_7, var_478_7, var_478_7)
							end
						end
					end
				end
			end

			if arg_475_1.time_ >= var_478_1 + var_478_2 and arg_475_1.time_ < var_478_1 + var_478_2 + arg_478_0 and not isNil(var_478_0) and arg_475_1.var_.actorSpriteComps10022 then
				for iter_478_2, iter_478_3 in pairs(arg_475_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_478_3 then
						if arg_475_1.isInRecall_ then
							iter_478_3.color = arg_475_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_478_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_475_1.var_.actorSpriteComps10022 = nil
			end

			local var_478_8 = 0
			local var_478_9 = 0.35

			if var_478_8 < arg_475_1.time_ and arg_475_1.time_ <= var_478_8 + arg_478_0 then
				arg_475_1.talkMaxDuration = 0
				arg_475_1.dialogCg_.alpha = 1

				arg_475_1.dialog_:SetActive(true)
				SetActive(arg_475_1.leftNameGo_, true)

				local var_478_10 = arg_475_1:FormatText(StoryNameCfg[998].name)

				arg_475_1.leftNameTxt_.text = var_478_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_475_1.leftNameTxt_.transform)

				arg_475_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_475_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_475_1:RecordName(arg_475_1.leftNameTxt_.text)
				SetActive(arg_475_1.iconTrs_.gameObject, true)
				arg_475_1.iconController_:SetSelectedState("hero")

				arg_475_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_475_1.callingController_:SetSelectedState("normal")

				arg_475_1.keyicon_.color = Color.New(1, 1, 1)
				arg_475_1.icon_.color = Color.New(1, 1, 1)

				local var_478_11 = arg_475_1:GetWordFromCfg(413161116)
				local var_478_12 = arg_475_1:FormatText(var_478_11.content)

				arg_475_1.text_.text = var_478_12

				LuaForUtil.ClearLinePrefixSymbol(arg_475_1.text_)

				local var_478_13 = 14
				local var_478_14 = utf8.len(var_478_12)
				local var_478_15 = var_478_13 <= 0 and var_478_9 or var_478_9 * (var_478_14 / var_478_13)

				if var_478_15 > 0 and var_478_9 < var_478_15 then
					arg_475_1.talkMaxDuration = var_478_15

					if var_478_15 + var_478_8 > arg_475_1.duration_ then
						arg_475_1.duration_ = var_478_15 + var_478_8
					end
				end

				arg_475_1.text_.text = var_478_12
				arg_475_1.typewritter.percent = 0

				arg_475_1.typewritter:SetDirty()
				arg_475_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161116", "story_v_out_413161.awb") ~= 0 then
					local var_478_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161116", "story_v_out_413161.awb") / 1000

					if var_478_16 + var_478_8 > arg_475_1.duration_ then
						arg_475_1.duration_ = var_478_16 + var_478_8
					end

					if var_478_11.prefab_name ~= "" and arg_475_1.actors_[var_478_11.prefab_name] ~= nil then
						local var_478_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_475_1.actors_[var_478_11.prefab_name].transform, "story_v_out_413161", "413161116", "story_v_out_413161.awb")

						arg_475_1:RecordAudio("413161116", var_478_17)
						arg_475_1:RecordAudio("413161116", var_478_17)
					else
						arg_475_1:AudioAction("play", "voice", "story_v_out_413161", "413161116", "story_v_out_413161.awb")
					end

					arg_475_1:RecordHistoryTalkVoice("story_v_out_413161", "413161116", "story_v_out_413161.awb")
				end

				arg_475_1:RecordContent(arg_475_1.text_.text)
			end

			local var_478_18 = math.max(var_478_9, arg_475_1.talkMaxDuration)

			if var_478_8 <= arg_475_1.time_ and arg_475_1.time_ < var_478_8 + var_478_18 then
				arg_475_1.typewritter.percent = (arg_475_1.time_ - var_478_8) / var_478_18

				arg_475_1.typewritter:SetDirty()
			end

			if arg_475_1.time_ >= var_478_8 + var_478_18 and arg_475_1.time_ < var_478_8 + var_478_18 + arg_478_0 then
				arg_475_1.typewritter.percent = 1

				arg_475_1.typewritter:SetDirty()
				arg_475_1:ShowNextGo(true)
			end
		end
	end,
	Play413161117 = function(arg_479_0, arg_479_1)
		arg_479_1.time_ = 0
		arg_479_1.frameCnt_ = 0
		arg_479_1.state_ = "playing"
		arg_479_1.curTalkId_ = 413161117
		arg_479_1.duration_ = 2

		SetActive(arg_479_1.tipsGo_, false)

		function arg_479_1.onSingleLineFinish_()
			arg_479_1.onSingleLineUpdate_ = nil
			arg_479_1.onSingleLineFinish_ = nil
			arg_479_1.state_ = "waiting"
		end

		function arg_479_1.playNext_(arg_481_0)
			if arg_481_0 == 1 then
				arg_479_0:Play413161118(arg_479_1)
			end
		end

		function arg_479_1.onSingleLineUpdate_(arg_482_0)
			local var_482_0 = arg_479_1.actors_["10022"]
			local var_482_1 = 0

			if var_482_1 < arg_479_1.time_ and arg_479_1.time_ <= var_482_1 + arg_482_0 and not isNil(var_482_0) and arg_479_1.var_.actorSpriteComps10022 == nil then
				arg_479_1.var_.actorSpriteComps10022 = var_482_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_482_2 = 2

			if var_482_1 <= arg_479_1.time_ and arg_479_1.time_ < var_482_1 + var_482_2 and not isNil(var_482_0) then
				local var_482_3 = (arg_479_1.time_ - var_482_1) / var_482_2

				if arg_479_1.var_.actorSpriteComps10022 then
					for iter_482_0, iter_482_1 in pairs(arg_479_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_482_1 then
							if arg_479_1.isInRecall_ then
								local var_482_4 = Mathf.Lerp(iter_482_1.color.r, arg_479_1.hightColor1.r, var_482_3)
								local var_482_5 = Mathf.Lerp(iter_482_1.color.g, arg_479_1.hightColor1.g, var_482_3)
								local var_482_6 = Mathf.Lerp(iter_482_1.color.b, arg_479_1.hightColor1.b, var_482_3)

								iter_482_1.color = Color.New(var_482_4, var_482_5, var_482_6)
							else
								local var_482_7 = Mathf.Lerp(iter_482_1.color.r, 1, var_482_3)

								iter_482_1.color = Color.New(var_482_7, var_482_7, var_482_7)
							end
						end
					end
				end
			end

			if arg_479_1.time_ >= var_482_1 + var_482_2 and arg_479_1.time_ < var_482_1 + var_482_2 + arg_482_0 and not isNil(var_482_0) and arg_479_1.var_.actorSpriteComps10022 then
				for iter_482_2, iter_482_3 in pairs(arg_479_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_482_3 then
						if arg_479_1.isInRecall_ then
							iter_482_3.color = arg_479_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_482_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_479_1.var_.actorSpriteComps10022 = nil
			end

			local var_482_8 = 0
			local var_482_9 = 0.1

			if var_482_8 < arg_479_1.time_ and arg_479_1.time_ <= var_482_8 + arg_482_0 then
				arg_479_1.talkMaxDuration = 0
				arg_479_1.dialogCg_.alpha = 1

				arg_479_1.dialog_:SetActive(true)
				SetActive(arg_479_1.leftNameGo_, true)

				local var_482_10 = arg_479_1:FormatText(StoryNameCfg[614].name)

				arg_479_1.leftNameTxt_.text = var_482_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_479_1.leftNameTxt_.transform)

				arg_479_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_479_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_479_1:RecordName(arg_479_1.leftNameTxt_.text)
				SetActive(arg_479_1.iconTrs_.gameObject, false)
				arg_479_1.callingController_:SetSelectedState("normal")

				local var_482_11 = arg_479_1:GetWordFromCfg(413161117)
				local var_482_12 = arg_479_1:FormatText(var_482_11.content)

				arg_479_1.text_.text = var_482_12

				LuaForUtil.ClearLinePrefixSymbol(arg_479_1.text_)

				local var_482_13 = 4
				local var_482_14 = utf8.len(var_482_12)
				local var_482_15 = var_482_13 <= 0 and var_482_9 or var_482_9 * (var_482_14 / var_482_13)

				if var_482_15 > 0 and var_482_9 < var_482_15 then
					arg_479_1.talkMaxDuration = var_482_15

					if var_482_15 + var_482_8 > arg_479_1.duration_ then
						arg_479_1.duration_ = var_482_15 + var_482_8
					end
				end

				arg_479_1.text_.text = var_482_12
				arg_479_1.typewritter.percent = 0

				arg_479_1.typewritter:SetDirty()
				arg_479_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161117", "story_v_out_413161.awb") ~= 0 then
					local var_482_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161117", "story_v_out_413161.awb") / 1000

					if var_482_16 + var_482_8 > arg_479_1.duration_ then
						arg_479_1.duration_ = var_482_16 + var_482_8
					end

					if var_482_11.prefab_name ~= "" and arg_479_1.actors_[var_482_11.prefab_name] ~= nil then
						local var_482_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_479_1.actors_[var_482_11.prefab_name].transform, "story_v_out_413161", "413161117", "story_v_out_413161.awb")

						arg_479_1:RecordAudio("413161117", var_482_17)
						arg_479_1:RecordAudio("413161117", var_482_17)
					else
						arg_479_1:AudioAction("play", "voice", "story_v_out_413161", "413161117", "story_v_out_413161.awb")
					end

					arg_479_1:RecordHistoryTalkVoice("story_v_out_413161", "413161117", "story_v_out_413161.awb")
				end

				arg_479_1:RecordContent(arg_479_1.text_.text)
			end

			local var_482_18 = math.max(var_482_9, arg_479_1.talkMaxDuration)

			if var_482_8 <= arg_479_1.time_ and arg_479_1.time_ < var_482_8 + var_482_18 then
				arg_479_1.typewritter.percent = (arg_479_1.time_ - var_482_8) / var_482_18

				arg_479_1.typewritter:SetDirty()
			end

			if arg_479_1.time_ >= var_482_8 + var_482_18 and arg_479_1.time_ < var_482_8 + var_482_18 + arg_482_0 then
				arg_479_1.typewritter.percent = 1

				arg_479_1.typewritter:SetDirty()
				arg_479_1:ShowNextGo(true)
			end
		end
	end,
	Play413161118 = function(arg_483_0, arg_483_1)
		arg_483_1.time_ = 0
		arg_483_1.frameCnt_ = 0
		arg_483_1.state_ = "playing"
		arg_483_1.curTalkId_ = 413161118
		arg_483_1.duration_ = 8.17

		local var_483_0 = {
			zh = 5.966,
			ja = 8.166
		}
		local var_483_1 = manager.audio:GetLocalizationFlag()

		if var_483_0[var_483_1] ~= nil then
			arg_483_1.duration_ = var_483_0[var_483_1]
		end

		SetActive(arg_483_1.tipsGo_, false)

		function arg_483_1.onSingleLineFinish_()
			arg_483_1.onSingleLineUpdate_ = nil
			arg_483_1.onSingleLineFinish_ = nil
			arg_483_1.state_ = "waiting"
		end

		function arg_483_1.playNext_(arg_485_0)
			if arg_485_0 == 1 then
				arg_483_0:Play413161119(arg_483_1)
			end
		end

		function arg_483_1.onSingleLineUpdate_(arg_486_0)
			local var_486_0 = arg_483_1.actors_["10022"]
			local var_486_1 = 0

			if var_486_1 < arg_483_1.time_ and arg_483_1.time_ <= var_486_1 + arg_486_0 and not isNil(var_486_0) and arg_483_1.var_.actorSpriteComps10022 == nil then
				arg_483_1.var_.actorSpriteComps10022 = var_486_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_486_2 = 2

			if var_486_1 <= arg_483_1.time_ and arg_483_1.time_ < var_486_1 + var_486_2 and not isNil(var_486_0) then
				local var_486_3 = (arg_483_1.time_ - var_486_1) / var_486_2

				if arg_483_1.var_.actorSpriteComps10022 then
					for iter_486_0, iter_486_1 in pairs(arg_483_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_486_1 then
							if arg_483_1.isInRecall_ then
								local var_486_4 = Mathf.Lerp(iter_486_1.color.r, arg_483_1.hightColor2.r, var_486_3)
								local var_486_5 = Mathf.Lerp(iter_486_1.color.g, arg_483_1.hightColor2.g, var_486_3)
								local var_486_6 = Mathf.Lerp(iter_486_1.color.b, arg_483_1.hightColor2.b, var_486_3)

								iter_486_1.color = Color.New(var_486_4, var_486_5, var_486_6)
							else
								local var_486_7 = Mathf.Lerp(iter_486_1.color.r, 0.5, var_486_3)

								iter_486_1.color = Color.New(var_486_7, var_486_7, var_486_7)
							end
						end
					end
				end
			end

			if arg_483_1.time_ >= var_486_1 + var_486_2 and arg_483_1.time_ < var_486_1 + var_486_2 + arg_486_0 and not isNil(var_486_0) and arg_483_1.var_.actorSpriteComps10022 then
				for iter_486_2, iter_486_3 in pairs(arg_483_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_486_3 then
						if arg_483_1.isInRecall_ then
							iter_486_3.color = arg_483_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_486_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_483_1.var_.actorSpriteComps10022 = nil
			end

			local var_486_8 = 0
			local var_486_9 = 0.7

			if var_486_8 < arg_483_1.time_ and arg_483_1.time_ <= var_486_8 + arg_486_0 then
				arg_483_1.talkMaxDuration = 0
				arg_483_1.dialogCg_.alpha = 1

				arg_483_1.dialog_:SetActive(true)
				SetActive(arg_483_1.leftNameGo_, true)

				local var_486_10 = arg_483_1:FormatText(StoryNameCfg[998].name)

				arg_483_1.leftNameTxt_.text = var_486_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_483_1.leftNameTxt_.transform)

				arg_483_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_483_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_483_1:RecordName(arg_483_1.leftNameTxt_.text)
				SetActive(arg_483_1.iconTrs_.gameObject, true)
				arg_483_1.iconController_:SetSelectedState("hero")

				arg_483_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_483_1.callingController_:SetSelectedState("normal")

				arg_483_1.keyicon_.color = Color.New(1, 1, 1)
				arg_483_1.icon_.color = Color.New(1, 1, 1)

				local var_486_11 = arg_483_1:GetWordFromCfg(413161118)
				local var_486_12 = arg_483_1:FormatText(var_486_11.content)

				arg_483_1.text_.text = var_486_12

				LuaForUtil.ClearLinePrefixSymbol(arg_483_1.text_)

				local var_486_13 = 28
				local var_486_14 = utf8.len(var_486_12)
				local var_486_15 = var_486_13 <= 0 and var_486_9 or var_486_9 * (var_486_14 / var_486_13)

				if var_486_15 > 0 and var_486_9 < var_486_15 then
					arg_483_1.talkMaxDuration = var_486_15

					if var_486_15 + var_486_8 > arg_483_1.duration_ then
						arg_483_1.duration_ = var_486_15 + var_486_8
					end
				end

				arg_483_1.text_.text = var_486_12
				arg_483_1.typewritter.percent = 0

				arg_483_1.typewritter:SetDirty()
				arg_483_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161118", "story_v_out_413161.awb") ~= 0 then
					local var_486_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161118", "story_v_out_413161.awb") / 1000

					if var_486_16 + var_486_8 > arg_483_1.duration_ then
						arg_483_1.duration_ = var_486_16 + var_486_8
					end

					if var_486_11.prefab_name ~= "" and arg_483_1.actors_[var_486_11.prefab_name] ~= nil then
						local var_486_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_483_1.actors_[var_486_11.prefab_name].transform, "story_v_out_413161", "413161118", "story_v_out_413161.awb")

						arg_483_1:RecordAudio("413161118", var_486_17)
						arg_483_1:RecordAudio("413161118", var_486_17)
					else
						arg_483_1:AudioAction("play", "voice", "story_v_out_413161", "413161118", "story_v_out_413161.awb")
					end

					arg_483_1:RecordHistoryTalkVoice("story_v_out_413161", "413161118", "story_v_out_413161.awb")
				end

				arg_483_1:RecordContent(arg_483_1.text_.text)
			end

			local var_486_18 = math.max(var_486_9, arg_483_1.talkMaxDuration)

			if var_486_8 <= arg_483_1.time_ and arg_483_1.time_ < var_486_8 + var_486_18 then
				arg_483_1.typewritter.percent = (arg_483_1.time_ - var_486_8) / var_486_18

				arg_483_1.typewritter:SetDirty()
			end

			if arg_483_1.time_ >= var_486_8 + var_486_18 and arg_483_1.time_ < var_486_8 + var_486_18 + arg_486_0 then
				arg_483_1.typewritter.percent = 1

				arg_483_1.typewritter:SetDirty()
				arg_483_1:ShowNextGo(true)
			end
		end
	end,
	Play413161119 = function(arg_487_0, arg_487_1)
		arg_487_1.time_ = 0
		arg_487_1.frameCnt_ = 0
		arg_487_1.state_ = "playing"
		arg_487_1.curTalkId_ = 413161119
		arg_487_1.duration_ = 5

		SetActive(arg_487_1.tipsGo_, false)

		function arg_487_1.onSingleLineFinish_()
			arg_487_1.onSingleLineUpdate_ = nil
			arg_487_1.onSingleLineFinish_ = nil
			arg_487_1.state_ = "waiting"
		end

		function arg_487_1.playNext_(arg_489_0)
			if arg_489_0 == 1 then
				arg_487_0:Play413161120(arg_487_1)
			end
		end

		function arg_487_1.onSingleLineUpdate_(arg_490_0)
			local var_490_0 = arg_487_1.actors_["10022"].transform
			local var_490_1 = 0

			if var_490_1 < arg_487_1.time_ and arg_487_1.time_ <= var_490_1 + arg_490_0 then
				arg_487_1.var_.moveOldPos10022 = var_490_0.localPosition
				var_490_0.localScale = Vector3.New(1, 1, 1)

				arg_487_1:CheckSpriteTmpPos("10022", 7)

				local var_490_2 = var_490_0.childCount

				for iter_490_0 = 0, var_490_2 - 1 do
					local var_490_3 = var_490_0:GetChild(iter_490_0)

					if var_490_3.name == "split_4" or not string.find(var_490_3.name, "split") then
						var_490_3.gameObject:SetActive(true)
					else
						var_490_3.gameObject:SetActive(false)
					end
				end
			end

			local var_490_4 = 0.001

			if var_490_1 <= arg_487_1.time_ and arg_487_1.time_ < var_490_1 + var_490_4 then
				local var_490_5 = (arg_487_1.time_ - var_490_1) / var_490_4
				local var_490_6 = Vector3.New(0, -2000, 0)

				var_490_0.localPosition = Vector3.Lerp(arg_487_1.var_.moveOldPos10022, var_490_6, var_490_5)
			end

			if arg_487_1.time_ >= var_490_1 + var_490_4 and arg_487_1.time_ < var_490_1 + var_490_4 + arg_490_0 then
				var_490_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_490_7 = 0
			local var_490_8 = 0.775

			if var_490_7 < arg_487_1.time_ and arg_487_1.time_ <= var_490_7 + arg_490_0 then
				arg_487_1.talkMaxDuration = 0
				arg_487_1.dialogCg_.alpha = 1

				arg_487_1.dialog_:SetActive(true)
				SetActive(arg_487_1.leftNameGo_, false)

				arg_487_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_487_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_487_1:RecordName(arg_487_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_487_1.iconTrs_.gameObject, false)
				arg_487_1.callingController_:SetSelectedState("normal")

				local var_490_9 = arg_487_1:GetWordFromCfg(413161119)
				local var_490_10 = arg_487_1:FormatText(var_490_9.content)

				arg_487_1.text_.text = var_490_10

				LuaForUtil.ClearLinePrefixSymbol(arg_487_1.text_)

				local var_490_11 = 31
				local var_490_12 = utf8.len(var_490_10)
				local var_490_13 = var_490_11 <= 0 and var_490_8 or var_490_8 * (var_490_12 / var_490_11)

				if var_490_13 > 0 and var_490_8 < var_490_13 then
					arg_487_1.talkMaxDuration = var_490_13

					if var_490_13 + var_490_7 > arg_487_1.duration_ then
						arg_487_1.duration_ = var_490_13 + var_490_7
					end
				end

				arg_487_1.text_.text = var_490_10
				arg_487_1.typewritter.percent = 0

				arg_487_1.typewritter:SetDirty()
				arg_487_1:ShowNextGo(false)
				arg_487_1:RecordContent(arg_487_1.text_.text)
			end

			local var_490_14 = math.max(var_490_8, arg_487_1.talkMaxDuration)

			if var_490_7 <= arg_487_1.time_ and arg_487_1.time_ < var_490_7 + var_490_14 then
				arg_487_1.typewritter.percent = (arg_487_1.time_ - var_490_7) / var_490_14

				arg_487_1.typewritter:SetDirty()
			end

			if arg_487_1.time_ >= var_490_7 + var_490_14 and arg_487_1.time_ < var_490_7 + var_490_14 + arg_490_0 then
				arg_487_1.typewritter.percent = 1

				arg_487_1.typewritter:SetDirty()
				arg_487_1:ShowNextGo(true)
			end
		end
	end,
	Play413161120 = function(arg_491_0, arg_491_1)
		arg_491_1.time_ = 0
		arg_491_1.frameCnt_ = 0
		arg_491_1.state_ = "playing"
		arg_491_1.curTalkId_ = 413161120
		arg_491_1.duration_ = 4.6

		local var_491_0 = {
			zh = 1.6,
			ja = 4.6
		}
		local var_491_1 = manager.audio:GetLocalizationFlag()

		if var_491_0[var_491_1] ~= nil then
			arg_491_1.duration_ = var_491_0[var_491_1]
		end

		SetActive(arg_491_1.tipsGo_, false)

		function arg_491_1.onSingleLineFinish_()
			arg_491_1.onSingleLineUpdate_ = nil
			arg_491_1.onSingleLineFinish_ = nil
			arg_491_1.state_ = "waiting"
		end

		function arg_491_1.playNext_(arg_493_0)
			if arg_493_0 == 1 then
				arg_491_0:Play413161121(arg_491_1)
			end
		end

		function arg_491_1.onSingleLineUpdate_(arg_494_0)
			local var_494_0 = 0
			local var_494_1 = 0.2

			if var_494_0 < arg_491_1.time_ and arg_491_1.time_ <= var_494_0 + arg_494_0 then
				arg_491_1.talkMaxDuration = 0
				arg_491_1.dialogCg_.alpha = 1

				arg_491_1.dialog_:SetActive(true)
				SetActive(arg_491_1.leftNameGo_, true)

				local var_494_2 = arg_491_1:FormatText(StoryNameCfg[998].name)

				arg_491_1.leftNameTxt_.text = var_494_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_491_1.leftNameTxt_.transform)

				arg_491_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_491_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_491_1:RecordName(arg_491_1.leftNameTxt_.text)
				SetActive(arg_491_1.iconTrs_.gameObject, true)
				arg_491_1.iconController_:SetSelectedState("hero")

				arg_491_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_491_1.callingController_:SetSelectedState("normal")

				arg_491_1.keyicon_.color = Color.New(1, 1, 1)
				arg_491_1.icon_.color = Color.New(1, 1, 1)

				local var_494_3 = arg_491_1:GetWordFromCfg(413161120)
				local var_494_4 = arg_491_1:FormatText(var_494_3.content)

				arg_491_1.text_.text = var_494_4

				LuaForUtil.ClearLinePrefixSymbol(arg_491_1.text_)

				local var_494_5 = 8
				local var_494_6 = utf8.len(var_494_4)
				local var_494_7 = var_494_5 <= 0 and var_494_1 or var_494_1 * (var_494_6 / var_494_5)

				if var_494_7 > 0 and var_494_1 < var_494_7 then
					arg_491_1.talkMaxDuration = var_494_7

					if var_494_7 + var_494_0 > arg_491_1.duration_ then
						arg_491_1.duration_ = var_494_7 + var_494_0
					end
				end

				arg_491_1.text_.text = var_494_4
				arg_491_1.typewritter.percent = 0

				arg_491_1.typewritter:SetDirty()
				arg_491_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161120", "story_v_out_413161.awb") ~= 0 then
					local var_494_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161120", "story_v_out_413161.awb") / 1000

					if var_494_8 + var_494_0 > arg_491_1.duration_ then
						arg_491_1.duration_ = var_494_8 + var_494_0
					end

					if var_494_3.prefab_name ~= "" and arg_491_1.actors_[var_494_3.prefab_name] ~= nil then
						local var_494_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_491_1.actors_[var_494_3.prefab_name].transform, "story_v_out_413161", "413161120", "story_v_out_413161.awb")

						arg_491_1:RecordAudio("413161120", var_494_9)
						arg_491_1:RecordAudio("413161120", var_494_9)
					else
						arg_491_1:AudioAction("play", "voice", "story_v_out_413161", "413161120", "story_v_out_413161.awb")
					end

					arg_491_1:RecordHistoryTalkVoice("story_v_out_413161", "413161120", "story_v_out_413161.awb")
				end

				arg_491_1:RecordContent(arg_491_1.text_.text)
			end

			local var_494_10 = math.max(var_494_1, arg_491_1.talkMaxDuration)

			if var_494_0 <= arg_491_1.time_ and arg_491_1.time_ < var_494_0 + var_494_10 then
				arg_491_1.typewritter.percent = (arg_491_1.time_ - var_494_0) / var_494_10

				arg_491_1.typewritter:SetDirty()
			end

			if arg_491_1.time_ >= var_494_0 + var_494_10 and arg_491_1.time_ < var_494_0 + var_494_10 + arg_494_0 then
				arg_491_1.typewritter.percent = 1

				arg_491_1.typewritter:SetDirty()
				arg_491_1:ShowNextGo(true)
			end
		end
	end,
	Play413161121 = function(arg_495_0, arg_495_1)
		arg_495_1.time_ = 0
		arg_495_1.frameCnt_ = 0
		arg_495_1.state_ = "playing"
		arg_495_1.curTalkId_ = 413161121
		arg_495_1.duration_ = 5

		SetActive(arg_495_1.tipsGo_, false)

		function arg_495_1.onSingleLineFinish_()
			arg_495_1.onSingleLineUpdate_ = nil
			arg_495_1.onSingleLineFinish_ = nil
			arg_495_1.state_ = "waiting"
		end

		function arg_495_1.playNext_(arg_497_0)
			if arg_497_0 == 1 then
				arg_495_0:Play413161122(arg_495_1)
			end
		end

		function arg_495_1.onSingleLineUpdate_(arg_498_0)
			local var_498_0 = 0
			local var_498_1 = 0.775

			if var_498_0 < arg_495_1.time_ and arg_495_1.time_ <= var_498_0 + arg_498_0 then
				arg_495_1.talkMaxDuration = 0
				arg_495_1.dialogCg_.alpha = 1

				arg_495_1.dialog_:SetActive(true)
				SetActive(arg_495_1.leftNameGo_, false)

				arg_495_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_495_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_495_1:RecordName(arg_495_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_495_1.iconTrs_.gameObject, false)
				arg_495_1.callingController_:SetSelectedState("normal")

				local var_498_2 = arg_495_1:GetWordFromCfg(413161121)
				local var_498_3 = arg_495_1:FormatText(var_498_2.content)

				arg_495_1.text_.text = var_498_3

				LuaForUtil.ClearLinePrefixSymbol(arg_495_1.text_)

				local var_498_4 = 31
				local var_498_5 = utf8.len(var_498_3)
				local var_498_6 = var_498_4 <= 0 and var_498_1 or var_498_1 * (var_498_5 / var_498_4)

				if var_498_6 > 0 and var_498_1 < var_498_6 then
					arg_495_1.talkMaxDuration = var_498_6

					if var_498_6 + var_498_0 > arg_495_1.duration_ then
						arg_495_1.duration_ = var_498_6 + var_498_0
					end
				end

				arg_495_1.text_.text = var_498_3
				arg_495_1.typewritter.percent = 0

				arg_495_1.typewritter:SetDirty()
				arg_495_1:ShowNextGo(false)
				arg_495_1:RecordContent(arg_495_1.text_.text)
			end

			local var_498_7 = math.max(var_498_1, arg_495_1.talkMaxDuration)

			if var_498_0 <= arg_495_1.time_ and arg_495_1.time_ < var_498_0 + var_498_7 then
				arg_495_1.typewritter.percent = (arg_495_1.time_ - var_498_0) / var_498_7

				arg_495_1.typewritter:SetDirty()
			end

			if arg_495_1.time_ >= var_498_0 + var_498_7 and arg_495_1.time_ < var_498_0 + var_498_7 + arg_498_0 then
				arg_495_1.typewritter.percent = 1

				arg_495_1.typewritter:SetDirty()
				arg_495_1:ShowNextGo(true)
			end
		end
	end,
	Play413161122 = function(arg_499_0, arg_499_1)
		arg_499_1.time_ = 0
		arg_499_1.frameCnt_ = 0
		arg_499_1.state_ = "playing"
		arg_499_1.curTalkId_ = 413161122
		arg_499_1.duration_ = 4.1

		local var_499_0 = {
			zh = 2,
			ja = 4.1
		}
		local var_499_1 = manager.audio:GetLocalizationFlag()

		if var_499_0[var_499_1] ~= nil then
			arg_499_1.duration_ = var_499_0[var_499_1]
		end

		SetActive(arg_499_1.tipsGo_, false)

		function arg_499_1.onSingleLineFinish_()
			arg_499_1.onSingleLineUpdate_ = nil
			arg_499_1.onSingleLineFinish_ = nil
			arg_499_1.state_ = "waiting"
		end

		function arg_499_1.playNext_(arg_501_0)
			if arg_501_0 == 1 then
				arg_499_0:Play413161123(arg_499_1)
			end
		end

		function arg_499_1.onSingleLineUpdate_(arg_502_0)
			local var_502_0 = arg_499_1.actors_["10022"].transform
			local var_502_1 = 0

			if var_502_1 < arg_499_1.time_ and arg_499_1.time_ <= var_502_1 + arg_502_0 then
				arg_499_1.var_.moveOldPos10022 = var_502_0.localPosition
				var_502_0.localScale = Vector3.New(1, 1, 1)

				arg_499_1:CheckSpriteTmpPos("10022", 3)

				local var_502_2 = var_502_0.childCount

				for iter_502_0 = 0, var_502_2 - 1 do
					local var_502_3 = var_502_0:GetChild(iter_502_0)

					if var_502_3.name == "split_8" or not string.find(var_502_3.name, "split") then
						var_502_3.gameObject:SetActive(true)
					else
						var_502_3.gameObject:SetActive(false)
					end
				end
			end

			local var_502_4 = 0.001

			if var_502_1 <= arg_499_1.time_ and arg_499_1.time_ < var_502_1 + var_502_4 then
				local var_502_5 = (arg_499_1.time_ - var_502_1) / var_502_4
				local var_502_6 = Vector3.New(0, -315, -320)

				var_502_0.localPosition = Vector3.Lerp(arg_499_1.var_.moveOldPos10022, var_502_6, var_502_5)
			end

			if arg_499_1.time_ >= var_502_1 + var_502_4 and arg_499_1.time_ < var_502_1 + var_502_4 + arg_502_0 then
				var_502_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_502_7 = arg_499_1.actors_["10022"]
			local var_502_8 = 0

			if var_502_8 < arg_499_1.time_ and arg_499_1.time_ <= var_502_8 + arg_502_0 and not isNil(var_502_7) and arg_499_1.var_.actorSpriteComps10022 == nil then
				arg_499_1.var_.actorSpriteComps10022 = var_502_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_502_9 = 2

			if var_502_8 <= arg_499_1.time_ and arg_499_1.time_ < var_502_8 + var_502_9 and not isNil(var_502_7) then
				local var_502_10 = (arg_499_1.time_ - var_502_8) / var_502_9

				if arg_499_1.var_.actorSpriteComps10022 then
					for iter_502_1, iter_502_2 in pairs(arg_499_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_502_2 then
							if arg_499_1.isInRecall_ then
								local var_502_11 = Mathf.Lerp(iter_502_2.color.r, arg_499_1.hightColor1.r, var_502_10)
								local var_502_12 = Mathf.Lerp(iter_502_2.color.g, arg_499_1.hightColor1.g, var_502_10)
								local var_502_13 = Mathf.Lerp(iter_502_2.color.b, arg_499_1.hightColor1.b, var_502_10)

								iter_502_2.color = Color.New(var_502_11, var_502_12, var_502_13)
							else
								local var_502_14 = Mathf.Lerp(iter_502_2.color.r, 1, var_502_10)

								iter_502_2.color = Color.New(var_502_14, var_502_14, var_502_14)
							end
						end
					end
				end
			end

			if arg_499_1.time_ >= var_502_8 + var_502_9 and arg_499_1.time_ < var_502_8 + var_502_9 + arg_502_0 and not isNil(var_502_7) and arg_499_1.var_.actorSpriteComps10022 then
				for iter_502_3, iter_502_4 in pairs(arg_499_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_502_4 then
						if arg_499_1.isInRecall_ then
							iter_502_4.color = arg_499_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_502_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_499_1.var_.actorSpriteComps10022 = nil
			end

			local var_502_15 = 0
			local var_502_16 = 0.3

			if var_502_15 < arg_499_1.time_ and arg_499_1.time_ <= var_502_15 + arg_502_0 then
				arg_499_1.talkMaxDuration = 0
				arg_499_1.dialogCg_.alpha = 1

				arg_499_1.dialog_:SetActive(true)
				SetActive(arg_499_1.leftNameGo_, true)

				local var_502_17 = arg_499_1:FormatText(StoryNameCfg[614].name)

				arg_499_1.leftNameTxt_.text = var_502_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_499_1.leftNameTxt_.transform)

				arg_499_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_499_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_499_1:RecordName(arg_499_1.leftNameTxt_.text)
				SetActive(arg_499_1.iconTrs_.gameObject, false)
				arg_499_1.callingController_:SetSelectedState("normal")

				local var_502_18 = arg_499_1:GetWordFromCfg(413161122)
				local var_502_19 = arg_499_1:FormatText(var_502_18.content)

				arg_499_1.text_.text = var_502_19

				LuaForUtil.ClearLinePrefixSymbol(arg_499_1.text_)

				local var_502_20 = 12
				local var_502_21 = utf8.len(var_502_19)
				local var_502_22 = var_502_20 <= 0 and var_502_16 or var_502_16 * (var_502_21 / var_502_20)

				if var_502_22 > 0 and var_502_16 < var_502_22 then
					arg_499_1.talkMaxDuration = var_502_22

					if var_502_22 + var_502_15 > arg_499_1.duration_ then
						arg_499_1.duration_ = var_502_22 + var_502_15
					end
				end

				arg_499_1.text_.text = var_502_19
				arg_499_1.typewritter.percent = 0

				arg_499_1.typewritter:SetDirty()
				arg_499_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161122", "story_v_out_413161.awb") ~= 0 then
					local var_502_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161122", "story_v_out_413161.awb") / 1000

					if var_502_23 + var_502_15 > arg_499_1.duration_ then
						arg_499_1.duration_ = var_502_23 + var_502_15
					end

					if var_502_18.prefab_name ~= "" and arg_499_1.actors_[var_502_18.prefab_name] ~= nil then
						local var_502_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_499_1.actors_[var_502_18.prefab_name].transform, "story_v_out_413161", "413161122", "story_v_out_413161.awb")

						arg_499_1:RecordAudio("413161122", var_502_24)
						arg_499_1:RecordAudio("413161122", var_502_24)
					else
						arg_499_1:AudioAction("play", "voice", "story_v_out_413161", "413161122", "story_v_out_413161.awb")
					end

					arg_499_1:RecordHistoryTalkVoice("story_v_out_413161", "413161122", "story_v_out_413161.awb")
				end

				arg_499_1:RecordContent(arg_499_1.text_.text)
			end

			local var_502_25 = math.max(var_502_16, arg_499_1.talkMaxDuration)

			if var_502_15 <= arg_499_1.time_ and arg_499_1.time_ < var_502_15 + var_502_25 then
				arg_499_1.typewritter.percent = (arg_499_1.time_ - var_502_15) / var_502_25

				arg_499_1.typewritter:SetDirty()
			end

			if arg_499_1.time_ >= var_502_15 + var_502_25 and arg_499_1.time_ < var_502_15 + var_502_25 + arg_502_0 then
				arg_499_1.typewritter.percent = 1

				arg_499_1.typewritter:SetDirty()
				arg_499_1:ShowNextGo(true)
			end
		end
	end,
	Play413161123 = function(arg_503_0, arg_503_1)
		arg_503_1.time_ = 0
		arg_503_1.frameCnt_ = 0
		arg_503_1.state_ = "playing"
		arg_503_1.curTalkId_ = 413161123
		arg_503_1.duration_ = 7.63

		local var_503_0 = {
			zh = 4.766,
			ja = 7.633
		}
		local var_503_1 = manager.audio:GetLocalizationFlag()

		if var_503_0[var_503_1] ~= nil then
			arg_503_1.duration_ = var_503_0[var_503_1]
		end

		SetActive(arg_503_1.tipsGo_, false)

		function arg_503_1.onSingleLineFinish_()
			arg_503_1.onSingleLineUpdate_ = nil
			arg_503_1.onSingleLineFinish_ = nil
			arg_503_1.state_ = "waiting"
		end

		function arg_503_1.playNext_(arg_505_0)
			if arg_505_0 == 1 then
				arg_503_0:Play413161124(arg_503_1)
			end
		end

		function arg_503_1.onSingleLineUpdate_(arg_506_0)
			local var_506_0 = arg_503_1.actors_["10022"]
			local var_506_1 = 0

			if var_506_1 < arg_503_1.time_ and arg_503_1.time_ <= var_506_1 + arg_506_0 and not isNil(var_506_0) and arg_503_1.var_.actorSpriteComps10022 == nil then
				arg_503_1.var_.actorSpriteComps10022 = var_506_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_506_2 = 2

			if var_506_1 <= arg_503_1.time_ and arg_503_1.time_ < var_506_1 + var_506_2 and not isNil(var_506_0) then
				local var_506_3 = (arg_503_1.time_ - var_506_1) / var_506_2

				if arg_503_1.var_.actorSpriteComps10022 then
					for iter_506_0, iter_506_1 in pairs(arg_503_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_506_1 then
							if arg_503_1.isInRecall_ then
								local var_506_4 = Mathf.Lerp(iter_506_1.color.r, arg_503_1.hightColor2.r, var_506_3)
								local var_506_5 = Mathf.Lerp(iter_506_1.color.g, arg_503_1.hightColor2.g, var_506_3)
								local var_506_6 = Mathf.Lerp(iter_506_1.color.b, arg_503_1.hightColor2.b, var_506_3)

								iter_506_1.color = Color.New(var_506_4, var_506_5, var_506_6)
							else
								local var_506_7 = Mathf.Lerp(iter_506_1.color.r, 0.5, var_506_3)

								iter_506_1.color = Color.New(var_506_7, var_506_7, var_506_7)
							end
						end
					end
				end
			end

			if arg_503_1.time_ >= var_506_1 + var_506_2 and arg_503_1.time_ < var_506_1 + var_506_2 + arg_506_0 and not isNil(var_506_0) and arg_503_1.var_.actorSpriteComps10022 then
				for iter_506_2, iter_506_3 in pairs(arg_503_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_506_3 then
						if arg_503_1.isInRecall_ then
							iter_506_3.color = arg_503_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_506_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_503_1.var_.actorSpriteComps10022 = nil
			end

			local var_506_8 = 0
			local var_506_9 = 0.6

			if var_506_8 < arg_503_1.time_ and arg_503_1.time_ <= var_506_8 + arg_506_0 then
				arg_503_1.talkMaxDuration = 0
				arg_503_1.dialogCg_.alpha = 1

				arg_503_1.dialog_:SetActive(true)
				SetActive(arg_503_1.leftNameGo_, true)

				local var_506_10 = arg_503_1:FormatText(StoryNameCfg[998].name)

				arg_503_1.leftNameTxt_.text = var_506_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_503_1.leftNameTxt_.transform)

				arg_503_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_503_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_503_1:RecordName(arg_503_1.leftNameTxt_.text)
				SetActive(arg_503_1.iconTrs_.gameObject, true)
				arg_503_1.iconController_:SetSelectedState("hero")

				arg_503_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_503_1.callingController_:SetSelectedState("normal")

				arg_503_1.keyicon_.color = Color.New(1, 1, 1)
				arg_503_1.icon_.color = Color.New(1, 1, 1)

				local var_506_11 = arg_503_1:GetWordFromCfg(413161123)
				local var_506_12 = arg_503_1:FormatText(var_506_11.content)

				arg_503_1.text_.text = var_506_12

				LuaForUtil.ClearLinePrefixSymbol(arg_503_1.text_)

				local var_506_13 = 24
				local var_506_14 = utf8.len(var_506_12)
				local var_506_15 = var_506_13 <= 0 and var_506_9 or var_506_9 * (var_506_14 / var_506_13)

				if var_506_15 > 0 and var_506_9 < var_506_15 then
					arg_503_1.talkMaxDuration = var_506_15

					if var_506_15 + var_506_8 > arg_503_1.duration_ then
						arg_503_1.duration_ = var_506_15 + var_506_8
					end
				end

				arg_503_1.text_.text = var_506_12
				arg_503_1.typewritter.percent = 0

				arg_503_1.typewritter:SetDirty()
				arg_503_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161123", "story_v_out_413161.awb") ~= 0 then
					local var_506_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161123", "story_v_out_413161.awb") / 1000

					if var_506_16 + var_506_8 > arg_503_1.duration_ then
						arg_503_1.duration_ = var_506_16 + var_506_8
					end

					if var_506_11.prefab_name ~= "" and arg_503_1.actors_[var_506_11.prefab_name] ~= nil then
						local var_506_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_503_1.actors_[var_506_11.prefab_name].transform, "story_v_out_413161", "413161123", "story_v_out_413161.awb")

						arg_503_1:RecordAudio("413161123", var_506_17)
						arg_503_1:RecordAudio("413161123", var_506_17)
					else
						arg_503_1:AudioAction("play", "voice", "story_v_out_413161", "413161123", "story_v_out_413161.awb")
					end

					arg_503_1:RecordHistoryTalkVoice("story_v_out_413161", "413161123", "story_v_out_413161.awb")
				end

				arg_503_1:RecordContent(arg_503_1.text_.text)
			end

			local var_506_18 = math.max(var_506_9, arg_503_1.talkMaxDuration)

			if var_506_8 <= arg_503_1.time_ and arg_503_1.time_ < var_506_8 + var_506_18 then
				arg_503_1.typewritter.percent = (arg_503_1.time_ - var_506_8) / var_506_18

				arg_503_1.typewritter:SetDirty()
			end

			if arg_503_1.time_ >= var_506_8 + var_506_18 and arg_503_1.time_ < var_506_8 + var_506_18 + arg_506_0 then
				arg_503_1.typewritter.percent = 1

				arg_503_1.typewritter:SetDirty()
				arg_503_1:ShowNextGo(true)
			end
		end
	end,
	Play413161124 = function(arg_507_0, arg_507_1)
		arg_507_1.time_ = 0
		arg_507_1.frameCnt_ = 0
		arg_507_1.state_ = "playing"
		arg_507_1.curTalkId_ = 413161124
		arg_507_1.duration_ = 7.7

		local var_507_0 = {
			zh = 6.133,
			ja = 7.7
		}
		local var_507_1 = manager.audio:GetLocalizationFlag()

		if var_507_0[var_507_1] ~= nil then
			arg_507_1.duration_ = var_507_0[var_507_1]
		end

		SetActive(arg_507_1.tipsGo_, false)

		function arg_507_1.onSingleLineFinish_()
			arg_507_1.onSingleLineUpdate_ = nil
			arg_507_1.onSingleLineFinish_ = nil
			arg_507_1.state_ = "waiting"
		end

		function arg_507_1.playNext_(arg_509_0)
			if arg_509_0 == 1 then
				arg_507_0:Play413161125(arg_507_1)
			end
		end

		function arg_507_1.onSingleLineUpdate_(arg_510_0)
			local var_510_0 = arg_507_1.actors_["10022"]
			local var_510_1 = 0

			if var_510_1 < arg_507_1.time_ and arg_507_1.time_ <= var_510_1 + arg_510_0 and not isNil(var_510_0) and arg_507_1.var_.actorSpriteComps10022 == nil then
				arg_507_1.var_.actorSpriteComps10022 = var_510_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_510_2 = 2

			if var_510_1 <= arg_507_1.time_ and arg_507_1.time_ < var_510_1 + var_510_2 and not isNil(var_510_0) then
				local var_510_3 = (arg_507_1.time_ - var_510_1) / var_510_2

				if arg_507_1.var_.actorSpriteComps10022 then
					for iter_510_0, iter_510_1 in pairs(arg_507_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_510_1 then
							if arg_507_1.isInRecall_ then
								local var_510_4 = Mathf.Lerp(iter_510_1.color.r, arg_507_1.hightColor1.r, var_510_3)
								local var_510_5 = Mathf.Lerp(iter_510_1.color.g, arg_507_1.hightColor1.g, var_510_3)
								local var_510_6 = Mathf.Lerp(iter_510_1.color.b, arg_507_1.hightColor1.b, var_510_3)

								iter_510_1.color = Color.New(var_510_4, var_510_5, var_510_6)
							else
								local var_510_7 = Mathf.Lerp(iter_510_1.color.r, 1, var_510_3)

								iter_510_1.color = Color.New(var_510_7, var_510_7, var_510_7)
							end
						end
					end
				end
			end

			if arg_507_1.time_ >= var_510_1 + var_510_2 and arg_507_1.time_ < var_510_1 + var_510_2 + arg_510_0 and not isNil(var_510_0) and arg_507_1.var_.actorSpriteComps10022 then
				for iter_510_2, iter_510_3 in pairs(arg_507_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_510_3 then
						if arg_507_1.isInRecall_ then
							iter_510_3.color = arg_507_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_510_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_507_1.var_.actorSpriteComps10022 = nil
			end

			local var_510_8 = 0
			local var_510_9 = 0.775

			if var_510_8 < arg_507_1.time_ and arg_507_1.time_ <= var_510_8 + arg_510_0 then
				arg_507_1.talkMaxDuration = 0
				arg_507_1.dialogCg_.alpha = 1

				arg_507_1.dialog_:SetActive(true)
				SetActive(arg_507_1.leftNameGo_, true)

				local var_510_10 = arg_507_1:FormatText(StoryNameCfg[614].name)

				arg_507_1.leftNameTxt_.text = var_510_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_507_1.leftNameTxt_.transform)

				arg_507_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_507_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_507_1:RecordName(arg_507_1.leftNameTxt_.text)
				SetActive(arg_507_1.iconTrs_.gameObject, false)
				arg_507_1.callingController_:SetSelectedState("normal")

				local var_510_11 = arg_507_1:GetWordFromCfg(413161124)
				local var_510_12 = arg_507_1:FormatText(var_510_11.content)

				arg_507_1.text_.text = var_510_12

				LuaForUtil.ClearLinePrefixSymbol(arg_507_1.text_)

				local var_510_13 = 31
				local var_510_14 = utf8.len(var_510_12)
				local var_510_15 = var_510_13 <= 0 and var_510_9 or var_510_9 * (var_510_14 / var_510_13)

				if var_510_15 > 0 and var_510_9 < var_510_15 then
					arg_507_1.talkMaxDuration = var_510_15

					if var_510_15 + var_510_8 > arg_507_1.duration_ then
						arg_507_1.duration_ = var_510_15 + var_510_8
					end
				end

				arg_507_1.text_.text = var_510_12
				arg_507_1.typewritter.percent = 0

				arg_507_1.typewritter:SetDirty()
				arg_507_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161124", "story_v_out_413161.awb") ~= 0 then
					local var_510_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161124", "story_v_out_413161.awb") / 1000

					if var_510_16 + var_510_8 > arg_507_1.duration_ then
						arg_507_1.duration_ = var_510_16 + var_510_8
					end

					if var_510_11.prefab_name ~= "" and arg_507_1.actors_[var_510_11.prefab_name] ~= nil then
						local var_510_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_507_1.actors_[var_510_11.prefab_name].transform, "story_v_out_413161", "413161124", "story_v_out_413161.awb")

						arg_507_1:RecordAudio("413161124", var_510_17)
						arg_507_1:RecordAudio("413161124", var_510_17)
					else
						arg_507_1:AudioAction("play", "voice", "story_v_out_413161", "413161124", "story_v_out_413161.awb")
					end

					arg_507_1:RecordHistoryTalkVoice("story_v_out_413161", "413161124", "story_v_out_413161.awb")
				end

				arg_507_1:RecordContent(arg_507_1.text_.text)
			end

			local var_510_18 = math.max(var_510_9, arg_507_1.talkMaxDuration)

			if var_510_8 <= arg_507_1.time_ and arg_507_1.time_ < var_510_8 + var_510_18 then
				arg_507_1.typewritter.percent = (arg_507_1.time_ - var_510_8) / var_510_18

				arg_507_1.typewritter:SetDirty()
			end

			if arg_507_1.time_ >= var_510_8 + var_510_18 and arg_507_1.time_ < var_510_8 + var_510_18 + arg_510_0 then
				arg_507_1.typewritter.percent = 1

				arg_507_1.typewritter:SetDirty()
				arg_507_1:ShowNextGo(true)
			end
		end
	end,
	Play413161125 = function(arg_511_0, arg_511_1)
		arg_511_1.time_ = 0
		arg_511_1.frameCnt_ = 0
		arg_511_1.state_ = "playing"
		arg_511_1.curTalkId_ = 413161125
		arg_511_1.duration_ = 8.47

		local var_511_0 = {
			zh = 5.9,
			ja = 8.466
		}
		local var_511_1 = manager.audio:GetLocalizationFlag()

		if var_511_0[var_511_1] ~= nil then
			arg_511_1.duration_ = var_511_0[var_511_1]
		end

		SetActive(arg_511_1.tipsGo_, false)

		function arg_511_1.onSingleLineFinish_()
			arg_511_1.onSingleLineUpdate_ = nil
			arg_511_1.onSingleLineFinish_ = nil
			arg_511_1.state_ = "waiting"
		end

		function arg_511_1.playNext_(arg_513_0)
			if arg_513_0 == 1 then
				arg_511_0:Play413161126(arg_511_1)
			end
		end

		function arg_511_1.onSingleLineUpdate_(arg_514_0)
			local var_514_0 = arg_511_1.actors_["10022"]
			local var_514_1 = 0

			if var_514_1 < arg_511_1.time_ and arg_511_1.time_ <= var_514_1 + arg_514_0 and not isNil(var_514_0) and arg_511_1.var_.actorSpriteComps10022 == nil then
				arg_511_1.var_.actorSpriteComps10022 = var_514_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_514_2 = 2

			if var_514_1 <= arg_511_1.time_ and arg_511_1.time_ < var_514_1 + var_514_2 and not isNil(var_514_0) then
				local var_514_3 = (arg_511_1.time_ - var_514_1) / var_514_2

				if arg_511_1.var_.actorSpriteComps10022 then
					for iter_514_0, iter_514_1 in pairs(arg_511_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_514_1 then
							if arg_511_1.isInRecall_ then
								local var_514_4 = Mathf.Lerp(iter_514_1.color.r, arg_511_1.hightColor2.r, var_514_3)
								local var_514_5 = Mathf.Lerp(iter_514_1.color.g, arg_511_1.hightColor2.g, var_514_3)
								local var_514_6 = Mathf.Lerp(iter_514_1.color.b, arg_511_1.hightColor2.b, var_514_3)

								iter_514_1.color = Color.New(var_514_4, var_514_5, var_514_6)
							else
								local var_514_7 = Mathf.Lerp(iter_514_1.color.r, 0.5, var_514_3)

								iter_514_1.color = Color.New(var_514_7, var_514_7, var_514_7)
							end
						end
					end
				end
			end

			if arg_511_1.time_ >= var_514_1 + var_514_2 and arg_511_1.time_ < var_514_1 + var_514_2 + arg_514_0 and not isNil(var_514_0) and arg_511_1.var_.actorSpriteComps10022 then
				for iter_514_2, iter_514_3 in pairs(arg_511_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_514_3 then
						if arg_511_1.isInRecall_ then
							iter_514_3.color = arg_511_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_514_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_511_1.var_.actorSpriteComps10022 = nil
			end

			local var_514_8 = 0
			local var_514_9 = 0.7

			if var_514_8 < arg_511_1.time_ and arg_511_1.time_ <= var_514_8 + arg_514_0 then
				arg_511_1.talkMaxDuration = 0
				arg_511_1.dialogCg_.alpha = 1

				arg_511_1.dialog_:SetActive(true)
				SetActive(arg_511_1.leftNameGo_, true)

				local var_514_10 = arg_511_1:FormatText(StoryNameCfg[998].name)

				arg_511_1.leftNameTxt_.text = var_514_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_511_1.leftNameTxt_.transform)

				arg_511_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_511_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_511_1:RecordName(arg_511_1.leftNameTxt_.text)
				SetActive(arg_511_1.iconTrs_.gameObject, true)
				arg_511_1.iconController_:SetSelectedState("hero")

				arg_511_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_511_1.callingController_:SetSelectedState("normal")

				arg_511_1.keyicon_.color = Color.New(1, 1, 1)
				arg_511_1.icon_.color = Color.New(1, 1, 1)

				local var_514_11 = arg_511_1:GetWordFromCfg(413161125)
				local var_514_12 = arg_511_1:FormatText(var_514_11.content)

				arg_511_1.text_.text = var_514_12

				LuaForUtil.ClearLinePrefixSymbol(arg_511_1.text_)

				local var_514_13 = 28
				local var_514_14 = utf8.len(var_514_12)
				local var_514_15 = var_514_13 <= 0 and var_514_9 or var_514_9 * (var_514_14 / var_514_13)

				if var_514_15 > 0 and var_514_9 < var_514_15 then
					arg_511_1.talkMaxDuration = var_514_15

					if var_514_15 + var_514_8 > arg_511_1.duration_ then
						arg_511_1.duration_ = var_514_15 + var_514_8
					end
				end

				arg_511_1.text_.text = var_514_12
				arg_511_1.typewritter.percent = 0

				arg_511_1.typewritter:SetDirty()
				arg_511_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161125", "story_v_out_413161.awb") ~= 0 then
					local var_514_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161125", "story_v_out_413161.awb") / 1000

					if var_514_16 + var_514_8 > arg_511_1.duration_ then
						arg_511_1.duration_ = var_514_16 + var_514_8
					end

					if var_514_11.prefab_name ~= "" and arg_511_1.actors_[var_514_11.prefab_name] ~= nil then
						local var_514_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_511_1.actors_[var_514_11.prefab_name].transform, "story_v_out_413161", "413161125", "story_v_out_413161.awb")

						arg_511_1:RecordAudio("413161125", var_514_17)
						arg_511_1:RecordAudio("413161125", var_514_17)
					else
						arg_511_1:AudioAction("play", "voice", "story_v_out_413161", "413161125", "story_v_out_413161.awb")
					end

					arg_511_1:RecordHistoryTalkVoice("story_v_out_413161", "413161125", "story_v_out_413161.awb")
				end

				arg_511_1:RecordContent(arg_511_1.text_.text)
			end

			local var_514_18 = math.max(var_514_9, arg_511_1.talkMaxDuration)

			if var_514_8 <= arg_511_1.time_ and arg_511_1.time_ < var_514_8 + var_514_18 then
				arg_511_1.typewritter.percent = (arg_511_1.time_ - var_514_8) / var_514_18

				arg_511_1.typewritter:SetDirty()
			end

			if arg_511_1.time_ >= var_514_8 + var_514_18 and arg_511_1.time_ < var_514_8 + var_514_18 + arg_514_0 then
				arg_511_1.typewritter.percent = 1

				arg_511_1.typewritter:SetDirty()
				arg_511_1:ShowNextGo(true)
			end
		end
	end,
	Play413161126 = function(arg_515_0, arg_515_1)
		arg_515_1.time_ = 0
		arg_515_1.frameCnt_ = 0
		arg_515_1.state_ = "playing"
		arg_515_1.curTalkId_ = 413161126
		arg_515_1.duration_ = 4.67

		local var_515_0 = {
			zh = 2.8,
			ja = 4.666
		}
		local var_515_1 = manager.audio:GetLocalizationFlag()

		if var_515_0[var_515_1] ~= nil then
			arg_515_1.duration_ = var_515_0[var_515_1]
		end

		SetActive(arg_515_1.tipsGo_, false)

		function arg_515_1.onSingleLineFinish_()
			arg_515_1.onSingleLineUpdate_ = nil
			arg_515_1.onSingleLineFinish_ = nil
			arg_515_1.state_ = "waiting"
		end

		function arg_515_1.playNext_(arg_517_0)
			if arg_517_0 == 1 then
				arg_515_0:Play413161127(arg_515_1)
			end
		end

		function arg_515_1.onSingleLineUpdate_(arg_518_0)
			local var_518_0 = 0
			local var_518_1 = 0.4

			if var_518_0 < arg_515_1.time_ and arg_515_1.time_ <= var_518_0 + arg_518_0 then
				arg_515_1.talkMaxDuration = 0
				arg_515_1.dialogCg_.alpha = 1

				arg_515_1.dialog_:SetActive(true)
				SetActive(arg_515_1.leftNameGo_, true)

				local var_518_2 = arg_515_1:FormatText(StoryNameCfg[998].name)

				arg_515_1.leftNameTxt_.text = var_518_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_515_1.leftNameTxt_.transform)

				arg_515_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_515_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_515_1:RecordName(arg_515_1.leftNameTxt_.text)
				SetActive(arg_515_1.iconTrs_.gameObject, true)
				arg_515_1.iconController_:SetSelectedState("hero")

				arg_515_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_515_1.callingController_:SetSelectedState("normal")

				arg_515_1.keyicon_.color = Color.New(1, 1, 1)
				arg_515_1.icon_.color = Color.New(1, 1, 1)

				local var_518_3 = arg_515_1:GetWordFromCfg(413161126)
				local var_518_4 = arg_515_1:FormatText(var_518_3.content)

				arg_515_1.text_.text = var_518_4

				LuaForUtil.ClearLinePrefixSymbol(arg_515_1.text_)

				local var_518_5 = 16
				local var_518_6 = utf8.len(var_518_4)
				local var_518_7 = var_518_5 <= 0 and var_518_1 or var_518_1 * (var_518_6 / var_518_5)

				if var_518_7 > 0 and var_518_1 < var_518_7 then
					arg_515_1.talkMaxDuration = var_518_7

					if var_518_7 + var_518_0 > arg_515_1.duration_ then
						arg_515_1.duration_ = var_518_7 + var_518_0
					end
				end

				arg_515_1.text_.text = var_518_4
				arg_515_1.typewritter.percent = 0

				arg_515_1.typewritter:SetDirty()
				arg_515_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161126", "story_v_out_413161.awb") ~= 0 then
					local var_518_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161126", "story_v_out_413161.awb") / 1000

					if var_518_8 + var_518_0 > arg_515_1.duration_ then
						arg_515_1.duration_ = var_518_8 + var_518_0
					end

					if var_518_3.prefab_name ~= "" and arg_515_1.actors_[var_518_3.prefab_name] ~= nil then
						local var_518_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_515_1.actors_[var_518_3.prefab_name].transform, "story_v_out_413161", "413161126", "story_v_out_413161.awb")

						arg_515_1:RecordAudio("413161126", var_518_9)
						arg_515_1:RecordAudio("413161126", var_518_9)
					else
						arg_515_1:AudioAction("play", "voice", "story_v_out_413161", "413161126", "story_v_out_413161.awb")
					end

					arg_515_1:RecordHistoryTalkVoice("story_v_out_413161", "413161126", "story_v_out_413161.awb")
				end

				arg_515_1:RecordContent(arg_515_1.text_.text)
			end

			local var_518_10 = math.max(var_518_1, arg_515_1.talkMaxDuration)

			if var_518_0 <= arg_515_1.time_ and arg_515_1.time_ < var_518_0 + var_518_10 then
				arg_515_1.typewritter.percent = (arg_515_1.time_ - var_518_0) / var_518_10

				arg_515_1.typewritter:SetDirty()
			end

			if arg_515_1.time_ >= var_518_0 + var_518_10 and arg_515_1.time_ < var_518_0 + var_518_10 + arg_518_0 then
				arg_515_1.typewritter.percent = 1

				arg_515_1.typewritter:SetDirty()
				arg_515_1:ShowNextGo(true)
			end
		end
	end,
	Play413161127 = function(arg_519_0, arg_519_1)
		arg_519_1.time_ = 0
		arg_519_1.frameCnt_ = 0
		arg_519_1.state_ = "playing"
		arg_519_1.curTalkId_ = 413161127
		arg_519_1.duration_ = 7.83

		local var_519_0 = {
			zh = 5.233,
			ja = 7.833
		}
		local var_519_1 = manager.audio:GetLocalizationFlag()

		if var_519_0[var_519_1] ~= nil then
			arg_519_1.duration_ = var_519_0[var_519_1]
		end

		SetActive(arg_519_1.tipsGo_, false)

		function arg_519_1.onSingleLineFinish_()
			arg_519_1.onSingleLineUpdate_ = nil
			arg_519_1.onSingleLineFinish_ = nil
			arg_519_1.state_ = "waiting"
		end

		function arg_519_1.playNext_(arg_521_0)
			if arg_521_0 == 1 then
				arg_519_0:Play413161128(arg_519_1)
			end
		end

		function arg_519_1.onSingleLineUpdate_(arg_522_0)
			local var_522_0 = arg_519_1.actors_["10022"]
			local var_522_1 = 0

			if var_522_1 < arg_519_1.time_ and arg_519_1.time_ <= var_522_1 + arg_522_0 and not isNil(var_522_0) and arg_519_1.var_.actorSpriteComps10022 == nil then
				arg_519_1.var_.actorSpriteComps10022 = var_522_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_522_2 = 2

			if var_522_1 <= arg_519_1.time_ and arg_519_1.time_ < var_522_1 + var_522_2 and not isNil(var_522_0) then
				local var_522_3 = (arg_519_1.time_ - var_522_1) / var_522_2

				if arg_519_1.var_.actorSpriteComps10022 then
					for iter_522_0, iter_522_1 in pairs(arg_519_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_522_1 then
							if arg_519_1.isInRecall_ then
								local var_522_4 = Mathf.Lerp(iter_522_1.color.r, arg_519_1.hightColor1.r, var_522_3)
								local var_522_5 = Mathf.Lerp(iter_522_1.color.g, arg_519_1.hightColor1.g, var_522_3)
								local var_522_6 = Mathf.Lerp(iter_522_1.color.b, arg_519_1.hightColor1.b, var_522_3)

								iter_522_1.color = Color.New(var_522_4, var_522_5, var_522_6)
							else
								local var_522_7 = Mathf.Lerp(iter_522_1.color.r, 1, var_522_3)

								iter_522_1.color = Color.New(var_522_7, var_522_7, var_522_7)
							end
						end
					end
				end
			end

			if arg_519_1.time_ >= var_522_1 + var_522_2 and arg_519_1.time_ < var_522_1 + var_522_2 + arg_522_0 and not isNil(var_522_0) and arg_519_1.var_.actorSpriteComps10022 then
				for iter_522_2, iter_522_3 in pairs(arg_519_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_522_3 then
						if arg_519_1.isInRecall_ then
							iter_522_3.color = arg_519_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_522_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_519_1.var_.actorSpriteComps10022 = nil
			end

			local var_522_8 = 0
			local var_522_9 = 0.675

			if var_522_8 < arg_519_1.time_ and arg_519_1.time_ <= var_522_8 + arg_522_0 then
				arg_519_1.talkMaxDuration = 0
				arg_519_1.dialogCg_.alpha = 1

				arg_519_1.dialog_:SetActive(true)
				SetActive(arg_519_1.leftNameGo_, true)

				local var_522_10 = arg_519_1:FormatText(StoryNameCfg[614].name)

				arg_519_1.leftNameTxt_.text = var_522_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_519_1.leftNameTxt_.transform)

				arg_519_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_519_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_519_1:RecordName(arg_519_1.leftNameTxt_.text)
				SetActive(arg_519_1.iconTrs_.gameObject, false)
				arg_519_1.callingController_:SetSelectedState("normal")

				local var_522_11 = arg_519_1:GetWordFromCfg(413161127)
				local var_522_12 = arg_519_1:FormatText(var_522_11.content)

				arg_519_1.text_.text = var_522_12

				LuaForUtil.ClearLinePrefixSymbol(arg_519_1.text_)

				local var_522_13 = 27
				local var_522_14 = utf8.len(var_522_12)
				local var_522_15 = var_522_13 <= 0 and var_522_9 or var_522_9 * (var_522_14 / var_522_13)

				if var_522_15 > 0 and var_522_9 < var_522_15 then
					arg_519_1.talkMaxDuration = var_522_15

					if var_522_15 + var_522_8 > arg_519_1.duration_ then
						arg_519_1.duration_ = var_522_15 + var_522_8
					end
				end

				arg_519_1.text_.text = var_522_12
				arg_519_1.typewritter.percent = 0

				arg_519_1.typewritter:SetDirty()
				arg_519_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161127", "story_v_out_413161.awb") ~= 0 then
					local var_522_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161127", "story_v_out_413161.awb") / 1000

					if var_522_16 + var_522_8 > arg_519_1.duration_ then
						arg_519_1.duration_ = var_522_16 + var_522_8
					end

					if var_522_11.prefab_name ~= "" and arg_519_1.actors_[var_522_11.prefab_name] ~= nil then
						local var_522_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_519_1.actors_[var_522_11.prefab_name].transform, "story_v_out_413161", "413161127", "story_v_out_413161.awb")

						arg_519_1:RecordAudio("413161127", var_522_17)
						arg_519_1:RecordAudio("413161127", var_522_17)
					else
						arg_519_1:AudioAction("play", "voice", "story_v_out_413161", "413161127", "story_v_out_413161.awb")
					end

					arg_519_1:RecordHistoryTalkVoice("story_v_out_413161", "413161127", "story_v_out_413161.awb")
				end

				arg_519_1:RecordContent(arg_519_1.text_.text)
			end

			local var_522_18 = math.max(var_522_9, arg_519_1.talkMaxDuration)

			if var_522_8 <= arg_519_1.time_ and arg_519_1.time_ < var_522_8 + var_522_18 then
				arg_519_1.typewritter.percent = (arg_519_1.time_ - var_522_8) / var_522_18

				arg_519_1.typewritter:SetDirty()
			end

			if arg_519_1.time_ >= var_522_8 + var_522_18 and arg_519_1.time_ < var_522_8 + var_522_18 + arg_522_0 then
				arg_519_1.typewritter.percent = 1

				arg_519_1.typewritter:SetDirty()
				arg_519_1:ShowNextGo(true)
			end
		end
	end,
	Play413161128 = function(arg_523_0, arg_523_1)
		arg_523_1.time_ = 0
		arg_523_1.frameCnt_ = 0
		arg_523_1.state_ = "playing"
		arg_523_1.curTalkId_ = 413161128
		arg_523_1.duration_ = 2

		SetActive(arg_523_1.tipsGo_, false)

		function arg_523_1.onSingleLineFinish_()
			arg_523_1.onSingleLineUpdate_ = nil
			arg_523_1.onSingleLineFinish_ = nil
			arg_523_1.state_ = "waiting"
		end

		function arg_523_1.playNext_(arg_525_0)
			if arg_525_0 == 1 then
				arg_523_0:Play413161129(arg_523_1)
			end
		end

		function arg_523_1.onSingleLineUpdate_(arg_526_0)
			local var_526_0 = arg_523_1.actors_["10022"]
			local var_526_1 = 0

			if var_526_1 < arg_523_1.time_ and arg_523_1.time_ <= var_526_1 + arg_526_0 and not isNil(var_526_0) and arg_523_1.var_.actorSpriteComps10022 == nil then
				arg_523_1.var_.actorSpriteComps10022 = var_526_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_526_2 = 2

			if var_526_1 <= arg_523_1.time_ and arg_523_1.time_ < var_526_1 + var_526_2 and not isNil(var_526_0) then
				local var_526_3 = (arg_523_1.time_ - var_526_1) / var_526_2

				if arg_523_1.var_.actorSpriteComps10022 then
					for iter_526_0, iter_526_1 in pairs(arg_523_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_526_1 then
							if arg_523_1.isInRecall_ then
								local var_526_4 = Mathf.Lerp(iter_526_1.color.r, arg_523_1.hightColor2.r, var_526_3)
								local var_526_5 = Mathf.Lerp(iter_526_1.color.g, arg_523_1.hightColor2.g, var_526_3)
								local var_526_6 = Mathf.Lerp(iter_526_1.color.b, arg_523_1.hightColor2.b, var_526_3)

								iter_526_1.color = Color.New(var_526_4, var_526_5, var_526_6)
							else
								local var_526_7 = Mathf.Lerp(iter_526_1.color.r, 0.5, var_526_3)

								iter_526_1.color = Color.New(var_526_7, var_526_7, var_526_7)
							end
						end
					end
				end
			end

			if arg_523_1.time_ >= var_526_1 + var_526_2 and arg_523_1.time_ < var_526_1 + var_526_2 + arg_526_0 and not isNil(var_526_0) and arg_523_1.var_.actorSpriteComps10022 then
				for iter_526_2, iter_526_3 in pairs(arg_523_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_526_3 then
						if arg_523_1.isInRecall_ then
							iter_526_3.color = arg_523_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_526_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_523_1.var_.actorSpriteComps10022 = nil
			end

			local var_526_8 = 0
			local var_526_9 = 0.125

			if var_526_8 < arg_523_1.time_ and arg_523_1.time_ <= var_526_8 + arg_526_0 then
				arg_523_1.talkMaxDuration = 0
				arg_523_1.dialogCg_.alpha = 1

				arg_523_1.dialog_:SetActive(true)
				SetActive(arg_523_1.leftNameGo_, true)

				local var_526_10 = arg_523_1:FormatText(StoryNameCfg[998].name)

				arg_523_1.leftNameTxt_.text = var_526_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_523_1.leftNameTxt_.transform)

				arg_523_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_523_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_523_1:RecordName(arg_523_1.leftNameTxt_.text)
				SetActive(arg_523_1.iconTrs_.gameObject, true)
				arg_523_1.iconController_:SetSelectedState("hero")

				arg_523_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_523_1.callingController_:SetSelectedState("normal")

				arg_523_1.keyicon_.color = Color.New(1, 1, 1)
				arg_523_1.icon_.color = Color.New(1, 1, 1)

				local var_526_11 = arg_523_1:GetWordFromCfg(413161128)
				local var_526_12 = arg_523_1:FormatText(var_526_11.content)

				arg_523_1.text_.text = var_526_12

				LuaForUtil.ClearLinePrefixSymbol(arg_523_1.text_)

				local var_526_13 = 5
				local var_526_14 = utf8.len(var_526_12)
				local var_526_15 = var_526_13 <= 0 and var_526_9 or var_526_9 * (var_526_14 / var_526_13)

				if var_526_15 > 0 and var_526_9 < var_526_15 then
					arg_523_1.talkMaxDuration = var_526_15

					if var_526_15 + var_526_8 > arg_523_1.duration_ then
						arg_523_1.duration_ = var_526_15 + var_526_8
					end
				end

				arg_523_1.text_.text = var_526_12
				arg_523_1.typewritter.percent = 0

				arg_523_1.typewritter:SetDirty()
				arg_523_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161128", "story_v_out_413161.awb") ~= 0 then
					local var_526_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161128", "story_v_out_413161.awb") / 1000

					if var_526_16 + var_526_8 > arg_523_1.duration_ then
						arg_523_1.duration_ = var_526_16 + var_526_8
					end

					if var_526_11.prefab_name ~= "" and arg_523_1.actors_[var_526_11.prefab_name] ~= nil then
						local var_526_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_523_1.actors_[var_526_11.prefab_name].transform, "story_v_out_413161", "413161128", "story_v_out_413161.awb")

						arg_523_1:RecordAudio("413161128", var_526_17)
						arg_523_1:RecordAudio("413161128", var_526_17)
					else
						arg_523_1:AudioAction("play", "voice", "story_v_out_413161", "413161128", "story_v_out_413161.awb")
					end

					arg_523_1:RecordHistoryTalkVoice("story_v_out_413161", "413161128", "story_v_out_413161.awb")
				end

				arg_523_1:RecordContent(arg_523_1.text_.text)
			end

			local var_526_18 = math.max(var_526_9, arg_523_1.talkMaxDuration)

			if var_526_8 <= arg_523_1.time_ and arg_523_1.time_ < var_526_8 + var_526_18 then
				arg_523_1.typewritter.percent = (arg_523_1.time_ - var_526_8) / var_526_18

				arg_523_1.typewritter:SetDirty()
			end

			if arg_523_1.time_ >= var_526_8 + var_526_18 and arg_523_1.time_ < var_526_8 + var_526_18 + arg_526_0 then
				arg_523_1.typewritter.percent = 1

				arg_523_1.typewritter:SetDirty()
				arg_523_1:ShowNextGo(true)
			end
		end
	end,
	Play413161129 = function(arg_527_0, arg_527_1)
		arg_527_1.time_ = 0
		arg_527_1.frameCnt_ = 0
		arg_527_1.state_ = "playing"
		arg_527_1.curTalkId_ = 413161129
		arg_527_1.duration_ = 5

		SetActive(arg_527_1.tipsGo_, false)

		function arg_527_1.onSingleLineFinish_()
			arg_527_1.onSingleLineUpdate_ = nil
			arg_527_1.onSingleLineFinish_ = nil
			arg_527_1.state_ = "waiting"
		end

		function arg_527_1.playNext_(arg_529_0)
			if arg_529_0 == 1 then
				arg_527_0:Play413161130(arg_527_1)
			end
		end

		function arg_527_1.onSingleLineUpdate_(arg_530_0)
			local var_530_0 = arg_527_1.actors_["10022"].transform
			local var_530_1 = 0

			if var_530_1 < arg_527_1.time_ and arg_527_1.time_ <= var_530_1 + arg_530_0 then
				arg_527_1.var_.moveOldPos10022 = var_530_0.localPosition
				var_530_0.localScale = Vector3.New(1, 1, 1)

				arg_527_1:CheckSpriteTmpPos("10022", 7)

				local var_530_2 = var_530_0.childCount

				for iter_530_0 = 0, var_530_2 - 1 do
					local var_530_3 = var_530_0:GetChild(iter_530_0)

					if var_530_3.name == "" or not string.find(var_530_3.name, "split") then
						var_530_3.gameObject:SetActive(true)
					else
						var_530_3.gameObject:SetActive(false)
					end
				end
			end

			local var_530_4 = 0.001

			if var_530_1 <= arg_527_1.time_ and arg_527_1.time_ < var_530_1 + var_530_4 then
				local var_530_5 = (arg_527_1.time_ - var_530_1) / var_530_4
				local var_530_6 = Vector3.New(0, -2000, 0)

				var_530_0.localPosition = Vector3.Lerp(arg_527_1.var_.moveOldPos10022, var_530_6, var_530_5)
			end

			if arg_527_1.time_ >= var_530_1 + var_530_4 and arg_527_1.time_ < var_530_1 + var_530_4 + arg_530_0 then
				var_530_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_530_7 = 0
			local var_530_8 = 0.5

			if var_530_7 < arg_527_1.time_ and arg_527_1.time_ <= var_530_7 + arg_530_0 then
				arg_527_1.talkMaxDuration = 0
				arg_527_1.dialogCg_.alpha = 1

				arg_527_1.dialog_:SetActive(true)
				SetActive(arg_527_1.leftNameGo_, false)

				arg_527_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_527_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_527_1:RecordName(arg_527_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_527_1.iconTrs_.gameObject, false)
				arg_527_1.callingController_:SetSelectedState("normal")

				local var_530_9 = arg_527_1:GetWordFromCfg(413161129)
				local var_530_10 = arg_527_1:FormatText(var_530_9.content)

				arg_527_1.text_.text = var_530_10

				LuaForUtil.ClearLinePrefixSymbol(arg_527_1.text_)

				local var_530_11 = 20
				local var_530_12 = utf8.len(var_530_10)
				local var_530_13 = var_530_11 <= 0 and var_530_8 or var_530_8 * (var_530_12 / var_530_11)

				if var_530_13 > 0 and var_530_8 < var_530_13 then
					arg_527_1.talkMaxDuration = var_530_13

					if var_530_13 + var_530_7 > arg_527_1.duration_ then
						arg_527_1.duration_ = var_530_13 + var_530_7
					end
				end

				arg_527_1.text_.text = var_530_10
				arg_527_1.typewritter.percent = 0

				arg_527_1.typewritter:SetDirty()
				arg_527_1:ShowNextGo(false)
				arg_527_1:RecordContent(arg_527_1.text_.text)
			end

			local var_530_14 = math.max(var_530_8, arg_527_1.talkMaxDuration)

			if var_530_7 <= arg_527_1.time_ and arg_527_1.time_ < var_530_7 + var_530_14 then
				arg_527_1.typewritter.percent = (arg_527_1.time_ - var_530_7) / var_530_14

				arg_527_1.typewritter:SetDirty()
			end

			if arg_527_1.time_ >= var_530_7 + var_530_14 and arg_527_1.time_ < var_530_7 + var_530_14 + arg_530_0 then
				arg_527_1.typewritter.percent = 1

				arg_527_1.typewritter:SetDirty()
				arg_527_1:ShowNextGo(true)
			end
		end
	end,
	Play413161130 = function(arg_531_0, arg_531_1)
		arg_531_1.time_ = 0
		arg_531_1.frameCnt_ = 0
		arg_531_1.state_ = "playing"
		arg_531_1.curTalkId_ = 413161130
		arg_531_1.duration_ = 10.63

		local var_531_0 = {
			zh = 3.933,
			ja = 10.633
		}
		local var_531_1 = manager.audio:GetLocalizationFlag()

		if var_531_0[var_531_1] ~= nil then
			arg_531_1.duration_ = var_531_0[var_531_1]
		end

		SetActive(arg_531_1.tipsGo_, false)

		function arg_531_1.onSingleLineFinish_()
			arg_531_1.onSingleLineUpdate_ = nil
			arg_531_1.onSingleLineFinish_ = nil
			arg_531_1.state_ = "waiting"
		end

		function arg_531_1.playNext_(arg_533_0)
			if arg_533_0 == 1 then
				arg_531_0:Play413161131(arg_531_1)
			end
		end

		function arg_531_1.onSingleLineUpdate_(arg_534_0)
			local var_534_0 = 0
			local var_534_1 = 0.575

			if var_534_0 < arg_531_1.time_ and arg_531_1.time_ <= var_534_0 + arg_534_0 then
				arg_531_1.talkMaxDuration = 0
				arg_531_1.dialogCg_.alpha = 1

				arg_531_1.dialog_:SetActive(true)
				SetActive(arg_531_1.leftNameGo_, true)

				local var_534_2 = arg_531_1:FormatText(StoryNameCfg[998].name)

				arg_531_1.leftNameTxt_.text = var_534_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_531_1.leftNameTxt_.transform)

				arg_531_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_531_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_531_1:RecordName(arg_531_1.leftNameTxt_.text)
				SetActive(arg_531_1.iconTrs_.gameObject, true)
				arg_531_1.iconController_:SetSelectedState("hero")

				arg_531_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_knightwoman1")

				arg_531_1.callingController_:SetSelectedState("normal")

				arg_531_1.keyicon_.color = Color.New(1, 1, 1)
				arg_531_1.icon_.color = Color.New(1, 1, 1)

				local var_534_3 = arg_531_1:GetWordFromCfg(413161130)
				local var_534_4 = arg_531_1:FormatText(var_534_3.content)

				arg_531_1.text_.text = var_534_4

				LuaForUtil.ClearLinePrefixSymbol(arg_531_1.text_)

				local var_534_5 = 23
				local var_534_6 = utf8.len(var_534_4)
				local var_534_7 = var_534_5 <= 0 and var_534_1 or var_534_1 * (var_534_6 / var_534_5)

				if var_534_7 > 0 and var_534_1 < var_534_7 then
					arg_531_1.talkMaxDuration = var_534_7

					if var_534_7 + var_534_0 > arg_531_1.duration_ then
						arg_531_1.duration_ = var_534_7 + var_534_0
					end
				end

				arg_531_1.text_.text = var_534_4
				arg_531_1.typewritter.percent = 0

				arg_531_1.typewritter:SetDirty()
				arg_531_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161130", "story_v_out_413161.awb") ~= 0 then
					local var_534_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161130", "story_v_out_413161.awb") / 1000

					if var_534_8 + var_534_0 > arg_531_1.duration_ then
						arg_531_1.duration_ = var_534_8 + var_534_0
					end

					if var_534_3.prefab_name ~= "" and arg_531_1.actors_[var_534_3.prefab_name] ~= nil then
						local var_534_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_531_1.actors_[var_534_3.prefab_name].transform, "story_v_out_413161", "413161130", "story_v_out_413161.awb")

						arg_531_1:RecordAudio("413161130", var_534_9)
						arg_531_1:RecordAudio("413161130", var_534_9)
					else
						arg_531_1:AudioAction("play", "voice", "story_v_out_413161", "413161130", "story_v_out_413161.awb")
					end

					arg_531_1:RecordHistoryTalkVoice("story_v_out_413161", "413161130", "story_v_out_413161.awb")
				end

				arg_531_1:RecordContent(arg_531_1.text_.text)
			end

			local var_534_10 = math.max(var_534_1, arg_531_1.talkMaxDuration)

			if var_534_0 <= arg_531_1.time_ and arg_531_1.time_ < var_534_0 + var_534_10 then
				arg_531_1.typewritter.percent = (arg_531_1.time_ - var_534_0) / var_534_10

				arg_531_1.typewritter:SetDirty()
			end

			if arg_531_1.time_ >= var_534_0 + var_534_10 and arg_531_1.time_ < var_534_0 + var_534_10 + arg_534_0 then
				arg_531_1.typewritter.percent = 1

				arg_531_1.typewritter:SetDirty()
				arg_531_1:ShowNextGo(true)
			end
		end
	end,
	Play413161131 = function(arg_535_0, arg_535_1)
		arg_535_1.time_ = 0
		arg_535_1.frameCnt_ = 0
		arg_535_1.state_ = "playing"
		arg_535_1.curTalkId_ = 413161131
		arg_535_1.duration_ = 5

		SetActive(arg_535_1.tipsGo_, false)

		function arg_535_1.onSingleLineFinish_()
			arg_535_1.onSingleLineUpdate_ = nil
			arg_535_1.onSingleLineFinish_ = nil
			arg_535_1.state_ = "waiting"
		end

		function arg_535_1.playNext_(arg_537_0)
			if arg_537_0 == 1 then
				arg_535_0:Play413161132(arg_535_1)
			end
		end

		function arg_535_1.onSingleLineUpdate_(arg_538_0)
			local var_538_0 = 0
			local var_538_1 = 0.65

			if var_538_0 < arg_535_1.time_ and arg_535_1.time_ <= var_538_0 + arg_538_0 then
				arg_535_1.talkMaxDuration = 0
				arg_535_1.dialogCg_.alpha = 1

				arg_535_1.dialog_:SetActive(true)
				SetActive(arg_535_1.leftNameGo_, false)

				arg_535_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_535_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_535_1:RecordName(arg_535_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_535_1.iconTrs_.gameObject, false)
				arg_535_1.callingController_:SetSelectedState("normal")

				local var_538_2 = arg_535_1:GetWordFromCfg(413161131)
				local var_538_3 = arg_535_1:FormatText(var_538_2.content)

				arg_535_1.text_.text = var_538_3

				LuaForUtil.ClearLinePrefixSymbol(arg_535_1.text_)

				local var_538_4 = 26
				local var_538_5 = utf8.len(var_538_3)
				local var_538_6 = var_538_4 <= 0 and var_538_1 or var_538_1 * (var_538_5 / var_538_4)

				if var_538_6 > 0 and var_538_1 < var_538_6 then
					arg_535_1.talkMaxDuration = var_538_6

					if var_538_6 + var_538_0 > arg_535_1.duration_ then
						arg_535_1.duration_ = var_538_6 + var_538_0
					end
				end

				arg_535_1.text_.text = var_538_3
				arg_535_1.typewritter.percent = 0

				arg_535_1.typewritter:SetDirty()
				arg_535_1:ShowNextGo(false)
				arg_535_1:RecordContent(arg_535_1.text_.text)
			end

			local var_538_7 = math.max(var_538_1, arg_535_1.talkMaxDuration)

			if var_538_0 <= arg_535_1.time_ and arg_535_1.time_ < var_538_0 + var_538_7 then
				arg_535_1.typewritter.percent = (arg_535_1.time_ - var_538_0) / var_538_7

				arg_535_1.typewritter:SetDirty()
			end

			if arg_535_1.time_ >= var_538_0 + var_538_7 and arg_535_1.time_ < var_538_0 + var_538_7 + arg_538_0 then
				arg_535_1.typewritter.percent = 1

				arg_535_1.typewritter:SetDirty()
				arg_535_1:ShowNextGo(true)
			end
		end
	end,
	Play413161132 = function(arg_539_0, arg_539_1)
		arg_539_1.time_ = 0
		arg_539_1.frameCnt_ = 0
		arg_539_1.state_ = "playing"
		arg_539_1.curTalkId_ = 413161132
		arg_539_1.duration_ = 16.7

		local var_539_0 = {
			zh = 10.1,
			ja = 16.7
		}
		local var_539_1 = manager.audio:GetLocalizationFlag()

		if var_539_0[var_539_1] ~= nil then
			arg_539_1.duration_ = var_539_0[var_539_1]
		end

		SetActive(arg_539_1.tipsGo_, false)

		function arg_539_1.onSingleLineFinish_()
			arg_539_1.onSingleLineUpdate_ = nil
			arg_539_1.onSingleLineFinish_ = nil
			arg_539_1.state_ = "waiting"
		end

		function arg_539_1.playNext_(arg_541_0)
			if arg_541_0 == 1 then
				arg_539_0:Play413161133(arg_539_1)
			end
		end

		function arg_539_1.onSingleLineUpdate_(arg_542_0)
			local var_542_0 = arg_539_1.actors_["10022"].transform
			local var_542_1 = 0

			if var_542_1 < arg_539_1.time_ and arg_539_1.time_ <= var_542_1 + arg_542_0 then
				arg_539_1.var_.moveOldPos10022 = var_542_0.localPosition
				var_542_0.localScale = Vector3.New(1, 1, 1)

				arg_539_1:CheckSpriteTmpPos("10022", 3)

				local var_542_2 = var_542_0.childCount

				for iter_542_0 = 0, var_542_2 - 1 do
					local var_542_3 = var_542_0:GetChild(iter_542_0)

					if var_542_3.name == "split_8" or not string.find(var_542_3.name, "split") then
						var_542_3.gameObject:SetActive(true)
					else
						var_542_3.gameObject:SetActive(false)
					end
				end
			end

			local var_542_4 = 0.001

			if var_542_1 <= arg_539_1.time_ and arg_539_1.time_ < var_542_1 + var_542_4 then
				local var_542_5 = (arg_539_1.time_ - var_542_1) / var_542_4
				local var_542_6 = Vector3.New(0, -315, -320)

				var_542_0.localPosition = Vector3.Lerp(arg_539_1.var_.moveOldPos10022, var_542_6, var_542_5)
			end

			if arg_539_1.time_ >= var_542_1 + var_542_4 and arg_539_1.time_ < var_542_1 + var_542_4 + arg_542_0 then
				var_542_0.localPosition = Vector3.New(0, -315, -320)
			end

			local var_542_7 = arg_539_1.actors_["10022"]
			local var_542_8 = 0

			if var_542_8 < arg_539_1.time_ and arg_539_1.time_ <= var_542_8 + arg_542_0 and not isNil(var_542_7) and arg_539_1.var_.actorSpriteComps10022 == nil then
				arg_539_1.var_.actorSpriteComps10022 = var_542_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_542_9 = 2

			if var_542_8 <= arg_539_1.time_ and arg_539_1.time_ < var_542_8 + var_542_9 and not isNil(var_542_7) then
				local var_542_10 = (arg_539_1.time_ - var_542_8) / var_542_9

				if arg_539_1.var_.actorSpriteComps10022 then
					for iter_542_1, iter_542_2 in pairs(arg_539_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_542_2 then
							if arg_539_1.isInRecall_ then
								local var_542_11 = Mathf.Lerp(iter_542_2.color.r, arg_539_1.hightColor1.r, var_542_10)
								local var_542_12 = Mathf.Lerp(iter_542_2.color.g, arg_539_1.hightColor1.g, var_542_10)
								local var_542_13 = Mathf.Lerp(iter_542_2.color.b, arg_539_1.hightColor1.b, var_542_10)

								iter_542_2.color = Color.New(var_542_11, var_542_12, var_542_13)
							else
								local var_542_14 = Mathf.Lerp(iter_542_2.color.r, 1, var_542_10)

								iter_542_2.color = Color.New(var_542_14, var_542_14, var_542_14)
							end
						end
					end
				end
			end

			if arg_539_1.time_ >= var_542_8 + var_542_9 and arg_539_1.time_ < var_542_8 + var_542_9 + arg_542_0 and not isNil(var_542_7) and arg_539_1.var_.actorSpriteComps10022 then
				for iter_542_3, iter_542_4 in pairs(arg_539_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_542_4 then
						if arg_539_1.isInRecall_ then
							iter_542_4.color = arg_539_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_542_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_539_1.var_.actorSpriteComps10022 = nil
			end

			local var_542_15 = 0
			local var_542_16 = 1.025

			if var_542_15 < arg_539_1.time_ and arg_539_1.time_ <= var_542_15 + arg_542_0 then
				arg_539_1.talkMaxDuration = 0
				arg_539_1.dialogCg_.alpha = 1

				arg_539_1.dialog_:SetActive(true)
				SetActive(arg_539_1.leftNameGo_, true)

				local var_542_17 = arg_539_1:FormatText(StoryNameCfg[614].name)

				arg_539_1.leftNameTxt_.text = var_542_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_539_1.leftNameTxt_.transform)

				arg_539_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_539_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_539_1:RecordName(arg_539_1.leftNameTxt_.text)
				SetActive(arg_539_1.iconTrs_.gameObject, false)
				arg_539_1.callingController_:SetSelectedState("normal")

				local var_542_18 = arg_539_1:GetWordFromCfg(413161132)
				local var_542_19 = arg_539_1:FormatText(var_542_18.content)

				arg_539_1.text_.text = var_542_19

				LuaForUtil.ClearLinePrefixSymbol(arg_539_1.text_)

				local var_542_20 = 41
				local var_542_21 = utf8.len(var_542_19)
				local var_542_22 = var_542_20 <= 0 and var_542_16 or var_542_16 * (var_542_21 / var_542_20)

				if var_542_22 > 0 and var_542_16 < var_542_22 then
					arg_539_1.talkMaxDuration = var_542_22

					if var_542_22 + var_542_15 > arg_539_1.duration_ then
						arg_539_1.duration_ = var_542_22 + var_542_15
					end
				end

				arg_539_1.text_.text = var_542_19
				arg_539_1.typewritter.percent = 0

				arg_539_1.typewritter:SetDirty()
				arg_539_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161132", "story_v_out_413161.awb") ~= 0 then
					local var_542_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161132", "story_v_out_413161.awb") / 1000

					if var_542_23 + var_542_15 > arg_539_1.duration_ then
						arg_539_1.duration_ = var_542_23 + var_542_15
					end

					if var_542_18.prefab_name ~= "" and arg_539_1.actors_[var_542_18.prefab_name] ~= nil then
						local var_542_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_539_1.actors_[var_542_18.prefab_name].transform, "story_v_out_413161", "413161132", "story_v_out_413161.awb")

						arg_539_1:RecordAudio("413161132", var_542_24)
						arg_539_1:RecordAudio("413161132", var_542_24)
					else
						arg_539_1:AudioAction("play", "voice", "story_v_out_413161", "413161132", "story_v_out_413161.awb")
					end

					arg_539_1:RecordHistoryTalkVoice("story_v_out_413161", "413161132", "story_v_out_413161.awb")
				end

				arg_539_1:RecordContent(arg_539_1.text_.text)
			end

			local var_542_25 = math.max(var_542_16, arg_539_1.talkMaxDuration)

			if var_542_15 <= arg_539_1.time_ and arg_539_1.time_ < var_542_15 + var_542_25 then
				arg_539_1.typewritter.percent = (arg_539_1.time_ - var_542_15) / var_542_25

				arg_539_1.typewritter:SetDirty()
			end

			if arg_539_1.time_ >= var_542_15 + var_542_25 and arg_539_1.time_ < var_542_15 + var_542_25 + arg_542_0 then
				arg_539_1.typewritter.percent = 1

				arg_539_1.typewritter:SetDirty()
				arg_539_1:ShowNextGo(true)
			end
		end
	end,
	Play413161133 = function(arg_543_0, arg_543_1)
		arg_543_1.time_ = 0
		arg_543_1.frameCnt_ = 0
		arg_543_1.state_ = "playing"
		arg_543_1.curTalkId_ = 413161133
		arg_543_1.duration_ = 9

		SetActive(arg_543_1.tipsGo_, false)

		function arg_543_1.onSingleLineFinish_()
			arg_543_1.onSingleLineUpdate_ = nil
			arg_543_1.onSingleLineFinish_ = nil
			arg_543_1.state_ = "waiting"
		end

		function arg_543_1.playNext_(arg_545_0)
			if arg_545_0 == 1 then
				arg_543_0:Play413161134(arg_543_1)
			end
		end

		function arg_543_1.onSingleLineUpdate_(arg_546_0)
			local var_546_0 = "F08h"

			if arg_543_1.bgs_[var_546_0] == nil then
				local var_546_1 = Object.Instantiate(arg_543_1.paintGo_)

				var_546_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_546_0)
				var_546_1.name = var_546_0
				var_546_1.transform.parent = arg_543_1.stage_.transform
				var_546_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_543_1.bgs_[var_546_0] = var_546_1
			end

			local var_546_2 = 2

			if var_546_2 < arg_543_1.time_ and arg_543_1.time_ <= var_546_2 + arg_546_0 then
				local var_546_3 = manager.ui.mainCamera.transform.localPosition
				local var_546_4 = Vector3.New(0, 0, 10) + Vector3.New(var_546_3.x, var_546_3.y, 0)
				local var_546_5 = arg_543_1.bgs_.F08h

				var_546_5.transform.localPosition = var_546_4
				var_546_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_546_6 = var_546_5:GetComponent("SpriteRenderer")

				if var_546_6 and var_546_6.sprite then
					local var_546_7 = (var_546_5.transform.localPosition - var_546_3).z
					local var_546_8 = manager.ui.mainCameraCom_
					local var_546_9 = 2 * var_546_7 * Mathf.Tan(var_546_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_546_10 = var_546_9 * var_546_8.aspect
					local var_546_11 = var_546_6.sprite.bounds.size.x
					local var_546_12 = var_546_6.sprite.bounds.size.y
					local var_546_13 = var_546_10 / var_546_11
					local var_546_14 = var_546_9 / var_546_12
					local var_546_15 = var_546_14 < var_546_13 and var_546_13 or var_546_14

					var_546_5.transform.localScale = Vector3.New(var_546_15, var_546_15, 0)
				end

				for iter_546_0, iter_546_1 in pairs(arg_543_1.bgs_) do
					if iter_546_0 ~= "F08h" then
						iter_546_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_546_16 = 4

			if var_546_16 < arg_543_1.time_ and arg_543_1.time_ <= var_546_16 + arg_546_0 then
				arg_543_1.allBtn_.enabled = false
			end

			local var_546_17 = 0.3

			if arg_543_1.time_ >= var_546_16 + var_546_17 and arg_543_1.time_ < var_546_16 + var_546_17 + arg_546_0 then
				arg_543_1.allBtn_.enabled = true
			end

			local var_546_18 = 0

			if var_546_18 < arg_543_1.time_ and arg_543_1.time_ <= var_546_18 + arg_546_0 then
				arg_543_1.mask_.enabled = true
				arg_543_1.mask_.raycastTarget = true

				arg_543_1:SetGaussion(false)
			end

			local var_546_19 = 2

			if var_546_18 <= arg_543_1.time_ and arg_543_1.time_ < var_546_18 + var_546_19 then
				local var_546_20 = (arg_543_1.time_ - var_546_18) / var_546_19
				local var_546_21 = Color.New(0, 0, 0)

				var_546_21.a = Mathf.Lerp(0, 1, var_546_20)
				arg_543_1.mask_.color = var_546_21
			end

			if arg_543_1.time_ >= var_546_18 + var_546_19 and arg_543_1.time_ < var_546_18 + var_546_19 + arg_546_0 then
				local var_546_22 = Color.New(0, 0, 0)

				var_546_22.a = 1
				arg_543_1.mask_.color = var_546_22
			end

			local var_546_23 = 2

			if var_546_23 < arg_543_1.time_ and arg_543_1.time_ <= var_546_23 + arg_546_0 then
				arg_543_1.mask_.enabled = true
				arg_543_1.mask_.raycastTarget = true

				arg_543_1:SetGaussion(false)
			end

			local var_546_24 = 2

			if var_546_23 <= arg_543_1.time_ and arg_543_1.time_ < var_546_23 + var_546_24 then
				local var_546_25 = (arg_543_1.time_ - var_546_23) / var_546_24
				local var_546_26 = Color.New(0, 0, 0)

				var_546_26.a = Mathf.Lerp(1, 0, var_546_25)
				arg_543_1.mask_.color = var_546_26
			end

			if arg_543_1.time_ >= var_546_23 + var_546_24 and arg_543_1.time_ < var_546_23 + var_546_24 + arg_546_0 then
				local var_546_27 = Color.New(0, 0, 0)
				local var_546_28 = 0

				arg_543_1.mask_.enabled = false
				var_546_27.a = var_546_28
				arg_543_1.mask_.color = var_546_27
			end

			local var_546_29 = arg_543_1.actors_["10022"].transform
			local var_546_30 = 2

			if var_546_30 < arg_543_1.time_ and arg_543_1.time_ <= var_546_30 + arg_546_0 then
				arg_543_1.var_.moveOldPos10022 = var_546_29.localPosition
				var_546_29.localScale = Vector3.New(1, 1, 1)

				arg_543_1:CheckSpriteTmpPos("10022", 7)

				local var_546_31 = var_546_29.childCount

				for iter_546_2 = 0, var_546_31 - 1 do
					local var_546_32 = var_546_29:GetChild(iter_546_2)

					if var_546_32.name == "" or not string.find(var_546_32.name, "split") then
						var_546_32.gameObject:SetActive(true)
					else
						var_546_32.gameObject:SetActive(false)
					end
				end
			end

			local var_546_33 = 0.001

			if var_546_30 <= arg_543_1.time_ and arg_543_1.time_ < var_546_30 + var_546_33 then
				local var_546_34 = (arg_543_1.time_ - var_546_30) / var_546_33
				local var_546_35 = Vector3.New(0, -2000, 0)

				var_546_29.localPosition = Vector3.Lerp(arg_543_1.var_.moveOldPos10022, var_546_35, var_546_34)
			end

			if arg_543_1.time_ >= var_546_30 + var_546_33 and arg_543_1.time_ < var_546_30 + var_546_33 + arg_546_0 then
				var_546_29.localPosition = Vector3.New(0, -2000, 0)
			end

			if arg_543_1.frameCnt_ <= 1 then
				arg_543_1.dialog_:SetActive(false)
			end

			local var_546_36 = 4
			local var_546_37 = 1.075

			if var_546_36 < arg_543_1.time_ and arg_543_1.time_ <= var_546_36 + arg_546_0 then
				arg_543_1.talkMaxDuration = 0

				arg_543_1.dialog_:SetActive(true)

				local var_546_38 = LeanTween.value(arg_543_1.dialog_, 0, 1, 0.3)

				var_546_38:setOnUpdate(LuaHelper.FloatAction(function(arg_547_0)
					arg_543_1.dialogCg_.alpha = arg_547_0
				end))
				var_546_38:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_543_1.dialog_)
					var_546_38:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_543_1.duration_ = arg_543_1.duration_ + 0.3

				SetActive(arg_543_1.leftNameGo_, false)

				arg_543_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_543_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_543_1:RecordName(arg_543_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_543_1.iconTrs_.gameObject, false)
				arg_543_1.callingController_:SetSelectedState("normal")

				local var_546_39 = arg_543_1:GetWordFromCfg(413161133)
				local var_546_40 = arg_543_1:FormatText(var_546_39.content)

				arg_543_1.text_.text = var_546_40

				LuaForUtil.ClearLinePrefixSymbol(arg_543_1.text_)

				local var_546_41 = 43
				local var_546_42 = utf8.len(var_546_40)
				local var_546_43 = var_546_41 <= 0 and var_546_37 or var_546_37 * (var_546_42 / var_546_41)

				if var_546_43 > 0 and var_546_37 < var_546_43 then
					arg_543_1.talkMaxDuration = var_546_43
					var_546_36 = var_546_36 + 0.3

					if var_546_43 + var_546_36 > arg_543_1.duration_ then
						arg_543_1.duration_ = var_546_43 + var_546_36
					end
				end

				arg_543_1.text_.text = var_546_40
				arg_543_1.typewritter.percent = 0

				arg_543_1.typewritter:SetDirty()
				arg_543_1:ShowNextGo(false)
				arg_543_1:RecordContent(arg_543_1.text_.text)
			end

			local var_546_44 = var_546_36 + 0.3
			local var_546_45 = math.max(var_546_37, arg_543_1.talkMaxDuration)

			if var_546_44 <= arg_543_1.time_ and arg_543_1.time_ < var_546_44 + var_546_45 then
				arg_543_1.typewritter.percent = (arg_543_1.time_ - var_546_44) / var_546_45

				arg_543_1.typewritter:SetDirty()
			end

			if arg_543_1.time_ >= var_546_44 + var_546_45 and arg_543_1.time_ < var_546_44 + var_546_45 + arg_546_0 then
				arg_543_1.typewritter.percent = 1

				arg_543_1.typewritter:SetDirty()
				arg_543_1:ShowNextGo(true)
			end
		end
	end,
	Play413161134 = function(arg_549_0, arg_549_1)
		arg_549_1.time_ = 0
		arg_549_1.frameCnt_ = 0
		arg_549_1.state_ = "playing"
		arg_549_1.curTalkId_ = 413161134
		arg_549_1.duration_ = 4.33

		local var_549_0 = {
			zh = 4.333,
			ja = 3.766
		}
		local var_549_1 = manager.audio:GetLocalizationFlag()

		if var_549_0[var_549_1] ~= nil then
			arg_549_1.duration_ = var_549_0[var_549_1]
		end

		SetActive(arg_549_1.tipsGo_, false)

		function arg_549_1.onSingleLineFinish_()
			arg_549_1.onSingleLineUpdate_ = nil
			arg_549_1.onSingleLineFinish_ = nil
			arg_549_1.state_ = "waiting"
		end

		function arg_549_1.playNext_(arg_551_0)
			if arg_551_0 == 1 then
				arg_549_0:Play413161135(arg_549_1)
			end
		end

		function arg_549_1.onSingleLineUpdate_(arg_552_0)
			local var_552_0 = arg_549_1.actors_["10022"].transform
			local var_552_1 = 0

			if var_552_1 < arg_549_1.time_ and arg_549_1.time_ <= var_552_1 + arg_552_0 then
				arg_549_1.var_.moveOldPos10022 = var_552_0.localPosition
				var_552_0.localScale = Vector3.New(1, 1, 1)

				arg_549_1:CheckSpriteTmpPos("10022", 2)

				local var_552_2 = var_552_0.childCount

				for iter_552_0 = 0, var_552_2 - 1 do
					local var_552_3 = var_552_0:GetChild(iter_552_0)

					if var_552_3.name == "split_1" or not string.find(var_552_3.name, "split") then
						var_552_3.gameObject:SetActive(true)
					else
						var_552_3.gameObject:SetActive(false)
					end
				end
			end

			local var_552_4 = 0.001

			if var_552_1 <= arg_549_1.time_ and arg_549_1.time_ < var_552_1 + var_552_4 then
				local var_552_5 = (arg_549_1.time_ - var_552_1) / var_552_4
				local var_552_6 = Vector3.New(-390, -315, -320)

				var_552_0.localPosition = Vector3.Lerp(arg_549_1.var_.moveOldPos10022, var_552_6, var_552_5)
			end

			if arg_549_1.time_ >= var_552_1 + var_552_4 and arg_549_1.time_ < var_552_1 + var_552_4 + arg_552_0 then
				var_552_0.localPosition = Vector3.New(-390, -315, -320)
			end

			local var_552_7 = arg_549_1.actors_["10022"]
			local var_552_8 = 0

			if var_552_8 < arg_549_1.time_ and arg_549_1.time_ <= var_552_8 + arg_552_0 and not isNil(var_552_7) and arg_549_1.var_.actorSpriteComps10022 == nil then
				arg_549_1.var_.actorSpriteComps10022 = var_552_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_552_9 = 2

			if var_552_8 <= arg_549_1.time_ and arg_549_1.time_ < var_552_8 + var_552_9 and not isNil(var_552_7) then
				local var_552_10 = (arg_549_1.time_ - var_552_8) / var_552_9

				if arg_549_1.var_.actorSpriteComps10022 then
					for iter_552_1, iter_552_2 in pairs(arg_549_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_552_2 then
							if arg_549_1.isInRecall_ then
								local var_552_11 = Mathf.Lerp(iter_552_2.color.r, arg_549_1.hightColor1.r, var_552_10)
								local var_552_12 = Mathf.Lerp(iter_552_2.color.g, arg_549_1.hightColor1.g, var_552_10)
								local var_552_13 = Mathf.Lerp(iter_552_2.color.b, arg_549_1.hightColor1.b, var_552_10)

								iter_552_2.color = Color.New(var_552_11, var_552_12, var_552_13)
							else
								local var_552_14 = Mathf.Lerp(iter_552_2.color.r, 1, var_552_10)

								iter_552_2.color = Color.New(var_552_14, var_552_14, var_552_14)
							end
						end
					end
				end
			end

			if arg_549_1.time_ >= var_552_8 + var_552_9 and arg_549_1.time_ < var_552_8 + var_552_9 + arg_552_0 and not isNil(var_552_7) and arg_549_1.var_.actorSpriteComps10022 then
				for iter_552_3, iter_552_4 in pairs(arg_549_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_552_4 then
						if arg_549_1.isInRecall_ then
							iter_552_4.color = arg_549_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_552_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_549_1.var_.actorSpriteComps10022 = nil
			end

			local var_552_15 = 0
			local var_552_16 = 0.35

			if var_552_15 < arg_549_1.time_ and arg_549_1.time_ <= var_552_15 + arg_552_0 then
				arg_549_1.talkMaxDuration = 0
				arg_549_1.dialogCg_.alpha = 1

				arg_549_1.dialog_:SetActive(true)
				SetActive(arg_549_1.leftNameGo_, true)

				local var_552_17 = arg_549_1:FormatText(StoryNameCfg[614].name)

				arg_549_1.leftNameTxt_.text = var_552_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_549_1.leftNameTxt_.transform)

				arg_549_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_549_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_549_1:RecordName(arg_549_1.leftNameTxt_.text)
				SetActive(arg_549_1.iconTrs_.gameObject, false)
				arg_549_1.callingController_:SetSelectedState("normal")

				local var_552_18 = arg_549_1:GetWordFromCfg(413161134)
				local var_552_19 = arg_549_1:FormatText(var_552_18.content)

				arg_549_1.text_.text = var_552_19

				LuaForUtil.ClearLinePrefixSymbol(arg_549_1.text_)

				local var_552_20 = 14
				local var_552_21 = utf8.len(var_552_19)
				local var_552_22 = var_552_20 <= 0 and var_552_16 or var_552_16 * (var_552_21 / var_552_20)

				if var_552_22 > 0 and var_552_16 < var_552_22 then
					arg_549_1.talkMaxDuration = var_552_22

					if var_552_22 + var_552_15 > arg_549_1.duration_ then
						arg_549_1.duration_ = var_552_22 + var_552_15
					end
				end

				arg_549_1.text_.text = var_552_19
				arg_549_1.typewritter.percent = 0

				arg_549_1.typewritter:SetDirty()
				arg_549_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161134", "story_v_out_413161.awb") ~= 0 then
					local var_552_23 = manager.audio:GetVoiceLength("story_v_out_413161", "413161134", "story_v_out_413161.awb") / 1000

					if var_552_23 + var_552_15 > arg_549_1.duration_ then
						arg_549_1.duration_ = var_552_23 + var_552_15
					end

					if var_552_18.prefab_name ~= "" and arg_549_1.actors_[var_552_18.prefab_name] ~= nil then
						local var_552_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_549_1.actors_[var_552_18.prefab_name].transform, "story_v_out_413161", "413161134", "story_v_out_413161.awb")

						arg_549_1:RecordAudio("413161134", var_552_24)
						arg_549_1:RecordAudio("413161134", var_552_24)
					else
						arg_549_1:AudioAction("play", "voice", "story_v_out_413161", "413161134", "story_v_out_413161.awb")
					end

					arg_549_1:RecordHistoryTalkVoice("story_v_out_413161", "413161134", "story_v_out_413161.awb")
				end

				arg_549_1:RecordContent(arg_549_1.text_.text)
			end

			local var_552_25 = math.max(var_552_16, arg_549_1.talkMaxDuration)

			if var_552_15 <= arg_549_1.time_ and arg_549_1.time_ < var_552_15 + var_552_25 then
				arg_549_1.typewritter.percent = (arg_549_1.time_ - var_552_15) / var_552_25

				arg_549_1.typewritter:SetDirty()
			end

			if arg_549_1.time_ >= var_552_15 + var_552_25 and arg_549_1.time_ < var_552_15 + var_552_25 + arg_552_0 then
				arg_549_1.typewritter.percent = 1

				arg_549_1.typewritter:SetDirty()
				arg_549_1:ShowNextGo(true)
			end
		end
	end,
	Play413161135 = function(arg_553_0, arg_553_1)
		arg_553_1.time_ = 0
		arg_553_1.frameCnt_ = 0
		arg_553_1.state_ = "playing"
		arg_553_1.curTalkId_ = 413161135
		arg_553_1.duration_ = 4.73

		local var_553_0 = {
			zh = 3.766,
			ja = 4.733
		}
		local var_553_1 = manager.audio:GetLocalizationFlag()

		if var_553_0[var_553_1] ~= nil then
			arg_553_1.duration_ = var_553_0[var_553_1]
		end

		SetActive(arg_553_1.tipsGo_, false)

		function arg_553_1.onSingleLineFinish_()
			arg_553_1.onSingleLineUpdate_ = nil
			arg_553_1.onSingleLineFinish_ = nil
			arg_553_1.state_ = "waiting"
		end

		function arg_553_1.playNext_(arg_555_0)
			if arg_555_0 == 1 then
				arg_553_0:Play413161136(arg_553_1)
			end
		end

		function arg_553_1.onSingleLineUpdate_(arg_556_0)
			local var_556_0 = "10093"

			if arg_553_1.actors_[var_556_0] == nil then
				local var_556_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10093")

				if not isNil(var_556_1) then
					local var_556_2 = Object.Instantiate(var_556_1, arg_553_1.canvasGo_.transform)

					var_556_2.transform:SetSiblingIndex(1)

					var_556_2.name = var_556_0
					var_556_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_553_1.actors_[var_556_0] = var_556_2

					local var_556_3 = var_556_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_553_1.isInRecall_ then
						for iter_556_0, iter_556_1 in ipairs(var_556_3) do
							iter_556_1.color = arg_553_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_556_4 = arg_553_1.actors_["10093"].transform
			local var_556_5 = 0

			if var_556_5 < arg_553_1.time_ and arg_553_1.time_ <= var_556_5 + arg_556_0 then
				arg_553_1.var_.moveOldPos10093 = var_556_4.localPosition
				var_556_4.localScale = Vector3.New(1, 1, 1)

				arg_553_1:CheckSpriteTmpPos("10093", 4)

				local var_556_6 = var_556_4.childCount

				for iter_556_2 = 0, var_556_6 - 1 do
					local var_556_7 = var_556_4:GetChild(iter_556_2)

					if var_556_7.name == "split_6" or not string.find(var_556_7.name, "split") then
						var_556_7.gameObject:SetActive(true)
					else
						var_556_7.gameObject:SetActive(false)
					end
				end
			end

			local var_556_8 = 0.001

			if var_556_5 <= arg_553_1.time_ and arg_553_1.time_ < var_556_5 + var_556_8 then
				local var_556_9 = (arg_553_1.time_ - var_556_5) / var_556_8
				local var_556_10 = Vector3.New(390, -345, -245)

				var_556_4.localPosition = Vector3.Lerp(arg_553_1.var_.moveOldPos10093, var_556_10, var_556_9)
			end

			if arg_553_1.time_ >= var_556_5 + var_556_8 and arg_553_1.time_ < var_556_5 + var_556_8 + arg_556_0 then
				var_556_4.localPosition = Vector3.New(390, -345, -245)
			end

			local var_556_11 = arg_553_1.actors_["10022"].transform
			local var_556_12 = 0

			if var_556_12 < arg_553_1.time_ and arg_553_1.time_ <= var_556_12 + arg_556_0 then
				arg_553_1.var_.moveOldPos10022 = var_556_11.localPosition
				var_556_11.localScale = Vector3.New(1, 1, 1)

				arg_553_1:CheckSpriteTmpPos("10022", 2)

				local var_556_13 = var_556_11.childCount

				for iter_556_3 = 0, var_556_13 - 1 do
					local var_556_14 = var_556_11:GetChild(iter_556_3)

					if var_556_14.name == "split_1" or not string.find(var_556_14.name, "split") then
						var_556_14.gameObject:SetActive(true)
					else
						var_556_14.gameObject:SetActive(false)
					end
				end
			end

			local var_556_15 = 0.001

			if var_556_12 <= arg_553_1.time_ and arg_553_1.time_ < var_556_12 + var_556_15 then
				local var_556_16 = (arg_553_1.time_ - var_556_12) / var_556_15
				local var_556_17 = Vector3.New(-390, -315, -320)

				var_556_11.localPosition = Vector3.Lerp(arg_553_1.var_.moveOldPos10022, var_556_17, var_556_16)
			end

			if arg_553_1.time_ >= var_556_12 + var_556_15 and arg_553_1.time_ < var_556_12 + var_556_15 + arg_556_0 then
				var_556_11.localPosition = Vector3.New(-390, -315, -320)
			end

			local var_556_18 = arg_553_1.actors_["10093"]
			local var_556_19 = 0

			if var_556_19 < arg_553_1.time_ and arg_553_1.time_ <= var_556_19 + arg_556_0 and not isNil(var_556_18) and arg_553_1.var_.actorSpriteComps10093 == nil then
				arg_553_1.var_.actorSpriteComps10093 = var_556_18:GetComponentsInChildren(typeof(Image), true)
			end

			local var_556_20 = 2

			if var_556_19 <= arg_553_1.time_ and arg_553_1.time_ < var_556_19 + var_556_20 and not isNil(var_556_18) then
				local var_556_21 = (arg_553_1.time_ - var_556_19) / var_556_20

				if arg_553_1.var_.actorSpriteComps10093 then
					for iter_556_4, iter_556_5 in pairs(arg_553_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_556_5 then
							if arg_553_1.isInRecall_ then
								local var_556_22 = Mathf.Lerp(iter_556_5.color.r, arg_553_1.hightColor1.r, var_556_21)
								local var_556_23 = Mathf.Lerp(iter_556_5.color.g, arg_553_1.hightColor1.g, var_556_21)
								local var_556_24 = Mathf.Lerp(iter_556_5.color.b, arg_553_1.hightColor1.b, var_556_21)

								iter_556_5.color = Color.New(var_556_22, var_556_23, var_556_24)
							else
								local var_556_25 = Mathf.Lerp(iter_556_5.color.r, 1, var_556_21)

								iter_556_5.color = Color.New(var_556_25, var_556_25, var_556_25)
							end
						end
					end
				end
			end

			if arg_553_1.time_ >= var_556_19 + var_556_20 and arg_553_1.time_ < var_556_19 + var_556_20 + arg_556_0 and not isNil(var_556_18) and arg_553_1.var_.actorSpriteComps10093 then
				for iter_556_6, iter_556_7 in pairs(arg_553_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_556_7 then
						if arg_553_1.isInRecall_ then
							iter_556_7.color = arg_553_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_556_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_553_1.var_.actorSpriteComps10093 = nil
			end

			local var_556_26 = arg_553_1.actors_["10022"]
			local var_556_27 = 0

			if var_556_27 < arg_553_1.time_ and arg_553_1.time_ <= var_556_27 + arg_556_0 and not isNil(var_556_26) and arg_553_1.var_.actorSpriteComps10022 == nil then
				arg_553_1.var_.actorSpriteComps10022 = var_556_26:GetComponentsInChildren(typeof(Image), true)
			end

			local var_556_28 = 2

			if var_556_27 <= arg_553_1.time_ and arg_553_1.time_ < var_556_27 + var_556_28 and not isNil(var_556_26) then
				local var_556_29 = (arg_553_1.time_ - var_556_27) / var_556_28

				if arg_553_1.var_.actorSpriteComps10022 then
					for iter_556_8, iter_556_9 in pairs(arg_553_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_556_9 then
							if arg_553_1.isInRecall_ then
								local var_556_30 = Mathf.Lerp(iter_556_9.color.r, arg_553_1.hightColor2.r, var_556_29)
								local var_556_31 = Mathf.Lerp(iter_556_9.color.g, arg_553_1.hightColor2.g, var_556_29)
								local var_556_32 = Mathf.Lerp(iter_556_9.color.b, arg_553_1.hightColor2.b, var_556_29)

								iter_556_9.color = Color.New(var_556_30, var_556_31, var_556_32)
							else
								local var_556_33 = Mathf.Lerp(iter_556_9.color.r, 0.5, var_556_29)

								iter_556_9.color = Color.New(var_556_33, var_556_33, var_556_33)
							end
						end
					end
				end
			end

			if arg_553_1.time_ >= var_556_27 + var_556_28 and arg_553_1.time_ < var_556_27 + var_556_28 + arg_556_0 and not isNil(var_556_26) and arg_553_1.var_.actorSpriteComps10022 then
				for iter_556_10, iter_556_11 in pairs(arg_553_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_556_11 then
						if arg_553_1.isInRecall_ then
							iter_556_11.color = arg_553_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_556_11.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_553_1.var_.actorSpriteComps10022 = nil
			end

			local var_556_34 = 0
			local var_556_35 = 0.4

			if var_556_34 < arg_553_1.time_ and arg_553_1.time_ <= var_556_34 + arg_556_0 then
				arg_553_1.talkMaxDuration = 0
				arg_553_1.dialogCg_.alpha = 1

				arg_553_1.dialog_:SetActive(true)
				SetActive(arg_553_1.leftNameGo_, true)

				local var_556_36 = arg_553_1:FormatText(StoryNameCfg[28].name)

				arg_553_1.leftNameTxt_.text = var_556_36

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_553_1.leftNameTxt_.transform)

				arg_553_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_553_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_553_1:RecordName(arg_553_1.leftNameTxt_.text)
				SetActive(arg_553_1.iconTrs_.gameObject, false)
				arg_553_1.callingController_:SetSelectedState("normal")

				local var_556_37 = arg_553_1:GetWordFromCfg(413161135)
				local var_556_38 = arg_553_1:FormatText(var_556_37.content)

				arg_553_1.text_.text = var_556_38

				LuaForUtil.ClearLinePrefixSymbol(arg_553_1.text_)

				local var_556_39 = 16
				local var_556_40 = utf8.len(var_556_38)
				local var_556_41 = var_556_39 <= 0 and var_556_35 or var_556_35 * (var_556_40 / var_556_39)

				if var_556_41 > 0 and var_556_35 < var_556_41 then
					arg_553_1.talkMaxDuration = var_556_41

					if var_556_41 + var_556_34 > arg_553_1.duration_ then
						arg_553_1.duration_ = var_556_41 + var_556_34
					end
				end

				arg_553_1.text_.text = var_556_38
				arg_553_1.typewritter.percent = 0

				arg_553_1.typewritter:SetDirty()
				arg_553_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161135", "story_v_out_413161.awb") ~= 0 then
					local var_556_42 = manager.audio:GetVoiceLength("story_v_out_413161", "413161135", "story_v_out_413161.awb") / 1000

					if var_556_42 + var_556_34 > arg_553_1.duration_ then
						arg_553_1.duration_ = var_556_42 + var_556_34
					end

					if var_556_37.prefab_name ~= "" and arg_553_1.actors_[var_556_37.prefab_name] ~= nil then
						local var_556_43 = LuaForUtil.PlayVoiceWithCriLipsync(arg_553_1.actors_[var_556_37.prefab_name].transform, "story_v_out_413161", "413161135", "story_v_out_413161.awb")

						arg_553_1:RecordAudio("413161135", var_556_43)
						arg_553_1:RecordAudio("413161135", var_556_43)
					else
						arg_553_1:AudioAction("play", "voice", "story_v_out_413161", "413161135", "story_v_out_413161.awb")
					end

					arg_553_1:RecordHistoryTalkVoice("story_v_out_413161", "413161135", "story_v_out_413161.awb")
				end

				arg_553_1:RecordContent(arg_553_1.text_.text)
			end

			local var_556_44 = math.max(var_556_35, arg_553_1.talkMaxDuration)

			if var_556_34 <= arg_553_1.time_ and arg_553_1.time_ < var_556_34 + var_556_44 then
				arg_553_1.typewritter.percent = (arg_553_1.time_ - var_556_34) / var_556_44

				arg_553_1.typewritter:SetDirty()
			end

			if arg_553_1.time_ >= var_556_34 + var_556_44 and arg_553_1.time_ < var_556_34 + var_556_44 + arg_556_0 then
				arg_553_1.typewritter.percent = 1

				arg_553_1.typewritter:SetDirty()
				arg_553_1:ShowNextGo(true)
			end
		end
	end,
	Play413161136 = function(arg_557_0, arg_557_1)
		arg_557_1.time_ = 0
		arg_557_1.frameCnt_ = 0
		arg_557_1.state_ = "playing"
		arg_557_1.curTalkId_ = 413161136
		arg_557_1.duration_ = 6.83

		local var_557_0 = {
			zh = 2.733,
			ja = 6.833
		}
		local var_557_1 = manager.audio:GetLocalizationFlag()

		if var_557_0[var_557_1] ~= nil then
			arg_557_1.duration_ = var_557_0[var_557_1]
		end

		SetActive(arg_557_1.tipsGo_, false)

		function arg_557_1.onSingleLineFinish_()
			arg_557_1.onSingleLineUpdate_ = nil
			arg_557_1.onSingleLineFinish_ = nil
			arg_557_1.state_ = "waiting"
		end

		function arg_557_1.playNext_(arg_559_0)
			if arg_559_0 == 1 then
				arg_557_0:Play413161137(arg_557_1)
			end
		end

		function arg_557_1.onSingleLineUpdate_(arg_560_0)
			local var_560_0 = arg_557_1.actors_["10022"]
			local var_560_1 = 0

			if var_560_1 < arg_557_1.time_ and arg_557_1.time_ <= var_560_1 + arg_560_0 and not isNil(var_560_0) and arg_557_1.var_.actorSpriteComps10022 == nil then
				arg_557_1.var_.actorSpriteComps10022 = var_560_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_560_2 = 2

			if var_560_1 <= arg_557_1.time_ and arg_557_1.time_ < var_560_1 + var_560_2 and not isNil(var_560_0) then
				local var_560_3 = (arg_557_1.time_ - var_560_1) / var_560_2

				if arg_557_1.var_.actorSpriteComps10022 then
					for iter_560_0, iter_560_1 in pairs(arg_557_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_560_1 then
							if arg_557_1.isInRecall_ then
								local var_560_4 = Mathf.Lerp(iter_560_1.color.r, arg_557_1.hightColor1.r, var_560_3)
								local var_560_5 = Mathf.Lerp(iter_560_1.color.g, arg_557_1.hightColor1.g, var_560_3)
								local var_560_6 = Mathf.Lerp(iter_560_1.color.b, arg_557_1.hightColor1.b, var_560_3)

								iter_560_1.color = Color.New(var_560_4, var_560_5, var_560_6)
							else
								local var_560_7 = Mathf.Lerp(iter_560_1.color.r, 1, var_560_3)

								iter_560_1.color = Color.New(var_560_7, var_560_7, var_560_7)
							end
						end
					end
				end
			end

			if arg_557_1.time_ >= var_560_1 + var_560_2 and arg_557_1.time_ < var_560_1 + var_560_2 + arg_560_0 and not isNil(var_560_0) and arg_557_1.var_.actorSpriteComps10022 then
				for iter_560_2, iter_560_3 in pairs(arg_557_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_560_3 then
						if arg_557_1.isInRecall_ then
							iter_560_3.color = arg_557_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_560_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_557_1.var_.actorSpriteComps10022 = nil
			end

			local var_560_8 = arg_557_1.actors_["10093"]
			local var_560_9 = 0

			if var_560_9 < arg_557_1.time_ and arg_557_1.time_ <= var_560_9 + arg_560_0 and not isNil(var_560_8) and arg_557_1.var_.actorSpriteComps10093 == nil then
				arg_557_1.var_.actorSpriteComps10093 = var_560_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_560_10 = 2

			if var_560_9 <= arg_557_1.time_ and arg_557_1.time_ < var_560_9 + var_560_10 and not isNil(var_560_8) then
				local var_560_11 = (arg_557_1.time_ - var_560_9) / var_560_10

				if arg_557_1.var_.actorSpriteComps10093 then
					for iter_560_4, iter_560_5 in pairs(arg_557_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_560_5 then
							if arg_557_1.isInRecall_ then
								local var_560_12 = Mathf.Lerp(iter_560_5.color.r, arg_557_1.hightColor2.r, var_560_11)
								local var_560_13 = Mathf.Lerp(iter_560_5.color.g, arg_557_1.hightColor2.g, var_560_11)
								local var_560_14 = Mathf.Lerp(iter_560_5.color.b, arg_557_1.hightColor2.b, var_560_11)

								iter_560_5.color = Color.New(var_560_12, var_560_13, var_560_14)
							else
								local var_560_15 = Mathf.Lerp(iter_560_5.color.r, 0.5, var_560_11)

								iter_560_5.color = Color.New(var_560_15, var_560_15, var_560_15)
							end
						end
					end
				end
			end

			if arg_557_1.time_ >= var_560_9 + var_560_10 and arg_557_1.time_ < var_560_9 + var_560_10 + arg_560_0 and not isNil(var_560_8) and arg_557_1.var_.actorSpriteComps10093 then
				for iter_560_6, iter_560_7 in pairs(arg_557_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_560_7 then
						if arg_557_1.isInRecall_ then
							iter_560_7.color = arg_557_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_560_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_557_1.var_.actorSpriteComps10093 = nil
			end

			local var_560_16 = 0
			local var_560_17 = 0.4

			if var_560_16 < arg_557_1.time_ and arg_557_1.time_ <= var_560_16 + arg_560_0 then
				arg_557_1.talkMaxDuration = 0
				arg_557_1.dialogCg_.alpha = 1

				arg_557_1.dialog_:SetActive(true)
				SetActive(arg_557_1.leftNameGo_, true)

				local var_560_18 = arg_557_1:FormatText(StoryNameCfg[614].name)

				arg_557_1.leftNameTxt_.text = var_560_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_557_1.leftNameTxt_.transform)

				arg_557_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_557_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_557_1:RecordName(arg_557_1.leftNameTxt_.text)
				SetActive(arg_557_1.iconTrs_.gameObject, false)
				arg_557_1.callingController_:SetSelectedState("normal")

				local var_560_19 = arg_557_1:GetWordFromCfg(413161136)
				local var_560_20 = arg_557_1:FormatText(var_560_19.content)

				arg_557_1.text_.text = var_560_20

				LuaForUtil.ClearLinePrefixSymbol(arg_557_1.text_)

				local var_560_21 = 16
				local var_560_22 = utf8.len(var_560_20)
				local var_560_23 = var_560_21 <= 0 and var_560_17 or var_560_17 * (var_560_22 / var_560_21)

				if var_560_23 > 0 and var_560_17 < var_560_23 then
					arg_557_1.talkMaxDuration = var_560_23

					if var_560_23 + var_560_16 > arg_557_1.duration_ then
						arg_557_1.duration_ = var_560_23 + var_560_16
					end
				end

				arg_557_1.text_.text = var_560_20
				arg_557_1.typewritter.percent = 0

				arg_557_1.typewritter:SetDirty()
				arg_557_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161136", "story_v_out_413161.awb") ~= 0 then
					local var_560_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161136", "story_v_out_413161.awb") / 1000

					if var_560_24 + var_560_16 > arg_557_1.duration_ then
						arg_557_1.duration_ = var_560_24 + var_560_16
					end

					if var_560_19.prefab_name ~= "" and arg_557_1.actors_[var_560_19.prefab_name] ~= nil then
						local var_560_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_557_1.actors_[var_560_19.prefab_name].transform, "story_v_out_413161", "413161136", "story_v_out_413161.awb")

						arg_557_1:RecordAudio("413161136", var_560_25)
						arg_557_1:RecordAudio("413161136", var_560_25)
					else
						arg_557_1:AudioAction("play", "voice", "story_v_out_413161", "413161136", "story_v_out_413161.awb")
					end

					arg_557_1:RecordHistoryTalkVoice("story_v_out_413161", "413161136", "story_v_out_413161.awb")
				end

				arg_557_1:RecordContent(arg_557_1.text_.text)
			end

			local var_560_26 = math.max(var_560_17, arg_557_1.talkMaxDuration)

			if var_560_16 <= arg_557_1.time_ and arg_557_1.time_ < var_560_16 + var_560_26 then
				arg_557_1.typewritter.percent = (arg_557_1.time_ - var_560_16) / var_560_26

				arg_557_1.typewritter:SetDirty()
			end

			if arg_557_1.time_ >= var_560_16 + var_560_26 and arg_557_1.time_ < var_560_16 + var_560_26 + arg_560_0 then
				arg_557_1.typewritter.percent = 1

				arg_557_1.typewritter:SetDirty()
				arg_557_1:ShowNextGo(true)
			end
		end
	end,
	Play413161137 = function(arg_561_0, arg_561_1)
		arg_561_1.time_ = 0
		arg_561_1.frameCnt_ = 0
		arg_561_1.state_ = "playing"
		arg_561_1.curTalkId_ = 413161137
		arg_561_1.duration_ = 9.5

		local var_561_0 = {
			zh = 7.533,
			ja = 9.5
		}
		local var_561_1 = manager.audio:GetLocalizationFlag()

		if var_561_0[var_561_1] ~= nil then
			arg_561_1.duration_ = var_561_0[var_561_1]
		end

		SetActive(arg_561_1.tipsGo_, false)

		function arg_561_1.onSingleLineFinish_()
			arg_561_1.onSingleLineUpdate_ = nil
			arg_561_1.onSingleLineFinish_ = nil
			arg_561_1.state_ = "waiting"
		end

		function arg_561_1.playNext_(arg_563_0)
			if arg_563_0 == 1 then
				arg_561_0:Play413161138(arg_561_1)
			end
		end

		function arg_561_1.onSingleLineUpdate_(arg_564_0)
			local var_564_0 = arg_561_1.actors_["10093"].transform
			local var_564_1 = 0

			if var_564_1 < arg_561_1.time_ and arg_561_1.time_ <= var_564_1 + arg_564_0 then
				arg_561_1.var_.moveOldPos10093 = var_564_0.localPosition
				var_564_0.localScale = Vector3.New(1, 1, 1)

				arg_561_1:CheckSpriteTmpPos("10093", 4)

				local var_564_2 = var_564_0.childCount

				for iter_564_0 = 0, var_564_2 - 1 do
					local var_564_3 = var_564_0:GetChild(iter_564_0)

					if var_564_3.name == "split_4" or not string.find(var_564_3.name, "split") then
						var_564_3.gameObject:SetActive(true)
					else
						var_564_3.gameObject:SetActive(false)
					end
				end
			end

			local var_564_4 = 0.001

			if var_564_1 <= arg_561_1.time_ and arg_561_1.time_ < var_564_1 + var_564_4 then
				local var_564_5 = (arg_561_1.time_ - var_564_1) / var_564_4
				local var_564_6 = Vector3.New(390, -345, -245)

				var_564_0.localPosition = Vector3.Lerp(arg_561_1.var_.moveOldPos10093, var_564_6, var_564_5)
			end

			if arg_561_1.time_ >= var_564_1 + var_564_4 and arg_561_1.time_ < var_564_1 + var_564_4 + arg_564_0 then
				var_564_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_564_7 = arg_561_1.actors_["10093"]
			local var_564_8 = 0

			if var_564_8 < arg_561_1.time_ and arg_561_1.time_ <= var_564_8 + arg_564_0 and not isNil(var_564_7) and arg_561_1.var_.actorSpriteComps10093 == nil then
				arg_561_1.var_.actorSpriteComps10093 = var_564_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_564_9 = 2

			if var_564_8 <= arg_561_1.time_ and arg_561_1.time_ < var_564_8 + var_564_9 and not isNil(var_564_7) then
				local var_564_10 = (arg_561_1.time_ - var_564_8) / var_564_9

				if arg_561_1.var_.actorSpriteComps10093 then
					for iter_564_1, iter_564_2 in pairs(arg_561_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_564_2 then
							if arg_561_1.isInRecall_ then
								local var_564_11 = Mathf.Lerp(iter_564_2.color.r, arg_561_1.hightColor1.r, var_564_10)
								local var_564_12 = Mathf.Lerp(iter_564_2.color.g, arg_561_1.hightColor1.g, var_564_10)
								local var_564_13 = Mathf.Lerp(iter_564_2.color.b, arg_561_1.hightColor1.b, var_564_10)

								iter_564_2.color = Color.New(var_564_11, var_564_12, var_564_13)
							else
								local var_564_14 = Mathf.Lerp(iter_564_2.color.r, 1, var_564_10)

								iter_564_2.color = Color.New(var_564_14, var_564_14, var_564_14)
							end
						end
					end
				end
			end

			if arg_561_1.time_ >= var_564_8 + var_564_9 and arg_561_1.time_ < var_564_8 + var_564_9 + arg_564_0 and not isNil(var_564_7) and arg_561_1.var_.actorSpriteComps10093 then
				for iter_564_3, iter_564_4 in pairs(arg_561_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_564_4 then
						if arg_561_1.isInRecall_ then
							iter_564_4.color = arg_561_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_564_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_561_1.var_.actorSpriteComps10093 = nil
			end

			local var_564_15 = arg_561_1.actors_["10022"]
			local var_564_16 = 0

			if var_564_16 < arg_561_1.time_ and arg_561_1.time_ <= var_564_16 + arg_564_0 and not isNil(var_564_15) and arg_561_1.var_.actorSpriteComps10022 == nil then
				arg_561_1.var_.actorSpriteComps10022 = var_564_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_564_17 = 2

			if var_564_16 <= arg_561_1.time_ and arg_561_1.time_ < var_564_16 + var_564_17 and not isNil(var_564_15) then
				local var_564_18 = (arg_561_1.time_ - var_564_16) / var_564_17

				if arg_561_1.var_.actorSpriteComps10022 then
					for iter_564_5, iter_564_6 in pairs(arg_561_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_564_6 then
							if arg_561_1.isInRecall_ then
								local var_564_19 = Mathf.Lerp(iter_564_6.color.r, arg_561_1.hightColor2.r, var_564_18)
								local var_564_20 = Mathf.Lerp(iter_564_6.color.g, arg_561_1.hightColor2.g, var_564_18)
								local var_564_21 = Mathf.Lerp(iter_564_6.color.b, arg_561_1.hightColor2.b, var_564_18)

								iter_564_6.color = Color.New(var_564_19, var_564_20, var_564_21)
							else
								local var_564_22 = Mathf.Lerp(iter_564_6.color.r, 0.5, var_564_18)

								iter_564_6.color = Color.New(var_564_22, var_564_22, var_564_22)
							end
						end
					end
				end
			end

			if arg_561_1.time_ >= var_564_16 + var_564_17 and arg_561_1.time_ < var_564_16 + var_564_17 + arg_564_0 and not isNil(var_564_15) and arg_561_1.var_.actorSpriteComps10022 then
				for iter_564_7, iter_564_8 in pairs(arg_561_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_564_8 then
						if arg_561_1.isInRecall_ then
							iter_564_8.color = arg_561_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_564_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_561_1.var_.actorSpriteComps10022 = nil
			end

			local var_564_23 = 0
			local var_564_24 = 0.675

			if var_564_23 < arg_561_1.time_ and arg_561_1.time_ <= var_564_23 + arg_564_0 then
				arg_561_1.talkMaxDuration = 0
				arg_561_1.dialogCg_.alpha = 1

				arg_561_1.dialog_:SetActive(true)
				SetActive(arg_561_1.leftNameGo_, true)

				local var_564_25 = arg_561_1:FormatText(StoryNameCfg[28].name)

				arg_561_1.leftNameTxt_.text = var_564_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_561_1.leftNameTxt_.transform)

				arg_561_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_561_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_561_1:RecordName(arg_561_1.leftNameTxt_.text)
				SetActive(arg_561_1.iconTrs_.gameObject, false)
				arg_561_1.callingController_:SetSelectedState("normal")

				local var_564_26 = arg_561_1:GetWordFromCfg(413161137)
				local var_564_27 = arg_561_1:FormatText(var_564_26.content)

				arg_561_1.text_.text = var_564_27

				LuaForUtil.ClearLinePrefixSymbol(arg_561_1.text_)

				local var_564_28 = 27
				local var_564_29 = utf8.len(var_564_27)
				local var_564_30 = var_564_28 <= 0 and var_564_24 or var_564_24 * (var_564_29 / var_564_28)

				if var_564_30 > 0 and var_564_24 < var_564_30 then
					arg_561_1.talkMaxDuration = var_564_30

					if var_564_30 + var_564_23 > arg_561_1.duration_ then
						arg_561_1.duration_ = var_564_30 + var_564_23
					end
				end

				arg_561_1.text_.text = var_564_27
				arg_561_1.typewritter.percent = 0

				arg_561_1.typewritter:SetDirty()
				arg_561_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161137", "story_v_out_413161.awb") ~= 0 then
					local var_564_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161137", "story_v_out_413161.awb") / 1000

					if var_564_31 + var_564_23 > arg_561_1.duration_ then
						arg_561_1.duration_ = var_564_31 + var_564_23
					end

					if var_564_26.prefab_name ~= "" and arg_561_1.actors_[var_564_26.prefab_name] ~= nil then
						local var_564_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_561_1.actors_[var_564_26.prefab_name].transform, "story_v_out_413161", "413161137", "story_v_out_413161.awb")

						arg_561_1:RecordAudio("413161137", var_564_32)
						arg_561_1:RecordAudio("413161137", var_564_32)
					else
						arg_561_1:AudioAction("play", "voice", "story_v_out_413161", "413161137", "story_v_out_413161.awb")
					end

					arg_561_1:RecordHistoryTalkVoice("story_v_out_413161", "413161137", "story_v_out_413161.awb")
				end

				arg_561_1:RecordContent(arg_561_1.text_.text)
			end

			local var_564_33 = math.max(var_564_24, arg_561_1.talkMaxDuration)

			if var_564_23 <= arg_561_1.time_ and arg_561_1.time_ < var_564_23 + var_564_33 then
				arg_561_1.typewritter.percent = (arg_561_1.time_ - var_564_23) / var_564_33

				arg_561_1.typewritter:SetDirty()
			end

			if arg_561_1.time_ >= var_564_23 + var_564_33 and arg_561_1.time_ < var_564_23 + var_564_33 + arg_564_0 then
				arg_561_1.typewritter.percent = 1

				arg_561_1.typewritter:SetDirty()
				arg_561_1:ShowNextGo(true)
			end
		end
	end,
	Play413161138 = function(arg_565_0, arg_565_1)
		arg_565_1.time_ = 0
		arg_565_1.frameCnt_ = 0
		arg_565_1.state_ = "playing"
		arg_565_1.curTalkId_ = 413161138
		arg_565_1.duration_ = 13.6

		local var_565_0 = {
			zh = 9.9,
			ja = 13.6
		}
		local var_565_1 = manager.audio:GetLocalizationFlag()

		if var_565_0[var_565_1] ~= nil then
			arg_565_1.duration_ = var_565_0[var_565_1]
		end

		SetActive(arg_565_1.tipsGo_, false)

		function arg_565_1.onSingleLineFinish_()
			arg_565_1.onSingleLineUpdate_ = nil
			arg_565_1.onSingleLineFinish_ = nil
			arg_565_1.state_ = "waiting"
		end

		function arg_565_1.playNext_(arg_567_0)
			if arg_567_0 == 1 then
				arg_565_0:Play413161139(arg_565_1)
			end
		end

		function arg_565_1.onSingleLineUpdate_(arg_568_0)
			local var_568_0 = arg_565_1.actors_["10022"].transform
			local var_568_1 = 0

			if var_568_1 < arg_565_1.time_ and arg_565_1.time_ <= var_568_1 + arg_568_0 then
				arg_565_1.var_.moveOldPos10022 = var_568_0.localPosition
				var_568_0.localScale = Vector3.New(1, 1, 1)

				arg_565_1:CheckSpriteTmpPos("10022", 2)

				local var_568_2 = var_568_0.childCount

				for iter_568_0 = 0, var_568_2 - 1 do
					local var_568_3 = var_568_0:GetChild(iter_568_0)

					if var_568_3.name == "split_8" or not string.find(var_568_3.name, "split") then
						var_568_3.gameObject:SetActive(true)
					else
						var_568_3.gameObject:SetActive(false)
					end
				end
			end

			local var_568_4 = 0.001

			if var_568_1 <= arg_565_1.time_ and arg_565_1.time_ < var_568_1 + var_568_4 then
				local var_568_5 = (arg_565_1.time_ - var_568_1) / var_568_4
				local var_568_6 = Vector3.New(-390, -315, -320)

				var_568_0.localPosition = Vector3.Lerp(arg_565_1.var_.moveOldPos10022, var_568_6, var_568_5)
			end

			if arg_565_1.time_ >= var_568_1 + var_568_4 and arg_565_1.time_ < var_568_1 + var_568_4 + arg_568_0 then
				var_568_0.localPosition = Vector3.New(-390, -315, -320)
			end

			local var_568_7 = arg_565_1.actors_["10022"]
			local var_568_8 = 0

			if var_568_8 < arg_565_1.time_ and arg_565_1.time_ <= var_568_8 + arg_568_0 and not isNil(var_568_7) and arg_565_1.var_.actorSpriteComps10022 == nil then
				arg_565_1.var_.actorSpriteComps10022 = var_568_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_568_9 = 2

			if var_568_8 <= arg_565_1.time_ and arg_565_1.time_ < var_568_8 + var_568_9 and not isNil(var_568_7) then
				local var_568_10 = (arg_565_1.time_ - var_568_8) / var_568_9

				if arg_565_1.var_.actorSpriteComps10022 then
					for iter_568_1, iter_568_2 in pairs(arg_565_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_568_2 then
							if arg_565_1.isInRecall_ then
								local var_568_11 = Mathf.Lerp(iter_568_2.color.r, arg_565_1.hightColor1.r, var_568_10)
								local var_568_12 = Mathf.Lerp(iter_568_2.color.g, arg_565_1.hightColor1.g, var_568_10)
								local var_568_13 = Mathf.Lerp(iter_568_2.color.b, arg_565_1.hightColor1.b, var_568_10)

								iter_568_2.color = Color.New(var_568_11, var_568_12, var_568_13)
							else
								local var_568_14 = Mathf.Lerp(iter_568_2.color.r, 1, var_568_10)

								iter_568_2.color = Color.New(var_568_14, var_568_14, var_568_14)
							end
						end
					end
				end
			end

			if arg_565_1.time_ >= var_568_8 + var_568_9 and arg_565_1.time_ < var_568_8 + var_568_9 + arg_568_0 and not isNil(var_568_7) and arg_565_1.var_.actorSpriteComps10022 then
				for iter_568_3, iter_568_4 in pairs(arg_565_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_568_4 then
						if arg_565_1.isInRecall_ then
							iter_568_4.color = arg_565_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_568_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_565_1.var_.actorSpriteComps10022 = nil
			end

			local var_568_15 = arg_565_1.actors_["10093"]
			local var_568_16 = 0

			if var_568_16 < arg_565_1.time_ and arg_565_1.time_ <= var_568_16 + arg_568_0 and not isNil(var_568_15) and arg_565_1.var_.actorSpriteComps10093 == nil then
				arg_565_1.var_.actorSpriteComps10093 = var_568_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_568_17 = 2

			if var_568_16 <= arg_565_1.time_ and arg_565_1.time_ < var_568_16 + var_568_17 and not isNil(var_568_15) then
				local var_568_18 = (arg_565_1.time_ - var_568_16) / var_568_17

				if arg_565_1.var_.actorSpriteComps10093 then
					for iter_568_5, iter_568_6 in pairs(arg_565_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_568_6 then
							if arg_565_1.isInRecall_ then
								local var_568_19 = Mathf.Lerp(iter_568_6.color.r, arg_565_1.hightColor2.r, var_568_18)
								local var_568_20 = Mathf.Lerp(iter_568_6.color.g, arg_565_1.hightColor2.g, var_568_18)
								local var_568_21 = Mathf.Lerp(iter_568_6.color.b, arg_565_1.hightColor2.b, var_568_18)

								iter_568_6.color = Color.New(var_568_19, var_568_20, var_568_21)
							else
								local var_568_22 = Mathf.Lerp(iter_568_6.color.r, 0.5, var_568_18)

								iter_568_6.color = Color.New(var_568_22, var_568_22, var_568_22)
							end
						end
					end
				end
			end

			if arg_565_1.time_ >= var_568_16 + var_568_17 and arg_565_1.time_ < var_568_16 + var_568_17 + arg_568_0 and not isNil(var_568_15) and arg_565_1.var_.actorSpriteComps10093 then
				for iter_568_7, iter_568_8 in pairs(arg_565_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_568_8 then
						if arg_565_1.isInRecall_ then
							iter_568_8.color = arg_565_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_568_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_565_1.var_.actorSpriteComps10093 = nil
			end

			local var_568_23 = 0
			local var_568_24 = 1.175

			if var_568_23 < arg_565_1.time_ and arg_565_1.time_ <= var_568_23 + arg_568_0 then
				arg_565_1.talkMaxDuration = 0
				arg_565_1.dialogCg_.alpha = 1

				arg_565_1.dialog_:SetActive(true)
				SetActive(arg_565_1.leftNameGo_, true)

				local var_568_25 = arg_565_1:FormatText(StoryNameCfg[614].name)

				arg_565_1.leftNameTxt_.text = var_568_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_565_1.leftNameTxt_.transform)

				arg_565_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_565_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_565_1:RecordName(arg_565_1.leftNameTxt_.text)
				SetActive(arg_565_1.iconTrs_.gameObject, false)
				arg_565_1.callingController_:SetSelectedState("normal")

				local var_568_26 = arg_565_1:GetWordFromCfg(413161138)
				local var_568_27 = arg_565_1:FormatText(var_568_26.content)

				arg_565_1.text_.text = var_568_27

				LuaForUtil.ClearLinePrefixSymbol(arg_565_1.text_)

				local var_568_28 = 47
				local var_568_29 = utf8.len(var_568_27)
				local var_568_30 = var_568_28 <= 0 and var_568_24 or var_568_24 * (var_568_29 / var_568_28)

				if var_568_30 > 0 and var_568_24 < var_568_30 then
					arg_565_1.talkMaxDuration = var_568_30

					if var_568_30 + var_568_23 > arg_565_1.duration_ then
						arg_565_1.duration_ = var_568_30 + var_568_23
					end
				end

				arg_565_1.text_.text = var_568_27
				arg_565_1.typewritter.percent = 0

				arg_565_1.typewritter:SetDirty()
				arg_565_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161138", "story_v_out_413161.awb") ~= 0 then
					local var_568_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161138", "story_v_out_413161.awb") / 1000

					if var_568_31 + var_568_23 > arg_565_1.duration_ then
						arg_565_1.duration_ = var_568_31 + var_568_23
					end

					if var_568_26.prefab_name ~= "" and arg_565_1.actors_[var_568_26.prefab_name] ~= nil then
						local var_568_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_565_1.actors_[var_568_26.prefab_name].transform, "story_v_out_413161", "413161138", "story_v_out_413161.awb")

						arg_565_1:RecordAudio("413161138", var_568_32)
						arg_565_1:RecordAudio("413161138", var_568_32)
					else
						arg_565_1:AudioAction("play", "voice", "story_v_out_413161", "413161138", "story_v_out_413161.awb")
					end

					arg_565_1:RecordHistoryTalkVoice("story_v_out_413161", "413161138", "story_v_out_413161.awb")
				end

				arg_565_1:RecordContent(arg_565_1.text_.text)
			end

			local var_568_33 = math.max(var_568_24, arg_565_1.talkMaxDuration)

			if var_568_23 <= arg_565_1.time_ and arg_565_1.time_ < var_568_23 + var_568_33 then
				arg_565_1.typewritter.percent = (arg_565_1.time_ - var_568_23) / var_568_33

				arg_565_1.typewritter:SetDirty()
			end

			if arg_565_1.time_ >= var_568_23 + var_568_33 and arg_565_1.time_ < var_568_23 + var_568_33 + arg_568_0 then
				arg_565_1.typewritter.percent = 1

				arg_565_1.typewritter:SetDirty()
				arg_565_1:ShowNextGo(true)
			end
		end
	end,
	Play413161139 = function(arg_569_0, arg_569_1)
		arg_569_1.time_ = 0
		arg_569_1.frameCnt_ = 0
		arg_569_1.state_ = "playing"
		arg_569_1.curTalkId_ = 413161139
		arg_569_1.duration_ = 6.3

		local var_569_0 = {
			zh = 4.3,
			ja = 6.3
		}
		local var_569_1 = manager.audio:GetLocalizationFlag()

		if var_569_0[var_569_1] ~= nil then
			arg_569_1.duration_ = var_569_0[var_569_1]
		end

		SetActive(arg_569_1.tipsGo_, false)

		function arg_569_1.onSingleLineFinish_()
			arg_569_1.onSingleLineUpdate_ = nil
			arg_569_1.onSingleLineFinish_ = nil
			arg_569_1.state_ = "waiting"
		end

		function arg_569_1.playNext_(arg_571_0)
			if arg_571_0 == 1 then
				arg_569_0:Play413161140(arg_569_1)
			end
		end

		function arg_569_1.onSingleLineUpdate_(arg_572_0)
			local var_572_0 = 0
			local var_572_1 = 0.45

			if var_572_0 < arg_569_1.time_ and arg_569_1.time_ <= var_572_0 + arg_572_0 then
				arg_569_1.talkMaxDuration = 0
				arg_569_1.dialogCg_.alpha = 1

				arg_569_1.dialog_:SetActive(true)
				SetActive(arg_569_1.leftNameGo_, true)

				local var_572_2 = arg_569_1:FormatText(StoryNameCfg[614].name)

				arg_569_1.leftNameTxt_.text = var_572_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_569_1.leftNameTxt_.transform)

				arg_569_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_569_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_569_1:RecordName(arg_569_1.leftNameTxt_.text)
				SetActive(arg_569_1.iconTrs_.gameObject, false)
				arg_569_1.callingController_:SetSelectedState("normal")

				local var_572_3 = arg_569_1:GetWordFromCfg(413161139)
				local var_572_4 = arg_569_1:FormatText(var_572_3.content)

				arg_569_1.text_.text = var_572_4

				LuaForUtil.ClearLinePrefixSymbol(arg_569_1.text_)

				local var_572_5 = 17
				local var_572_6 = utf8.len(var_572_4)
				local var_572_7 = var_572_5 <= 0 and var_572_1 or var_572_1 * (var_572_6 / var_572_5)

				if var_572_7 > 0 and var_572_1 < var_572_7 then
					arg_569_1.talkMaxDuration = var_572_7

					if var_572_7 + var_572_0 > arg_569_1.duration_ then
						arg_569_1.duration_ = var_572_7 + var_572_0
					end
				end

				arg_569_1.text_.text = var_572_4
				arg_569_1.typewritter.percent = 0

				arg_569_1.typewritter:SetDirty()
				arg_569_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161139", "story_v_out_413161.awb") ~= 0 then
					local var_572_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161139", "story_v_out_413161.awb") / 1000

					if var_572_8 + var_572_0 > arg_569_1.duration_ then
						arg_569_1.duration_ = var_572_8 + var_572_0
					end

					if var_572_3.prefab_name ~= "" and arg_569_1.actors_[var_572_3.prefab_name] ~= nil then
						local var_572_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_569_1.actors_[var_572_3.prefab_name].transform, "story_v_out_413161", "413161139", "story_v_out_413161.awb")

						arg_569_1:RecordAudio("413161139", var_572_9)
						arg_569_1:RecordAudio("413161139", var_572_9)
					else
						arg_569_1:AudioAction("play", "voice", "story_v_out_413161", "413161139", "story_v_out_413161.awb")
					end

					arg_569_1:RecordHistoryTalkVoice("story_v_out_413161", "413161139", "story_v_out_413161.awb")
				end

				arg_569_1:RecordContent(arg_569_1.text_.text)
			end

			local var_572_10 = math.max(var_572_1, arg_569_1.talkMaxDuration)

			if var_572_0 <= arg_569_1.time_ and arg_569_1.time_ < var_572_0 + var_572_10 then
				arg_569_1.typewritter.percent = (arg_569_1.time_ - var_572_0) / var_572_10

				arg_569_1.typewritter:SetDirty()
			end

			if arg_569_1.time_ >= var_572_0 + var_572_10 and arg_569_1.time_ < var_572_0 + var_572_10 + arg_572_0 then
				arg_569_1.typewritter.percent = 1

				arg_569_1.typewritter:SetDirty()
				arg_569_1:ShowNextGo(true)
			end
		end
	end,
	Play413161140 = function(arg_573_0, arg_573_1)
		arg_573_1.time_ = 0
		arg_573_1.frameCnt_ = 0
		arg_573_1.state_ = "playing"
		arg_573_1.curTalkId_ = 413161140
		arg_573_1.duration_ = 7.5

		local var_573_0 = {
			zh = 6,
			ja = 7.5
		}
		local var_573_1 = manager.audio:GetLocalizationFlag()

		if var_573_0[var_573_1] ~= nil then
			arg_573_1.duration_ = var_573_0[var_573_1]
		end

		SetActive(arg_573_1.tipsGo_, false)

		function arg_573_1.onSingleLineFinish_()
			arg_573_1.onSingleLineUpdate_ = nil
			arg_573_1.onSingleLineFinish_ = nil
			arg_573_1.state_ = "waiting"
		end

		function arg_573_1.playNext_(arg_575_0)
			if arg_575_0 == 1 then
				arg_573_0:Play413161141(arg_573_1)
			end
		end

		function arg_573_1.onSingleLineUpdate_(arg_576_0)
			local var_576_0 = arg_573_1.actors_["10093"].transform
			local var_576_1 = 0

			if var_576_1 < arg_573_1.time_ and arg_573_1.time_ <= var_576_1 + arg_576_0 then
				arg_573_1.var_.moveOldPos10093 = var_576_0.localPosition
				var_576_0.localScale = Vector3.New(1, 1, 1)

				arg_573_1:CheckSpriteTmpPos("10093", 4)

				local var_576_2 = var_576_0.childCount

				for iter_576_0 = 0, var_576_2 - 1 do
					local var_576_3 = var_576_0:GetChild(iter_576_0)

					if var_576_3.name == "split_1" or not string.find(var_576_3.name, "split") then
						var_576_3.gameObject:SetActive(true)
					else
						var_576_3.gameObject:SetActive(false)
					end
				end
			end

			local var_576_4 = 0.001

			if var_576_1 <= arg_573_1.time_ and arg_573_1.time_ < var_576_1 + var_576_4 then
				local var_576_5 = (arg_573_1.time_ - var_576_1) / var_576_4
				local var_576_6 = Vector3.New(390, -345, -245)

				var_576_0.localPosition = Vector3.Lerp(arg_573_1.var_.moveOldPos10093, var_576_6, var_576_5)
			end

			if arg_573_1.time_ >= var_576_1 + var_576_4 and arg_573_1.time_ < var_576_1 + var_576_4 + arg_576_0 then
				var_576_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_576_7 = arg_573_1.actors_["10093"]
			local var_576_8 = 0

			if var_576_8 < arg_573_1.time_ and arg_573_1.time_ <= var_576_8 + arg_576_0 and not isNil(var_576_7) and arg_573_1.var_.actorSpriteComps10093 == nil then
				arg_573_1.var_.actorSpriteComps10093 = var_576_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_576_9 = 2

			if var_576_8 <= arg_573_1.time_ and arg_573_1.time_ < var_576_8 + var_576_9 and not isNil(var_576_7) then
				local var_576_10 = (arg_573_1.time_ - var_576_8) / var_576_9

				if arg_573_1.var_.actorSpriteComps10093 then
					for iter_576_1, iter_576_2 in pairs(arg_573_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_576_2 then
							if arg_573_1.isInRecall_ then
								local var_576_11 = Mathf.Lerp(iter_576_2.color.r, arg_573_1.hightColor1.r, var_576_10)
								local var_576_12 = Mathf.Lerp(iter_576_2.color.g, arg_573_1.hightColor1.g, var_576_10)
								local var_576_13 = Mathf.Lerp(iter_576_2.color.b, arg_573_1.hightColor1.b, var_576_10)

								iter_576_2.color = Color.New(var_576_11, var_576_12, var_576_13)
							else
								local var_576_14 = Mathf.Lerp(iter_576_2.color.r, 1, var_576_10)

								iter_576_2.color = Color.New(var_576_14, var_576_14, var_576_14)
							end
						end
					end
				end
			end

			if arg_573_1.time_ >= var_576_8 + var_576_9 and arg_573_1.time_ < var_576_8 + var_576_9 + arg_576_0 and not isNil(var_576_7) and arg_573_1.var_.actorSpriteComps10093 then
				for iter_576_3, iter_576_4 in pairs(arg_573_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_576_4 then
						if arg_573_1.isInRecall_ then
							iter_576_4.color = arg_573_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_576_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_573_1.var_.actorSpriteComps10093 = nil
			end

			local var_576_15 = arg_573_1.actors_["10022"]
			local var_576_16 = 0

			if var_576_16 < arg_573_1.time_ and arg_573_1.time_ <= var_576_16 + arg_576_0 and not isNil(var_576_15) and arg_573_1.var_.actorSpriteComps10022 == nil then
				arg_573_1.var_.actorSpriteComps10022 = var_576_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_576_17 = 2

			if var_576_16 <= arg_573_1.time_ and arg_573_1.time_ < var_576_16 + var_576_17 and not isNil(var_576_15) then
				local var_576_18 = (arg_573_1.time_ - var_576_16) / var_576_17

				if arg_573_1.var_.actorSpriteComps10022 then
					for iter_576_5, iter_576_6 in pairs(arg_573_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_576_6 then
							if arg_573_1.isInRecall_ then
								local var_576_19 = Mathf.Lerp(iter_576_6.color.r, arg_573_1.hightColor2.r, var_576_18)
								local var_576_20 = Mathf.Lerp(iter_576_6.color.g, arg_573_1.hightColor2.g, var_576_18)
								local var_576_21 = Mathf.Lerp(iter_576_6.color.b, arg_573_1.hightColor2.b, var_576_18)

								iter_576_6.color = Color.New(var_576_19, var_576_20, var_576_21)
							else
								local var_576_22 = Mathf.Lerp(iter_576_6.color.r, 0.5, var_576_18)

								iter_576_6.color = Color.New(var_576_22, var_576_22, var_576_22)
							end
						end
					end
				end
			end

			if arg_573_1.time_ >= var_576_16 + var_576_17 and arg_573_1.time_ < var_576_16 + var_576_17 + arg_576_0 and not isNil(var_576_15) and arg_573_1.var_.actorSpriteComps10022 then
				for iter_576_7, iter_576_8 in pairs(arg_573_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_576_8 then
						if arg_573_1.isInRecall_ then
							iter_576_8.color = arg_573_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_576_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_573_1.var_.actorSpriteComps10022 = nil
			end

			local var_576_23 = 0
			local var_576_24 = 0.675

			if var_576_23 < arg_573_1.time_ and arg_573_1.time_ <= var_576_23 + arg_576_0 then
				arg_573_1.talkMaxDuration = 0
				arg_573_1.dialogCg_.alpha = 1

				arg_573_1.dialog_:SetActive(true)
				SetActive(arg_573_1.leftNameGo_, true)

				local var_576_25 = arg_573_1:FormatText(StoryNameCfg[28].name)

				arg_573_1.leftNameTxt_.text = var_576_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_573_1.leftNameTxt_.transform)

				arg_573_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_573_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_573_1:RecordName(arg_573_1.leftNameTxt_.text)
				SetActive(arg_573_1.iconTrs_.gameObject, false)
				arg_573_1.callingController_:SetSelectedState("normal")

				local var_576_26 = arg_573_1:GetWordFromCfg(413161140)
				local var_576_27 = arg_573_1:FormatText(var_576_26.content)

				arg_573_1.text_.text = var_576_27

				LuaForUtil.ClearLinePrefixSymbol(arg_573_1.text_)

				local var_576_28 = 27
				local var_576_29 = utf8.len(var_576_27)
				local var_576_30 = var_576_28 <= 0 and var_576_24 or var_576_24 * (var_576_29 / var_576_28)

				if var_576_30 > 0 and var_576_24 < var_576_30 then
					arg_573_1.talkMaxDuration = var_576_30

					if var_576_30 + var_576_23 > arg_573_1.duration_ then
						arg_573_1.duration_ = var_576_30 + var_576_23
					end
				end

				arg_573_1.text_.text = var_576_27
				arg_573_1.typewritter.percent = 0

				arg_573_1.typewritter:SetDirty()
				arg_573_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161140", "story_v_out_413161.awb") ~= 0 then
					local var_576_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161140", "story_v_out_413161.awb") / 1000

					if var_576_31 + var_576_23 > arg_573_1.duration_ then
						arg_573_1.duration_ = var_576_31 + var_576_23
					end

					if var_576_26.prefab_name ~= "" and arg_573_1.actors_[var_576_26.prefab_name] ~= nil then
						local var_576_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_573_1.actors_[var_576_26.prefab_name].transform, "story_v_out_413161", "413161140", "story_v_out_413161.awb")

						arg_573_1:RecordAudio("413161140", var_576_32)
						arg_573_1:RecordAudio("413161140", var_576_32)
					else
						arg_573_1:AudioAction("play", "voice", "story_v_out_413161", "413161140", "story_v_out_413161.awb")
					end

					arg_573_1:RecordHistoryTalkVoice("story_v_out_413161", "413161140", "story_v_out_413161.awb")
				end

				arg_573_1:RecordContent(arg_573_1.text_.text)
			end

			local var_576_33 = math.max(var_576_24, arg_573_1.talkMaxDuration)

			if var_576_23 <= arg_573_1.time_ and arg_573_1.time_ < var_576_23 + var_576_33 then
				arg_573_1.typewritter.percent = (arg_573_1.time_ - var_576_23) / var_576_33

				arg_573_1.typewritter:SetDirty()
			end

			if arg_573_1.time_ >= var_576_23 + var_576_33 and arg_573_1.time_ < var_576_23 + var_576_33 + arg_576_0 then
				arg_573_1.typewritter.percent = 1

				arg_573_1.typewritter:SetDirty()
				arg_573_1:ShowNextGo(true)
			end
		end
	end,
	Play413161141 = function(arg_577_0, arg_577_1)
		arg_577_1.time_ = 0
		arg_577_1.frameCnt_ = 0
		arg_577_1.state_ = "playing"
		arg_577_1.curTalkId_ = 413161141
		arg_577_1.duration_ = 8.13

		local var_577_0 = {
			zh = 6.166,
			ja = 8.133
		}
		local var_577_1 = manager.audio:GetLocalizationFlag()

		if var_577_0[var_577_1] ~= nil then
			arg_577_1.duration_ = var_577_0[var_577_1]
		end

		SetActive(arg_577_1.tipsGo_, false)

		function arg_577_1.onSingleLineFinish_()
			arg_577_1.onSingleLineUpdate_ = nil
			arg_577_1.onSingleLineFinish_ = nil
			arg_577_1.state_ = "waiting"
		end

		function arg_577_1.playNext_(arg_579_0)
			if arg_579_0 == 1 then
				arg_577_0:Play413161142(arg_577_1)
			end
		end

		function arg_577_1.onSingleLineUpdate_(arg_580_0)
			local var_580_0 = arg_577_1.actors_["10022"].transform
			local var_580_1 = 0

			if var_580_1 < arg_577_1.time_ and arg_577_1.time_ <= var_580_1 + arg_580_0 then
				arg_577_1.var_.moveOldPos10022 = var_580_0.localPosition
				var_580_0.localScale = Vector3.New(1, 1, 1)

				arg_577_1:CheckSpriteTmpPos("10022", 2)

				local var_580_2 = var_580_0.childCount

				for iter_580_0 = 0, var_580_2 - 1 do
					local var_580_3 = var_580_0:GetChild(iter_580_0)

					if var_580_3.name == "split_1" or not string.find(var_580_3.name, "split") then
						var_580_3.gameObject:SetActive(true)
					else
						var_580_3.gameObject:SetActive(false)
					end
				end
			end

			local var_580_4 = 0.001

			if var_580_1 <= arg_577_1.time_ and arg_577_1.time_ < var_580_1 + var_580_4 then
				local var_580_5 = (arg_577_1.time_ - var_580_1) / var_580_4
				local var_580_6 = Vector3.New(-390, -315, -320)

				var_580_0.localPosition = Vector3.Lerp(arg_577_1.var_.moveOldPos10022, var_580_6, var_580_5)
			end

			if arg_577_1.time_ >= var_580_1 + var_580_4 and arg_577_1.time_ < var_580_1 + var_580_4 + arg_580_0 then
				var_580_0.localPosition = Vector3.New(-390, -315, -320)
			end

			local var_580_7 = arg_577_1.actors_["10022"]
			local var_580_8 = 0

			if var_580_8 < arg_577_1.time_ and arg_577_1.time_ <= var_580_8 + arg_580_0 and not isNil(var_580_7) and arg_577_1.var_.actorSpriteComps10022 == nil then
				arg_577_1.var_.actorSpriteComps10022 = var_580_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_580_9 = 2

			if var_580_8 <= arg_577_1.time_ and arg_577_1.time_ < var_580_8 + var_580_9 and not isNil(var_580_7) then
				local var_580_10 = (arg_577_1.time_ - var_580_8) / var_580_9

				if arg_577_1.var_.actorSpriteComps10022 then
					for iter_580_1, iter_580_2 in pairs(arg_577_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_580_2 then
							if arg_577_1.isInRecall_ then
								local var_580_11 = Mathf.Lerp(iter_580_2.color.r, arg_577_1.hightColor1.r, var_580_10)
								local var_580_12 = Mathf.Lerp(iter_580_2.color.g, arg_577_1.hightColor1.g, var_580_10)
								local var_580_13 = Mathf.Lerp(iter_580_2.color.b, arg_577_1.hightColor1.b, var_580_10)

								iter_580_2.color = Color.New(var_580_11, var_580_12, var_580_13)
							else
								local var_580_14 = Mathf.Lerp(iter_580_2.color.r, 1, var_580_10)

								iter_580_2.color = Color.New(var_580_14, var_580_14, var_580_14)
							end
						end
					end
				end
			end

			if arg_577_1.time_ >= var_580_8 + var_580_9 and arg_577_1.time_ < var_580_8 + var_580_9 + arg_580_0 and not isNil(var_580_7) and arg_577_1.var_.actorSpriteComps10022 then
				for iter_580_3, iter_580_4 in pairs(arg_577_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_580_4 then
						if arg_577_1.isInRecall_ then
							iter_580_4.color = arg_577_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_580_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_577_1.var_.actorSpriteComps10022 = nil
			end

			local var_580_15 = arg_577_1.actors_["10093"]
			local var_580_16 = 0

			if var_580_16 < arg_577_1.time_ and arg_577_1.time_ <= var_580_16 + arg_580_0 and not isNil(var_580_15) and arg_577_1.var_.actorSpriteComps10093 == nil then
				arg_577_1.var_.actorSpriteComps10093 = var_580_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_580_17 = 2

			if var_580_16 <= arg_577_1.time_ and arg_577_1.time_ < var_580_16 + var_580_17 and not isNil(var_580_15) then
				local var_580_18 = (arg_577_1.time_ - var_580_16) / var_580_17

				if arg_577_1.var_.actorSpriteComps10093 then
					for iter_580_5, iter_580_6 in pairs(arg_577_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_580_6 then
							if arg_577_1.isInRecall_ then
								local var_580_19 = Mathf.Lerp(iter_580_6.color.r, arg_577_1.hightColor2.r, var_580_18)
								local var_580_20 = Mathf.Lerp(iter_580_6.color.g, arg_577_1.hightColor2.g, var_580_18)
								local var_580_21 = Mathf.Lerp(iter_580_6.color.b, arg_577_1.hightColor2.b, var_580_18)

								iter_580_6.color = Color.New(var_580_19, var_580_20, var_580_21)
							else
								local var_580_22 = Mathf.Lerp(iter_580_6.color.r, 0.5, var_580_18)

								iter_580_6.color = Color.New(var_580_22, var_580_22, var_580_22)
							end
						end
					end
				end
			end

			if arg_577_1.time_ >= var_580_16 + var_580_17 and arg_577_1.time_ < var_580_16 + var_580_17 + arg_580_0 and not isNil(var_580_15) and arg_577_1.var_.actorSpriteComps10093 then
				for iter_580_7, iter_580_8 in pairs(arg_577_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_580_8 then
						if arg_577_1.isInRecall_ then
							iter_580_8.color = arg_577_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_580_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_577_1.var_.actorSpriteComps10093 = nil
			end

			local var_580_23 = 0
			local var_580_24 = 0.725

			if var_580_23 < arg_577_1.time_ and arg_577_1.time_ <= var_580_23 + arg_580_0 then
				arg_577_1.talkMaxDuration = 0
				arg_577_1.dialogCg_.alpha = 1

				arg_577_1.dialog_:SetActive(true)
				SetActive(arg_577_1.leftNameGo_, true)

				local var_580_25 = arg_577_1:FormatText(StoryNameCfg[614].name)

				arg_577_1.leftNameTxt_.text = var_580_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_577_1.leftNameTxt_.transform)

				arg_577_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_577_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_577_1:RecordName(arg_577_1.leftNameTxt_.text)
				SetActive(arg_577_1.iconTrs_.gameObject, false)
				arg_577_1.callingController_:SetSelectedState("normal")

				local var_580_26 = arg_577_1:GetWordFromCfg(413161141)
				local var_580_27 = arg_577_1:FormatText(var_580_26.content)

				arg_577_1.text_.text = var_580_27

				LuaForUtil.ClearLinePrefixSymbol(arg_577_1.text_)

				local var_580_28 = 29
				local var_580_29 = utf8.len(var_580_27)
				local var_580_30 = var_580_28 <= 0 and var_580_24 or var_580_24 * (var_580_29 / var_580_28)

				if var_580_30 > 0 and var_580_24 < var_580_30 then
					arg_577_1.talkMaxDuration = var_580_30

					if var_580_30 + var_580_23 > arg_577_1.duration_ then
						arg_577_1.duration_ = var_580_30 + var_580_23
					end
				end

				arg_577_1.text_.text = var_580_27
				arg_577_1.typewritter.percent = 0

				arg_577_1.typewritter:SetDirty()
				arg_577_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161141", "story_v_out_413161.awb") ~= 0 then
					local var_580_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161141", "story_v_out_413161.awb") / 1000

					if var_580_31 + var_580_23 > arg_577_1.duration_ then
						arg_577_1.duration_ = var_580_31 + var_580_23
					end

					if var_580_26.prefab_name ~= "" and arg_577_1.actors_[var_580_26.prefab_name] ~= nil then
						local var_580_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_577_1.actors_[var_580_26.prefab_name].transform, "story_v_out_413161", "413161141", "story_v_out_413161.awb")

						arg_577_1:RecordAudio("413161141", var_580_32)
						arg_577_1:RecordAudio("413161141", var_580_32)
					else
						arg_577_1:AudioAction("play", "voice", "story_v_out_413161", "413161141", "story_v_out_413161.awb")
					end

					arg_577_1:RecordHistoryTalkVoice("story_v_out_413161", "413161141", "story_v_out_413161.awb")
				end

				arg_577_1:RecordContent(arg_577_1.text_.text)
			end

			local var_580_33 = math.max(var_580_24, arg_577_1.talkMaxDuration)

			if var_580_23 <= arg_577_1.time_ and arg_577_1.time_ < var_580_23 + var_580_33 then
				arg_577_1.typewritter.percent = (arg_577_1.time_ - var_580_23) / var_580_33

				arg_577_1.typewritter:SetDirty()
			end

			if arg_577_1.time_ >= var_580_23 + var_580_33 and arg_577_1.time_ < var_580_23 + var_580_33 + arg_580_0 then
				arg_577_1.typewritter.percent = 1

				arg_577_1.typewritter:SetDirty()
				arg_577_1:ShowNextGo(true)
			end
		end
	end,
	Play413161142 = function(arg_581_0, arg_581_1)
		arg_581_1.time_ = 0
		arg_581_1.frameCnt_ = 0
		arg_581_1.state_ = "playing"
		arg_581_1.curTalkId_ = 413161142
		arg_581_1.duration_ = 3.9

		local var_581_0 = {
			zh = 3.766,
			ja = 3.9
		}
		local var_581_1 = manager.audio:GetLocalizationFlag()

		if var_581_0[var_581_1] ~= nil then
			arg_581_1.duration_ = var_581_0[var_581_1]
		end

		SetActive(arg_581_1.tipsGo_, false)

		function arg_581_1.onSingleLineFinish_()
			arg_581_1.onSingleLineUpdate_ = nil
			arg_581_1.onSingleLineFinish_ = nil
			arg_581_1.state_ = "waiting"
		end

		function arg_581_1.playNext_(arg_583_0)
			if arg_583_0 == 1 then
				arg_581_0:Play413161143(arg_581_1)
			end
		end

		function arg_581_1.onSingleLineUpdate_(arg_584_0)
			local var_584_0 = arg_581_1.actors_["10093"].transform
			local var_584_1 = 0

			if var_584_1 < arg_581_1.time_ and arg_581_1.time_ <= var_584_1 + arg_584_0 then
				arg_581_1.var_.moveOldPos10093 = var_584_0.localPosition
				var_584_0.localScale = Vector3.New(1, 1, 1)

				arg_581_1:CheckSpriteTmpPos("10093", 4)

				local var_584_2 = var_584_0.childCount

				for iter_584_0 = 0, var_584_2 - 1 do
					local var_584_3 = var_584_0:GetChild(iter_584_0)

					if var_584_3.name == "split_2" or not string.find(var_584_3.name, "split") then
						var_584_3.gameObject:SetActive(true)
					else
						var_584_3.gameObject:SetActive(false)
					end
				end
			end

			local var_584_4 = 0.001

			if var_584_1 <= arg_581_1.time_ and arg_581_1.time_ < var_584_1 + var_584_4 then
				local var_584_5 = (arg_581_1.time_ - var_584_1) / var_584_4
				local var_584_6 = Vector3.New(390, -345, -245)

				var_584_0.localPosition = Vector3.Lerp(arg_581_1.var_.moveOldPos10093, var_584_6, var_584_5)
			end

			if arg_581_1.time_ >= var_584_1 + var_584_4 and arg_581_1.time_ < var_584_1 + var_584_4 + arg_584_0 then
				var_584_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_584_7 = arg_581_1.actors_["10093"]
			local var_584_8 = 0

			if var_584_8 < arg_581_1.time_ and arg_581_1.time_ <= var_584_8 + arg_584_0 and not isNil(var_584_7) and arg_581_1.var_.actorSpriteComps10093 == nil then
				arg_581_1.var_.actorSpriteComps10093 = var_584_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_584_9 = 2

			if var_584_8 <= arg_581_1.time_ and arg_581_1.time_ < var_584_8 + var_584_9 and not isNil(var_584_7) then
				local var_584_10 = (arg_581_1.time_ - var_584_8) / var_584_9

				if arg_581_1.var_.actorSpriteComps10093 then
					for iter_584_1, iter_584_2 in pairs(arg_581_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_584_2 then
							if arg_581_1.isInRecall_ then
								local var_584_11 = Mathf.Lerp(iter_584_2.color.r, arg_581_1.hightColor1.r, var_584_10)
								local var_584_12 = Mathf.Lerp(iter_584_2.color.g, arg_581_1.hightColor1.g, var_584_10)
								local var_584_13 = Mathf.Lerp(iter_584_2.color.b, arg_581_1.hightColor1.b, var_584_10)

								iter_584_2.color = Color.New(var_584_11, var_584_12, var_584_13)
							else
								local var_584_14 = Mathf.Lerp(iter_584_2.color.r, 1, var_584_10)

								iter_584_2.color = Color.New(var_584_14, var_584_14, var_584_14)
							end
						end
					end
				end
			end

			if arg_581_1.time_ >= var_584_8 + var_584_9 and arg_581_1.time_ < var_584_8 + var_584_9 + arg_584_0 and not isNil(var_584_7) and arg_581_1.var_.actorSpriteComps10093 then
				for iter_584_3, iter_584_4 in pairs(arg_581_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_584_4 then
						if arg_581_1.isInRecall_ then
							iter_584_4.color = arg_581_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_584_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_581_1.var_.actorSpriteComps10093 = nil
			end

			local var_584_15 = arg_581_1.actors_["10022"]
			local var_584_16 = 0

			if var_584_16 < arg_581_1.time_ and arg_581_1.time_ <= var_584_16 + arg_584_0 and not isNil(var_584_15) and arg_581_1.var_.actorSpriteComps10022 == nil then
				arg_581_1.var_.actorSpriteComps10022 = var_584_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_584_17 = 2

			if var_584_16 <= arg_581_1.time_ and arg_581_1.time_ < var_584_16 + var_584_17 and not isNil(var_584_15) then
				local var_584_18 = (arg_581_1.time_ - var_584_16) / var_584_17

				if arg_581_1.var_.actorSpriteComps10022 then
					for iter_584_5, iter_584_6 in pairs(arg_581_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_584_6 then
							if arg_581_1.isInRecall_ then
								local var_584_19 = Mathf.Lerp(iter_584_6.color.r, arg_581_1.hightColor2.r, var_584_18)
								local var_584_20 = Mathf.Lerp(iter_584_6.color.g, arg_581_1.hightColor2.g, var_584_18)
								local var_584_21 = Mathf.Lerp(iter_584_6.color.b, arg_581_1.hightColor2.b, var_584_18)

								iter_584_6.color = Color.New(var_584_19, var_584_20, var_584_21)
							else
								local var_584_22 = Mathf.Lerp(iter_584_6.color.r, 0.5, var_584_18)

								iter_584_6.color = Color.New(var_584_22, var_584_22, var_584_22)
							end
						end
					end
				end
			end

			if arg_581_1.time_ >= var_584_16 + var_584_17 and arg_581_1.time_ < var_584_16 + var_584_17 + arg_584_0 and not isNil(var_584_15) and arg_581_1.var_.actorSpriteComps10022 then
				for iter_584_7, iter_584_8 in pairs(arg_581_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_584_8 then
						if arg_581_1.isInRecall_ then
							iter_584_8.color = arg_581_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_584_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_581_1.var_.actorSpriteComps10022 = nil
			end

			local var_584_23 = 0
			local var_584_24 = 0.5

			if var_584_23 < arg_581_1.time_ and arg_581_1.time_ <= var_584_23 + arg_584_0 then
				arg_581_1.talkMaxDuration = 0
				arg_581_1.dialogCg_.alpha = 1

				arg_581_1.dialog_:SetActive(true)
				SetActive(arg_581_1.leftNameGo_, true)

				local var_584_25 = arg_581_1:FormatText(StoryNameCfg[28].name)

				arg_581_1.leftNameTxt_.text = var_584_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_581_1.leftNameTxt_.transform)

				arg_581_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_581_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_581_1:RecordName(arg_581_1.leftNameTxt_.text)
				SetActive(arg_581_1.iconTrs_.gameObject, false)
				arg_581_1.callingController_:SetSelectedState("normal")

				local var_584_26 = arg_581_1:GetWordFromCfg(413161142)
				local var_584_27 = arg_581_1:FormatText(var_584_26.content)

				arg_581_1.text_.text = var_584_27

				LuaForUtil.ClearLinePrefixSymbol(arg_581_1.text_)

				local var_584_28 = 17
				local var_584_29 = utf8.len(var_584_27)
				local var_584_30 = var_584_28 <= 0 and var_584_24 or var_584_24 * (var_584_29 / var_584_28)

				if var_584_30 > 0 and var_584_24 < var_584_30 then
					arg_581_1.talkMaxDuration = var_584_30

					if var_584_30 + var_584_23 > arg_581_1.duration_ then
						arg_581_1.duration_ = var_584_30 + var_584_23
					end
				end

				arg_581_1.text_.text = var_584_27
				arg_581_1.typewritter.percent = 0

				arg_581_1.typewritter:SetDirty()
				arg_581_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161142", "story_v_out_413161.awb") ~= 0 then
					local var_584_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161142", "story_v_out_413161.awb") / 1000

					if var_584_31 + var_584_23 > arg_581_1.duration_ then
						arg_581_1.duration_ = var_584_31 + var_584_23
					end

					if var_584_26.prefab_name ~= "" and arg_581_1.actors_[var_584_26.prefab_name] ~= nil then
						local var_584_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_581_1.actors_[var_584_26.prefab_name].transform, "story_v_out_413161", "413161142", "story_v_out_413161.awb")

						arg_581_1:RecordAudio("413161142", var_584_32)
						arg_581_1:RecordAudio("413161142", var_584_32)
					else
						arg_581_1:AudioAction("play", "voice", "story_v_out_413161", "413161142", "story_v_out_413161.awb")
					end

					arg_581_1:RecordHistoryTalkVoice("story_v_out_413161", "413161142", "story_v_out_413161.awb")
				end

				arg_581_1:RecordContent(arg_581_1.text_.text)
			end

			local var_584_33 = math.max(var_584_24, arg_581_1.talkMaxDuration)

			if var_584_23 <= arg_581_1.time_ and arg_581_1.time_ < var_584_23 + var_584_33 then
				arg_581_1.typewritter.percent = (arg_581_1.time_ - var_584_23) / var_584_33

				arg_581_1.typewritter:SetDirty()
			end

			if arg_581_1.time_ >= var_584_23 + var_584_33 and arg_581_1.time_ < var_584_23 + var_584_33 + arg_584_0 then
				arg_581_1.typewritter.percent = 1

				arg_581_1.typewritter:SetDirty()
				arg_581_1:ShowNextGo(true)
			end
		end
	end,
	Play413161143 = function(arg_585_0, arg_585_1)
		arg_585_1.time_ = 0
		arg_585_1.frameCnt_ = 0
		arg_585_1.state_ = "playing"
		arg_585_1.curTalkId_ = 413161143
		arg_585_1.duration_ = 8.93

		local var_585_0 = {
			zh = 4.7,
			ja = 8.933
		}
		local var_585_1 = manager.audio:GetLocalizationFlag()

		if var_585_0[var_585_1] ~= nil then
			arg_585_1.duration_ = var_585_0[var_585_1]
		end

		SetActive(arg_585_1.tipsGo_, false)

		function arg_585_1.onSingleLineFinish_()
			arg_585_1.onSingleLineUpdate_ = nil
			arg_585_1.onSingleLineFinish_ = nil
			arg_585_1.state_ = "waiting"
		end

		function arg_585_1.playNext_(arg_587_0)
			if arg_587_0 == 1 then
				arg_585_0:Play413161144(arg_585_1)
			end
		end

		function arg_585_1.onSingleLineUpdate_(arg_588_0)
			local var_588_0 = arg_585_1.actors_["10022"].transform
			local var_588_1 = 0

			if var_588_1 < arg_585_1.time_ and arg_585_1.time_ <= var_588_1 + arg_588_0 then
				arg_585_1.var_.moveOldPos10022 = var_588_0.localPosition
				var_588_0.localScale = Vector3.New(1, 1, 1)

				arg_585_1:CheckSpriteTmpPos("10022", 2)

				local var_588_2 = var_588_0.childCount

				for iter_588_0 = 0, var_588_2 - 1 do
					local var_588_3 = var_588_0:GetChild(iter_588_0)

					if var_588_3.name == "split_8" or not string.find(var_588_3.name, "split") then
						var_588_3.gameObject:SetActive(true)
					else
						var_588_3.gameObject:SetActive(false)
					end
				end
			end

			local var_588_4 = 0.001

			if var_588_1 <= arg_585_1.time_ and arg_585_1.time_ < var_588_1 + var_588_4 then
				local var_588_5 = (arg_585_1.time_ - var_588_1) / var_588_4
				local var_588_6 = Vector3.New(-390, -315, -320)

				var_588_0.localPosition = Vector3.Lerp(arg_585_1.var_.moveOldPos10022, var_588_6, var_588_5)
			end

			if arg_585_1.time_ >= var_588_1 + var_588_4 and arg_585_1.time_ < var_588_1 + var_588_4 + arg_588_0 then
				var_588_0.localPosition = Vector3.New(-390, -315, -320)
			end

			local var_588_7 = arg_585_1.actors_["10022"]
			local var_588_8 = 0

			if var_588_8 < arg_585_1.time_ and arg_585_1.time_ <= var_588_8 + arg_588_0 and not isNil(var_588_7) and arg_585_1.var_.actorSpriteComps10022 == nil then
				arg_585_1.var_.actorSpriteComps10022 = var_588_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_588_9 = 2

			if var_588_8 <= arg_585_1.time_ and arg_585_1.time_ < var_588_8 + var_588_9 and not isNil(var_588_7) then
				local var_588_10 = (arg_585_1.time_ - var_588_8) / var_588_9

				if arg_585_1.var_.actorSpriteComps10022 then
					for iter_588_1, iter_588_2 in pairs(arg_585_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_588_2 then
							if arg_585_1.isInRecall_ then
								local var_588_11 = Mathf.Lerp(iter_588_2.color.r, arg_585_1.hightColor1.r, var_588_10)
								local var_588_12 = Mathf.Lerp(iter_588_2.color.g, arg_585_1.hightColor1.g, var_588_10)
								local var_588_13 = Mathf.Lerp(iter_588_2.color.b, arg_585_1.hightColor1.b, var_588_10)

								iter_588_2.color = Color.New(var_588_11, var_588_12, var_588_13)
							else
								local var_588_14 = Mathf.Lerp(iter_588_2.color.r, 1, var_588_10)

								iter_588_2.color = Color.New(var_588_14, var_588_14, var_588_14)
							end
						end
					end
				end
			end

			if arg_585_1.time_ >= var_588_8 + var_588_9 and arg_585_1.time_ < var_588_8 + var_588_9 + arg_588_0 and not isNil(var_588_7) and arg_585_1.var_.actorSpriteComps10022 then
				for iter_588_3, iter_588_4 in pairs(arg_585_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_588_4 then
						if arg_585_1.isInRecall_ then
							iter_588_4.color = arg_585_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_588_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_585_1.var_.actorSpriteComps10022 = nil
			end

			local var_588_15 = arg_585_1.actors_["10093"]
			local var_588_16 = 0

			if var_588_16 < arg_585_1.time_ and arg_585_1.time_ <= var_588_16 + arg_588_0 and not isNil(var_588_15) and arg_585_1.var_.actorSpriteComps10093 == nil then
				arg_585_1.var_.actorSpriteComps10093 = var_588_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_588_17 = 2

			if var_588_16 <= arg_585_1.time_ and arg_585_1.time_ < var_588_16 + var_588_17 and not isNil(var_588_15) then
				local var_588_18 = (arg_585_1.time_ - var_588_16) / var_588_17

				if arg_585_1.var_.actorSpriteComps10093 then
					for iter_588_5, iter_588_6 in pairs(arg_585_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_588_6 then
							if arg_585_1.isInRecall_ then
								local var_588_19 = Mathf.Lerp(iter_588_6.color.r, arg_585_1.hightColor2.r, var_588_18)
								local var_588_20 = Mathf.Lerp(iter_588_6.color.g, arg_585_1.hightColor2.g, var_588_18)
								local var_588_21 = Mathf.Lerp(iter_588_6.color.b, arg_585_1.hightColor2.b, var_588_18)

								iter_588_6.color = Color.New(var_588_19, var_588_20, var_588_21)
							else
								local var_588_22 = Mathf.Lerp(iter_588_6.color.r, 0.5, var_588_18)

								iter_588_6.color = Color.New(var_588_22, var_588_22, var_588_22)
							end
						end
					end
				end
			end

			if arg_585_1.time_ >= var_588_16 + var_588_17 and arg_585_1.time_ < var_588_16 + var_588_17 + arg_588_0 and not isNil(var_588_15) and arg_585_1.var_.actorSpriteComps10093 then
				for iter_588_7, iter_588_8 in pairs(arg_585_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_588_8 then
						if arg_585_1.isInRecall_ then
							iter_588_8.color = arg_585_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_588_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_585_1.var_.actorSpriteComps10093 = nil
			end

			local var_588_23 = 0
			local var_588_24 = 0.525

			if var_588_23 < arg_585_1.time_ and arg_585_1.time_ <= var_588_23 + arg_588_0 then
				arg_585_1.talkMaxDuration = 0
				arg_585_1.dialogCg_.alpha = 1

				arg_585_1.dialog_:SetActive(true)
				SetActive(arg_585_1.leftNameGo_, true)

				local var_588_25 = arg_585_1:FormatText(StoryNameCfg[614].name)

				arg_585_1.leftNameTxt_.text = var_588_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_585_1.leftNameTxt_.transform)

				arg_585_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_585_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_585_1:RecordName(arg_585_1.leftNameTxt_.text)
				SetActive(arg_585_1.iconTrs_.gameObject, false)
				arg_585_1.callingController_:SetSelectedState("normal")

				local var_588_26 = arg_585_1:GetWordFromCfg(413161143)
				local var_588_27 = arg_585_1:FormatText(var_588_26.content)

				arg_585_1.text_.text = var_588_27

				LuaForUtil.ClearLinePrefixSymbol(arg_585_1.text_)

				local var_588_28 = 21
				local var_588_29 = utf8.len(var_588_27)
				local var_588_30 = var_588_28 <= 0 and var_588_24 or var_588_24 * (var_588_29 / var_588_28)

				if var_588_30 > 0 and var_588_24 < var_588_30 then
					arg_585_1.talkMaxDuration = var_588_30

					if var_588_30 + var_588_23 > arg_585_1.duration_ then
						arg_585_1.duration_ = var_588_30 + var_588_23
					end
				end

				arg_585_1.text_.text = var_588_27
				arg_585_1.typewritter.percent = 0

				arg_585_1.typewritter:SetDirty()
				arg_585_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161143", "story_v_out_413161.awb") ~= 0 then
					local var_588_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161143", "story_v_out_413161.awb") / 1000

					if var_588_31 + var_588_23 > arg_585_1.duration_ then
						arg_585_1.duration_ = var_588_31 + var_588_23
					end

					if var_588_26.prefab_name ~= "" and arg_585_1.actors_[var_588_26.prefab_name] ~= nil then
						local var_588_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_585_1.actors_[var_588_26.prefab_name].transform, "story_v_out_413161", "413161143", "story_v_out_413161.awb")

						arg_585_1:RecordAudio("413161143", var_588_32)
						arg_585_1:RecordAudio("413161143", var_588_32)
					else
						arg_585_1:AudioAction("play", "voice", "story_v_out_413161", "413161143", "story_v_out_413161.awb")
					end

					arg_585_1:RecordHistoryTalkVoice("story_v_out_413161", "413161143", "story_v_out_413161.awb")
				end

				arg_585_1:RecordContent(arg_585_1.text_.text)
			end

			local var_588_33 = math.max(var_588_24, arg_585_1.talkMaxDuration)

			if var_588_23 <= arg_585_1.time_ and arg_585_1.time_ < var_588_23 + var_588_33 then
				arg_585_1.typewritter.percent = (arg_585_1.time_ - var_588_23) / var_588_33

				arg_585_1.typewritter:SetDirty()
			end

			if arg_585_1.time_ >= var_588_23 + var_588_33 and arg_585_1.time_ < var_588_23 + var_588_33 + arg_588_0 then
				arg_585_1.typewritter.percent = 1

				arg_585_1.typewritter:SetDirty()
				arg_585_1:ShowNextGo(true)
			end
		end
	end,
	Play413161144 = function(arg_589_0, arg_589_1)
		arg_589_1.time_ = 0
		arg_589_1.frameCnt_ = 0
		arg_589_1.state_ = "playing"
		arg_589_1.curTalkId_ = 413161144
		arg_589_1.duration_ = 7.23

		local var_589_0 = {
			zh = 6.566,
			ja = 7.233
		}
		local var_589_1 = manager.audio:GetLocalizationFlag()

		if var_589_0[var_589_1] ~= nil then
			arg_589_1.duration_ = var_589_0[var_589_1]
		end

		SetActive(arg_589_1.tipsGo_, false)

		function arg_589_1.onSingleLineFinish_()
			arg_589_1.onSingleLineUpdate_ = nil
			arg_589_1.onSingleLineFinish_ = nil
			arg_589_1.state_ = "waiting"
		end

		function arg_589_1.playNext_(arg_591_0)
			if arg_591_0 == 1 then
				arg_589_0:Play413161145(arg_589_1)
			end
		end

		function arg_589_1.onSingleLineUpdate_(arg_592_0)
			local var_592_0 = arg_589_1.actors_["10093"].transform
			local var_592_1 = 0

			if var_592_1 < arg_589_1.time_ and arg_589_1.time_ <= var_592_1 + arg_592_0 then
				arg_589_1.var_.moveOldPos10093 = var_592_0.localPosition
				var_592_0.localScale = Vector3.New(1, 1, 1)

				arg_589_1:CheckSpriteTmpPos("10093", 4)

				local var_592_2 = var_592_0.childCount

				for iter_592_0 = 0, var_592_2 - 1 do
					local var_592_3 = var_592_0:GetChild(iter_592_0)

					if var_592_3.name == "split_1" or not string.find(var_592_3.name, "split") then
						var_592_3.gameObject:SetActive(true)
					else
						var_592_3.gameObject:SetActive(false)
					end
				end
			end

			local var_592_4 = 0.001

			if var_592_1 <= arg_589_1.time_ and arg_589_1.time_ < var_592_1 + var_592_4 then
				local var_592_5 = (arg_589_1.time_ - var_592_1) / var_592_4
				local var_592_6 = Vector3.New(390, -345, -245)

				var_592_0.localPosition = Vector3.Lerp(arg_589_1.var_.moveOldPos10093, var_592_6, var_592_5)
			end

			if arg_589_1.time_ >= var_592_1 + var_592_4 and arg_589_1.time_ < var_592_1 + var_592_4 + arg_592_0 then
				var_592_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_592_7 = arg_589_1.actors_["10093"]
			local var_592_8 = 0

			if var_592_8 < arg_589_1.time_ and arg_589_1.time_ <= var_592_8 + arg_592_0 and not isNil(var_592_7) and arg_589_1.var_.actorSpriteComps10093 == nil then
				arg_589_1.var_.actorSpriteComps10093 = var_592_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_592_9 = 2

			if var_592_8 <= arg_589_1.time_ and arg_589_1.time_ < var_592_8 + var_592_9 and not isNil(var_592_7) then
				local var_592_10 = (arg_589_1.time_ - var_592_8) / var_592_9

				if arg_589_1.var_.actorSpriteComps10093 then
					for iter_592_1, iter_592_2 in pairs(arg_589_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_592_2 then
							if arg_589_1.isInRecall_ then
								local var_592_11 = Mathf.Lerp(iter_592_2.color.r, arg_589_1.hightColor1.r, var_592_10)
								local var_592_12 = Mathf.Lerp(iter_592_2.color.g, arg_589_1.hightColor1.g, var_592_10)
								local var_592_13 = Mathf.Lerp(iter_592_2.color.b, arg_589_1.hightColor1.b, var_592_10)

								iter_592_2.color = Color.New(var_592_11, var_592_12, var_592_13)
							else
								local var_592_14 = Mathf.Lerp(iter_592_2.color.r, 1, var_592_10)

								iter_592_2.color = Color.New(var_592_14, var_592_14, var_592_14)
							end
						end
					end
				end
			end

			if arg_589_1.time_ >= var_592_8 + var_592_9 and arg_589_1.time_ < var_592_8 + var_592_9 + arg_592_0 and not isNil(var_592_7) and arg_589_1.var_.actorSpriteComps10093 then
				for iter_592_3, iter_592_4 in pairs(arg_589_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_592_4 then
						if arg_589_1.isInRecall_ then
							iter_592_4.color = arg_589_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_592_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_589_1.var_.actorSpriteComps10093 = nil
			end

			local var_592_15 = arg_589_1.actors_["10022"]
			local var_592_16 = 0

			if var_592_16 < arg_589_1.time_ and arg_589_1.time_ <= var_592_16 + arg_592_0 and not isNil(var_592_15) and arg_589_1.var_.actorSpriteComps10022 == nil then
				arg_589_1.var_.actorSpriteComps10022 = var_592_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_592_17 = 2

			if var_592_16 <= arg_589_1.time_ and arg_589_1.time_ < var_592_16 + var_592_17 and not isNil(var_592_15) then
				local var_592_18 = (arg_589_1.time_ - var_592_16) / var_592_17

				if arg_589_1.var_.actorSpriteComps10022 then
					for iter_592_5, iter_592_6 in pairs(arg_589_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_592_6 then
							if arg_589_1.isInRecall_ then
								local var_592_19 = Mathf.Lerp(iter_592_6.color.r, arg_589_1.hightColor2.r, var_592_18)
								local var_592_20 = Mathf.Lerp(iter_592_6.color.g, arg_589_1.hightColor2.g, var_592_18)
								local var_592_21 = Mathf.Lerp(iter_592_6.color.b, arg_589_1.hightColor2.b, var_592_18)

								iter_592_6.color = Color.New(var_592_19, var_592_20, var_592_21)
							else
								local var_592_22 = Mathf.Lerp(iter_592_6.color.r, 0.5, var_592_18)

								iter_592_6.color = Color.New(var_592_22, var_592_22, var_592_22)
							end
						end
					end
				end
			end

			if arg_589_1.time_ >= var_592_16 + var_592_17 and arg_589_1.time_ < var_592_16 + var_592_17 + arg_592_0 and not isNil(var_592_15) and arg_589_1.var_.actorSpriteComps10022 then
				for iter_592_7, iter_592_8 in pairs(arg_589_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_592_8 then
						if arg_589_1.isInRecall_ then
							iter_592_8.color = arg_589_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_592_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_589_1.var_.actorSpriteComps10022 = nil
			end

			local var_592_23 = 0
			local var_592_24 = 0.775

			if var_592_23 < arg_589_1.time_ and arg_589_1.time_ <= var_592_23 + arg_592_0 then
				arg_589_1.talkMaxDuration = 0
				arg_589_1.dialogCg_.alpha = 1

				arg_589_1.dialog_:SetActive(true)
				SetActive(arg_589_1.leftNameGo_, true)

				local var_592_25 = arg_589_1:FormatText(StoryNameCfg[28].name)

				arg_589_1.leftNameTxt_.text = var_592_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_589_1.leftNameTxt_.transform)

				arg_589_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_589_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_589_1:RecordName(arg_589_1.leftNameTxt_.text)
				SetActive(arg_589_1.iconTrs_.gameObject, false)
				arg_589_1.callingController_:SetSelectedState("normal")

				local var_592_26 = arg_589_1:GetWordFromCfg(413161144)
				local var_592_27 = arg_589_1:FormatText(var_592_26.content)

				arg_589_1.text_.text = var_592_27

				LuaForUtil.ClearLinePrefixSymbol(arg_589_1.text_)

				local var_592_28 = 31
				local var_592_29 = utf8.len(var_592_27)
				local var_592_30 = var_592_28 <= 0 and var_592_24 or var_592_24 * (var_592_29 / var_592_28)

				if var_592_30 > 0 and var_592_24 < var_592_30 then
					arg_589_1.talkMaxDuration = var_592_30

					if var_592_30 + var_592_23 > arg_589_1.duration_ then
						arg_589_1.duration_ = var_592_30 + var_592_23
					end
				end

				arg_589_1.text_.text = var_592_27
				arg_589_1.typewritter.percent = 0

				arg_589_1.typewritter:SetDirty()
				arg_589_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161144", "story_v_out_413161.awb") ~= 0 then
					local var_592_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161144", "story_v_out_413161.awb") / 1000

					if var_592_31 + var_592_23 > arg_589_1.duration_ then
						arg_589_1.duration_ = var_592_31 + var_592_23
					end

					if var_592_26.prefab_name ~= "" and arg_589_1.actors_[var_592_26.prefab_name] ~= nil then
						local var_592_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_589_1.actors_[var_592_26.prefab_name].transform, "story_v_out_413161", "413161144", "story_v_out_413161.awb")

						arg_589_1:RecordAudio("413161144", var_592_32)
						arg_589_1:RecordAudio("413161144", var_592_32)
					else
						arg_589_1:AudioAction("play", "voice", "story_v_out_413161", "413161144", "story_v_out_413161.awb")
					end

					arg_589_1:RecordHistoryTalkVoice("story_v_out_413161", "413161144", "story_v_out_413161.awb")
				end

				arg_589_1:RecordContent(arg_589_1.text_.text)
			end

			local var_592_33 = math.max(var_592_24, arg_589_1.talkMaxDuration)

			if var_592_23 <= arg_589_1.time_ and arg_589_1.time_ < var_592_23 + var_592_33 then
				arg_589_1.typewritter.percent = (arg_589_1.time_ - var_592_23) / var_592_33

				arg_589_1.typewritter:SetDirty()
			end

			if arg_589_1.time_ >= var_592_23 + var_592_33 and arg_589_1.time_ < var_592_23 + var_592_33 + arg_592_0 then
				arg_589_1.typewritter.percent = 1

				arg_589_1.typewritter:SetDirty()
				arg_589_1:ShowNextGo(true)
			end
		end
	end,
	Play413161145 = function(arg_593_0, arg_593_1)
		arg_593_1.time_ = 0
		arg_593_1.frameCnt_ = 0
		arg_593_1.state_ = "playing"
		arg_593_1.curTalkId_ = 413161145
		arg_593_1.duration_ = 3.2

		local var_593_0 = {
			zh = 2.7,
			ja = 3.2
		}
		local var_593_1 = manager.audio:GetLocalizationFlag()

		if var_593_0[var_593_1] ~= nil then
			arg_593_1.duration_ = var_593_0[var_593_1]
		end

		SetActive(arg_593_1.tipsGo_, false)

		function arg_593_1.onSingleLineFinish_()
			arg_593_1.onSingleLineUpdate_ = nil
			arg_593_1.onSingleLineFinish_ = nil
			arg_593_1.state_ = "waiting"
		end

		function arg_593_1.playNext_(arg_595_0)
			if arg_595_0 == 1 then
				arg_593_0:Play413161146(arg_593_1)
			end
		end

		function arg_593_1.onSingleLineUpdate_(arg_596_0)
			local var_596_0 = arg_593_1.actors_["10022"]
			local var_596_1 = 0

			if var_596_1 < arg_593_1.time_ and arg_593_1.time_ <= var_596_1 + arg_596_0 and not isNil(var_596_0) and arg_593_1.var_.actorSpriteComps10022 == nil then
				arg_593_1.var_.actorSpriteComps10022 = var_596_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_596_2 = 2

			if var_596_1 <= arg_593_1.time_ and arg_593_1.time_ < var_596_1 + var_596_2 and not isNil(var_596_0) then
				local var_596_3 = (arg_593_1.time_ - var_596_1) / var_596_2

				if arg_593_1.var_.actorSpriteComps10022 then
					for iter_596_0, iter_596_1 in pairs(arg_593_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_596_1 then
							if arg_593_1.isInRecall_ then
								local var_596_4 = Mathf.Lerp(iter_596_1.color.r, arg_593_1.hightColor1.r, var_596_3)
								local var_596_5 = Mathf.Lerp(iter_596_1.color.g, arg_593_1.hightColor1.g, var_596_3)
								local var_596_6 = Mathf.Lerp(iter_596_1.color.b, arg_593_1.hightColor1.b, var_596_3)

								iter_596_1.color = Color.New(var_596_4, var_596_5, var_596_6)
							else
								local var_596_7 = Mathf.Lerp(iter_596_1.color.r, 1, var_596_3)

								iter_596_1.color = Color.New(var_596_7, var_596_7, var_596_7)
							end
						end
					end
				end
			end

			if arg_593_1.time_ >= var_596_1 + var_596_2 and arg_593_1.time_ < var_596_1 + var_596_2 + arg_596_0 and not isNil(var_596_0) and arg_593_1.var_.actorSpriteComps10022 then
				for iter_596_2, iter_596_3 in pairs(arg_593_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_596_3 then
						if arg_593_1.isInRecall_ then
							iter_596_3.color = arg_593_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_596_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_593_1.var_.actorSpriteComps10022 = nil
			end

			local var_596_8 = arg_593_1.actors_["10093"]
			local var_596_9 = 0

			if var_596_9 < arg_593_1.time_ and arg_593_1.time_ <= var_596_9 + arg_596_0 and not isNil(var_596_8) and arg_593_1.var_.actorSpriteComps10093 == nil then
				arg_593_1.var_.actorSpriteComps10093 = var_596_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_596_10 = 2

			if var_596_9 <= arg_593_1.time_ and arg_593_1.time_ < var_596_9 + var_596_10 and not isNil(var_596_8) then
				local var_596_11 = (arg_593_1.time_ - var_596_9) / var_596_10

				if arg_593_1.var_.actorSpriteComps10093 then
					for iter_596_4, iter_596_5 in pairs(arg_593_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_596_5 then
							if arg_593_1.isInRecall_ then
								local var_596_12 = Mathf.Lerp(iter_596_5.color.r, arg_593_1.hightColor2.r, var_596_11)
								local var_596_13 = Mathf.Lerp(iter_596_5.color.g, arg_593_1.hightColor2.g, var_596_11)
								local var_596_14 = Mathf.Lerp(iter_596_5.color.b, arg_593_1.hightColor2.b, var_596_11)

								iter_596_5.color = Color.New(var_596_12, var_596_13, var_596_14)
							else
								local var_596_15 = Mathf.Lerp(iter_596_5.color.r, 0.5, var_596_11)

								iter_596_5.color = Color.New(var_596_15, var_596_15, var_596_15)
							end
						end
					end
				end
			end

			if arg_593_1.time_ >= var_596_9 + var_596_10 and arg_593_1.time_ < var_596_9 + var_596_10 + arg_596_0 and not isNil(var_596_8) and arg_593_1.var_.actorSpriteComps10093 then
				for iter_596_6, iter_596_7 in pairs(arg_593_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_596_7 then
						if arg_593_1.isInRecall_ then
							iter_596_7.color = arg_593_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_596_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_593_1.var_.actorSpriteComps10093 = nil
			end

			local var_596_16 = 0
			local var_596_17 = 0.375

			if var_596_16 < arg_593_1.time_ and arg_593_1.time_ <= var_596_16 + arg_596_0 then
				arg_593_1.talkMaxDuration = 0
				arg_593_1.dialogCg_.alpha = 1

				arg_593_1.dialog_:SetActive(true)
				SetActive(arg_593_1.leftNameGo_, true)

				local var_596_18 = arg_593_1:FormatText(StoryNameCfg[614].name)

				arg_593_1.leftNameTxt_.text = var_596_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_593_1.leftNameTxt_.transform)

				arg_593_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_593_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_593_1:RecordName(arg_593_1.leftNameTxt_.text)
				SetActive(arg_593_1.iconTrs_.gameObject, false)
				arg_593_1.callingController_:SetSelectedState("normal")

				local var_596_19 = arg_593_1:GetWordFromCfg(413161145)
				local var_596_20 = arg_593_1:FormatText(var_596_19.content)

				arg_593_1.text_.text = var_596_20

				LuaForUtil.ClearLinePrefixSymbol(arg_593_1.text_)

				local var_596_21 = 15
				local var_596_22 = utf8.len(var_596_20)
				local var_596_23 = var_596_21 <= 0 and var_596_17 or var_596_17 * (var_596_22 / var_596_21)

				if var_596_23 > 0 and var_596_17 < var_596_23 then
					arg_593_1.talkMaxDuration = var_596_23

					if var_596_23 + var_596_16 > arg_593_1.duration_ then
						arg_593_1.duration_ = var_596_23 + var_596_16
					end
				end

				arg_593_1.text_.text = var_596_20
				arg_593_1.typewritter.percent = 0

				arg_593_1.typewritter:SetDirty()
				arg_593_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161145", "story_v_out_413161.awb") ~= 0 then
					local var_596_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161145", "story_v_out_413161.awb") / 1000

					if var_596_24 + var_596_16 > arg_593_1.duration_ then
						arg_593_1.duration_ = var_596_24 + var_596_16
					end

					if var_596_19.prefab_name ~= "" and arg_593_1.actors_[var_596_19.prefab_name] ~= nil then
						local var_596_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_593_1.actors_[var_596_19.prefab_name].transform, "story_v_out_413161", "413161145", "story_v_out_413161.awb")

						arg_593_1:RecordAudio("413161145", var_596_25)
						arg_593_1:RecordAudio("413161145", var_596_25)
					else
						arg_593_1:AudioAction("play", "voice", "story_v_out_413161", "413161145", "story_v_out_413161.awb")
					end

					arg_593_1:RecordHistoryTalkVoice("story_v_out_413161", "413161145", "story_v_out_413161.awb")
				end

				arg_593_1:RecordContent(arg_593_1.text_.text)
			end

			local var_596_26 = math.max(var_596_17, arg_593_1.talkMaxDuration)

			if var_596_16 <= arg_593_1.time_ and arg_593_1.time_ < var_596_16 + var_596_26 then
				arg_593_1.typewritter.percent = (arg_593_1.time_ - var_596_16) / var_596_26

				arg_593_1.typewritter:SetDirty()
			end

			if arg_593_1.time_ >= var_596_16 + var_596_26 and arg_593_1.time_ < var_596_16 + var_596_26 + arg_596_0 then
				arg_593_1.typewritter.percent = 1

				arg_593_1.typewritter:SetDirty()
				arg_593_1:ShowNextGo(true)
			end
		end
	end,
	Play413161146 = function(arg_597_0, arg_597_1)
		arg_597_1.time_ = 0
		arg_597_1.frameCnt_ = 0
		arg_597_1.state_ = "playing"
		arg_597_1.curTalkId_ = 413161146
		arg_597_1.duration_ = 14.1

		local var_597_0 = {
			zh = 8.633,
			ja = 14.1
		}
		local var_597_1 = manager.audio:GetLocalizationFlag()

		if var_597_0[var_597_1] ~= nil then
			arg_597_1.duration_ = var_597_0[var_597_1]
		end

		SetActive(arg_597_1.tipsGo_, false)

		function arg_597_1.onSingleLineFinish_()
			arg_597_1.onSingleLineUpdate_ = nil
			arg_597_1.onSingleLineFinish_ = nil
			arg_597_1.state_ = "waiting"
		end

		function arg_597_1.playNext_(arg_599_0)
			if arg_599_0 == 1 then
				arg_597_0:Play413161147(arg_597_1)
			end
		end

		function arg_597_1.onSingleLineUpdate_(arg_600_0)
			local var_600_0 = arg_597_1.actors_["10022"]
			local var_600_1 = 0

			if var_600_1 < arg_597_1.time_ and arg_597_1.time_ <= var_600_1 + arg_600_0 and not isNil(var_600_0) and arg_597_1.var_.actorSpriteComps10022 == nil then
				arg_597_1.var_.actorSpriteComps10022 = var_600_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_600_2 = 2

			if var_600_1 <= arg_597_1.time_ and arg_597_1.time_ < var_600_1 + var_600_2 and not isNil(var_600_0) then
				local var_600_3 = (arg_597_1.time_ - var_600_1) / var_600_2

				if arg_597_1.var_.actorSpriteComps10022 then
					for iter_600_0, iter_600_1 in pairs(arg_597_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_600_1 then
							if arg_597_1.isInRecall_ then
								local var_600_4 = Mathf.Lerp(iter_600_1.color.r, arg_597_1.hightColor1.r, var_600_3)
								local var_600_5 = Mathf.Lerp(iter_600_1.color.g, arg_597_1.hightColor1.g, var_600_3)
								local var_600_6 = Mathf.Lerp(iter_600_1.color.b, arg_597_1.hightColor1.b, var_600_3)

								iter_600_1.color = Color.New(var_600_4, var_600_5, var_600_6)
							else
								local var_600_7 = Mathf.Lerp(iter_600_1.color.r, 1, var_600_3)

								iter_600_1.color = Color.New(var_600_7, var_600_7, var_600_7)
							end
						end
					end
				end
			end

			if arg_597_1.time_ >= var_600_1 + var_600_2 and arg_597_1.time_ < var_600_1 + var_600_2 + arg_600_0 and not isNil(var_600_0) and arg_597_1.var_.actorSpriteComps10022 then
				for iter_600_2, iter_600_3 in pairs(arg_597_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_600_3 then
						if arg_597_1.isInRecall_ then
							iter_600_3.color = arg_597_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_600_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_597_1.var_.actorSpriteComps10022 = nil
			end

			local var_600_8 = 0
			local var_600_9 = 0.9

			if var_600_8 < arg_597_1.time_ and arg_597_1.time_ <= var_600_8 + arg_600_0 then
				arg_597_1.talkMaxDuration = 0
				arg_597_1.dialogCg_.alpha = 1

				arg_597_1.dialog_:SetActive(true)
				SetActive(arg_597_1.leftNameGo_, true)

				local var_600_10 = arg_597_1:FormatText(StoryNameCfg[614].name)

				arg_597_1.leftNameTxt_.text = var_600_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_597_1.leftNameTxt_.transform)

				arg_597_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_597_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_597_1:RecordName(arg_597_1.leftNameTxt_.text)
				SetActive(arg_597_1.iconTrs_.gameObject, false)
				arg_597_1.callingController_:SetSelectedState("normal")

				local var_600_11 = arg_597_1:GetWordFromCfg(413161146)
				local var_600_12 = arg_597_1:FormatText(var_600_11.content)

				arg_597_1.text_.text = var_600_12

				LuaForUtil.ClearLinePrefixSymbol(arg_597_1.text_)

				local var_600_13 = 36
				local var_600_14 = utf8.len(var_600_12)
				local var_600_15 = var_600_13 <= 0 and var_600_9 or var_600_9 * (var_600_14 / var_600_13)

				if var_600_15 > 0 and var_600_9 < var_600_15 then
					arg_597_1.talkMaxDuration = var_600_15

					if var_600_15 + var_600_8 > arg_597_1.duration_ then
						arg_597_1.duration_ = var_600_15 + var_600_8
					end
				end

				arg_597_1.text_.text = var_600_12
				arg_597_1.typewritter.percent = 0

				arg_597_1.typewritter:SetDirty()
				arg_597_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161146", "story_v_out_413161.awb") ~= 0 then
					local var_600_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161146", "story_v_out_413161.awb") / 1000

					if var_600_16 + var_600_8 > arg_597_1.duration_ then
						arg_597_1.duration_ = var_600_16 + var_600_8
					end

					if var_600_11.prefab_name ~= "" and arg_597_1.actors_[var_600_11.prefab_name] ~= nil then
						local var_600_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_597_1.actors_[var_600_11.prefab_name].transform, "story_v_out_413161", "413161146", "story_v_out_413161.awb")

						arg_597_1:RecordAudio("413161146", var_600_17)
						arg_597_1:RecordAudio("413161146", var_600_17)
					else
						arg_597_1:AudioAction("play", "voice", "story_v_out_413161", "413161146", "story_v_out_413161.awb")
					end

					arg_597_1:RecordHistoryTalkVoice("story_v_out_413161", "413161146", "story_v_out_413161.awb")
				end

				arg_597_1:RecordContent(arg_597_1.text_.text)
			end

			local var_600_18 = math.max(var_600_9, arg_597_1.talkMaxDuration)

			if var_600_8 <= arg_597_1.time_ and arg_597_1.time_ < var_600_8 + var_600_18 then
				arg_597_1.typewritter.percent = (arg_597_1.time_ - var_600_8) / var_600_18

				arg_597_1.typewritter:SetDirty()
			end

			if arg_597_1.time_ >= var_600_8 + var_600_18 and arg_597_1.time_ < var_600_8 + var_600_18 + arg_600_0 then
				arg_597_1.typewritter.percent = 1

				arg_597_1.typewritter:SetDirty()
				arg_597_1:ShowNextGo(true)
			end
		end
	end,
	Play413161147 = function(arg_601_0, arg_601_1)
		arg_601_1.time_ = 0
		arg_601_1.frameCnt_ = 0
		arg_601_1.state_ = "playing"
		arg_601_1.curTalkId_ = 413161147
		arg_601_1.duration_ = 5.93

		local var_601_0 = {
			zh = 3.9,
			ja = 5.933
		}
		local var_601_1 = manager.audio:GetLocalizationFlag()

		if var_601_0[var_601_1] ~= nil then
			arg_601_1.duration_ = var_601_0[var_601_1]
		end

		SetActive(arg_601_1.tipsGo_, false)

		function arg_601_1.onSingleLineFinish_()
			arg_601_1.onSingleLineUpdate_ = nil
			arg_601_1.onSingleLineFinish_ = nil
			arg_601_1.state_ = "waiting"
		end

		function arg_601_1.playNext_(arg_603_0)
			if arg_603_0 == 1 then
				arg_601_0:Play413161148(arg_601_1)
			end
		end

		function arg_601_1.onSingleLineUpdate_(arg_604_0)
			local var_604_0 = arg_601_1.actors_["10093"].transform
			local var_604_1 = 0

			if var_604_1 < arg_601_1.time_ and arg_601_1.time_ <= var_604_1 + arg_604_0 then
				arg_601_1.var_.moveOldPos10093 = var_604_0.localPosition
				var_604_0.localScale = Vector3.New(1, 1, 1)

				arg_601_1:CheckSpriteTmpPos("10093", 4)

				local var_604_2 = var_604_0.childCount

				for iter_604_0 = 0, var_604_2 - 1 do
					local var_604_3 = var_604_0:GetChild(iter_604_0)

					if var_604_3.name == "split_1" or not string.find(var_604_3.name, "split") then
						var_604_3.gameObject:SetActive(true)
					else
						var_604_3.gameObject:SetActive(false)
					end
				end
			end

			local var_604_4 = 0.001

			if var_604_1 <= arg_601_1.time_ and arg_601_1.time_ < var_604_1 + var_604_4 then
				local var_604_5 = (arg_601_1.time_ - var_604_1) / var_604_4
				local var_604_6 = Vector3.New(390, -345, -245)

				var_604_0.localPosition = Vector3.Lerp(arg_601_1.var_.moveOldPos10093, var_604_6, var_604_5)
			end

			if arg_601_1.time_ >= var_604_1 + var_604_4 and arg_601_1.time_ < var_604_1 + var_604_4 + arg_604_0 then
				var_604_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_604_7 = arg_601_1.actors_["10093"]
			local var_604_8 = 0

			if var_604_8 < arg_601_1.time_ and arg_601_1.time_ <= var_604_8 + arg_604_0 and not isNil(var_604_7) and arg_601_1.var_.actorSpriteComps10093 == nil then
				arg_601_1.var_.actorSpriteComps10093 = var_604_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_604_9 = 2

			if var_604_8 <= arg_601_1.time_ and arg_601_1.time_ < var_604_8 + var_604_9 and not isNil(var_604_7) then
				local var_604_10 = (arg_601_1.time_ - var_604_8) / var_604_9

				if arg_601_1.var_.actorSpriteComps10093 then
					for iter_604_1, iter_604_2 in pairs(arg_601_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_604_2 then
							if arg_601_1.isInRecall_ then
								local var_604_11 = Mathf.Lerp(iter_604_2.color.r, arg_601_1.hightColor1.r, var_604_10)
								local var_604_12 = Mathf.Lerp(iter_604_2.color.g, arg_601_1.hightColor1.g, var_604_10)
								local var_604_13 = Mathf.Lerp(iter_604_2.color.b, arg_601_1.hightColor1.b, var_604_10)

								iter_604_2.color = Color.New(var_604_11, var_604_12, var_604_13)
							else
								local var_604_14 = Mathf.Lerp(iter_604_2.color.r, 1, var_604_10)

								iter_604_2.color = Color.New(var_604_14, var_604_14, var_604_14)
							end
						end
					end
				end
			end

			if arg_601_1.time_ >= var_604_8 + var_604_9 and arg_601_1.time_ < var_604_8 + var_604_9 + arg_604_0 and not isNil(var_604_7) and arg_601_1.var_.actorSpriteComps10093 then
				for iter_604_3, iter_604_4 in pairs(arg_601_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_604_4 then
						if arg_601_1.isInRecall_ then
							iter_604_4.color = arg_601_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_604_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_601_1.var_.actorSpriteComps10093 = nil
			end

			local var_604_15 = arg_601_1.actors_["10022"]
			local var_604_16 = 0

			if var_604_16 < arg_601_1.time_ and arg_601_1.time_ <= var_604_16 + arg_604_0 and not isNil(var_604_15) and arg_601_1.var_.actorSpriteComps10022 == nil then
				arg_601_1.var_.actorSpriteComps10022 = var_604_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_604_17 = 2

			if var_604_16 <= arg_601_1.time_ and arg_601_1.time_ < var_604_16 + var_604_17 and not isNil(var_604_15) then
				local var_604_18 = (arg_601_1.time_ - var_604_16) / var_604_17

				if arg_601_1.var_.actorSpriteComps10022 then
					for iter_604_5, iter_604_6 in pairs(arg_601_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_604_6 then
							if arg_601_1.isInRecall_ then
								local var_604_19 = Mathf.Lerp(iter_604_6.color.r, arg_601_1.hightColor2.r, var_604_18)
								local var_604_20 = Mathf.Lerp(iter_604_6.color.g, arg_601_1.hightColor2.g, var_604_18)
								local var_604_21 = Mathf.Lerp(iter_604_6.color.b, arg_601_1.hightColor2.b, var_604_18)

								iter_604_6.color = Color.New(var_604_19, var_604_20, var_604_21)
							else
								local var_604_22 = Mathf.Lerp(iter_604_6.color.r, 0.5, var_604_18)

								iter_604_6.color = Color.New(var_604_22, var_604_22, var_604_22)
							end
						end
					end
				end
			end

			if arg_601_1.time_ >= var_604_16 + var_604_17 and arg_601_1.time_ < var_604_16 + var_604_17 + arg_604_0 and not isNil(var_604_15) and arg_601_1.var_.actorSpriteComps10022 then
				for iter_604_7, iter_604_8 in pairs(arg_601_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_604_8 then
						if arg_601_1.isInRecall_ then
							iter_604_8.color = arg_601_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_604_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_601_1.var_.actorSpriteComps10022 = nil
			end

			local var_604_23 = 0
			local var_604_24 = 0.425

			if var_604_23 < arg_601_1.time_ and arg_601_1.time_ <= var_604_23 + arg_604_0 then
				arg_601_1.talkMaxDuration = 0
				arg_601_1.dialogCg_.alpha = 1

				arg_601_1.dialog_:SetActive(true)
				SetActive(arg_601_1.leftNameGo_, true)

				local var_604_25 = arg_601_1:FormatText(StoryNameCfg[28].name)

				arg_601_1.leftNameTxt_.text = var_604_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_601_1.leftNameTxt_.transform)

				arg_601_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_601_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_601_1:RecordName(arg_601_1.leftNameTxt_.text)
				SetActive(arg_601_1.iconTrs_.gameObject, false)
				arg_601_1.callingController_:SetSelectedState("normal")

				local var_604_26 = arg_601_1:GetWordFromCfg(413161147)
				local var_604_27 = arg_601_1:FormatText(var_604_26.content)

				arg_601_1.text_.text = var_604_27

				LuaForUtil.ClearLinePrefixSymbol(arg_601_1.text_)

				local var_604_28 = 17
				local var_604_29 = utf8.len(var_604_27)
				local var_604_30 = var_604_28 <= 0 and var_604_24 or var_604_24 * (var_604_29 / var_604_28)

				if var_604_30 > 0 and var_604_24 < var_604_30 then
					arg_601_1.talkMaxDuration = var_604_30

					if var_604_30 + var_604_23 > arg_601_1.duration_ then
						arg_601_1.duration_ = var_604_30 + var_604_23
					end
				end

				arg_601_1.text_.text = var_604_27
				arg_601_1.typewritter.percent = 0

				arg_601_1.typewritter:SetDirty()
				arg_601_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161147", "story_v_out_413161.awb") ~= 0 then
					local var_604_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161147", "story_v_out_413161.awb") / 1000

					if var_604_31 + var_604_23 > arg_601_1.duration_ then
						arg_601_1.duration_ = var_604_31 + var_604_23
					end

					if var_604_26.prefab_name ~= "" and arg_601_1.actors_[var_604_26.prefab_name] ~= nil then
						local var_604_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_601_1.actors_[var_604_26.prefab_name].transform, "story_v_out_413161", "413161147", "story_v_out_413161.awb")

						arg_601_1:RecordAudio("413161147", var_604_32)
						arg_601_1:RecordAudio("413161147", var_604_32)
					else
						arg_601_1:AudioAction("play", "voice", "story_v_out_413161", "413161147", "story_v_out_413161.awb")
					end

					arg_601_1:RecordHistoryTalkVoice("story_v_out_413161", "413161147", "story_v_out_413161.awb")
				end

				arg_601_1:RecordContent(arg_601_1.text_.text)
			end

			local var_604_33 = math.max(var_604_24, arg_601_1.talkMaxDuration)

			if var_604_23 <= arg_601_1.time_ and arg_601_1.time_ < var_604_23 + var_604_33 then
				arg_601_1.typewritter.percent = (arg_601_1.time_ - var_604_23) / var_604_33

				arg_601_1.typewritter:SetDirty()
			end

			if arg_601_1.time_ >= var_604_23 + var_604_33 and arg_601_1.time_ < var_604_23 + var_604_33 + arg_604_0 then
				arg_601_1.typewritter.percent = 1

				arg_601_1.typewritter:SetDirty()
				arg_601_1:ShowNextGo(true)
			end
		end
	end,
	Play413161148 = function(arg_605_0, arg_605_1)
		arg_605_1.time_ = 0
		arg_605_1.frameCnt_ = 0
		arg_605_1.state_ = "playing"
		arg_605_1.curTalkId_ = 413161148
		arg_605_1.duration_ = 6.73

		local var_605_0 = {
			zh = 4.2,
			ja = 6.733
		}
		local var_605_1 = manager.audio:GetLocalizationFlag()

		if var_605_0[var_605_1] ~= nil then
			arg_605_1.duration_ = var_605_0[var_605_1]
		end

		SetActive(arg_605_1.tipsGo_, false)

		function arg_605_1.onSingleLineFinish_()
			arg_605_1.onSingleLineUpdate_ = nil
			arg_605_1.onSingleLineFinish_ = nil
			arg_605_1.state_ = "waiting"
		end

		function arg_605_1.playNext_(arg_607_0)
			if arg_607_0 == 1 then
				arg_605_0:Play413161149(arg_605_1)
			end
		end

		function arg_605_1.onSingleLineUpdate_(arg_608_0)
			local var_608_0 = arg_605_1.actors_["10022"].transform
			local var_608_1 = 0

			if var_608_1 < arg_605_1.time_ and arg_605_1.time_ <= var_608_1 + arg_608_0 then
				arg_605_1.var_.moveOldPos10022 = var_608_0.localPosition
				var_608_0.localScale = Vector3.New(1, 1, 1)

				arg_605_1:CheckSpriteTmpPos("10022", 2)

				local var_608_2 = var_608_0.childCount

				for iter_608_0 = 0, var_608_2 - 1 do
					local var_608_3 = var_608_0:GetChild(iter_608_0)

					if var_608_3.name == "" or not string.find(var_608_3.name, "split") then
						var_608_3.gameObject:SetActive(true)
					else
						var_608_3.gameObject:SetActive(false)
					end
				end
			end

			local var_608_4 = 0.001

			if var_608_1 <= arg_605_1.time_ and arg_605_1.time_ < var_608_1 + var_608_4 then
				local var_608_5 = (arg_605_1.time_ - var_608_1) / var_608_4
				local var_608_6 = Vector3.New(-390, -315, -320)

				var_608_0.localPosition = Vector3.Lerp(arg_605_1.var_.moveOldPos10022, var_608_6, var_608_5)
			end

			if arg_605_1.time_ >= var_608_1 + var_608_4 and arg_605_1.time_ < var_608_1 + var_608_4 + arg_608_0 then
				var_608_0.localPosition = Vector3.New(-390, -315, -320)
			end

			local var_608_7 = arg_605_1.actors_["10022"]
			local var_608_8 = 0

			if var_608_8 < arg_605_1.time_ and arg_605_1.time_ <= var_608_8 + arg_608_0 and not isNil(var_608_7) and arg_605_1.var_.actorSpriteComps10022 == nil then
				arg_605_1.var_.actorSpriteComps10022 = var_608_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_608_9 = 2

			if var_608_8 <= arg_605_1.time_ and arg_605_1.time_ < var_608_8 + var_608_9 and not isNil(var_608_7) then
				local var_608_10 = (arg_605_1.time_ - var_608_8) / var_608_9

				if arg_605_1.var_.actorSpriteComps10022 then
					for iter_608_1, iter_608_2 in pairs(arg_605_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_608_2 then
							if arg_605_1.isInRecall_ then
								local var_608_11 = Mathf.Lerp(iter_608_2.color.r, arg_605_1.hightColor1.r, var_608_10)
								local var_608_12 = Mathf.Lerp(iter_608_2.color.g, arg_605_1.hightColor1.g, var_608_10)
								local var_608_13 = Mathf.Lerp(iter_608_2.color.b, arg_605_1.hightColor1.b, var_608_10)

								iter_608_2.color = Color.New(var_608_11, var_608_12, var_608_13)
							else
								local var_608_14 = Mathf.Lerp(iter_608_2.color.r, 1, var_608_10)

								iter_608_2.color = Color.New(var_608_14, var_608_14, var_608_14)
							end
						end
					end
				end
			end

			if arg_605_1.time_ >= var_608_8 + var_608_9 and arg_605_1.time_ < var_608_8 + var_608_9 + arg_608_0 and not isNil(var_608_7) and arg_605_1.var_.actorSpriteComps10022 then
				for iter_608_3, iter_608_4 in pairs(arg_605_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_608_4 then
						if arg_605_1.isInRecall_ then
							iter_608_4.color = arg_605_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_608_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_605_1.var_.actorSpriteComps10022 = nil
			end

			local var_608_15 = arg_605_1.actors_["10093"]
			local var_608_16 = 0

			if var_608_16 < arg_605_1.time_ and arg_605_1.time_ <= var_608_16 + arg_608_0 and not isNil(var_608_15) and arg_605_1.var_.actorSpriteComps10093 == nil then
				arg_605_1.var_.actorSpriteComps10093 = var_608_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_608_17 = 2

			if var_608_16 <= arg_605_1.time_ and arg_605_1.time_ < var_608_16 + var_608_17 and not isNil(var_608_15) then
				local var_608_18 = (arg_605_1.time_ - var_608_16) / var_608_17

				if arg_605_1.var_.actorSpriteComps10093 then
					for iter_608_5, iter_608_6 in pairs(arg_605_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_608_6 then
							if arg_605_1.isInRecall_ then
								local var_608_19 = Mathf.Lerp(iter_608_6.color.r, arg_605_1.hightColor2.r, var_608_18)
								local var_608_20 = Mathf.Lerp(iter_608_6.color.g, arg_605_1.hightColor2.g, var_608_18)
								local var_608_21 = Mathf.Lerp(iter_608_6.color.b, arg_605_1.hightColor2.b, var_608_18)

								iter_608_6.color = Color.New(var_608_19, var_608_20, var_608_21)
							else
								local var_608_22 = Mathf.Lerp(iter_608_6.color.r, 0.5, var_608_18)

								iter_608_6.color = Color.New(var_608_22, var_608_22, var_608_22)
							end
						end
					end
				end
			end

			if arg_605_1.time_ >= var_608_16 + var_608_17 and arg_605_1.time_ < var_608_16 + var_608_17 + arg_608_0 and not isNil(var_608_15) and arg_605_1.var_.actorSpriteComps10093 then
				for iter_608_7, iter_608_8 in pairs(arg_605_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_608_8 then
						if arg_605_1.isInRecall_ then
							iter_608_8.color = arg_605_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_608_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_605_1.var_.actorSpriteComps10093 = nil
			end

			local var_608_23 = 0
			local var_608_24 = 0.525

			if var_608_23 < arg_605_1.time_ and arg_605_1.time_ <= var_608_23 + arg_608_0 then
				arg_605_1.talkMaxDuration = 0
				arg_605_1.dialogCg_.alpha = 1

				arg_605_1.dialog_:SetActive(true)
				SetActive(arg_605_1.leftNameGo_, true)

				local var_608_25 = arg_605_1:FormatText(StoryNameCfg[614].name)

				arg_605_1.leftNameTxt_.text = var_608_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_605_1.leftNameTxt_.transform)

				arg_605_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_605_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_605_1:RecordName(arg_605_1.leftNameTxt_.text)
				SetActive(arg_605_1.iconTrs_.gameObject, false)
				arg_605_1.callingController_:SetSelectedState("normal")

				local var_608_26 = arg_605_1:GetWordFromCfg(413161148)
				local var_608_27 = arg_605_1:FormatText(var_608_26.content)

				arg_605_1.text_.text = var_608_27

				LuaForUtil.ClearLinePrefixSymbol(arg_605_1.text_)

				local var_608_28 = 21
				local var_608_29 = utf8.len(var_608_27)
				local var_608_30 = var_608_28 <= 0 and var_608_24 or var_608_24 * (var_608_29 / var_608_28)

				if var_608_30 > 0 and var_608_24 < var_608_30 then
					arg_605_1.talkMaxDuration = var_608_30

					if var_608_30 + var_608_23 > arg_605_1.duration_ then
						arg_605_1.duration_ = var_608_30 + var_608_23
					end
				end

				arg_605_1.text_.text = var_608_27
				arg_605_1.typewritter.percent = 0

				arg_605_1.typewritter:SetDirty()
				arg_605_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161148", "story_v_out_413161.awb") ~= 0 then
					local var_608_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161148", "story_v_out_413161.awb") / 1000

					if var_608_31 + var_608_23 > arg_605_1.duration_ then
						arg_605_1.duration_ = var_608_31 + var_608_23
					end

					if var_608_26.prefab_name ~= "" and arg_605_1.actors_[var_608_26.prefab_name] ~= nil then
						local var_608_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_605_1.actors_[var_608_26.prefab_name].transform, "story_v_out_413161", "413161148", "story_v_out_413161.awb")

						arg_605_1:RecordAudio("413161148", var_608_32)
						arg_605_1:RecordAudio("413161148", var_608_32)
					else
						arg_605_1:AudioAction("play", "voice", "story_v_out_413161", "413161148", "story_v_out_413161.awb")
					end

					arg_605_1:RecordHistoryTalkVoice("story_v_out_413161", "413161148", "story_v_out_413161.awb")
				end

				arg_605_1:RecordContent(arg_605_1.text_.text)
			end

			local var_608_33 = math.max(var_608_24, arg_605_1.talkMaxDuration)

			if var_608_23 <= arg_605_1.time_ and arg_605_1.time_ < var_608_23 + var_608_33 then
				arg_605_1.typewritter.percent = (arg_605_1.time_ - var_608_23) / var_608_33

				arg_605_1.typewritter:SetDirty()
			end

			if arg_605_1.time_ >= var_608_23 + var_608_33 and arg_605_1.time_ < var_608_23 + var_608_33 + arg_608_0 then
				arg_605_1.typewritter.percent = 1

				arg_605_1.typewritter:SetDirty()
				arg_605_1:ShowNextGo(true)
			end
		end
	end,
	Play413161149 = function(arg_609_0, arg_609_1)
		arg_609_1.time_ = 0
		arg_609_1.frameCnt_ = 0
		arg_609_1.state_ = "playing"
		arg_609_1.curTalkId_ = 413161149
		arg_609_1.duration_ = 8.6

		local var_609_0 = {
			zh = 4.5,
			ja = 8.6
		}
		local var_609_1 = manager.audio:GetLocalizationFlag()

		if var_609_0[var_609_1] ~= nil then
			arg_609_1.duration_ = var_609_0[var_609_1]
		end

		SetActive(arg_609_1.tipsGo_, false)

		function arg_609_1.onSingleLineFinish_()
			arg_609_1.onSingleLineUpdate_ = nil
			arg_609_1.onSingleLineFinish_ = nil
			arg_609_1.state_ = "waiting"
		end

		function arg_609_1.playNext_(arg_611_0)
			if arg_611_0 == 1 then
				arg_609_0:Play413161150(arg_609_1)
			end
		end

		function arg_609_1.onSingleLineUpdate_(arg_612_0)
			local var_612_0 = arg_609_1.actors_["10093"].transform
			local var_612_1 = 0

			if var_612_1 < arg_609_1.time_ and arg_609_1.time_ <= var_612_1 + arg_612_0 then
				arg_609_1.var_.moveOldPos10093 = var_612_0.localPosition
				var_612_0.localScale = Vector3.New(1, 1, 1)

				arg_609_1:CheckSpriteTmpPos("10093", 4)

				local var_612_2 = var_612_0.childCount

				for iter_612_0 = 0, var_612_2 - 1 do
					local var_612_3 = var_612_0:GetChild(iter_612_0)

					if var_612_3.name == "split_2" or not string.find(var_612_3.name, "split") then
						var_612_3.gameObject:SetActive(true)
					else
						var_612_3.gameObject:SetActive(false)
					end
				end
			end

			local var_612_4 = 0.001

			if var_612_1 <= arg_609_1.time_ and arg_609_1.time_ < var_612_1 + var_612_4 then
				local var_612_5 = (arg_609_1.time_ - var_612_1) / var_612_4
				local var_612_6 = Vector3.New(390, -345, -245)

				var_612_0.localPosition = Vector3.Lerp(arg_609_1.var_.moveOldPos10093, var_612_6, var_612_5)
			end

			if arg_609_1.time_ >= var_612_1 + var_612_4 and arg_609_1.time_ < var_612_1 + var_612_4 + arg_612_0 then
				var_612_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_612_7 = arg_609_1.actors_["10022"].transform
			local var_612_8 = 0

			if var_612_8 < arg_609_1.time_ and arg_609_1.time_ <= var_612_8 + arg_612_0 then
				arg_609_1.var_.moveOldPos10022 = var_612_7.localPosition
				var_612_7.localScale = Vector3.New(1, 1, 1)

				arg_609_1:CheckSpriteTmpPos("10022", 2)

				local var_612_9 = var_612_7.childCount

				for iter_612_1 = 0, var_612_9 - 1 do
					local var_612_10 = var_612_7:GetChild(iter_612_1)

					if var_612_10.name == "" or not string.find(var_612_10.name, "split") then
						var_612_10.gameObject:SetActive(true)
					else
						var_612_10.gameObject:SetActive(false)
					end
				end
			end

			local var_612_11 = 0.001

			if var_612_8 <= arg_609_1.time_ and arg_609_1.time_ < var_612_8 + var_612_11 then
				local var_612_12 = (arg_609_1.time_ - var_612_8) / var_612_11
				local var_612_13 = Vector3.New(-390, -315, -320)

				var_612_7.localPosition = Vector3.Lerp(arg_609_1.var_.moveOldPos10022, var_612_13, var_612_12)
			end

			if arg_609_1.time_ >= var_612_8 + var_612_11 and arg_609_1.time_ < var_612_8 + var_612_11 + arg_612_0 then
				var_612_7.localPosition = Vector3.New(-390, -315, -320)
			end

			local var_612_14 = arg_609_1.actors_["10093"]
			local var_612_15 = 0

			if var_612_15 < arg_609_1.time_ and arg_609_1.time_ <= var_612_15 + arg_612_0 and not isNil(var_612_14) and arg_609_1.var_.actorSpriteComps10093 == nil then
				arg_609_1.var_.actorSpriteComps10093 = var_612_14:GetComponentsInChildren(typeof(Image), true)
			end

			local var_612_16 = 2

			if var_612_15 <= arg_609_1.time_ and arg_609_1.time_ < var_612_15 + var_612_16 and not isNil(var_612_14) then
				local var_612_17 = (arg_609_1.time_ - var_612_15) / var_612_16

				if arg_609_1.var_.actorSpriteComps10093 then
					for iter_612_2, iter_612_3 in pairs(arg_609_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_612_3 then
							if arg_609_1.isInRecall_ then
								local var_612_18 = Mathf.Lerp(iter_612_3.color.r, arg_609_1.hightColor1.r, var_612_17)
								local var_612_19 = Mathf.Lerp(iter_612_3.color.g, arg_609_1.hightColor1.g, var_612_17)
								local var_612_20 = Mathf.Lerp(iter_612_3.color.b, arg_609_1.hightColor1.b, var_612_17)

								iter_612_3.color = Color.New(var_612_18, var_612_19, var_612_20)
							else
								local var_612_21 = Mathf.Lerp(iter_612_3.color.r, 1, var_612_17)

								iter_612_3.color = Color.New(var_612_21, var_612_21, var_612_21)
							end
						end
					end
				end
			end

			if arg_609_1.time_ >= var_612_15 + var_612_16 and arg_609_1.time_ < var_612_15 + var_612_16 + arg_612_0 and not isNil(var_612_14) and arg_609_1.var_.actorSpriteComps10093 then
				for iter_612_4, iter_612_5 in pairs(arg_609_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_612_5 then
						if arg_609_1.isInRecall_ then
							iter_612_5.color = arg_609_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_612_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_609_1.var_.actorSpriteComps10093 = nil
			end

			local var_612_22 = arg_609_1.actors_["10022"]
			local var_612_23 = 0

			if var_612_23 < arg_609_1.time_ and arg_609_1.time_ <= var_612_23 + arg_612_0 and not isNil(var_612_22) and arg_609_1.var_.actorSpriteComps10022 == nil then
				arg_609_1.var_.actorSpriteComps10022 = var_612_22:GetComponentsInChildren(typeof(Image), true)
			end

			local var_612_24 = 2

			if var_612_23 <= arg_609_1.time_ and arg_609_1.time_ < var_612_23 + var_612_24 and not isNil(var_612_22) then
				local var_612_25 = (arg_609_1.time_ - var_612_23) / var_612_24

				if arg_609_1.var_.actorSpriteComps10022 then
					for iter_612_6, iter_612_7 in pairs(arg_609_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_612_7 then
							if arg_609_1.isInRecall_ then
								local var_612_26 = Mathf.Lerp(iter_612_7.color.r, arg_609_1.hightColor2.r, var_612_25)
								local var_612_27 = Mathf.Lerp(iter_612_7.color.g, arg_609_1.hightColor2.g, var_612_25)
								local var_612_28 = Mathf.Lerp(iter_612_7.color.b, arg_609_1.hightColor2.b, var_612_25)

								iter_612_7.color = Color.New(var_612_26, var_612_27, var_612_28)
							else
								local var_612_29 = Mathf.Lerp(iter_612_7.color.r, 0.5, var_612_25)

								iter_612_7.color = Color.New(var_612_29, var_612_29, var_612_29)
							end
						end
					end
				end
			end

			if arg_609_1.time_ >= var_612_23 + var_612_24 and arg_609_1.time_ < var_612_23 + var_612_24 + arg_612_0 and not isNil(var_612_22) and arg_609_1.var_.actorSpriteComps10022 then
				for iter_612_8, iter_612_9 in pairs(arg_609_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_612_9 then
						if arg_609_1.isInRecall_ then
							iter_612_9.color = arg_609_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_612_9.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_609_1.var_.actorSpriteComps10022 = nil
			end

			local var_612_30 = 0
			local var_612_31 = 0.675

			if var_612_30 < arg_609_1.time_ and arg_609_1.time_ <= var_612_30 + arg_612_0 then
				arg_609_1.talkMaxDuration = 0
				arg_609_1.dialogCg_.alpha = 1

				arg_609_1.dialog_:SetActive(true)
				SetActive(arg_609_1.leftNameGo_, true)

				local var_612_32 = arg_609_1:FormatText(StoryNameCfg[28].name)

				arg_609_1.leftNameTxt_.text = var_612_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_609_1.leftNameTxt_.transform)

				arg_609_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_609_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_609_1:RecordName(arg_609_1.leftNameTxt_.text)
				SetActive(arg_609_1.iconTrs_.gameObject, false)
				arg_609_1.callingController_:SetSelectedState("normal")

				local var_612_33 = arg_609_1:GetWordFromCfg(413161149)
				local var_612_34 = arg_609_1:FormatText(var_612_33.content)

				arg_609_1.text_.text = var_612_34

				LuaForUtil.ClearLinePrefixSymbol(arg_609_1.text_)

				local var_612_35 = 27
				local var_612_36 = utf8.len(var_612_34)
				local var_612_37 = var_612_35 <= 0 and var_612_31 or var_612_31 * (var_612_36 / var_612_35)

				if var_612_37 > 0 and var_612_31 < var_612_37 then
					arg_609_1.talkMaxDuration = var_612_37

					if var_612_37 + var_612_30 > arg_609_1.duration_ then
						arg_609_1.duration_ = var_612_37 + var_612_30
					end
				end

				arg_609_1.text_.text = var_612_34
				arg_609_1.typewritter.percent = 0

				arg_609_1.typewritter:SetDirty()
				arg_609_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161149", "story_v_out_413161.awb") ~= 0 then
					local var_612_38 = manager.audio:GetVoiceLength("story_v_out_413161", "413161149", "story_v_out_413161.awb") / 1000

					if var_612_38 + var_612_30 > arg_609_1.duration_ then
						arg_609_1.duration_ = var_612_38 + var_612_30
					end

					if var_612_33.prefab_name ~= "" and arg_609_1.actors_[var_612_33.prefab_name] ~= nil then
						local var_612_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_609_1.actors_[var_612_33.prefab_name].transform, "story_v_out_413161", "413161149", "story_v_out_413161.awb")

						arg_609_1:RecordAudio("413161149", var_612_39)
						arg_609_1:RecordAudio("413161149", var_612_39)
					else
						arg_609_1:AudioAction("play", "voice", "story_v_out_413161", "413161149", "story_v_out_413161.awb")
					end

					arg_609_1:RecordHistoryTalkVoice("story_v_out_413161", "413161149", "story_v_out_413161.awb")
				end

				arg_609_1:RecordContent(arg_609_1.text_.text)
			end

			local var_612_40 = math.max(var_612_31, arg_609_1.talkMaxDuration)

			if var_612_30 <= arg_609_1.time_ and arg_609_1.time_ < var_612_30 + var_612_40 then
				arg_609_1.typewritter.percent = (arg_609_1.time_ - var_612_30) / var_612_40

				arg_609_1.typewritter:SetDirty()
			end

			if arg_609_1.time_ >= var_612_30 + var_612_40 and arg_609_1.time_ < var_612_30 + var_612_40 + arg_612_0 then
				arg_609_1.typewritter.percent = 1

				arg_609_1.typewritter:SetDirty()
				arg_609_1:ShowNextGo(true)
			end
		end
	end,
	Play413161150 = function(arg_613_0, arg_613_1)
		arg_613_1.time_ = 0
		arg_613_1.frameCnt_ = 0
		arg_613_1.state_ = "playing"
		arg_613_1.curTalkId_ = 413161150
		arg_613_1.duration_ = 7.53

		local var_613_0 = {
			zh = 5.566,
			ja = 7.533
		}
		local var_613_1 = manager.audio:GetLocalizationFlag()

		if var_613_0[var_613_1] ~= nil then
			arg_613_1.duration_ = var_613_0[var_613_1]
		end

		SetActive(arg_613_1.tipsGo_, false)

		function arg_613_1.onSingleLineFinish_()
			arg_613_1.onSingleLineUpdate_ = nil
			arg_613_1.onSingleLineFinish_ = nil
			arg_613_1.state_ = "waiting"
		end

		function arg_613_1.playNext_(arg_615_0)
			if arg_615_0 == 1 then
				arg_613_0:Play413161151(arg_613_1)
			end
		end

		function arg_613_1.onSingleLineUpdate_(arg_616_0)
			local var_616_0 = arg_613_1.actors_["10022"].transform
			local var_616_1 = 0

			if var_616_1 < arg_613_1.time_ and arg_613_1.time_ <= var_616_1 + arg_616_0 then
				arg_613_1.var_.moveOldPos10022 = var_616_0.localPosition
				var_616_0.localScale = Vector3.New(1, 1, 1)

				arg_613_1:CheckSpriteTmpPos("10022", 2)

				local var_616_2 = var_616_0.childCount

				for iter_616_0 = 0, var_616_2 - 1 do
					local var_616_3 = var_616_0:GetChild(iter_616_0)

					if var_616_3.name == "split_8" or not string.find(var_616_3.name, "split") then
						var_616_3.gameObject:SetActive(true)
					else
						var_616_3.gameObject:SetActive(false)
					end
				end
			end

			local var_616_4 = 0.001

			if var_616_1 <= arg_613_1.time_ and arg_613_1.time_ < var_616_1 + var_616_4 then
				local var_616_5 = (arg_613_1.time_ - var_616_1) / var_616_4
				local var_616_6 = Vector3.New(-390, -315, -320)

				var_616_0.localPosition = Vector3.Lerp(arg_613_1.var_.moveOldPos10022, var_616_6, var_616_5)
			end

			if arg_613_1.time_ >= var_616_1 + var_616_4 and arg_613_1.time_ < var_616_1 + var_616_4 + arg_616_0 then
				var_616_0.localPosition = Vector3.New(-390, -315, -320)
			end

			local var_616_7 = arg_613_1.actors_["10022"]
			local var_616_8 = 0

			if var_616_8 < arg_613_1.time_ and arg_613_1.time_ <= var_616_8 + arg_616_0 and not isNil(var_616_7) and arg_613_1.var_.actorSpriteComps10022 == nil then
				arg_613_1.var_.actorSpriteComps10022 = var_616_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_616_9 = 2

			if var_616_8 <= arg_613_1.time_ and arg_613_1.time_ < var_616_8 + var_616_9 and not isNil(var_616_7) then
				local var_616_10 = (arg_613_1.time_ - var_616_8) / var_616_9

				if arg_613_1.var_.actorSpriteComps10022 then
					for iter_616_1, iter_616_2 in pairs(arg_613_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_616_2 then
							if arg_613_1.isInRecall_ then
								local var_616_11 = Mathf.Lerp(iter_616_2.color.r, arg_613_1.hightColor1.r, var_616_10)
								local var_616_12 = Mathf.Lerp(iter_616_2.color.g, arg_613_1.hightColor1.g, var_616_10)
								local var_616_13 = Mathf.Lerp(iter_616_2.color.b, arg_613_1.hightColor1.b, var_616_10)

								iter_616_2.color = Color.New(var_616_11, var_616_12, var_616_13)
							else
								local var_616_14 = Mathf.Lerp(iter_616_2.color.r, 1, var_616_10)

								iter_616_2.color = Color.New(var_616_14, var_616_14, var_616_14)
							end
						end
					end
				end
			end

			if arg_613_1.time_ >= var_616_8 + var_616_9 and arg_613_1.time_ < var_616_8 + var_616_9 + arg_616_0 and not isNil(var_616_7) and arg_613_1.var_.actorSpriteComps10022 then
				for iter_616_3, iter_616_4 in pairs(arg_613_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_616_4 then
						if arg_613_1.isInRecall_ then
							iter_616_4.color = arg_613_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_616_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_613_1.var_.actorSpriteComps10022 = nil
			end

			local var_616_15 = arg_613_1.actors_["10093"]
			local var_616_16 = 0

			if var_616_16 < arg_613_1.time_ and arg_613_1.time_ <= var_616_16 + arg_616_0 and not isNil(var_616_15) and arg_613_1.var_.actorSpriteComps10093 == nil then
				arg_613_1.var_.actorSpriteComps10093 = var_616_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_616_17 = 2

			if var_616_16 <= arg_613_1.time_ and arg_613_1.time_ < var_616_16 + var_616_17 and not isNil(var_616_15) then
				local var_616_18 = (arg_613_1.time_ - var_616_16) / var_616_17

				if arg_613_1.var_.actorSpriteComps10093 then
					for iter_616_5, iter_616_6 in pairs(arg_613_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_616_6 then
							if arg_613_1.isInRecall_ then
								local var_616_19 = Mathf.Lerp(iter_616_6.color.r, arg_613_1.hightColor2.r, var_616_18)
								local var_616_20 = Mathf.Lerp(iter_616_6.color.g, arg_613_1.hightColor2.g, var_616_18)
								local var_616_21 = Mathf.Lerp(iter_616_6.color.b, arg_613_1.hightColor2.b, var_616_18)

								iter_616_6.color = Color.New(var_616_19, var_616_20, var_616_21)
							else
								local var_616_22 = Mathf.Lerp(iter_616_6.color.r, 0.5, var_616_18)

								iter_616_6.color = Color.New(var_616_22, var_616_22, var_616_22)
							end
						end
					end
				end
			end

			if arg_613_1.time_ >= var_616_16 + var_616_17 and arg_613_1.time_ < var_616_16 + var_616_17 + arg_616_0 and not isNil(var_616_15) and arg_613_1.var_.actorSpriteComps10093 then
				for iter_616_7, iter_616_8 in pairs(arg_613_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_616_8 then
						if arg_613_1.isInRecall_ then
							iter_616_8.color = arg_613_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_616_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_613_1.var_.actorSpriteComps10093 = nil
			end

			local var_616_23 = 0
			local var_616_24 = 0.55

			if var_616_23 < arg_613_1.time_ and arg_613_1.time_ <= var_616_23 + arg_616_0 then
				arg_613_1.talkMaxDuration = 0
				arg_613_1.dialogCg_.alpha = 1

				arg_613_1.dialog_:SetActive(true)
				SetActive(arg_613_1.leftNameGo_, true)

				local var_616_25 = arg_613_1:FormatText(StoryNameCfg[614].name)

				arg_613_1.leftNameTxt_.text = var_616_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_613_1.leftNameTxt_.transform)

				arg_613_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_613_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_613_1:RecordName(arg_613_1.leftNameTxt_.text)
				SetActive(arg_613_1.iconTrs_.gameObject, false)
				arg_613_1.callingController_:SetSelectedState("normal")

				local var_616_26 = arg_613_1:GetWordFromCfg(413161150)
				local var_616_27 = arg_613_1:FormatText(var_616_26.content)

				arg_613_1.text_.text = var_616_27

				LuaForUtil.ClearLinePrefixSymbol(arg_613_1.text_)

				local var_616_28 = 22
				local var_616_29 = utf8.len(var_616_27)
				local var_616_30 = var_616_28 <= 0 and var_616_24 or var_616_24 * (var_616_29 / var_616_28)

				if var_616_30 > 0 and var_616_24 < var_616_30 then
					arg_613_1.talkMaxDuration = var_616_30

					if var_616_30 + var_616_23 > arg_613_1.duration_ then
						arg_613_1.duration_ = var_616_30 + var_616_23
					end
				end

				arg_613_1.text_.text = var_616_27
				arg_613_1.typewritter.percent = 0

				arg_613_1.typewritter:SetDirty()
				arg_613_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161150", "story_v_out_413161.awb") ~= 0 then
					local var_616_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161150", "story_v_out_413161.awb") / 1000

					if var_616_31 + var_616_23 > arg_613_1.duration_ then
						arg_613_1.duration_ = var_616_31 + var_616_23
					end

					if var_616_26.prefab_name ~= "" and arg_613_1.actors_[var_616_26.prefab_name] ~= nil then
						local var_616_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_613_1.actors_[var_616_26.prefab_name].transform, "story_v_out_413161", "413161150", "story_v_out_413161.awb")

						arg_613_1:RecordAudio("413161150", var_616_32)
						arg_613_1:RecordAudio("413161150", var_616_32)
					else
						arg_613_1:AudioAction("play", "voice", "story_v_out_413161", "413161150", "story_v_out_413161.awb")
					end

					arg_613_1:RecordHistoryTalkVoice("story_v_out_413161", "413161150", "story_v_out_413161.awb")
				end

				arg_613_1:RecordContent(arg_613_1.text_.text)
			end

			local var_616_33 = math.max(var_616_24, arg_613_1.talkMaxDuration)

			if var_616_23 <= arg_613_1.time_ and arg_613_1.time_ < var_616_23 + var_616_33 then
				arg_613_1.typewritter.percent = (arg_613_1.time_ - var_616_23) / var_616_33

				arg_613_1.typewritter:SetDirty()
			end

			if arg_613_1.time_ >= var_616_23 + var_616_33 and arg_613_1.time_ < var_616_23 + var_616_33 + arg_616_0 then
				arg_613_1.typewritter.percent = 1

				arg_613_1.typewritter:SetDirty()
				arg_613_1:ShowNextGo(true)
			end
		end
	end,
	Play413161151 = function(arg_617_0, arg_617_1)
		arg_617_1.time_ = 0
		arg_617_1.frameCnt_ = 0
		arg_617_1.state_ = "playing"
		arg_617_1.curTalkId_ = 413161151
		arg_617_1.duration_ = 14.5

		local var_617_0 = {
			zh = 6.9,
			ja = 14.5
		}
		local var_617_1 = manager.audio:GetLocalizationFlag()

		if var_617_0[var_617_1] ~= nil then
			arg_617_1.duration_ = var_617_0[var_617_1]
		end

		SetActive(arg_617_1.tipsGo_, false)

		function arg_617_1.onSingleLineFinish_()
			arg_617_1.onSingleLineUpdate_ = nil
			arg_617_1.onSingleLineFinish_ = nil
			arg_617_1.state_ = "waiting"
		end

		function arg_617_1.playNext_(arg_619_0)
			if arg_619_0 == 1 then
				arg_617_0:Play413161152(arg_617_1)
			end
		end

		function arg_617_1.onSingleLineUpdate_(arg_620_0)
			local var_620_0 = arg_617_1.actors_["10093"].transform
			local var_620_1 = 0

			if var_620_1 < arg_617_1.time_ and arg_617_1.time_ <= var_620_1 + arg_620_0 then
				arg_617_1.var_.moveOldPos10093 = var_620_0.localPosition
				var_620_0.localScale = Vector3.New(1, 1, 1)

				arg_617_1:CheckSpriteTmpPos("10093", 4)

				local var_620_2 = var_620_0.childCount

				for iter_620_0 = 0, var_620_2 - 1 do
					local var_620_3 = var_620_0:GetChild(iter_620_0)

					if var_620_3.name == "" or not string.find(var_620_3.name, "split") then
						var_620_3.gameObject:SetActive(true)
					else
						var_620_3.gameObject:SetActive(false)
					end
				end
			end

			local var_620_4 = 0.001

			if var_620_1 <= arg_617_1.time_ and arg_617_1.time_ < var_620_1 + var_620_4 then
				local var_620_5 = (arg_617_1.time_ - var_620_1) / var_620_4
				local var_620_6 = Vector3.New(390, -345, -245)

				var_620_0.localPosition = Vector3.Lerp(arg_617_1.var_.moveOldPos10093, var_620_6, var_620_5)
			end

			if arg_617_1.time_ >= var_620_1 + var_620_4 and arg_617_1.time_ < var_620_1 + var_620_4 + arg_620_0 then
				var_620_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_620_7 = arg_617_1.actors_["10093"]
			local var_620_8 = 0

			if var_620_8 < arg_617_1.time_ and arg_617_1.time_ <= var_620_8 + arg_620_0 and not isNil(var_620_7) and arg_617_1.var_.actorSpriteComps10093 == nil then
				arg_617_1.var_.actorSpriteComps10093 = var_620_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_620_9 = 2

			if var_620_8 <= arg_617_1.time_ and arg_617_1.time_ < var_620_8 + var_620_9 and not isNil(var_620_7) then
				local var_620_10 = (arg_617_1.time_ - var_620_8) / var_620_9

				if arg_617_1.var_.actorSpriteComps10093 then
					for iter_620_1, iter_620_2 in pairs(arg_617_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_620_2 then
							if arg_617_1.isInRecall_ then
								local var_620_11 = Mathf.Lerp(iter_620_2.color.r, arg_617_1.hightColor1.r, var_620_10)
								local var_620_12 = Mathf.Lerp(iter_620_2.color.g, arg_617_1.hightColor1.g, var_620_10)
								local var_620_13 = Mathf.Lerp(iter_620_2.color.b, arg_617_1.hightColor1.b, var_620_10)

								iter_620_2.color = Color.New(var_620_11, var_620_12, var_620_13)
							else
								local var_620_14 = Mathf.Lerp(iter_620_2.color.r, 1, var_620_10)

								iter_620_2.color = Color.New(var_620_14, var_620_14, var_620_14)
							end
						end
					end
				end
			end

			if arg_617_1.time_ >= var_620_8 + var_620_9 and arg_617_1.time_ < var_620_8 + var_620_9 + arg_620_0 and not isNil(var_620_7) and arg_617_1.var_.actorSpriteComps10093 then
				for iter_620_3, iter_620_4 in pairs(arg_617_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_620_4 then
						if arg_617_1.isInRecall_ then
							iter_620_4.color = arg_617_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_620_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_617_1.var_.actorSpriteComps10093 = nil
			end

			local var_620_15 = arg_617_1.actors_["10022"]
			local var_620_16 = 0

			if var_620_16 < arg_617_1.time_ and arg_617_1.time_ <= var_620_16 + arg_620_0 and not isNil(var_620_15) and arg_617_1.var_.actorSpriteComps10022 == nil then
				arg_617_1.var_.actorSpriteComps10022 = var_620_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_620_17 = 2

			if var_620_16 <= arg_617_1.time_ and arg_617_1.time_ < var_620_16 + var_620_17 and not isNil(var_620_15) then
				local var_620_18 = (arg_617_1.time_ - var_620_16) / var_620_17

				if arg_617_1.var_.actorSpriteComps10022 then
					for iter_620_5, iter_620_6 in pairs(arg_617_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_620_6 then
							if arg_617_1.isInRecall_ then
								local var_620_19 = Mathf.Lerp(iter_620_6.color.r, arg_617_1.hightColor2.r, var_620_18)
								local var_620_20 = Mathf.Lerp(iter_620_6.color.g, arg_617_1.hightColor2.g, var_620_18)
								local var_620_21 = Mathf.Lerp(iter_620_6.color.b, arg_617_1.hightColor2.b, var_620_18)

								iter_620_6.color = Color.New(var_620_19, var_620_20, var_620_21)
							else
								local var_620_22 = Mathf.Lerp(iter_620_6.color.r, 0.5, var_620_18)

								iter_620_6.color = Color.New(var_620_22, var_620_22, var_620_22)
							end
						end
					end
				end
			end

			if arg_617_1.time_ >= var_620_16 + var_620_17 and arg_617_1.time_ < var_620_16 + var_620_17 + arg_620_0 and not isNil(var_620_15) and arg_617_1.var_.actorSpriteComps10022 then
				for iter_620_7, iter_620_8 in pairs(arg_617_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_620_8 then
						if arg_617_1.isInRecall_ then
							iter_620_8.color = arg_617_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_620_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_617_1.var_.actorSpriteComps10022 = nil
			end

			local var_620_23 = 0
			local var_620_24 = 0.75

			if var_620_23 < arg_617_1.time_ and arg_617_1.time_ <= var_620_23 + arg_620_0 then
				arg_617_1.talkMaxDuration = 0
				arg_617_1.dialogCg_.alpha = 1

				arg_617_1.dialog_:SetActive(true)
				SetActive(arg_617_1.leftNameGo_, true)

				local var_620_25 = arg_617_1:FormatText(StoryNameCfg[28].name)

				arg_617_1.leftNameTxt_.text = var_620_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_617_1.leftNameTxt_.transform)

				arg_617_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_617_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_617_1:RecordName(arg_617_1.leftNameTxt_.text)
				SetActive(arg_617_1.iconTrs_.gameObject, false)
				arg_617_1.callingController_:SetSelectedState("normal")

				local var_620_26 = arg_617_1:GetWordFromCfg(413161151)
				local var_620_27 = arg_617_1:FormatText(var_620_26.content)

				arg_617_1.text_.text = var_620_27

				LuaForUtil.ClearLinePrefixSymbol(arg_617_1.text_)

				local var_620_28 = 30
				local var_620_29 = utf8.len(var_620_27)
				local var_620_30 = var_620_28 <= 0 and var_620_24 or var_620_24 * (var_620_29 / var_620_28)

				if var_620_30 > 0 and var_620_24 < var_620_30 then
					arg_617_1.talkMaxDuration = var_620_30

					if var_620_30 + var_620_23 > arg_617_1.duration_ then
						arg_617_1.duration_ = var_620_30 + var_620_23
					end
				end

				arg_617_1.text_.text = var_620_27
				arg_617_1.typewritter.percent = 0

				arg_617_1.typewritter:SetDirty()
				arg_617_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161151", "story_v_out_413161.awb") ~= 0 then
					local var_620_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161151", "story_v_out_413161.awb") / 1000

					if var_620_31 + var_620_23 > arg_617_1.duration_ then
						arg_617_1.duration_ = var_620_31 + var_620_23
					end

					if var_620_26.prefab_name ~= "" and arg_617_1.actors_[var_620_26.prefab_name] ~= nil then
						local var_620_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_617_1.actors_[var_620_26.prefab_name].transform, "story_v_out_413161", "413161151", "story_v_out_413161.awb")

						arg_617_1:RecordAudio("413161151", var_620_32)
						arg_617_1:RecordAudio("413161151", var_620_32)
					else
						arg_617_1:AudioAction("play", "voice", "story_v_out_413161", "413161151", "story_v_out_413161.awb")
					end

					arg_617_1:RecordHistoryTalkVoice("story_v_out_413161", "413161151", "story_v_out_413161.awb")
				end

				arg_617_1:RecordContent(arg_617_1.text_.text)
			end

			local var_620_33 = math.max(var_620_24, arg_617_1.talkMaxDuration)

			if var_620_23 <= arg_617_1.time_ and arg_617_1.time_ < var_620_23 + var_620_33 then
				arg_617_1.typewritter.percent = (arg_617_1.time_ - var_620_23) / var_620_33

				arg_617_1.typewritter:SetDirty()
			end

			if arg_617_1.time_ >= var_620_23 + var_620_33 and arg_617_1.time_ < var_620_23 + var_620_33 + arg_620_0 then
				arg_617_1.typewritter.percent = 1

				arg_617_1.typewritter:SetDirty()
				arg_617_1:ShowNextGo(true)
			end
		end
	end,
	Play413161152 = function(arg_621_0, arg_621_1)
		arg_621_1.time_ = 0
		arg_621_1.frameCnt_ = 0
		arg_621_1.state_ = "playing"
		arg_621_1.curTalkId_ = 413161152
		arg_621_1.duration_ = 4.4

		local var_621_0 = {
			zh = 3.933,
			ja = 4.4
		}
		local var_621_1 = manager.audio:GetLocalizationFlag()

		if var_621_0[var_621_1] ~= nil then
			arg_621_1.duration_ = var_621_0[var_621_1]
		end

		SetActive(arg_621_1.tipsGo_, false)

		function arg_621_1.onSingleLineFinish_()
			arg_621_1.onSingleLineUpdate_ = nil
			arg_621_1.onSingleLineFinish_ = nil
			arg_621_1.state_ = "waiting"
		end

		function arg_621_1.playNext_(arg_623_0)
			if arg_623_0 == 1 then
				arg_621_0:Play413161153(arg_621_1)
			end
		end

		function arg_621_1.onSingleLineUpdate_(arg_624_0)
			local var_624_0 = arg_621_1.actors_["10093"].transform
			local var_624_1 = 0

			if var_624_1 < arg_621_1.time_ and arg_621_1.time_ <= var_624_1 + arg_624_0 then
				arg_621_1.var_.moveOldPos10093 = var_624_0.localPosition
				var_624_0.localScale = Vector3.New(1, 1, 1)

				arg_621_1:CheckSpriteTmpPos("10093", 4)

				local var_624_2 = var_624_0.childCount

				for iter_624_0 = 0, var_624_2 - 1 do
					local var_624_3 = var_624_0:GetChild(iter_624_0)

					if var_624_3.name == "split_7" or not string.find(var_624_3.name, "split") then
						var_624_3.gameObject:SetActive(true)
					else
						var_624_3.gameObject:SetActive(false)
					end
				end
			end

			local var_624_4 = 0.001

			if var_624_1 <= arg_621_1.time_ and arg_621_1.time_ < var_624_1 + var_624_4 then
				local var_624_5 = (arg_621_1.time_ - var_624_1) / var_624_4
				local var_624_6 = Vector3.New(390, -345, -245)

				var_624_0.localPosition = Vector3.Lerp(arg_621_1.var_.moveOldPos10093, var_624_6, var_624_5)
			end

			if arg_621_1.time_ >= var_624_1 + var_624_4 and arg_621_1.time_ < var_624_1 + var_624_4 + arg_624_0 then
				var_624_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_624_7 = 0
			local var_624_8 = 0.55

			if var_624_7 < arg_621_1.time_ and arg_621_1.time_ <= var_624_7 + arg_624_0 then
				arg_621_1.talkMaxDuration = 0
				arg_621_1.dialogCg_.alpha = 1

				arg_621_1.dialog_:SetActive(true)
				SetActive(arg_621_1.leftNameGo_, true)

				local var_624_9 = arg_621_1:FormatText(StoryNameCfg[28].name)

				arg_621_1.leftNameTxt_.text = var_624_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_621_1.leftNameTxt_.transform)

				arg_621_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_621_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_621_1:RecordName(arg_621_1.leftNameTxt_.text)
				SetActive(arg_621_1.iconTrs_.gameObject, false)
				arg_621_1.callingController_:SetSelectedState("normal")

				local var_624_10 = arg_621_1:GetWordFromCfg(413161152)
				local var_624_11 = arg_621_1:FormatText(var_624_10.content)

				arg_621_1.text_.text = var_624_11

				LuaForUtil.ClearLinePrefixSymbol(arg_621_1.text_)

				local var_624_12 = 22
				local var_624_13 = utf8.len(var_624_11)
				local var_624_14 = var_624_12 <= 0 and var_624_8 or var_624_8 * (var_624_13 / var_624_12)

				if var_624_14 > 0 and var_624_8 < var_624_14 then
					arg_621_1.talkMaxDuration = var_624_14

					if var_624_14 + var_624_7 > arg_621_1.duration_ then
						arg_621_1.duration_ = var_624_14 + var_624_7
					end
				end

				arg_621_1.text_.text = var_624_11
				arg_621_1.typewritter.percent = 0

				arg_621_1.typewritter:SetDirty()
				arg_621_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161152", "story_v_out_413161.awb") ~= 0 then
					local var_624_15 = manager.audio:GetVoiceLength("story_v_out_413161", "413161152", "story_v_out_413161.awb") / 1000

					if var_624_15 + var_624_7 > arg_621_1.duration_ then
						arg_621_1.duration_ = var_624_15 + var_624_7
					end

					if var_624_10.prefab_name ~= "" and arg_621_1.actors_[var_624_10.prefab_name] ~= nil then
						local var_624_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_621_1.actors_[var_624_10.prefab_name].transform, "story_v_out_413161", "413161152", "story_v_out_413161.awb")

						arg_621_1:RecordAudio("413161152", var_624_16)
						arg_621_1:RecordAudio("413161152", var_624_16)
					else
						arg_621_1:AudioAction("play", "voice", "story_v_out_413161", "413161152", "story_v_out_413161.awb")
					end

					arg_621_1:RecordHistoryTalkVoice("story_v_out_413161", "413161152", "story_v_out_413161.awb")
				end

				arg_621_1:RecordContent(arg_621_1.text_.text)
			end

			local var_624_17 = math.max(var_624_8, arg_621_1.talkMaxDuration)

			if var_624_7 <= arg_621_1.time_ and arg_621_1.time_ < var_624_7 + var_624_17 then
				arg_621_1.typewritter.percent = (arg_621_1.time_ - var_624_7) / var_624_17

				arg_621_1.typewritter:SetDirty()
			end

			if arg_621_1.time_ >= var_624_7 + var_624_17 and arg_621_1.time_ < var_624_7 + var_624_17 + arg_624_0 then
				arg_621_1.typewritter.percent = 1

				arg_621_1.typewritter:SetDirty()
				arg_621_1:ShowNextGo(true)
			end
		end
	end,
	Play413161153 = function(arg_625_0, arg_625_1)
		arg_625_1.time_ = 0
		arg_625_1.frameCnt_ = 0
		arg_625_1.state_ = "playing"
		arg_625_1.curTalkId_ = 413161153
		arg_625_1.duration_ = 7.3

		local var_625_0 = {
			zh = 7.2,
			ja = 7.3
		}
		local var_625_1 = manager.audio:GetLocalizationFlag()

		if var_625_0[var_625_1] ~= nil then
			arg_625_1.duration_ = var_625_0[var_625_1]
		end

		SetActive(arg_625_1.tipsGo_, false)

		function arg_625_1.onSingleLineFinish_()
			arg_625_1.onSingleLineUpdate_ = nil
			arg_625_1.onSingleLineFinish_ = nil
			arg_625_1.state_ = "waiting"
		end

		function arg_625_1.playNext_(arg_627_0)
			if arg_627_0 == 1 then
				arg_625_0:Play413161154(arg_625_1)
			end
		end

		function arg_625_1.onSingleLineUpdate_(arg_628_0)
			local var_628_0 = arg_625_1.actors_["10022"]
			local var_628_1 = 0

			if var_628_1 < arg_625_1.time_ and arg_625_1.time_ <= var_628_1 + arg_628_0 and not isNil(var_628_0) and arg_625_1.var_.actorSpriteComps10022 == nil then
				arg_625_1.var_.actorSpriteComps10022 = var_628_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_628_2 = 2

			if var_628_1 <= arg_625_1.time_ and arg_625_1.time_ < var_628_1 + var_628_2 and not isNil(var_628_0) then
				local var_628_3 = (arg_625_1.time_ - var_628_1) / var_628_2

				if arg_625_1.var_.actorSpriteComps10022 then
					for iter_628_0, iter_628_1 in pairs(arg_625_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_628_1 then
							if arg_625_1.isInRecall_ then
								local var_628_4 = Mathf.Lerp(iter_628_1.color.r, arg_625_1.hightColor1.r, var_628_3)
								local var_628_5 = Mathf.Lerp(iter_628_1.color.g, arg_625_1.hightColor1.g, var_628_3)
								local var_628_6 = Mathf.Lerp(iter_628_1.color.b, arg_625_1.hightColor1.b, var_628_3)

								iter_628_1.color = Color.New(var_628_4, var_628_5, var_628_6)
							else
								local var_628_7 = Mathf.Lerp(iter_628_1.color.r, 1, var_628_3)

								iter_628_1.color = Color.New(var_628_7, var_628_7, var_628_7)
							end
						end
					end
				end
			end

			if arg_625_1.time_ >= var_628_1 + var_628_2 and arg_625_1.time_ < var_628_1 + var_628_2 + arg_628_0 and not isNil(var_628_0) and arg_625_1.var_.actorSpriteComps10022 then
				for iter_628_2, iter_628_3 in pairs(arg_625_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_628_3 then
						if arg_625_1.isInRecall_ then
							iter_628_3.color = arg_625_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_628_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_625_1.var_.actorSpriteComps10022 = nil
			end

			local var_628_8 = arg_625_1.actors_["10093"]
			local var_628_9 = 0

			if var_628_9 < arg_625_1.time_ and arg_625_1.time_ <= var_628_9 + arg_628_0 and not isNil(var_628_8) and arg_625_1.var_.actorSpriteComps10093 == nil then
				arg_625_1.var_.actorSpriteComps10093 = var_628_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_628_10 = 2

			if var_628_9 <= arg_625_1.time_ and arg_625_1.time_ < var_628_9 + var_628_10 and not isNil(var_628_8) then
				local var_628_11 = (arg_625_1.time_ - var_628_9) / var_628_10

				if arg_625_1.var_.actorSpriteComps10093 then
					for iter_628_4, iter_628_5 in pairs(arg_625_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_628_5 then
							if arg_625_1.isInRecall_ then
								local var_628_12 = Mathf.Lerp(iter_628_5.color.r, arg_625_1.hightColor2.r, var_628_11)
								local var_628_13 = Mathf.Lerp(iter_628_5.color.g, arg_625_1.hightColor2.g, var_628_11)
								local var_628_14 = Mathf.Lerp(iter_628_5.color.b, arg_625_1.hightColor2.b, var_628_11)

								iter_628_5.color = Color.New(var_628_12, var_628_13, var_628_14)
							else
								local var_628_15 = Mathf.Lerp(iter_628_5.color.r, 0.5, var_628_11)

								iter_628_5.color = Color.New(var_628_15, var_628_15, var_628_15)
							end
						end
					end
				end
			end

			if arg_625_1.time_ >= var_628_9 + var_628_10 and arg_625_1.time_ < var_628_9 + var_628_10 + arg_628_0 and not isNil(var_628_8) and arg_625_1.var_.actorSpriteComps10093 then
				for iter_628_6, iter_628_7 in pairs(arg_625_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_628_7 then
						if arg_625_1.isInRecall_ then
							iter_628_7.color = arg_625_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_628_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_625_1.var_.actorSpriteComps10093 = nil
			end

			local var_628_16 = 0
			local var_628_17 = 0.875

			if var_628_16 < arg_625_1.time_ and arg_625_1.time_ <= var_628_16 + arg_628_0 then
				arg_625_1.talkMaxDuration = 0
				arg_625_1.dialogCg_.alpha = 1

				arg_625_1.dialog_:SetActive(true)
				SetActive(arg_625_1.leftNameGo_, true)

				local var_628_18 = arg_625_1:FormatText(StoryNameCfg[614].name)

				arg_625_1.leftNameTxt_.text = var_628_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_625_1.leftNameTxt_.transform)

				arg_625_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_625_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_625_1:RecordName(arg_625_1.leftNameTxt_.text)
				SetActive(arg_625_1.iconTrs_.gameObject, false)
				arg_625_1.callingController_:SetSelectedState("normal")

				local var_628_19 = arg_625_1:GetWordFromCfg(413161153)
				local var_628_20 = arg_625_1:FormatText(var_628_19.content)

				arg_625_1.text_.text = var_628_20

				LuaForUtil.ClearLinePrefixSymbol(arg_625_1.text_)

				local var_628_21 = 35
				local var_628_22 = utf8.len(var_628_20)
				local var_628_23 = var_628_21 <= 0 and var_628_17 or var_628_17 * (var_628_22 / var_628_21)

				if var_628_23 > 0 and var_628_17 < var_628_23 then
					arg_625_1.talkMaxDuration = var_628_23

					if var_628_23 + var_628_16 > arg_625_1.duration_ then
						arg_625_1.duration_ = var_628_23 + var_628_16
					end
				end

				arg_625_1.text_.text = var_628_20
				arg_625_1.typewritter.percent = 0

				arg_625_1.typewritter:SetDirty()
				arg_625_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161153", "story_v_out_413161.awb") ~= 0 then
					local var_628_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161153", "story_v_out_413161.awb") / 1000

					if var_628_24 + var_628_16 > arg_625_1.duration_ then
						arg_625_1.duration_ = var_628_24 + var_628_16
					end

					if var_628_19.prefab_name ~= "" and arg_625_1.actors_[var_628_19.prefab_name] ~= nil then
						local var_628_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_625_1.actors_[var_628_19.prefab_name].transform, "story_v_out_413161", "413161153", "story_v_out_413161.awb")

						arg_625_1:RecordAudio("413161153", var_628_25)
						arg_625_1:RecordAudio("413161153", var_628_25)
					else
						arg_625_1:AudioAction("play", "voice", "story_v_out_413161", "413161153", "story_v_out_413161.awb")
					end

					arg_625_1:RecordHistoryTalkVoice("story_v_out_413161", "413161153", "story_v_out_413161.awb")
				end

				arg_625_1:RecordContent(arg_625_1.text_.text)
			end

			local var_628_26 = math.max(var_628_17, arg_625_1.talkMaxDuration)

			if var_628_16 <= arg_625_1.time_ and arg_625_1.time_ < var_628_16 + var_628_26 then
				arg_625_1.typewritter.percent = (arg_625_1.time_ - var_628_16) / var_628_26

				arg_625_1.typewritter:SetDirty()
			end

			if arg_625_1.time_ >= var_628_16 + var_628_26 and arg_625_1.time_ < var_628_16 + var_628_26 + arg_628_0 then
				arg_625_1.typewritter.percent = 1

				arg_625_1.typewritter:SetDirty()
				arg_625_1:ShowNextGo(true)
			end
		end
	end,
	Play413161154 = function(arg_629_0, arg_629_1)
		arg_629_1.time_ = 0
		arg_629_1.frameCnt_ = 0
		arg_629_1.state_ = "playing"
		arg_629_1.curTalkId_ = 413161154
		arg_629_1.duration_ = 9.17

		local var_629_0 = {
			zh = 9.166,
			ja = 8.533
		}
		local var_629_1 = manager.audio:GetLocalizationFlag()

		if var_629_0[var_629_1] ~= nil then
			arg_629_1.duration_ = var_629_0[var_629_1]
		end

		SetActive(arg_629_1.tipsGo_, false)

		function arg_629_1.onSingleLineFinish_()
			arg_629_1.onSingleLineUpdate_ = nil
			arg_629_1.onSingleLineFinish_ = nil
			arg_629_1.state_ = "waiting"
		end

		function arg_629_1.playNext_(arg_631_0)
			if arg_631_0 == 1 then
				arg_629_0:Play413161155(arg_629_1)
			end
		end

		function arg_629_1.onSingleLineUpdate_(arg_632_0)
			local var_632_0 = arg_629_1.actors_["10093"]
			local var_632_1 = 0

			if var_632_1 < arg_629_1.time_ and arg_629_1.time_ <= var_632_1 + arg_632_0 and not isNil(var_632_0) and arg_629_1.var_.actorSpriteComps10093 == nil then
				arg_629_1.var_.actorSpriteComps10093 = var_632_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_632_2 = 2

			if var_632_1 <= arg_629_1.time_ and arg_629_1.time_ < var_632_1 + var_632_2 and not isNil(var_632_0) then
				local var_632_3 = (arg_629_1.time_ - var_632_1) / var_632_2

				if arg_629_1.var_.actorSpriteComps10093 then
					for iter_632_0, iter_632_1 in pairs(arg_629_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_632_1 then
							if arg_629_1.isInRecall_ then
								local var_632_4 = Mathf.Lerp(iter_632_1.color.r, arg_629_1.hightColor1.r, var_632_3)
								local var_632_5 = Mathf.Lerp(iter_632_1.color.g, arg_629_1.hightColor1.g, var_632_3)
								local var_632_6 = Mathf.Lerp(iter_632_1.color.b, arg_629_1.hightColor1.b, var_632_3)

								iter_632_1.color = Color.New(var_632_4, var_632_5, var_632_6)
							else
								local var_632_7 = Mathf.Lerp(iter_632_1.color.r, 1, var_632_3)

								iter_632_1.color = Color.New(var_632_7, var_632_7, var_632_7)
							end
						end
					end
				end
			end

			if arg_629_1.time_ >= var_632_1 + var_632_2 and arg_629_1.time_ < var_632_1 + var_632_2 + arg_632_0 and not isNil(var_632_0) and arg_629_1.var_.actorSpriteComps10093 then
				for iter_632_2, iter_632_3 in pairs(arg_629_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_632_3 then
						if arg_629_1.isInRecall_ then
							iter_632_3.color = arg_629_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_632_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_629_1.var_.actorSpriteComps10093 = nil
			end

			local var_632_8 = arg_629_1.actors_["10022"]
			local var_632_9 = 0

			if var_632_9 < arg_629_1.time_ and arg_629_1.time_ <= var_632_9 + arg_632_0 and not isNil(var_632_8) and arg_629_1.var_.actorSpriteComps10022 == nil then
				arg_629_1.var_.actorSpriteComps10022 = var_632_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_632_10 = 2

			if var_632_9 <= arg_629_1.time_ and arg_629_1.time_ < var_632_9 + var_632_10 and not isNil(var_632_8) then
				local var_632_11 = (arg_629_1.time_ - var_632_9) / var_632_10

				if arg_629_1.var_.actorSpriteComps10022 then
					for iter_632_4, iter_632_5 in pairs(arg_629_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_632_5 then
							if arg_629_1.isInRecall_ then
								local var_632_12 = Mathf.Lerp(iter_632_5.color.r, arg_629_1.hightColor2.r, var_632_11)
								local var_632_13 = Mathf.Lerp(iter_632_5.color.g, arg_629_1.hightColor2.g, var_632_11)
								local var_632_14 = Mathf.Lerp(iter_632_5.color.b, arg_629_1.hightColor2.b, var_632_11)

								iter_632_5.color = Color.New(var_632_12, var_632_13, var_632_14)
							else
								local var_632_15 = Mathf.Lerp(iter_632_5.color.r, 0.5, var_632_11)

								iter_632_5.color = Color.New(var_632_15, var_632_15, var_632_15)
							end
						end
					end
				end
			end

			if arg_629_1.time_ >= var_632_9 + var_632_10 and arg_629_1.time_ < var_632_9 + var_632_10 + arg_632_0 and not isNil(var_632_8) and arg_629_1.var_.actorSpriteComps10022 then
				for iter_632_6, iter_632_7 in pairs(arg_629_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_632_7 then
						if arg_629_1.isInRecall_ then
							iter_632_7.color = arg_629_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_632_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_629_1.var_.actorSpriteComps10022 = nil
			end

			local var_632_16 = 0
			local var_632_17 = 1.125

			if var_632_16 < arg_629_1.time_ and arg_629_1.time_ <= var_632_16 + arg_632_0 then
				arg_629_1.talkMaxDuration = 0
				arg_629_1.dialogCg_.alpha = 1

				arg_629_1.dialog_:SetActive(true)
				SetActive(arg_629_1.leftNameGo_, true)

				local var_632_18 = arg_629_1:FormatText(StoryNameCfg[28].name)

				arg_629_1.leftNameTxt_.text = var_632_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_629_1.leftNameTxt_.transform)

				arg_629_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_629_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_629_1:RecordName(arg_629_1.leftNameTxt_.text)
				SetActive(arg_629_1.iconTrs_.gameObject, false)
				arg_629_1.callingController_:SetSelectedState("normal")

				local var_632_19 = arg_629_1:GetWordFromCfg(413161154)
				local var_632_20 = arg_629_1:FormatText(var_632_19.content)

				arg_629_1.text_.text = var_632_20

				LuaForUtil.ClearLinePrefixSymbol(arg_629_1.text_)

				local var_632_21 = 45
				local var_632_22 = utf8.len(var_632_20)
				local var_632_23 = var_632_21 <= 0 and var_632_17 or var_632_17 * (var_632_22 / var_632_21)

				if var_632_23 > 0 and var_632_17 < var_632_23 then
					arg_629_1.talkMaxDuration = var_632_23

					if var_632_23 + var_632_16 > arg_629_1.duration_ then
						arg_629_1.duration_ = var_632_23 + var_632_16
					end
				end

				arg_629_1.text_.text = var_632_20
				arg_629_1.typewritter.percent = 0

				arg_629_1.typewritter:SetDirty()
				arg_629_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161154", "story_v_out_413161.awb") ~= 0 then
					local var_632_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161154", "story_v_out_413161.awb") / 1000

					if var_632_24 + var_632_16 > arg_629_1.duration_ then
						arg_629_1.duration_ = var_632_24 + var_632_16
					end

					if var_632_19.prefab_name ~= "" and arg_629_1.actors_[var_632_19.prefab_name] ~= nil then
						local var_632_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_629_1.actors_[var_632_19.prefab_name].transform, "story_v_out_413161", "413161154", "story_v_out_413161.awb")

						arg_629_1:RecordAudio("413161154", var_632_25)
						arg_629_1:RecordAudio("413161154", var_632_25)
					else
						arg_629_1:AudioAction("play", "voice", "story_v_out_413161", "413161154", "story_v_out_413161.awb")
					end

					arg_629_1:RecordHistoryTalkVoice("story_v_out_413161", "413161154", "story_v_out_413161.awb")
				end

				arg_629_1:RecordContent(arg_629_1.text_.text)
			end

			local var_632_26 = math.max(var_632_17, arg_629_1.talkMaxDuration)

			if var_632_16 <= arg_629_1.time_ and arg_629_1.time_ < var_632_16 + var_632_26 then
				arg_629_1.typewritter.percent = (arg_629_1.time_ - var_632_16) / var_632_26

				arg_629_1.typewritter:SetDirty()
			end

			if arg_629_1.time_ >= var_632_16 + var_632_26 and arg_629_1.time_ < var_632_16 + var_632_26 + arg_632_0 then
				arg_629_1.typewritter.percent = 1

				arg_629_1.typewritter:SetDirty()
				arg_629_1:ShowNextGo(true)
			end
		end
	end,
	Play413161155 = function(arg_633_0, arg_633_1)
		arg_633_1.time_ = 0
		arg_633_1.frameCnt_ = 0
		arg_633_1.state_ = "playing"
		arg_633_1.curTalkId_ = 413161155
		arg_633_1.duration_ = 8.17

		local var_633_0 = {
			zh = 2.5,
			ja = 8.166
		}
		local var_633_1 = manager.audio:GetLocalizationFlag()

		if var_633_0[var_633_1] ~= nil then
			arg_633_1.duration_ = var_633_0[var_633_1]
		end

		SetActive(arg_633_1.tipsGo_, false)

		function arg_633_1.onSingleLineFinish_()
			arg_633_1.onSingleLineUpdate_ = nil
			arg_633_1.onSingleLineFinish_ = nil
			arg_633_1.state_ = "waiting"
		end

		function arg_633_1.playNext_(arg_635_0)
			if arg_635_0 == 1 then
				arg_633_0:Play413161156(arg_633_1)
			end
		end

		function arg_633_1.onSingleLineUpdate_(arg_636_0)
			local var_636_0 = arg_633_1.actors_["10022"]
			local var_636_1 = 0

			if var_636_1 < arg_633_1.time_ and arg_633_1.time_ <= var_636_1 + arg_636_0 and not isNil(var_636_0) and arg_633_1.var_.actorSpriteComps10022 == nil then
				arg_633_1.var_.actorSpriteComps10022 = var_636_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_636_2 = 2

			if var_636_1 <= arg_633_1.time_ and arg_633_1.time_ < var_636_1 + var_636_2 and not isNil(var_636_0) then
				local var_636_3 = (arg_633_1.time_ - var_636_1) / var_636_2

				if arg_633_1.var_.actorSpriteComps10022 then
					for iter_636_0, iter_636_1 in pairs(arg_633_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_636_1 then
							if arg_633_1.isInRecall_ then
								local var_636_4 = Mathf.Lerp(iter_636_1.color.r, arg_633_1.hightColor1.r, var_636_3)
								local var_636_5 = Mathf.Lerp(iter_636_1.color.g, arg_633_1.hightColor1.g, var_636_3)
								local var_636_6 = Mathf.Lerp(iter_636_1.color.b, arg_633_1.hightColor1.b, var_636_3)

								iter_636_1.color = Color.New(var_636_4, var_636_5, var_636_6)
							else
								local var_636_7 = Mathf.Lerp(iter_636_1.color.r, 1, var_636_3)

								iter_636_1.color = Color.New(var_636_7, var_636_7, var_636_7)
							end
						end
					end
				end
			end

			if arg_633_1.time_ >= var_636_1 + var_636_2 and arg_633_1.time_ < var_636_1 + var_636_2 + arg_636_0 and not isNil(var_636_0) and arg_633_1.var_.actorSpriteComps10022 then
				for iter_636_2, iter_636_3 in pairs(arg_633_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_636_3 then
						if arg_633_1.isInRecall_ then
							iter_636_3.color = arg_633_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_636_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_633_1.var_.actorSpriteComps10022 = nil
			end

			local var_636_8 = arg_633_1.actors_["10093"]
			local var_636_9 = 0

			if var_636_9 < arg_633_1.time_ and arg_633_1.time_ <= var_636_9 + arg_636_0 and not isNil(var_636_8) and arg_633_1.var_.actorSpriteComps10093 == nil then
				arg_633_1.var_.actorSpriteComps10093 = var_636_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_636_10 = 2

			if var_636_9 <= arg_633_1.time_ and arg_633_1.time_ < var_636_9 + var_636_10 and not isNil(var_636_8) then
				local var_636_11 = (arg_633_1.time_ - var_636_9) / var_636_10

				if arg_633_1.var_.actorSpriteComps10093 then
					for iter_636_4, iter_636_5 in pairs(arg_633_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_636_5 then
							if arg_633_1.isInRecall_ then
								local var_636_12 = Mathf.Lerp(iter_636_5.color.r, arg_633_1.hightColor2.r, var_636_11)
								local var_636_13 = Mathf.Lerp(iter_636_5.color.g, arg_633_1.hightColor2.g, var_636_11)
								local var_636_14 = Mathf.Lerp(iter_636_5.color.b, arg_633_1.hightColor2.b, var_636_11)

								iter_636_5.color = Color.New(var_636_12, var_636_13, var_636_14)
							else
								local var_636_15 = Mathf.Lerp(iter_636_5.color.r, 0.5, var_636_11)

								iter_636_5.color = Color.New(var_636_15, var_636_15, var_636_15)
							end
						end
					end
				end
			end

			if arg_633_1.time_ >= var_636_9 + var_636_10 and arg_633_1.time_ < var_636_9 + var_636_10 + arg_636_0 and not isNil(var_636_8) and arg_633_1.var_.actorSpriteComps10093 then
				for iter_636_6, iter_636_7 in pairs(arg_633_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_636_7 then
						if arg_633_1.isInRecall_ then
							iter_636_7.color = arg_633_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_636_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_633_1.var_.actorSpriteComps10093 = nil
			end

			local var_636_16 = 0
			local var_636_17 = 0.35

			if var_636_16 < arg_633_1.time_ and arg_633_1.time_ <= var_636_16 + arg_636_0 then
				arg_633_1.talkMaxDuration = 0
				arg_633_1.dialogCg_.alpha = 1

				arg_633_1.dialog_:SetActive(true)
				SetActive(arg_633_1.leftNameGo_, true)

				local var_636_18 = arg_633_1:FormatText(StoryNameCfg[614].name)

				arg_633_1.leftNameTxt_.text = var_636_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_633_1.leftNameTxt_.transform)

				arg_633_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_633_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_633_1:RecordName(arg_633_1.leftNameTxt_.text)
				SetActive(arg_633_1.iconTrs_.gameObject, false)
				arg_633_1.callingController_:SetSelectedState("normal")

				local var_636_19 = arg_633_1:GetWordFromCfg(413161155)
				local var_636_20 = arg_633_1:FormatText(var_636_19.content)

				arg_633_1.text_.text = var_636_20

				LuaForUtil.ClearLinePrefixSymbol(arg_633_1.text_)

				local var_636_21 = 14
				local var_636_22 = utf8.len(var_636_20)
				local var_636_23 = var_636_21 <= 0 and var_636_17 or var_636_17 * (var_636_22 / var_636_21)

				if var_636_23 > 0 and var_636_17 < var_636_23 then
					arg_633_1.talkMaxDuration = var_636_23

					if var_636_23 + var_636_16 > arg_633_1.duration_ then
						arg_633_1.duration_ = var_636_23 + var_636_16
					end
				end

				arg_633_1.text_.text = var_636_20
				arg_633_1.typewritter.percent = 0

				arg_633_1.typewritter:SetDirty()
				arg_633_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161155", "story_v_out_413161.awb") ~= 0 then
					local var_636_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161155", "story_v_out_413161.awb") / 1000

					if var_636_24 + var_636_16 > arg_633_1.duration_ then
						arg_633_1.duration_ = var_636_24 + var_636_16
					end

					if var_636_19.prefab_name ~= "" and arg_633_1.actors_[var_636_19.prefab_name] ~= nil then
						local var_636_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_633_1.actors_[var_636_19.prefab_name].transform, "story_v_out_413161", "413161155", "story_v_out_413161.awb")

						arg_633_1:RecordAudio("413161155", var_636_25)
						arg_633_1:RecordAudio("413161155", var_636_25)
					else
						arg_633_1:AudioAction("play", "voice", "story_v_out_413161", "413161155", "story_v_out_413161.awb")
					end

					arg_633_1:RecordHistoryTalkVoice("story_v_out_413161", "413161155", "story_v_out_413161.awb")
				end

				arg_633_1:RecordContent(arg_633_1.text_.text)
			end

			local var_636_26 = math.max(var_636_17, arg_633_1.talkMaxDuration)

			if var_636_16 <= arg_633_1.time_ and arg_633_1.time_ < var_636_16 + var_636_26 then
				arg_633_1.typewritter.percent = (arg_633_1.time_ - var_636_16) / var_636_26

				arg_633_1.typewritter:SetDirty()
			end

			if arg_633_1.time_ >= var_636_16 + var_636_26 and arg_633_1.time_ < var_636_16 + var_636_26 + arg_636_0 then
				arg_633_1.typewritter.percent = 1

				arg_633_1.typewritter:SetDirty()
				arg_633_1:ShowNextGo(true)
			end
		end
	end,
	Play413161156 = function(arg_637_0, arg_637_1)
		arg_637_1.time_ = 0
		arg_637_1.frameCnt_ = 0
		arg_637_1.state_ = "playing"
		arg_637_1.curTalkId_ = 413161156
		arg_637_1.duration_ = 5.1

		local var_637_0 = {
			zh = 4.5,
			ja = 5.1
		}
		local var_637_1 = manager.audio:GetLocalizationFlag()

		if var_637_0[var_637_1] ~= nil then
			arg_637_1.duration_ = var_637_0[var_637_1]
		end

		SetActive(arg_637_1.tipsGo_, false)

		function arg_637_1.onSingleLineFinish_()
			arg_637_1.onSingleLineUpdate_ = nil
			arg_637_1.onSingleLineFinish_ = nil
			arg_637_1.state_ = "waiting"
		end

		function arg_637_1.playNext_(arg_639_0)
			if arg_639_0 == 1 then
				arg_637_0:Play413161157(arg_637_1)
			end
		end

		function arg_637_1.onSingleLineUpdate_(arg_640_0)
			local var_640_0 = arg_637_1.actors_["10022"]
			local var_640_1 = 0

			if var_640_1 < arg_637_1.time_ and arg_637_1.time_ <= var_640_1 + arg_640_0 and not isNil(var_640_0) and arg_637_1.var_.actorSpriteComps10022 == nil then
				arg_637_1.var_.actorSpriteComps10022 = var_640_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_640_2 = 2

			if var_640_1 <= arg_637_1.time_ and arg_637_1.time_ < var_640_1 + var_640_2 and not isNil(var_640_0) then
				local var_640_3 = (arg_637_1.time_ - var_640_1) / var_640_2

				if arg_637_1.var_.actorSpriteComps10022 then
					for iter_640_0, iter_640_1 in pairs(arg_637_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_640_1 then
							if arg_637_1.isInRecall_ then
								local var_640_4 = Mathf.Lerp(iter_640_1.color.r, arg_637_1.hightColor1.r, var_640_3)
								local var_640_5 = Mathf.Lerp(iter_640_1.color.g, arg_637_1.hightColor1.g, var_640_3)
								local var_640_6 = Mathf.Lerp(iter_640_1.color.b, arg_637_1.hightColor1.b, var_640_3)

								iter_640_1.color = Color.New(var_640_4, var_640_5, var_640_6)
							else
								local var_640_7 = Mathf.Lerp(iter_640_1.color.r, 1, var_640_3)

								iter_640_1.color = Color.New(var_640_7, var_640_7, var_640_7)
							end
						end
					end
				end
			end

			if arg_637_1.time_ >= var_640_1 + var_640_2 and arg_637_1.time_ < var_640_1 + var_640_2 + arg_640_0 and not isNil(var_640_0) and arg_637_1.var_.actorSpriteComps10022 then
				for iter_640_2, iter_640_3 in pairs(arg_637_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_640_3 then
						if arg_637_1.isInRecall_ then
							iter_640_3.color = arg_637_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_640_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_637_1.var_.actorSpriteComps10022 = nil
			end

			local var_640_8 = 0
			local var_640_9 = 0.6

			if var_640_8 < arg_637_1.time_ and arg_637_1.time_ <= var_640_8 + arg_640_0 then
				arg_637_1.talkMaxDuration = 0
				arg_637_1.dialogCg_.alpha = 1

				arg_637_1.dialog_:SetActive(true)
				SetActive(arg_637_1.leftNameGo_, true)

				local var_640_10 = arg_637_1:FormatText(StoryNameCfg[614].name)

				arg_637_1.leftNameTxt_.text = var_640_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_637_1.leftNameTxt_.transform)

				arg_637_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_637_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_637_1:RecordName(arg_637_1.leftNameTxt_.text)
				SetActive(arg_637_1.iconTrs_.gameObject, false)
				arg_637_1.callingController_:SetSelectedState("normal")

				local var_640_11 = arg_637_1:GetWordFromCfg(413161156)
				local var_640_12 = arg_637_1:FormatText(var_640_11.content)

				arg_637_1.text_.text = var_640_12

				LuaForUtil.ClearLinePrefixSymbol(arg_637_1.text_)

				local var_640_13 = 24
				local var_640_14 = utf8.len(var_640_12)
				local var_640_15 = var_640_13 <= 0 and var_640_9 or var_640_9 * (var_640_14 / var_640_13)

				if var_640_15 > 0 and var_640_9 < var_640_15 then
					arg_637_1.talkMaxDuration = var_640_15

					if var_640_15 + var_640_8 > arg_637_1.duration_ then
						arg_637_1.duration_ = var_640_15 + var_640_8
					end
				end

				arg_637_1.text_.text = var_640_12
				arg_637_1.typewritter.percent = 0

				arg_637_1.typewritter:SetDirty()
				arg_637_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161156", "story_v_out_413161.awb") ~= 0 then
					local var_640_16 = manager.audio:GetVoiceLength("story_v_out_413161", "413161156", "story_v_out_413161.awb") / 1000

					if var_640_16 + var_640_8 > arg_637_1.duration_ then
						arg_637_1.duration_ = var_640_16 + var_640_8
					end

					if var_640_11.prefab_name ~= "" and arg_637_1.actors_[var_640_11.prefab_name] ~= nil then
						local var_640_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_637_1.actors_[var_640_11.prefab_name].transform, "story_v_out_413161", "413161156", "story_v_out_413161.awb")

						arg_637_1:RecordAudio("413161156", var_640_17)
						arg_637_1:RecordAudio("413161156", var_640_17)
					else
						arg_637_1:AudioAction("play", "voice", "story_v_out_413161", "413161156", "story_v_out_413161.awb")
					end

					arg_637_1:RecordHistoryTalkVoice("story_v_out_413161", "413161156", "story_v_out_413161.awb")
				end

				arg_637_1:RecordContent(arg_637_1.text_.text)
			end

			local var_640_18 = math.max(var_640_9, arg_637_1.talkMaxDuration)

			if var_640_8 <= arg_637_1.time_ and arg_637_1.time_ < var_640_8 + var_640_18 then
				arg_637_1.typewritter.percent = (arg_637_1.time_ - var_640_8) / var_640_18

				arg_637_1.typewritter:SetDirty()
			end

			if arg_637_1.time_ >= var_640_8 + var_640_18 and arg_637_1.time_ < var_640_8 + var_640_18 + arg_640_0 then
				arg_637_1.typewritter.percent = 1

				arg_637_1.typewritter:SetDirty()
				arg_637_1:ShowNextGo(true)
			end
		end
	end,
	Play413161157 = function(arg_641_0, arg_641_1)
		arg_641_1.time_ = 0
		arg_641_1.frameCnt_ = 0
		arg_641_1.state_ = "playing"
		arg_641_1.curTalkId_ = 413161157
		arg_641_1.duration_ = 5

		SetActive(arg_641_1.tipsGo_, false)

		function arg_641_1.onSingleLineFinish_()
			arg_641_1.onSingleLineUpdate_ = nil
			arg_641_1.onSingleLineFinish_ = nil
			arg_641_1.state_ = "waiting"
		end

		function arg_641_1.playNext_(arg_643_0)
			if arg_643_0 == 1 then
				arg_641_0:Play413161158(arg_641_1)
			end
		end

		function arg_641_1.onSingleLineUpdate_(arg_644_0)
			local var_644_0 = arg_641_1.actors_["10022"].transform
			local var_644_1 = 0

			if var_644_1 < arg_641_1.time_ and arg_641_1.time_ <= var_644_1 + arg_644_0 then
				arg_641_1.var_.moveOldPos10022 = var_644_0.localPosition
				var_644_0.localScale = Vector3.New(1, 1, 1)

				arg_641_1:CheckSpriteTmpPos("10022", 7)

				local var_644_2 = var_644_0.childCount

				for iter_644_0 = 0, var_644_2 - 1 do
					local var_644_3 = var_644_0:GetChild(iter_644_0)

					if var_644_3.name == "" or not string.find(var_644_3.name, "split") then
						var_644_3.gameObject:SetActive(true)
					else
						var_644_3.gameObject:SetActive(false)
					end
				end
			end

			local var_644_4 = 0.001

			if var_644_1 <= arg_641_1.time_ and arg_641_1.time_ < var_644_1 + var_644_4 then
				local var_644_5 = (arg_641_1.time_ - var_644_1) / var_644_4
				local var_644_6 = Vector3.New(0, -2000, 0)

				var_644_0.localPosition = Vector3.Lerp(arg_641_1.var_.moveOldPos10022, var_644_6, var_644_5)
			end

			if arg_641_1.time_ >= var_644_1 + var_644_4 and arg_641_1.time_ < var_644_1 + var_644_4 + arg_644_0 then
				var_644_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_644_7 = arg_641_1.actors_["10022"]
			local var_644_8 = 0

			if var_644_8 < arg_641_1.time_ and arg_641_1.time_ <= var_644_8 + arg_644_0 and not isNil(var_644_7) and arg_641_1.var_.actorSpriteComps10022 == nil then
				arg_641_1.var_.actorSpriteComps10022 = var_644_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_644_9 = 2

			if var_644_8 <= arg_641_1.time_ and arg_641_1.time_ < var_644_8 + var_644_9 and not isNil(var_644_7) then
				local var_644_10 = (arg_641_1.time_ - var_644_8) / var_644_9

				if arg_641_1.var_.actorSpriteComps10022 then
					for iter_644_1, iter_644_2 in pairs(arg_641_1.var_.actorSpriteComps10022:ToTable()) do
						if iter_644_2 then
							if arg_641_1.isInRecall_ then
								local var_644_11 = Mathf.Lerp(iter_644_2.color.r, arg_641_1.hightColor2.r, var_644_10)
								local var_644_12 = Mathf.Lerp(iter_644_2.color.g, arg_641_1.hightColor2.g, var_644_10)
								local var_644_13 = Mathf.Lerp(iter_644_2.color.b, arg_641_1.hightColor2.b, var_644_10)

								iter_644_2.color = Color.New(var_644_11, var_644_12, var_644_13)
							else
								local var_644_14 = Mathf.Lerp(iter_644_2.color.r, 0.5, var_644_10)

								iter_644_2.color = Color.New(var_644_14, var_644_14, var_644_14)
							end
						end
					end
				end
			end

			if arg_641_1.time_ >= var_644_8 + var_644_9 and arg_641_1.time_ < var_644_8 + var_644_9 + arg_644_0 and not isNil(var_644_7) and arg_641_1.var_.actorSpriteComps10022 then
				for iter_644_3, iter_644_4 in pairs(arg_641_1.var_.actorSpriteComps10022:ToTable()) do
					if iter_644_4 then
						if arg_641_1.isInRecall_ then
							iter_644_4.color = arg_641_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_644_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_641_1.var_.actorSpriteComps10022 = nil
			end

			local var_644_15 = arg_641_1.actors_["10093"].transform
			local var_644_16 = 0

			if var_644_16 < arg_641_1.time_ and arg_641_1.time_ <= var_644_16 + arg_644_0 then
				arg_641_1.var_.moveOldPos10093 = var_644_15.localPosition
				var_644_15.localScale = Vector3.New(1, 1, 1)

				arg_641_1:CheckSpriteTmpPos("10093", 7)

				local var_644_17 = var_644_15.childCount

				for iter_644_5 = 0, var_644_17 - 1 do
					local var_644_18 = var_644_15:GetChild(iter_644_5)

					if var_644_18.name == "" or not string.find(var_644_18.name, "split") then
						var_644_18.gameObject:SetActive(true)
					else
						var_644_18.gameObject:SetActive(false)
					end
				end
			end

			local var_644_19 = 0.001

			if var_644_16 <= arg_641_1.time_ and arg_641_1.time_ < var_644_16 + var_644_19 then
				local var_644_20 = (arg_641_1.time_ - var_644_16) / var_644_19
				local var_644_21 = Vector3.New(0, -2000, 0)

				var_644_15.localPosition = Vector3.Lerp(arg_641_1.var_.moveOldPos10093, var_644_21, var_644_20)
			end

			if arg_641_1.time_ >= var_644_16 + var_644_19 and arg_641_1.time_ < var_644_16 + var_644_19 + arg_644_0 then
				var_644_15.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_644_22 = 0
			local var_644_23 = 1.2

			if var_644_22 < arg_641_1.time_ and arg_641_1.time_ <= var_644_22 + arg_644_0 then
				arg_641_1.talkMaxDuration = 0
				arg_641_1.dialogCg_.alpha = 1

				arg_641_1.dialog_:SetActive(true)
				SetActive(arg_641_1.leftNameGo_, false)

				arg_641_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_641_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_641_1:RecordName(arg_641_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_641_1.iconTrs_.gameObject, false)
				arg_641_1.callingController_:SetSelectedState("normal")

				local var_644_24 = arg_641_1:GetWordFromCfg(413161157)
				local var_644_25 = arg_641_1:FormatText(var_644_24.content)

				arg_641_1.text_.text = var_644_25

				LuaForUtil.ClearLinePrefixSymbol(arg_641_1.text_)

				local var_644_26 = 48
				local var_644_27 = utf8.len(var_644_25)
				local var_644_28 = var_644_26 <= 0 and var_644_23 or var_644_23 * (var_644_27 / var_644_26)

				if var_644_28 > 0 and var_644_23 < var_644_28 then
					arg_641_1.talkMaxDuration = var_644_28

					if var_644_28 + var_644_22 > arg_641_1.duration_ then
						arg_641_1.duration_ = var_644_28 + var_644_22
					end
				end

				arg_641_1.text_.text = var_644_25
				arg_641_1.typewritter.percent = 0

				arg_641_1.typewritter:SetDirty()
				arg_641_1:ShowNextGo(false)
				arg_641_1:RecordContent(arg_641_1.text_.text)
			end

			local var_644_29 = math.max(var_644_23, arg_641_1.talkMaxDuration)

			if var_644_22 <= arg_641_1.time_ and arg_641_1.time_ < var_644_22 + var_644_29 then
				arg_641_1.typewritter.percent = (arg_641_1.time_ - var_644_22) / var_644_29

				arg_641_1.typewritter:SetDirty()
			end

			if arg_641_1.time_ >= var_644_22 + var_644_29 and arg_641_1.time_ < var_644_22 + var_644_29 + arg_644_0 then
				arg_641_1.typewritter.percent = 1

				arg_641_1.typewritter:SetDirty()
				arg_641_1:ShowNextGo(true)
			end
		end
	end,
	Play413161158 = function(arg_645_0, arg_645_1)
		arg_645_1.time_ = 0
		arg_645_1.frameCnt_ = 0
		arg_645_1.state_ = "playing"
		arg_645_1.curTalkId_ = 413161158
		arg_645_1.duration_ = 7.4

		local var_645_0 = {
			zh = 7.40033333333333,
			ja = 6.46733333333333
		}
		local var_645_1 = manager.audio:GetLocalizationFlag()

		if var_645_0[var_645_1] ~= nil then
			arg_645_1.duration_ = var_645_0[var_645_1]
		end

		SetActive(arg_645_1.tipsGo_, false)

		function arg_645_1.onSingleLineFinish_()
			arg_645_1.onSingleLineUpdate_ = nil
			arg_645_1.onSingleLineFinish_ = nil
			arg_645_1.state_ = "waiting"
		end

		function arg_645_1.playNext_(arg_647_0)
			if arg_647_0 == 1 then
				arg_645_0:Play413161159(arg_645_1)
			end
		end

		function arg_645_1.onSingleLineUpdate_(arg_648_0)
			local var_648_0 = 2

			if var_648_0 < arg_645_1.time_ and arg_645_1.time_ <= var_648_0 + arg_648_0 then
				local var_648_1 = manager.ui.mainCamera.transform.localPosition
				local var_648_2 = Vector3.New(0, 0, 10) + Vector3.New(var_648_1.x, var_648_1.y, 0)
				local var_648_3 = arg_645_1.bgs_.ST0603

				var_648_3.transform.localPosition = var_648_2
				var_648_3.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_648_4 = var_648_3:GetComponent("SpriteRenderer")

				if var_648_4 and var_648_4.sprite then
					local var_648_5 = (var_648_3.transform.localPosition - var_648_1).z
					local var_648_6 = manager.ui.mainCameraCom_
					local var_648_7 = 2 * var_648_5 * Mathf.Tan(var_648_6.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_648_8 = var_648_7 * var_648_6.aspect
					local var_648_9 = var_648_4.sprite.bounds.size.x
					local var_648_10 = var_648_4.sprite.bounds.size.y
					local var_648_11 = var_648_8 / var_648_9
					local var_648_12 = var_648_7 / var_648_10
					local var_648_13 = var_648_12 < var_648_11 and var_648_11 or var_648_12

					var_648_3.transform.localScale = Vector3.New(var_648_13, var_648_13, 0)
				end

				for iter_648_0, iter_648_1 in pairs(arg_645_1.bgs_) do
					if iter_648_0 ~= "ST0603" then
						iter_648_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_648_14 = 4

			if var_648_14 < arg_645_1.time_ and arg_645_1.time_ <= var_648_14 + arg_648_0 then
				arg_645_1.allBtn_.enabled = false
			end

			local var_648_15 = 0.3

			if arg_645_1.time_ >= var_648_14 + var_648_15 and arg_645_1.time_ < var_648_14 + var_648_15 + arg_648_0 then
				arg_645_1.allBtn_.enabled = true
			end

			local var_648_16 = 0

			if var_648_16 < arg_645_1.time_ and arg_645_1.time_ <= var_648_16 + arg_648_0 then
				arg_645_1.mask_.enabled = true
				arg_645_1.mask_.raycastTarget = true

				arg_645_1:SetGaussion(false)
			end

			local var_648_17 = 2

			if var_648_16 <= arg_645_1.time_ and arg_645_1.time_ < var_648_16 + var_648_17 then
				local var_648_18 = (arg_645_1.time_ - var_648_16) / var_648_17
				local var_648_19 = Color.New(0, 0, 0)

				var_648_19.a = Mathf.Lerp(0, 1, var_648_18)
				arg_645_1.mask_.color = var_648_19
			end

			if arg_645_1.time_ >= var_648_16 + var_648_17 and arg_645_1.time_ < var_648_16 + var_648_17 + arg_648_0 then
				local var_648_20 = Color.New(0, 0, 0)

				var_648_20.a = 1
				arg_645_1.mask_.color = var_648_20
			end

			local var_648_21 = 2

			if var_648_21 < arg_645_1.time_ and arg_645_1.time_ <= var_648_21 + arg_648_0 then
				arg_645_1.mask_.enabled = true
				arg_645_1.mask_.raycastTarget = true

				arg_645_1:SetGaussion(false)
			end

			local var_648_22 = 2

			if var_648_21 <= arg_645_1.time_ and arg_645_1.time_ < var_648_21 + var_648_22 then
				local var_648_23 = (arg_645_1.time_ - var_648_21) / var_648_22
				local var_648_24 = Color.New(0, 0, 0)

				var_648_24.a = Mathf.Lerp(1, 0, var_648_23)
				arg_645_1.mask_.color = var_648_24
			end

			if arg_645_1.time_ >= var_648_21 + var_648_22 and arg_645_1.time_ < var_648_21 + var_648_22 + arg_648_0 then
				local var_648_25 = Color.New(0, 0, 0)
				local var_648_26 = 0

				arg_645_1.mask_.enabled = false
				var_648_25.a = var_648_26
				arg_645_1.mask_.color = var_648_25
			end

			local var_648_27 = arg_645_1.actors_["10022"].transform
			local var_648_28 = 2

			if var_648_28 < arg_645_1.time_ and arg_645_1.time_ <= var_648_28 + arg_648_0 then
				arg_645_1.var_.moveOldPos10022 = var_648_27.localPosition
				var_648_27.localScale = Vector3.New(1, 1, 1)

				arg_645_1:CheckSpriteTmpPos("10022", 7)

				local var_648_29 = var_648_27.childCount

				for iter_648_2 = 0, var_648_29 - 1 do
					local var_648_30 = var_648_27:GetChild(iter_648_2)

					if var_648_30.name == "" or not string.find(var_648_30.name, "split") then
						var_648_30.gameObject:SetActive(true)
					else
						var_648_30.gameObject:SetActive(false)
					end
				end
			end

			local var_648_31 = 0.001

			if var_648_28 <= arg_645_1.time_ and arg_645_1.time_ < var_648_28 + var_648_31 then
				local var_648_32 = (arg_645_1.time_ - var_648_28) / var_648_31
				local var_648_33 = Vector3.New(0, -2000, 0)

				var_648_27.localPosition = Vector3.Lerp(arg_645_1.var_.moveOldPos10022, var_648_33, var_648_32)
			end

			if arg_645_1.time_ >= var_648_28 + var_648_31 and arg_645_1.time_ < var_648_28 + var_648_31 + arg_648_0 then
				var_648_27.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_648_34 = arg_645_1.actors_["10093"].transform
			local var_648_35 = 2

			if var_648_35 < arg_645_1.time_ and arg_645_1.time_ <= var_648_35 + arg_648_0 then
				arg_645_1.var_.moveOldPos10093 = var_648_34.localPosition
				var_648_34.localScale = Vector3.New(1, 1, 1)

				arg_645_1:CheckSpriteTmpPos("10093", 7)

				local var_648_36 = var_648_34.childCount

				for iter_648_3 = 0, var_648_36 - 1 do
					local var_648_37 = var_648_34:GetChild(iter_648_3)

					if var_648_37.name == "" or not string.find(var_648_37.name, "split") then
						var_648_37.gameObject:SetActive(true)
					else
						var_648_37.gameObject:SetActive(false)
					end
				end
			end

			local var_648_38 = 0.001

			if var_648_35 <= arg_645_1.time_ and arg_645_1.time_ < var_648_35 + var_648_38 then
				local var_648_39 = (arg_645_1.time_ - var_648_35) / var_648_38
				local var_648_40 = Vector3.New(0, -2000, 0)

				var_648_34.localPosition = Vector3.Lerp(arg_645_1.var_.moveOldPos10093, var_648_40, var_648_39)
			end

			if arg_645_1.time_ >= var_648_35 + var_648_38 and arg_645_1.time_ < var_648_35 + var_648_38 + arg_648_0 then
				var_648_34.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_648_41 = arg_645_1.actors_["10094"].transform
			local var_648_42 = 3.7

			if var_648_42 < arg_645_1.time_ and arg_645_1.time_ <= var_648_42 + arg_648_0 then
				arg_645_1.var_.moveOldPos10094 = var_648_41.localPosition
				var_648_41.localScale = Vector3.New(1, 1, 1)

				arg_645_1:CheckSpriteTmpPos("10094", 2)

				local var_648_43 = var_648_41.childCount

				for iter_648_4 = 0, var_648_43 - 1 do
					local var_648_44 = var_648_41:GetChild(iter_648_4)

					if var_648_44.name == "split_4" or not string.find(var_648_44.name, "split") then
						var_648_44.gameObject:SetActive(true)
					else
						var_648_44.gameObject:SetActive(false)
					end
				end
			end

			local var_648_45 = 0.001

			if var_648_42 <= arg_645_1.time_ and arg_645_1.time_ < var_648_42 + var_648_45 then
				local var_648_46 = (arg_645_1.time_ - var_648_42) / var_648_45
				local var_648_47 = Vector3.New(-390, -340, -414)

				var_648_41.localPosition = Vector3.Lerp(arg_645_1.var_.moveOldPos10094, var_648_47, var_648_46)
			end

			if arg_645_1.time_ >= var_648_42 + var_648_45 and arg_645_1.time_ < var_648_42 + var_648_45 + arg_648_0 then
				var_648_41.localPosition = Vector3.New(-390, -340, -414)
			end

			local var_648_48 = arg_645_1.actors_["10094"]
			local var_648_49 = 3.7

			if var_648_49 < arg_645_1.time_ and arg_645_1.time_ <= var_648_49 + arg_648_0 and not isNil(var_648_48) and arg_645_1.var_.actorSpriteComps10094 == nil then
				arg_645_1.var_.actorSpriteComps10094 = var_648_48:GetComponentsInChildren(typeof(Image), true)
			end

			local var_648_50 = 2

			if var_648_49 <= arg_645_1.time_ and arg_645_1.time_ < var_648_49 + var_648_50 and not isNil(var_648_48) then
				local var_648_51 = (arg_645_1.time_ - var_648_49) / var_648_50

				if arg_645_1.var_.actorSpriteComps10094 then
					for iter_648_5, iter_648_6 in pairs(arg_645_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_648_6 then
							if arg_645_1.isInRecall_ then
								local var_648_52 = Mathf.Lerp(iter_648_6.color.r, arg_645_1.hightColor1.r, var_648_51)
								local var_648_53 = Mathf.Lerp(iter_648_6.color.g, arg_645_1.hightColor1.g, var_648_51)
								local var_648_54 = Mathf.Lerp(iter_648_6.color.b, arg_645_1.hightColor1.b, var_648_51)

								iter_648_6.color = Color.New(var_648_52, var_648_53, var_648_54)
							else
								local var_648_55 = Mathf.Lerp(iter_648_6.color.r, 1, var_648_51)

								iter_648_6.color = Color.New(var_648_55, var_648_55, var_648_55)
							end
						end
					end
				end
			end

			if arg_645_1.time_ >= var_648_49 + var_648_50 and arg_645_1.time_ < var_648_49 + var_648_50 + arg_648_0 and not isNil(var_648_48) and arg_645_1.var_.actorSpriteComps10094 then
				for iter_648_7, iter_648_8 in pairs(arg_645_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_648_8 then
						if arg_645_1.isInRecall_ then
							iter_648_8.color = arg_645_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_648_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_645_1.var_.actorSpriteComps10094 = nil
			end

			local var_648_56 = arg_645_1.actors_["10094"]
			local var_648_57 = 3.7

			if var_648_57 < arg_645_1.time_ and arg_645_1.time_ <= var_648_57 + arg_648_0 then
				local var_648_58 = var_648_56:GetComponentInChildren(typeof(CanvasGroup))

				if var_648_58 then
					arg_645_1.var_.alphaOldValue10094 = var_648_58.alpha
					arg_645_1.var_.characterEffect10094 = var_648_58
				end

				arg_645_1.var_.alphaOldValue10094 = 0
			end

			local var_648_59 = 0.234

			if var_648_57 <= arg_645_1.time_ and arg_645_1.time_ < var_648_57 + var_648_59 then
				local var_648_60 = (arg_645_1.time_ - var_648_57) / var_648_59
				local var_648_61 = Mathf.Lerp(arg_645_1.var_.alphaOldValue10094, 1, var_648_60)

				if arg_645_1.var_.characterEffect10094 then
					arg_645_1.var_.characterEffect10094.alpha = var_648_61
				end
			end

			if arg_645_1.time_ >= var_648_57 + var_648_59 and arg_645_1.time_ < var_648_57 + var_648_59 + arg_648_0 and arg_645_1.var_.characterEffect10094 then
				arg_645_1.var_.characterEffect10094.alpha = 1
			end

			if arg_645_1.frameCnt_ <= 1 then
				arg_645_1.dialog_:SetActive(false)
			end

			local var_648_62 = 4.06733333333333
			local var_648_63 = 0.35

			if var_648_62 < arg_645_1.time_ and arg_645_1.time_ <= var_648_62 + arg_648_0 then
				arg_645_1.talkMaxDuration = 0

				arg_645_1.dialog_:SetActive(true)

				local var_648_64 = LeanTween.value(arg_645_1.dialog_, 0, 1, 0.3)

				var_648_64:setOnUpdate(LuaHelper.FloatAction(function(arg_649_0)
					arg_645_1.dialogCg_.alpha = arg_649_0
				end))
				var_648_64:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_645_1.dialog_)
					var_648_64:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_645_1.duration_ = arg_645_1.duration_ + 0.3

				SetActive(arg_645_1.leftNameGo_, true)

				local var_648_65 = arg_645_1:FormatText(StoryNameCfg[259].name)

				arg_645_1.leftNameTxt_.text = var_648_65

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_645_1.leftNameTxt_.transform)

				arg_645_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_645_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_645_1:RecordName(arg_645_1.leftNameTxt_.text)
				SetActive(arg_645_1.iconTrs_.gameObject, false)
				arg_645_1.callingController_:SetSelectedState("normal")

				local var_648_66 = arg_645_1:GetWordFromCfg(413161158)
				local var_648_67 = arg_645_1:FormatText(var_648_66.content)

				arg_645_1.text_.text = var_648_67

				LuaForUtil.ClearLinePrefixSymbol(arg_645_1.text_)

				local var_648_68 = 14
				local var_648_69 = utf8.len(var_648_67)
				local var_648_70 = var_648_68 <= 0 and var_648_63 or var_648_63 * (var_648_69 / var_648_68)

				if var_648_70 > 0 and var_648_63 < var_648_70 then
					arg_645_1.talkMaxDuration = var_648_70
					var_648_62 = var_648_62 + 0.3

					if var_648_70 + var_648_62 > arg_645_1.duration_ then
						arg_645_1.duration_ = var_648_70 + var_648_62
					end
				end

				arg_645_1.text_.text = var_648_67
				arg_645_1.typewritter.percent = 0

				arg_645_1.typewritter:SetDirty()
				arg_645_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161158", "story_v_out_413161.awb") ~= 0 then
					local var_648_71 = manager.audio:GetVoiceLength("story_v_out_413161", "413161158", "story_v_out_413161.awb") / 1000

					if var_648_71 + var_648_62 > arg_645_1.duration_ then
						arg_645_1.duration_ = var_648_71 + var_648_62
					end

					if var_648_66.prefab_name ~= "" and arg_645_1.actors_[var_648_66.prefab_name] ~= nil then
						local var_648_72 = LuaForUtil.PlayVoiceWithCriLipsync(arg_645_1.actors_[var_648_66.prefab_name].transform, "story_v_out_413161", "413161158", "story_v_out_413161.awb")

						arg_645_1:RecordAudio("413161158", var_648_72)
						arg_645_1:RecordAudio("413161158", var_648_72)
					else
						arg_645_1:AudioAction("play", "voice", "story_v_out_413161", "413161158", "story_v_out_413161.awb")
					end

					arg_645_1:RecordHistoryTalkVoice("story_v_out_413161", "413161158", "story_v_out_413161.awb")
				end

				arg_645_1:RecordContent(arg_645_1.text_.text)
			end

			local var_648_73 = var_648_62 + 0.3
			local var_648_74 = math.max(var_648_63, arg_645_1.talkMaxDuration)

			if var_648_73 <= arg_645_1.time_ and arg_645_1.time_ < var_648_73 + var_648_74 then
				arg_645_1.typewritter.percent = (arg_645_1.time_ - var_648_73) / var_648_74

				arg_645_1.typewritter:SetDirty()
			end

			if arg_645_1.time_ >= var_648_73 + var_648_74 and arg_645_1.time_ < var_648_73 + var_648_74 + arg_648_0 then
				arg_645_1.typewritter.percent = 1

				arg_645_1.typewritter:SetDirty()
				arg_645_1:ShowNextGo(true)
			end
		end
	end,
	Play413161159 = function(arg_651_0, arg_651_1)
		arg_651_1.time_ = 0
		arg_651_1.frameCnt_ = 0
		arg_651_1.state_ = "playing"
		arg_651_1.curTalkId_ = 413161159
		arg_651_1.duration_ = 7.6

		local var_651_0 = {
			zh = 4.133,
			ja = 7.6
		}
		local var_651_1 = manager.audio:GetLocalizationFlag()

		if var_651_0[var_651_1] ~= nil then
			arg_651_1.duration_ = var_651_0[var_651_1]
		end

		SetActive(arg_651_1.tipsGo_, false)

		function arg_651_1.onSingleLineFinish_()
			arg_651_1.onSingleLineUpdate_ = nil
			arg_651_1.onSingleLineFinish_ = nil
			arg_651_1.state_ = "waiting"
		end

		function arg_651_1.playNext_(arg_653_0)
			if arg_653_0 == 1 then
				arg_651_0:Play413161160(arg_651_1)
			end
		end

		function arg_651_1.onSingleLineUpdate_(arg_654_0)
			local var_654_0 = arg_651_1.actors_["10092_1"].transform
			local var_654_1 = 0

			if var_654_1 < arg_651_1.time_ and arg_651_1.time_ <= var_654_1 + arg_654_0 then
				arg_651_1.var_.moveOldPos10092_1 = var_654_0.localPosition
				var_654_0.localScale = Vector3.New(1, 1, 1)

				arg_651_1:CheckSpriteTmpPos("10092_1", 4)

				local var_654_2 = var_654_0.childCount

				for iter_654_0 = 0, var_654_2 - 1 do
					local var_654_3 = var_654_0:GetChild(iter_654_0)

					if var_654_3.name == "" or not string.find(var_654_3.name, "split") then
						var_654_3.gameObject:SetActive(true)
					else
						var_654_3.gameObject:SetActive(false)
					end
				end
			end

			local var_654_4 = 0.001

			if var_654_1 <= arg_651_1.time_ and arg_651_1.time_ < var_654_1 + var_654_4 then
				local var_654_5 = (arg_651_1.time_ - var_654_1) / var_654_4
				local var_654_6 = Vector3.New(390, -300, -295)

				var_654_0.localPosition = Vector3.Lerp(arg_651_1.var_.moveOldPos10092_1, var_654_6, var_654_5)
			end

			if arg_651_1.time_ >= var_654_1 + var_654_4 and arg_651_1.time_ < var_654_1 + var_654_4 + arg_654_0 then
				var_654_0.localPosition = Vector3.New(390, -300, -295)
			end

			local var_654_7 = arg_651_1.actors_["10094"]
			local var_654_8 = 0

			if var_654_8 < arg_651_1.time_ and arg_651_1.time_ <= var_654_8 + arg_654_0 and not isNil(var_654_7) and arg_651_1.var_.actorSpriteComps10094 == nil then
				arg_651_1.var_.actorSpriteComps10094 = var_654_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_654_9 = 2

			if var_654_8 <= arg_651_1.time_ and arg_651_1.time_ < var_654_8 + var_654_9 and not isNil(var_654_7) then
				local var_654_10 = (arg_651_1.time_ - var_654_8) / var_654_9

				if arg_651_1.var_.actorSpriteComps10094 then
					for iter_654_1, iter_654_2 in pairs(arg_651_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_654_2 then
							if arg_651_1.isInRecall_ then
								local var_654_11 = Mathf.Lerp(iter_654_2.color.r, arg_651_1.hightColor2.r, var_654_10)
								local var_654_12 = Mathf.Lerp(iter_654_2.color.g, arg_651_1.hightColor2.g, var_654_10)
								local var_654_13 = Mathf.Lerp(iter_654_2.color.b, arg_651_1.hightColor2.b, var_654_10)

								iter_654_2.color = Color.New(var_654_11, var_654_12, var_654_13)
							else
								local var_654_14 = Mathf.Lerp(iter_654_2.color.r, 0.5, var_654_10)

								iter_654_2.color = Color.New(var_654_14, var_654_14, var_654_14)
							end
						end
					end
				end
			end

			if arg_651_1.time_ >= var_654_8 + var_654_9 and arg_651_1.time_ < var_654_8 + var_654_9 + arg_654_0 and not isNil(var_654_7) and arg_651_1.var_.actorSpriteComps10094 then
				for iter_654_3, iter_654_4 in pairs(arg_651_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_654_4 then
						if arg_651_1.isInRecall_ then
							iter_654_4.color = arg_651_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_654_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_651_1.var_.actorSpriteComps10094 = nil
			end

			local var_654_15 = arg_651_1.actors_["10092_1"]
			local var_654_16 = 0

			if var_654_16 < arg_651_1.time_ and arg_651_1.time_ <= var_654_16 + arg_654_0 and not isNil(var_654_15) and arg_651_1.var_.actorSpriteComps10092_1 == nil then
				arg_651_1.var_.actorSpriteComps10092_1 = var_654_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_654_17 = 2

			if var_654_16 <= arg_651_1.time_ and arg_651_1.time_ < var_654_16 + var_654_17 and not isNil(var_654_15) then
				local var_654_18 = (arg_651_1.time_ - var_654_16) / var_654_17

				if arg_651_1.var_.actorSpriteComps10092_1 then
					for iter_654_5, iter_654_6 in pairs(arg_651_1.var_.actorSpriteComps10092_1:ToTable()) do
						if iter_654_6 then
							if arg_651_1.isInRecall_ then
								local var_654_19 = Mathf.Lerp(iter_654_6.color.r, arg_651_1.hightColor1.r, var_654_18)
								local var_654_20 = Mathf.Lerp(iter_654_6.color.g, arg_651_1.hightColor1.g, var_654_18)
								local var_654_21 = Mathf.Lerp(iter_654_6.color.b, arg_651_1.hightColor1.b, var_654_18)

								iter_654_6.color = Color.New(var_654_19, var_654_20, var_654_21)
							else
								local var_654_22 = Mathf.Lerp(iter_654_6.color.r, 1, var_654_18)

								iter_654_6.color = Color.New(var_654_22, var_654_22, var_654_22)
							end
						end
					end
				end
			end

			if arg_651_1.time_ >= var_654_16 + var_654_17 and arg_651_1.time_ < var_654_16 + var_654_17 + arg_654_0 and not isNil(var_654_15) and arg_651_1.var_.actorSpriteComps10092_1 then
				for iter_654_7, iter_654_8 in pairs(arg_651_1.var_.actorSpriteComps10092_1:ToTable()) do
					if iter_654_8 then
						if arg_651_1.isInRecall_ then
							iter_654_8.color = arg_651_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_654_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_651_1.var_.actorSpriteComps10092_1 = nil
			end

			local var_654_23 = 0
			local var_654_24 = 0.525

			if var_654_23 < arg_651_1.time_ and arg_651_1.time_ <= var_654_23 + arg_654_0 then
				arg_651_1.talkMaxDuration = 0
				arg_651_1.dialogCg_.alpha = 1

				arg_651_1.dialog_:SetActive(true)
				SetActive(arg_651_1.leftNameGo_, true)

				local var_654_25 = arg_651_1:FormatText(StoryNameCfg[996].name)

				arg_651_1.leftNameTxt_.text = var_654_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_651_1.leftNameTxt_.transform)

				arg_651_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_651_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_651_1:RecordName(arg_651_1.leftNameTxt_.text)
				SetActive(arg_651_1.iconTrs_.gameObject, false)
				arg_651_1.callingController_:SetSelectedState("normal")

				local var_654_26 = arg_651_1:GetWordFromCfg(413161159)
				local var_654_27 = arg_651_1:FormatText(var_654_26.content)

				arg_651_1.text_.text = var_654_27

				LuaForUtil.ClearLinePrefixSymbol(arg_651_1.text_)

				local var_654_28 = 21
				local var_654_29 = utf8.len(var_654_27)
				local var_654_30 = var_654_28 <= 0 and var_654_24 or var_654_24 * (var_654_29 / var_654_28)

				if var_654_30 > 0 and var_654_24 < var_654_30 then
					arg_651_1.talkMaxDuration = var_654_30

					if var_654_30 + var_654_23 > arg_651_1.duration_ then
						arg_651_1.duration_ = var_654_30 + var_654_23
					end
				end

				arg_651_1.text_.text = var_654_27
				arg_651_1.typewritter.percent = 0

				arg_651_1.typewritter:SetDirty()
				arg_651_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161159", "story_v_out_413161.awb") ~= 0 then
					local var_654_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161159", "story_v_out_413161.awb") / 1000

					if var_654_31 + var_654_23 > arg_651_1.duration_ then
						arg_651_1.duration_ = var_654_31 + var_654_23
					end

					if var_654_26.prefab_name ~= "" and arg_651_1.actors_[var_654_26.prefab_name] ~= nil then
						local var_654_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_651_1.actors_[var_654_26.prefab_name].transform, "story_v_out_413161", "413161159", "story_v_out_413161.awb")

						arg_651_1:RecordAudio("413161159", var_654_32)
						arg_651_1:RecordAudio("413161159", var_654_32)
					else
						arg_651_1:AudioAction("play", "voice", "story_v_out_413161", "413161159", "story_v_out_413161.awb")
					end

					arg_651_1:RecordHistoryTalkVoice("story_v_out_413161", "413161159", "story_v_out_413161.awb")
				end

				arg_651_1:RecordContent(arg_651_1.text_.text)
			end

			local var_654_33 = math.max(var_654_24, arg_651_1.talkMaxDuration)

			if var_654_23 <= arg_651_1.time_ and arg_651_1.time_ < var_654_23 + var_654_33 then
				arg_651_1.typewritter.percent = (arg_651_1.time_ - var_654_23) / var_654_33

				arg_651_1.typewritter:SetDirty()
			end

			if arg_651_1.time_ >= var_654_23 + var_654_33 and arg_651_1.time_ < var_654_23 + var_654_33 + arg_654_0 then
				arg_651_1.typewritter.percent = 1

				arg_651_1.typewritter:SetDirty()
				arg_651_1:ShowNextGo(true)
			end
		end
	end,
	Play413161160 = function(arg_655_0, arg_655_1)
		arg_655_1.time_ = 0
		arg_655_1.frameCnt_ = 0
		arg_655_1.state_ = "playing"
		arg_655_1.curTalkId_ = 413161160
		arg_655_1.duration_ = 7.13

		local var_655_0 = {
			zh = 3.233,
			ja = 7.133
		}
		local var_655_1 = manager.audio:GetLocalizationFlag()

		if var_655_0[var_655_1] ~= nil then
			arg_655_1.duration_ = var_655_0[var_655_1]
		end

		SetActive(arg_655_1.tipsGo_, false)

		function arg_655_1.onSingleLineFinish_()
			arg_655_1.onSingleLineUpdate_ = nil
			arg_655_1.onSingleLineFinish_ = nil
			arg_655_1.state_ = "waiting"
		end

		function arg_655_1.playNext_(arg_657_0)
			if arg_657_0 == 1 then
				arg_655_0:Play413161161(arg_655_1)
			end
		end

		function arg_655_1.onSingleLineUpdate_(arg_658_0)
			local var_658_0 = arg_655_1.actors_["10094"]
			local var_658_1 = 0

			if var_658_1 < arg_655_1.time_ and arg_655_1.time_ <= var_658_1 + arg_658_0 and not isNil(var_658_0) and arg_655_1.var_.actorSpriteComps10094 == nil then
				arg_655_1.var_.actorSpriteComps10094 = var_658_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_658_2 = 2

			if var_658_1 <= arg_655_1.time_ and arg_655_1.time_ < var_658_1 + var_658_2 and not isNil(var_658_0) then
				local var_658_3 = (arg_655_1.time_ - var_658_1) / var_658_2

				if arg_655_1.var_.actorSpriteComps10094 then
					for iter_658_0, iter_658_1 in pairs(arg_655_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_658_1 then
							if arg_655_1.isInRecall_ then
								local var_658_4 = Mathf.Lerp(iter_658_1.color.r, arg_655_1.hightColor1.r, var_658_3)
								local var_658_5 = Mathf.Lerp(iter_658_1.color.g, arg_655_1.hightColor1.g, var_658_3)
								local var_658_6 = Mathf.Lerp(iter_658_1.color.b, arg_655_1.hightColor1.b, var_658_3)

								iter_658_1.color = Color.New(var_658_4, var_658_5, var_658_6)
							else
								local var_658_7 = Mathf.Lerp(iter_658_1.color.r, 1, var_658_3)

								iter_658_1.color = Color.New(var_658_7, var_658_7, var_658_7)
							end
						end
					end
				end
			end

			if arg_655_1.time_ >= var_658_1 + var_658_2 and arg_655_1.time_ < var_658_1 + var_658_2 + arg_658_0 and not isNil(var_658_0) and arg_655_1.var_.actorSpriteComps10094 then
				for iter_658_2, iter_658_3 in pairs(arg_655_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_658_3 then
						if arg_655_1.isInRecall_ then
							iter_658_3.color = arg_655_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_658_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_655_1.var_.actorSpriteComps10094 = nil
			end

			local var_658_8 = arg_655_1.actors_["10092_1"]
			local var_658_9 = 0

			if var_658_9 < arg_655_1.time_ and arg_655_1.time_ <= var_658_9 + arg_658_0 and not isNil(var_658_8) and arg_655_1.var_.actorSpriteComps10092_1 == nil then
				arg_655_1.var_.actorSpriteComps10092_1 = var_658_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_658_10 = 2

			if var_658_9 <= arg_655_1.time_ and arg_655_1.time_ < var_658_9 + var_658_10 and not isNil(var_658_8) then
				local var_658_11 = (arg_655_1.time_ - var_658_9) / var_658_10

				if arg_655_1.var_.actorSpriteComps10092_1 then
					for iter_658_4, iter_658_5 in pairs(arg_655_1.var_.actorSpriteComps10092_1:ToTable()) do
						if iter_658_5 then
							if arg_655_1.isInRecall_ then
								local var_658_12 = Mathf.Lerp(iter_658_5.color.r, arg_655_1.hightColor2.r, var_658_11)
								local var_658_13 = Mathf.Lerp(iter_658_5.color.g, arg_655_1.hightColor2.g, var_658_11)
								local var_658_14 = Mathf.Lerp(iter_658_5.color.b, arg_655_1.hightColor2.b, var_658_11)

								iter_658_5.color = Color.New(var_658_12, var_658_13, var_658_14)
							else
								local var_658_15 = Mathf.Lerp(iter_658_5.color.r, 0.5, var_658_11)

								iter_658_5.color = Color.New(var_658_15, var_658_15, var_658_15)
							end
						end
					end
				end
			end

			if arg_655_1.time_ >= var_658_9 + var_658_10 and arg_655_1.time_ < var_658_9 + var_658_10 + arg_658_0 and not isNil(var_658_8) and arg_655_1.var_.actorSpriteComps10092_1 then
				for iter_658_6, iter_658_7 in pairs(arg_655_1.var_.actorSpriteComps10092_1:ToTable()) do
					if iter_658_7 then
						if arg_655_1.isInRecall_ then
							iter_658_7.color = arg_655_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_658_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_655_1.var_.actorSpriteComps10092_1 = nil
			end

			local var_658_16 = 0
			local var_658_17 = 0.35

			if var_658_16 < arg_655_1.time_ and arg_655_1.time_ <= var_658_16 + arg_658_0 then
				arg_655_1.talkMaxDuration = 0
				arg_655_1.dialogCg_.alpha = 1

				arg_655_1.dialog_:SetActive(true)
				SetActive(arg_655_1.leftNameGo_, true)

				local var_658_18 = arg_655_1:FormatText(StoryNameCfg[259].name)

				arg_655_1.leftNameTxt_.text = var_658_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_655_1.leftNameTxt_.transform)

				arg_655_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_655_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_655_1:RecordName(arg_655_1.leftNameTxt_.text)
				SetActive(arg_655_1.iconTrs_.gameObject, false)
				arg_655_1.callingController_:SetSelectedState("normal")

				local var_658_19 = arg_655_1:GetWordFromCfg(413161160)
				local var_658_20 = arg_655_1:FormatText(var_658_19.content)

				arg_655_1.text_.text = var_658_20

				LuaForUtil.ClearLinePrefixSymbol(arg_655_1.text_)

				local var_658_21 = 14
				local var_658_22 = utf8.len(var_658_20)
				local var_658_23 = var_658_21 <= 0 and var_658_17 or var_658_17 * (var_658_22 / var_658_21)

				if var_658_23 > 0 and var_658_17 < var_658_23 then
					arg_655_1.talkMaxDuration = var_658_23

					if var_658_23 + var_658_16 > arg_655_1.duration_ then
						arg_655_1.duration_ = var_658_23 + var_658_16
					end
				end

				arg_655_1.text_.text = var_658_20
				arg_655_1.typewritter.percent = 0

				arg_655_1.typewritter:SetDirty()
				arg_655_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161160", "story_v_out_413161.awb") ~= 0 then
					local var_658_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161160", "story_v_out_413161.awb") / 1000

					if var_658_24 + var_658_16 > arg_655_1.duration_ then
						arg_655_1.duration_ = var_658_24 + var_658_16
					end

					if var_658_19.prefab_name ~= "" and arg_655_1.actors_[var_658_19.prefab_name] ~= nil then
						local var_658_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_655_1.actors_[var_658_19.prefab_name].transform, "story_v_out_413161", "413161160", "story_v_out_413161.awb")

						arg_655_1:RecordAudio("413161160", var_658_25)
						arg_655_1:RecordAudio("413161160", var_658_25)
					else
						arg_655_1:AudioAction("play", "voice", "story_v_out_413161", "413161160", "story_v_out_413161.awb")
					end

					arg_655_1:RecordHistoryTalkVoice("story_v_out_413161", "413161160", "story_v_out_413161.awb")
				end

				arg_655_1:RecordContent(arg_655_1.text_.text)
			end

			local var_658_26 = math.max(var_658_17, arg_655_1.talkMaxDuration)

			if var_658_16 <= arg_655_1.time_ and arg_655_1.time_ < var_658_16 + var_658_26 then
				arg_655_1.typewritter.percent = (arg_655_1.time_ - var_658_16) / var_658_26

				arg_655_1.typewritter:SetDirty()
			end

			if arg_655_1.time_ >= var_658_16 + var_658_26 and arg_655_1.time_ < var_658_16 + var_658_26 + arg_658_0 then
				arg_655_1.typewritter.percent = 1

				arg_655_1.typewritter:SetDirty()
				arg_655_1:ShowNextGo(true)
			end
		end
	end,
	Play413161161 = function(arg_659_0, arg_659_1)
		arg_659_1.time_ = 0
		arg_659_1.frameCnt_ = 0
		arg_659_1.state_ = "playing"
		arg_659_1.curTalkId_ = 413161161
		arg_659_1.duration_ = 9.87

		local var_659_0 = {
			zh = 4.8,
			ja = 9.866
		}
		local var_659_1 = manager.audio:GetLocalizationFlag()

		if var_659_0[var_659_1] ~= nil then
			arg_659_1.duration_ = var_659_0[var_659_1]
		end

		SetActive(arg_659_1.tipsGo_, false)

		function arg_659_1.onSingleLineFinish_()
			arg_659_1.onSingleLineUpdate_ = nil
			arg_659_1.onSingleLineFinish_ = nil
			arg_659_1.state_ = "waiting"
		end

		function arg_659_1.playNext_(arg_661_0)
			if arg_661_0 == 1 then
				arg_659_0:Play413161162(arg_659_1)
			end
		end

		function arg_659_1.onSingleLineUpdate_(arg_662_0)
			local var_662_0 = 0
			local var_662_1 = 0.5

			if var_662_0 < arg_659_1.time_ and arg_659_1.time_ <= var_662_0 + arg_662_0 then
				arg_659_1.talkMaxDuration = 0
				arg_659_1.dialogCg_.alpha = 1

				arg_659_1.dialog_:SetActive(true)
				SetActive(arg_659_1.leftNameGo_, true)

				local var_662_2 = arg_659_1:FormatText(StoryNameCfg[259].name)

				arg_659_1.leftNameTxt_.text = var_662_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_659_1.leftNameTxt_.transform)

				arg_659_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_659_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_659_1:RecordName(arg_659_1.leftNameTxt_.text)
				SetActive(arg_659_1.iconTrs_.gameObject, false)
				arg_659_1.callingController_:SetSelectedState("normal")

				local var_662_3 = arg_659_1:GetWordFromCfg(413161161)
				local var_662_4 = arg_659_1:FormatText(var_662_3.content)

				arg_659_1.text_.text = var_662_4

				LuaForUtil.ClearLinePrefixSymbol(arg_659_1.text_)

				local var_662_5 = 20
				local var_662_6 = utf8.len(var_662_4)
				local var_662_7 = var_662_5 <= 0 and var_662_1 or var_662_1 * (var_662_6 / var_662_5)

				if var_662_7 > 0 and var_662_1 < var_662_7 then
					arg_659_1.talkMaxDuration = var_662_7

					if var_662_7 + var_662_0 > arg_659_1.duration_ then
						arg_659_1.duration_ = var_662_7 + var_662_0
					end
				end

				arg_659_1.text_.text = var_662_4
				arg_659_1.typewritter.percent = 0

				arg_659_1.typewritter:SetDirty()
				arg_659_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161161", "story_v_out_413161.awb") ~= 0 then
					local var_662_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161161", "story_v_out_413161.awb") / 1000

					if var_662_8 + var_662_0 > arg_659_1.duration_ then
						arg_659_1.duration_ = var_662_8 + var_662_0
					end

					if var_662_3.prefab_name ~= "" and arg_659_1.actors_[var_662_3.prefab_name] ~= nil then
						local var_662_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_659_1.actors_[var_662_3.prefab_name].transform, "story_v_out_413161", "413161161", "story_v_out_413161.awb")

						arg_659_1:RecordAudio("413161161", var_662_9)
						arg_659_1:RecordAudio("413161161", var_662_9)
					else
						arg_659_1:AudioAction("play", "voice", "story_v_out_413161", "413161161", "story_v_out_413161.awb")
					end

					arg_659_1:RecordHistoryTalkVoice("story_v_out_413161", "413161161", "story_v_out_413161.awb")
				end

				arg_659_1:RecordContent(arg_659_1.text_.text)
			end

			local var_662_10 = math.max(var_662_1, arg_659_1.talkMaxDuration)

			if var_662_0 <= arg_659_1.time_ and arg_659_1.time_ < var_662_0 + var_662_10 then
				arg_659_1.typewritter.percent = (arg_659_1.time_ - var_662_0) / var_662_10

				arg_659_1.typewritter:SetDirty()
			end

			if arg_659_1.time_ >= var_662_0 + var_662_10 and arg_659_1.time_ < var_662_0 + var_662_10 + arg_662_0 then
				arg_659_1.typewritter.percent = 1

				arg_659_1.typewritter:SetDirty()
				arg_659_1:ShowNextGo(true)
			end
		end
	end,
	Play413161162 = function(arg_663_0, arg_663_1)
		arg_663_1.time_ = 0
		arg_663_1.frameCnt_ = 0
		arg_663_1.state_ = "playing"
		arg_663_1.curTalkId_ = 413161162
		arg_663_1.duration_ = 7.93

		local var_663_0 = {
			zh = 3.733,
			ja = 7.933
		}
		local var_663_1 = manager.audio:GetLocalizationFlag()

		if var_663_0[var_663_1] ~= nil then
			arg_663_1.duration_ = var_663_0[var_663_1]
		end

		SetActive(arg_663_1.tipsGo_, false)

		function arg_663_1.onSingleLineFinish_()
			arg_663_1.onSingleLineUpdate_ = nil
			arg_663_1.onSingleLineFinish_ = nil
			arg_663_1.state_ = "waiting"
		end

		function arg_663_1.playNext_(arg_665_0)
			if arg_665_0 == 1 then
				arg_663_0:Play413161163(arg_663_1)
			end
		end

		function arg_663_1.onSingleLineUpdate_(arg_666_0)
			local var_666_0 = arg_663_1.actors_["10092_1"].transform
			local var_666_1 = 0

			if var_666_1 < arg_663_1.time_ and arg_663_1.time_ <= var_666_1 + arg_666_0 then
				arg_663_1.var_.moveOldPos10092_1 = var_666_0.localPosition
				var_666_0.localScale = Vector3.New(1, 1, 1)

				arg_663_1:CheckSpriteTmpPos("10092_1", 4)

				local var_666_2 = var_666_0.childCount

				for iter_666_0 = 0, var_666_2 - 1 do
					local var_666_3 = var_666_0:GetChild(iter_666_0)

					if var_666_3.name == "split_2" or not string.find(var_666_3.name, "split") then
						var_666_3.gameObject:SetActive(true)
					else
						var_666_3.gameObject:SetActive(false)
					end
				end
			end

			local var_666_4 = 0.001

			if var_666_1 <= arg_663_1.time_ and arg_663_1.time_ < var_666_1 + var_666_4 then
				local var_666_5 = (arg_663_1.time_ - var_666_1) / var_666_4
				local var_666_6 = Vector3.New(390, -300, -295)

				var_666_0.localPosition = Vector3.Lerp(arg_663_1.var_.moveOldPos10092_1, var_666_6, var_666_5)
			end

			if arg_663_1.time_ >= var_666_1 + var_666_4 and arg_663_1.time_ < var_666_1 + var_666_4 + arg_666_0 then
				var_666_0.localPosition = Vector3.New(390, -300, -295)
			end

			local var_666_7 = arg_663_1.actors_["10094"]
			local var_666_8 = 0

			if var_666_8 < arg_663_1.time_ and arg_663_1.time_ <= var_666_8 + arg_666_0 and not isNil(var_666_7) and arg_663_1.var_.actorSpriteComps10094 == nil then
				arg_663_1.var_.actorSpriteComps10094 = var_666_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_666_9 = 2

			if var_666_8 <= arg_663_1.time_ and arg_663_1.time_ < var_666_8 + var_666_9 and not isNil(var_666_7) then
				local var_666_10 = (arg_663_1.time_ - var_666_8) / var_666_9

				if arg_663_1.var_.actorSpriteComps10094 then
					for iter_666_1, iter_666_2 in pairs(arg_663_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_666_2 then
							if arg_663_1.isInRecall_ then
								local var_666_11 = Mathf.Lerp(iter_666_2.color.r, arg_663_1.hightColor2.r, var_666_10)
								local var_666_12 = Mathf.Lerp(iter_666_2.color.g, arg_663_1.hightColor2.g, var_666_10)
								local var_666_13 = Mathf.Lerp(iter_666_2.color.b, arg_663_1.hightColor2.b, var_666_10)

								iter_666_2.color = Color.New(var_666_11, var_666_12, var_666_13)
							else
								local var_666_14 = Mathf.Lerp(iter_666_2.color.r, 0.5, var_666_10)

								iter_666_2.color = Color.New(var_666_14, var_666_14, var_666_14)
							end
						end
					end
				end
			end

			if arg_663_1.time_ >= var_666_8 + var_666_9 and arg_663_1.time_ < var_666_8 + var_666_9 + arg_666_0 and not isNil(var_666_7) and arg_663_1.var_.actorSpriteComps10094 then
				for iter_666_3, iter_666_4 in pairs(arg_663_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_666_4 then
						if arg_663_1.isInRecall_ then
							iter_666_4.color = arg_663_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_666_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_663_1.var_.actorSpriteComps10094 = nil
			end

			local var_666_15 = arg_663_1.actors_["10092_1"]
			local var_666_16 = 0

			if var_666_16 < arg_663_1.time_ and arg_663_1.time_ <= var_666_16 + arg_666_0 and not isNil(var_666_15) and arg_663_1.var_.actorSpriteComps10092_1 == nil then
				arg_663_1.var_.actorSpriteComps10092_1 = var_666_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_666_17 = 2

			if var_666_16 <= arg_663_1.time_ and arg_663_1.time_ < var_666_16 + var_666_17 and not isNil(var_666_15) then
				local var_666_18 = (arg_663_1.time_ - var_666_16) / var_666_17

				if arg_663_1.var_.actorSpriteComps10092_1 then
					for iter_666_5, iter_666_6 in pairs(arg_663_1.var_.actorSpriteComps10092_1:ToTable()) do
						if iter_666_6 then
							if arg_663_1.isInRecall_ then
								local var_666_19 = Mathf.Lerp(iter_666_6.color.r, arg_663_1.hightColor1.r, var_666_18)
								local var_666_20 = Mathf.Lerp(iter_666_6.color.g, arg_663_1.hightColor1.g, var_666_18)
								local var_666_21 = Mathf.Lerp(iter_666_6.color.b, arg_663_1.hightColor1.b, var_666_18)

								iter_666_6.color = Color.New(var_666_19, var_666_20, var_666_21)
							else
								local var_666_22 = Mathf.Lerp(iter_666_6.color.r, 1, var_666_18)

								iter_666_6.color = Color.New(var_666_22, var_666_22, var_666_22)
							end
						end
					end
				end
			end

			if arg_663_1.time_ >= var_666_16 + var_666_17 and arg_663_1.time_ < var_666_16 + var_666_17 + arg_666_0 and not isNil(var_666_15) and arg_663_1.var_.actorSpriteComps10092_1 then
				for iter_666_7, iter_666_8 in pairs(arg_663_1.var_.actorSpriteComps10092_1:ToTable()) do
					if iter_666_8 then
						if arg_663_1.isInRecall_ then
							iter_666_8.color = arg_663_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_666_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_663_1.var_.actorSpriteComps10092_1 = nil
			end

			local var_666_23 = 0
			local var_666_24 = 0.55

			if var_666_23 < arg_663_1.time_ and arg_663_1.time_ <= var_666_23 + arg_666_0 then
				arg_663_1.talkMaxDuration = 0
				arg_663_1.dialogCg_.alpha = 1

				arg_663_1.dialog_:SetActive(true)
				SetActive(arg_663_1.leftNameGo_, true)

				local var_666_25 = arg_663_1:FormatText(StoryNameCfg[996].name)

				arg_663_1.leftNameTxt_.text = var_666_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_663_1.leftNameTxt_.transform)

				arg_663_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_663_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_663_1:RecordName(arg_663_1.leftNameTxt_.text)
				SetActive(arg_663_1.iconTrs_.gameObject, false)
				arg_663_1.callingController_:SetSelectedState("normal")

				local var_666_26 = arg_663_1:GetWordFromCfg(413161162)
				local var_666_27 = arg_663_1:FormatText(var_666_26.content)

				arg_663_1.text_.text = var_666_27

				LuaForUtil.ClearLinePrefixSymbol(arg_663_1.text_)

				local var_666_28 = 22
				local var_666_29 = utf8.len(var_666_27)
				local var_666_30 = var_666_28 <= 0 and var_666_24 or var_666_24 * (var_666_29 / var_666_28)

				if var_666_30 > 0 and var_666_24 < var_666_30 then
					arg_663_1.talkMaxDuration = var_666_30

					if var_666_30 + var_666_23 > arg_663_1.duration_ then
						arg_663_1.duration_ = var_666_30 + var_666_23
					end
				end

				arg_663_1.text_.text = var_666_27
				arg_663_1.typewritter.percent = 0

				arg_663_1.typewritter:SetDirty()
				arg_663_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161162", "story_v_out_413161.awb") ~= 0 then
					local var_666_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161162", "story_v_out_413161.awb") / 1000

					if var_666_31 + var_666_23 > arg_663_1.duration_ then
						arg_663_1.duration_ = var_666_31 + var_666_23
					end

					if var_666_26.prefab_name ~= "" and arg_663_1.actors_[var_666_26.prefab_name] ~= nil then
						local var_666_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_663_1.actors_[var_666_26.prefab_name].transform, "story_v_out_413161", "413161162", "story_v_out_413161.awb")

						arg_663_1:RecordAudio("413161162", var_666_32)
						arg_663_1:RecordAudio("413161162", var_666_32)
					else
						arg_663_1:AudioAction("play", "voice", "story_v_out_413161", "413161162", "story_v_out_413161.awb")
					end

					arg_663_1:RecordHistoryTalkVoice("story_v_out_413161", "413161162", "story_v_out_413161.awb")
				end

				arg_663_1:RecordContent(arg_663_1.text_.text)
			end

			local var_666_33 = math.max(var_666_24, arg_663_1.talkMaxDuration)

			if var_666_23 <= arg_663_1.time_ and arg_663_1.time_ < var_666_23 + var_666_33 then
				arg_663_1.typewritter.percent = (arg_663_1.time_ - var_666_23) / var_666_33

				arg_663_1.typewritter:SetDirty()
			end

			if arg_663_1.time_ >= var_666_23 + var_666_33 and arg_663_1.time_ < var_666_23 + var_666_33 + arg_666_0 then
				arg_663_1.typewritter.percent = 1

				arg_663_1.typewritter:SetDirty()
				arg_663_1:ShowNextGo(true)
			end
		end
	end,
	Play413161163 = function(arg_667_0, arg_667_1)
		arg_667_1.time_ = 0
		arg_667_1.frameCnt_ = 0
		arg_667_1.state_ = "playing"
		arg_667_1.curTalkId_ = 413161163
		arg_667_1.duration_ = 9.5

		local var_667_0 = {
			zh = 8.966,
			ja = 9.5
		}
		local var_667_1 = manager.audio:GetLocalizationFlag()

		if var_667_0[var_667_1] ~= nil then
			arg_667_1.duration_ = var_667_0[var_667_1]
		end

		SetActive(arg_667_1.tipsGo_, false)

		function arg_667_1.onSingleLineFinish_()
			arg_667_1.onSingleLineUpdate_ = nil
			arg_667_1.onSingleLineFinish_ = nil
			arg_667_1.state_ = "waiting"
		end

		function arg_667_1.playNext_(arg_669_0)
			if arg_669_0 == 1 then
				arg_667_0:Play413161164(arg_667_1)
			end
		end

		function arg_667_1.onSingleLineUpdate_(arg_670_0)
			local var_670_0 = arg_667_1.actors_["10092_1"].transform
			local var_670_1 = 0

			if var_670_1 < arg_667_1.time_ and arg_667_1.time_ <= var_670_1 + arg_670_0 then
				arg_667_1.var_.moveOldPos10092_1 = var_670_0.localPosition
				var_670_0.localScale = Vector3.New(1, 1, 1)

				arg_667_1:CheckSpriteTmpPos("10092_1", 4)

				local var_670_2 = var_670_0.childCount

				for iter_670_0 = 0, var_670_2 - 1 do
					local var_670_3 = var_670_0:GetChild(iter_670_0)

					if var_670_3.name == "split_1_1" or not string.find(var_670_3.name, "split") then
						var_670_3.gameObject:SetActive(true)
					else
						var_670_3.gameObject:SetActive(false)
					end
				end
			end

			local var_670_4 = 0.001

			if var_670_1 <= arg_667_1.time_ and arg_667_1.time_ < var_670_1 + var_670_4 then
				local var_670_5 = (arg_667_1.time_ - var_670_1) / var_670_4
				local var_670_6 = Vector3.New(390, -300, -295)

				var_670_0.localPosition = Vector3.Lerp(arg_667_1.var_.moveOldPos10092_1, var_670_6, var_670_5)
			end

			if arg_667_1.time_ >= var_670_1 + var_670_4 and arg_667_1.time_ < var_670_1 + var_670_4 + arg_670_0 then
				var_670_0.localPosition = Vector3.New(390, -300, -295)
			end

			local var_670_7 = 0
			local var_670_8 = 1.025

			if var_670_7 < arg_667_1.time_ and arg_667_1.time_ <= var_670_7 + arg_670_0 then
				arg_667_1.talkMaxDuration = 0
				arg_667_1.dialogCg_.alpha = 1

				arg_667_1.dialog_:SetActive(true)
				SetActive(arg_667_1.leftNameGo_, true)

				local var_670_9 = arg_667_1:FormatText(StoryNameCfg[996].name)

				arg_667_1.leftNameTxt_.text = var_670_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_667_1.leftNameTxt_.transform)

				arg_667_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_667_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_667_1:RecordName(arg_667_1.leftNameTxt_.text)
				SetActive(arg_667_1.iconTrs_.gameObject, false)
				arg_667_1.callingController_:SetSelectedState("normal")

				local var_670_10 = arg_667_1:GetWordFromCfg(413161163)
				local var_670_11 = arg_667_1:FormatText(var_670_10.content)

				arg_667_1.text_.text = var_670_11

				LuaForUtil.ClearLinePrefixSymbol(arg_667_1.text_)

				local var_670_12 = 41
				local var_670_13 = utf8.len(var_670_11)
				local var_670_14 = var_670_12 <= 0 and var_670_8 or var_670_8 * (var_670_13 / var_670_12)

				if var_670_14 > 0 and var_670_8 < var_670_14 then
					arg_667_1.talkMaxDuration = var_670_14

					if var_670_14 + var_670_7 > arg_667_1.duration_ then
						arg_667_1.duration_ = var_670_14 + var_670_7
					end
				end

				arg_667_1.text_.text = var_670_11
				arg_667_1.typewritter.percent = 0

				arg_667_1.typewritter:SetDirty()
				arg_667_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161163", "story_v_out_413161.awb") ~= 0 then
					local var_670_15 = manager.audio:GetVoiceLength("story_v_out_413161", "413161163", "story_v_out_413161.awb") / 1000

					if var_670_15 + var_670_7 > arg_667_1.duration_ then
						arg_667_1.duration_ = var_670_15 + var_670_7
					end

					if var_670_10.prefab_name ~= "" and arg_667_1.actors_[var_670_10.prefab_name] ~= nil then
						local var_670_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_667_1.actors_[var_670_10.prefab_name].transform, "story_v_out_413161", "413161163", "story_v_out_413161.awb")

						arg_667_1:RecordAudio("413161163", var_670_16)
						arg_667_1:RecordAudio("413161163", var_670_16)
					else
						arg_667_1:AudioAction("play", "voice", "story_v_out_413161", "413161163", "story_v_out_413161.awb")
					end

					arg_667_1:RecordHistoryTalkVoice("story_v_out_413161", "413161163", "story_v_out_413161.awb")
				end

				arg_667_1:RecordContent(arg_667_1.text_.text)
			end

			local var_670_17 = math.max(var_670_8, arg_667_1.talkMaxDuration)

			if var_670_7 <= arg_667_1.time_ and arg_667_1.time_ < var_670_7 + var_670_17 then
				arg_667_1.typewritter.percent = (arg_667_1.time_ - var_670_7) / var_670_17

				arg_667_1.typewritter:SetDirty()
			end

			if arg_667_1.time_ >= var_670_7 + var_670_17 and arg_667_1.time_ < var_670_7 + var_670_17 + arg_670_0 then
				arg_667_1.typewritter.percent = 1

				arg_667_1.typewritter:SetDirty()
				arg_667_1:ShowNextGo(true)
			end
		end
	end,
	Play413161164 = function(arg_671_0, arg_671_1)
		arg_671_1.time_ = 0
		arg_671_1.frameCnt_ = 0
		arg_671_1.state_ = "playing"
		arg_671_1.curTalkId_ = 413161164
		arg_671_1.duration_ = 8.47

		local var_671_0 = {
			zh = 5.4,
			ja = 8.466
		}
		local var_671_1 = manager.audio:GetLocalizationFlag()

		if var_671_0[var_671_1] ~= nil then
			arg_671_1.duration_ = var_671_0[var_671_1]
		end

		SetActive(arg_671_1.tipsGo_, false)

		function arg_671_1.onSingleLineFinish_()
			arg_671_1.onSingleLineUpdate_ = nil
			arg_671_1.onSingleLineFinish_ = nil
			arg_671_1.state_ = "waiting"
		end

		function arg_671_1.playNext_(arg_673_0)
			if arg_673_0 == 1 then
				arg_671_0:Play413161165(arg_671_1)
			end
		end

		function arg_671_1.onSingleLineUpdate_(arg_674_0)
			local var_674_0 = 0
			local var_674_1 = 0.775

			if var_674_0 < arg_671_1.time_ and arg_671_1.time_ <= var_674_0 + arg_674_0 then
				arg_671_1.talkMaxDuration = 0
				arg_671_1.dialogCg_.alpha = 1

				arg_671_1.dialog_:SetActive(true)
				SetActive(arg_671_1.leftNameGo_, true)

				local var_674_2 = arg_671_1:FormatText(StoryNameCfg[996].name)

				arg_671_1.leftNameTxt_.text = var_674_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_671_1.leftNameTxt_.transform)

				arg_671_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_671_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_671_1:RecordName(arg_671_1.leftNameTxt_.text)
				SetActive(arg_671_1.iconTrs_.gameObject, false)
				arg_671_1.callingController_:SetSelectedState("normal")

				local var_674_3 = arg_671_1:GetWordFromCfg(413161164)
				local var_674_4 = arg_671_1:FormatText(var_674_3.content)

				arg_671_1.text_.text = var_674_4

				LuaForUtil.ClearLinePrefixSymbol(arg_671_1.text_)

				local var_674_5 = 31
				local var_674_6 = utf8.len(var_674_4)
				local var_674_7 = var_674_5 <= 0 and var_674_1 or var_674_1 * (var_674_6 / var_674_5)

				if var_674_7 > 0 and var_674_1 < var_674_7 then
					arg_671_1.talkMaxDuration = var_674_7

					if var_674_7 + var_674_0 > arg_671_1.duration_ then
						arg_671_1.duration_ = var_674_7 + var_674_0
					end
				end

				arg_671_1.text_.text = var_674_4
				arg_671_1.typewritter.percent = 0

				arg_671_1.typewritter:SetDirty()
				arg_671_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161164", "story_v_out_413161.awb") ~= 0 then
					local var_674_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161164", "story_v_out_413161.awb") / 1000

					if var_674_8 + var_674_0 > arg_671_1.duration_ then
						arg_671_1.duration_ = var_674_8 + var_674_0
					end

					if var_674_3.prefab_name ~= "" and arg_671_1.actors_[var_674_3.prefab_name] ~= nil then
						local var_674_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_671_1.actors_[var_674_3.prefab_name].transform, "story_v_out_413161", "413161164", "story_v_out_413161.awb")

						arg_671_1:RecordAudio("413161164", var_674_9)
						arg_671_1:RecordAudio("413161164", var_674_9)
					else
						arg_671_1:AudioAction("play", "voice", "story_v_out_413161", "413161164", "story_v_out_413161.awb")
					end

					arg_671_1:RecordHistoryTalkVoice("story_v_out_413161", "413161164", "story_v_out_413161.awb")
				end

				arg_671_1:RecordContent(arg_671_1.text_.text)
			end

			local var_674_10 = math.max(var_674_1, arg_671_1.talkMaxDuration)

			if var_674_0 <= arg_671_1.time_ and arg_671_1.time_ < var_674_0 + var_674_10 then
				arg_671_1.typewritter.percent = (arg_671_1.time_ - var_674_0) / var_674_10

				arg_671_1.typewritter:SetDirty()
			end

			if arg_671_1.time_ >= var_674_0 + var_674_10 and arg_671_1.time_ < var_674_0 + var_674_10 + arg_674_0 then
				arg_671_1.typewritter.percent = 1

				arg_671_1.typewritter:SetDirty()
				arg_671_1:ShowNextGo(true)
			end
		end
	end,
	Play413161165 = function(arg_675_0, arg_675_1)
		arg_675_1.time_ = 0
		arg_675_1.frameCnt_ = 0
		arg_675_1.state_ = "playing"
		arg_675_1.curTalkId_ = 413161165
		arg_675_1.duration_ = 9.7

		local var_675_0 = {
			zh = 4.1,
			ja = 9.7
		}
		local var_675_1 = manager.audio:GetLocalizationFlag()

		if var_675_0[var_675_1] ~= nil then
			arg_675_1.duration_ = var_675_0[var_675_1]
		end

		SetActive(arg_675_1.tipsGo_, false)

		function arg_675_1.onSingleLineFinish_()
			arg_675_1.onSingleLineUpdate_ = nil
			arg_675_1.onSingleLineFinish_ = nil
			arg_675_1.state_ = "waiting"
		end

		function arg_675_1.playNext_(arg_677_0)
			if arg_677_0 == 1 then
				arg_675_0:Play413161166(arg_675_1)
			end
		end

		function arg_675_1.onSingleLineUpdate_(arg_678_0)
			local var_678_0 = arg_675_1.actors_["10094"].transform
			local var_678_1 = 0

			if var_678_1 < arg_675_1.time_ and arg_675_1.time_ <= var_678_1 + arg_678_0 then
				arg_675_1.var_.moveOldPos10094 = var_678_0.localPosition
				var_678_0.localScale = Vector3.New(1, 1, 1)

				arg_675_1:CheckSpriteTmpPos("10094", 2)

				local var_678_2 = var_678_0.childCount

				for iter_678_0 = 0, var_678_2 - 1 do
					local var_678_3 = var_678_0:GetChild(iter_678_0)

					if var_678_3.name == "" or not string.find(var_678_3.name, "split") then
						var_678_3.gameObject:SetActive(true)
					else
						var_678_3.gameObject:SetActive(false)
					end
				end
			end

			local var_678_4 = 0.001

			if var_678_1 <= arg_675_1.time_ and arg_675_1.time_ < var_678_1 + var_678_4 then
				local var_678_5 = (arg_675_1.time_ - var_678_1) / var_678_4
				local var_678_6 = Vector3.New(-390, -340, -414)

				var_678_0.localPosition = Vector3.Lerp(arg_675_1.var_.moveOldPos10094, var_678_6, var_678_5)
			end

			if arg_675_1.time_ >= var_678_1 + var_678_4 and arg_675_1.time_ < var_678_1 + var_678_4 + arg_678_0 then
				var_678_0.localPosition = Vector3.New(-390, -340, -414)
			end

			local var_678_7 = arg_675_1.actors_["10094"]
			local var_678_8 = 0

			if var_678_8 < arg_675_1.time_ and arg_675_1.time_ <= var_678_8 + arg_678_0 and not isNil(var_678_7) and arg_675_1.var_.actorSpriteComps10094 == nil then
				arg_675_1.var_.actorSpriteComps10094 = var_678_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_678_9 = 2

			if var_678_8 <= arg_675_1.time_ and arg_675_1.time_ < var_678_8 + var_678_9 and not isNil(var_678_7) then
				local var_678_10 = (arg_675_1.time_ - var_678_8) / var_678_9

				if arg_675_1.var_.actorSpriteComps10094 then
					for iter_678_1, iter_678_2 in pairs(arg_675_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_678_2 then
							if arg_675_1.isInRecall_ then
								local var_678_11 = Mathf.Lerp(iter_678_2.color.r, arg_675_1.hightColor1.r, var_678_10)
								local var_678_12 = Mathf.Lerp(iter_678_2.color.g, arg_675_1.hightColor1.g, var_678_10)
								local var_678_13 = Mathf.Lerp(iter_678_2.color.b, arg_675_1.hightColor1.b, var_678_10)

								iter_678_2.color = Color.New(var_678_11, var_678_12, var_678_13)
							else
								local var_678_14 = Mathf.Lerp(iter_678_2.color.r, 1, var_678_10)

								iter_678_2.color = Color.New(var_678_14, var_678_14, var_678_14)
							end
						end
					end
				end
			end

			if arg_675_1.time_ >= var_678_8 + var_678_9 and arg_675_1.time_ < var_678_8 + var_678_9 + arg_678_0 and not isNil(var_678_7) and arg_675_1.var_.actorSpriteComps10094 then
				for iter_678_3, iter_678_4 in pairs(arg_675_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_678_4 then
						if arg_675_1.isInRecall_ then
							iter_678_4.color = arg_675_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_678_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_675_1.var_.actorSpriteComps10094 = nil
			end

			local var_678_15 = arg_675_1.actors_["10092_1"]
			local var_678_16 = 0

			if var_678_16 < arg_675_1.time_ and arg_675_1.time_ <= var_678_16 + arg_678_0 and not isNil(var_678_15) and arg_675_1.var_.actorSpriteComps10092_1 == nil then
				arg_675_1.var_.actorSpriteComps10092_1 = var_678_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_678_17 = 2

			if var_678_16 <= arg_675_1.time_ and arg_675_1.time_ < var_678_16 + var_678_17 and not isNil(var_678_15) then
				local var_678_18 = (arg_675_1.time_ - var_678_16) / var_678_17

				if arg_675_1.var_.actorSpriteComps10092_1 then
					for iter_678_5, iter_678_6 in pairs(arg_675_1.var_.actorSpriteComps10092_1:ToTable()) do
						if iter_678_6 then
							if arg_675_1.isInRecall_ then
								local var_678_19 = Mathf.Lerp(iter_678_6.color.r, arg_675_1.hightColor2.r, var_678_18)
								local var_678_20 = Mathf.Lerp(iter_678_6.color.g, arg_675_1.hightColor2.g, var_678_18)
								local var_678_21 = Mathf.Lerp(iter_678_6.color.b, arg_675_1.hightColor2.b, var_678_18)

								iter_678_6.color = Color.New(var_678_19, var_678_20, var_678_21)
							else
								local var_678_22 = Mathf.Lerp(iter_678_6.color.r, 0.5, var_678_18)

								iter_678_6.color = Color.New(var_678_22, var_678_22, var_678_22)
							end
						end
					end
				end
			end

			if arg_675_1.time_ >= var_678_16 + var_678_17 and arg_675_1.time_ < var_678_16 + var_678_17 + arg_678_0 and not isNil(var_678_15) and arg_675_1.var_.actorSpriteComps10092_1 then
				for iter_678_7, iter_678_8 in pairs(arg_675_1.var_.actorSpriteComps10092_1:ToTable()) do
					if iter_678_8 then
						if arg_675_1.isInRecall_ then
							iter_678_8.color = arg_675_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_678_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_675_1.var_.actorSpriteComps10092_1 = nil
			end

			local var_678_23 = 0
			local var_678_24 = 0.425

			if var_678_23 < arg_675_1.time_ and arg_675_1.time_ <= var_678_23 + arg_678_0 then
				arg_675_1.talkMaxDuration = 0
				arg_675_1.dialogCg_.alpha = 1

				arg_675_1.dialog_:SetActive(true)
				SetActive(arg_675_1.leftNameGo_, true)

				local var_678_25 = arg_675_1:FormatText(StoryNameCfg[259].name)

				arg_675_1.leftNameTxt_.text = var_678_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_675_1.leftNameTxt_.transform)

				arg_675_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_675_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_675_1:RecordName(arg_675_1.leftNameTxt_.text)
				SetActive(arg_675_1.iconTrs_.gameObject, false)
				arg_675_1.callingController_:SetSelectedState("normal")

				local var_678_26 = arg_675_1:GetWordFromCfg(413161165)
				local var_678_27 = arg_675_1:FormatText(var_678_26.content)

				arg_675_1.text_.text = var_678_27

				LuaForUtil.ClearLinePrefixSymbol(arg_675_1.text_)

				local var_678_28 = 17
				local var_678_29 = utf8.len(var_678_27)
				local var_678_30 = var_678_28 <= 0 and var_678_24 or var_678_24 * (var_678_29 / var_678_28)

				if var_678_30 > 0 and var_678_24 < var_678_30 then
					arg_675_1.talkMaxDuration = var_678_30

					if var_678_30 + var_678_23 > arg_675_1.duration_ then
						arg_675_1.duration_ = var_678_30 + var_678_23
					end
				end

				arg_675_1.text_.text = var_678_27
				arg_675_1.typewritter.percent = 0

				arg_675_1.typewritter:SetDirty()
				arg_675_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161165", "story_v_out_413161.awb") ~= 0 then
					local var_678_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161165", "story_v_out_413161.awb") / 1000

					if var_678_31 + var_678_23 > arg_675_1.duration_ then
						arg_675_1.duration_ = var_678_31 + var_678_23
					end

					if var_678_26.prefab_name ~= "" and arg_675_1.actors_[var_678_26.prefab_name] ~= nil then
						local var_678_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_675_1.actors_[var_678_26.prefab_name].transform, "story_v_out_413161", "413161165", "story_v_out_413161.awb")

						arg_675_1:RecordAudio("413161165", var_678_32)
						arg_675_1:RecordAudio("413161165", var_678_32)
					else
						arg_675_1:AudioAction("play", "voice", "story_v_out_413161", "413161165", "story_v_out_413161.awb")
					end

					arg_675_1:RecordHistoryTalkVoice("story_v_out_413161", "413161165", "story_v_out_413161.awb")
				end

				arg_675_1:RecordContent(arg_675_1.text_.text)
			end

			local var_678_33 = math.max(var_678_24, arg_675_1.talkMaxDuration)

			if var_678_23 <= arg_675_1.time_ and arg_675_1.time_ < var_678_23 + var_678_33 then
				arg_675_1.typewritter.percent = (arg_675_1.time_ - var_678_23) / var_678_33

				arg_675_1.typewritter:SetDirty()
			end

			if arg_675_1.time_ >= var_678_23 + var_678_33 and arg_675_1.time_ < var_678_23 + var_678_33 + arg_678_0 then
				arg_675_1.typewritter.percent = 1

				arg_675_1.typewritter:SetDirty()
				arg_675_1:ShowNextGo(true)
			end
		end
	end,
	Play413161166 = function(arg_679_0, arg_679_1)
		arg_679_1.time_ = 0
		arg_679_1.frameCnt_ = 0
		arg_679_1.state_ = "playing"
		arg_679_1.curTalkId_ = 413161166
		arg_679_1.duration_ = 11.47

		local var_679_0 = {
			zh = 5.966,
			ja = 11.466
		}
		local var_679_1 = manager.audio:GetLocalizationFlag()

		if var_679_0[var_679_1] ~= nil then
			arg_679_1.duration_ = var_679_0[var_679_1]
		end

		SetActive(arg_679_1.tipsGo_, false)

		function arg_679_1.onSingleLineFinish_()
			arg_679_1.onSingleLineUpdate_ = nil
			arg_679_1.onSingleLineFinish_ = nil
			arg_679_1.state_ = "waiting"
		end

		function arg_679_1.playNext_(arg_681_0)
			if arg_681_0 == 1 then
				arg_679_0:Play413161167(arg_679_1)
			end
		end

		function arg_679_1.onSingleLineUpdate_(arg_682_0)
			local var_682_0 = arg_679_1.actors_["10094"]
			local var_682_1 = 0

			if var_682_1 < arg_679_1.time_ and arg_679_1.time_ <= var_682_1 + arg_682_0 and not isNil(var_682_0) and arg_679_1.var_.actorSpriteComps10094 == nil then
				arg_679_1.var_.actorSpriteComps10094 = var_682_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_682_2 = 2

			if var_682_1 <= arg_679_1.time_ and arg_679_1.time_ < var_682_1 + var_682_2 and not isNil(var_682_0) then
				local var_682_3 = (arg_679_1.time_ - var_682_1) / var_682_2

				if arg_679_1.var_.actorSpriteComps10094 then
					for iter_682_0, iter_682_1 in pairs(arg_679_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_682_1 then
							if arg_679_1.isInRecall_ then
								local var_682_4 = Mathf.Lerp(iter_682_1.color.r, arg_679_1.hightColor2.r, var_682_3)
								local var_682_5 = Mathf.Lerp(iter_682_1.color.g, arg_679_1.hightColor2.g, var_682_3)
								local var_682_6 = Mathf.Lerp(iter_682_1.color.b, arg_679_1.hightColor2.b, var_682_3)

								iter_682_1.color = Color.New(var_682_4, var_682_5, var_682_6)
							else
								local var_682_7 = Mathf.Lerp(iter_682_1.color.r, 0.5, var_682_3)

								iter_682_1.color = Color.New(var_682_7, var_682_7, var_682_7)
							end
						end
					end
				end
			end

			if arg_679_1.time_ >= var_682_1 + var_682_2 and arg_679_1.time_ < var_682_1 + var_682_2 + arg_682_0 and not isNil(var_682_0) and arg_679_1.var_.actorSpriteComps10094 then
				for iter_682_2, iter_682_3 in pairs(arg_679_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_682_3 then
						if arg_679_1.isInRecall_ then
							iter_682_3.color = arg_679_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_682_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_679_1.var_.actorSpriteComps10094 = nil
			end

			local var_682_8 = arg_679_1.actors_["10092_1"]
			local var_682_9 = 0

			if var_682_9 < arg_679_1.time_ and arg_679_1.time_ <= var_682_9 + arg_682_0 and not isNil(var_682_8) and arg_679_1.var_.actorSpriteComps10092_1 == nil then
				arg_679_1.var_.actorSpriteComps10092_1 = var_682_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_682_10 = 2

			if var_682_9 <= arg_679_1.time_ and arg_679_1.time_ < var_682_9 + var_682_10 and not isNil(var_682_8) then
				local var_682_11 = (arg_679_1.time_ - var_682_9) / var_682_10

				if arg_679_1.var_.actorSpriteComps10092_1 then
					for iter_682_4, iter_682_5 in pairs(arg_679_1.var_.actorSpriteComps10092_1:ToTable()) do
						if iter_682_5 then
							if arg_679_1.isInRecall_ then
								local var_682_12 = Mathf.Lerp(iter_682_5.color.r, arg_679_1.hightColor1.r, var_682_11)
								local var_682_13 = Mathf.Lerp(iter_682_5.color.g, arg_679_1.hightColor1.g, var_682_11)
								local var_682_14 = Mathf.Lerp(iter_682_5.color.b, arg_679_1.hightColor1.b, var_682_11)

								iter_682_5.color = Color.New(var_682_12, var_682_13, var_682_14)
							else
								local var_682_15 = Mathf.Lerp(iter_682_5.color.r, 1, var_682_11)

								iter_682_5.color = Color.New(var_682_15, var_682_15, var_682_15)
							end
						end
					end
				end
			end

			if arg_679_1.time_ >= var_682_9 + var_682_10 and arg_679_1.time_ < var_682_9 + var_682_10 + arg_682_0 and not isNil(var_682_8) and arg_679_1.var_.actorSpriteComps10092_1 then
				for iter_682_6, iter_682_7 in pairs(arg_679_1.var_.actorSpriteComps10092_1:ToTable()) do
					if iter_682_7 then
						if arg_679_1.isInRecall_ then
							iter_682_7.color = arg_679_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_682_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_679_1.var_.actorSpriteComps10092_1 = nil
			end

			local var_682_16 = 0
			local var_682_17 = 0.725

			if var_682_16 < arg_679_1.time_ and arg_679_1.time_ <= var_682_16 + arg_682_0 then
				arg_679_1.talkMaxDuration = 0
				arg_679_1.dialogCg_.alpha = 1

				arg_679_1.dialog_:SetActive(true)
				SetActive(arg_679_1.leftNameGo_, true)

				local var_682_18 = arg_679_1:FormatText(StoryNameCfg[996].name)

				arg_679_1.leftNameTxt_.text = var_682_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_679_1.leftNameTxt_.transform)

				arg_679_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_679_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_679_1:RecordName(arg_679_1.leftNameTxt_.text)
				SetActive(arg_679_1.iconTrs_.gameObject, false)
				arg_679_1.callingController_:SetSelectedState("normal")

				local var_682_19 = arg_679_1:GetWordFromCfg(413161166)
				local var_682_20 = arg_679_1:FormatText(var_682_19.content)

				arg_679_1.text_.text = var_682_20

				LuaForUtil.ClearLinePrefixSymbol(arg_679_1.text_)

				local var_682_21 = 29
				local var_682_22 = utf8.len(var_682_20)
				local var_682_23 = var_682_21 <= 0 and var_682_17 or var_682_17 * (var_682_22 / var_682_21)

				if var_682_23 > 0 and var_682_17 < var_682_23 then
					arg_679_1.talkMaxDuration = var_682_23

					if var_682_23 + var_682_16 > arg_679_1.duration_ then
						arg_679_1.duration_ = var_682_23 + var_682_16
					end
				end

				arg_679_1.text_.text = var_682_20
				arg_679_1.typewritter.percent = 0

				arg_679_1.typewritter:SetDirty()
				arg_679_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161166", "story_v_out_413161.awb") ~= 0 then
					local var_682_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161166", "story_v_out_413161.awb") / 1000

					if var_682_24 + var_682_16 > arg_679_1.duration_ then
						arg_679_1.duration_ = var_682_24 + var_682_16
					end

					if var_682_19.prefab_name ~= "" and arg_679_1.actors_[var_682_19.prefab_name] ~= nil then
						local var_682_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_679_1.actors_[var_682_19.prefab_name].transform, "story_v_out_413161", "413161166", "story_v_out_413161.awb")

						arg_679_1:RecordAudio("413161166", var_682_25)
						arg_679_1:RecordAudio("413161166", var_682_25)
					else
						arg_679_1:AudioAction("play", "voice", "story_v_out_413161", "413161166", "story_v_out_413161.awb")
					end

					arg_679_1:RecordHistoryTalkVoice("story_v_out_413161", "413161166", "story_v_out_413161.awb")
				end

				arg_679_1:RecordContent(arg_679_1.text_.text)
			end

			local var_682_26 = math.max(var_682_17, arg_679_1.talkMaxDuration)

			if var_682_16 <= arg_679_1.time_ and arg_679_1.time_ < var_682_16 + var_682_26 then
				arg_679_1.typewritter.percent = (arg_679_1.time_ - var_682_16) / var_682_26

				arg_679_1.typewritter:SetDirty()
			end

			if arg_679_1.time_ >= var_682_16 + var_682_26 and arg_679_1.time_ < var_682_16 + var_682_26 + arg_682_0 then
				arg_679_1.typewritter.percent = 1

				arg_679_1.typewritter:SetDirty()
				arg_679_1:ShowNextGo(true)
			end
		end
	end,
	Play413161167 = function(arg_683_0, arg_683_1)
		arg_683_1.time_ = 0
		arg_683_1.frameCnt_ = 0
		arg_683_1.state_ = "playing"
		arg_683_1.curTalkId_ = 413161167
		arg_683_1.duration_ = 2

		SetActive(arg_683_1.tipsGo_, false)

		function arg_683_1.onSingleLineFinish_()
			arg_683_1.onSingleLineUpdate_ = nil
			arg_683_1.onSingleLineFinish_ = nil
			arg_683_1.state_ = "waiting"
		end

		function arg_683_1.playNext_(arg_685_0)
			if arg_685_0 == 1 then
				arg_683_0:Play413161168(arg_683_1)
			end
		end

		function arg_683_1.onSingleLineUpdate_(arg_686_0)
			local var_686_0 = arg_683_1.actors_["10094"]
			local var_686_1 = 0

			if var_686_1 < arg_683_1.time_ and arg_683_1.time_ <= var_686_1 + arg_686_0 and not isNil(var_686_0) and arg_683_1.var_.actorSpriteComps10094 == nil then
				arg_683_1.var_.actorSpriteComps10094 = var_686_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_686_2 = 2

			if var_686_1 <= arg_683_1.time_ and arg_683_1.time_ < var_686_1 + var_686_2 and not isNil(var_686_0) then
				local var_686_3 = (arg_683_1.time_ - var_686_1) / var_686_2

				if arg_683_1.var_.actorSpriteComps10094 then
					for iter_686_0, iter_686_1 in pairs(arg_683_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_686_1 then
							if arg_683_1.isInRecall_ then
								local var_686_4 = Mathf.Lerp(iter_686_1.color.r, arg_683_1.hightColor1.r, var_686_3)
								local var_686_5 = Mathf.Lerp(iter_686_1.color.g, arg_683_1.hightColor1.g, var_686_3)
								local var_686_6 = Mathf.Lerp(iter_686_1.color.b, arg_683_1.hightColor1.b, var_686_3)

								iter_686_1.color = Color.New(var_686_4, var_686_5, var_686_6)
							else
								local var_686_7 = Mathf.Lerp(iter_686_1.color.r, 1, var_686_3)

								iter_686_1.color = Color.New(var_686_7, var_686_7, var_686_7)
							end
						end
					end
				end
			end

			if arg_683_1.time_ >= var_686_1 + var_686_2 and arg_683_1.time_ < var_686_1 + var_686_2 + arg_686_0 and not isNil(var_686_0) and arg_683_1.var_.actorSpriteComps10094 then
				for iter_686_2, iter_686_3 in pairs(arg_683_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_686_3 then
						if arg_683_1.isInRecall_ then
							iter_686_3.color = arg_683_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_686_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_683_1.var_.actorSpriteComps10094 = nil
			end

			local var_686_8 = arg_683_1.actors_["10092_1"]
			local var_686_9 = 0

			if var_686_9 < arg_683_1.time_ and arg_683_1.time_ <= var_686_9 + arg_686_0 and not isNil(var_686_8) and arg_683_1.var_.actorSpriteComps10092_1 == nil then
				arg_683_1.var_.actorSpriteComps10092_1 = var_686_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_686_10 = 2

			if var_686_9 <= arg_683_1.time_ and arg_683_1.time_ < var_686_9 + var_686_10 and not isNil(var_686_8) then
				local var_686_11 = (arg_683_1.time_ - var_686_9) / var_686_10

				if arg_683_1.var_.actorSpriteComps10092_1 then
					for iter_686_4, iter_686_5 in pairs(arg_683_1.var_.actorSpriteComps10092_1:ToTable()) do
						if iter_686_5 then
							if arg_683_1.isInRecall_ then
								local var_686_12 = Mathf.Lerp(iter_686_5.color.r, arg_683_1.hightColor2.r, var_686_11)
								local var_686_13 = Mathf.Lerp(iter_686_5.color.g, arg_683_1.hightColor2.g, var_686_11)
								local var_686_14 = Mathf.Lerp(iter_686_5.color.b, arg_683_1.hightColor2.b, var_686_11)

								iter_686_5.color = Color.New(var_686_12, var_686_13, var_686_14)
							else
								local var_686_15 = Mathf.Lerp(iter_686_5.color.r, 0.5, var_686_11)

								iter_686_5.color = Color.New(var_686_15, var_686_15, var_686_15)
							end
						end
					end
				end
			end

			if arg_683_1.time_ >= var_686_9 + var_686_10 and arg_683_1.time_ < var_686_9 + var_686_10 + arg_686_0 and not isNil(var_686_8) and arg_683_1.var_.actorSpriteComps10092_1 then
				for iter_686_6, iter_686_7 in pairs(arg_683_1.var_.actorSpriteComps10092_1:ToTable()) do
					if iter_686_7 then
						if arg_683_1.isInRecall_ then
							iter_686_7.color = arg_683_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_686_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_683_1.var_.actorSpriteComps10092_1 = nil
			end

			local var_686_16 = 0
			local var_686_17 = 0.075

			if var_686_16 < arg_683_1.time_ and arg_683_1.time_ <= var_686_16 + arg_686_0 then
				arg_683_1.talkMaxDuration = 0
				arg_683_1.dialogCg_.alpha = 1

				arg_683_1.dialog_:SetActive(true)
				SetActive(arg_683_1.leftNameGo_, true)

				local var_686_18 = arg_683_1:FormatText(StoryNameCfg[259].name)

				arg_683_1.leftNameTxt_.text = var_686_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_683_1.leftNameTxt_.transform)

				arg_683_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_683_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_683_1:RecordName(arg_683_1.leftNameTxt_.text)
				SetActive(arg_683_1.iconTrs_.gameObject, false)
				arg_683_1.callingController_:SetSelectedState("normal")

				local var_686_19 = arg_683_1:GetWordFromCfg(413161167)
				local var_686_20 = arg_683_1:FormatText(var_686_19.content)

				arg_683_1.text_.text = var_686_20

				LuaForUtil.ClearLinePrefixSymbol(arg_683_1.text_)

				local var_686_21 = 3
				local var_686_22 = utf8.len(var_686_20)
				local var_686_23 = var_686_21 <= 0 and var_686_17 or var_686_17 * (var_686_22 / var_686_21)

				if var_686_23 > 0 and var_686_17 < var_686_23 then
					arg_683_1.talkMaxDuration = var_686_23

					if var_686_23 + var_686_16 > arg_683_1.duration_ then
						arg_683_1.duration_ = var_686_23 + var_686_16
					end
				end

				arg_683_1.text_.text = var_686_20
				arg_683_1.typewritter.percent = 0

				arg_683_1.typewritter:SetDirty()
				arg_683_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161167", "story_v_out_413161.awb") ~= 0 then
					local var_686_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161167", "story_v_out_413161.awb") / 1000

					if var_686_24 + var_686_16 > arg_683_1.duration_ then
						arg_683_1.duration_ = var_686_24 + var_686_16
					end

					if var_686_19.prefab_name ~= "" and arg_683_1.actors_[var_686_19.prefab_name] ~= nil then
						local var_686_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_683_1.actors_[var_686_19.prefab_name].transform, "story_v_out_413161", "413161167", "story_v_out_413161.awb")

						arg_683_1:RecordAudio("413161167", var_686_25)
						arg_683_1:RecordAudio("413161167", var_686_25)
					else
						arg_683_1:AudioAction("play", "voice", "story_v_out_413161", "413161167", "story_v_out_413161.awb")
					end

					arg_683_1:RecordHistoryTalkVoice("story_v_out_413161", "413161167", "story_v_out_413161.awb")
				end

				arg_683_1:RecordContent(arg_683_1.text_.text)
			end

			local var_686_26 = math.max(var_686_17, arg_683_1.talkMaxDuration)

			if var_686_16 <= arg_683_1.time_ and arg_683_1.time_ < var_686_16 + var_686_26 then
				arg_683_1.typewritter.percent = (arg_683_1.time_ - var_686_16) / var_686_26

				arg_683_1.typewritter:SetDirty()
			end

			if arg_683_1.time_ >= var_686_16 + var_686_26 and arg_683_1.time_ < var_686_16 + var_686_26 + arg_686_0 then
				arg_683_1.typewritter.percent = 1

				arg_683_1.typewritter:SetDirty()
				arg_683_1:ShowNextGo(true)
			end
		end
	end,
	Play413161168 = function(arg_687_0, arg_687_1)
		arg_687_1.time_ = 0
		arg_687_1.frameCnt_ = 0
		arg_687_1.state_ = "playing"
		arg_687_1.curTalkId_ = 413161168
		arg_687_1.duration_ = 11

		local var_687_0 = {
			zh = 4.866,
			ja = 11
		}
		local var_687_1 = manager.audio:GetLocalizationFlag()

		if var_687_0[var_687_1] ~= nil then
			arg_687_1.duration_ = var_687_0[var_687_1]
		end

		SetActive(arg_687_1.tipsGo_, false)

		function arg_687_1.onSingleLineFinish_()
			arg_687_1.onSingleLineUpdate_ = nil
			arg_687_1.onSingleLineFinish_ = nil
			arg_687_1.state_ = "waiting"
		end

		function arg_687_1.playNext_(arg_689_0)
			if arg_689_0 == 1 then
				arg_687_0:Play413161169(arg_687_1)
			end
		end

		function arg_687_1.onSingleLineUpdate_(arg_690_0)
			local var_690_0 = arg_687_1.actors_["10094"]
			local var_690_1 = 0

			if var_690_1 < arg_687_1.time_ and arg_687_1.time_ <= var_690_1 + arg_690_0 and not isNil(var_690_0) and arg_687_1.var_.actorSpriteComps10094 == nil then
				arg_687_1.var_.actorSpriteComps10094 = var_690_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_690_2 = 2

			if var_690_1 <= arg_687_1.time_ and arg_687_1.time_ < var_690_1 + var_690_2 and not isNil(var_690_0) then
				local var_690_3 = (arg_687_1.time_ - var_690_1) / var_690_2

				if arg_687_1.var_.actorSpriteComps10094 then
					for iter_690_0, iter_690_1 in pairs(arg_687_1.var_.actorSpriteComps10094:ToTable()) do
						if iter_690_1 then
							if arg_687_1.isInRecall_ then
								local var_690_4 = Mathf.Lerp(iter_690_1.color.r, arg_687_1.hightColor2.r, var_690_3)
								local var_690_5 = Mathf.Lerp(iter_690_1.color.g, arg_687_1.hightColor2.g, var_690_3)
								local var_690_6 = Mathf.Lerp(iter_690_1.color.b, arg_687_1.hightColor2.b, var_690_3)

								iter_690_1.color = Color.New(var_690_4, var_690_5, var_690_6)
							else
								local var_690_7 = Mathf.Lerp(iter_690_1.color.r, 0.5, var_690_3)

								iter_690_1.color = Color.New(var_690_7, var_690_7, var_690_7)
							end
						end
					end
				end
			end

			if arg_687_1.time_ >= var_690_1 + var_690_2 and arg_687_1.time_ < var_690_1 + var_690_2 + arg_690_0 and not isNil(var_690_0) and arg_687_1.var_.actorSpriteComps10094 then
				for iter_690_2, iter_690_3 in pairs(arg_687_1.var_.actorSpriteComps10094:ToTable()) do
					if iter_690_3 then
						if arg_687_1.isInRecall_ then
							iter_690_3.color = arg_687_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_690_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_687_1.var_.actorSpriteComps10094 = nil
			end

			local var_690_8 = arg_687_1.actors_["10092_1"]
			local var_690_9 = 0

			if var_690_9 < arg_687_1.time_ and arg_687_1.time_ <= var_690_9 + arg_690_0 and not isNil(var_690_8) and arg_687_1.var_.actorSpriteComps10092_1 == nil then
				arg_687_1.var_.actorSpriteComps10092_1 = var_690_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_690_10 = 2

			if var_690_9 <= arg_687_1.time_ and arg_687_1.time_ < var_690_9 + var_690_10 and not isNil(var_690_8) then
				local var_690_11 = (arg_687_1.time_ - var_690_9) / var_690_10

				if arg_687_1.var_.actorSpriteComps10092_1 then
					for iter_690_4, iter_690_5 in pairs(arg_687_1.var_.actorSpriteComps10092_1:ToTable()) do
						if iter_690_5 then
							if arg_687_1.isInRecall_ then
								local var_690_12 = Mathf.Lerp(iter_690_5.color.r, arg_687_1.hightColor1.r, var_690_11)
								local var_690_13 = Mathf.Lerp(iter_690_5.color.g, arg_687_1.hightColor1.g, var_690_11)
								local var_690_14 = Mathf.Lerp(iter_690_5.color.b, arg_687_1.hightColor1.b, var_690_11)

								iter_690_5.color = Color.New(var_690_12, var_690_13, var_690_14)
							else
								local var_690_15 = Mathf.Lerp(iter_690_5.color.r, 1, var_690_11)

								iter_690_5.color = Color.New(var_690_15, var_690_15, var_690_15)
							end
						end
					end
				end
			end

			if arg_687_1.time_ >= var_690_9 + var_690_10 and arg_687_1.time_ < var_690_9 + var_690_10 + arg_690_0 and not isNil(var_690_8) and arg_687_1.var_.actorSpriteComps10092_1 then
				for iter_690_6, iter_690_7 in pairs(arg_687_1.var_.actorSpriteComps10092_1:ToTable()) do
					if iter_690_7 then
						if arg_687_1.isInRecall_ then
							iter_690_7.color = arg_687_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_690_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_687_1.var_.actorSpriteComps10092_1 = nil
			end

			local var_690_16 = 0
			local var_690_17 = 0.625

			if var_690_16 < arg_687_1.time_ and arg_687_1.time_ <= var_690_16 + arg_690_0 then
				arg_687_1.talkMaxDuration = 0
				arg_687_1.dialogCg_.alpha = 1

				arg_687_1.dialog_:SetActive(true)
				SetActive(arg_687_1.leftNameGo_, true)

				local var_690_18 = arg_687_1:FormatText(StoryNameCfg[996].name)

				arg_687_1.leftNameTxt_.text = var_690_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_687_1.leftNameTxt_.transform)

				arg_687_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_687_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_687_1:RecordName(arg_687_1.leftNameTxt_.text)
				SetActive(arg_687_1.iconTrs_.gameObject, false)
				arg_687_1.callingController_:SetSelectedState("normal")

				local var_690_19 = arg_687_1:GetWordFromCfg(413161168)
				local var_690_20 = arg_687_1:FormatText(var_690_19.content)

				arg_687_1.text_.text = var_690_20

				LuaForUtil.ClearLinePrefixSymbol(arg_687_1.text_)

				local var_690_21 = 25
				local var_690_22 = utf8.len(var_690_20)
				local var_690_23 = var_690_21 <= 0 and var_690_17 or var_690_17 * (var_690_22 / var_690_21)

				if var_690_23 > 0 and var_690_17 < var_690_23 then
					arg_687_1.talkMaxDuration = var_690_23

					if var_690_23 + var_690_16 > arg_687_1.duration_ then
						arg_687_1.duration_ = var_690_23 + var_690_16
					end
				end

				arg_687_1.text_.text = var_690_20
				arg_687_1.typewritter.percent = 0

				arg_687_1.typewritter:SetDirty()
				arg_687_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161168", "story_v_out_413161.awb") ~= 0 then
					local var_690_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161168", "story_v_out_413161.awb") / 1000

					if var_690_24 + var_690_16 > arg_687_1.duration_ then
						arg_687_1.duration_ = var_690_24 + var_690_16
					end

					if var_690_19.prefab_name ~= "" and arg_687_1.actors_[var_690_19.prefab_name] ~= nil then
						local var_690_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_687_1.actors_[var_690_19.prefab_name].transform, "story_v_out_413161", "413161168", "story_v_out_413161.awb")

						arg_687_1:RecordAudio("413161168", var_690_25)
						arg_687_1:RecordAudio("413161168", var_690_25)
					else
						arg_687_1:AudioAction("play", "voice", "story_v_out_413161", "413161168", "story_v_out_413161.awb")
					end

					arg_687_1:RecordHistoryTalkVoice("story_v_out_413161", "413161168", "story_v_out_413161.awb")
				end

				arg_687_1:RecordContent(arg_687_1.text_.text)
			end

			local var_690_26 = math.max(var_690_17, arg_687_1.talkMaxDuration)

			if var_690_16 <= arg_687_1.time_ and arg_687_1.time_ < var_690_16 + var_690_26 then
				arg_687_1.typewritter.percent = (arg_687_1.time_ - var_690_16) / var_690_26

				arg_687_1.typewritter:SetDirty()
			end

			if arg_687_1.time_ >= var_690_16 + var_690_26 and arg_687_1.time_ < var_690_16 + var_690_26 + arg_690_0 then
				arg_687_1.typewritter.percent = 1

				arg_687_1.typewritter:SetDirty()
				arg_687_1:ShowNextGo(true)
			end
		end
	end,
	Play413161169 = function(arg_691_0, arg_691_1)
		arg_691_1.time_ = 0
		arg_691_1.frameCnt_ = 0
		arg_691_1.state_ = "playing"
		arg_691_1.curTalkId_ = 413161169
		arg_691_1.duration_ = 5.5

		local var_691_0 = {
			zh = 3.2,
			ja = 5.5
		}
		local var_691_1 = manager.audio:GetLocalizationFlag()

		if var_691_0[var_691_1] ~= nil then
			arg_691_1.duration_ = var_691_0[var_691_1]
		end

		SetActive(arg_691_1.tipsGo_, false)

		function arg_691_1.onSingleLineFinish_()
			arg_691_1.onSingleLineUpdate_ = nil
			arg_691_1.onSingleLineFinish_ = nil
			arg_691_1.state_ = "waiting"
		end

		function arg_691_1.playNext_(arg_693_0)
			if arg_693_0 == 1 then
				arg_691_0:Play413161170(arg_691_1)
			end
		end

		function arg_691_1.onSingleLineUpdate_(arg_694_0)
			local var_694_0 = arg_691_1.actors_["10092_1"].transform
			local var_694_1 = 0

			if var_694_1 < arg_691_1.time_ and arg_691_1.time_ <= var_694_1 + arg_694_0 then
				arg_691_1.var_.moveOldPos10092_1 = var_694_0.localPosition
				var_694_0.localScale = Vector3.New(1, 1, 1)

				arg_691_1:CheckSpriteTmpPos("10092_1", 4)

				local var_694_2 = var_694_0.childCount

				for iter_694_0 = 0, var_694_2 - 1 do
					local var_694_3 = var_694_0:GetChild(iter_694_0)

					if var_694_3.name == "split_2" or not string.find(var_694_3.name, "split") then
						var_694_3.gameObject:SetActive(true)
					else
						var_694_3.gameObject:SetActive(false)
					end
				end
			end

			local var_694_4 = 0.001

			if var_694_1 <= arg_691_1.time_ and arg_691_1.time_ < var_694_1 + var_694_4 then
				local var_694_5 = (arg_691_1.time_ - var_694_1) / var_694_4
				local var_694_6 = Vector3.New(390, -300, -295)

				var_694_0.localPosition = Vector3.Lerp(arg_691_1.var_.moveOldPos10092_1, var_694_6, var_694_5)
			end

			if arg_691_1.time_ >= var_694_1 + var_694_4 and arg_691_1.time_ < var_694_1 + var_694_4 + arg_694_0 then
				var_694_0.localPosition = Vector3.New(390, -300, -295)
			end

			local var_694_7 = 0
			local var_694_8 = 0.4

			if var_694_7 < arg_691_1.time_ and arg_691_1.time_ <= var_694_7 + arg_694_0 then
				arg_691_1.talkMaxDuration = 0
				arg_691_1.dialogCg_.alpha = 1

				arg_691_1.dialog_:SetActive(true)
				SetActive(arg_691_1.leftNameGo_, true)

				local var_694_9 = arg_691_1:FormatText(StoryNameCfg[996].name)

				arg_691_1.leftNameTxt_.text = var_694_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_691_1.leftNameTxt_.transform)

				arg_691_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_691_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_691_1:RecordName(arg_691_1.leftNameTxt_.text)
				SetActive(arg_691_1.iconTrs_.gameObject, false)
				arg_691_1.callingController_:SetSelectedState("normal")

				local var_694_10 = arg_691_1:GetWordFromCfg(413161169)
				local var_694_11 = arg_691_1:FormatText(var_694_10.content)

				arg_691_1.text_.text = var_694_11

				LuaForUtil.ClearLinePrefixSymbol(arg_691_1.text_)

				local var_694_12 = 16
				local var_694_13 = utf8.len(var_694_11)
				local var_694_14 = var_694_12 <= 0 and var_694_8 or var_694_8 * (var_694_13 / var_694_12)

				if var_694_14 > 0 and var_694_8 < var_694_14 then
					arg_691_1.talkMaxDuration = var_694_14

					if var_694_14 + var_694_7 > arg_691_1.duration_ then
						arg_691_1.duration_ = var_694_14 + var_694_7
					end
				end

				arg_691_1.text_.text = var_694_11
				arg_691_1.typewritter.percent = 0

				arg_691_1.typewritter:SetDirty()
				arg_691_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161169", "story_v_out_413161.awb") ~= 0 then
					local var_694_15 = manager.audio:GetVoiceLength("story_v_out_413161", "413161169", "story_v_out_413161.awb") / 1000

					if var_694_15 + var_694_7 > arg_691_1.duration_ then
						arg_691_1.duration_ = var_694_15 + var_694_7
					end

					if var_694_10.prefab_name ~= "" and arg_691_1.actors_[var_694_10.prefab_name] ~= nil then
						local var_694_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_691_1.actors_[var_694_10.prefab_name].transform, "story_v_out_413161", "413161169", "story_v_out_413161.awb")

						arg_691_1:RecordAudio("413161169", var_694_16)
						arg_691_1:RecordAudio("413161169", var_694_16)
					else
						arg_691_1:AudioAction("play", "voice", "story_v_out_413161", "413161169", "story_v_out_413161.awb")
					end

					arg_691_1:RecordHistoryTalkVoice("story_v_out_413161", "413161169", "story_v_out_413161.awb")
				end

				arg_691_1:RecordContent(arg_691_1.text_.text)
			end

			local var_694_17 = math.max(var_694_8, arg_691_1.talkMaxDuration)

			if var_694_7 <= arg_691_1.time_ and arg_691_1.time_ < var_694_7 + var_694_17 then
				arg_691_1.typewritter.percent = (arg_691_1.time_ - var_694_7) / var_694_17

				arg_691_1.typewritter:SetDirty()
			end

			if arg_691_1.time_ >= var_694_7 + var_694_17 and arg_691_1.time_ < var_694_7 + var_694_17 + arg_694_0 then
				arg_691_1.typewritter.percent = 1

				arg_691_1.typewritter:SetDirty()
				arg_691_1:ShowNextGo(true)
			end
		end
	end,
	Play413161170 = function(arg_695_0, arg_695_1)
		arg_695_1.time_ = 0
		arg_695_1.frameCnt_ = 0
		arg_695_1.state_ = "playing"
		arg_695_1.curTalkId_ = 413161170
		arg_695_1.duration_ = 14.5

		local var_695_0 = {
			zh = 8.233,
			ja = 14.5
		}
		local var_695_1 = manager.audio:GetLocalizationFlag()

		if var_695_0[var_695_1] ~= nil then
			arg_695_1.duration_ = var_695_0[var_695_1]
		end

		SetActive(arg_695_1.tipsGo_, false)

		function arg_695_1.onSingleLineFinish_()
			arg_695_1.onSingleLineUpdate_ = nil
			arg_695_1.onSingleLineFinish_ = nil
			arg_695_1.state_ = "waiting"
		end

		function arg_695_1.playNext_(arg_697_0)
			if arg_697_0 == 1 then
				arg_695_0:Play413161171(arg_695_1)
			end
		end

		function arg_695_1.onSingleLineUpdate_(arg_698_0)
			local var_698_0 = "A00"

			if arg_695_1.bgs_[var_698_0] == nil then
				local var_698_1 = Object.Instantiate(arg_695_1.paintGo_)

				var_698_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_698_0)
				var_698_1.name = var_698_0
				var_698_1.transform.parent = arg_695_1.stage_.transform
				var_698_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_695_1.bgs_[var_698_0] = var_698_1
			end

			local var_698_2 = 2

			if var_698_2 < arg_695_1.time_ and arg_695_1.time_ <= var_698_2 + arg_698_0 then
				local var_698_3 = manager.ui.mainCamera.transform.localPosition
				local var_698_4 = Vector3.New(0, 0, 10) + Vector3.New(var_698_3.x, var_698_3.y, 0)
				local var_698_5 = arg_695_1.bgs_.A00

				var_698_5.transform.localPosition = var_698_4
				var_698_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_698_6 = var_698_5:GetComponent("SpriteRenderer")

				if var_698_6 and var_698_6.sprite then
					local var_698_7 = (var_698_5.transform.localPosition - var_698_3).z
					local var_698_8 = manager.ui.mainCameraCom_
					local var_698_9 = 2 * var_698_7 * Mathf.Tan(var_698_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_698_10 = var_698_9 * var_698_8.aspect
					local var_698_11 = var_698_6.sprite.bounds.size.x
					local var_698_12 = var_698_6.sprite.bounds.size.y
					local var_698_13 = var_698_10 / var_698_11
					local var_698_14 = var_698_9 / var_698_12
					local var_698_15 = var_698_14 < var_698_13 and var_698_13 or var_698_14

					var_698_5.transform.localScale = Vector3.New(var_698_15, var_698_15, 0)
				end

				for iter_698_0, iter_698_1 in pairs(arg_695_1.bgs_) do
					if iter_698_0 ~= "A00" then
						iter_698_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_698_16 = 0

			if var_698_16 < arg_695_1.time_ and arg_695_1.time_ <= var_698_16 + arg_698_0 then
				arg_695_1.mask_.enabled = true
				arg_695_1.mask_.raycastTarget = true

				arg_695_1:SetGaussion(false)
			end

			local var_698_17 = 2

			if var_698_16 <= arg_695_1.time_ and arg_695_1.time_ < var_698_16 + var_698_17 then
				local var_698_18 = (arg_695_1.time_ - var_698_16) / var_698_17
				local var_698_19 = Color.New(0, 0, 0)

				var_698_19.a = Mathf.Lerp(0, 1, var_698_18)
				arg_695_1.mask_.color = var_698_19
			end

			if arg_695_1.time_ >= var_698_16 + var_698_17 and arg_695_1.time_ < var_698_16 + var_698_17 + arg_698_0 then
				local var_698_20 = Color.New(0, 0, 0)

				var_698_20.a = 1
				arg_695_1.mask_.color = var_698_20
			end

			local var_698_21 = 2

			if var_698_21 < arg_695_1.time_ and arg_695_1.time_ <= var_698_21 + arg_698_0 then
				arg_695_1.mask_.enabled = true
				arg_695_1.mask_.raycastTarget = true

				arg_695_1:SetGaussion(false)
			end

			local var_698_22 = 2

			if var_698_21 <= arg_695_1.time_ and arg_695_1.time_ < var_698_21 + var_698_22 then
				local var_698_23 = (arg_695_1.time_ - var_698_21) / var_698_22
				local var_698_24 = Color.New(0, 0, 0)

				var_698_24.a = Mathf.Lerp(1, 0, var_698_23)
				arg_695_1.mask_.color = var_698_24
			end

			if arg_695_1.time_ >= var_698_21 + var_698_22 and arg_695_1.time_ < var_698_21 + var_698_22 + arg_698_0 then
				local var_698_25 = Color.New(0, 0, 0)
				local var_698_26 = 0

				arg_695_1.mask_.enabled = false
				var_698_25.a = var_698_26
				arg_695_1.mask_.color = var_698_25
			end

			local var_698_27 = arg_695_1.actors_["10094"].transform
			local var_698_28 = 2

			if var_698_28 < arg_695_1.time_ and arg_695_1.time_ <= var_698_28 + arg_698_0 then
				arg_695_1.var_.moveOldPos10094 = var_698_27.localPosition
				var_698_27.localScale = Vector3.New(1, 1, 1)

				arg_695_1:CheckSpriteTmpPos("10094", 6)

				local var_698_29 = var_698_27.childCount

				for iter_698_2 = 0, var_698_29 - 1 do
					local var_698_30 = var_698_27:GetChild(iter_698_2)

					if var_698_30.name == "" or not string.find(var_698_30.name, "split") then
						var_698_30.gameObject:SetActive(true)
					else
						var_698_30.gameObject:SetActive(false)
					end
				end
			end

			local var_698_31 = 0.001

			if var_698_28 <= arg_695_1.time_ and arg_695_1.time_ < var_698_28 + var_698_31 then
				local var_698_32 = (arg_695_1.time_ - var_698_28) / var_698_31
				local var_698_33 = Vector3.New(1500, -340, -414)

				var_698_27.localPosition = Vector3.Lerp(arg_695_1.var_.moveOldPos10094, var_698_33, var_698_32)
			end

			if arg_695_1.time_ >= var_698_28 + var_698_31 and arg_695_1.time_ < var_698_28 + var_698_31 + arg_698_0 then
				var_698_27.localPosition = Vector3.New(1500, -340, -414)
			end

			local var_698_34 = arg_695_1.actors_["10092_1"].transform
			local var_698_35 = 2

			if var_698_35 < arg_695_1.time_ and arg_695_1.time_ <= var_698_35 + arg_698_0 then
				arg_695_1.var_.moveOldPos10092_1 = var_698_34.localPosition
				var_698_34.localScale = Vector3.New(1, 1, 1)

				arg_695_1:CheckSpriteTmpPos("10092_1", 6)

				local var_698_36 = var_698_34.childCount

				for iter_698_3 = 0, var_698_36 - 1 do
					local var_698_37 = var_698_34:GetChild(iter_698_3)

					if var_698_37.name == "" or not string.find(var_698_37.name, "split") then
						var_698_37.gameObject:SetActive(true)
					else
						var_698_37.gameObject:SetActive(false)
					end
				end
			end

			local var_698_38 = 0.001

			if var_698_35 <= arg_695_1.time_ and arg_695_1.time_ < var_698_35 + var_698_38 then
				local var_698_39 = (arg_695_1.time_ - var_698_35) / var_698_38
				local var_698_40 = Vector3.New(1500, -300, -295)

				var_698_34.localPosition = Vector3.Lerp(arg_695_1.var_.moveOldPos10092_1, var_698_40, var_698_39)
			end

			if arg_695_1.time_ >= var_698_35 + var_698_38 and arg_695_1.time_ < var_698_35 + var_698_38 + arg_698_0 then
				var_698_34.localPosition = Vector3.New(1500, -300, -295)
			end

			local var_698_41 = "1029"

			if arg_695_1.actors_[var_698_41] == nil then
				local var_698_42 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1029")

				if not isNil(var_698_42) then
					local var_698_43 = Object.Instantiate(var_698_42, arg_695_1.canvasGo_.transform)

					var_698_43.transform:SetSiblingIndex(1)

					var_698_43.name = var_698_41
					var_698_43.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_695_1.actors_[var_698_41] = var_698_43

					local var_698_44 = var_698_43:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_695_1.isInRecall_ then
						for iter_698_4, iter_698_5 in ipairs(var_698_44) do
							iter_698_5.color = arg_695_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_698_45 = arg_695_1.actors_["1029"].transform
			local var_698_46 = 3.76666666666667

			if var_698_46 < arg_695_1.time_ and arg_695_1.time_ <= var_698_46 + arg_698_0 then
				arg_695_1.var_.moveOldPos1029 = var_698_45.localPosition
				var_698_45.localScale = Vector3.New(1, 1, 1)

				arg_695_1:CheckSpriteTmpPos("1029", 3)

				local var_698_47 = var_698_45.childCount

				for iter_698_6 = 0, var_698_47 - 1 do
					local var_698_48 = var_698_45:GetChild(iter_698_6)

					if var_698_48.name == "split_2" or not string.find(var_698_48.name, "split") then
						var_698_48.gameObject:SetActive(true)
					else
						var_698_48.gameObject:SetActive(false)
					end
				end
			end

			local var_698_49 = 0.001

			if var_698_46 <= arg_695_1.time_ and arg_695_1.time_ < var_698_46 + var_698_49 then
				local var_698_50 = (arg_695_1.time_ - var_698_46) / var_698_49
				local var_698_51 = Vector3.New(0, -355, -140)

				var_698_45.localPosition = Vector3.Lerp(arg_695_1.var_.moveOldPos1029, var_698_51, var_698_50)
			end

			if arg_695_1.time_ >= var_698_46 + var_698_49 and arg_695_1.time_ < var_698_46 + var_698_49 + arg_698_0 then
				var_698_45.localPosition = Vector3.New(0, -355, -140)
			end

			local var_698_52 = arg_695_1.actors_["1029"]
			local var_698_53 = 3.76666666666667

			if var_698_53 < arg_695_1.time_ and arg_695_1.time_ <= var_698_53 + arg_698_0 and not isNil(var_698_52) and arg_695_1.var_.actorSpriteComps1029 == nil then
				arg_695_1.var_.actorSpriteComps1029 = var_698_52:GetComponentsInChildren(typeof(Image), true)
			end

			local var_698_54 = 2

			if var_698_53 <= arg_695_1.time_ and arg_695_1.time_ < var_698_53 + var_698_54 and not isNil(var_698_52) then
				local var_698_55 = (arg_695_1.time_ - var_698_53) / var_698_54

				if arg_695_1.var_.actorSpriteComps1029 then
					for iter_698_7, iter_698_8 in pairs(arg_695_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_698_8 then
							if arg_695_1.isInRecall_ then
								local var_698_56 = Mathf.Lerp(iter_698_8.color.r, arg_695_1.hightColor1.r, var_698_55)
								local var_698_57 = Mathf.Lerp(iter_698_8.color.g, arg_695_1.hightColor1.g, var_698_55)
								local var_698_58 = Mathf.Lerp(iter_698_8.color.b, arg_695_1.hightColor1.b, var_698_55)

								iter_698_8.color = Color.New(var_698_56, var_698_57, var_698_58)
							else
								local var_698_59 = Mathf.Lerp(iter_698_8.color.r, 1, var_698_55)

								iter_698_8.color = Color.New(var_698_59, var_698_59, var_698_59)
							end
						end
					end
				end
			end

			if arg_695_1.time_ >= var_698_53 + var_698_54 and arg_695_1.time_ < var_698_53 + var_698_54 + arg_698_0 and not isNil(var_698_52) and arg_695_1.var_.actorSpriteComps1029 then
				for iter_698_9, iter_698_10 in pairs(arg_695_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_698_10 then
						if arg_695_1.isInRecall_ then
							iter_698_10.color = arg_695_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_698_10.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_695_1.var_.actorSpriteComps1029 = nil
			end

			local var_698_60 = arg_695_1.actors_["1029"]
			local var_698_61 = 3.76666666666667

			if var_698_61 < arg_695_1.time_ and arg_695_1.time_ <= var_698_61 + arg_698_0 then
				local var_698_62 = var_698_60:GetComponentInChildren(typeof(CanvasGroup))

				if var_698_62 then
					arg_695_1.var_.alphaOldValue1029 = var_698_62.alpha
					arg_695_1.var_.characterEffect1029 = var_698_62
				end

				arg_695_1.var_.alphaOldValue1029 = 0
			end

			local var_698_63 = 0.2

			if var_698_61 <= arg_695_1.time_ and arg_695_1.time_ < var_698_61 + var_698_63 then
				local var_698_64 = (arg_695_1.time_ - var_698_61) / var_698_63
				local var_698_65 = Mathf.Lerp(arg_695_1.var_.alphaOldValue1029, 1, var_698_64)

				if arg_695_1.var_.characterEffect1029 then
					arg_695_1.var_.characterEffect1029.alpha = var_698_65
				end
			end

			if arg_695_1.time_ >= var_698_61 + var_698_63 and arg_695_1.time_ < var_698_61 + var_698_63 + arg_698_0 and arg_695_1.var_.characterEffect1029 then
				arg_695_1.var_.characterEffect1029.alpha = 1
			end

			local var_698_66 = 0
			local var_698_67 = 0.433333333333333

			if var_698_66 < arg_695_1.time_ and arg_695_1.time_ <= var_698_66 + arg_698_0 then
				local var_698_68 = "play"
				local var_698_69 = "music"

				arg_695_1:AudioAction(var_698_68, var_698_69, "ui_battle", "ui_battle_stopbgm", "")

				local var_698_70 = ""
				local var_698_71 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_698_71 ~= "" then
					if arg_695_1.bgmTxt_.text ~= var_698_71 and arg_695_1.bgmTxt_.text ~= "" then
						if arg_695_1.bgmTxt2_.text ~= "" then
							arg_695_1.bgmTxt_.text = arg_695_1.bgmTxt2_.text
						end

						arg_695_1.bgmTxt2_.text = var_698_71

						arg_695_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_695_1.bgmTxt_.text = var_698_71
					end

					if arg_695_1.bgmTimer then
						arg_695_1.bgmTimer:Stop()

						arg_695_1.bgmTimer = nil
					end

					if arg_695_1.settingData.show_music_name == 1 then
						arg_695_1.musicController:SetSelectedState("show")
						arg_695_1.musicAnimator_:Play("open", 0, 0)

						if arg_695_1.settingData.music_time ~= 0 then
							arg_695_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_695_1.settingData.music_time), function()
								if arg_695_1 == nil or isNil(arg_695_1.bgmTxt_) then
									return
								end

								arg_695_1.musicController:SetSelectedState("hide")
								arg_695_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_698_72 = 1.26666666666667
			local var_698_73 = 1

			if var_698_72 < arg_695_1.time_ and arg_695_1.time_ <= var_698_72 + arg_698_0 then
				local var_698_74 = "play"
				local var_698_75 = "music"

				arg_695_1:AudioAction(var_698_74, var_698_75, "bgm_story_office", "bgm_story_office", "bgm_story_office.awb")

				local var_698_76 = ""
				local var_698_77 = manager.audio:GetAudioName("bgm_story_office", "bgm_story_office")

				if var_698_77 ~= "" then
					if arg_695_1.bgmTxt_.text ~= var_698_77 and arg_695_1.bgmTxt_.text ~= "" then
						if arg_695_1.bgmTxt2_.text ~= "" then
							arg_695_1.bgmTxt_.text = arg_695_1.bgmTxt2_.text
						end

						arg_695_1.bgmTxt2_.text = var_698_77

						arg_695_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_695_1.bgmTxt_.text = var_698_77
					end

					if arg_695_1.bgmTimer then
						arg_695_1.bgmTimer:Stop()

						arg_695_1.bgmTimer = nil
					end

					if arg_695_1.settingData.show_music_name == 1 then
						arg_695_1.musicController:SetSelectedState("show")
						arg_695_1.musicAnimator_:Play("open", 0, 0)

						if arg_695_1.settingData.music_time ~= 0 then
							arg_695_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_695_1.settingData.music_time), function()
								if arg_695_1 == nil or isNil(arg_695_1.bgmTxt_) then
									return
								end

								arg_695_1.musicController:SetSelectedState("hide")
								arg_695_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			if arg_695_1.frameCnt_ <= 1 then
				arg_695_1.dialog_:SetActive(false)
			end

			local var_698_78 = 4
			local var_698_79 = 0.5

			if var_698_78 < arg_695_1.time_ and arg_695_1.time_ <= var_698_78 + arg_698_0 then
				arg_695_1.talkMaxDuration = 0

				arg_695_1.dialog_:SetActive(true)

				local var_698_80 = LeanTween.value(arg_695_1.dialog_, 0, 1, 0.3)

				var_698_80:setOnUpdate(LuaHelper.FloatAction(function(arg_701_0)
					arg_695_1.dialogCg_.alpha = arg_701_0
				end))
				var_698_80:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_695_1.dialog_)
					var_698_80:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_695_1.duration_ = arg_695_1.duration_ + 0.3

				SetActive(arg_695_1.leftNameGo_, true)

				local var_698_81 = arg_695_1:FormatText(StoryNameCfg[319].name)

				arg_695_1.leftNameTxt_.text = var_698_81

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_695_1.leftNameTxt_.transform)

				arg_695_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_695_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_695_1:RecordName(arg_695_1.leftNameTxt_.text)
				SetActive(arg_695_1.iconTrs_.gameObject, false)
				arg_695_1.callingController_:SetSelectedState("normal")

				local var_698_82 = arg_695_1:GetWordFromCfg(413161170)
				local var_698_83 = arg_695_1:FormatText(var_698_82.content)

				arg_695_1.text_.text = var_698_83

				LuaForUtil.ClearLinePrefixSymbol(arg_695_1.text_)

				local var_698_84 = 20
				local var_698_85 = utf8.len(var_698_83)
				local var_698_86 = var_698_84 <= 0 and var_698_79 or var_698_79 * (var_698_85 / var_698_84)

				if var_698_86 > 0 and var_698_79 < var_698_86 then
					arg_695_1.talkMaxDuration = var_698_86
					var_698_78 = var_698_78 + 0.3

					if var_698_86 + var_698_78 > arg_695_1.duration_ then
						arg_695_1.duration_ = var_698_86 + var_698_78
					end
				end

				arg_695_1.text_.text = var_698_83
				arg_695_1.typewritter.percent = 0

				arg_695_1.typewritter:SetDirty()
				arg_695_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161170", "story_v_out_413161.awb") ~= 0 then
					local var_698_87 = manager.audio:GetVoiceLength("story_v_out_413161", "413161170", "story_v_out_413161.awb") / 1000

					if var_698_87 + var_698_78 > arg_695_1.duration_ then
						arg_695_1.duration_ = var_698_87 + var_698_78
					end

					if var_698_82.prefab_name ~= "" and arg_695_1.actors_[var_698_82.prefab_name] ~= nil then
						local var_698_88 = LuaForUtil.PlayVoiceWithCriLipsync(arg_695_1.actors_[var_698_82.prefab_name].transform, "story_v_out_413161", "413161170", "story_v_out_413161.awb")

						arg_695_1:RecordAudio("413161170", var_698_88)
						arg_695_1:RecordAudio("413161170", var_698_88)
					else
						arg_695_1:AudioAction("play", "voice", "story_v_out_413161", "413161170", "story_v_out_413161.awb")
					end

					arg_695_1:RecordHistoryTalkVoice("story_v_out_413161", "413161170", "story_v_out_413161.awb")
				end

				arg_695_1:RecordContent(arg_695_1.text_.text)
			end

			local var_698_89 = var_698_78 + 0.3
			local var_698_90 = math.max(var_698_79, arg_695_1.talkMaxDuration)

			if var_698_89 <= arg_695_1.time_ and arg_695_1.time_ < var_698_89 + var_698_90 then
				arg_695_1.typewritter.percent = (arg_695_1.time_ - var_698_89) / var_698_90

				arg_695_1.typewritter:SetDirty()
			end

			if arg_695_1.time_ >= var_698_89 + var_698_90 and arg_695_1.time_ < var_698_89 + var_698_90 + arg_698_0 then
				arg_695_1.typewritter.percent = 1

				arg_695_1.typewritter:SetDirty()
				arg_695_1:ShowNextGo(true)
			end
		end
	end,
	Play413161171 = function(arg_703_0, arg_703_1)
		arg_703_1.time_ = 0
		arg_703_1.frameCnt_ = 0
		arg_703_1.state_ = "playing"
		arg_703_1.curTalkId_ = 413161171
		arg_703_1.duration_ = 5

		SetActive(arg_703_1.tipsGo_, false)

		function arg_703_1.onSingleLineFinish_()
			arg_703_1.onSingleLineUpdate_ = nil
			arg_703_1.onSingleLineFinish_ = nil
			arg_703_1.state_ = "waiting"
		end

		function arg_703_1.playNext_(arg_705_0)
			if arg_705_0 == 1 then
				arg_703_0:Play413161172(arg_703_1)
			end
		end

		function arg_703_1.onSingleLineUpdate_(arg_706_0)
			local var_706_0 = arg_703_1.actors_["1029"].transform
			local var_706_1 = 0

			if var_706_1 < arg_703_1.time_ and arg_703_1.time_ <= var_706_1 + arg_706_0 then
				arg_703_1.var_.moveOldPos1029 = var_706_0.localPosition
				var_706_0.localScale = Vector3.New(1, 1, 1)

				arg_703_1:CheckSpriteTmpPos("1029", 7)

				local var_706_2 = var_706_0.childCount

				for iter_706_0 = 0, var_706_2 - 1 do
					local var_706_3 = var_706_0:GetChild(iter_706_0)

					if var_706_3.name == "" or not string.find(var_706_3.name, "split") then
						var_706_3.gameObject:SetActive(true)
					else
						var_706_3.gameObject:SetActive(false)
					end
				end
			end

			local var_706_4 = 0.001

			if var_706_1 <= arg_703_1.time_ and arg_703_1.time_ < var_706_1 + var_706_4 then
				local var_706_5 = (arg_703_1.time_ - var_706_1) / var_706_4
				local var_706_6 = Vector3.New(0, -2000, -140)

				var_706_0.localPosition = Vector3.Lerp(arg_703_1.var_.moveOldPos1029, var_706_6, var_706_5)
			end

			if arg_703_1.time_ >= var_706_1 + var_706_4 and arg_703_1.time_ < var_706_1 + var_706_4 + arg_706_0 then
				var_706_0.localPosition = Vector3.New(0, -2000, -140)
			end

			local var_706_7 = arg_703_1.actors_["1029"]
			local var_706_8 = 0

			if var_706_8 < arg_703_1.time_ and arg_703_1.time_ <= var_706_8 + arg_706_0 and not isNil(var_706_7) and arg_703_1.var_.actorSpriteComps1029 == nil then
				arg_703_1.var_.actorSpriteComps1029 = var_706_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_706_9 = 2

			if var_706_8 <= arg_703_1.time_ and arg_703_1.time_ < var_706_8 + var_706_9 and not isNil(var_706_7) then
				local var_706_10 = (arg_703_1.time_ - var_706_8) / var_706_9

				if arg_703_1.var_.actorSpriteComps1029 then
					for iter_706_1, iter_706_2 in pairs(arg_703_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_706_2 then
							if arg_703_1.isInRecall_ then
								local var_706_11 = Mathf.Lerp(iter_706_2.color.r, arg_703_1.hightColor2.r, var_706_10)
								local var_706_12 = Mathf.Lerp(iter_706_2.color.g, arg_703_1.hightColor2.g, var_706_10)
								local var_706_13 = Mathf.Lerp(iter_706_2.color.b, arg_703_1.hightColor2.b, var_706_10)

								iter_706_2.color = Color.New(var_706_11, var_706_12, var_706_13)
							else
								local var_706_14 = Mathf.Lerp(iter_706_2.color.r, 0.5, var_706_10)

								iter_706_2.color = Color.New(var_706_14, var_706_14, var_706_14)
							end
						end
					end
				end
			end

			if arg_703_1.time_ >= var_706_8 + var_706_9 and arg_703_1.time_ < var_706_8 + var_706_9 + arg_706_0 and not isNil(var_706_7) and arg_703_1.var_.actorSpriteComps1029 then
				for iter_706_3, iter_706_4 in pairs(arg_703_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_706_4 then
						if arg_703_1.isInRecall_ then
							iter_706_4.color = arg_703_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_706_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_703_1.var_.actorSpriteComps1029 = nil
			end

			local var_706_15 = 0
			local var_706_16 = 1.45

			if var_706_15 < arg_703_1.time_ and arg_703_1.time_ <= var_706_15 + arg_706_0 then
				arg_703_1.talkMaxDuration = 0
				arg_703_1.dialogCg_.alpha = 1

				arg_703_1.dialog_:SetActive(true)
				SetActive(arg_703_1.leftNameGo_, false)

				arg_703_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_703_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_703_1:RecordName(arg_703_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_703_1.iconTrs_.gameObject, false)
				arg_703_1.callingController_:SetSelectedState("normal")

				local var_706_17 = arg_703_1:GetWordFromCfg(413161171)
				local var_706_18 = arg_703_1:FormatText(var_706_17.content)

				arg_703_1.text_.text = var_706_18

				LuaForUtil.ClearLinePrefixSymbol(arg_703_1.text_)

				local var_706_19 = 58
				local var_706_20 = utf8.len(var_706_18)
				local var_706_21 = var_706_19 <= 0 and var_706_16 or var_706_16 * (var_706_20 / var_706_19)

				if var_706_21 > 0 and var_706_16 < var_706_21 then
					arg_703_1.talkMaxDuration = var_706_21

					if var_706_21 + var_706_15 > arg_703_1.duration_ then
						arg_703_1.duration_ = var_706_21 + var_706_15
					end
				end

				arg_703_1.text_.text = var_706_18
				arg_703_1.typewritter.percent = 0

				arg_703_1.typewritter:SetDirty()
				arg_703_1:ShowNextGo(false)
				arg_703_1:RecordContent(arg_703_1.text_.text)
			end

			local var_706_22 = math.max(var_706_16, arg_703_1.talkMaxDuration)

			if var_706_15 <= arg_703_1.time_ and arg_703_1.time_ < var_706_15 + var_706_22 then
				arg_703_1.typewritter.percent = (arg_703_1.time_ - var_706_15) / var_706_22

				arg_703_1.typewritter:SetDirty()
			end

			if arg_703_1.time_ >= var_706_15 + var_706_22 and arg_703_1.time_ < var_706_15 + var_706_22 + arg_706_0 then
				arg_703_1.typewritter.percent = 1

				arg_703_1.typewritter:SetDirty()
				arg_703_1:ShowNextGo(true)
			end
		end
	end,
	Play413161172 = function(arg_707_0, arg_707_1)
		arg_707_1.time_ = 0
		arg_707_1.frameCnt_ = 0
		arg_707_1.state_ = "playing"
		arg_707_1.curTalkId_ = 413161172
		arg_707_1.duration_ = 7.57

		local var_707_0 = {
			zh = 5.1,
			ja = 7.566
		}
		local var_707_1 = manager.audio:GetLocalizationFlag()

		if var_707_0[var_707_1] ~= nil then
			arg_707_1.duration_ = var_707_0[var_707_1]
		end

		SetActive(arg_707_1.tipsGo_, false)

		function arg_707_1.onSingleLineFinish_()
			arg_707_1.onSingleLineUpdate_ = nil
			arg_707_1.onSingleLineFinish_ = nil
			arg_707_1.state_ = "waiting"
		end

		function arg_707_1.playNext_(arg_709_0)
			if arg_709_0 == 1 then
				arg_707_0:Play413161173(arg_707_1)
			end
		end

		function arg_707_1.onSingleLineUpdate_(arg_710_0)
			local var_710_0 = arg_707_1.actors_["10093"].transform
			local var_710_1 = 0

			if var_710_1 < arg_707_1.time_ and arg_707_1.time_ <= var_710_1 + arg_710_0 then
				arg_707_1.var_.moveOldPos10093 = var_710_0.localPosition
				var_710_0.localScale = Vector3.New(1, 1, 1)

				arg_707_1:CheckSpriteTmpPos("10093", 4)

				local var_710_2 = var_710_0.childCount

				for iter_710_0 = 0, var_710_2 - 1 do
					local var_710_3 = var_710_0:GetChild(iter_710_0)

					if var_710_3.name == "split_6" or not string.find(var_710_3.name, "split") then
						var_710_3.gameObject:SetActive(true)
					else
						var_710_3.gameObject:SetActive(false)
					end
				end
			end

			local var_710_4 = 0.001

			if var_710_1 <= arg_707_1.time_ and arg_707_1.time_ < var_710_1 + var_710_4 then
				local var_710_5 = (arg_707_1.time_ - var_710_1) / var_710_4
				local var_710_6 = Vector3.New(390, -345, -245)

				var_710_0.localPosition = Vector3.Lerp(arg_707_1.var_.moveOldPos10093, var_710_6, var_710_5)
			end

			if arg_707_1.time_ >= var_710_1 + var_710_4 and arg_707_1.time_ < var_710_1 + var_710_4 + arg_710_0 then
				var_710_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_710_7 = arg_707_1.actors_["1029"]
			local var_710_8 = 0

			if var_710_8 < arg_707_1.time_ and arg_707_1.time_ <= var_710_8 + arg_710_0 and not isNil(var_710_7) and arg_707_1.var_.actorSpriteComps1029 == nil then
				arg_707_1.var_.actorSpriteComps1029 = var_710_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_710_9 = 2

			if var_710_8 <= arg_707_1.time_ and arg_707_1.time_ < var_710_8 + var_710_9 and not isNil(var_710_7) then
				local var_710_10 = (arg_707_1.time_ - var_710_8) / var_710_9

				if arg_707_1.var_.actorSpriteComps1029 then
					for iter_710_1, iter_710_2 in pairs(arg_707_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_710_2 then
							if arg_707_1.isInRecall_ then
								local var_710_11 = Mathf.Lerp(iter_710_2.color.r, arg_707_1.hightColor2.r, var_710_10)
								local var_710_12 = Mathf.Lerp(iter_710_2.color.g, arg_707_1.hightColor2.g, var_710_10)
								local var_710_13 = Mathf.Lerp(iter_710_2.color.b, arg_707_1.hightColor2.b, var_710_10)

								iter_710_2.color = Color.New(var_710_11, var_710_12, var_710_13)
							else
								local var_710_14 = Mathf.Lerp(iter_710_2.color.r, 0.5, var_710_10)

								iter_710_2.color = Color.New(var_710_14, var_710_14, var_710_14)
							end
						end
					end
				end
			end

			if arg_707_1.time_ >= var_710_8 + var_710_9 and arg_707_1.time_ < var_710_8 + var_710_9 + arg_710_0 and not isNil(var_710_7) and arg_707_1.var_.actorSpriteComps1029 then
				for iter_710_3, iter_710_4 in pairs(arg_707_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_710_4 then
						if arg_707_1.isInRecall_ then
							iter_710_4.color = arg_707_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_710_4.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_707_1.var_.actorSpriteComps1029 = nil
			end

			local var_710_15 = arg_707_1.actors_["10093"]
			local var_710_16 = 0

			if var_710_16 < arg_707_1.time_ and arg_707_1.time_ <= var_710_16 + arg_710_0 and not isNil(var_710_15) and arg_707_1.var_.actorSpriteComps10093 == nil then
				arg_707_1.var_.actorSpriteComps10093 = var_710_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_710_17 = 2

			if var_710_16 <= arg_707_1.time_ and arg_707_1.time_ < var_710_16 + var_710_17 and not isNil(var_710_15) then
				local var_710_18 = (arg_707_1.time_ - var_710_16) / var_710_17

				if arg_707_1.var_.actorSpriteComps10093 then
					for iter_710_5, iter_710_6 in pairs(arg_707_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_710_6 then
							if arg_707_1.isInRecall_ then
								local var_710_19 = Mathf.Lerp(iter_710_6.color.r, arg_707_1.hightColor1.r, var_710_18)
								local var_710_20 = Mathf.Lerp(iter_710_6.color.g, arg_707_1.hightColor1.g, var_710_18)
								local var_710_21 = Mathf.Lerp(iter_710_6.color.b, arg_707_1.hightColor1.b, var_710_18)

								iter_710_6.color = Color.New(var_710_19, var_710_20, var_710_21)
							else
								local var_710_22 = Mathf.Lerp(iter_710_6.color.r, 1, var_710_18)

								iter_710_6.color = Color.New(var_710_22, var_710_22, var_710_22)
							end
						end
					end
				end
			end

			if arg_707_1.time_ >= var_710_16 + var_710_17 and arg_707_1.time_ < var_710_16 + var_710_17 + arg_710_0 and not isNil(var_710_15) and arg_707_1.var_.actorSpriteComps10093 then
				for iter_710_7, iter_710_8 in pairs(arg_707_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_710_8 then
						if arg_707_1.isInRecall_ then
							iter_710_8.color = arg_707_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_710_8.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_707_1.var_.actorSpriteComps10093 = nil
			end

			local var_710_23 = 0
			local var_710_24 = 0.5

			if var_710_23 < arg_707_1.time_ and arg_707_1.time_ <= var_710_23 + arg_710_0 then
				arg_707_1.talkMaxDuration = 0
				arg_707_1.dialogCg_.alpha = 1

				arg_707_1.dialog_:SetActive(true)
				SetActive(arg_707_1.leftNameGo_, true)

				local var_710_25 = arg_707_1:FormatText(StoryNameCfg[28].name)

				arg_707_1.leftNameTxt_.text = var_710_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_707_1.leftNameTxt_.transform)

				arg_707_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_707_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_707_1:RecordName(arg_707_1.leftNameTxt_.text)
				SetActive(arg_707_1.iconTrs_.gameObject, false)
				arg_707_1.callingController_:SetSelectedState("normal")

				local var_710_26 = arg_707_1:GetWordFromCfg(413161172)
				local var_710_27 = arg_707_1:FormatText(var_710_26.content)

				arg_707_1.text_.text = var_710_27

				LuaForUtil.ClearLinePrefixSymbol(arg_707_1.text_)

				local var_710_28 = 20
				local var_710_29 = utf8.len(var_710_27)
				local var_710_30 = var_710_28 <= 0 and var_710_24 or var_710_24 * (var_710_29 / var_710_28)

				if var_710_30 > 0 and var_710_24 < var_710_30 then
					arg_707_1.talkMaxDuration = var_710_30

					if var_710_30 + var_710_23 > arg_707_1.duration_ then
						arg_707_1.duration_ = var_710_30 + var_710_23
					end
				end

				arg_707_1.text_.text = var_710_27
				arg_707_1.typewritter.percent = 0

				arg_707_1.typewritter:SetDirty()
				arg_707_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161172", "story_v_out_413161.awb") ~= 0 then
					local var_710_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161172", "story_v_out_413161.awb") / 1000

					if var_710_31 + var_710_23 > arg_707_1.duration_ then
						arg_707_1.duration_ = var_710_31 + var_710_23
					end

					if var_710_26.prefab_name ~= "" and arg_707_1.actors_[var_710_26.prefab_name] ~= nil then
						local var_710_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_707_1.actors_[var_710_26.prefab_name].transform, "story_v_out_413161", "413161172", "story_v_out_413161.awb")

						arg_707_1:RecordAudio("413161172", var_710_32)
						arg_707_1:RecordAudio("413161172", var_710_32)
					else
						arg_707_1:AudioAction("play", "voice", "story_v_out_413161", "413161172", "story_v_out_413161.awb")
					end

					arg_707_1:RecordHistoryTalkVoice("story_v_out_413161", "413161172", "story_v_out_413161.awb")
				end

				arg_707_1:RecordContent(arg_707_1.text_.text)
			end

			local var_710_33 = math.max(var_710_24, arg_707_1.talkMaxDuration)

			if var_710_23 <= arg_707_1.time_ and arg_707_1.time_ < var_710_23 + var_710_33 then
				arg_707_1.typewritter.percent = (arg_707_1.time_ - var_710_23) / var_710_33

				arg_707_1.typewritter:SetDirty()
			end

			if arg_707_1.time_ >= var_710_23 + var_710_33 and arg_707_1.time_ < var_710_23 + var_710_33 + arg_710_0 then
				arg_707_1.typewritter.percent = 1

				arg_707_1.typewritter:SetDirty()
				arg_707_1:ShowNextGo(true)
			end
		end
	end,
	Play413161173 = function(arg_711_0, arg_711_1)
		arg_711_1.time_ = 0
		arg_711_1.frameCnt_ = 0
		arg_711_1.state_ = "playing"
		arg_711_1.curTalkId_ = 413161173
		arg_711_1.duration_ = 10.2

		local var_711_0 = {
			zh = 5.4,
			ja = 10.2
		}
		local var_711_1 = manager.audio:GetLocalizationFlag()

		if var_711_0[var_711_1] ~= nil then
			arg_711_1.duration_ = var_711_0[var_711_1]
		end

		SetActive(arg_711_1.tipsGo_, false)

		function arg_711_1.onSingleLineFinish_()
			arg_711_1.onSingleLineUpdate_ = nil
			arg_711_1.onSingleLineFinish_ = nil
			arg_711_1.state_ = "waiting"
		end

		function arg_711_1.playNext_(arg_713_0)
			if arg_713_0 == 1 then
				arg_711_0:Play413161174(arg_711_1)
			end
		end

		function arg_711_1.onSingleLineUpdate_(arg_714_0)
			local var_714_0 = arg_711_1.actors_["1029"].transform
			local var_714_1 = 0

			if var_714_1 < arg_711_1.time_ and arg_711_1.time_ <= var_714_1 + arg_714_0 then
				arg_711_1.var_.moveOldPos1029 = var_714_0.localPosition
				var_714_0.localScale = Vector3.New(1, 1, 1)

				arg_711_1:CheckSpriteTmpPos("1029", 2)

				local var_714_2 = var_714_0.childCount

				for iter_714_0 = 0, var_714_2 - 1 do
					local var_714_3 = var_714_0:GetChild(iter_714_0)

					if var_714_3.name == "split_1" or not string.find(var_714_3.name, "split") then
						var_714_3.gameObject:SetActive(true)
					else
						var_714_3.gameObject:SetActive(false)
					end
				end
			end

			local var_714_4 = 0.001

			if var_714_1 <= arg_711_1.time_ and arg_711_1.time_ < var_714_1 + var_714_4 then
				local var_714_5 = (arg_711_1.time_ - var_714_1) / var_714_4
				local var_714_6 = Vector3.New(-390, -355, -140)

				var_714_0.localPosition = Vector3.Lerp(arg_711_1.var_.moveOldPos1029, var_714_6, var_714_5)
			end

			if arg_711_1.time_ >= var_714_1 + var_714_4 and arg_711_1.time_ < var_714_1 + var_714_4 + arg_714_0 then
				var_714_0.localPosition = Vector3.New(-390, -355, -140)
			end

			local var_714_7 = arg_711_1.actors_["1029"]
			local var_714_8 = 0

			if var_714_8 < arg_711_1.time_ and arg_711_1.time_ <= var_714_8 + arg_714_0 and not isNil(var_714_7) and arg_711_1.var_.actorSpriteComps1029 == nil then
				arg_711_1.var_.actorSpriteComps1029 = var_714_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_714_9 = 2

			if var_714_8 <= arg_711_1.time_ and arg_711_1.time_ < var_714_8 + var_714_9 and not isNil(var_714_7) then
				local var_714_10 = (arg_711_1.time_ - var_714_8) / var_714_9

				if arg_711_1.var_.actorSpriteComps1029 then
					for iter_714_1, iter_714_2 in pairs(arg_711_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_714_2 then
							if arg_711_1.isInRecall_ then
								local var_714_11 = Mathf.Lerp(iter_714_2.color.r, arg_711_1.hightColor1.r, var_714_10)
								local var_714_12 = Mathf.Lerp(iter_714_2.color.g, arg_711_1.hightColor1.g, var_714_10)
								local var_714_13 = Mathf.Lerp(iter_714_2.color.b, arg_711_1.hightColor1.b, var_714_10)

								iter_714_2.color = Color.New(var_714_11, var_714_12, var_714_13)
							else
								local var_714_14 = Mathf.Lerp(iter_714_2.color.r, 1, var_714_10)

								iter_714_2.color = Color.New(var_714_14, var_714_14, var_714_14)
							end
						end
					end
				end
			end

			if arg_711_1.time_ >= var_714_8 + var_714_9 and arg_711_1.time_ < var_714_8 + var_714_9 + arg_714_0 and not isNil(var_714_7) and arg_711_1.var_.actorSpriteComps1029 then
				for iter_714_3, iter_714_4 in pairs(arg_711_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_714_4 then
						if arg_711_1.isInRecall_ then
							iter_714_4.color = arg_711_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_714_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_711_1.var_.actorSpriteComps1029 = nil
			end

			local var_714_15 = arg_711_1.actors_["10093"]
			local var_714_16 = 0

			if var_714_16 < arg_711_1.time_ and arg_711_1.time_ <= var_714_16 + arg_714_0 and not isNil(var_714_15) and arg_711_1.var_.actorSpriteComps10093 == nil then
				arg_711_1.var_.actorSpriteComps10093 = var_714_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_714_17 = 2

			if var_714_16 <= arg_711_1.time_ and arg_711_1.time_ < var_714_16 + var_714_17 and not isNil(var_714_15) then
				local var_714_18 = (arg_711_1.time_ - var_714_16) / var_714_17

				if arg_711_1.var_.actorSpriteComps10093 then
					for iter_714_5, iter_714_6 in pairs(arg_711_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_714_6 then
							if arg_711_1.isInRecall_ then
								local var_714_19 = Mathf.Lerp(iter_714_6.color.r, arg_711_1.hightColor2.r, var_714_18)
								local var_714_20 = Mathf.Lerp(iter_714_6.color.g, arg_711_1.hightColor2.g, var_714_18)
								local var_714_21 = Mathf.Lerp(iter_714_6.color.b, arg_711_1.hightColor2.b, var_714_18)

								iter_714_6.color = Color.New(var_714_19, var_714_20, var_714_21)
							else
								local var_714_22 = Mathf.Lerp(iter_714_6.color.r, 0.5, var_714_18)

								iter_714_6.color = Color.New(var_714_22, var_714_22, var_714_22)
							end
						end
					end
				end
			end

			if arg_711_1.time_ >= var_714_16 + var_714_17 and arg_711_1.time_ < var_714_16 + var_714_17 + arg_714_0 and not isNil(var_714_15) and arg_711_1.var_.actorSpriteComps10093 then
				for iter_714_7, iter_714_8 in pairs(arg_711_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_714_8 then
						if arg_711_1.isInRecall_ then
							iter_714_8.color = arg_711_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_714_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_711_1.var_.actorSpriteComps10093 = nil
			end

			local var_714_23 = 0
			local var_714_24 = 0.525

			if var_714_23 < arg_711_1.time_ and arg_711_1.time_ <= var_714_23 + arg_714_0 then
				arg_711_1.talkMaxDuration = 0
				arg_711_1.dialogCg_.alpha = 1

				arg_711_1.dialog_:SetActive(true)
				SetActive(arg_711_1.leftNameGo_, true)

				local var_714_25 = arg_711_1:FormatText(StoryNameCfg[319].name)

				arg_711_1.leftNameTxt_.text = var_714_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_711_1.leftNameTxt_.transform)

				arg_711_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_711_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_711_1:RecordName(arg_711_1.leftNameTxt_.text)
				SetActive(arg_711_1.iconTrs_.gameObject, false)
				arg_711_1.callingController_:SetSelectedState("normal")

				local var_714_26 = arg_711_1:GetWordFromCfg(413161173)
				local var_714_27 = arg_711_1:FormatText(var_714_26.content)

				arg_711_1.text_.text = var_714_27

				LuaForUtil.ClearLinePrefixSymbol(arg_711_1.text_)

				local var_714_28 = 21
				local var_714_29 = utf8.len(var_714_27)
				local var_714_30 = var_714_28 <= 0 and var_714_24 or var_714_24 * (var_714_29 / var_714_28)

				if var_714_30 > 0 and var_714_24 < var_714_30 then
					arg_711_1.talkMaxDuration = var_714_30

					if var_714_30 + var_714_23 > arg_711_1.duration_ then
						arg_711_1.duration_ = var_714_30 + var_714_23
					end
				end

				arg_711_1.text_.text = var_714_27
				arg_711_1.typewritter.percent = 0

				arg_711_1.typewritter:SetDirty()
				arg_711_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161173", "story_v_out_413161.awb") ~= 0 then
					local var_714_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161173", "story_v_out_413161.awb") / 1000

					if var_714_31 + var_714_23 > arg_711_1.duration_ then
						arg_711_1.duration_ = var_714_31 + var_714_23
					end

					if var_714_26.prefab_name ~= "" and arg_711_1.actors_[var_714_26.prefab_name] ~= nil then
						local var_714_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_711_1.actors_[var_714_26.prefab_name].transform, "story_v_out_413161", "413161173", "story_v_out_413161.awb")

						arg_711_1:RecordAudio("413161173", var_714_32)
						arg_711_1:RecordAudio("413161173", var_714_32)
					else
						arg_711_1:AudioAction("play", "voice", "story_v_out_413161", "413161173", "story_v_out_413161.awb")
					end

					arg_711_1:RecordHistoryTalkVoice("story_v_out_413161", "413161173", "story_v_out_413161.awb")
				end

				arg_711_1:RecordContent(arg_711_1.text_.text)
			end

			local var_714_33 = math.max(var_714_24, arg_711_1.talkMaxDuration)

			if var_714_23 <= arg_711_1.time_ and arg_711_1.time_ < var_714_23 + var_714_33 then
				arg_711_1.typewritter.percent = (arg_711_1.time_ - var_714_23) / var_714_33

				arg_711_1.typewritter:SetDirty()
			end

			if arg_711_1.time_ >= var_714_23 + var_714_33 and arg_711_1.time_ < var_714_23 + var_714_33 + arg_714_0 then
				arg_711_1.typewritter.percent = 1

				arg_711_1.typewritter:SetDirty()
				arg_711_1:ShowNextGo(true)
			end
		end
	end,
	Play413161174 = function(arg_715_0, arg_715_1)
		arg_715_1.time_ = 0
		arg_715_1.frameCnt_ = 0
		arg_715_1.state_ = "playing"
		arg_715_1.curTalkId_ = 413161174
		arg_715_1.duration_ = 5.23

		local var_715_0 = {
			zh = 3.766,
			ja = 5.233
		}
		local var_715_1 = manager.audio:GetLocalizationFlag()

		if var_715_0[var_715_1] ~= nil then
			arg_715_1.duration_ = var_715_0[var_715_1]
		end

		SetActive(arg_715_1.tipsGo_, false)

		function arg_715_1.onSingleLineFinish_()
			arg_715_1.onSingleLineUpdate_ = nil
			arg_715_1.onSingleLineFinish_ = nil
			arg_715_1.state_ = "waiting"
		end

		function arg_715_1.playNext_(arg_717_0)
			if arg_717_0 == 1 then
				arg_715_0:Play413161175(arg_715_1)
			end
		end

		function arg_715_1.onSingleLineUpdate_(arg_718_0)
			local var_718_0 = arg_715_1.actors_["10093"].transform
			local var_718_1 = 0

			if var_718_1 < arg_715_1.time_ and arg_715_1.time_ <= var_718_1 + arg_718_0 then
				arg_715_1.var_.moveOldPos10093 = var_718_0.localPosition
				var_718_0.localScale = Vector3.New(1, 1, 1)

				arg_715_1:CheckSpriteTmpPos("10093", 4)

				local var_718_2 = var_718_0.childCount

				for iter_718_0 = 0, var_718_2 - 1 do
					local var_718_3 = var_718_0:GetChild(iter_718_0)

					if var_718_3.name == "split_1" or not string.find(var_718_3.name, "split") then
						var_718_3.gameObject:SetActive(true)
					else
						var_718_3.gameObject:SetActive(false)
					end
				end
			end

			local var_718_4 = 0.001

			if var_718_1 <= arg_715_1.time_ and arg_715_1.time_ < var_718_1 + var_718_4 then
				local var_718_5 = (arg_715_1.time_ - var_718_1) / var_718_4
				local var_718_6 = Vector3.New(390, -345, -245)

				var_718_0.localPosition = Vector3.Lerp(arg_715_1.var_.moveOldPos10093, var_718_6, var_718_5)
			end

			if arg_715_1.time_ >= var_718_1 + var_718_4 and arg_715_1.time_ < var_718_1 + var_718_4 + arg_718_0 then
				var_718_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_718_7 = arg_715_1.actors_["10093"]
			local var_718_8 = 0

			if var_718_8 < arg_715_1.time_ and arg_715_1.time_ <= var_718_8 + arg_718_0 and not isNil(var_718_7) and arg_715_1.var_.actorSpriteComps10093 == nil then
				arg_715_1.var_.actorSpriteComps10093 = var_718_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_718_9 = 2

			if var_718_8 <= arg_715_1.time_ and arg_715_1.time_ < var_718_8 + var_718_9 and not isNil(var_718_7) then
				local var_718_10 = (arg_715_1.time_ - var_718_8) / var_718_9

				if arg_715_1.var_.actorSpriteComps10093 then
					for iter_718_1, iter_718_2 in pairs(arg_715_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_718_2 then
							if arg_715_1.isInRecall_ then
								local var_718_11 = Mathf.Lerp(iter_718_2.color.r, arg_715_1.hightColor1.r, var_718_10)
								local var_718_12 = Mathf.Lerp(iter_718_2.color.g, arg_715_1.hightColor1.g, var_718_10)
								local var_718_13 = Mathf.Lerp(iter_718_2.color.b, arg_715_1.hightColor1.b, var_718_10)

								iter_718_2.color = Color.New(var_718_11, var_718_12, var_718_13)
							else
								local var_718_14 = Mathf.Lerp(iter_718_2.color.r, 1, var_718_10)

								iter_718_2.color = Color.New(var_718_14, var_718_14, var_718_14)
							end
						end
					end
				end
			end

			if arg_715_1.time_ >= var_718_8 + var_718_9 and arg_715_1.time_ < var_718_8 + var_718_9 + arg_718_0 and not isNil(var_718_7) and arg_715_1.var_.actorSpriteComps10093 then
				for iter_718_3, iter_718_4 in pairs(arg_715_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_718_4 then
						if arg_715_1.isInRecall_ then
							iter_718_4.color = arg_715_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_718_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_715_1.var_.actorSpriteComps10093 = nil
			end

			local var_718_15 = arg_715_1.actors_["1029"]
			local var_718_16 = 0

			if var_718_16 < arg_715_1.time_ and arg_715_1.time_ <= var_718_16 + arg_718_0 and not isNil(var_718_15) and arg_715_1.var_.actorSpriteComps1029 == nil then
				arg_715_1.var_.actorSpriteComps1029 = var_718_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_718_17 = 2

			if var_718_16 <= arg_715_1.time_ and arg_715_1.time_ < var_718_16 + var_718_17 and not isNil(var_718_15) then
				local var_718_18 = (arg_715_1.time_ - var_718_16) / var_718_17

				if arg_715_1.var_.actorSpriteComps1029 then
					for iter_718_5, iter_718_6 in pairs(arg_715_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_718_6 then
							if arg_715_1.isInRecall_ then
								local var_718_19 = Mathf.Lerp(iter_718_6.color.r, arg_715_1.hightColor2.r, var_718_18)
								local var_718_20 = Mathf.Lerp(iter_718_6.color.g, arg_715_1.hightColor2.g, var_718_18)
								local var_718_21 = Mathf.Lerp(iter_718_6.color.b, arg_715_1.hightColor2.b, var_718_18)

								iter_718_6.color = Color.New(var_718_19, var_718_20, var_718_21)
							else
								local var_718_22 = Mathf.Lerp(iter_718_6.color.r, 0.5, var_718_18)

								iter_718_6.color = Color.New(var_718_22, var_718_22, var_718_22)
							end
						end
					end
				end
			end

			if arg_715_1.time_ >= var_718_16 + var_718_17 and arg_715_1.time_ < var_718_16 + var_718_17 + arg_718_0 and not isNil(var_718_15) and arg_715_1.var_.actorSpriteComps1029 then
				for iter_718_7, iter_718_8 in pairs(arg_715_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_718_8 then
						if arg_715_1.isInRecall_ then
							iter_718_8.color = arg_715_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_718_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_715_1.var_.actorSpriteComps1029 = nil
			end

			local var_718_23 = 0
			local var_718_24 = 0.5

			if var_718_23 < arg_715_1.time_ and arg_715_1.time_ <= var_718_23 + arg_718_0 then
				arg_715_1.talkMaxDuration = 0
				arg_715_1.dialogCg_.alpha = 1

				arg_715_1.dialog_:SetActive(true)
				SetActive(arg_715_1.leftNameGo_, true)

				local var_718_25 = arg_715_1:FormatText(StoryNameCfg[28].name)

				arg_715_1.leftNameTxt_.text = var_718_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_715_1.leftNameTxt_.transform)

				arg_715_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_715_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_715_1:RecordName(arg_715_1.leftNameTxt_.text)
				SetActive(arg_715_1.iconTrs_.gameObject, false)
				arg_715_1.callingController_:SetSelectedState("normal")

				local var_718_26 = arg_715_1:GetWordFromCfg(413161174)
				local var_718_27 = arg_715_1:FormatText(var_718_26.content)

				arg_715_1.text_.text = var_718_27

				LuaForUtil.ClearLinePrefixSymbol(arg_715_1.text_)

				local var_718_28 = 20
				local var_718_29 = utf8.len(var_718_27)
				local var_718_30 = var_718_28 <= 0 and var_718_24 or var_718_24 * (var_718_29 / var_718_28)

				if var_718_30 > 0 and var_718_24 < var_718_30 then
					arg_715_1.talkMaxDuration = var_718_30

					if var_718_30 + var_718_23 > arg_715_1.duration_ then
						arg_715_1.duration_ = var_718_30 + var_718_23
					end
				end

				arg_715_1.text_.text = var_718_27
				arg_715_1.typewritter.percent = 0

				arg_715_1.typewritter:SetDirty()
				arg_715_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161174", "story_v_out_413161.awb") ~= 0 then
					local var_718_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161174", "story_v_out_413161.awb") / 1000

					if var_718_31 + var_718_23 > arg_715_1.duration_ then
						arg_715_1.duration_ = var_718_31 + var_718_23
					end

					if var_718_26.prefab_name ~= "" and arg_715_1.actors_[var_718_26.prefab_name] ~= nil then
						local var_718_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_715_1.actors_[var_718_26.prefab_name].transform, "story_v_out_413161", "413161174", "story_v_out_413161.awb")

						arg_715_1:RecordAudio("413161174", var_718_32)
						arg_715_1:RecordAudio("413161174", var_718_32)
					else
						arg_715_1:AudioAction("play", "voice", "story_v_out_413161", "413161174", "story_v_out_413161.awb")
					end

					arg_715_1:RecordHistoryTalkVoice("story_v_out_413161", "413161174", "story_v_out_413161.awb")
				end

				arg_715_1:RecordContent(arg_715_1.text_.text)
			end

			local var_718_33 = math.max(var_718_24, arg_715_1.talkMaxDuration)

			if var_718_23 <= arg_715_1.time_ and arg_715_1.time_ < var_718_23 + var_718_33 then
				arg_715_1.typewritter.percent = (arg_715_1.time_ - var_718_23) / var_718_33

				arg_715_1.typewritter:SetDirty()
			end

			if arg_715_1.time_ >= var_718_23 + var_718_33 and arg_715_1.time_ < var_718_23 + var_718_33 + arg_718_0 then
				arg_715_1.typewritter.percent = 1

				arg_715_1.typewritter:SetDirty()
				arg_715_1:ShowNextGo(true)
			end
		end
	end,
	Play413161175 = function(arg_719_0, arg_719_1)
		arg_719_1.time_ = 0
		arg_719_1.frameCnt_ = 0
		arg_719_1.state_ = "playing"
		arg_719_1.curTalkId_ = 413161175
		arg_719_1.duration_ = 10.7

		local var_719_0 = {
			zh = 10.466,
			ja = 10.7
		}
		local var_719_1 = manager.audio:GetLocalizationFlag()

		if var_719_0[var_719_1] ~= nil then
			arg_719_1.duration_ = var_719_0[var_719_1]
		end

		SetActive(arg_719_1.tipsGo_, false)

		function arg_719_1.onSingleLineFinish_()
			arg_719_1.onSingleLineUpdate_ = nil
			arg_719_1.onSingleLineFinish_ = nil
			arg_719_1.state_ = "waiting"
		end

		function arg_719_1.playNext_(arg_721_0)
			if arg_721_0 == 1 then
				arg_719_0:Play413161176(arg_719_1)
			end
		end

		function arg_719_1.onSingleLineUpdate_(arg_722_0)
			local var_722_0 = arg_719_1.actors_["1029"]
			local var_722_1 = 0

			if var_722_1 < arg_719_1.time_ and arg_719_1.time_ <= var_722_1 + arg_722_0 and not isNil(var_722_0) and arg_719_1.var_.actorSpriteComps1029 == nil then
				arg_719_1.var_.actorSpriteComps1029 = var_722_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_722_2 = 2

			if var_722_1 <= arg_719_1.time_ and arg_719_1.time_ < var_722_1 + var_722_2 and not isNil(var_722_0) then
				local var_722_3 = (arg_719_1.time_ - var_722_1) / var_722_2

				if arg_719_1.var_.actorSpriteComps1029 then
					for iter_722_0, iter_722_1 in pairs(arg_719_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_722_1 then
							if arg_719_1.isInRecall_ then
								local var_722_4 = Mathf.Lerp(iter_722_1.color.r, arg_719_1.hightColor1.r, var_722_3)
								local var_722_5 = Mathf.Lerp(iter_722_1.color.g, arg_719_1.hightColor1.g, var_722_3)
								local var_722_6 = Mathf.Lerp(iter_722_1.color.b, arg_719_1.hightColor1.b, var_722_3)

								iter_722_1.color = Color.New(var_722_4, var_722_5, var_722_6)
							else
								local var_722_7 = Mathf.Lerp(iter_722_1.color.r, 1, var_722_3)

								iter_722_1.color = Color.New(var_722_7, var_722_7, var_722_7)
							end
						end
					end
				end
			end

			if arg_719_1.time_ >= var_722_1 + var_722_2 and arg_719_1.time_ < var_722_1 + var_722_2 + arg_722_0 and not isNil(var_722_0) and arg_719_1.var_.actorSpriteComps1029 then
				for iter_722_2, iter_722_3 in pairs(arg_719_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_722_3 then
						if arg_719_1.isInRecall_ then
							iter_722_3.color = arg_719_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_722_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_719_1.var_.actorSpriteComps1029 = nil
			end

			local var_722_8 = arg_719_1.actors_["10093"]
			local var_722_9 = 0

			if var_722_9 < arg_719_1.time_ and arg_719_1.time_ <= var_722_9 + arg_722_0 and not isNil(var_722_8) and arg_719_1.var_.actorSpriteComps10093 == nil then
				arg_719_1.var_.actorSpriteComps10093 = var_722_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_722_10 = 2

			if var_722_9 <= arg_719_1.time_ and arg_719_1.time_ < var_722_9 + var_722_10 and not isNil(var_722_8) then
				local var_722_11 = (arg_719_1.time_ - var_722_9) / var_722_10

				if arg_719_1.var_.actorSpriteComps10093 then
					for iter_722_4, iter_722_5 in pairs(arg_719_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_722_5 then
							if arg_719_1.isInRecall_ then
								local var_722_12 = Mathf.Lerp(iter_722_5.color.r, arg_719_1.hightColor2.r, var_722_11)
								local var_722_13 = Mathf.Lerp(iter_722_5.color.g, arg_719_1.hightColor2.g, var_722_11)
								local var_722_14 = Mathf.Lerp(iter_722_5.color.b, arg_719_1.hightColor2.b, var_722_11)

								iter_722_5.color = Color.New(var_722_12, var_722_13, var_722_14)
							else
								local var_722_15 = Mathf.Lerp(iter_722_5.color.r, 0.5, var_722_11)

								iter_722_5.color = Color.New(var_722_15, var_722_15, var_722_15)
							end
						end
					end
				end
			end

			if arg_719_1.time_ >= var_722_9 + var_722_10 and arg_719_1.time_ < var_722_9 + var_722_10 + arg_722_0 and not isNil(var_722_8) and arg_719_1.var_.actorSpriteComps10093 then
				for iter_722_6, iter_722_7 in pairs(arg_719_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_722_7 then
						if arg_719_1.isInRecall_ then
							iter_722_7.color = arg_719_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_722_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_719_1.var_.actorSpriteComps10093 = nil
			end

			local var_722_16 = 0
			local var_722_17 = 0.975

			if var_722_16 < arg_719_1.time_ and arg_719_1.time_ <= var_722_16 + arg_722_0 then
				arg_719_1.talkMaxDuration = 0
				arg_719_1.dialogCg_.alpha = 1

				arg_719_1.dialog_:SetActive(true)
				SetActive(arg_719_1.leftNameGo_, true)

				local var_722_18 = arg_719_1:FormatText(StoryNameCfg[319].name)

				arg_719_1.leftNameTxt_.text = var_722_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_719_1.leftNameTxt_.transform)

				arg_719_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_719_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_719_1:RecordName(arg_719_1.leftNameTxt_.text)
				SetActive(arg_719_1.iconTrs_.gameObject, false)
				arg_719_1.callingController_:SetSelectedState("normal")

				local var_722_19 = arg_719_1:GetWordFromCfg(413161175)
				local var_722_20 = arg_719_1:FormatText(var_722_19.content)

				arg_719_1.text_.text = var_722_20

				LuaForUtil.ClearLinePrefixSymbol(arg_719_1.text_)

				local var_722_21 = 39
				local var_722_22 = utf8.len(var_722_20)
				local var_722_23 = var_722_21 <= 0 and var_722_17 or var_722_17 * (var_722_22 / var_722_21)

				if var_722_23 > 0 and var_722_17 < var_722_23 then
					arg_719_1.talkMaxDuration = var_722_23

					if var_722_23 + var_722_16 > arg_719_1.duration_ then
						arg_719_1.duration_ = var_722_23 + var_722_16
					end
				end

				arg_719_1.text_.text = var_722_20
				arg_719_1.typewritter.percent = 0

				arg_719_1.typewritter:SetDirty()
				arg_719_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161175", "story_v_out_413161.awb") ~= 0 then
					local var_722_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161175", "story_v_out_413161.awb") / 1000

					if var_722_24 + var_722_16 > arg_719_1.duration_ then
						arg_719_1.duration_ = var_722_24 + var_722_16
					end

					if var_722_19.prefab_name ~= "" and arg_719_1.actors_[var_722_19.prefab_name] ~= nil then
						local var_722_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_719_1.actors_[var_722_19.prefab_name].transform, "story_v_out_413161", "413161175", "story_v_out_413161.awb")

						arg_719_1:RecordAudio("413161175", var_722_25)
						arg_719_1:RecordAudio("413161175", var_722_25)
					else
						arg_719_1:AudioAction("play", "voice", "story_v_out_413161", "413161175", "story_v_out_413161.awb")
					end

					arg_719_1:RecordHistoryTalkVoice("story_v_out_413161", "413161175", "story_v_out_413161.awb")
				end

				arg_719_1:RecordContent(arg_719_1.text_.text)
			end

			local var_722_26 = math.max(var_722_17, arg_719_1.talkMaxDuration)

			if var_722_16 <= arg_719_1.time_ and arg_719_1.time_ < var_722_16 + var_722_26 then
				arg_719_1.typewritter.percent = (arg_719_1.time_ - var_722_16) / var_722_26

				arg_719_1.typewritter:SetDirty()
			end

			if arg_719_1.time_ >= var_722_16 + var_722_26 and arg_719_1.time_ < var_722_16 + var_722_26 + arg_722_0 then
				arg_719_1.typewritter.percent = 1

				arg_719_1.typewritter:SetDirty()
				arg_719_1:ShowNextGo(true)
			end
		end
	end,
	Play413161176 = function(arg_723_0, arg_723_1)
		arg_723_1.time_ = 0
		arg_723_1.frameCnt_ = 0
		arg_723_1.state_ = "playing"
		arg_723_1.curTalkId_ = 413161176
		arg_723_1.duration_ = 6.73

		local var_723_0 = {
			zh = 4.1,
			ja = 6.733
		}
		local var_723_1 = manager.audio:GetLocalizationFlag()

		if var_723_0[var_723_1] ~= nil then
			arg_723_1.duration_ = var_723_0[var_723_1]
		end

		SetActive(arg_723_1.tipsGo_, false)

		function arg_723_1.onSingleLineFinish_()
			arg_723_1.onSingleLineUpdate_ = nil
			arg_723_1.onSingleLineFinish_ = nil
			arg_723_1.state_ = "waiting"
		end

		function arg_723_1.playNext_(arg_725_0)
			if arg_725_0 == 1 then
				arg_723_0:Play413161177(arg_723_1)
			end
		end

		function arg_723_1.onSingleLineUpdate_(arg_726_0)
			local var_726_0 = arg_723_1.actors_["10093"].transform
			local var_726_1 = 0

			if var_726_1 < arg_723_1.time_ and arg_723_1.time_ <= var_726_1 + arg_726_0 then
				arg_723_1.var_.moveOldPos10093 = var_726_0.localPosition
				var_726_0.localScale = Vector3.New(1, 1, 1)

				arg_723_1:CheckSpriteTmpPos("10093", 4)

				local var_726_2 = var_726_0.childCount

				for iter_726_0 = 0, var_726_2 - 1 do
					local var_726_3 = var_726_0:GetChild(iter_726_0)

					if var_726_3.name == "split_4" or not string.find(var_726_3.name, "split") then
						var_726_3.gameObject:SetActive(true)
					else
						var_726_3.gameObject:SetActive(false)
					end
				end
			end

			local var_726_4 = 0.001

			if var_726_1 <= arg_723_1.time_ and arg_723_1.time_ < var_726_1 + var_726_4 then
				local var_726_5 = (arg_723_1.time_ - var_726_1) / var_726_4
				local var_726_6 = Vector3.New(390, -345, -245)

				var_726_0.localPosition = Vector3.Lerp(arg_723_1.var_.moveOldPos10093, var_726_6, var_726_5)
			end

			if arg_723_1.time_ >= var_726_1 + var_726_4 and arg_723_1.time_ < var_726_1 + var_726_4 + arg_726_0 then
				var_726_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_726_7 = arg_723_1.actors_["10093"]
			local var_726_8 = 0

			if var_726_8 < arg_723_1.time_ and arg_723_1.time_ <= var_726_8 + arg_726_0 and not isNil(var_726_7) and arg_723_1.var_.actorSpriteComps10093 == nil then
				arg_723_1.var_.actorSpriteComps10093 = var_726_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_726_9 = 2

			if var_726_8 <= arg_723_1.time_ and arg_723_1.time_ < var_726_8 + var_726_9 and not isNil(var_726_7) then
				local var_726_10 = (arg_723_1.time_ - var_726_8) / var_726_9

				if arg_723_1.var_.actorSpriteComps10093 then
					for iter_726_1, iter_726_2 in pairs(arg_723_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_726_2 then
							if arg_723_1.isInRecall_ then
								local var_726_11 = Mathf.Lerp(iter_726_2.color.r, arg_723_1.hightColor1.r, var_726_10)
								local var_726_12 = Mathf.Lerp(iter_726_2.color.g, arg_723_1.hightColor1.g, var_726_10)
								local var_726_13 = Mathf.Lerp(iter_726_2.color.b, arg_723_1.hightColor1.b, var_726_10)

								iter_726_2.color = Color.New(var_726_11, var_726_12, var_726_13)
							else
								local var_726_14 = Mathf.Lerp(iter_726_2.color.r, 1, var_726_10)

								iter_726_2.color = Color.New(var_726_14, var_726_14, var_726_14)
							end
						end
					end
				end
			end

			if arg_723_1.time_ >= var_726_8 + var_726_9 and arg_723_1.time_ < var_726_8 + var_726_9 + arg_726_0 and not isNil(var_726_7) and arg_723_1.var_.actorSpriteComps10093 then
				for iter_726_3, iter_726_4 in pairs(arg_723_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_726_4 then
						if arg_723_1.isInRecall_ then
							iter_726_4.color = arg_723_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_726_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_723_1.var_.actorSpriteComps10093 = nil
			end

			local var_726_15 = arg_723_1.actors_["1029"]
			local var_726_16 = 0

			if var_726_16 < arg_723_1.time_ and arg_723_1.time_ <= var_726_16 + arg_726_0 and not isNil(var_726_15) and arg_723_1.var_.actorSpriteComps1029 == nil then
				arg_723_1.var_.actorSpriteComps1029 = var_726_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_726_17 = 2

			if var_726_16 <= arg_723_1.time_ and arg_723_1.time_ < var_726_16 + var_726_17 and not isNil(var_726_15) then
				local var_726_18 = (arg_723_1.time_ - var_726_16) / var_726_17

				if arg_723_1.var_.actorSpriteComps1029 then
					for iter_726_5, iter_726_6 in pairs(arg_723_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_726_6 then
							if arg_723_1.isInRecall_ then
								local var_726_19 = Mathf.Lerp(iter_726_6.color.r, arg_723_1.hightColor2.r, var_726_18)
								local var_726_20 = Mathf.Lerp(iter_726_6.color.g, arg_723_1.hightColor2.g, var_726_18)
								local var_726_21 = Mathf.Lerp(iter_726_6.color.b, arg_723_1.hightColor2.b, var_726_18)

								iter_726_6.color = Color.New(var_726_19, var_726_20, var_726_21)
							else
								local var_726_22 = Mathf.Lerp(iter_726_6.color.r, 0.5, var_726_18)

								iter_726_6.color = Color.New(var_726_22, var_726_22, var_726_22)
							end
						end
					end
				end
			end

			if arg_723_1.time_ >= var_726_16 + var_726_17 and arg_723_1.time_ < var_726_16 + var_726_17 + arg_726_0 and not isNil(var_726_15) and arg_723_1.var_.actorSpriteComps1029 then
				for iter_726_7, iter_726_8 in pairs(arg_723_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_726_8 then
						if arg_723_1.isInRecall_ then
							iter_726_8.color = arg_723_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_726_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_723_1.var_.actorSpriteComps1029 = nil
			end

			local var_726_23 = 0
			local var_726_24 = 0.425

			if var_726_23 < arg_723_1.time_ and arg_723_1.time_ <= var_726_23 + arg_726_0 then
				arg_723_1.talkMaxDuration = 0
				arg_723_1.dialogCg_.alpha = 1

				arg_723_1.dialog_:SetActive(true)
				SetActive(arg_723_1.leftNameGo_, true)

				local var_726_25 = arg_723_1:FormatText(StoryNameCfg[28].name)

				arg_723_1.leftNameTxt_.text = var_726_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_723_1.leftNameTxt_.transform)

				arg_723_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_723_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_723_1:RecordName(arg_723_1.leftNameTxt_.text)
				SetActive(arg_723_1.iconTrs_.gameObject, false)
				arg_723_1.callingController_:SetSelectedState("normal")

				local var_726_26 = arg_723_1:GetWordFromCfg(413161176)
				local var_726_27 = arg_723_1:FormatText(var_726_26.content)

				arg_723_1.text_.text = var_726_27

				LuaForUtil.ClearLinePrefixSymbol(arg_723_1.text_)

				local var_726_28 = 17
				local var_726_29 = utf8.len(var_726_27)
				local var_726_30 = var_726_28 <= 0 and var_726_24 or var_726_24 * (var_726_29 / var_726_28)

				if var_726_30 > 0 and var_726_24 < var_726_30 then
					arg_723_1.talkMaxDuration = var_726_30

					if var_726_30 + var_726_23 > arg_723_1.duration_ then
						arg_723_1.duration_ = var_726_30 + var_726_23
					end
				end

				arg_723_1.text_.text = var_726_27
				arg_723_1.typewritter.percent = 0

				arg_723_1.typewritter:SetDirty()
				arg_723_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161176", "story_v_out_413161.awb") ~= 0 then
					local var_726_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161176", "story_v_out_413161.awb") / 1000

					if var_726_31 + var_726_23 > arg_723_1.duration_ then
						arg_723_1.duration_ = var_726_31 + var_726_23
					end

					if var_726_26.prefab_name ~= "" and arg_723_1.actors_[var_726_26.prefab_name] ~= nil then
						local var_726_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_723_1.actors_[var_726_26.prefab_name].transform, "story_v_out_413161", "413161176", "story_v_out_413161.awb")

						arg_723_1:RecordAudio("413161176", var_726_32)
						arg_723_1:RecordAudio("413161176", var_726_32)
					else
						arg_723_1:AudioAction("play", "voice", "story_v_out_413161", "413161176", "story_v_out_413161.awb")
					end

					arg_723_1:RecordHistoryTalkVoice("story_v_out_413161", "413161176", "story_v_out_413161.awb")
				end

				arg_723_1:RecordContent(arg_723_1.text_.text)
			end

			local var_726_33 = math.max(var_726_24, arg_723_1.talkMaxDuration)

			if var_726_23 <= arg_723_1.time_ and arg_723_1.time_ < var_726_23 + var_726_33 then
				arg_723_1.typewritter.percent = (arg_723_1.time_ - var_726_23) / var_726_33

				arg_723_1.typewritter:SetDirty()
			end

			if arg_723_1.time_ >= var_726_23 + var_726_33 and arg_723_1.time_ < var_726_23 + var_726_33 + arg_726_0 then
				arg_723_1.typewritter.percent = 1

				arg_723_1.typewritter:SetDirty()
				arg_723_1:ShowNextGo(true)
			end
		end
	end,
	Play413161177 = function(arg_727_0, arg_727_1)
		arg_727_1.time_ = 0
		arg_727_1.frameCnt_ = 0
		arg_727_1.state_ = "playing"
		arg_727_1.curTalkId_ = 413161177
		arg_727_1.duration_ = 5.27

		local var_727_0 = {
			zh = 5.266,
			ja = 4.866
		}
		local var_727_1 = manager.audio:GetLocalizationFlag()

		if var_727_0[var_727_1] ~= nil then
			arg_727_1.duration_ = var_727_0[var_727_1]
		end

		SetActive(arg_727_1.tipsGo_, false)

		function arg_727_1.onSingleLineFinish_()
			arg_727_1.onSingleLineUpdate_ = nil
			arg_727_1.onSingleLineFinish_ = nil
			arg_727_1.state_ = "waiting"
		end

		function arg_727_1.playNext_(arg_729_0)
			if arg_729_0 == 1 then
				arg_727_0:Play413161178(arg_727_1)
			end
		end

		function arg_727_1.onSingleLineUpdate_(arg_730_0)
			local var_730_0 = arg_727_1.actors_["10093"].transform
			local var_730_1 = 0

			if var_730_1 < arg_727_1.time_ and arg_727_1.time_ <= var_730_1 + arg_730_0 then
				arg_727_1.var_.moveOldPos10093 = var_730_0.localPosition
				var_730_0.localScale = Vector3.New(1, 1, 1)

				arg_727_1:CheckSpriteTmpPos("10093", 4)

				local var_730_2 = var_730_0.childCount

				for iter_730_0 = 0, var_730_2 - 1 do
					local var_730_3 = var_730_0:GetChild(iter_730_0)

					if var_730_3.name == "split_1" or not string.find(var_730_3.name, "split") then
						var_730_3.gameObject:SetActive(true)
					else
						var_730_3.gameObject:SetActive(false)
					end
				end
			end

			local var_730_4 = 0.001

			if var_730_1 <= arg_727_1.time_ and arg_727_1.time_ < var_730_1 + var_730_4 then
				local var_730_5 = (arg_727_1.time_ - var_730_1) / var_730_4
				local var_730_6 = Vector3.New(390, -345, -245)

				var_730_0.localPosition = Vector3.Lerp(arg_727_1.var_.moveOldPos10093, var_730_6, var_730_5)
			end

			if arg_727_1.time_ >= var_730_1 + var_730_4 and arg_727_1.time_ < var_730_1 + var_730_4 + arg_730_0 then
				var_730_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_730_7 = 0
			local var_730_8 = 0.675

			if var_730_7 < arg_727_1.time_ and arg_727_1.time_ <= var_730_7 + arg_730_0 then
				arg_727_1.talkMaxDuration = 0
				arg_727_1.dialogCg_.alpha = 1

				arg_727_1.dialog_:SetActive(true)
				SetActive(arg_727_1.leftNameGo_, true)

				local var_730_9 = arg_727_1:FormatText(StoryNameCfg[28].name)

				arg_727_1.leftNameTxt_.text = var_730_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_727_1.leftNameTxt_.transform)

				arg_727_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_727_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_727_1:RecordName(arg_727_1.leftNameTxt_.text)
				SetActive(arg_727_1.iconTrs_.gameObject, false)
				arg_727_1.callingController_:SetSelectedState("normal")

				local var_730_10 = arg_727_1:GetWordFromCfg(413161177)
				local var_730_11 = arg_727_1:FormatText(var_730_10.content)

				arg_727_1.text_.text = var_730_11

				LuaForUtil.ClearLinePrefixSymbol(arg_727_1.text_)

				local var_730_12 = 27
				local var_730_13 = utf8.len(var_730_11)
				local var_730_14 = var_730_12 <= 0 and var_730_8 or var_730_8 * (var_730_13 / var_730_12)

				if var_730_14 > 0 and var_730_8 < var_730_14 then
					arg_727_1.talkMaxDuration = var_730_14

					if var_730_14 + var_730_7 > arg_727_1.duration_ then
						arg_727_1.duration_ = var_730_14 + var_730_7
					end
				end

				arg_727_1.text_.text = var_730_11
				arg_727_1.typewritter.percent = 0

				arg_727_1.typewritter:SetDirty()
				arg_727_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161177", "story_v_out_413161.awb") ~= 0 then
					local var_730_15 = manager.audio:GetVoiceLength("story_v_out_413161", "413161177", "story_v_out_413161.awb") / 1000

					if var_730_15 + var_730_7 > arg_727_1.duration_ then
						arg_727_1.duration_ = var_730_15 + var_730_7
					end

					if var_730_10.prefab_name ~= "" and arg_727_1.actors_[var_730_10.prefab_name] ~= nil then
						local var_730_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_727_1.actors_[var_730_10.prefab_name].transform, "story_v_out_413161", "413161177", "story_v_out_413161.awb")

						arg_727_1:RecordAudio("413161177", var_730_16)
						arg_727_1:RecordAudio("413161177", var_730_16)
					else
						arg_727_1:AudioAction("play", "voice", "story_v_out_413161", "413161177", "story_v_out_413161.awb")
					end

					arg_727_1:RecordHistoryTalkVoice("story_v_out_413161", "413161177", "story_v_out_413161.awb")
				end

				arg_727_1:RecordContent(arg_727_1.text_.text)
			end

			local var_730_17 = math.max(var_730_8, arg_727_1.talkMaxDuration)

			if var_730_7 <= arg_727_1.time_ and arg_727_1.time_ < var_730_7 + var_730_17 then
				arg_727_1.typewritter.percent = (arg_727_1.time_ - var_730_7) / var_730_17

				arg_727_1.typewritter:SetDirty()
			end

			if arg_727_1.time_ >= var_730_7 + var_730_17 and arg_727_1.time_ < var_730_7 + var_730_17 + arg_730_0 then
				arg_727_1.typewritter.percent = 1

				arg_727_1.typewritter:SetDirty()
				arg_727_1:ShowNextGo(true)
			end
		end
	end,
	Play413161178 = function(arg_731_0, arg_731_1)
		arg_731_1.time_ = 0
		arg_731_1.frameCnt_ = 0
		arg_731_1.state_ = "playing"
		arg_731_1.curTalkId_ = 413161178
		arg_731_1.duration_ = 3.13

		local var_731_0 = {
			zh = 1.999999999999,
			ja = 3.133
		}
		local var_731_1 = manager.audio:GetLocalizationFlag()

		if var_731_0[var_731_1] ~= nil then
			arg_731_1.duration_ = var_731_0[var_731_1]
		end

		SetActive(arg_731_1.tipsGo_, false)

		function arg_731_1.onSingleLineFinish_()
			arg_731_1.onSingleLineUpdate_ = nil
			arg_731_1.onSingleLineFinish_ = nil
			arg_731_1.state_ = "waiting"
		end

		function arg_731_1.playNext_(arg_733_0)
			if arg_733_0 == 1 then
				arg_731_0:Play413161179(arg_731_1)
			end
		end

		function arg_731_1.onSingleLineUpdate_(arg_734_0)
			local var_734_0 = arg_731_1.actors_["1029"]
			local var_734_1 = 0

			if var_734_1 < arg_731_1.time_ and arg_731_1.time_ <= var_734_1 + arg_734_0 and not isNil(var_734_0) and arg_731_1.var_.actorSpriteComps1029 == nil then
				arg_731_1.var_.actorSpriteComps1029 = var_734_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_734_2 = 2

			if var_734_1 <= arg_731_1.time_ and arg_731_1.time_ < var_734_1 + var_734_2 and not isNil(var_734_0) then
				local var_734_3 = (arg_731_1.time_ - var_734_1) / var_734_2

				if arg_731_1.var_.actorSpriteComps1029 then
					for iter_734_0, iter_734_1 in pairs(arg_731_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_734_1 then
							if arg_731_1.isInRecall_ then
								local var_734_4 = Mathf.Lerp(iter_734_1.color.r, arg_731_1.hightColor1.r, var_734_3)
								local var_734_5 = Mathf.Lerp(iter_734_1.color.g, arg_731_1.hightColor1.g, var_734_3)
								local var_734_6 = Mathf.Lerp(iter_734_1.color.b, arg_731_1.hightColor1.b, var_734_3)

								iter_734_1.color = Color.New(var_734_4, var_734_5, var_734_6)
							else
								local var_734_7 = Mathf.Lerp(iter_734_1.color.r, 1, var_734_3)

								iter_734_1.color = Color.New(var_734_7, var_734_7, var_734_7)
							end
						end
					end
				end
			end

			if arg_731_1.time_ >= var_734_1 + var_734_2 and arg_731_1.time_ < var_734_1 + var_734_2 + arg_734_0 and not isNil(var_734_0) and arg_731_1.var_.actorSpriteComps1029 then
				for iter_734_2, iter_734_3 in pairs(arg_731_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_734_3 then
						if arg_731_1.isInRecall_ then
							iter_734_3.color = arg_731_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_734_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_731_1.var_.actorSpriteComps1029 = nil
			end

			local var_734_8 = arg_731_1.actors_["10093"]
			local var_734_9 = 0

			if var_734_9 < arg_731_1.time_ and arg_731_1.time_ <= var_734_9 + arg_734_0 and not isNil(var_734_8) and arg_731_1.var_.actorSpriteComps10093 == nil then
				arg_731_1.var_.actorSpriteComps10093 = var_734_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_734_10 = 2

			if var_734_9 <= arg_731_1.time_ and arg_731_1.time_ < var_734_9 + var_734_10 and not isNil(var_734_8) then
				local var_734_11 = (arg_731_1.time_ - var_734_9) / var_734_10

				if arg_731_1.var_.actorSpriteComps10093 then
					for iter_734_4, iter_734_5 in pairs(arg_731_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_734_5 then
							if arg_731_1.isInRecall_ then
								local var_734_12 = Mathf.Lerp(iter_734_5.color.r, arg_731_1.hightColor2.r, var_734_11)
								local var_734_13 = Mathf.Lerp(iter_734_5.color.g, arg_731_1.hightColor2.g, var_734_11)
								local var_734_14 = Mathf.Lerp(iter_734_5.color.b, arg_731_1.hightColor2.b, var_734_11)

								iter_734_5.color = Color.New(var_734_12, var_734_13, var_734_14)
							else
								local var_734_15 = Mathf.Lerp(iter_734_5.color.r, 0.5, var_734_11)

								iter_734_5.color = Color.New(var_734_15, var_734_15, var_734_15)
							end
						end
					end
				end
			end

			if arg_731_1.time_ >= var_734_9 + var_734_10 and arg_731_1.time_ < var_734_9 + var_734_10 + arg_734_0 and not isNil(var_734_8) and arg_731_1.var_.actorSpriteComps10093 then
				for iter_734_6, iter_734_7 in pairs(arg_731_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_734_7 then
						if arg_731_1.isInRecall_ then
							iter_734_7.color = arg_731_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_734_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_731_1.var_.actorSpriteComps10093 = nil
			end

			local var_734_16 = 0
			local var_734_17 = 0.15

			if var_734_16 < arg_731_1.time_ and arg_731_1.time_ <= var_734_16 + arg_734_0 then
				arg_731_1.talkMaxDuration = 0
				arg_731_1.dialogCg_.alpha = 1

				arg_731_1.dialog_:SetActive(true)
				SetActive(arg_731_1.leftNameGo_, true)

				local var_734_18 = arg_731_1:FormatText(StoryNameCfg[319].name)

				arg_731_1.leftNameTxt_.text = var_734_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_731_1.leftNameTxt_.transform)

				arg_731_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_731_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_731_1:RecordName(arg_731_1.leftNameTxt_.text)
				SetActive(arg_731_1.iconTrs_.gameObject, false)
				arg_731_1.callingController_:SetSelectedState("normal")

				local var_734_19 = arg_731_1:GetWordFromCfg(413161178)
				local var_734_20 = arg_731_1:FormatText(var_734_19.content)

				arg_731_1.text_.text = var_734_20

				LuaForUtil.ClearLinePrefixSymbol(arg_731_1.text_)

				local var_734_21 = 6
				local var_734_22 = utf8.len(var_734_20)
				local var_734_23 = var_734_21 <= 0 and var_734_17 or var_734_17 * (var_734_22 / var_734_21)

				if var_734_23 > 0 and var_734_17 < var_734_23 then
					arg_731_1.talkMaxDuration = var_734_23

					if var_734_23 + var_734_16 > arg_731_1.duration_ then
						arg_731_1.duration_ = var_734_23 + var_734_16
					end
				end

				arg_731_1.text_.text = var_734_20
				arg_731_1.typewritter.percent = 0

				arg_731_1.typewritter:SetDirty()
				arg_731_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161178", "story_v_out_413161.awb") ~= 0 then
					local var_734_24 = manager.audio:GetVoiceLength("story_v_out_413161", "413161178", "story_v_out_413161.awb") / 1000

					if var_734_24 + var_734_16 > arg_731_1.duration_ then
						arg_731_1.duration_ = var_734_24 + var_734_16
					end

					if var_734_19.prefab_name ~= "" and arg_731_1.actors_[var_734_19.prefab_name] ~= nil then
						local var_734_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_731_1.actors_[var_734_19.prefab_name].transform, "story_v_out_413161", "413161178", "story_v_out_413161.awb")

						arg_731_1:RecordAudio("413161178", var_734_25)
						arg_731_1:RecordAudio("413161178", var_734_25)
					else
						arg_731_1:AudioAction("play", "voice", "story_v_out_413161", "413161178", "story_v_out_413161.awb")
					end

					arg_731_1:RecordHistoryTalkVoice("story_v_out_413161", "413161178", "story_v_out_413161.awb")
				end

				arg_731_1:RecordContent(arg_731_1.text_.text)
			end

			local var_734_26 = math.max(var_734_17, arg_731_1.talkMaxDuration)

			if var_734_16 <= arg_731_1.time_ and arg_731_1.time_ < var_734_16 + var_734_26 then
				arg_731_1.typewritter.percent = (arg_731_1.time_ - var_734_16) / var_734_26

				arg_731_1.typewritter:SetDirty()
			end

			if arg_731_1.time_ >= var_734_16 + var_734_26 and arg_731_1.time_ < var_734_16 + var_734_26 + arg_734_0 then
				arg_731_1.typewritter.percent = 1

				arg_731_1.typewritter:SetDirty()
				arg_731_1:ShowNextGo(true)
			end
		end
	end,
	Play413161179 = function(arg_735_0, arg_735_1)
		arg_735_1.time_ = 0
		arg_735_1.frameCnt_ = 0
		arg_735_1.state_ = "playing"
		arg_735_1.curTalkId_ = 413161179
		arg_735_1.duration_ = 2

		SetActive(arg_735_1.tipsGo_, false)

		function arg_735_1.onSingleLineFinish_()
			arg_735_1.onSingleLineUpdate_ = nil
			arg_735_1.onSingleLineFinish_ = nil
			arg_735_1.state_ = "waiting"
		end

		function arg_735_1.playNext_(arg_737_0)
			if arg_737_0 == 1 then
				arg_735_0:Play413161180(arg_735_1)
			end
		end

		function arg_735_1.onSingleLineUpdate_(arg_738_0)
			local var_738_0 = arg_735_1.actors_["10093"].transform
			local var_738_1 = 0

			if var_738_1 < arg_735_1.time_ and arg_735_1.time_ <= var_738_1 + arg_738_0 then
				arg_735_1.var_.moveOldPos10093 = var_738_0.localPosition
				var_738_0.localScale = Vector3.New(1, 1, 1)

				arg_735_1:CheckSpriteTmpPos("10093", 4)

				local var_738_2 = var_738_0.childCount

				for iter_738_0 = 0, var_738_2 - 1 do
					local var_738_3 = var_738_0:GetChild(iter_738_0)

					if var_738_3.name == "split_4" or not string.find(var_738_3.name, "split") then
						var_738_3.gameObject:SetActive(true)
					else
						var_738_3.gameObject:SetActive(false)
					end
				end
			end

			local var_738_4 = 0.001

			if var_738_1 <= arg_735_1.time_ and arg_735_1.time_ < var_738_1 + var_738_4 then
				local var_738_5 = (arg_735_1.time_ - var_738_1) / var_738_4
				local var_738_6 = Vector3.New(390, -345, -245)

				var_738_0.localPosition = Vector3.Lerp(arg_735_1.var_.moveOldPos10093, var_738_6, var_738_5)
			end

			if arg_735_1.time_ >= var_738_1 + var_738_4 and arg_735_1.time_ < var_738_1 + var_738_4 + arg_738_0 then
				var_738_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_738_7 = arg_735_1.actors_["10093"]
			local var_738_8 = 0

			if var_738_8 < arg_735_1.time_ and arg_735_1.time_ <= var_738_8 + arg_738_0 and not isNil(var_738_7) and arg_735_1.var_.actorSpriteComps10093 == nil then
				arg_735_1.var_.actorSpriteComps10093 = var_738_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_738_9 = 2

			if var_738_8 <= arg_735_1.time_ and arg_735_1.time_ < var_738_8 + var_738_9 and not isNil(var_738_7) then
				local var_738_10 = (arg_735_1.time_ - var_738_8) / var_738_9

				if arg_735_1.var_.actorSpriteComps10093 then
					for iter_738_1, iter_738_2 in pairs(arg_735_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_738_2 then
							if arg_735_1.isInRecall_ then
								local var_738_11 = Mathf.Lerp(iter_738_2.color.r, arg_735_1.hightColor1.r, var_738_10)
								local var_738_12 = Mathf.Lerp(iter_738_2.color.g, arg_735_1.hightColor1.g, var_738_10)
								local var_738_13 = Mathf.Lerp(iter_738_2.color.b, arg_735_1.hightColor1.b, var_738_10)

								iter_738_2.color = Color.New(var_738_11, var_738_12, var_738_13)
							else
								local var_738_14 = Mathf.Lerp(iter_738_2.color.r, 1, var_738_10)

								iter_738_2.color = Color.New(var_738_14, var_738_14, var_738_14)
							end
						end
					end
				end
			end

			if arg_735_1.time_ >= var_738_8 + var_738_9 and arg_735_1.time_ < var_738_8 + var_738_9 + arg_738_0 and not isNil(var_738_7) and arg_735_1.var_.actorSpriteComps10093 then
				for iter_738_3, iter_738_4 in pairs(arg_735_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_738_4 then
						if arg_735_1.isInRecall_ then
							iter_738_4.color = arg_735_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_738_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_735_1.var_.actorSpriteComps10093 = nil
			end

			local var_738_15 = arg_735_1.actors_["1029"]
			local var_738_16 = 0

			if var_738_16 < arg_735_1.time_ and arg_735_1.time_ <= var_738_16 + arg_738_0 and not isNil(var_738_15) and arg_735_1.var_.actorSpriteComps1029 == nil then
				arg_735_1.var_.actorSpriteComps1029 = var_738_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_738_17 = 2

			if var_738_16 <= arg_735_1.time_ and arg_735_1.time_ < var_738_16 + var_738_17 and not isNil(var_738_15) then
				local var_738_18 = (arg_735_1.time_ - var_738_16) / var_738_17

				if arg_735_1.var_.actorSpriteComps1029 then
					for iter_738_5, iter_738_6 in pairs(arg_735_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_738_6 then
							if arg_735_1.isInRecall_ then
								local var_738_19 = Mathf.Lerp(iter_738_6.color.r, arg_735_1.hightColor2.r, var_738_18)
								local var_738_20 = Mathf.Lerp(iter_738_6.color.g, arg_735_1.hightColor2.g, var_738_18)
								local var_738_21 = Mathf.Lerp(iter_738_6.color.b, arg_735_1.hightColor2.b, var_738_18)

								iter_738_6.color = Color.New(var_738_19, var_738_20, var_738_21)
							else
								local var_738_22 = Mathf.Lerp(iter_738_6.color.r, 0.5, var_738_18)

								iter_738_6.color = Color.New(var_738_22, var_738_22, var_738_22)
							end
						end
					end
				end
			end

			if arg_735_1.time_ >= var_738_16 + var_738_17 and arg_735_1.time_ < var_738_16 + var_738_17 + arg_738_0 and not isNil(var_738_15) and arg_735_1.var_.actorSpriteComps1029 then
				for iter_738_7, iter_738_8 in pairs(arg_735_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_738_8 then
						if arg_735_1.isInRecall_ then
							iter_738_8.color = arg_735_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_738_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_735_1.var_.actorSpriteComps1029 = nil
			end

			local var_738_23 = 0
			local var_738_24 = 0.05

			if var_738_23 < arg_735_1.time_ and arg_735_1.time_ <= var_738_23 + arg_738_0 then
				arg_735_1.talkMaxDuration = 0
				arg_735_1.dialogCg_.alpha = 1

				arg_735_1.dialog_:SetActive(true)
				SetActive(arg_735_1.leftNameGo_, true)

				local var_738_25 = arg_735_1:FormatText(StoryNameCfg[28].name)

				arg_735_1.leftNameTxt_.text = var_738_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_735_1.leftNameTxt_.transform)

				arg_735_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_735_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_735_1:RecordName(arg_735_1.leftNameTxt_.text)
				SetActive(arg_735_1.iconTrs_.gameObject, false)
				arg_735_1.callingController_:SetSelectedState("normal")

				local var_738_26 = arg_735_1:GetWordFromCfg(413161179)
				local var_738_27 = arg_735_1:FormatText(var_738_26.content)

				arg_735_1.text_.text = var_738_27

				LuaForUtil.ClearLinePrefixSymbol(arg_735_1.text_)

				local var_738_28 = 2
				local var_738_29 = utf8.len(var_738_27)
				local var_738_30 = var_738_28 <= 0 and var_738_24 or var_738_24 * (var_738_29 / var_738_28)

				if var_738_30 > 0 and var_738_24 < var_738_30 then
					arg_735_1.talkMaxDuration = var_738_30

					if var_738_30 + var_738_23 > arg_735_1.duration_ then
						arg_735_1.duration_ = var_738_30 + var_738_23
					end
				end

				arg_735_1.text_.text = var_738_27
				arg_735_1.typewritter.percent = 0

				arg_735_1.typewritter:SetDirty()
				arg_735_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161179", "story_v_out_413161.awb") ~= 0 then
					local var_738_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161179", "story_v_out_413161.awb") / 1000

					if var_738_31 + var_738_23 > arg_735_1.duration_ then
						arg_735_1.duration_ = var_738_31 + var_738_23
					end

					if var_738_26.prefab_name ~= "" and arg_735_1.actors_[var_738_26.prefab_name] ~= nil then
						local var_738_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_735_1.actors_[var_738_26.prefab_name].transform, "story_v_out_413161", "413161179", "story_v_out_413161.awb")

						arg_735_1:RecordAudio("413161179", var_738_32)
						arg_735_1:RecordAudio("413161179", var_738_32)
					else
						arg_735_1:AudioAction("play", "voice", "story_v_out_413161", "413161179", "story_v_out_413161.awb")
					end

					arg_735_1:RecordHistoryTalkVoice("story_v_out_413161", "413161179", "story_v_out_413161.awb")
				end

				arg_735_1:RecordContent(arg_735_1.text_.text)
			end

			local var_738_33 = math.max(var_738_24, arg_735_1.talkMaxDuration)

			if var_738_23 <= arg_735_1.time_ and arg_735_1.time_ < var_738_23 + var_738_33 then
				arg_735_1.typewritter.percent = (arg_735_1.time_ - var_738_23) / var_738_33

				arg_735_1.typewritter:SetDirty()
			end

			if arg_735_1.time_ >= var_738_23 + var_738_33 and arg_735_1.time_ < var_738_23 + var_738_33 + arg_738_0 then
				arg_735_1.typewritter.percent = 1

				arg_735_1.typewritter:SetDirty()
				arg_735_1:ShowNextGo(true)
			end
		end
	end,
	Play413161180 = function(arg_739_0, arg_739_1)
		arg_739_1.time_ = 0
		arg_739_1.frameCnt_ = 0
		arg_739_1.state_ = "playing"
		arg_739_1.curTalkId_ = 413161180
		arg_739_1.duration_ = 5.73

		local var_739_0 = {
			zh = 4.3,
			ja = 5.733
		}
		local var_739_1 = manager.audio:GetLocalizationFlag()

		if var_739_0[var_739_1] ~= nil then
			arg_739_1.duration_ = var_739_0[var_739_1]
		end

		SetActive(arg_739_1.tipsGo_, false)

		function arg_739_1.onSingleLineFinish_()
			arg_739_1.onSingleLineUpdate_ = nil
			arg_739_1.onSingleLineFinish_ = nil
			arg_739_1.state_ = "waiting"
		end

		function arg_739_1.playNext_(arg_741_0)
			if arg_741_0 == 1 then
				arg_739_0:Play413161181(arg_739_1)
			end
		end

		function arg_739_1.onSingleLineUpdate_(arg_742_0)
			local var_742_0 = arg_739_1.actors_["1029"].transform
			local var_742_1 = 0

			if var_742_1 < arg_739_1.time_ and arg_739_1.time_ <= var_742_1 + arg_742_0 then
				arg_739_1.var_.moveOldPos1029 = var_742_0.localPosition
				var_742_0.localScale = Vector3.New(1, 1, 1)

				arg_739_1:CheckSpriteTmpPos("1029", 2)

				local var_742_2 = var_742_0.childCount

				for iter_742_0 = 0, var_742_2 - 1 do
					local var_742_3 = var_742_0:GetChild(iter_742_0)

					if var_742_3.name == "split_1" or not string.find(var_742_3.name, "split") then
						var_742_3.gameObject:SetActive(true)
					else
						var_742_3.gameObject:SetActive(false)
					end
				end
			end

			local var_742_4 = 0.001

			if var_742_1 <= arg_739_1.time_ and arg_739_1.time_ < var_742_1 + var_742_4 then
				local var_742_5 = (arg_739_1.time_ - var_742_1) / var_742_4
				local var_742_6 = Vector3.New(-390, -355, -140)

				var_742_0.localPosition = Vector3.Lerp(arg_739_1.var_.moveOldPos1029, var_742_6, var_742_5)
			end

			if arg_739_1.time_ >= var_742_1 + var_742_4 and arg_739_1.time_ < var_742_1 + var_742_4 + arg_742_0 then
				var_742_0.localPosition = Vector3.New(-390, -355, -140)
			end

			local var_742_7 = arg_739_1.actors_["1029"]
			local var_742_8 = 0

			if var_742_8 < arg_739_1.time_ and arg_739_1.time_ <= var_742_8 + arg_742_0 and not isNil(var_742_7) and arg_739_1.var_.actorSpriteComps1029 == nil then
				arg_739_1.var_.actorSpriteComps1029 = var_742_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_742_9 = 2

			if var_742_8 <= arg_739_1.time_ and arg_739_1.time_ < var_742_8 + var_742_9 and not isNil(var_742_7) then
				local var_742_10 = (arg_739_1.time_ - var_742_8) / var_742_9

				if arg_739_1.var_.actorSpriteComps1029 then
					for iter_742_1, iter_742_2 in pairs(arg_739_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_742_2 then
							if arg_739_1.isInRecall_ then
								local var_742_11 = Mathf.Lerp(iter_742_2.color.r, arg_739_1.hightColor1.r, var_742_10)
								local var_742_12 = Mathf.Lerp(iter_742_2.color.g, arg_739_1.hightColor1.g, var_742_10)
								local var_742_13 = Mathf.Lerp(iter_742_2.color.b, arg_739_1.hightColor1.b, var_742_10)

								iter_742_2.color = Color.New(var_742_11, var_742_12, var_742_13)
							else
								local var_742_14 = Mathf.Lerp(iter_742_2.color.r, 1, var_742_10)

								iter_742_2.color = Color.New(var_742_14, var_742_14, var_742_14)
							end
						end
					end
				end
			end

			if arg_739_1.time_ >= var_742_8 + var_742_9 and arg_739_1.time_ < var_742_8 + var_742_9 + arg_742_0 and not isNil(var_742_7) and arg_739_1.var_.actorSpriteComps1029 then
				for iter_742_3, iter_742_4 in pairs(arg_739_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_742_4 then
						if arg_739_1.isInRecall_ then
							iter_742_4.color = arg_739_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_742_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_739_1.var_.actorSpriteComps1029 = nil
			end

			local var_742_15 = arg_739_1.actors_["10093"]
			local var_742_16 = 0

			if var_742_16 < arg_739_1.time_ and arg_739_1.time_ <= var_742_16 + arg_742_0 and not isNil(var_742_15) and arg_739_1.var_.actorSpriteComps10093 == nil then
				arg_739_1.var_.actorSpriteComps10093 = var_742_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_742_17 = 2

			if var_742_16 <= arg_739_1.time_ and arg_739_1.time_ < var_742_16 + var_742_17 and not isNil(var_742_15) then
				local var_742_18 = (arg_739_1.time_ - var_742_16) / var_742_17

				if arg_739_1.var_.actorSpriteComps10093 then
					for iter_742_5, iter_742_6 in pairs(arg_739_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_742_6 then
							if arg_739_1.isInRecall_ then
								local var_742_19 = Mathf.Lerp(iter_742_6.color.r, arg_739_1.hightColor2.r, var_742_18)
								local var_742_20 = Mathf.Lerp(iter_742_6.color.g, arg_739_1.hightColor2.g, var_742_18)
								local var_742_21 = Mathf.Lerp(iter_742_6.color.b, arg_739_1.hightColor2.b, var_742_18)

								iter_742_6.color = Color.New(var_742_19, var_742_20, var_742_21)
							else
								local var_742_22 = Mathf.Lerp(iter_742_6.color.r, 0.5, var_742_18)

								iter_742_6.color = Color.New(var_742_22, var_742_22, var_742_22)
							end
						end
					end
				end
			end

			if arg_739_1.time_ >= var_742_16 + var_742_17 and arg_739_1.time_ < var_742_16 + var_742_17 + arg_742_0 and not isNil(var_742_15) and arg_739_1.var_.actorSpriteComps10093 then
				for iter_742_7, iter_742_8 in pairs(arg_739_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_742_8 then
						if arg_739_1.isInRecall_ then
							iter_742_8.color = arg_739_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_742_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_739_1.var_.actorSpriteComps10093 = nil
			end

			local var_742_23 = 0
			local var_742_24 = 0.475

			if var_742_23 < arg_739_1.time_ and arg_739_1.time_ <= var_742_23 + arg_742_0 then
				arg_739_1.talkMaxDuration = 0
				arg_739_1.dialogCg_.alpha = 1

				arg_739_1.dialog_:SetActive(true)
				SetActive(arg_739_1.leftNameGo_, true)

				local var_742_25 = arg_739_1:FormatText(StoryNameCfg[319].name)

				arg_739_1.leftNameTxt_.text = var_742_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_739_1.leftNameTxt_.transform)

				arg_739_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_739_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_739_1:RecordName(arg_739_1.leftNameTxt_.text)
				SetActive(arg_739_1.iconTrs_.gameObject, false)
				arg_739_1.callingController_:SetSelectedState("normal")

				local var_742_26 = arg_739_1:GetWordFromCfg(413161180)
				local var_742_27 = arg_739_1:FormatText(var_742_26.content)

				arg_739_1.text_.text = var_742_27

				LuaForUtil.ClearLinePrefixSymbol(arg_739_1.text_)

				local var_742_28 = 19
				local var_742_29 = utf8.len(var_742_27)
				local var_742_30 = var_742_28 <= 0 and var_742_24 or var_742_24 * (var_742_29 / var_742_28)

				if var_742_30 > 0 and var_742_24 < var_742_30 then
					arg_739_1.talkMaxDuration = var_742_30

					if var_742_30 + var_742_23 > arg_739_1.duration_ then
						arg_739_1.duration_ = var_742_30 + var_742_23
					end
				end

				arg_739_1.text_.text = var_742_27
				arg_739_1.typewritter.percent = 0

				arg_739_1.typewritter:SetDirty()
				arg_739_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161180", "story_v_out_413161.awb") ~= 0 then
					local var_742_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161180", "story_v_out_413161.awb") / 1000

					if var_742_31 + var_742_23 > arg_739_1.duration_ then
						arg_739_1.duration_ = var_742_31 + var_742_23
					end

					if var_742_26.prefab_name ~= "" and arg_739_1.actors_[var_742_26.prefab_name] ~= nil then
						local var_742_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_739_1.actors_[var_742_26.prefab_name].transform, "story_v_out_413161", "413161180", "story_v_out_413161.awb")

						arg_739_1:RecordAudio("413161180", var_742_32)
						arg_739_1:RecordAudio("413161180", var_742_32)
					else
						arg_739_1:AudioAction("play", "voice", "story_v_out_413161", "413161180", "story_v_out_413161.awb")
					end

					arg_739_1:RecordHistoryTalkVoice("story_v_out_413161", "413161180", "story_v_out_413161.awb")
				end

				arg_739_1:RecordContent(arg_739_1.text_.text)
			end

			local var_742_33 = math.max(var_742_24, arg_739_1.talkMaxDuration)

			if var_742_23 <= arg_739_1.time_ and arg_739_1.time_ < var_742_23 + var_742_33 then
				arg_739_1.typewritter.percent = (arg_739_1.time_ - var_742_23) / var_742_33

				arg_739_1.typewritter:SetDirty()
			end

			if arg_739_1.time_ >= var_742_23 + var_742_33 and arg_739_1.time_ < var_742_23 + var_742_33 + arg_742_0 then
				arg_739_1.typewritter.percent = 1

				arg_739_1.typewritter:SetDirty()
				arg_739_1:ShowNextGo(true)
			end
		end
	end,
	Play413161181 = function(arg_743_0, arg_743_1)
		arg_743_1.time_ = 0
		arg_743_1.frameCnt_ = 0
		arg_743_1.state_ = "playing"
		arg_743_1.curTalkId_ = 413161181
		arg_743_1.duration_ = 9.17

		local var_743_0 = {
			zh = 6.433,
			ja = 9.166
		}
		local var_743_1 = manager.audio:GetLocalizationFlag()

		if var_743_0[var_743_1] ~= nil then
			arg_743_1.duration_ = var_743_0[var_743_1]
		end

		SetActive(arg_743_1.tipsGo_, false)

		function arg_743_1.onSingleLineFinish_()
			arg_743_1.onSingleLineUpdate_ = nil
			arg_743_1.onSingleLineFinish_ = nil
			arg_743_1.state_ = "waiting"
		end

		function arg_743_1.playNext_(arg_745_0)
			if arg_745_0 == 1 then
				arg_743_0:Play413161182(arg_743_1)
			end
		end

		function arg_743_1.onSingleLineUpdate_(arg_746_0)
			local var_746_0 = arg_743_1.actors_["10093"].transform
			local var_746_1 = 0

			if var_746_1 < arg_743_1.time_ and arg_743_1.time_ <= var_746_1 + arg_746_0 then
				arg_743_1.var_.moveOldPos10093 = var_746_0.localPosition
				var_746_0.localScale = Vector3.New(1, 1, 1)

				arg_743_1:CheckSpriteTmpPos("10093", 4)

				local var_746_2 = var_746_0.childCount

				for iter_746_0 = 0, var_746_2 - 1 do
					local var_746_3 = var_746_0:GetChild(iter_746_0)

					if var_746_3.name == "split_4" or not string.find(var_746_3.name, "split") then
						var_746_3.gameObject:SetActive(true)
					else
						var_746_3.gameObject:SetActive(false)
					end
				end
			end

			local var_746_4 = 0.001

			if var_746_1 <= arg_743_1.time_ and arg_743_1.time_ < var_746_1 + var_746_4 then
				local var_746_5 = (arg_743_1.time_ - var_746_1) / var_746_4
				local var_746_6 = Vector3.New(390, -345, -245)

				var_746_0.localPosition = Vector3.Lerp(arg_743_1.var_.moveOldPos10093, var_746_6, var_746_5)
			end

			if arg_743_1.time_ >= var_746_1 + var_746_4 and arg_743_1.time_ < var_746_1 + var_746_4 + arg_746_0 then
				var_746_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_746_7 = arg_743_1.actors_["10093"]
			local var_746_8 = 0

			if var_746_8 < arg_743_1.time_ and arg_743_1.time_ <= var_746_8 + arg_746_0 and not isNil(var_746_7) and arg_743_1.var_.actorSpriteComps10093 == nil then
				arg_743_1.var_.actorSpriteComps10093 = var_746_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_746_9 = 2

			if var_746_8 <= arg_743_1.time_ and arg_743_1.time_ < var_746_8 + var_746_9 and not isNil(var_746_7) then
				local var_746_10 = (arg_743_1.time_ - var_746_8) / var_746_9

				if arg_743_1.var_.actorSpriteComps10093 then
					for iter_746_1, iter_746_2 in pairs(arg_743_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_746_2 then
							if arg_743_1.isInRecall_ then
								local var_746_11 = Mathf.Lerp(iter_746_2.color.r, arg_743_1.hightColor1.r, var_746_10)
								local var_746_12 = Mathf.Lerp(iter_746_2.color.g, arg_743_1.hightColor1.g, var_746_10)
								local var_746_13 = Mathf.Lerp(iter_746_2.color.b, arg_743_1.hightColor1.b, var_746_10)

								iter_746_2.color = Color.New(var_746_11, var_746_12, var_746_13)
							else
								local var_746_14 = Mathf.Lerp(iter_746_2.color.r, 1, var_746_10)

								iter_746_2.color = Color.New(var_746_14, var_746_14, var_746_14)
							end
						end
					end
				end
			end

			if arg_743_1.time_ >= var_746_8 + var_746_9 and arg_743_1.time_ < var_746_8 + var_746_9 + arg_746_0 and not isNil(var_746_7) and arg_743_1.var_.actorSpriteComps10093 then
				for iter_746_3, iter_746_4 in pairs(arg_743_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_746_4 then
						if arg_743_1.isInRecall_ then
							iter_746_4.color = arg_743_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_746_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_743_1.var_.actorSpriteComps10093 = nil
			end

			local var_746_15 = arg_743_1.actors_["1029"]
			local var_746_16 = 0

			if var_746_16 < arg_743_1.time_ and arg_743_1.time_ <= var_746_16 + arg_746_0 and not isNil(var_746_15) and arg_743_1.var_.actorSpriteComps1029 == nil then
				arg_743_1.var_.actorSpriteComps1029 = var_746_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_746_17 = 2

			if var_746_16 <= arg_743_1.time_ and arg_743_1.time_ < var_746_16 + var_746_17 and not isNil(var_746_15) then
				local var_746_18 = (arg_743_1.time_ - var_746_16) / var_746_17

				if arg_743_1.var_.actorSpriteComps1029 then
					for iter_746_5, iter_746_6 in pairs(arg_743_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_746_6 then
							if arg_743_1.isInRecall_ then
								local var_746_19 = Mathf.Lerp(iter_746_6.color.r, arg_743_1.hightColor2.r, var_746_18)
								local var_746_20 = Mathf.Lerp(iter_746_6.color.g, arg_743_1.hightColor2.g, var_746_18)
								local var_746_21 = Mathf.Lerp(iter_746_6.color.b, arg_743_1.hightColor2.b, var_746_18)

								iter_746_6.color = Color.New(var_746_19, var_746_20, var_746_21)
							else
								local var_746_22 = Mathf.Lerp(iter_746_6.color.r, 0.5, var_746_18)

								iter_746_6.color = Color.New(var_746_22, var_746_22, var_746_22)
							end
						end
					end
				end
			end

			if arg_743_1.time_ >= var_746_16 + var_746_17 and arg_743_1.time_ < var_746_16 + var_746_17 + arg_746_0 and not isNil(var_746_15) and arg_743_1.var_.actorSpriteComps1029 then
				for iter_746_7, iter_746_8 in pairs(arg_743_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_746_8 then
						if arg_743_1.isInRecall_ then
							iter_746_8.color = arg_743_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_746_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_743_1.var_.actorSpriteComps1029 = nil
			end

			local var_746_23 = 0
			local var_746_24 = 0.65

			if var_746_23 < arg_743_1.time_ and arg_743_1.time_ <= var_746_23 + arg_746_0 then
				arg_743_1.talkMaxDuration = 0
				arg_743_1.dialogCg_.alpha = 1

				arg_743_1.dialog_:SetActive(true)
				SetActive(arg_743_1.leftNameGo_, true)

				local var_746_25 = arg_743_1:FormatText(StoryNameCfg[28].name)

				arg_743_1.leftNameTxt_.text = var_746_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_743_1.leftNameTxt_.transform)

				arg_743_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_743_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_743_1:RecordName(arg_743_1.leftNameTxt_.text)
				SetActive(arg_743_1.iconTrs_.gameObject, false)
				arg_743_1.callingController_:SetSelectedState("normal")

				local var_746_26 = arg_743_1:GetWordFromCfg(413161181)
				local var_746_27 = arg_743_1:FormatText(var_746_26.content)

				arg_743_1.text_.text = var_746_27

				LuaForUtil.ClearLinePrefixSymbol(arg_743_1.text_)

				local var_746_28 = 26
				local var_746_29 = utf8.len(var_746_27)
				local var_746_30 = var_746_28 <= 0 and var_746_24 or var_746_24 * (var_746_29 / var_746_28)

				if var_746_30 > 0 and var_746_24 < var_746_30 then
					arg_743_1.talkMaxDuration = var_746_30

					if var_746_30 + var_746_23 > arg_743_1.duration_ then
						arg_743_1.duration_ = var_746_30 + var_746_23
					end
				end

				arg_743_1.text_.text = var_746_27
				arg_743_1.typewritter.percent = 0

				arg_743_1.typewritter:SetDirty()
				arg_743_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161181", "story_v_out_413161.awb") ~= 0 then
					local var_746_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161181", "story_v_out_413161.awb") / 1000

					if var_746_31 + var_746_23 > arg_743_1.duration_ then
						arg_743_1.duration_ = var_746_31 + var_746_23
					end

					if var_746_26.prefab_name ~= "" and arg_743_1.actors_[var_746_26.prefab_name] ~= nil then
						local var_746_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_743_1.actors_[var_746_26.prefab_name].transform, "story_v_out_413161", "413161181", "story_v_out_413161.awb")

						arg_743_1:RecordAudio("413161181", var_746_32)
						arg_743_1:RecordAudio("413161181", var_746_32)
					else
						arg_743_1:AudioAction("play", "voice", "story_v_out_413161", "413161181", "story_v_out_413161.awb")
					end

					arg_743_1:RecordHistoryTalkVoice("story_v_out_413161", "413161181", "story_v_out_413161.awb")
				end

				arg_743_1:RecordContent(arg_743_1.text_.text)
			end

			local var_746_33 = math.max(var_746_24, arg_743_1.talkMaxDuration)

			if var_746_23 <= arg_743_1.time_ and arg_743_1.time_ < var_746_23 + var_746_33 then
				arg_743_1.typewritter.percent = (arg_743_1.time_ - var_746_23) / var_746_33

				arg_743_1.typewritter:SetDirty()
			end

			if arg_743_1.time_ >= var_746_23 + var_746_33 and arg_743_1.time_ < var_746_23 + var_746_33 + arg_746_0 then
				arg_743_1.typewritter.percent = 1

				arg_743_1.typewritter:SetDirty()
				arg_743_1:ShowNextGo(true)
			end
		end
	end,
	Play413161182 = function(arg_747_0, arg_747_1)
		arg_747_1.time_ = 0
		arg_747_1.frameCnt_ = 0
		arg_747_1.state_ = "playing"
		arg_747_1.curTalkId_ = 413161182
		arg_747_1.duration_ = 14.9

		local var_747_0 = {
			zh = 7.966,
			ja = 14.9
		}
		local var_747_1 = manager.audio:GetLocalizationFlag()

		if var_747_0[var_747_1] ~= nil then
			arg_747_1.duration_ = var_747_0[var_747_1]
		end

		SetActive(arg_747_1.tipsGo_, false)

		function arg_747_1.onSingleLineFinish_()
			arg_747_1.onSingleLineUpdate_ = nil
			arg_747_1.onSingleLineFinish_ = nil
			arg_747_1.state_ = "waiting"
		end

		function arg_747_1.playNext_(arg_749_0)
			if arg_749_0 == 1 then
				arg_747_0:Play413161183(arg_747_1)
			end
		end

		function arg_747_1.onSingleLineUpdate_(arg_750_0)
			local var_750_0 = arg_747_1.actors_["1029"].transform
			local var_750_1 = 0

			if var_750_1 < arg_747_1.time_ and arg_747_1.time_ <= var_750_1 + arg_750_0 then
				arg_747_1.var_.moveOldPos1029 = var_750_0.localPosition
				var_750_0.localScale = Vector3.New(1, 1, 1)

				arg_747_1:CheckSpriteTmpPos("1029", 2)

				local var_750_2 = var_750_0.childCount

				for iter_750_0 = 0, var_750_2 - 1 do
					local var_750_3 = var_750_0:GetChild(iter_750_0)

					if var_750_3.name == "split_1" or not string.find(var_750_3.name, "split") then
						var_750_3.gameObject:SetActive(true)
					else
						var_750_3.gameObject:SetActive(false)
					end
				end
			end

			local var_750_4 = 0.001

			if var_750_1 <= arg_747_1.time_ and arg_747_1.time_ < var_750_1 + var_750_4 then
				local var_750_5 = (arg_747_1.time_ - var_750_1) / var_750_4
				local var_750_6 = Vector3.New(-390, -355, -140)

				var_750_0.localPosition = Vector3.Lerp(arg_747_1.var_.moveOldPos1029, var_750_6, var_750_5)
			end

			if arg_747_1.time_ >= var_750_1 + var_750_4 and arg_747_1.time_ < var_750_1 + var_750_4 + arg_750_0 then
				var_750_0.localPosition = Vector3.New(-390, -355, -140)
			end

			local var_750_7 = arg_747_1.actors_["1029"]
			local var_750_8 = 0

			if var_750_8 < arg_747_1.time_ and arg_747_1.time_ <= var_750_8 + arg_750_0 and not isNil(var_750_7) and arg_747_1.var_.actorSpriteComps1029 == nil then
				arg_747_1.var_.actorSpriteComps1029 = var_750_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_750_9 = 2

			if var_750_8 <= arg_747_1.time_ and arg_747_1.time_ < var_750_8 + var_750_9 and not isNil(var_750_7) then
				local var_750_10 = (arg_747_1.time_ - var_750_8) / var_750_9

				if arg_747_1.var_.actorSpriteComps1029 then
					for iter_750_1, iter_750_2 in pairs(arg_747_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_750_2 then
							if arg_747_1.isInRecall_ then
								local var_750_11 = Mathf.Lerp(iter_750_2.color.r, arg_747_1.hightColor1.r, var_750_10)
								local var_750_12 = Mathf.Lerp(iter_750_2.color.g, arg_747_1.hightColor1.g, var_750_10)
								local var_750_13 = Mathf.Lerp(iter_750_2.color.b, arg_747_1.hightColor1.b, var_750_10)

								iter_750_2.color = Color.New(var_750_11, var_750_12, var_750_13)
							else
								local var_750_14 = Mathf.Lerp(iter_750_2.color.r, 1, var_750_10)

								iter_750_2.color = Color.New(var_750_14, var_750_14, var_750_14)
							end
						end
					end
				end
			end

			if arg_747_1.time_ >= var_750_8 + var_750_9 and arg_747_1.time_ < var_750_8 + var_750_9 + arg_750_0 and not isNil(var_750_7) and arg_747_1.var_.actorSpriteComps1029 then
				for iter_750_3, iter_750_4 in pairs(arg_747_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_750_4 then
						if arg_747_1.isInRecall_ then
							iter_750_4.color = arg_747_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_750_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_747_1.var_.actorSpriteComps1029 = nil
			end

			local var_750_15 = arg_747_1.actors_["10093"]
			local var_750_16 = 0

			if var_750_16 < arg_747_1.time_ and arg_747_1.time_ <= var_750_16 + arg_750_0 and not isNil(var_750_15) and arg_747_1.var_.actorSpriteComps10093 == nil then
				arg_747_1.var_.actorSpriteComps10093 = var_750_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_750_17 = 2

			if var_750_16 <= arg_747_1.time_ and arg_747_1.time_ < var_750_16 + var_750_17 and not isNil(var_750_15) then
				local var_750_18 = (arg_747_1.time_ - var_750_16) / var_750_17

				if arg_747_1.var_.actorSpriteComps10093 then
					for iter_750_5, iter_750_6 in pairs(arg_747_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_750_6 then
							if arg_747_1.isInRecall_ then
								local var_750_19 = Mathf.Lerp(iter_750_6.color.r, arg_747_1.hightColor2.r, var_750_18)
								local var_750_20 = Mathf.Lerp(iter_750_6.color.g, arg_747_1.hightColor2.g, var_750_18)
								local var_750_21 = Mathf.Lerp(iter_750_6.color.b, arg_747_1.hightColor2.b, var_750_18)

								iter_750_6.color = Color.New(var_750_19, var_750_20, var_750_21)
							else
								local var_750_22 = Mathf.Lerp(iter_750_6.color.r, 0.5, var_750_18)

								iter_750_6.color = Color.New(var_750_22, var_750_22, var_750_22)
							end
						end
					end
				end
			end

			if arg_747_1.time_ >= var_750_16 + var_750_17 and arg_747_1.time_ < var_750_16 + var_750_17 + arg_750_0 and not isNil(var_750_15) and arg_747_1.var_.actorSpriteComps10093 then
				for iter_750_7, iter_750_8 in pairs(arg_747_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_750_8 then
						if arg_747_1.isInRecall_ then
							iter_750_8.color = arg_747_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_750_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_747_1.var_.actorSpriteComps10093 = nil
			end

			local var_750_23 = 0
			local var_750_24 = 0.875

			if var_750_23 < arg_747_1.time_ and arg_747_1.time_ <= var_750_23 + arg_750_0 then
				arg_747_1.talkMaxDuration = 0
				arg_747_1.dialogCg_.alpha = 1

				arg_747_1.dialog_:SetActive(true)
				SetActive(arg_747_1.leftNameGo_, true)

				local var_750_25 = arg_747_1:FormatText(StoryNameCfg[319].name)

				arg_747_1.leftNameTxt_.text = var_750_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_747_1.leftNameTxt_.transform)

				arg_747_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_747_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_747_1:RecordName(arg_747_1.leftNameTxt_.text)
				SetActive(arg_747_1.iconTrs_.gameObject, false)
				arg_747_1.callingController_:SetSelectedState("normal")

				local var_750_26 = arg_747_1:GetWordFromCfg(413161182)
				local var_750_27 = arg_747_1:FormatText(var_750_26.content)

				arg_747_1.text_.text = var_750_27

				LuaForUtil.ClearLinePrefixSymbol(arg_747_1.text_)

				local var_750_28 = 35
				local var_750_29 = utf8.len(var_750_27)
				local var_750_30 = var_750_28 <= 0 and var_750_24 or var_750_24 * (var_750_29 / var_750_28)

				if var_750_30 > 0 and var_750_24 < var_750_30 then
					arg_747_1.talkMaxDuration = var_750_30

					if var_750_30 + var_750_23 > arg_747_1.duration_ then
						arg_747_1.duration_ = var_750_30 + var_750_23
					end
				end

				arg_747_1.text_.text = var_750_27
				arg_747_1.typewritter.percent = 0

				arg_747_1.typewritter:SetDirty()
				arg_747_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161182", "story_v_out_413161.awb") ~= 0 then
					local var_750_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161182", "story_v_out_413161.awb") / 1000

					if var_750_31 + var_750_23 > arg_747_1.duration_ then
						arg_747_1.duration_ = var_750_31 + var_750_23
					end

					if var_750_26.prefab_name ~= "" and arg_747_1.actors_[var_750_26.prefab_name] ~= nil then
						local var_750_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_747_1.actors_[var_750_26.prefab_name].transform, "story_v_out_413161", "413161182", "story_v_out_413161.awb")

						arg_747_1:RecordAudio("413161182", var_750_32)
						arg_747_1:RecordAudio("413161182", var_750_32)
					else
						arg_747_1:AudioAction("play", "voice", "story_v_out_413161", "413161182", "story_v_out_413161.awb")
					end

					arg_747_1:RecordHistoryTalkVoice("story_v_out_413161", "413161182", "story_v_out_413161.awb")
				end

				arg_747_1:RecordContent(arg_747_1.text_.text)
			end

			local var_750_33 = math.max(var_750_24, arg_747_1.talkMaxDuration)

			if var_750_23 <= arg_747_1.time_ and arg_747_1.time_ < var_750_23 + var_750_33 then
				arg_747_1.typewritter.percent = (arg_747_1.time_ - var_750_23) / var_750_33

				arg_747_1.typewritter:SetDirty()
			end

			if arg_747_1.time_ >= var_750_23 + var_750_33 and arg_747_1.time_ < var_750_23 + var_750_33 + arg_750_0 then
				arg_747_1.typewritter.percent = 1

				arg_747_1.typewritter:SetDirty()
				arg_747_1:ShowNextGo(true)
			end
		end
	end,
	Play413161183 = function(arg_751_0, arg_751_1)
		arg_751_1.time_ = 0
		arg_751_1.frameCnt_ = 0
		arg_751_1.state_ = "playing"
		arg_751_1.curTalkId_ = 413161183
		arg_751_1.duration_ = 12.63

		local var_751_0 = {
			zh = 10,
			ja = 12.633
		}
		local var_751_1 = manager.audio:GetLocalizationFlag()

		if var_751_0[var_751_1] ~= nil then
			arg_751_1.duration_ = var_751_0[var_751_1]
		end

		SetActive(arg_751_1.tipsGo_, false)

		function arg_751_1.onSingleLineFinish_()
			arg_751_1.onSingleLineUpdate_ = nil
			arg_751_1.onSingleLineFinish_ = nil
			arg_751_1.state_ = "waiting"
		end

		function arg_751_1.playNext_(arg_753_0)
			if arg_753_0 == 1 then
				arg_751_0:Play413161184(arg_751_1)
			end
		end

		function arg_751_1.onSingleLineUpdate_(arg_754_0)
			local var_754_0 = 0
			local var_754_1 = 1.15

			if var_754_0 < arg_751_1.time_ and arg_751_1.time_ <= var_754_0 + arg_754_0 then
				arg_751_1.talkMaxDuration = 0
				arg_751_1.dialogCg_.alpha = 1

				arg_751_1.dialog_:SetActive(true)
				SetActive(arg_751_1.leftNameGo_, true)

				local var_754_2 = arg_751_1:FormatText(StoryNameCfg[319].name)

				arg_751_1.leftNameTxt_.text = var_754_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_751_1.leftNameTxt_.transform)

				arg_751_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_751_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_751_1:RecordName(arg_751_1.leftNameTxt_.text)
				SetActive(arg_751_1.iconTrs_.gameObject, false)
				arg_751_1.callingController_:SetSelectedState("normal")

				local var_754_3 = arg_751_1:GetWordFromCfg(413161183)
				local var_754_4 = arg_751_1:FormatText(var_754_3.content)

				arg_751_1.text_.text = var_754_4

				LuaForUtil.ClearLinePrefixSymbol(arg_751_1.text_)

				local var_754_5 = 46
				local var_754_6 = utf8.len(var_754_4)
				local var_754_7 = var_754_5 <= 0 and var_754_1 or var_754_1 * (var_754_6 / var_754_5)

				if var_754_7 > 0 and var_754_1 < var_754_7 then
					arg_751_1.talkMaxDuration = var_754_7

					if var_754_7 + var_754_0 > arg_751_1.duration_ then
						arg_751_1.duration_ = var_754_7 + var_754_0
					end
				end

				arg_751_1.text_.text = var_754_4
				arg_751_1.typewritter.percent = 0

				arg_751_1.typewritter:SetDirty()
				arg_751_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161183", "story_v_out_413161.awb") ~= 0 then
					local var_754_8 = manager.audio:GetVoiceLength("story_v_out_413161", "413161183", "story_v_out_413161.awb") / 1000

					if var_754_8 + var_754_0 > arg_751_1.duration_ then
						arg_751_1.duration_ = var_754_8 + var_754_0
					end

					if var_754_3.prefab_name ~= "" and arg_751_1.actors_[var_754_3.prefab_name] ~= nil then
						local var_754_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_751_1.actors_[var_754_3.prefab_name].transform, "story_v_out_413161", "413161183", "story_v_out_413161.awb")

						arg_751_1:RecordAudio("413161183", var_754_9)
						arg_751_1:RecordAudio("413161183", var_754_9)
					else
						arg_751_1:AudioAction("play", "voice", "story_v_out_413161", "413161183", "story_v_out_413161.awb")
					end

					arg_751_1:RecordHistoryTalkVoice("story_v_out_413161", "413161183", "story_v_out_413161.awb")
				end

				arg_751_1:RecordContent(arg_751_1.text_.text)
			end

			local var_754_10 = math.max(var_754_1, arg_751_1.talkMaxDuration)

			if var_754_0 <= arg_751_1.time_ and arg_751_1.time_ < var_754_0 + var_754_10 then
				arg_751_1.typewritter.percent = (arg_751_1.time_ - var_754_0) / var_754_10

				arg_751_1.typewritter:SetDirty()
			end

			if arg_751_1.time_ >= var_754_0 + var_754_10 and arg_751_1.time_ < var_754_0 + var_754_10 + arg_754_0 then
				arg_751_1.typewritter.percent = 1

				arg_751_1.typewritter:SetDirty()
				arg_751_1:ShowNextGo(true)
			end
		end
	end,
	Play413161184 = function(arg_755_0, arg_755_1)
		arg_755_1.time_ = 0
		arg_755_1.frameCnt_ = 0
		arg_755_1.state_ = "playing"
		arg_755_1.curTalkId_ = 413161184
		arg_755_1.duration_ = 3.57

		local var_755_0 = {
			zh = 2.1,
			ja = 3.566
		}
		local var_755_1 = manager.audio:GetLocalizationFlag()

		if var_755_0[var_755_1] ~= nil then
			arg_755_1.duration_ = var_755_0[var_755_1]
		end

		SetActive(arg_755_1.tipsGo_, false)

		function arg_755_1.onSingleLineFinish_()
			arg_755_1.onSingleLineUpdate_ = nil
			arg_755_1.onSingleLineFinish_ = nil
			arg_755_1.state_ = "waiting"
		end

		function arg_755_1.playNext_(arg_757_0)
			if arg_757_0 == 1 then
				arg_755_0:Play413161185(arg_755_1)
			end
		end

		function arg_755_1.onSingleLineUpdate_(arg_758_0)
			local var_758_0 = arg_755_1.actors_["10093"].transform
			local var_758_1 = 0

			if var_758_1 < arg_755_1.time_ and arg_755_1.time_ <= var_758_1 + arg_758_0 then
				arg_755_1.var_.moveOldPos10093 = var_758_0.localPosition
				var_758_0.localScale = Vector3.New(1, 1, 1)

				arg_755_1:CheckSpriteTmpPos("10093", 4)

				local var_758_2 = var_758_0.childCount

				for iter_758_0 = 0, var_758_2 - 1 do
					local var_758_3 = var_758_0:GetChild(iter_758_0)

					if var_758_3.name == "split_5" or not string.find(var_758_3.name, "split") then
						var_758_3.gameObject:SetActive(true)
					else
						var_758_3.gameObject:SetActive(false)
					end
				end
			end

			local var_758_4 = 0.001

			if var_758_1 <= arg_755_1.time_ and arg_755_1.time_ < var_758_1 + var_758_4 then
				local var_758_5 = (arg_755_1.time_ - var_758_1) / var_758_4
				local var_758_6 = Vector3.New(390, -345, -245)

				var_758_0.localPosition = Vector3.Lerp(arg_755_1.var_.moveOldPos10093, var_758_6, var_758_5)
			end

			if arg_755_1.time_ >= var_758_1 + var_758_4 and arg_755_1.time_ < var_758_1 + var_758_4 + arg_758_0 then
				var_758_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_758_7 = arg_755_1.actors_["10093"]
			local var_758_8 = 0

			if var_758_8 < arg_755_1.time_ and arg_755_1.time_ <= var_758_8 + arg_758_0 and not isNil(var_758_7) and arg_755_1.var_.actorSpriteComps10093 == nil then
				arg_755_1.var_.actorSpriteComps10093 = var_758_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_758_9 = 2

			if var_758_8 <= arg_755_1.time_ and arg_755_1.time_ < var_758_8 + var_758_9 and not isNil(var_758_7) then
				local var_758_10 = (arg_755_1.time_ - var_758_8) / var_758_9

				if arg_755_1.var_.actorSpriteComps10093 then
					for iter_758_1, iter_758_2 in pairs(arg_755_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_758_2 then
							if arg_755_1.isInRecall_ then
								local var_758_11 = Mathf.Lerp(iter_758_2.color.r, arg_755_1.hightColor1.r, var_758_10)
								local var_758_12 = Mathf.Lerp(iter_758_2.color.g, arg_755_1.hightColor1.g, var_758_10)
								local var_758_13 = Mathf.Lerp(iter_758_2.color.b, arg_755_1.hightColor1.b, var_758_10)

								iter_758_2.color = Color.New(var_758_11, var_758_12, var_758_13)
							else
								local var_758_14 = Mathf.Lerp(iter_758_2.color.r, 1, var_758_10)

								iter_758_2.color = Color.New(var_758_14, var_758_14, var_758_14)
							end
						end
					end
				end
			end

			if arg_755_1.time_ >= var_758_8 + var_758_9 and arg_755_1.time_ < var_758_8 + var_758_9 + arg_758_0 and not isNil(var_758_7) and arg_755_1.var_.actorSpriteComps10093 then
				for iter_758_3, iter_758_4 in pairs(arg_755_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_758_4 then
						if arg_755_1.isInRecall_ then
							iter_758_4.color = arg_755_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_758_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_755_1.var_.actorSpriteComps10093 = nil
			end

			local var_758_15 = arg_755_1.actors_["1029"]
			local var_758_16 = 0

			if var_758_16 < arg_755_1.time_ and arg_755_1.time_ <= var_758_16 + arg_758_0 and not isNil(var_758_15) and arg_755_1.var_.actorSpriteComps1029 == nil then
				arg_755_1.var_.actorSpriteComps1029 = var_758_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_758_17 = 2

			if var_758_16 <= arg_755_1.time_ and arg_755_1.time_ < var_758_16 + var_758_17 and not isNil(var_758_15) then
				local var_758_18 = (arg_755_1.time_ - var_758_16) / var_758_17

				if arg_755_1.var_.actorSpriteComps1029 then
					for iter_758_5, iter_758_6 in pairs(arg_755_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_758_6 then
							if arg_755_1.isInRecall_ then
								local var_758_19 = Mathf.Lerp(iter_758_6.color.r, arg_755_1.hightColor2.r, var_758_18)
								local var_758_20 = Mathf.Lerp(iter_758_6.color.g, arg_755_1.hightColor2.g, var_758_18)
								local var_758_21 = Mathf.Lerp(iter_758_6.color.b, arg_755_1.hightColor2.b, var_758_18)

								iter_758_6.color = Color.New(var_758_19, var_758_20, var_758_21)
							else
								local var_758_22 = Mathf.Lerp(iter_758_6.color.r, 0.5, var_758_18)

								iter_758_6.color = Color.New(var_758_22, var_758_22, var_758_22)
							end
						end
					end
				end
			end

			if arg_755_1.time_ >= var_758_16 + var_758_17 and arg_755_1.time_ < var_758_16 + var_758_17 + arg_758_0 and not isNil(var_758_15) and arg_755_1.var_.actorSpriteComps1029 then
				for iter_758_7, iter_758_8 in pairs(arg_755_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_758_8 then
						if arg_755_1.isInRecall_ then
							iter_758_8.color = arg_755_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_758_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_755_1.var_.actorSpriteComps1029 = nil
			end

			local var_758_23 = 0
			local var_758_24 = 0.125

			if var_758_23 < arg_755_1.time_ and arg_755_1.time_ <= var_758_23 + arg_758_0 then
				arg_755_1.talkMaxDuration = 0
				arg_755_1.dialogCg_.alpha = 1

				arg_755_1.dialog_:SetActive(true)
				SetActive(arg_755_1.leftNameGo_, true)

				local var_758_25 = arg_755_1:FormatText(StoryNameCfg[28].name)

				arg_755_1.leftNameTxt_.text = var_758_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_755_1.leftNameTxt_.transform)

				arg_755_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_755_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_755_1:RecordName(arg_755_1.leftNameTxt_.text)
				SetActive(arg_755_1.iconTrs_.gameObject, false)
				arg_755_1.callingController_:SetSelectedState("normal")

				local var_758_26 = arg_755_1:GetWordFromCfg(413161184)
				local var_758_27 = arg_755_1:FormatText(var_758_26.content)

				arg_755_1.text_.text = var_758_27

				LuaForUtil.ClearLinePrefixSymbol(arg_755_1.text_)

				local var_758_28 = 5
				local var_758_29 = utf8.len(var_758_27)
				local var_758_30 = var_758_28 <= 0 and var_758_24 or var_758_24 * (var_758_29 / var_758_28)

				if var_758_30 > 0 and var_758_24 < var_758_30 then
					arg_755_1.talkMaxDuration = var_758_30

					if var_758_30 + var_758_23 > arg_755_1.duration_ then
						arg_755_1.duration_ = var_758_30 + var_758_23
					end
				end

				arg_755_1.text_.text = var_758_27
				arg_755_1.typewritter.percent = 0

				arg_755_1.typewritter:SetDirty()
				arg_755_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161184", "story_v_out_413161.awb") ~= 0 then
					local var_758_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161184", "story_v_out_413161.awb") / 1000

					if var_758_31 + var_758_23 > arg_755_1.duration_ then
						arg_755_1.duration_ = var_758_31 + var_758_23
					end

					if var_758_26.prefab_name ~= "" and arg_755_1.actors_[var_758_26.prefab_name] ~= nil then
						local var_758_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_755_1.actors_[var_758_26.prefab_name].transform, "story_v_out_413161", "413161184", "story_v_out_413161.awb")

						arg_755_1:RecordAudio("413161184", var_758_32)
						arg_755_1:RecordAudio("413161184", var_758_32)
					else
						arg_755_1:AudioAction("play", "voice", "story_v_out_413161", "413161184", "story_v_out_413161.awb")
					end

					arg_755_1:RecordHistoryTalkVoice("story_v_out_413161", "413161184", "story_v_out_413161.awb")
				end

				arg_755_1:RecordContent(arg_755_1.text_.text)
			end

			local var_758_33 = math.max(var_758_24, arg_755_1.talkMaxDuration)

			if var_758_23 <= arg_755_1.time_ and arg_755_1.time_ < var_758_23 + var_758_33 then
				arg_755_1.typewritter.percent = (arg_755_1.time_ - var_758_23) / var_758_33

				arg_755_1.typewritter:SetDirty()
			end

			if arg_755_1.time_ >= var_758_23 + var_758_33 and arg_755_1.time_ < var_758_23 + var_758_33 + arg_758_0 then
				arg_755_1.typewritter.percent = 1

				arg_755_1.typewritter:SetDirty()
				arg_755_1:ShowNextGo(true)
			end
		end
	end,
	Play413161185 = function(arg_759_0, arg_759_1)
		arg_759_1.time_ = 0
		arg_759_1.frameCnt_ = 0
		arg_759_1.state_ = "playing"
		arg_759_1.curTalkId_ = 413161185
		arg_759_1.duration_ = 6

		local var_759_0 = {
			zh = 3.333,
			ja = 6
		}
		local var_759_1 = manager.audio:GetLocalizationFlag()

		if var_759_0[var_759_1] ~= nil then
			arg_759_1.duration_ = var_759_0[var_759_1]
		end

		SetActive(arg_759_1.tipsGo_, false)

		function arg_759_1.onSingleLineFinish_()
			arg_759_1.onSingleLineUpdate_ = nil
			arg_759_1.onSingleLineFinish_ = nil
			arg_759_1.state_ = "waiting"
		end

		function arg_759_1.playNext_(arg_761_0)
			if arg_761_0 == 1 then
				arg_759_0:Play413161186(arg_759_1)
			end
		end

		function arg_759_1.onSingleLineUpdate_(arg_762_0)
			local var_762_0 = arg_759_1.actors_["1029"].transform
			local var_762_1 = 0

			if var_762_1 < arg_759_1.time_ and arg_759_1.time_ <= var_762_1 + arg_762_0 then
				arg_759_1.var_.moveOldPos1029 = var_762_0.localPosition
				var_762_0.localScale = Vector3.New(1, 1, 1)

				arg_759_1:CheckSpriteTmpPos("1029", 2)

				local var_762_2 = var_762_0.childCount

				for iter_762_0 = 0, var_762_2 - 1 do
					local var_762_3 = var_762_0:GetChild(iter_762_0)

					if var_762_3.name == "" or not string.find(var_762_3.name, "split") then
						var_762_3.gameObject:SetActive(true)
					else
						var_762_3.gameObject:SetActive(false)
					end
				end
			end

			local var_762_4 = 0.001

			if var_762_1 <= arg_759_1.time_ and arg_759_1.time_ < var_762_1 + var_762_4 then
				local var_762_5 = (arg_759_1.time_ - var_762_1) / var_762_4
				local var_762_6 = Vector3.New(-390, -355, -140)

				var_762_0.localPosition = Vector3.Lerp(arg_759_1.var_.moveOldPos1029, var_762_6, var_762_5)
			end

			if arg_759_1.time_ >= var_762_1 + var_762_4 and arg_759_1.time_ < var_762_1 + var_762_4 + arg_762_0 then
				var_762_0.localPosition = Vector3.New(-390, -355, -140)
			end

			local var_762_7 = arg_759_1.actors_["10093"].transform
			local var_762_8 = 0

			if var_762_8 < arg_759_1.time_ and arg_759_1.time_ <= var_762_8 + arg_762_0 then
				arg_759_1.var_.moveOldPos10093 = var_762_7.localPosition
				var_762_7.localScale = Vector3.New(1, 1, 1)

				arg_759_1:CheckSpriteTmpPos("10093", 4)

				local var_762_9 = var_762_7.childCount

				for iter_762_1 = 0, var_762_9 - 1 do
					local var_762_10 = var_762_7:GetChild(iter_762_1)

					if var_762_10.name == "" or not string.find(var_762_10.name, "split") then
						var_762_10.gameObject:SetActive(true)
					else
						var_762_10.gameObject:SetActive(false)
					end
				end
			end

			local var_762_11 = 0.001

			if var_762_8 <= arg_759_1.time_ and arg_759_1.time_ < var_762_8 + var_762_11 then
				local var_762_12 = (arg_759_1.time_ - var_762_8) / var_762_11
				local var_762_13 = Vector3.New(390, -345, -245)

				var_762_7.localPosition = Vector3.Lerp(arg_759_1.var_.moveOldPos10093, var_762_13, var_762_12)
			end

			if arg_759_1.time_ >= var_762_8 + var_762_11 and arg_759_1.time_ < var_762_8 + var_762_11 + arg_762_0 then
				var_762_7.localPosition = Vector3.New(390, -345, -245)
			end

			local var_762_14 = arg_759_1.actors_["1029"]
			local var_762_15 = 0

			if var_762_15 < arg_759_1.time_ and arg_759_1.time_ <= var_762_15 + arg_762_0 and not isNil(var_762_14) and arg_759_1.var_.actorSpriteComps1029 == nil then
				arg_759_1.var_.actorSpriteComps1029 = var_762_14:GetComponentsInChildren(typeof(Image), true)
			end

			local var_762_16 = 2

			if var_762_15 <= arg_759_1.time_ and arg_759_1.time_ < var_762_15 + var_762_16 and not isNil(var_762_14) then
				local var_762_17 = (arg_759_1.time_ - var_762_15) / var_762_16

				if arg_759_1.var_.actorSpriteComps1029 then
					for iter_762_2, iter_762_3 in pairs(arg_759_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_762_3 then
							if arg_759_1.isInRecall_ then
								local var_762_18 = Mathf.Lerp(iter_762_3.color.r, arg_759_1.hightColor1.r, var_762_17)
								local var_762_19 = Mathf.Lerp(iter_762_3.color.g, arg_759_1.hightColor1.g, var_762_17)
								local var_762_20 = Mathf.Lerp(iter_762_3.color.b, arg_759_1.hightColor1.b, var_762_17)

								iter_762_3.color = Color.New(var_762_18, var_762_19, var_762_20)
							else
								local var_762_21 = Mathf.Lerp(iter_762_3.color.r, 1, var_762_17)

								iter_762_3.color = Color.New(var_762_21, var_762_21, var_762_21)
							end
						end
					end
				end
			end

			if arg_759_1.time_ >= var_762_15 + var_762_16 and arg_759_1.time_ < var_762_15 + var_762_16 + arg_762_0 and not isNil(var_762_14) and arg_759_1.var_.actorSpriteComps1029 then
				for iter_762_4, iter_762_5 in pairs(arg_759_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_762_5 then
						if arg_759_1.isInRecall_ then
							iter_762_5.color = arg_759_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_762_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_759_1.var_.actorSpriteComps1029 = nil
			end

			local var_762_22 = arg_759_1.actors_["10093"]
			local var_762_23 = 0

			if var_762_23 < arg_759_1.time_ and arg_759_1.time_ <= var_762_23 + arg_762_0 and not isNil(var_762_22) and arg_759_1.var_.actorSpriteComps10093 == nil then
				arg_759_1.var_.actorSpriteComps10093 = var_762_22:GetComponentsInChildren(typeof(Image), true)
			end

			local var_762_24 = 2

			if var_762_23 <= arg_759_1.time_ and arg_759_1.time_ < var_762_23 + var_762_24 and not isNil(var_762_22) then
				local var_762_25 = (arg_759_1.time_ - var_762_23) / var_762_24

				if arg_759_1.var_.actorSpriteComps10093 then
					for iter_762_6, iter_762_7 in pairs(arg_759_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_762_7 then
							if arg_759_1.isInRecall_ then
								local var_762_26 = Mathf.Lerp(iter_762_7.color.r, arg_759_1.hightColor2.r, var_762_25)
								local var_762_27 = Mathf.Lerp(iter_762_7.color.g, arg_759_1.hightColor2.g, var_762_25)
								local var_762_28 = Mathf.Lerp(iter_762_7.color.b, arg_759_1.hightColor2.b, var_762_25)

								iter_762_7.color = Color.New(var_762_26, var_762_27, var_762_28)
							else
								local var_762_29 = Mathf.Lerp(iter_762_7.color.r, 0.5, var_762_25)

								iter_762_7.color = Color.New(var_762_29, var_762_29, var_762_29)
							end
						end
					end
				end
			end

			if arg_759_1.time_ >= var_762_23 + var_762_24 and arg_759_1.time_ < var_762_23 + var_762_24 + arg_762_0 and not isNil(var_762_22) and arg_759_1.var_.actorSpriteComps10093 then
				for iter_762_8, iter_762_9 in pairs(arg_759_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_762_9 then
						if arg_759_1.isInRecall_ then
							iter_762_9.color = arg_759_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_762_9.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_759_1.var_.actorSpriteComps10093 = nil
			end

			local var_762_30 = 0
			local var_762_31 = 0.375

			if var_762_30 < arg_759_1.time_ and arg_759_1.time_ <= var_762_30 + arg_762_0 then
				arg_759_1.talkMaxDuration = 0
				arg_759_1.dialogCg_.alpha = 1

				arg_759_1.dialog_:SetActive(true)
				SetActive(arg_759_1.leftNameGo_, true)

				local var_762_32 = arg_759_1:FormatText(StoryNameCfg[319].name)

				arg_759_1.leftNameTxt_.text = var_762_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_759_1.leftNameTxt_.transform)

				arg_759_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_759_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_759_1:RecordName(arg_759_1.leftNameTxt_.text)
				SetActive(arg_759_1.iconTrs_.gameObject, false)
				arg_759_1.callingController_:SetSelectedState("normal")

				local var_762_33 = arg_759_1:GetWordFromCfg(413161185)
				local var_762_34 = arg_759_1:FormatText(var_762_33.content)

				arg_759_1.text_.text = var_762_34

				LuaForUtil.ClearLinePrefixSymbol(arg_759_1.text_)

				local var_762_35 = 15
				local var_762_36 = utf8.len(var_762_34)
				local var_762_37 = var_762_35 <= 0 and var_762_31 or var_762_31 * (var_762_36 / var_762_35)

				if var_762_37 > 0 and var_762_31 < var_762_37 then
					arg_759_1.talkMaxDuration = var_762_37

					if var_762_37 + var_762_30 > arg_759_1.duration_ then
						arg_759_1.duration_ = var_762_37 + var_762_30
					end
				end

				arg_759_1.text_.text = var_762_34
				arg_759_1.typewritter.percent = 0

				arg_759_1.typewritter:SetDirty()
				arg_759_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161185", "story_v_out_413161.awb") ~= 0 then
					local var_762_38 = manager.audio:GetVoiceLength("story_v_out_413161", "413161185", "story_v_out_413161.awb") / 1000

					if var_762_38 + var_762_30 > arg_759_1.duration_ then
						arg_759_1.duration_ = var_762_38 + var_762_30
					end

					if var_762_33.prefab_name ~= "" and arg_759_1.actors_[var_762_33.prefab_name] ~= nil then
						local var_762_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_759_1.actors_[var_762_33.prefab_name].transform, "story_v_out_413161", "413161185", "story_v_out_413161.awb")

						arg_759_1:RecordAudio("413161185", var_762_39)
						arg_759_1:RecordAudio("413161185", var_762_39)
					else
						arg_759_1:AudioAction("play", "voice", "story_v_out_413161", "413161185", "story_v_out_413161.awb")
					end

					arg_759_1:RecordHistoryTalkVoice("story_v_out_413161", "413161185", "story_v_out_413161.awb")
				end

				arg_759_1:RecordContent(arg_759_1.text_.text)
			end

			local var_762_40 = math.max(var_762_31, arg_759_1.talkMaxDuration)

			if var_762_30 <= arg_759_1.time_ and arg_759_1.time_ < var_762_30 + var_762_40 then
				arg_759_1.typewritter.percent = (arg_759_1.time_ - var_762_30) / var_762_40

				arg_759_1.typewritter:SetDirty()
			end

			if arg_759_1.time_ >= var_762_30 + var_762_40 and arg_759_1.time_ < var_762_30 + var_762_40 + arg_762_0 then
				arg_759_1.typewritter.percent = 1

				arg_759_1.typewritter:SetDirty()
				arg_759_1:ShowNextGo(true)
			end
		end
	end,
	Play413161186 = function(arg_763_0, arg_763_1)
		arg_763_1.time_ = 0
		arg_763_1.frameCnt_ = 0
		arg_763_1.state_ = "playing"
		arg_763_1.curTalkId_ = 413161186
		arg_763_1.duration_ = 13.03

		local var_763_0 = {
			zh = 8.366,
			ja = 13.033
		}
		local var_763_1 = manager.audio:GetLocalizationFlag()

		if var_763_0[var_763_1] ~= nil then
			arg_763_1.duration_ = var_763_0[var_763_1]
		end

		SetActive(arg_763_1.tipsGo_, false)

		function arg_763_1.onSingleLineFinish_()
			arg_763_1.onSingleLineUpdate_ = nil
			arg_763_1.onSingleLineFinish_ = nil
			arg_763_1.state_ = "waiting"
		end

		function arg_763_1.playNext_(arg_765_0)
			if arg_765_0 == 1 then
				arg_763_0:Play413161187(arg_763_1)
			end
		end

		function arg_763_1.onSingleLineUpdate_(arg_766_0)
			local var_766_0 = arg_763_1.actors_["10093"].transform
			local var_766_1 = 0

			if var_766_1 < arg_763_1.time_ and arg_763_1.time_ <= var_766_1 + arg_766_0 then
				arg_763_1.var_.moveOldPos10093 = var_766_0.localPosition
				var_766_0.localScale = Vector3.New(1, 1, 1)

				arg_763_1:CheckSpriteTmpPos("10093", 4)

				local var_766_2 = var_766_0.childCount

				for iter_766_0 = 0, var_766_2 - 1 do
					local var_766_3 = var_766_0:GetChild(iter_766_0)

					if var_766_3.name == "split_2" or not string.find(var_766_3.name, "split") then
						var_766_3.gameObject:SetActive(true)
					else
						var_766_3.gameObject:SetActive(false)
					end
				end
			end

			local var_766_4 = 0.001

			if var_766_1 <= arg_763_1.time_ and arg_763_1.time_ < var_766_1 + var_766_4 then
				local var_766_5 = (arg_763_1.time_ - var_766_1) / var_766_4
				local var_766_6 = Vector3.New(390, -345, -245)

				var_766_0.localPosition = Vector3.Lerp(arg_763_1.var_.moveOldPos10093, var_766_6, var_766_5)
			end

			if arg_763_1.time_ >= var_766_1 + var_766_4 and arg_763_1.time_ < var_766_1 + var_766_4 + arg_766_0 then
				var_766_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_766_7 = arg_763_1.actors_["10093"]
			local var_766_8 = 0

			if var_766_8 < arg_763_1.time_ and arg_763_1.time_ <= var_766_8 + arg_766_0 and not isNil(var_766_7) and arg_763_1.var_.actorSpriteComps10093 == nil then
				arg_763_1.var_.actorSpriteComps10093 = var_766_7:GetComponentsInChildren(typeof(Image), true)
			end

			local var_766_9 = 2

			if var_766_8 <= arg_763_1.time_ and arg_763_1.time_ < var_766_8 + var_766_9 and not isNil(var_766_7) then
				local var_766_10 = (arg_763_1.time_ - var_766_8) / var_766_9

				if arg_763_1.var_.actorSpriteComps10093 then
					for iter_766_1, iter_766_2 in pairs(arg_763_1.var_.actorSpriteComps10093:ToTable()) do
						if iter_766_2 then
							if arg_763_1.isInRecall_ then
								local var_766_11 = Mathf.Lerp(iter_766_2.color.r, arg_763_1.hightColor1.r, var_766_10)
								local var_766_12 = Mathf.Lerp(iter_766_2.color.g, arg_763_1.hightColor1.g, var_766_10)
								local var_766_13 = Mathf.Lerp(iter_766_2.color.b, arg_763_1.hightColor1.b, var_766_10)

								iter_766_2.color = Color.New(var_766_11, var_766_12, var_766_13)
							else
								local var_766_14 = Mathf.Lerp(iter_766_2.color.r, 1, var_766_10)

								iter_766_2.color = Color.New(var_766_14, var_766_14, var_766_14)
							end
						end
					end
				end
			end

			if arg_763_1.time_ >= var_766_8 + var_766_9 and arg_763_1.time_ < var_766_8 + var_766_9 + arg_766_0 and not isNil(var_766_7) and arg_763_1.var_.actorSpriteComps10093 then
				for iter_766_3, iter_766_4 in pairs(arg_763_1.var_.actorSpriteComps10093:ToTable()) do
					if iter_766_4 then
						if arg_763_1.isInRecall_ then
							iter_766_4.color = arg_763_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_766_4.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_763_1.var_.actorSpriteComps10093 = nil
			end

			local var_766_15 = arg_763_1.actors_["1029"]
			local var_766_16 = 0

			if var_766_16 < arg_763_1.time_ and arg_763_1.time_ <= var_766_16 + arg_766_0 and not isNil(var_766_15) and arg_763_1.var_.actorSpriteComps1029 == nil then
				arg_763_1.var_.actorSpriteComps1029 = var_766_15:GetComponentsInChildren(typeof(Image), true)
			end

			local var_766_17 = 2

			if var_766_16 <= arg_763_1.time_ and arg_763_1.time_ < var_766_16 + var_766_17 and not isNil(var_766_15) then
				local var_766_18 = (arg_763_1.time_ - var_766_16) / var_766_17

				if arg_763_1.var_.actorSpriteComps1029 then
					for iter_766_5, iter_766_6 in pairs(arg_763_1.var_.actorSpriteComps1029:ToTable()) do
						if iter_766_6 then
							if arg_763_1.isInRecall_ then
								local var_766_19 = Mathf.Lerp(iter_766_6.color.r, arg_763_1.hightColor2.r, var_766_18)
								local var_766_20 = Mathf.Lerp(iter_766_6.color.g, arg_763_1.hightColor2.g, var_766_18)
								local var_766_21 = Mathf.Lerp(iter_766_6.color.b, arg_763_1.hightColor2.b, var_766_18)

								iter_766_6.color = Color.New(var_766_19, var_766_20, var_766_21)
							else
								local var_766_22 = Mathf.Lerp(iter_766_6.color.r, 0.5, var_766_18)

								iter_766_6.color = Color.New(var_766_22, var_766_22, var_766_22)
							end
						end
					end
				end
			end

			if arg_763_1.time_ >= var_766_16 + var_766_17 and arg_763_1.time_ < var_766_16 + var_766_17 + arg_766_0 and not isNil(var_766_15) and arg_763_1.var_.actorSpriteComps1029 then
				for iter_766_7, iter_766_8 in pairs(arg_763_1.var_.actorSpriteComps1029:ToTable()) do
					if iter_766_8 then
						if arg_763_1.isInRecall_ then
							iter_766_8.color = arg_763_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_766_8.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_763_1.var_.actorSpriteComps1029 = nil
			end

			local var_766_23 = 0
			local var_766_24 = 0.725

			if var_766_23 < arg_763_1.time_ and arg_763_1.time_ <= var_766_23 + arg_766_0 then
				arg_763_1.talkMaxDuration = 0
				arg_763_1.dialogCg_.alpha = 1

				arg_763_1.dialog_:SetActive(true)
				SetActive(arg_763_1.leftNameGo_, true)

				local var_766_25 = arg_763_1:FormatText(StoryNameCfg[28].name)

				arg_763_1.leftNameTxt_.text = var_766_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_763_1.leftNameTxt_.transform)

				arg_763_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_763_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_763_1:RecordName(arg_763_1.leftNameTxt_.text)
				SetActive(arg_763_1.iconTrs_.gameObject, false)
				arg_763_1.callingController_:SetSelectedState("normal")

				local var_766_26 = arg_763_1:GetWordFromCfg(413161186)
				local var_766_27 = arg_763_1:FormatText(var_766_26.content)

				arg_763_1.text_.text = var_766_27

				LuaForUtil.ClearLinePrefixSymbol(arg_763_1.text_)

				local var_766_28 = 29
				local var_766_29 = utf8.len(var_766_27)
				local var_766_30 = var_766_28 <= 0 and var_766_24 or var_766_24 * (var_766_29 / var_766_28)

				if var_766_30 > 0 and var_766_24 < var_766_30 then
					arg_763_1.talkMaxDuration = var_766_30

					if var_766_30 + var_766_23 > arg_763_1.duration_ then
						arg_763_1.duration_ = var_766_30 + var_766_23
					end
				end

				arg_763_1.text_.text = var_766_27
				arg_763_1.typewritter.percent = 0

				arg_763_1.typewritter:SetDirty()
				arg_763_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161186", "story_v_out_413161.awb") ~= 0 then
					local var_766_31 = manager.audio:GetVoiceLength("story_v_out_413161", "413161186", "story_v_out_413161.awb") / 1000

					if var_766_31 + var_766_23 > arg_763_1.duration_ then
						arg_763_1.duration_ = var_766_31 + var_766_23
					end

					if var_766_26.prefab_name ~= "" and arg_763_1.actors_[var_766_26.prefab_name] ~= nil then
						local var_766_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_763_1.actors_[var_766_26.prefab_name].transform, "story_v_out_413161", "413161186", "story_v_out_413161.awb")

						arg_763_1:RecordAudio("413161186", var_766_32)
						arg_763_1:RecordAudio("413161186", var_766_32)
					else
						arg_763_1:AudioAction("play", "voice", "story_v_out_413161", "413161186", "story_v_out_413161.awb")
					end

					arg_763_1:RecordHistoryTalkVoice("story_v_out_413161", "413161186", "story_v_out_413161.awb")
				end

				arg_763_1:RecordContent(arg_763_1.text_.text)
			end

			local var_766_33 = math.max(var_766_24, arg_763_1.talkMaxDuration)

			if var_766_23 <= arg_763_1.time_ and arg_763_1.time_ < var_766_23 + var_766_33 then
				arg_763_1.typewritter.percent = (arg_763_1.time_ - var_766_23) / var_766_33

				arg_763_1.typewritter:SetDirty()
			end

			if arg_763_1.time_ >= var_766_23 + var_766_33 and arg_763_1.time_ < var_766_23 + var_766_33 + arg_766_0 then
				arg_763_1.typewritter.percent = 1

				arg_763_1.typewritter:SetDirty()
				arg_763_1:ShowNextGo(true)
			end
		end
	end,
	Play413161187 = function(arg_767_0, arg_767_1)
		arg_767_1.time_ = 0
		arg_767_1.frameCnt_ = 0
		arg_767_1.state_ = "playing"
		arg_767_1.curTalkId_ = 413161187
		arg_767_1.duration_ = 7

		local var_767_0 = {
			zh = 6.7,
			ja = 7
		}
		local var_767_1 = manager.audio:GetLocalizationFlag()

		if var_767_0[var_767_1] ~= nil then
			arg_767_1.duration_ = var_767_0[var_767_1]
		end

		SetActive(arg_767_1.tipsGo_, false)

		function arg_767_1.onSingleLineFinish_()
			arg_767_1.onSingleLineUpdate_ = nil
			arg_767_1.onSingleLineFinish_ = nil
			arg_767_1.state_ = "waiting"
			arg_767_1.auto_ = false
		end

		function arg_767_1.playNext_(arg_769_0)
			arg_767_1.onStoryFinished_()
		end

		function arg_767_1.onSingleLineUpdate_(arg_770_0)
			local var_770_0 = arg_767_1.actors_["10093"].transform
			local var_770_1 = 0

			if var_770_1 < arg_767_1.time_ and arg_767_1.time_ <= var_770_1 + arg_770_0 then
				arg_767_1.var_.moveOldPos10093 = var_770_0.localPosition
				var_770_0.localScale = Vector3.New(1, 1, 1)

				arg_767_1:CheckSpriteTmpPos("10093", 4)

				local var_770_2 = var_770_0.childCount

				for iter_770_0 = 0, var_770_2 - 1 do
					local var_770_3 = var_770_0:GetChild(iter_770_0)

					if var_770_3.name == "split_2" or not string.find(var_770_3.name, "split") then
						var_770_3.gameObject:SetActive(true)
					else
						var_770_3.gameObject:SetActive(false)
					end
				end
			end

			local var_770_4 = 0.001

			if var_770_1 <= arg_767_1.time_ and arg_767_1.time_ < var_770_1 + var_770_4 then
				local var_770_5 = (arg_767_1.time_ - var_770_1) / var_770_4
				local var_770_6 = Vector3.New(390, -345, -245)

				var_770_0.localPosition = Vector3.Lerp(arg_767_1.var_.moveOldPos10093, var_770_6, var_770_5)
			end

			if arg_767_1.time_ >= var_770_1 + var_770_4 and arg_767_1.time_ < var_770_1 + var_770_4 + arg_770_0 then
				var_770_0.localPosition = Vector3.New(390, -345, -245)
			end

			local var_770_7 = 0
			local var_770_8 = 0.625

			if var_770_7 < arg_767_1.time_ and arg_767_1.time_ <= var_770_7 + arg_770_0 then
				arg_767_1.talkMaxDuration = 0
				arg_767_1.dialogCg_.alpha = 1

				arg_767_1.dialog_:SetActive(true)
				SetActive(arg_767_1.leftNameGo_, true)

				local var_770_9 = arg_767_1:FormatText(StoryNameCfg[28].name)

				arg_767_1.leftNameTxt_.text = var_770_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_767_1.leftNameTxt_.transform)

				arg_767_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_767_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_767_1:RecordName(arg_767_1.leftNameTxt_.text)
				SetActive(arg_767_1.iconTrs_.gameObject, false)
				arg_767_1.callingController_:SetSelectedState("normal")

				local var_770_10 = arg_767_1:GetWordFromCfg(413161187)
				local var_770_11 = arg_767_1:FormatText(var_770_10.content)

				arg_767_1.text_.text = var_770_11

				LuaForUtil.ClearLinePrefixSymbol(arg_767_1.text_)

				local var_770_12 = 25
				local var_770_13 = utf8.len(var_770_11)
				local var_770_14 = var_770_12 <= 0 and var_770_8 or var_770_8 * (var_770_13 / var_770_12)

				if var_770_14 > 0 and var_770_8 < var_770_14 then
					arg_767_1.talkMaxDuration = var_770_14

					if var_770_14 + var_770_7 > arg_767_1.duration_ then
						arg_767_1.duration_ = var_770_14 + var_770_7
					end
				end

				arg_767_1.text_.text = var_770_11
				arg_767_1.typewritter.percent = 0

				arg_767_1.typewritter:SetDirty()
				arg_767_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_413161", "413161187", "story_v_out_413161.awb") ~= 0 then
					local var_770_15 = manager.audio:GetVoiceLength("story_v_out_413161", "413161187", "story_v_out_413161.awb") / 1000

					if var_770_15 + var_770_7 > arg_767_1.duration_ then
						arg_767_1.duration_ = var_770_15 + var_770_7
					end

					if var_770_10.prefab_name ~= "" and arg_767_1.actors_[var_770_10.prefab_name] ~= nil then
						local var_770_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_767_1.actors_[var_770_10.prefab_name].transform, "story_v_out_413161", "413161187", "story_v_out_413161.awb")

						arg_767_1:RecordAudio("413161187", var_770_16)
						arg_767_1:RecordAudio("413161187", var_770_16)
					else
						arg_767_1:AudioAction("play", "voice", "story_v_out_413161", "413161187", "story_v_out_413161.awb")
					end

					arg_767_1:RecordHistoryTalkVoice("story_v_out_413161", "413161187", "story_v_out_413161.awb")
				end

				arg_767_1:RecordContent(arg_767_1.text_.text)
			end

			local var_770_17 = math.max(var_770_8, arg_767_1.talkMaxDuration)

			if var_770_7 <= arg_767_1.time_ and arg_767_1.time_ < var_770_7 + var_770_17 then
				arg_767_1.typewritter.percent = (arg_767_1.time_ - var_770_7) / var_770_17

				arg_767_1.typewritter:SetDirty()
			end

			if arg_767_1.time_ >= var_770_7 + var_770_17 and arg_767_1.time_ < var_770_7 + var_770_17 + arg_770_0 then
				arg_767_1.typewritter.percent = 1

				arg_767_1.typewritter:SetDirty()
				arg_767_1:ShowNextGo(true)
			end
		end
	end,
	assets = {
		"Assets/UIResources/UI_AB/TextureConfig/Background/ST0603",
		"Assets/UIResources/UI_AB/TextureConfig/Background/ST0602",
		"Assets/UIResources/UI_AB/TextureConfig/Background/F10g",
		"Assets/UIResources/UI_AB/TextureConfig/Background/F08h",
		"Assets/UIResources/UI_AB/TextureConfig/Background/A00"
	},
	voices = {
		"story_v_out_413161.awb"
	}
}

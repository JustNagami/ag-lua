return {
	Play417161001 = function(arg_1_0, arg_1_1)
		arg_1_1.time_ = 0
		arg_1_1.frameCnt_ = 0
		arg_1_1.state_ = "playing"
		arg_1_1.curTalkId_ = 417161001
		arg_1_1.duration_ = 10.4

		local var_1_0 = {
			zh = 10.4,
			ja = 8.533
		}
		local var_1_1 = manager.audio:GetLocalizationFlag()

		if var_1_0[var_1_1] ~= nil then
			arg_1_1.duration_ = var_1_0[var_1_1]
		end

		SetActive(arg_1_1.tipsGo_, false)

		function arg_1_1.onSingleLineFinish_()
			arg_1_1.onSingleLineUpdate_ = nil
			arg_1_1.onSingleLineFinish_ = nil
			arg_1_1.state_ = "waiting"
		end

		function arg_1_1.playNext_(arg_3_0)
			if arg_3_0 == 1 then
				arg_1_0:Play417161002(arg_1_1)
			end
		end

		function arg_1_1.onSingleLineUpdate_(arg_4_0)
			local var_4_0 = 7.4

			if var_4_0 < arg_1_1.time_ and arg_1_1.time_ <= var_4_0 + arg_4_0 then
				arg_1_1.allBtn_.enabled = false
			end

			local var_4_1 = 0.0666666666666669

			if arg_1_1.time_ >= var_4_0 + var_4_1 and arg_1_1.time_ < var_4_0 + var_4_1 + arg_4_0 then
				arg_1_1.allBtn_.enabled = true
			end

			local var_4_2 = 0
			local var_4_3 = 5
			local var_4_4 = "ST73"

			if var_4_2 < arg_1_1.time_ and arg_1_1.time_ <= var_4_2 + arg_4_0 then
				arg_1_1.timestampController_:SetSelectedState("show")
				arg_1_1.timestampAni_:Play("in")

				arg_1_1.timeTicketbgImg_.sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_4_4)

				arg_1_1.timestampColorController_:SetSelectedState("cold")

				local var_4_5 = arg_1_1:GetWordFromCfg(501051)
				local var_4_6 = arg_1_1:FormatText(var_4_5.content)

				arg_1_1.text_timeText_.text = var_4_6

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_timeText_)

				local var_4_7 = arg_1_1:GetWordFromCfg(501052)
				local var_4_8 = arg_1_1:FormatText(var_4_7.content)

				arg_1_1.text_siteText_.text = var_4_8

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_siteText_)
			end

			if arg_1_1.time_ >= var_4_2 + var_4_3 and arg_1_1.time_ < var_4_2 + var_4_3 + arg_4_0 then
				AnimatorTools.PlayAnimationWithCallback(arg_1_1.timestampAni_, "out", function()
					arg_1_1.timestampController_:SetSelectedState("hide")
				end)
			end

			local var_4_9 = 5

			if var_4_9 < arg_1_1.time_ and arg_1_1.time_ <= var_4_9 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = false

				arg_1_1:SetGaussion(false)
			end

			local var_4_10 = 1.2

			if var_4_9 <= arg_1_1.time_ and arg_1_1.time_ < var_4_9 + var_4_10 then
				local var_4_11 = (arg_1_1.time_ - var_4_9) / var_4_10
				local var_4_12 = Color.New(0, 0, 0)

				var_4_12.a = Mathf.Lerp(0, 1, var_4_11)
				arg_1_1.mask_.color = var_4_12
			end

			if arg_1_1.time_ >= var_4_9 + var_4_10 and arg_1_1.time_ < var_4_9 + var_4_10 + arg_4_0 then
				local var_4_13 = Color.New(0, 0, 0)

				var_4_13.a = 1
				arg_1_1.mask_.color = var_4_13
			end

			local var_4_14 = 6.2

			if var_4_14 < arg_1_1.time_ and arg_1_1.time_ <= var_4_14 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = false

				arg_1_1:SetGaussion(false)
			end

			local var_4_15 = 1.2

			if var_4_14 <= arg_1_1.time_ and arg_1_1.time_ < var_4_14 + var_4_15 then
				local var_4_16 = (arg_1_1.time_ - var_4_14) / var_4_15
				local var_4_17 = Color.New(0, 0, 0)

				var_4_17.a = Mathf.Lerp(1, 0, var_4_16)
				arg_1_1.mask_.color = var_4_17
			end

			if arg_1_1.time_ >= var_4_14 + var_4_15 and arg_1_1.time_ < var_4_14 + var_4_15 + arg_4_0 then
				local var_4_18 = Color.New(0, 0, 0)
				local var_4_19 = 0

				arg_1_1.mask_.enabled = false
				var_4_18.a = var_4_19
				arg_1_1.mask_.color = var_4_18
			end

			local var_4_20 = "ST73"

			if arg_1_1.bgs_[var_4_20] == nil then
				local var_4_21 = Object.Instantiate(arg_1_1.paintGo_)

				var_4_21:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_4_20)
				var_4_21.name = var_4_20
				var_4_21.transform.parent = arg_1_1.stage_.transform
				var_4_21.transform.localPosition = Vector3.New(0, 100, 0)
				arg_1_1.bgs_[var_4_20] = var_4_21
			end

			local var_4_22 = 0

			if var_4_22 < arg_1_1.time_ and arg_1_1.time_ <= var_4_22 + arg_4_0 then
				local var_4_23 = manager.ui.mainCamera.transform.localPosition
				local var_4_24 = Vector3.New(0, 0, 10) + Vector3.New(var_4_23.x, var_4_23.y, 0)
				local var_4_25 = arg_1_1.bgs_.ST73

				var_4_25.transform.localPosition = var_4_24
				var_4_25.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_4_26 = var_4_25:GetComponent("SpriteRenderer")

				if var_4_26 and var_4_26.sprite then
					local var_4_27 = (var_4_25.transform.localPosition - var_4_23).z
					local var_4_28 = manager.ui.mainCameraCom_
					local var_4_29 = 2 * var_4_27 * Mathf.Tan(var_4_28.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_4_30 = var_4_29 * var_4_28.aspect
					local var_4_31 = var_4_26.sprite.bounds.size.x
					local var_4_32 = var_4_26.sprite.bounds.size.y
					local var_4_33 = var_4_30 / var_4_31
					local var_4_34 = var_4_29 / var_4_32
					local var_4_35 = var_4_34 < var_4_33 and var_4_33 or var_4_34

					var_4_25.transform.localScale = Vector3.New(var_4_35, var_4_35, 0)
				end

				for iter_4_0, iter_4_1 in pairs(arg_1_1.bgs_) do
					if iter_4_0 ~= "ST73" then
						iter_4_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_4_36 = 0

			if var_4_36 < arg_1_1.time_ and arg_1_1.time_ <= var_4_36 + arg_4_0 then
				arg_1_1.allBtn_.enabled = false
			end

			local var_4_37 = 6.2

			if arg_1_1.time_ >= var_4_36 + var_4_37 and arg_1_1.time_ < var_4_36 + var_4_37 + arg_4_0 then
				arg_1_1.allBtn_.enabled = true
			end

			local var_4_38 = 0

			if var_4_38 < arg_1_1.time_ and arg_1_1.time_ <= var_4_38 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = false

				arg_1_1:SetGaussion(false)
			end

			local var_4_39 = 1

			if var_4_38 <= arg_1_1.time_ and arg_1_1.time_ < var_4_38 + var_4_39 then
				local var_4_40 = (arg_1_1.time_ - var_4_38) / var_4_39
				local var_4_41 = Color.New(0, 0, 0)

				var_4_41.a = Mathf.Lerp(1, 0, var_4_40)
				arg_1_1.mask_.color = var_4_41
			end

			if arg_1_1.time_ >= var_4_38 + var_4_39 and arg_1_1.time_ < var_4_38 + var_4_39 + arg_4_0 then
				local var_4_42 = Color.New(0, 0, 0)
				local var_4_43 = 0

				arg_1_1.mask_.enabled = false
				var_4_42.a = var_4_43
				arg_1_1.mask_.color = var_4_42
			end

			local var_4_44 = 0
			local var_4_45 = 0.2

			if var_4_44 < arg_1_1.time_ and arg_1_1.time_ <= var_4_44 + arg_4_0 then
				local var_4_46 = "play"
				local var_4_47 = "music"

				arg_1_1:AudioAction(var_4_46, var_4_47, "ui_battle", "ui_battle_stopbgm", "")

				local var_4_48 = ""
				local var_4_49 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_4_49 ~= "" then
					if arg_1_1.bgmTxt_.text ~= var_4_49 and arg_1_1.bgmTxt_.text ~= "" then
						if arg_1_1.bgmTxt2_.text ~= "" then
							arg_1_1.bgmTxt_.text = arg_1_1.bgmTxt2_.text
						end

						arg_1_1.bgmTxt2_.text = var_4_49

						arg_1_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_1_1.bgmTxt_.text = var_4_49
					end

					if arg_1_1.bgmTimer then
						arg_1_1.bgmTimer:Stop()

						arg_1_1.bgmTimer = nil
					end

					if arg_1_1.settingData.show_music_name == 1 then
						arg_1_1.musicController:SetSelectedState("show")
						arg_1_1.musicAnimator_:Play("open", 0, 0)

						if arg_1_1.settingData.music_time ~= 0 then
							arg_1_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_1_1.settingData.music_time), function()
								if arg_1_1 == nil or isNil(arg_1_1.bgmTxt_) then
									return
								end

								arg_1_1.musicController:SetSelectedState("hide")
								arg_1_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_4_50 = 5.2
			local var_4_51 = 1

			if var_4_50 < arg_1_1.time_ and arg_1_1.time_ <= var_4_50 + arg_4_0 then
				local var_4_52 = "play"
				local var_4_53 = "music"

				arg_1_1:AudioAction(var_4_52, var_4_53, "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base.awb")

				local var_4_54 = ""
				local var_4_55 = manager.audio:GetAudioName("bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base")

				if var_4_55 ~= "" then
					if arg_1_1.bgmTxt_.text ~= var_4_55 and arg_1_1.bgmTxt_.text ~= "" then
						if arg_1_1.bgmTxt2_.text ~= "" then
							arg_1_1.bgmTxt_.text = arg_1_1.bgmTxt2_.text
						end

						arg_1_1.bgmTxt2_.text = var_4_55

						arg_1_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_1_1.bgmTxt_.text = var_4_55
					end

					if arg_1_1.bgmTimer then
						arg_1_1.bgmTimer:Stop()

						arg_1_1.bgmTimer = nil
					end

					if arg_1_1.settingData.show_music_name == 1 then
						arg_1_1.musicController:SetSelectedState("show")
						arg_1_1.musicAnimator_:Play("open", 0, 0)

						if arg_1_1.settingData.music_time ~= 0 then
							arg_1_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_1_1.settingData.music_time), function()
								if arg_1_1 == nil or isNil(arg_1_1.bgmTxt_) then
									return
								end

								arg_1_1.musicController:SetSelectedState("hide")
								arg_1_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			if arg_1_1.frameCnt_ <= 1 then
				arg_1_1.dialog_:SetActive(false)
			end

			local var_4_56 = 7.4
			local var_4_57 = 0.175

			if var_4_56 < arg_1_1.time_ and arg_1_1.time_ <= var_4_56 + arg_4_0 then
				arg_1_1.talkMaxDuration = 0

				arg_1_1.dialog_:SetActive(true)

				local var_4_58 = LeanTween.value(arg_1_1.dialog_, 0, 1, 0.3)

				var_4_58:setOnUpdate(LuaHelper.FloatAction(function(arg_8_0)
					arg_1_1.dialogCg_.alpha = arg_8_0
				end))
				var_4_58:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_1_1.dialog_)
					var_4_58:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_1_1.duration_ = arg_1_1.duration_ + 0.3

				SetActive(arg_1_1.leftNameGo_, true)

				local var_4_59 = arg_1_1:FormatText(StoryNameCfg[1110].name)

				arg_1_1.leftNameTxt_.text = var_4_59

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_1_1.leftNameTxt_.transform)

				arg_1_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_1_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_1_1:RecordName(arg_1_1.leftNameTxt_.text)
				SetActive(arg_1_1.iconTrs_.gameObject, true)
				arg_1_1.iconController_:SetSelectedState("hero")

				arg_1_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_1_1.callingController_:SetSelectedState("normal")

				arg_1_1.keyicon_.color = Color.New(1, 1, 1)
				arg_1_1.icon_.color = Color.New(1, 1, 1)

				local var_4_60 = arg_1_1:GetWordFromCfg(417161001)
				local var_4_61 = arg_1_1:FormatText(var_4_60.content)

				arg_1_1.text_.text = var_4_61

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_)

				local var_4_62 = 7
				local var_4_63 = utf8.len(var_4_61)
				local var_4_64 = var_4_62 <= 0 and var_4_57 or var_4_57 * (var_4_63 / var_4_62)

				if var_4_64 > 0 and var_4_57 < var_4_64 then
					arg_1_1.talkMaxDuration = var_4_64
					var_4_56 = var_4_56 + 0.3

					if var_4_64 + var_4_56 > arg_1_1.duration_ then
						arg_1_1.duration_ = var_4_64 + var_4_56
					end
				end

				arg_1_1.text_.text = var_4_61
				arg_1_1.typewritter.percent = 0

				arg_1_1.typewritter:SetDirty()
				arg_1_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161001", "story_v_out_417161.awb") ~= 0 then
					local var_4_65 = manager.audio:GetVoiceLength("story_v_out_417161", "417161001", "story_v_out_417161.awb") / 1000

					if var_4_65 + var_4_56 > arg_1_1.duration_ then
						arg_1_1.duration_ = var_4_65 + var_4_56
					end

					if var_4_60.prefab_name ~= "" and arg_1_1.actors_[var_4_60.prefab_name] ~= nil then
						local var_4_66 = LuaForUtil.PlayVoiceWithCriLipsync(arg_1_1.actors_[var_4_60.prefab_name].transform, "story_v_out_417161", "417161001", "story_v_out_417161.awb")

						arg_1_1:RecordAudio("417161001", var_4_66)
						arg_1_1:RecordAudio("417161001", var_4_66)
					else
						arg_1_1:AudioAction("play", "voice", "story_v_out_417161", "417161001", "story_v_out_417161.awb")
					end

					arg_1_1:RecordHistoryTalkVoice("story_v_out_417161", "417161001", "story_v_out_417161.awb")
				end

				arg_1_1:RecordContent(arg_1_1.text_.text)
			end

			local var_4_67 = var_4_56 + 0.3
			local var_4_68 = math.max(var_4_57, arg_1_1.talkMaxDuration)

			if var_4_67 <= arg_1_1.time_ and arg_1_1.time_ < var_4_67 + var_4_68 then
				arg_1_1.typewritter.percent = (arg_1_1.time_ - var_4_67) / var_4_68

				arg_1_1.typewritter:SetDirty()
			end

			if arg_1_1.time_ >= var_4_67 + var_4_68 and arg_1_1.time_ < var_4_67 + var_4_68 + arg_4_0 then
				arg_1_1.typewritter.percent = 1

				arg_1_1.typewritter:SetDirty()
				arg_1_1:ShowNextGo(true)
			end
		end
	end,
	Play417161002 = function(arg_10_0, arg_10_1)
		arg_10_1.time_ = 0
		arg_10_1.frameCnt_ = 0
		arg_10_1.state_ = "playing"
		arg_10_1.curTalkId_ = 417161002
		arg_10_1.duration_ = 8.27

		local var_10_0 = {
			zh = 3.2,
			ja = 8.266
		}
		local var_10_1 = manager.audio:GetLocalizationFlag()

		if var_10_0[var_10_1] ~= nil then
			arg_10_1.duration_ = var_10_0[var_10_1]
		end

		SetActive(arg_10_1.tipsGo_, false)

		function arg_10_1.onSingleLineFinish_()
			arg_10_1.onSingleLineUpdate_ = nil
			arg_10_1.onSingleLineFinish_ = nil
			arg_10_1.state_ = "waiting"
		end

		function arg_10_1.playNext_(arg_12_0)
			if arg_12_0 == 1 then
				arg_10_0:Play417161003(arg_10_1)
			end
		end

		function arg_10_1.onSingleLineUpdate_(arg_13_0)
			local var_13_0 = "10128"

			if arg_10_1.actors_[var_13_0] == nil then
				local var_13_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10128")

				if not isNil(var_13_1) then
					local var_13_2 = Object.Instantiate(var_13_1, arg_10_1.canvasGo_.transform)

					var_13_2.transform:SetSiblingIndex(1)

					var_13_2.name = var_13_0
					var_13_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_10_1.actors_[var_13_0] = var_13_2

					local var_13_3 = var_13_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_10_1.isInRecall_ then
						for iter_13_0, iter_13_1 in ipairs(var_13_3) do
							iter_13_1.color = arg_10_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_13_4 = arg_10_1.actors_["10128"]
			local var_13_5 = 0

			if var_13_5 < arg_10_1.time_ and arg_10_1.time_ <= var_13_5 + arg_13_0 and not isNil(var_13_4) and arg_10_1.var_.actorSpriteComps10128 == nil then
				arg_10_1.var_.actorSpriteComps10128 = var_13_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_13_6 = 0.2

			if var_13_5 <= arg_10_1.time_ and arg_10_1.time_ < var_13_5 + var_13_6 and not isNil(var_13_4) then
				local var_13_7 = (arg_10_1.time_ - var_13_5) / var_13_6

				if arg_10_1.var_.actorSpriteComps10128 then
					for iter_13_2, iter_13_3 in pairs(arg_10_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_13_3 then
							if arg_10_1.isInRecall_ then
								local var_13_8 = Mathf.Lerp(iter_13_3.color.r, arg_10_1.hightColor1.r, var_13_7)
								local var_13_9 = Mathf.Lerp(iter_13_3.color.g, arg_10_1.hightColor1.g, var_13_7)
								local var_13_10 = Mathf.Lerp(iter_13_3.color.b, arg_10_1.hightColor1.b, var_13_7)

								iter_13_3.color = Color.New(var_13_8, var_13_9, var_13_10)
							else
								local var_13_11 = Mathf.Lerp(iter_13_3.color.r, 1, var_13_7)

								iter_13_3.color = Color.New(var_13_11, var_13_11, var_13_11)
							end
						end
					end
				end
			end

			if arg_10_1.time_ >= var_13_5 + var_13_6 and arg_10_1.time_ < var_13_5 + var_13_6 + arg_13_0 and not isNil(var_13_4) and arg_10_1.var_.actorSpriteComps10128 then
				for iter_13_4, iter_13_5 in pairs(arg_10_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_13_5 then
						if arg_10_1.isInRecall_ then
							iter_13_5.color = arg_10_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_13_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_10_1.var_.actorSpriteComps10128 = nil
			end

			local var_13_12 = arg_10_1.actors_["10128"].transform
			local var_13_13 = 0

			if var_13_13 < arg_10_1.time_ and arg_10_1.time_ <= var_13_13 + arg_13_0 then
				arg_10_1.var_.moveOldPos10128 = var_13_12.localPosition
				var_13_12.localScale = Vector3.New(1, 1, 1)

				arg_10_1:CheckSpriteTmpPos("10128", 3)

				local var_13_14 = var_13_12.childCount

				for iter_13_6 = 0, var_13_14 - 1 do
					local var_13_15 = var_13_12:GetChild(iter_13_6)

					if var_13_15.name == "" or not string.find(var_13_15.name, "split") then
						var_13_15.gameObject:SetActive(true)
					else
						var_13_15.gameObject:SetActive(false)
					end
				end
			end

			local var_13_16 = 0.001

			if var_13_13 <= arg_10_1.time_ and arg_10_1.time_ < var_13_13 + var_13_16 then
				local var_13_17 = (arg_10_1.time_ - var_13_13) / var_13_16
				local var_13_18 = Vector3.New(0, -347, -300)

				var_13_12.localPosition = Vector3.Lerp(arg_10_1.var_.moveOldPos10128, var_13_18, var_13_17)
			end

			if arg_10_1.time_ >= var_13_13 + var_13_16 and arg_10_1.time_ < var_13_13 + var_13_16 + arg_13_0 then
				var_13_12.localPosition = Vector3.New(0, -347, -300)
			end

			local var_13_19 = 0
			local var_13_20 = 0.35

			if var_13_19 < arg_10_1.time_ and arg_10_1.time_ <= var_13_19 + arg_13_0 then
				arg_10_1.talkMaxDuration = 0
				arg_10_1.dialogCg_.alpha = 1

				arg_10_1.dialog_:SetActive(true)
				SetActive(arg_10_1.leftNameGo_, true)

				local var_13_21 = arg_10_1:FormatText(StoryNameCfg[595].name)

				arg_10_1.leftNameTxt_.text = var_13_21

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_10_1.leftNameTxt_.transform)

				arg_10_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_10_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_10_1:RecordName(arg_10_1.leftNameTxt_.text)
				SetActive(arg_10_1.iconTrs_.gameObject, false)
				arg_10_1.callingController_:SetSelectedState("normal")

				local var_13_22 = arg_10_1:GetWordFromCfg(417161002)
				local var_13_23 = arg_10_1:FormatText(var_13_22.content)

				arg_10_1.text_.text = var_13_23

				LuaForUtil.ClearLinePrefixSymbol(arg_10_1.text_)

				local var_13_24 = 14
				local var_13_25 = utf8.len(var_13_23)
				local var_13_26 = var_13_24 <= 0 and var_13_20 or var_13_20 * (var_13_25 / var_13_24)

				if var_13_26 > 0 and var_13_20 < var_13_26 then
					arg_10_1.talkMaxDuration = var_13_26

					if var_13_26 + var_13_19 > arg_10_1.duration_ then
						arg_10_1.duration_ = var_13_26 + var_13_19
					end
				end

				arg_10_1.text_.text = var_13_23
				arg_10_1.typewritter.percent = 0

				arg_10_1.typewritter:SetDirty()
				arg_10_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161002", "story_v_out_417161.awb") ~= 0 then
					local var_13_27 = manager.audio:GetVoiceLength("story_v_out_417161", "417161002", "story_v_out_417161.awb") / 1000

					if var_13_27 + var_13_19 > arg_10_1.duration_ then
						arg_10_1.duration_ = var_13_27 + var_13_19
					end

					if var_13_22.prefab_name ~= "" and arg_10_1.actors_[var_13_22.prefab_name] ~= nil then
						local var_13_28 = LuaForUtil.PlayVoiceWithCriLipsync(arg_10_1.actors_[var_13_22.prefab_name].transform, "story_v_out_417161", "417161002", "story_v_out_417161.awb")

						arg_10_1:RecordAudio("417161002", var_13_28)
						arg_10_1:RecordAudio("417161002", var_13_28)
					else
						arg_10_1:AudioAction("play", "voice", "story_v_out_417161", "417161002", "story_v_out_417161.awb")
					end

					arg_10_1:RecordHistoryTalkVoice("story_v_out_417161", "417161002", "story_v_out_417161.awb")
				end

				arg_10_1:RecordContent(arg_10_1.text_.text)
			end

			local var_13_29 = math.max(var_13_20, arg_10_1.talkMaxDuration)

			if var_13_19 <= arg_10_1.time_ and arg_10_1.time_ < var_13_19 + var_13_29 then
				arg_10_1.typewritter.percent = (arg_10_1.time_ - var_13_19) / var_13_29

				arg_10_1.typewritter:SetDirty()
			end

			if arg_10_1.time_ >= var_13_19 + var_13_29 and arg_10_1.time_ < var_13_19 + var_13_29 + arg_13_0 then
				arg_10_1.typewritter.percent = 1

				arg_10_1.typewritter:SetDirty()
				arg_10_1:ShowNextGo(true)
			end
		end
	end,
	Play417161003 = function(arg_14_0, arg_14_1)
		arg_14_1.time_ = 0
		arg_14_1.frameCnt_ = 0
		arg_14_1.state_ = "playing"
		arg_14_1.curTalkId_ = 417161003
		arg_14_1.duration_ = 5

		SetActive(arg_14_1.tipsGo_, false)

		function arg_14_1.onSingleLineFinish_()
			arg_14_1.onSingleLineUpdate_ = nil
			arg_14_1.onSingleLineFinish_ = nil
			arg_14_1.state_ = "waiting"
		end

		function arg_14_1.playNext_(arg_16_0)
			if arg_16_0 == 1 then
				arg_14_0:Play417161004(arg_14_1)
			end
		end

		function arg_14_1.onSingleLineUpdate_(arg_17_0)
			local var_17_0 = arg_14_1.actors_["10128"].transform
			local var_17_1 = 0

			if var_17_1 < arg_14_1.time_ and arg_14_1.time_ <= var_17_1 + arg_17_0 then
				arg_14_1.var_.moveOldPos10128 = var_17_0.localPosition
				var_17_0.localScale = Vector3.New(1, 1, 1)

				arg_14_1:CheckSpriteTmpPos("10128", 7)

				local var_17_2 = var_17_0.childCount

				for iter_17_0 = 0, var_17_2 - 1 do
					local var_17_3 = var_17_0:GetChild(iter_17_0)

					if var_17_3.name == "" or not string.find(var_17_3.name, "split") then
						var_17_3.gameObject:SetActive(true)
					else
						var_17_3.gameObject:SetActive(false)
					end
				end
			end

			local var_17_4 = 0.001

			if var_17_1 <= arg_14_1.time_ and arg_14_1.time_ < var_17_1 + var_17_4 then
				local var_17_5 = (arg_14_1.time_ - var_17_1) / var_17_4
				local var_17_6 = Vector3.New(0, -2000, -300)

				var_17_0.localPosition = Vector3.Lerp(arg_14_1.var_.moveOldPos10128, var_17_6, var_17_5)
			end

			if arg_14_1.time_ >= var_17_1 + var_17_4 and arg_14_1.time_ < var_17_1 + var_17_4 + arg_17_0 then
				var_17_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_17_7 = 0
			local var_17_8 = 1.275

			if var_17_7 < arg_14_1.time_ and arg_14_1.time_ <= var_17_7 + arg_17_0 then
				arg_14_1.talkMaxDuration = 0
				arg_14_1.dialogCg_.alpha = 1

				arg_14_1.dialog_:SetActive(true)
				SetActive(arg_14_1.leftNameGo_, false)

				arg_14_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_14_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_14_1:RecordName(arg_14_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_14_1.iconTrs_.gameObject, false)
				arg_14_1.callingController_:SetSelectedState("normal")

				local var_17_9 = arg_14_1:GetWordFromCfg(417161003)
				local var_17_10 = arg_14_1:FormatText(var_17_9.content)

				arg_14_1.text_.text = var_17_10

				LuaForUtil.ClearLinePrefixSymbol(arg_14_1.text_)

				local var_17_11 = 51
				local var_17_12 = utf8.len(var_17_10)
				local var_17_13 = var_17_11 <= 0 and var_17_8 or var_17_8 * (var_17_12 / var_17_11)

				if var_17_13 > 0 and var_17_8 < var_17_13 then
					arg_14_1.talkMaxDuration = var_17_13

					if var_17_13 + var_17_7 > arg_14_1.duration_ then
						arg_14_1.duration_ = var_17_13 + var_17_7
					end
				end

				arg_14_1.text_.text = var_17_10
				arg_14_1.typewritter.percent = 0

				arg_14_1.typewritter:SetDirty()
				arg_14_1:ShowNextGo(false)
				arg_14_1:RecordContent(arg_14_1.text_.text)
			end

			local var_17_14 = math.max(var_17_8, arg_14_1.talkMaxDuration)

			if var_17_7 <= arg_14_1.time_ and arg_14_1.time_ < var_17_7 + var_17_14 then
				arg_14_1.typewritter.percent = (arg_14_1.time_ - var_17_7) / var_17_14

				arg_14_1.typewritter:SetDirty()
			end

			if arg_14_1.time_ >= var_17_7 + var_17_14 and arg_14_1.time_ < var_17_7 + var_17_14 + arg_17_0 then
				arg_14_1.typewritter.percent = 1

				arg_14_1.typewritter:SetDirty()
				arg_14_1:ShowNextGo(true)
			end
		end
	end,
	Play417161004 = function(arg_18_0, arg_18_1)
		arg_18_1.time_ = 0
		arg_18_1.frameCnt_ = 0
		arg_18_1.state_ = "playing"
		arg_18_1.curTalkId_ = 417161004
		arg_18_1.duration_ = 5

		SetActive(arg_18_1.tipsGo_, false)

		function arg_18_1.onSingleLineFinish_()
			arg_18_1.onSingleLineUpdate_ = nil
			arg_18_1.onSingleLineFinish_ = nil
			arg_18_1.state_ = "waiting"
		end

		function arg_18_1.playNext_(arg_20_0)
			if arg_20_0 == 1 then
				arg_18_0:Play417161005(arg_18_1)
			end
		end

		function arg_18_1.onSingleLineUpdate_(arg_21_0)
			local var_21_0 = 0
			local var_21_1 = 1

			if var_21_0 < arg_18_1.time_ and arg_18_1.time_ <= var_21_0 + arg_21_0 then
				local var_21_2 = "play"
				local var_21_3 = "effect"

				arg_18_1:AudioAction(var_21_2, var_21_3, "se_story_1310", "se_story_1310_footstep07", "")
			end

			local var_21_4 = 0
			local var_21_5 = 1.175

			if var_21_4 < arg_18_1.time_ and arg_18_1.time_ <= var_21_4 + arg_21_0 then
				arg_18_1.talkMaxDuration = 0
				arg_18_1.dialogCg_.alpha = 1

				arg_18_1.dialog_:SetActive(true)
				SetActive(arg_18_1.leftNameGo_, false)

				arg_18_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_18_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_18_1:RecordName(arg_18_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_18_1.iconTrs_.gameObject, false)
				arg_18_1.callingController_:SetSelectedState("normal")

				local var_21_6 = arg_18_1:GetWordFromCfg(417161004)
				local var_21_7 = arg_18_1:FormatText(var_21_6.content)

				arg_18_1.text_.text = var_21_7

				LuaForUtil.ClearLinePrefixSymbol(arg_18_1.text_)

				local var_21_8 = 47
				local var_21_9 = utf8.len(var_21_7)
				local var_21_10 = var_21_8 <= 0 and var_21_5 or var_21_5 * (var_21_9 / var_21_8)

				if var_21_10 > 0 and var_21_5 < var_21_10 then
					arg_18_1.talkMaxDuration = var_21_10

					if var_21_10 + var_21_4 > arg_18_1.duration_ then
						arg_18_1.duration_ = var_21_10 + var_21_4
					end
				end

				arg_18_1.text_.text = var_21_7
				arg_18_1.typewritter.percent = 0

				arg_18_1.typewritter:SetDirty()
				arg_18_1:ShowNextGo(false)
				arg_18_1:RecordContent(arg_18_1.text_.text)
			end

			local var_21_11 = math.max(var_21_5, arg_18_1.talkMaxDuration)

			if var_21_4 <= arg_18_1.time_ and arg_18_1.time_ < var_21_4 + var_21_11 then
				arg_18_1.typewritter.percent = (arg_18_1.time_ - var_21_4) / var_21_11

				arg_18_1.typewritter:SetDirty()
			end

			if arg_18_1.time_ >= var_21_4 + var_21_11 and arg_18_1.time_ < var_21_4 + var_21_11 + arg_21_0 then
				arg_18_1.typewritter.percent = 1

				arg_18_1.typewritter:SetDirty()
				arg_18_1:ShowNextGo(true)
			end
		end
	end,
	Play417161005 = function(arg_22_0, arg_22_1)
		arg_22_1.time_ = 0
		arg_22_1.frameCnt_ = 0
		arg_22_1.state_ = "playing"
		arg_22_1.curTalkId_ = 417161005
		arg_22_1.duration_ = 4.6

		local var_22_0 = {
			zh = 3.6,
			ja = 4.6
		}
		local var_22_1 = manager.audio:GetLocalizationFlag()

		if var_22_0[var_22_1] ~= nil then
			arg_22_1.duration_ = var_22_0[var_22_1]
		end

		SetActive(arg_22_1.tipsGo_, false)

		function arg_22_1.onSingleLineFinish_()
			arg_22_1.onSingleLineUpdate_ = nil
			arg_22_1.onSingleLineFinish_ = nil
			arg_22_1.state_ = "waiting"
		end

		function arg_22_1.playNext_(arg_24_0)
			if arg_24_0 == 1 then
				arg_22_0:Play417161006(arg_22_1)
			end
		end

		function arg_22_1.onSingleLineUpdate_(arg_25_0)
			local var_25_0 = 0
			local var_25_1 = 0.45

			if var_25_0 < arg_22_1.time_ and arg_22_1.time_ <= var_25_0 + arg_25_0 then
				arg_22_1.talkMaxDuration = 0
				arg_22_1.dialogCg_.alpha = 1

				arg_22_1.dialog_:SetActive(true)
				SetActive(arg_22_1.leftNameGo_, true)

				local var_25_2 = arg_22_1:FormatText(StoryNameCfg[1110].name)

				arg_22_1.leftNameTxt_.text = var_25_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_22_1.leftNameTxt_.transform)

				arg_22_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_22_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_22_1:RecordName(arg_22_1.leftNameTxt_.text)
				SetActive(arg_22_1.iconTrs_.gameObject, true)
				arg_22_1.iconController_:SetSelectedState("hero")

				arg_22_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_22_1.callingController_:SetSelectedState("normal")

				arg_22_1.keyicon_.color = Color.New(1, 1, 1)
				arg_22_1.icon_.color = Color.New(1, 1, 1)

				local var_25_3 = arg_22_1:GetWordFromCfg(417161005)
				local var_25_4 = arg_22_1:FormatText(var_25_3.content)

				arg_22_1.text_.text = var_25_4

				LuaForUtil.ClearLinePrefixSymbol(arg_22_1.text_)

				local var_25_5 = 18
				local var_25_6 = utf8.len(var_25_4)
				local var_25_7 = var_25_5 <= 0 and var_25_1 or var_25_1 * (var_25_6 / var_25_5)

				if var_25_7 > 0 and var_25_1 < var_25_7 then
					arg_22_1.talkMaxDuration = var_25_7

					if var_25_7 + var_25_0 > arg_22_1.duration_ then
						arg_22_1.duration_ = var_25_7 + var_25_0
					end
				end

				arg_22_1.text_.text = var_25_4
				arg_22_1.typewritter.percent = 0

				arg_22_1.typewritter:SetDirty()
				arg_22_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161005", "story_v_out_417161.awb") ~= 0 then
					local var_25_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161005", "story_v_out_417161.awb") / 1000

					if var_25_8 + var_25_0 > arg_22_1.duration_ then
						arg_22_1.duration_ = var_25_8 + var_25_0
					end

					if var_25_3.prefab_name ~= "" and arg_22_1.actors_[var_25_3.prefab_name] ~= nil then
						local var_25_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_22_1.actors_[var_25_3.prefab_name].transform, "story_v_out_417161", "417161005", "story_v_out_417161.awb")

						arg_22_1:RecordAudio("417161005", var_25_9)
						arg_22_1:RecordAudio("417161005", var_25_9)
					else
						arg_22_1:AudioAction("play", "voice", "story_v_out_417161", "417161005", "story_v_out_417161.awb")
					end

					arg_22_1:RecordHistoryTalkVoice("story_v_out_417161", "417161005", "story_v_out_417161.awb")
				end

				arg_22_1:RecordContent(arg_22_1.text_.text)
			end

			local var_25_10 = math.max(var_25_1, arg_22_1.talkMaxDuration)

			if var_25_0 <= arg_22_1.time_ and arg_22_1.time_ < var_25_0 + var_25_10 then
				arg_22_1.typewritter.percent = (arg_22_1.time_ - var_25_0) / var_25_10

				arg_22_1.typewritter:SetDirty()
			end

			if arg_22_1.time_ >= var_25_0 + var_25_10 and arg_22_1.time_ < var_25_0 + var_25_10 + arg_25_0 then
				arg_22_1.typewritter.percent = 1

				arg_22_1.typewritter:SetDirty()
				arg_22_1:ShowNextGo(true)
			end
		end
	end,
	Play417161006 = function(arg_26_0, arg_26_1)
		arg_26_1.time_ = 0
		arg_26_1.frameCnt_ = 0
		arg_26_1.state_ = "playing"
		arg_26_1.curTalkId_ = 417161006
		arg_26_1.duration_ = 5.8

		local var_26_0 = {
			zh = 5.8,
			ja = 3.3
		}
		local var_26_1 = manager.audio:GetLocalizationFlag()

		if var_26_0[var_26_1] ~= nil then
			arg_26_1.duration_ = var_26_0[var_26_1]
		end

		SetActive(arg_26_1.tipsGo_, false)

		function arg_26_1.onSingleLineFinish_()
			arg_26_1.onSingleLineUpdate_ = nil
			arg_26_1.onSingleLineFinish_ = nil
			arg_26_1.state_ = "waiting"
		end

		function arg_26_1.playNext_(arg_28_0)
			if arg_28_0 == 1 then
				arg_26_0:Play417161007(arg_26_1)
			end
		end

		function arg_26_1.onSingleLineUpdate_(arg_29_0)
			local var_29_0 = arg_26_1.actors_["10128"]
			local var_29_1 = 0

			if var_29_1 < arg_26_1.time_ and arg_26_1.time_ <= var_29_1 + arg_29_0 and not isNil(var_29_0) and arg_26_1.var_.actorSpriteComps10128 == nil then
				arg_26_1.var_.actorSpriteComps10128 = var_29_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_29_2 = 0.2

			if var_29_1 <= arg_26_1.time_ and arg_26_1.time_ < var_29_1 + var_29_2 and not isNil(var_29_0) then
				local var_29_3 = (arg_26_1.time_ - var_29_1) / var_29_2

				if arg_26_1.var_.actorSpriteComps10128 then
					for iter_29_0, iter_29_1 in pairs(arg_26_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_29_1 then
							if arg_26_1.isInRecall_ then
								local var_29_4 = Mathf.Lerp(iter_29_1.color.r, arg_26_1.hightColor1.r, var_29_3)
								local var_29_5 = Mathf.Lerp(iter_29_1.color.g, arg_26_1.hightColor1.g, var_29_3)
								local var_29_6 = Mathf.Lerp(iter_29_1.color.b, arg_26_1.hightColor1.b, var_29_3)

								iter_29_1.color = Color.New(var_29_4, var_29_5, var_29_6)
							else
								local var_29_7 = Mathf.Lerp(iter_29_1.color.r, 1, var_29_3)

								iter_29_1.color = Color.New(var_29_7, var_29_7, var_29_7)
							end
						end
					end
				end
			end

			if arg_26_1.time_ >= var_29_1 + var_29_2 and arg_26_1.time_ < var_29_1 + var_29_2 + arg_29_0 and not isNil(var_29_0) and arg_26_1.var_.actorSpriteComps10128 then
				for iter_29_2, iter_29_3 in pairs(arg_26_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_29_3 then
						if arg_26_1.isInRecall_ then
							iter_29_3.color = arg_26_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_29_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_26_1.var_.actorSpriteComps10128 = nil
			end

			local var_29_8 = arg_26_1.actors_["10128"].transform
			local var_29_9 = 0

			if var_29_9 < arg_26_1.time_ and arg_26_1.time_ <= var_29_9 + arg_29_0 then
				arg_26_1.var_.moveOldPos10128 = var_29_8.localPosition
				var_29_8.localScale = Vector3.New(1, 1, 1)

				arg_26_1:CheckSpriteTmpPos("10128", 3)

				local var_29_10 = var_29_8.childCount

				for iter_29_4 = 0, var_29_10 - 1 do
					local var_29_11 = var_29_8:GetChild(iter_29_4)

					if var_29_11.name == "" or not string.find(var_29_11.name, "split") then
						var_29_11.gameObject:SetActive(true)
					else
						var_29_11.gameObject:SetActive(false)
					end
				end
			end

			local var_29_12 = 0.001

			if var_29_9 <= arg_26_1.time_ and arg_26_1.time_ < var_29_9 + var_29_12 then
				local var_29_13 = (arg_26_1.time_ - var_29_9) / var_29_12
				local var_29_14 = Vector3.New(0, -347, -300)

				var_29_8.localPosition = Vector3.Lerp(arg_26_1.var_.moveOldPos10128, var_29_14, var_29_13)
			end

			if arg_26_1.time_ >= var_29_9 + var_29_12 and arg_26_1.time_ < var_29_9 + var_29_12 + arg_29_0 then
				var_29_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_29_15 = 0
			local var_29_16 = 0.375

			if var_29_15 < arg_26_1.time_ and arg_26_1.time_ <= var_29_15 + arg_29_0 then
				arg_26_1.talkMaxDuration = 0
				arg_26_1.dialogCg_.alpha = 1

				arg_26_1.dialog_:SetActive(true)
				SetActive(arg_26_1.leftNameGo_, true)

				local var_29_17 = arg_26_1:FormatText(StoryNameCfg[595].name)

				arg_26_1.leftNameTxt_.text = var_29_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_26_1.leftNameTxt_.transform)

				arg_26_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_26_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_26_1:RecordName(arg_26_1.leftNameTxt_.text)
				SetActive(arg_26_1.iconTrs_.gameObject, false)
				arg_26_1.callingController_:SetSelectedState("normal")

				local var_29_18 = arg_26_1:GetWordFromCfg(417161006)
				local var_29_19 = arg_26_1:FormatText(var_29_18.content)

				arg_26_1.text_.text = var_29_19

				LuaForUtil.ClearLinePrefixSymbol(arg_26_1.text_)

				local var_29_20 = 15
				local var_29_21 = utf8.len(var_29_19)
				local var_29_22 = var_29_20 <= 0 and var_29_16 or var_29_16 * (var_29_21 / var_29_20)

				if var_29_22 > 0 and var_29_16 < var_29_22 then
					arg_26_1.talkMaxDuration = var_29_22

					if var_29_22 + var_29_15 > arg_26_1.duration_ then
						arg_26_1.duration_ = var_29_22 + var_29_15
					end
				end

				arg_26_1.text_.text = var_29_19
				arg_26_1.typewritter.percent = 0

				arg_26_1.typewritter:SetDirty()
				arg_26_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161006", "story_v_out_417161.awb") ~= 0 then
					local var_29_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161006", "story_v_out_417161.awb") / 1000

					if var_29_23 + var_29_15 > arg_26_1.duration_ then
						arg_26_1.duration_ = var_29_23 + var_29_15
					end

					if var_29_18.prefab_name ~= "" and arg_26_1.actors_[var_29_18.prefab_name] ~= nil then
						local var_29_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_26_1.actors_[var_29_18.prefab_name].transform, "story_v_out_417161", "417161006", "story_v_out_417161.awb")

						arg_26_1:RecordAudio("417161006", var_29_24)
						arg_26_1:RecordAudio("417161006", var_29_24)
					else
						arg_26_1:AudioAction("play", "voice", "story_v_out_417161", "417161006", "story_v_out_417161.awb")
					end

					arg_26_1:RecordHistoryTalkVoice("story_v_out_417161", "417161006", "story_v_out_417161.awb")
				end

				arg_26_1:RecordContent(arg_26_1.text_.text)
			end

			local var_29_25 = math.max(var_29_16, arg_26_1.talkMaxDuration)

			if var_29_15 <= arg_26_1.time_ and arg_26_1.time_ < var_29_15 + var_29_25 then
				arg_26_1.typewritter.percent = (arg_26_1.time_ - var_29_15) / var_29_25

				arg_26_1.typewritter:SetDirty()
			end

			if arg_26_1.time_ >= var_29_15 + var_29_25 and arg_26_1.time_ < var_29_15 + var_29_25 + arg_29_0 then
				arg_26_1.typewritter.percent = 1

				arg_26_1.typewritter:SetDirty()
				arg_26_1:ShowNextGo(true)
			end
		end
	end,
	Play417161007 = function(arg_30_0, arg_30_1)
		arg_30_1.time_ = 0
		arg_30_1.frameCnt_ = 0
		arg_30_1.state_ = "playing"
		arg_30_1.curTalkId_ = 417161007
		arg_30_1.duration_ = 15

		local var_30_0 = {
			zh = 9.9,
			ja = 15
		}
		local var_30_1 = manager.audio:GetLocalizationFlag()

		if var_30_0[var_30_1] ~= nil then
			arg_30_1.duration_ = var_30_0[var_30_1]
		end

		SetActive(arg_30_1.tipsGo_, false)

		function arg_30_1.onSingleLineFinish_()
			arg_30_1.onSingleLineUpdate_ = nil
			arg_30_1.onSingleLineFinish_ = nil
			arg_30_1.state_ = "waiting"
		end

		function arg_30_1.playNext_(arg_32_0)
			if arg_32_0 == 1 then
				arg_30_0:Play417161008(arg_30_1)
			end
		end

		function arg_30_1.onSingleLineUpdate_(arg_33_0)
			local var_33_0 = 0
			local var_33_1 = 1.3

			if var_33_0 < arg_30_1.time_ and arg_30_1.time_ <= var_33_0 + arg_33_0 then
				arg_30_1.talkMaxDuration = 0
				arg_30_1.dialogCg_.alpha = 1

				arg_30_1.dialog_:SetActive(true)
				SetActive(arg_30_1.leftNameGo_, true)

				local var_33_2 = arg_30_1:FormatText(StoryNameCfg[595].name)

				arg_30_1.leftNameTxt_.text = var_33_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_30_1.leftNameTxt_.transform)

				arg_30_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_30_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_30_1:RecordName(arg_30_1.leftNameTxt_.text)
				SetActive(arg_30_1.iconTrs_.gameObject, false)
				arg_30_1.callingController_:SetSelectedState("normal")

				local var_33_3 = arg_30_1:GetWordFromCfg(417161007)
				local var_33_4 = arg_30_1:FormatText(var_33_3.content)

				arg_30_1.text_.text = var_33_4

				LuaForUtil.ClearLinePrefixSymbol(arg_30_1.text_)

				local var_33_5 = 52
				local var_33_6 = utf8.len(var_33_4)
				local var_33_7 = var_33_5 <= 0 and var_33_1 or var_33_1 * (var_33_6 / var_33_5)

				if var_33_7 > 0 and var_33_1 < var_33_7 then
					arg_30_1.talkMaxDuration = var_33_7

					if var_33_7 + var_33_0 > arg_30_1.duration_ then
						arg_30_1.duration_ = var_33_7 + var_33_0
					end
				end

				arg_30_1.text_.text = var_33_4
				arg_30_1.typewritter.percent = 0

				arg_30_1.typewritter:SetDirty()
				arg_30_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161007", "story_v_out_417161.awb") ~= 0 then
					local var_33_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161007", "story_v_out_417161.awb") / 1000

					if var_33_8 + var_33_0 > arg_30_1.duration_ then
						arg_30_1.duration_ = var_33_8 + var_33_0
					end

					if var_33_3.prefab_name ~= "" and arg_30_1.actors_[var_33_3.prefab_name] ~= nil then
						local var_33_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_30_1.actors_[var_33_3.prefab_name].transform, "story_v_out_417161", "417161007", "story_v_out_417161.awb")

						arg_30_1:RecordAudio("417161007", var_33_9)
						arg_30_1:RecordAudio("417161007", var_33_9)
					else
						arg_30_1:AudioAction("play", "voice", "story_v_out_417161", "417161007", "story_v_out_417161.awb")
					end

					arg_30_1:RecordHistoryTalkVoice("story_v_out_417161", "417161007", "story_v_out_417161.awb")
				end

				arg_30_1:RecordContent(arg_30_1.text_.text)
			end

			local var_33_10 = math.max(var_33_1, arg_30_1.talkMaxDuration)

			if var_33_0 <= arg_30_1.time_ and arg_30_1.time_ < var_33_0 + var_33_10 then
				arg_30_1.typewritter.percent = (arg_30_1.time_ - var_33_0) / var_33_10

				arg_30_1.typewritter:SetDirty()
			end

			if arg_30_1.time_ >= var_33_0 + var_33_10 and arg_30_1.time_ < var_33_0 + var_33_10 + arg_33_0 then
				arg_30_1.typewritter.percent = 1

				arg_30_1.typewritter:SetDirty()
				arg_30_1:ShowNextGo(true)
			end
		end
	end,
	Play417161008 = function(arg_34_0, arg_34_1)
		arg_34_1.time_ = 0
		arg_34_1.frameCnt_ = 0
		arg_34_1.state_ = "playing"
		arg_34_1.curTalkId_ = 417161008
		arg_34_1.duration_ = 12.4

		local var_34_0 = {
			zh = 8.633,
			ja = 12.4
		}
		local var_34_1 = manager.audio:GetLocalizationFlag()

		if var_34_0[var_34_1] ~= nil then
			arg_34_1.duration_ = var_34_0[var_34_1]
		end

		SetActive(arg_34_1.tipsGo_, false)

		function arg_34_1.onSingleLineFinish_()
			arg_34_1.onSingleLineUpdate_ = nil
			arg_34_1.onSingleLineFinish_ = nil
			arg_34_1.state_ = "waiting"
		end

		function arg_34_1.playNext_(arg_36_0)
			if arg_36_0 == 1 then
				arg_34_0:Play417161009(arg_34_1)
			end
		end

		function arg_34_1.onSingleLineUpdate_(arg_37_0)
			local var_37_0 = 0
			local var_37_1 = 1.125

			if var_37_0 < arg_34_1.time_ and arg_34_1.time_ <= var_37_0 + arg_37_0 then
				arg_34_1.talkMaxDuration = 0
				arg_34_1.dialogCg_.alpha = 1

				arg_34_1.dialog_:SetActive(true)
				SetActive(arg_34_1.leftNameGo_, true)

				local var_37_2 = arg_34_1:FormatText(StoryNameCfg[595].name)

				arg_34_1.leftNameTxt_.text = var_37_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_34_1.leftNameTxt_.transform)

				arg_34_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_34_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_34_1:RecordName(arg_34_1.leftNameTxt_.text)
				SetActive(arg_34_1.iconTrs_.gameObject, false)
				arg_34_1.callingController_:SetSelectedState("normal")

				local var_37_3 = arg_34_1:GetWordFromCfg(417161008)
				local var_37_4 = arg_34_1:FormatText(var_37_3.content)

				arg_34_1.text_.text = var_37_4

				LuaForUtil.ClearLinePrefixSymbol(arg_34_1.text_)

				local var_37_5 = 45
				local var_37_6 = utf8.len(var_37_4)
				local var_37_7 = var_37_5 <= 0 and var_37_1 or var_37_1 * (var_37_6 / var_37_5)

				if var_37_7 > 0 and var_37_1 < var_37_7 then
					arg_34_1.talkMaxDuration = var_37_7

					if var_37_7 + var_37_0 > arg_34_1.duration_ then
						arg_34_1.duration_ = var_37_7 + var_37_0
					end
				end

				arg_34_1.text_.text = var_37_4
				arg_34_1.typewritter.percent = 0

				arg_34_1.typewritter:SetDirty()
				arg_34_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161008", "story_v_out_417161.awb") ~= 0 then
					local var_37_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161008", "story_v_out_417161.awb") / 1000

					if var_37_8 + var_37_0 > arg_34_1.duration_ then
						arg_34_1.duration_ = var_37_8 + var_37_0
					end

					if var_37_3.prefab_name ~= "" and arg_34_1.actors_[var_37_3.prefab_name] ~= nil then
						local var_37_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_34_1.actors_[var_37_3.prefab_name].transform, "story_v_out_417161", "417161008", "story_v_out_417161.awb")

						arg_34_1:RecordAudio("417161008", var_37_9)
						arg_34_1:RecordAudio("417161008", var_37_9)
					else
						arg_34_1:AudioAction("play", "voice", "story_v_out_417161", "417161008", "story_v_out_417161.awb")
					end

					arg_34_1:RecordHistoryTalkVoice("story_v_out_417161", "417161008", "story_v_out_417161.awb")
				end

				arg_34_1:RecordContent(arg_34_1.text_.text)
			end

			local var_37_10 = math.max(var_37_1, arg_34_1.talkMaxDuration)

			if var_37_0 <= arg_34_1.time_ and arg_34_1.time_ < var_37_0 + var_37_10 then
				arg_34_1.typewritter.percent = (arg_34_1.time_ - var_37_0) / var_37_10

				arg_34_1.typewritter:SetDirty()
			end

			if arg_34_1.time_ >= var_37_0 + var_37_10 and arg_34_1.time_ < var_37_0 + var_37_10 + arg_37_0 then
				arg_34_1.typewritter.percent = 1

				arg_34_1.typewritter:SetDirty()
				arg_34_1:ShowNextGo(true)
			end
		end
	end,
	Play417161009 = function(arg_38_0, arg_38_1)
		arg_38_1.time_ = 0
		arg_38_1.frameCnt_ = 0
		arg_38_1.state_ = "playing"
		arg_38_1.curTalkId_ = 417161009
		arg_38_1.duration_ = 7.67

		local var_38_0 = {
			zh = 4.066,
			ja = 7.666
		}
		local var_38_1 = manager.audio:GetLocalizationFlag()

		if var_38_0[var_38_1] ~= nil then
			arg_38_1.duration_ = var_38_0[var_38_1]
		end

		SetActive(arg_38_1.tipsGo_, false)

		function arg_38_1.onSingleLineFinish_()
			arg_38_1.onSingleLineUpdate_ = nil
			arg_38_1.onSingleLineFinish_ = nil
			arg_38_1.state_ = "waiting"
		end

		function arg_38_1.playNext_(arg_40_0)
			if arg_40_0 == 1 then
				arg_38_0:Play417161010(arg_38_1)
			end
		end

		function arg_38_1.onSingleLineUpdate_(arg_41_0)
			local var_41_0 = 0
			local var_41_1 = 0.55

			if var_41_0 < arg_38_1.time_ and arg_38_1.time_ <= var_41_0 + arg_41_0 then
				arg_38_1.talkMaxDuration = 0
				arg_38_1.dialogCg_.alpha = 1

				arg_38_1.dialog_:SetActive(true)
				SetActive(arg_38_1.leftNameGo_, true)

				local var_41_2 = arg_38_1:FormatText(StoryNameCfg[595].name)

				arg_38_1.leftNameTxt_.text = var_41_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_38_1.leftNameTxt_.transform)

				arg_38_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_38_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_38_1:RecordName(arg_38_1.leftNameTxt_.text)
				SetActive(arg_38_1.iconTrs_.gameObject, false)
				arg_38_1.callingController_:SetSelectedState("normal")

				local var_41_3 = arg_38_1:GetWordFromCfg(417161009)
				local var_41_4 = arg_38_1:FormatText(var_41_3.content)

				arg_38_1.text_.text = var_41_4

				LuaForUtil.ClearLinePrefixSymbol(arg_38_1.text_)

				local var_41_5 = 22
				local var_41_6 = utf8.len(var_41_4)
				local var_41_7 = var_41_5 <= 0 and var_41_1 or var_41_1 * (var_41_6 / var_41_5)

				if var_41_7 > 0 and var_41_1 < var_41_7 then
					arg_38_1.talkMaxDuration = var_41_7

					if var_41_7 + var_41_0 > arg_38_1.duration_ then
						arg_38_1.duration_ = var_41_7 + var_41_0
					end
				end

				arg_38_1.text_.text = var_41_4
				arg_38_1.typewritter.percent = 0

				arg_38_1.typewritter:SetDirty()
				arg_38_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161009", "story_v_out_417161.awb") ~= 0 then
					local var_41_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161009", "story_v_out_417161.awb") / 1000

					if var_41_8 + var_41_0 > arg_38_1.duration_ then
						arg_38_1.duration_ = var_41_8 + var_41_0
					end

					if var_41_3.prefab_name ~= "" and arg_38_1.actors_[var_41_3.prefab_name] ~= nil then
						local var_41_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_38_1.actors_[var_41_3.prefab_name].transform, "story_v_out_417161", "417161009", "story_v_out_417161.awb")

						arg_38_1:RecordAudio("417161009", var_41_9)
						arg_38_1:RecordAudio("417161009", var_41_9)
					else
						arg_38_1:AudioAction("play", "voice", "story_v_out_417161", "417161009", "story_v_out_417161.awb")
					end

					arg_38_1:RecordHistoryTalkVoice("story_v_out_417161", "417161009", "story_v_out_417161.awb")
				end

				arg_38_1:RecordContent(arg_38_1.text_.text)
			end

			local var_41_10 = math.max(var_41_1, arg_38_1.talkMaxDuration)

			if var_41_0 <= arg_38_1.time_ and arg_38_1.time_ < var_41_0 + var_41_10 then
				arg_38_1.typewritter.percent = (arg_38_1.time_ - var_41_0) / var_41_10

				arg_38_1.typewritter:SetDirty()
			end

			if arg_38_1.time_ >= var_41_0 + var_41_10 and arg_38_1.time_ < var_41_0 + var_41_10 + arg_41_0 then
				arg_38_1.typewritter.percent = 1

				arg_38_1.typewritter:SetDirty()
				arg_38_1:ShowNextGo(true)
			end
		end
	end,
	Play417161010 = function(arg_42_0, arg_42_1)
		arg_42_1.time_ = 0
		arg_42_1.frameCnt_ = 0
		arg_42_1.state_ = "playing"
		arg_42_1.curTalkId_ = 417161010
		arg_42_1.duration_ = 5

		SetActive(arg_42_1.tipsGo_, false)

		function arg_42_1.onSingleLineFinish_()
			arg_42_1.onSingleLineUpdate_ = nil
			arg_42_1.onSingleLineFinish_ = nil
			arg_42_1.state_ = "waiting"
		end

		function arg_42_1.playNext_(arg_44_0)
			if arg_44_0 == 1 then
				arg_42_0:Play417161011(arg_42_1)
			end
		end

		function arg_42_1.onSingleLineUpdate_(arg_45_0)
			local var_45_0 = arg_42_1.actors_["10128"].transform
			local var_45_1 = 0

			if var_45_1 < arg_42_1.time_ and arg_42_1.time_ <= var_45_1 + arg_45_0 then
				arg_42_1.var_.moveOldPos10128 = var_45_0.localPosition
				var_45_0.localScale = Vector3.New(1, 1, 1)

				arg_42_1:CheckSpriteTmpPos("10128", 7)

				local var_45_2 = var_45_0.childCount

				for iter_45_0 = 0, var_45_2 - 1 do
					local var_45_3 = var_45_0:GetChild(iter_45_0)

					if var_45_3.name == "" or not string.find(var_45_3.name, "split") then
						var_45_3.gameObject:SetActive(true)
					else
						var_45_3.gameObject:SetActive(false)
					end
				end
			end

			local var_45_4 = 0.001

			if var_45_1 <= arg_42_1.time_ and arg_42_1.time_ < var_45_1 + var_45_4 then
				local var_45_5 = (arg_42_1.time_ - var_45_1) / var_45_4
				local var_45_6 = Vector3.New(0, -2000, -300)

				var_45_0.localPosition = Vector3.Lerp(arg_42_1.var_.moveOldPos10128, var_45_6, var_45_5)
			end

			if arg_42_1.time_ >= var_45_1 + var_45_4 and arg_42_1.time_ < var_45_1 + var_45_4 + arg_45_0 then
				var_45_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_45_7 = 0
			local var_45_8 = 1.35

			if var_45_7 < arg_42_1.time_ and arg_42_1.time_ <= var_45_7 + arg_45_0 then
				arg_42_1.talkMaxDuration = 0
				arg_42_1.dialogCg_.alpha = 1

				arg_42_1.dialog_:SetActive(true)
				SetActive(arg_42_1.leftNameGo_, false)

				arg_42_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_42_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_42_1:RecordName(arg_42_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_42_1.iconTrs_.gameObject, false)
				arg_42_1.callingController_:SetSelectedState("normal")

				local var_45_9 = arg_42_1:GetWordFromCfg(417161010)
				local var_45_10 = arg_42_1:FormatText(var_45_9.content)

				arg_42_1.text_.text = var_45_10

				LuaForUtil.ClearLinePrefixSymbol(arg_42_1.text_)

				local var_45_11 = 54
				local var_45_12 = utf8.len(var_45_10)
				local var_45_13 = var_45_11 <= 0 and var_45_8 or var_45_8 * (var_45_12 / var_45_11)

				if var_45_13 > 0 and var_45_8 < var_45_13 then
					arg_42_1.talkMaxDuration = var_45_13

					if var_45_13 + var_45_7 > arg_42_1.duration_ then
						arg_42_1.duration_ = var_45_13 + var_45_7
					end
				end

				arg_42_1.text_.text = var_45_10
				arg_42_1.typewritter.percent = 0

				arg_42_1.typewritter:SetDirty()
				arg_42_1:ShowNextGo(false)
				arg_42_1:RecordContent(arg_42_1.text_.text)
			end

			local var_45_14 = math.max(var_45_8, arg_42_1.talkMaxDuration)

			if var_45_7 <= arg_42_1.time_ and arg_42_1.time_ < var_45_7 + var_45_14 then
				arg_42_1.typewritter.percent = (arg_42_1.time_ - var_45_7) / var_45_14

				arg_42_1.typewritter:SetDirty()
			end

			if arg_42_1.time_ >= var_45_7 + var_45_14 and arg_42_1.time_ < var_45_7 + var_45_14 + arg_45_0 then
				arg_42_1.typewritter.percent = 1

				arg_42_1.typewritter:SetDirty()
				arg_42_1:ShowNextGo(true)
			end
		end
	end,
	Play417161011 = function(arg_46_0, arg_46_1)
		arg_46_1.time_ = 0
		arg_46_1.frameCnt_ = 0
		arg_46_1.state_ = "playing"
		arg_46_1.curTalkId_ = 417161011
		arg_46_1.duration_ = 4.9

		local var_46_0 = {
			zh = 4,
			ja = 4.9
		}
		local var_46_1 = manager.audio:GetLocalizationFlag()

		if var_46_0[var_46_1] ~= nil then
			arg_46_1.duration_ = var_46_0[var_46_1]
		end

		SetActive(arg_46_1.tipsGo_, false)

		function arg_46_1.onSingleLineFinish_()
			arg_46_1.onSingleLineUpdate_ = nil
			arg_46_1.onSingleLineFinish_ = nil
			arg_46_1.state_ = "waiting"
		end

		function arg_46_1.playNext_(arg_48_0)
			if arg_48_0 == 1 then
				arg_46_0:Play417161012(arg_46_1)
			end
		end

		function arg_46_1.onSingleLineUpdate_(arg_49_0)
			local var_49_0 = 0
			local var_49_1 = 0.475

			if var_49_0 < arg_46_1.time_ and arg_46_1.time_ <= var_49_0 + arg_49_0 then
				arg_46_1.talkMaxDuration = 0
				arg_46_1.dialogCg_.alpha = 1

				arg_46_1.dialog_:SetActive(true)
				SetActive(arg_46_1.leftNameGo_, true)

				local var_49_2 = arg_46_1:FormatText(StoryNameCfg[1110].name)

				arg_46_1.leftNameTxt_.text = var_49_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_46_1.leftNameTxt_.transform)

				arg_46_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_46_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_46_1:RecordName(arg_46_1.leftNameTxt_.text)
				SetActive(arg_46_1.iconTrs_.gameObject, true)
				arg_46_1.iconController_:SetSelectedState("hero")

				arg_46_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_46_1.callingController_:SetSelectedState("normal")

				arg_46_1.keyicon_.color = Color.New(1, 1, 1)
				arg_46_1.icon_.color = Color.New(1, 1, 1)

				local var_49_3 = arg_46_1:GetWordFromCfg(417161011)
				local var_49_4 = arg_46_1:FormatText(var_49_3.content)

				arg_46_1.text_.text = var_49_4

				LuaForUtil.ClearLinePrefixSymbol(arg_46_1.text_)

				local var_49_5 = 19
				local var_49_6 = utf8.len(var_49_4)
				local var_49_7 = var_49_5 <= 0 and var_49_1 or var_49_1 * (var_49_6 / var_49_5)

				if var_49_7 > 0 and var_49_1 < var_49_7 then
					arg_46_1.talkMaxDuration = var_49_7

					if var_49_7 + var_49_0 > arg_46_1.duration_ then
						arg_46_1.duration_ = var_49_7 + var_49_0
					end
				end

				arg_46_1.text_.text = var_49_4
				arg_46_1.typewritter.percent = 0

				arg_46_1.typewritter:SetDirty()
				arg_46_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161011", "story_v_out_417161.awb") ~= 0 then
					local var_49_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161011", "story_v_out_417161.awb") / 1000

					if var_49_8 + var_49_0 > arg_46_1.duration_ then
						arg_46_1.duration_ = var_49_8 + var_49_0
					end

					if var_49_3.prefab_name ~= "" and arg_46_1.actors_[var_49_3.prefab_name] ~= nil then
						local var_49_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_46_1.actors_[var_49_3.prefab_name].transform, "story_v_out_417161", "417161011", "story_v_out_417161.awb")

						arg_46_1:RecordAudio("417161011", var_49_9)
						arg_46_1:RecordAudio("417161011", var_49_9)
					else
						arg_46_1:AudioAction("play", "voice", "story_v_out_417161", "417161011", "story_v_out_417161.awb")
					end

					arg_46_1:RecordHistoryTalkVoice("story_v_out_417161", "417161011", "story_v_out_417161.awb")
				end

				arg_46_1:RecordContent(arg_46_1.text_.text)
			end

			local var_49_10 = math.max(var_49_1, arg_46_1.talkMaxDuration)

			if var_49_0 <= arg_46_1.time_ and arg_46_1.time_ < var_49_0 + var_49_10 then
				arg_46_1.typewritter.percent = (arg_46_1.time_ - var_49_0) / var_49_10

				arg_46_1.typewritter:SetDirty()
			end

			if arg_46_1.time_ >= var_49_0 + var_49_10 and arg_46_1.time_ < var_49_0 + var_49_10 + arg_49_0 then
				arg_46_1.typewritter.percent = 1

				arg_46_1.typewritter:SetDirty()
				arg_46_1:ShowNextGo(true)
			end
		end
	end,
	Play417161012 = function(arg_50_0, arg_50_1)
		arg_50_1.time_ = 0
		arg_50_1.frameCnt_ = 0
		arg_50_1.state_ = "playing"
		arg_50_1.curTalkId_ = 417161012
		arg_50_1.duration_ = 5.6

		local var_50_0 = {
			zh = 4.6,
			ja = 5.6
		}
		local var_50_1 = manager.audio:GetLocalizationFlag()

		if var_50_0[var_50_1] ~= nil then
			arg_50_1.duration_ = var_50_0[var_50_1]
		end

		SetActive(arg_50_1.tipsGo_, false)

		function arg_50_1.onSingleLineFinish_()
			arg_50_1.onSingleLineUpdate_ = nil
			arg_50_1.onSingleLineFinish_ = nil
			arg_50_1.state_ = "waiting"
		end

		function arg_50_1.playNext_(arg_52_0)
			if arg_52_0 == 1 then
				arg_50_0:Play417161013(arg_50_1)
			end
		end

		function arg_50_1.onSingleLineUpdate_(arg_53_0)
			local var_53_0 = arg_50_1.actors_["10128"]
			local var_53_1 = 0

			if var_53_1 < arg_50_1.time_ and arg_50_1.time_ <= var_53_1 + arg_53_0 and not isNil(var_53_0) and arg_50_1.var_.actorSpriteComps10128 == nil then
				arg_50_1.var_.actorSpriteComps10128 = var_53_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_53_2 = 0.2

			if var_53_1 <= arg_50_1.time_ and arg_50_1.time_ < var_53_1 + var_53_2 and not isNil(var_53_0) then
				local var_53_3 = (arg_50_1.time_ - var_53_1) / var_53_2

				if arg_50_1.var_.actorSpriteComps10128 then
					for iter_53_0, iter_53_1 in pairs(arg_50_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_53_1 then
							if arg_50_1.isInRecall_ then
								local var_53_4 = Mathf.Lerp(iter_53_1.color.r, arg_50_1.hightColor1.r, var_53_3)
								local var_53_5 = Mathf.Lerp(iter_53_1.color.g, arg_50_1.hightColor1.g, var_53_3)
								local var_53_6 = Mathf.Lerp(iter_53_1.color.b, arg_50_1.hightColor1.b, var_53_3)

								iter_53_1.color = Color.New(var_53_4, var_53_5, var_53_6)
							else
								local var_53_7 = Mathf.Lerp(iter_53_1.color.r, 1, var_53_3)

								iter_53_1.color = Color.New(var_53_7, var_53_7, var_53_7)
							end
						end
					end
				end
			end

			if arg_50_1.time_ >= var_53_1 + var_53_2 and arg_50_1.time_ < var_53_1 + var_53_2 + arg_53_0 and not isNil(var_53_0) and arg_50_1.var_.actorSpriteComps10128 then
				for iter_53_2, iter_53_3 in pairs(arg_50_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_53_3 then
						if arg_50_1.isInRecall_ then
							iter_53_3.color = arg_50_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_53_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_50_1.var_.actorSpriteComps10128 = nil
			end

			local var_53_8 = arg_50_1.actors_["10128"].transform
			local var_53_9 = 0

			if var_53_9 < arg_50_1.time_ and arg_50_1.time_ <= var_53_9 + arg_53_0 then
				arg_50_1.var_.moveOldPos10128 = var_53_8.localPosition
				var_53_8.localScale = Vector3.New(1, 1, 1)

				arg_50_1:CheckSpriteTmpPos("10128", 3)

				local var_53_10 = var_53_8.childCount

				for iter_53_4 = 0, var_53_10 - 1 do
					local var_53_11 = var_53_8:GetChild(iter_53_4)

					if var_53_11.name == "split_1" or not string.find(var_53_11.name, "split") then
						var_53_11.gameObject:SetActive(true)
					else
						var_53_11.gameObject:SetActive(false)
					end
				end
			end

			local var_53_12 = 0.001

			if var_53_9 <= arg_50_1.time_ and arg_50_1.time_ < var_53_9 + var_53_12 then
				local var_53_13 = (arg_50_1.time_ - var_53_9) / var_53_12
				local var_53_14 = Vector3.New(0, -347, -300)

				var_53_8.localPosition = Vector3.Lerp(arg_50_1.var_.moveOldPos10128, var_53_14, var_53_13)
			end

			if arg_50_1.time_ >= var_53_9 + var_53_12 and arg_50_1.time_ < var_53_9 + var_53_12 + arg_53_0 then
				var_53_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_53_15 = 0
			local var_53_16 = 0.6

			if var_53_15 < arg_50_1.time_ and arg_50_1.time_ <= var_53_15 + arg_53_0 then
				arg_50_1.talkMaxDuration = 0
				arg_50_1.dialogCg_.alpha = 1

				arg_50_1.dialog_:SetActive(true)
				SetActive(arg_50_1.leftNameGo_, true)

				local var_53_17 = arg_50_1:FormatText(StoryNameCfg[595].name)

				arg_50_1.leftNameTxt_.text = var_53_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_50_1.leftNameTxt_.transform)

				arg_50_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_50_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_50_1:RecordName(arg_50_1.leftNameTxt_.text)
				SetActive(arg_50_1.iconTrs_.gameObject, false)
				arg_50_1.callingController_:SetSelectedState("normal")

				local var_53_18 = arg_50_1:GetWordFromCfg(417161012)
				local var_53_19 = arg_50_1:FormatText(var_53_18.content)

				arg_50_1.text_.text = var_53_19

				LuaForUtil.ClearLinePrefixSymbol(arg_50_1.text_)

				local var_53_20 = 24
				local var_53_21 = utf8.len(var_53_19)
				local var_53_22 = var_53_20 <= 0 and var_53_16 or var_53_16 * (var_53_21 / var_53_20)

				if var_53_22 > 0 and var_53_16 < var_53_22 then
					arg_50_1.talkMaxDuration = var_53_22

					if var_53_22 + var_53_15 > arg_50_1.duration_ then
						arg_50_1.duration_ = var_53_22 + var_53_15
					end
				end

				arg_50_1.text_.text = var_53_19
				arg_50_1.typewritter.percent = 0

				arg_50_1.typewritter:SetDirty()
				arg_50_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161012", "story_v_out_417161.awb") ~= 0 then
					local var_53_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161012", "story_v_out_417161.awb") / 1000

					if var_53_23 + var_53_15 > arg_50_1.duration_ then
						arg_50_1.duration_ = var_53_23 + var_53_15
					end

					if var_53_18.prefab_name ~= "" and arg_50_1.actors_[var_53_18.prefab_name] ~= nil then
						local var_53_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_50_1.actors_[var_53_18.prefab_name].transform, "story_v_out_417161", "417161012", "story_v_out_417161.awb")

						arg_50_1:RecordAudio("417161012", var_53_24)
						arg_50_1:RecordAudio("417161012", var_53_24)
					else
						arg_50_1:AudioAction("play", "voice", "story_v_out_417161", "417161012", "story_v_out_417161.awb")
					end

					arg_50_1:RecordHistoryTalkVoice("story_v_out_417161", "417161012", "story_v_out_417161.awb")
				end

				arg_50_1:RecordContent(arg_50_1.text_.text)
			end

			local var_53_25 = math.max(var_53_16, arg_50_1.talkMaxDuration)

			if var_53_15 <= arg_50_1.time_ and arg_50_1.time_ < var_53_15 + var_53_25 then
				arg_50_1.typewritter.percent = (arg_50_1.time_ - var_53_15) / var_53_25

				arg_50_1.typewritter:SetDirty()
			end

			if arg_50_1.time_ >= var_53_15 + var_53_25 and arg_50_1.time_ < var_53_15 + var_53_25 + arg_53_0 then
				arg_50_1.typewritter.percent = 1

				arg_50_1.typewritter:SetDirty()
				arg_50_1:ShowNextGo(true)
			end
		end
	end,
	Play417161013 = function(arg_54_0, arg_54_1)
		arg_54_1.time_ = 0
		arg_54_1.frameCnt_ = 0
		arg_54_1.state_ = "playing"
		arg_54_1.curTalkId_ = 417161013
		arg_54_1.duration_ = 3.77

		local var_54_0 = {
			zh = 2.933,
			ja = 3.766
		}
		local var_54_1 = manager.audio:GetLocalizationFlag()

		if var_54_0[var_54_1] ~= nil then
			arg_54_1.duration_ = var_54_0[var_54_1]
		end

		SetActive(arg_54_1.tipsGo_, false)

		function arg_54_1.onSingleLineFinish_()
			arg_54_1.onSingleLineUpdate_ = nil
			arg_54_1.onSingleLineFinish_ = nil
			arg_54_1.state_ = "waiting"
		end

		function arg_54_1.playNext_(arg_56_0)
			if arg_56_0 == 1 then
				arg_54_0:Play417161014(arg_54_1)
			end
		end

		function arg_54_1.onSingleLineUpdate_(arg_57_0)
			local var_57_0 = arg_54_1.actors_["10128"]
			local var_57_1 = 0

			if var_57_1 < arg_54_1.time_ and arg_54_1.time_ <= var_57_1 + arg_57_0 and not isNil(var_57_0) and arg_54_1.var_.actorSpriteComps10128 == nil then
				arg_54_1.var_.actorSpriteComps10128 = var_57_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_57_2 = 0.2

			if var_57_1 <= arg_54_1.time_ and arg_54_1.time_ < var_57_1 + var_57_2 and not isNil(var_57_0) then
				local var_57_3 = (arg_54_1.time_ - var_57_1) / var_57_2

				if arg_54_1.var_.actorSpriteComps10128 then
					for iter_57_0, iter_57_1 in pairs(arg_54_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_57_1 then
							if arg_54_1.isInRecall_ then
								local var_57_4 = Mathf.Lerp(iter_57_1.color.r, arg_54_1.hightColor2.r, var_57_3)
								local var_57_5 = Mathf.Lerp(iter_57_1.color.g, arg_54_1.hightColor2.g, var_57_3)
								local var_57_6 = Mathf.Lerp(iter_57_1.color.b, arg_54_1.hightColor2.b, var_57_3)

								iter_57_1.color = Color.New(var_57_4, var_57_5, var_57_6)
							else
								local var_57_7 = Mathf.Lerp(iter_57_1.color.r, 0.5, var_57_3)

								iter_57_1.color = Color.New(var_57_7, var_57_7, var_57_7)
							end
						end
					end
				end
			end

			if arg_54_1.time_ >= var_57_1 + var_57_2 and arg_54_1.time_ < var_57_1 + var_57_2 + arg_57_0 and not isNil(var_57_0) and arg_54_1.var_.actorSpriteComps10128 then
				for iter_57_2, iter_57_3 in pairs(arg_54_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_57_3 then
						if arg_54_1.isInRecall_ then
							iter_57_3.color = arg_54_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_57_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_54_1.var_.actorSpriteComps10128 = nil
			end

			local var_57_8 = 0
			local var_57_9 = 0.25

			if var_57_8 < arg_54_1.time_ and arg_54_1.time_ <= var_57_8 + arg_57_0 then
				arg_54_1.talkMaxDuration = 0
				arg_54_1.dialogCg_.alpha = 1

				arg_54_1.dialog_:SetActive(true)
				SetActive(arg_54_1.leftNameGo_, true)

				local var_57_10 = arg_54_1:FormatText(StoryNameCfg[1110].name)

				arg_54_1.leftNameTxt_.text = var_57_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_54_1.leftNameTxt_.transform)

				arg_54_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_54_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_54_1:RecordName(arg_54_1.leftNameTxt_.text)
				SetActive(arg_54_1.iconTrs_.gameObject, true)
				arg_54_1.iconController_:SetSelectedState("hero")

				arg_54_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_54_1.callingController_:SetSelectedState("normal")

				arg_54_1.keyicon_.color = Color.New(1, 1, 1)
				arg_54_1.icon_.color = Color.New(1, 1, 1)

				local var_57_11 = arg_54_1:GetWordFromCfg(417161013)
				local var_57_12 = arg_54_1:FormatText(var_57_11.content)

				arg_54_1.text_.text = var_57_12

				LuaForUtil.ClearLinePrefixSymbol(arg_54_1.text_)

				local var_57_13 = 10
				local var_57_14 = utf8.len(var_57_12)
				local var_57_15 = var_57_13 <= 0 and var_57_9 or var_57_9 * (var_57_14 / var_57_13)

				if var_57_15 > 0 and var_57_9 < var_57_15 then
					arg_54_1.talkMaxDuration = var_57_15

					if var_57_15 + var_57_8 > arg_54_1.duration_ then
						arg_54_1.duration_ = var_57_15 + var_57_8
					end
				end

				arg_54_1.text_.text = var_57_12
				arg_54_1.typewritter.percent = 0

				arg_54_1.typewritter:SetDirty()
				arg_54_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161013", "story_v_out_417161.awb") ~= 0 then
					local var_57_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161013", "story_v_out_417161.awb") / 1000

					if var_57_16 + var_57_8 > arg_54_1.duration_ then
						arg_54_1.duration_ = var_57_16 + var_57_8
					end

					if var_57_11.prefab_name ~= "" and arg_54_1.actors_[var_57_11.prefab_name] ~= nil then
						local var_57_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_54_1.actors_[var_57_11.prefab_name].transform, "story_v_out_417161", "417161013", "story_v_out_417161.awb")

						arg_54_1:RecordAudio("417161013", var_57_17)
						arg_54_1:RecordAudio("417161013", var_57_17)
					else
						arg_54_1:AudioAction("play", "voice", "story_v_out_417161", "417161013", "story_v_out_417161.awb")
					end

					arg_54_1:RecordHistoryTalkVoice("story_v_out_417161", "417161013", "story_v_out_417161.awb")
				end

				arg_54_1:RecordContent(arg_54_1.text_.text)
			end

			local var_57_18 = math.max(var_57_9, arg_54_1.talkMaxDuration)

			if var_57_8 <= arg_54_1.time_ and arg_54_1.time_ < var_57_8 + var_57_18 then
				arg_54_1.typewritter.percent = (arg_54_1.time_ - var_57_8) / var_57_18

				arg_54_1.typewritter:SetDirty()
			end

			if arg_54_1.time_ >= var_57_8 + var_57_18 and arg_54_1.time_ < var_57_8 + var_57_18 + arg_57_0 then
				arg_54_1.typewritter.percent = 1

				arg_54_1.typewritter:SetDirty()
				arg_54_1:ShowNextGo(true)
			end
		end
	end,
	Play417161014 = function(arg_58_0, arg_58_1)
		arg_58_1.time_ = 0
		arg_58_1.frameCnt_ = 0
		arg_58_1.state_ = "playing"
		arg_58_1.curTalkId_ = 417161014
		arg_58_1.duration_ = 14.03

		local var_58_0 = {
			zh = 9.533,
			ja = 14.033
		}
		local var_58_1 = manager.audio:GetLocalizationFlag()

		if var_58_0[var_58_1] ~= nil then
			arg_58_1.duration_ = var_58_0[var_58_1]
		end

		SetActive(arg_58_1.tipsGo_, false)

		function arg_58_1.onSingleLineFinish_()
			arg_58_1.onSingleLineUpdate_ = nil
			arg_58_1.onSingleLineFinish_ = nil
			arg_58_1.state_ = "waiting"
		end

		function arg_58_1.playNext_(arg_60_0)
			if arg_60_0 == 1 then
				arg_58_0:Play417161015(arg_58_1)
			end
		end

		function arg_58_1.onSingleLineUpdate_(arg_61_0)
			local var_61_0 = arg_58_1.actors_["10128"]
			local var_61_1 = 0

			if var_61_1 < arg_58_1.time_ and arg_58_1.time_ <= var_61_1 + arg_61_0 and not isNil(var_61_0) and arg_58_1.var_.actorSpriteComps10128 == nil then
				arg_58_1.var_.actorSpriteComps10128 = var_61_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_61_2 = 0.2

			if var_61_1 <= arg_58_1.time_ and arg_58_1.time_ < var_61_1 + var_61_2 and not isNil(var_61_0) then
				local var_61_3 = (arg_58_1.time_ - var_61_1) / var_61_2

				if arg_58_1.var_.actorSpriteComps10128 then
					for iter_61_0, iter_61_1 in pairs(arg_58_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_61_1 then
							if arg_58_1.isInRecall_ then
								local var_61_4 = Mathf.Lerp(iter_61_1.color.r, arg_58_1.hightColor1.r, var_61_3)
								local var_61_5 = Mathf.Lerp(iter_61_1.color.g, arg_58_1.hightColor1.g, var_61_3)
								local var_61_6 = Mathf.Lerp(iter_61_1.color.b, arg_58_1.hightColor1.b, var_61_3)

								iter_61_1.color = Color.New(var_61_4, var_61_5, var_61_6)
							else
								local var_61_7 = Mathf.Lerp(iter_61_1.color.r, 1, var_61_3)

								iter_61_1.color = Color.New(var_61_7, var_61_7, var_61_7)
							end
						end
					end
				end
			end

			if arg_58_1.time_ >= var_61_1 + var_61_2 and arg_58_1.time_ < var_61_1 + var_61_2 + arg_61_0 and not isNil(var_61_0) and arg_58_1.var_.actorSpriteComps10128 then
				for iter_61_2, iter_61_3 in pairs(arg_58_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_61_3 then
						if arg_58_1.isInRecall_ then
							iter_61_3.color = arg_58_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_61_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_58_1.var_.actorSpriteComps10128 = nil
			end

			local var_61_8 = 0
			local var_61_9 = 1.05

			if var_61_8 < arg_58_1.time_ and arg_58_1.time_ <= var_61_8 + arg_61_0 then
				arg_58_1.talkMaxDuration = 0
				arg_58_1.dialogCg_.alpha = 1

				arg_58_1.dialog_:SetActive(true)
				SetActive(arg_58_1.leftNameGo_, true)

				local var_61_10 = arg_58_1:FormatText(StoryNameCfg[595].name)

				arg_58_1.leftNameTxt_.text = var_61_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_58_1.leftNameTxt_.transform)

				arg_58_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_58_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_58_1:RecordName(arg_58_1.leftNameTxt_.text)
				SetActive(arg_58_1.iconTrs_.gameObject, false)
				arg_58_1.callingController_:SetSelectedState("normal")

				local var_61_11 = arg_58_1:GetWordFromCfg(417161014)
				local var_61_12 = arg_58_1:FormatText(var_61_11.content)

				arg_58_1.text_.text = var_61_12

				LuaForUtil.ClearLinePrefixSymbol(arg_58_1.text_)

				local var_61_13 = 42
				local var_61_14 = utf8.len(var_61_12)
				local var_61_15 = var_61_13 <= 0 and var_61_9 or var_61_9 * (var_61_14 / var_61_13)

				if var_61_15 > 0 and var_61_9 < var_61_15 then
					arg_58_1.talkMaxDuration = var_61_15

					if var_61_15 + var_61_8 > arg_58_1.duration_ then
						arg_58_1.duration_ = var_61_15 + var_61_8
					end
				end

				arg_58_1.text_.text = var_61_12
				arg_58_1.typewritter.percent = 0

				arg_58_1.typewritter:SetDirty()
				arg_58_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161014", "story_v_out_417161.awb") ~= 0 then
					local var_61_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161014", "story_v_out_417161.awb") / 1000

					if var_61_16 + var_61_8 > arg_58_1.duration_ then
						arg_58_1.duration_ = var_61_16 + var_61_8
					end

					if var_61_11.prefab_name ~= "" and arg_58_1.actors_[var_61_11.prefab_name] ~= nil then
						local var_61_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_58_1.actors_[var_61_11.prefab_name].transform, "story_v_out_417161", "417161014", "story_v_out_417161.awb")

						arg_58_1:RecordAudio("417161014", var_61_17)
						arg_58_1:RecordAudio("417161014", var_61_17)
					else
						arg_58_1:AudioAction("play", "voice", "story_v_out_417161", "417161014", "story_v_out_417161.awb")
					end

					arg_58_1:RecordHistoryTalkVoice("story_v_out_417161", "417161014", "story_v_out_417161.awb")
				end

				arg_58_1:RecordContent(arg_58_1.text_.text)
			end

			local var_61_18 = math.max(var_61_9, arg_58_1.talkMaxDuration)

			if var_61_8 <= arg_58_1.time_ and arg_58_1.time_ < var_61_8 + var_61_18 then
				arg_58_1.typewritter.percent = (arg_58_1.time_ - var_61_8) / var_61_18

				arg_58_1.typewritter:SetDirty()
			end

			if arg_58_1.time_ >= var_61_8 + var_61_18 and arg_58_1.time_ < var_61_8 + var_61_18 + arg_61_0 then
				arg_58_1.typewritter.percent = 1

				arg_58_1.typewritter:SetDirty()
				arg_58_1:ShowNextGo(true)
			end
		end
	end,
	Play417161015 = function(arg_62_0, arg_62_1)
		arg_62_1.time_ = 0
		arg_62_1.frameCnt_ = 0
		arg_62_1.state_ = "playing"
		arg_62_1.curTalkId_ = 417161015
		arg_62_1.duration_ = 5

		SetActive(arg_62_1.tipsGo_, false)

		function arg_62_1.onSingleLineFinish_()
			arg_62_1.onSingleLineUpdate_ = nil
			arg_62_1.onSingleLineFinish_ = nil
			arg_62_1.state_ = "waiting"
		end

		function arg_62_1.playNext_(arg_64_0)
			if arg_64_0 == 1 then
				arg_62_0:Play417161016(arg_62_1)
			end
		end

		function arg_62_1.onSingleLineUpdate_(arg_65_0)
			local var_65_0 = arg_62_1.actors_["10128"].transform
			local var_65_1 = 0

			if var_65_1 < arg_62_1.time_ and arg_62_1.time_ <= var_65_1 + arg_65_0 then
				arg_62_1.var_.moveOldPos10128 = var_65_0.localPosition
				var_65_0.localScale = Vector3.New(1, 1, 1)

				arg_62_1:CheckSpriteTmpPos("10128", 7)

				local var_65_2 = var_65_0.childCount

				for iter_65_0 = 0, var_65_2 - 1 do
					local var_65_3 = var_65_0:GetChild(iter_65_0)

					if var_65_3.name == "" or not string.find(var_65_3.name, "split") then
						var_65_3.gameObject:SetActive(true)
					else
						var_65_3.gameObject:SetActive(false)
					end
				end
			end

			local var_65_4 = 0.001

			if var_65_1 <= arg_62_1.time_ and arg_62_1.time_ < var_65_1 + var_65_4 then
				local var_65_5 = (arg_62_1.time_ - var_65_1) / var_65_4
				local var_65_6 = Vector3.New(0, -2000, -300)

				var_65_0.localPosition = Vector3.Lerp(arg_62_1.var_.moveOldPos10128, var_65_6, var_65_5)
			end

			if arg_62_1.time_ >= var_65_1 + var_65_4 and arg_62_1.time_ < var_65_1 + var_65_4 + arg_65_0 then
				var_65_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_65_7 = 0
			local var_65_8 = 1.35

			if var_65_7 < arg_62_1.time_ and arg_62_1.time_ <= var_65_7 + arg_65_0 then
				arg_62_1.talkMaxDuration = 0
				arg_62_1.dialogCg_.alpha = 1

				arg_62_1.dialog_:SetActive(true)
				SetActive(arg_62_1.leftNameGo_, false)

				arg_62_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_62_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_62_1:RecordName(arg_62_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_62_1.iconTrs_.gameObject, false)
				arg_62_1.callingController_:SetSelectedState("normal")

				local var_65_9 = arg_62_1:GetWordFromCfg(417161015)
				local var_65_10 = arg_62_1:FormatText(var_65_9.content)

				arg_62_1.text_.text = var_65_10

				LuaForUtil.ClearLinePrefixSymbol(arg_62_1.text_)

				local var_65_11 = 54
				local var_65_12 = utf8.len(var_65_10)
				local var_65_13 = var_65_11 <= 0 and var_65_8 or var_65_8 * (var_65_12 / var_65_11)

				if var_65_13 > 0 and var_65_8 < var_65_13 then
					arg_62_1.talkMaxDuration = var_65_13

					if var_65_13 + var_65_7 > arg_62_1.duration_ then
						arg_62_1.duration_ = var_65_13 + var_65_7
					end
				end

				arg_62_1.text_.text = var_65_10
				arg_62_1.typewritter.percent = 0

				arg_62_1.typewritter:SetDirty()
				arg_62_1:ShowNextGo(false)
				arg_62_1:RecordContent(arg_62_1.text_.text)
			end

			local var_65_14 = math.max(var_65_8, arg_62_1.talkMaxDuration)

			if var_65_7 <= arg_62_1.time_ and arg_62_1.time_ < var_65_7 + var_65_14 then
				arg_62_1.typewritter.percent = (arg_62_1.time_ - var_65_7) / var_65_14

				arg_62_1.typewritter:SetDirty()
			end

			if arg_62_1.time_ >= var_65_7 + var_65_14 and arg_62_1.time_ < var_65_7 + var_65_14 + arg_65_0 then
				arg_62_1.typewritter.percent = 1

				arg_62_1.typewritter:SetDirty()
				arg_62_1:ShowNextGo(true)
			end
		end
	end,
	Play417161016 = function(arg_66_0, arg_66_1)
		arg_66_1.time_ = 0
		arg_66_1.frameCnt_ = 0
		arg_66_1.state_ = "playing"
		arg_66_1.curTalkId_ = 417161016
		arg_66_1.duration_ = 5

		SetActive(arg_66_1.tipsGo_, false)

		function arg_66_1.onSingleLineFinish_()
			arg_66_1.onSingleLineUpdate_ = nil
			arg_66_1.onSingleLineFinish_ = nil
			arg_66_1.state_ = "waiting"
		end

		function arg_66_1.playNext_(arg_68_0)
			if arg_68_0 == 1 then
				arg_66_0:Play417161017(arg_66_1)
			end
		end

		function arg_66_1.onSingleLineUpdate_(arg_69_0)
			local var_69_0 = 0
			local var_69_1 = 0.775

			if var_69_0 < arg_66_1.time_ and arg_66_1.time_ <= var_69_0 + arg_69_0 then
				arg_66_1.talkMaxDuration = 0
				arg_66_1.dialogCg_.alpha = 1

				arg_66_1.dialog_:SetActive(true)
				SetActive(arg_66_1.leftNameGo_, false)

				arg_66_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_66_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_66_1:RecordName(arg_66_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_66_1.iconTrs_.gameObject, false)
				arg_66_1.callingController_:SetSelectedState("normal")

				local var_69_2 = arg_66_1:GetWordFromCfg(417161016)
				local var_69_3 = arg_66_1:FormatText(var_69_2.content)

				arg_66_1.text_.text = var_69_3

				LuaForUtil.ClearLinePrefixSymbol(arg_66_1.text_)

				local var_69_4 = 31
				local var_69_5 = utf8.len(var_69_3)
				local var_69_6 = var_69_4 <= 0 and var_69_1 or var_69_1 * (var_69_5 / var_69_4)

				if var_69_6 > 0 and var_69_1 < var_69_6 then
					arg_66_1.talkMaxDuration = var_69_6

					if var_69_6 + var_69_0 > arg_66_1.duration_ then
						arg_66_1.duration_ = var_69_6 + var_69_0
					end
				end

				arg_66_1.text_.text = var_69_3
				arg_66_1.typewritter.percent = 0

				arg_66_1.typewritter:SetDirty()
				arg_66_1:ShowNextGo(false)
				arg_66_1:RecordContent(arg_66_1.text_.text)
			end

			local var_69_7 = math.max(var_69_1, arg_66_1.talkMaxDuration)

			if var_69_0 <= arg_66_1.time_ and arg_66_1.time_ < var_69_0 + var_69_7 then
				arg_66_1.typewritter.percent = (arg_66_1.time_ - var_69_0) / var_69_7

				arg_66_1.typewritter:SetDirty()
			end

			if arg_66_1.time_ >= var_69_0 + var_69_7 and arg_66_1.time_ < var_69_0 + var_69_7 + arg_69_0 then
				arg_66_1.typewritter.percent = 1

				arg_66_1.typewritter:SetDirty()
				arg_66_1:ShowNextGo(true)
			end
		end
	end,
	Play417161017 = function(arg_70_0, arg_70_1)
		arg_70_1.time_ = 0
		arg_70_1.frameCnt_ = 0
		arg_70_1.state_ = "playing"
		arg_70_1.curTalkId_ = 417161017
		arg_70_1.duration_ = 2.8

		local var_70_0 = {
			zh = 1.933,
			ja = 2.8
		}
		local var_70_1 = manager.audio:GetLocalizationFlag()

		if var_70_0[var_70_1] ~= nil then
			arg_70_1.duration_ = var_70_0[var_70_1]
		end

		SetActive(arg_70_1.tipsGo_, false)

		function arg_70_1.onSingleLineFinish_()
			arg_70_1.onSingleLineUpdate_ = nil
			arg_70_1.onSingleLineFinish_ = nil
			arg_70_1.state_ = "waiting"
		end

		function arg_70_1.playNext_(arg_72_0)
			if arg_72_0 == 1 then
				arg_70_0:Play417161018(arg_70_1)
			end
		end

		function arg_70_1.onSingleLineUpdate_(arg_73_0)
			local var_73_0 = arg_70_1.actors_["10128"]
			local var_73_1 = 0

			if var_73_1 < arg_70_1.time_ and arg_70_1.time_ <= var_73_1 + arg_73_0 and not isNil(var_73_0) and arg_70_1.var_.actorSpriteComps10128 == nil then
				arg_70_1.var_.actorSpriteComps10128 = var_73_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_73_2 = 0.2

			if var_73_1 <= arg_70_1.time_ and arg_70_1.time_ < var_73_1 + var_73_2 and not isNil(var_73_0) then
				local var_73_3 = (arg_70_1.time_ - var_73_1) / var_73_2

				if arg_70_1.var_.actorSpriteComps10128 then
					for iter_73_0, iter_73_1 in pairs(arg_70_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_73_1 then
							if arg_70_1.isInRecall_ then
								local var_73_4 = Mathf.Lerp(iter_73_1.color.r, arg_70_1.hightColor1.r, var_73_3)
								local var_73_5 = Mathf.Lerp(iter_73_1.color.g, arg_70_1.hightColor1.g, var_73_3)
								local var_73_6 = Mathf.Lerp(iter_73_1.color.b, arg_70_1.hightColor1.b, var_73_3)

								iter_73_1.color = Color.New(var_73_4, var_73_5, var_73_6)
							else
								local var_73_7 = Mathf.Lerp(iter_73_1.color.r, 1, var_73_3)

								iter_73_1.color = Color.New(var_73_7, var_73_7, var_73_7)
							end
						end
					end
				end
			end

			if arg_70_1.time_ >= var_73_1 + var_73_2 and arg_70_1.time_ < var_73_1 + var_73_2 + arg_73_0 and not isNil(var_73_0) and arg_70_1.var_.actorSpriteComps10128 then
				for iter_73_2, iter_73_3 in pairs(arg_70_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_73_3 then
						if arg_70_1.isInRecall_ then
							iter_73_3.color = arg_70_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_73_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_70_1.var_.actorSpriteComps10128 = nil
			end

			local var_73_8 = arg_70_1.actors_["10128"].transform
			local var_73_9 = 0

			if var_73_9 < arg_70_1.time_ and arg_70_1.time_ <= var_73_9 + arg_73_0 then
				arg_70_1.var_.moveOldPos10128 = var_73_8.localPosition
				var_73_8.localScale = Vector3.New(1, 1, 1)

				arg_70_1:CheckSpriteTmpPos("10128", 3)

				local var_73_10 = var_73_8.childCount

				for iter_73_4 = 0, var_73_10 - 1 do
					local var_73_11 = var_73_8:GetChild(iter_73_4)

					if var_73_11.name == "split_6" or not string.find(var_73_11.name, "split") then
						var_73_11.gameObject:SetActive(true)
					else
						var_73_11.gameObject:SetActive(false)
					end
				end
			end

			local var_73_12 = 0.001

			if var_73_9 <= arg_70_1.time_ and arg_70_1.time_ < var_73_9 + var_73_12 then
				local var_73_13 = (arg_70_1.time_ - var_73_9) / var_73_12
				local var_73_14 = Vector3.New(0, -347, -300)

				var_73_8.localPosition = Vector3.Lerp(arg_70_1.var_.moveOldPos10128, var_73_14, var_73_13)
			end

			if arg_70_1.time_ >= var_73_9 + var_73_12 and arg_70_1.time_ < var_73_9 + var_73_12 + arg_73_0 then
				var_73_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_73_15 = 0
			local var_73_16 = 0.225

			if var_73_15 < arg_70_1.time_ and arg_70_1.time_ <= var_73_15 + arg_73_0 then
				arg_70_1.talkMaxDuration = 0
				arg_70_1.dialogCg_.alpha = 1

				arg_70_1.dialog_:SetActive(true)
				SetActive(arg_70_1.leftNameGo_, true)

				local var_73_17 = arg_70_1:FormatText(StoryNameCfg[595].name)

				arg_70_1.leftNameTxt_.text = var_73_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_70_1.leftNameTxt_.transform)

				arg_70_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_70_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_70_1:RecordName(arg_70_1.leftNameTxt_.text)
				SetActive(arg_70_1.iconTrs_.gameObject, false)
				arg_70_1.callingController_:SetSelectedState("normal")

				local var_73_18 = arg_70_1:GetWordFromCfg(417161017)
				local var_73_19 = arg_70_1:FormatText(var_73_18.content)

				arg_70_1.text_.text = var_73_19

				LuaForUtil.ClearLinePrefixSymbol(arg_70_1.text_)

				local var_73_20 = 9
				local var_73_21 = utf8.len(var_73_19)
				local var_73_22 = var_73_20 <= 0 and var_73_16 or var_73_16 * (var_73_21 / var_73_20)

				if var_73_22 > 0 and var_73_16 < var_73_22 then
					arg_70_1.talkMaxDuration = var_73_22

					if var_73_22 + var_73_15 > arg_70_1.duration_ then
						arg_70_1.duration_ = var_73_22 + var_73_15
					end
				end

				arg_70_1.text_.text = var_73_19
				arg_70_1.typewritter.percent = 0

				arg_70_1.typewritter:SetDirty()
				arg_70_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161017", "story_v_out_417161.awb") ~= 0 then
					local var_73_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161017", "story_v_out_417161.awb") / 1000

					if var_73_23 + var_73_15 > arg_70_1.duration_ then
						arg_70_1.duration_ = var_73_23 + var_73_15
					end

					if var_73_18.prefab_name ~= "" and arg_70_1.actors_[var_73_18.prefab_name] ~= nil then
						local var_73_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_70_1.actors_[var_73_18.prefab_name].transform, "story_v_out_417161", "417161017", "story_v_out_417161.awb")

						arg_70_1:RecordAudio("417161017", var_73_24)
						arg_70_1:RecordAudio("417161017", var_73_24)
					else
						arg_70_1:AudioAction("play", "voice", "story_v_out_417161", "417161017", "story_v_out_417161.awb")
					end

					arg_70_1:RecordHistoryTalkVoice("story_v_out_417161", "417161017", "story_v_out_417161.awb")
				end

				arg_70_1:RecordContent(arg_70_1.text_.text)
			end

			local var_73_25 = math.max(var_73_16, arg_70_1.talkMaxDuration)

			if var_73_15 <= arg_70_1.time_ and arg_70_1.time_ < var_73_15 + var_73_25 then
				arg_70_1.typewritter.percent = (arg_70_1.time_ - var_73_15) / var_73_25

				arg_70_1.typewritter:SetDirty()
			end

			if arg_70_1.time_ >= var_73_15 + var_73_25 and arg_70_1.time_ < var_73_15 + var_73_25 + arg_73_0 then
				arg_70_1.typewritter.percent = 1

				arg_70_1.typewritter:SetDirty()
				arg_70_1:ShowNextGo(true)
			end
		end
	end,
	Play417161018 = function(arg_74_0, arg_74_1)
		arg_74_1.time_ = 0
		arg_74_1.frameCnt_ = 0
		arg_74_1.state_ = "playing"
		arg_74_1.curTalkId_ = 417161018
		arg_74_1.duration_ = 9.2

		local var_74_0 = {
			zh = 6.266,
			ja = 9.2
		}
		local var_74_1 = manager.audio:GetLocalizationFlag()

		if var_74_0[var_74_1] ~= nil then
			arg_74_1.duration_ = var_74_0[var_74_1]
		end

		SetActive(arg_74_1.tipsGo_, false)

		function arg_74_1.onSingleLineFinish_()
			arg_74_1.onSingleLineUpdate_ = nil
			arg_74_1.onSingleLineFinish_ = nil
			arg_74_1.state_ = "waiting"
		end

		function arg_74_1.playNext_(arg_76_0)
			if arg_76_0 == 1 then
				arg_74_0:Play417161019(arg_74_1)
			end
		end

		function arg_74_1.onSingleLineUpdate_(arg_77_0)
			local var_77_0 = arg_74_1.actors_["10128"]
			local var_77_1 = 0

			if var_77_1 < arg_74_1.time_ and arg_74_1.time_ <= var_77_1 + arg_77_0 and not isNil(var_77_0) and arg_74_1.var_.actorSpriteComps10128 == nil then
				arg_74_1.var_.actorSpriteComps10128 = var_77_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_77_2 = 0.2

			if var_77_1 <= arg_74_1.time_ and arg_74_1.time_ < var_77_1 + var_77_2 and not isNil(var_77_0) then
				local var_77_3 = (arg_74_1.time_ - var_77_1) / var_77_2

				if arg_74_1.var_.actorSpriteComps10128 then
					for iter_77_0, iter_77_1 in pairs(arg_74_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_77_1 then
							if arg_74_1.isInRecall_ then
								local var_77_4 = Mathf.Lerp(iter_77_1.color.r, arg_74_1.hightColor2.r, var_77_3)
								local var_77_5 = Mathf.Lerp(iter_77_1.color.g, arg_74_1.hightColor2.g, var_77_3)
								local var_77_6 = Mathf.Lerp(iter_77_1.color.b, arg_74_1.hightColor2.b, var_77_3)

								iter_77_1.color = Color.New(var_77_4, var_77_5, var_77_6)
							else
								local var_77_7 = Mathf.Lerp(iter_77_1.color.r, 0.5, var_77_3)

								iter_77_1.color = Color.New(var_77_7, var_77_7, var_77_7)
							end
						end
					end
				end
			end

			if arg_74_1.time_ >= var_77_1 + var_77_2 and arg_74_1.time_ < var_77_1 + var_77_2 + arg_77_0 and not isNil(var_77_0) and arg_74_1.var_.actorSpriteComps10128 then
				for iter_77_2, iter_77_3 in pairs(arg_74_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_77_3 then
						if arg_74_1.isInRecall_ then
							iter_77_3.color = arg_74_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_77_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_74_1.var_.actorSpriteComps10128 = nil
			end

			local var_77_8 = 0
			local var_77_9 = 0.7

			if var_77_8 < arg_74_1.time_ and arg_74_1.time_ <= var_77_8 + arg_77_0 then
				arg_74_1.talkMaxDuration = 0
				arg_74_1.dialogCg_.alpha = 1

				arg_74_1.dialog_:SetActive(true)
				SetActive(arg_74_1.leftNameGo_, true)

				local var_77_10 = arg_74_1:FormatText(StoryNameCfg[1110].name)

				arg_74_1.leftNameTxt_.text = var_77_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_74_1.leftNameTxt_.transform)

				arg_74_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_74_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_74_1:RecordName(arg_74_1.leftNameTxt_.text)
				SetActive(arg_74_1.iconTrs_.gameObject, true)
				arg_74_1.iconController_:SetSelectedState("hero")

				arg_74_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_74_1.callingController_:SetSelectedState("normal")

				arg_74_1.keyicon_.color = Color.New(1, 1, 1)
				arg_74_1.icon_.color = Color.New(1, 1, 1)

				local var_77_11 = arg_74_1:GetWordFromCfg(417161018)
				local var_77_12 = arg_74_1:FormatText(var_77_11.content)

				arg_74_1.text_.text = var_77_12

				LuaForUtil.ClearLinePrefixSymbol(arg_74_1.text_)

				local var_77_13 = 28
				local var_77_14 = utf8.len(var_77_12)
				local var_77_15 = var_77_13 <= 0 and var_77_9 or var_77_9 * (var_77_14 / var_77_13)

				if var_77_15 > 0 and var_77_9 < var_77_15 then
					arg_74_1.talkMaxDuration = var_77_15

					if var_77_15 + var_77_8 > arg_74_1.duration_ then
						arg_74_1.duration_ = var_77_15 + var_77_8
					end
				end

				arg_74_1.text_.text = var_77_12
				arg_74_1.typewritter.percent = 0

				arg_74_1.typewritter:SetDirty()
				arg_74_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161018", "story_v_out_417161.awb") ~= 0 then
					local var_77_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161018", "story_v_out_417161.awb") / 1000

					if var_77_16 + var_77_8 > arg_74_1.duration_ then
						arg_74_1.duration_ = var_77_16 + var_77_8
					end

					if var_77_11.prefab_name ~= "" and arg_74_1.actors_[var_77_11.prefab_name] ~= nil then
						local var_77_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_74_1.actors_[var_77_11.prefab_name].transform, "story_v_out_417161", "417161018", "story_v_out_417161.awb")

						arg_74_1:RecordAudio("417161018", var_77_17)
						arg_74_1:RecordAudio("417161018", var_77_17)
					else
						arg_74_1:AudioAction("play", "voice", "story_v_out_417161", "417161018", "story_v_out_417161.awb")
					end

					arg_74_1:RecordHistoryTalkVoice("story_v_out_417161", "417161018", "story_v_out_417161.awb")
				end

				arg_74_1:RecordContent(arg_74_1.text_.text)
			end

			local var_77_18 = math.max(var_77_9, arg_74_1.talkMaxDuration)

			if var_77_8 <= arg_74_1.time_ and arg_74_1.time_ < var_77_8 + var_77_18 then
				arg_74_1.typewritter.percent = (arg_74_1.time_ - var_77_8) / var_77_18

				arg_74_1.typewritter:SetDirty()
			end

			if arg_74_1.time_ >= var_77_8 + var_77_18 and arg_74_1.time_ < var_77_8 + var_77_18 + arg_77_0 then
				arg_74_1.typewritter.percent = 1

				arg_74_1.typewritter:SetDirty()
				arg_74_1:ShowNextGo(true)
			end
		end
	end,
	Play417161019 = function(arg_78_0, arg_78_1)
		arg_78_1.time_ = 0
		arg_78_1.frameCnt_ = 0
		arg_78_1.state_ = "playing"
		arg_78_1.curTalkId_ = 417161019
		arg_78_1.duration_ = 7.83

		local var_78_0 = {
			zh = 6.166,
			ja = 7.833
		}
		local var_78_1 = manager.audio:GetLocalizationFlag()

		if var_78_0[var_78_1] ~= nil then
			arg_78_1.duration_ = var_78_0[var_78_1]
		end

		SetActive(arg_78_1.tipsGo_, false)

		function arg_78_1.onSingleLineFinish_()
			arg_78_1.onSingleLineUpdate_ = nil
			arg_78_1.onSingleLineFinish_ = nil
			arg_78_1.state_ = "waiting"
		end

		function arg_78_1.playNext_(arg_80_0)
			if arg_80_0 == 1 then
				arg_78_0:Play417161020(arg_78_1)
			end
		end

		function arg_78_1.onSingleLineUpdate_(arg_81_0)
			local var_81_0 = arg_78_1.actors_["10128"]
			local var_81_1 = 0

			if var_81_1 < arg_78_1.time_ and arg_78_1.time_ <= var_81_1 + arg_81_0 and not isNil(var_81_0) and arg_78_1.var_.actorSpriteComps10128 == nil then
				arg_78_1.var_.actorSpriteComps10128 = var_81_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_81_2 = 0.2

			if var_81_1 <= arg_78_1.time_ and arg_78_1.time_ < var_81_1 + var_81_2 and not isNil(var_81_0) then
				local var_81_3 = (arg_78_1.time_ - var_81_1) / var_81_2

				if arg_78_1.var_.actorSpriteComps10128 then
					for iter_81_0, iter_81_1 in pairs(arg_78_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_81_1 then
							if arg_78_1.isInRecall_ then
								local var_81_4 = Mathf.Lerp(iter_81_1.color.r, arg_78_1.hightColor1.r, var_81_3)
								local var_81_5 = Mathf.Lerp(iter_81_1.color.g, arg_78_1.hightColor1.g, var_81_3)
								local var_81_6 = Mathf.Lerp(iter_81_1.color.b, arg_78_1.hightColor1.b, var_81_3)

								iter_81_1.color = Color.New(var_81_4, var_81_5, var_81_6)
							else
								local var_81_7 = Mathf.Lerp(iter_81_1.color.r, 1, var_81_3)

								iter_81_1.color = Color.New(var_81_7, var_81_7, var_81_7)
							end
						end
					end
				end
			end

			if arg_78_1.time_ >= var_81_1 + var_81_2 and arg_78_1.time_ < var_81_1 + var_81_2 + arg_81_0 and not isNil(var_81_0) and arg_78_1.var_.actorSpriteComps10128 then
				for iter_81_2, iter_81_3 in pairs(arg_78_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_81_3 then
						if arg_78_1.isInRecall_ then
							iter_81_3.color = arg_78_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_81_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_78_1.var_.actorSpriteComps10128 = nil
			end

			local var_81_8 = arg_78_1.actors_["10128"].transform
			local var_81_9 = 0

			if var_81_9 < arg_78_1.time_ and arg_78_1.time_ <= var_81_9 + arg_81_0 then
				arg_78_1.var_.moveOldPos10128 = var_81_8.localPosition
				var_81_8.localScale = Vector3.New(1, 1, 1)

				arg_78_1:CheckSpriteTmpPos("10128", 3)

				local var_81_10 = var_81_8.childCount

				for iter_81_4 = 0, var_81_10 - 1 do
					local var_81_11 = var_81_8:GetChild(iter_81_4)

					if var_81_11.name == "split_2" or not string.find(var_81_11.name, "split") then
						var_81_11.gameObject:SetActive(true)
					else
						var_81_11.gameObject:SetActive(false)
					end
				end
			end

			local var_81_12 = 0.001

			if var_81_9 <= arg_78_1.time_ and arg_78_1.time_ < var_81_9 + var_81_12 then
				local var_81_13 = (arg_78_1.time_ - var_81_9) / var_81_12
				local var_81_14 = Vector3.New(0, -347, -300)

				var_81_8.localPosition = Vector3.Lerp(arg_78_1.var_.moveOldPos10128, var_81_14, var_81_13)
			end

			if arg_78_1.time_ >= var_81_9 + var_81_12 and arg_78_1.time_ < var_81_9 + var_81_12 + arg_81_0 then
				var_81_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_81_15 = 0
			local var_81_16 = 0.725

			if var_81_15 < arg_78_1.time_ and arg_78_1.time_ <= var_81_15 + arg_81_0 then
				arg_78_1.talkMaxDuration = 0
				arg_78_1.dialogCg_.alpha = 1

				arg_78_1.dialog_:SetActive(true)
				SetActive(arg_78_1.leftNameGo_, true)

				local var_81_17 = arg_78_1:FormatText(StoryNameCfg[595].name)

				arg_78_1.leftNameTxt_.text = var_81_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_78_1.leftNameTxt_.transform)

				arg_78_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_78_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_78_1:RecordName(arg_78_1.leftNameTxt_.text)
				SetActive(arg_78_1.iconTrs_.gameObject, false)
				arg_78_1.callingController_:SetSelectedState("normal")

				local var_81_18 = arg_78_1:GetWordFromCfg(417161019)
				local var_81_19 = arg_78_1:FormatText(var_81_18.content)

				arg_78_1.text_.text = var_81_19

				LuaForUtil.ClearLinePrefixSymbol(arg_78_1.text_)

				local var_81_20 = 28
				local var_81_21 = utf8.len(var_81_19)
				local var_81_22 = var_81_20 <= 0 and var_81_16 or var_81_16 * (var_81_21 / var_81_20)

				if var_81_22 > 0 and var_81_16 < var_81_22 then
					arg_78_1.talkMaxDuration = var_81_22

					if var_81_22 + var_81_15 > arg_78_1.duration_ then
						arg_78_1.duration_ = var_81_22 + var_81_15
					end
				end

				arg_78_1.text_.text = var_81_19
				arg_78_1.typewritter.percent = 0

				arg_78_1.typewritter:SetDirty()
				arg_78_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161019", "story_v_out_417161.awb") ~= 0 then
					local var_81_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161019", "story_v_out_417161.awb") / 1000

					if var_81_23 + var_81_15 > arg_78_1.duration_ then
						arg_78_1.duration_ = var_81_23 + var_81_15
					end

					if var_81_18.prefab_name ~= "" and arg_78_1.actors_[var_81_18.prefab_name] ~= nil then
						local var_81_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_78_1.actors_[var_81_18.prefab_name].transform, "story_v_out_417161", "417161019", "story_v_out_417161.awb")

						arg_78_1:RecordAudio("417161019", var_81_24)
						arg_78_1:RecordAudio("417161019", var_81_24)
					else
						arg_78_1:AudioAction("play", "voice", "story_v_out_417161", "417161019", "story_v_out_417161.awb")
					end

					arg_78_1:RecordHistoryTalkVoice("story_v_out_417161", "417161019", "story_v_out_417161.awb")
				end

				arg_78_1:RecordContent(arg_78_1.text_.text)
			end

			local var_81_25 = math.max(var_81_16, arg_78_1.talkMaxDuration)

			if var_81_15 <= arg_78_1.time_ and arg_78_1.time_ < var_81_15 + var_81_25 then
				arg_78_1.typewritter.percent = (arg_78_1.time_ - var_81_15) / var_81_25

				arg_78_1.typewritter:SetDirty()
			end

			if arg_78_1.time_ >= var_81_15 + var_81_25 and arg_78_1.time_ < var_81_15 + var_81_25 + arg_81_0 then
				arg_78_1.typewritter.percent = 1

				arg_78_1.typewritter:SetDirty()
				arg_78_1:ShowNextGo(true)
			end
		end
	end,
	Play417161020 = function(arg_82_0, arg_82_1)
		arg_82_1.time_ = 0
		arg_82_1.frameCnt_ = 0
		arg_82_1.state_ = "playing"
		arg_82_1.curTalkId_ = 417161020
		arg_82_1.duration_ = 16.73

		local var_82_0 = {
			zh = 8.733,
			ja = 16.733
		}
		local var_82_1 = manager.audio:GetLocalizationFlag()

		if var_82_0[var_82_1] ~= nil then
			arg_82_1.duration_ = var_82_0[var_82_1]
		end

		SetActive(arg_82_1.tipsGo_, false)

		function arg_82_1.onSingleLineFinish_()
			arg_82_1.onSingleLineUpdate_ = nil
			arg_82_1.onSingleLineFinish_ = nil
			arg_82_1.state_ = "waiting"
		end

		function arg_82_1.playNext_(arg_84_0)
			if arg_84_0 == 1 then
				arg_82_0:Play417161021(arg_82_1)
			end
		end

		function arg_82_1.onSingleLineUpdate_(arg_85_0)
			local var_85_0 = 0
			local var_85_1 = 1.125

			if var_85_0 < arg_82_1.time_ and arg_82_1.time_ <= var_85_0 + arg_85_0 then
				arg_82_1.talkMaxDuration = 0
				arg_82_1.dialogCg_.alpha = 1

				arg_82_1.dialog_:SetActive(true)
				SetActive(arg_82_1.leftNameGo_, true)

				local var_85_2 = arg_82_1:FormatText(StoryNameCfg[595].name)

				arg_82_1.leftNameTxt_.text = var_85_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_82_1.leftNameTxt_.transform)

				arg_82_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_82_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_82_1:RecordName(arg_82_1.leftNameTxt_.text)
				SetActive(arg_82_1.iconTrs_.gameObject, false)
				arg_82_1.callingController_:SetSelectedState("normal")

				local var_85_3 = arg_82_1:GetWordFromCfg(417161020)
				local var_85_4 = arg_82_1:FormatText(var_85_3.content)

				arg_82_1.text_.text = var_85_4

				LuaForUtil.ClearLinePrefixSymbol(arg_82_1.text_)

				local var_85_5 = 45
				local var_85_6 = utf8.len(var_85_4)
				local var_85_7 = var_85_5 <= 0 and var_85_1 or var_85_1 * (var_85_6 / var_85_5)

				if var_85_7 > 0 and var_85_1 < var_85_7 then
					arg_82_1.talkMaxDuration = var_85_7

					if var_85_7 + var_85_0 > arg_82_1.duration_ then
						arg_82_1.duration_ = var_85_7 + var_85_0
					end
				end

				arg_82_1.text_.text = var_85_4
				arg_82_1.typewritter.percent = 0

				arg_82_1.typewritter:SetDirty()
				arg_82_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161020", "story_v_out_417161.awb") ~= 0 then
					local var_85_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161020", "story_v_out_417161.awb") / 1000

					if var_85_8 + var_85_0 > arg_82_1.duration_ then
						arg_82_1.duration_ = var_85_8 + var_85_0
					end

					if var_85_3.prefab_name ~= "" and arg_82_1.actors_[var_85_3.prefab_name] ~= nil then
						local var_85_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_82_1.actors_[var_85_3.prefab_name].transform, "story_v_out_417161", "417161020", "story_v_out_417161.awb")

						arg_82_1:RecordAudio("417161020", var_85_9)
						arg_82_1:RecordAudio("417161020", var_85_9)
					else
						arg_82_1:AudioAction("play", "voice", "story_v_out_417161", "417161020", "story_v_out_417161.awb")
					end

					arg_82_1:RecordHistoryTalkVoice("story_v_out_417161", "417161020", "story_v_out_417161.awb")
				end

				arg_82_1:RecordContent(arg_82_1.text_.text)
			end

			local var_85_10 = math.max(var_85_1, arg_82_1.talkMaxDuration)

			if var_85_0 <= arg_82_1.time_ and arg_82_1.time_ < var_85_0 + var_85_10 then
				arg_82_1.typewritter.percent = (arg_82_1.time_ - var_85_0) / var_85_10

				arg_82_1.typewritter:SetDirty()
			end

			if arg_82_1.time_ >= var_85_0 + var_85_10 and arg_82_1.time_ < var_85_0 + var_85_10 + arg_85_0 then
				arg_82_1.typewritter.percent = 1

				arg_82_1.typewritter:SetDirty()
				arg_82_1:ShowNextGo(true)
			end
		end
	end,
	Play417161021 = function(arg_86_0, arg_86_1)
		arg_86_1.time_ = 0
		arg_86_1.frameCnt_ = 0
		arg_86_1.state_ = "playing"
		arg_86_1.curTalkId_ = 417161021
		arg_86_1.duration_ = 7.43

		local var_86_0 = {
			zh = 5.566,
			ja = 7.433
		}
		local var_86_1 = manager.audio:GetLocalizationFlag()

		if var_86_0[var_86_1] ~= nil then
			arg_86_1.duration_ = var_86_0[var_86_1]
		end

		SetActive(arg_86_1.tipsGo_, false)

		function arg_86_1.onSingleLineFinish_()
			arg_86_1.onSingleLineUpdate_ = nil
			arg_86_1.onSingleLineFinish_ = nil
			arg_86_1.state_ = "waiting"
		end

		function arg_86_1.playNext_(arg_88_0)
			if arg_88_0 == 1 then
				arg_86_0:Play417161022(arg_86_1)
			end
		end

		function arg_86_1.onSingleLineUpdate_(arg_89_0)
			local var_89_0 = 0
			local var_89_1 = 0.7

			if var_89_0 < arg_86_1.time_ and arg_86_1.time_ <= var_89_0 + arg_89_0 then
				arg_86_1.talkMaxDuration = 0
				arg_86_1.dialogCg_.alpha = 1

				arg_86_1.dialog_:SetActive(true)
				SetActive(arg_86_1.leftNameGo_, true)

				local var_89_2 = arg_86_1:FormatText(StoryNameCfg[595].name)

				arg_86_1.leftNameTxt_.text = var_89_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_86_1.leftNameTxt_.transform)

				arg_86_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_86_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_86_1:RecordName(arg_86_1.leftNameTxt_.text)
				SetActive(arg_86_1.iconTrs_.gameObject, false)
				arg_86_1.callingController_:SetSelectedState("normal")

				local var_89_3 = arg_86_1:GetWordFromCfg(417161021)
				local var_89_4 = arg_86_1:FormatText(var_89_3.content)

				arg_86_1.text_.text = var_89_4

				LuaForUtil.ClearLinePrefixSymbol(arg_86_1.text_)

				local var_89_5 = 28
				local var_89_6 = utf8.len(var_89_4)
				local var_89_7 = var_89_5 <= 0 and var_89_1 or var_89_1 * (var_89_6 / var_89_5)

				if var_89_7 > 0 and var_89_1 < var_89_7 then
					arg_86_1.talkMaxDuration = var_89_7

					if var_89_7 + var_89_0 > arg_86_1.duration_ then
						arg_86_1.duration_ = var_89_7 + var_89_0
					end
				end

				arg_86_1.text_.text = var_89_4
				arg_86_1.typewritter.percent = 0

				arg_86_1.typewritter:SetDirty()
				arg_86_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161021", "story_v_out_417161.awb") ~= 0 then
					local var_89_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161021", "story_v_out_417161.awb") / 1000

					if var_89_8 + var_89_0 > arg_86_1.duration_ then
						arg_86_1.duration_ = var_89_8 + var_89_0
					end

					if var_89_3.prefab_name ~= "" and arg_86_1.actors_[var_89_3.prefab_name] ~= nil then
						local var_89_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_86_1.actors_[var_89_3.prefab_name].transform, "story_v_out_417161", "417161021", "story_v_out_417161.awb")

						arg_86_1:RecordAudio("417161021", var_89_9)
						arg_86_1:RecordAudio("417161021", var_89_9)
					else
						arg_86_1:AudioAction("play", "voice", "story_v_out_417161", "417161021", "story_v_out_417161.awb")
					end

					arg_86_1:RecordHistoryTalkVoice("story_v_out_417161", "417161021", "story_v_out_417161.awb")
				end

				arg_86_1:RecordContent(arg_86_1.text_.text)
			end

			local var_89_10 = math.max(var_89_1, arg_86_1.talkMaxDuration)

			if var_89_0 <= arg_86_1.time_ and arg_86_1.time_ < var_89_0 + var_89_10 then
				arg_86_1.typewritter.percent = (arg_86_1.time_ - var_89_0) / var_89_10

				arg_86_1.typewritter:SetDirty()
			end

			if arg_86_1.time_ >= var_89_0 + var_89_10 and arg_86_1.time_ < var_89_0 + var_89_10 + arg_89_0 then
				arg_86_1.typewritter.percent = 1

				arg_86_1.typewritter:SetDirty()
				arg_86_1:ShowNextGo(true)
			end
		end
	end,
	Play417161022 = function(arg_90_0, arg_90_1)
		arg_90_1.time_ = 0
		arg_90_1.frameCnt_ = 0
		arg_90_1.state_ = "playing"
		arg_90_1.curTalkId_ = 417161022
		arg_90_1.duration_ = 5

		SetActive(arg_90_1.tipsGo_, false)

		function arg_90_1.onSingleLineFinish_()
			arg_90_1.onSingleLineUpdate_ = nil
			arg_90_1.onSingleLineFinish_ = nil
			arg_90_1.state_ = "waiting"
		end

		function arg_90_1.playNext_(arg_92_0)
			if arg_92_0 == 1 then
				arg_90_0:Play417161023(arg_90_1)
			end
		end

		function arg_90_1.onSingleLineUpdate_(arg_93_0)
			local var_93_0 = arg_90_1.actors_["10128"].transform
			local var_93_1 = 0

			if var_93_1 < arg_90_1.time_ and arg_90_1.time_ <= var_93_1 + arg_93_0 then
				arg_90_1.var_.moveOldPos10128 = var_93_0.localPosition
				var_93_0.localScale = Vector3.New(1, 1, 1)

				arg_90_1:CheckSpriteTmpPos("10128", 7)

				local var_93_2 = var_93_0.childCount

				for iter_93_0 = 0, var_93_2 - 1 do
					local var_93_3 = var_93_0:GetChild(iter_93_0)

					if var_93_3.name == "" or not string.find(var_93_3.name, "split") then
						var_93_3.gameObject:SetActive(true)
					else
						var_93_3.gameObject:SetActive(false)
					end
				end
			end

			local var_93_4 = 0.001

			if var_93_1 <= arg_90_1.time_ and arg_90_1.time_ < var_93_1 + var_93_4 then
				local var_93_5 = (arg_90_1.time_ - var_93_1) / var_93_4
				local var_93_6 = Vector3.New(0, -2000, -300)

				var_93_0.localPosition = Vector3.Lerp(arg_90_1.var_.moveOldPos10128, var_93_6, var_93_5)
			end

			if arg_90_1.time_ >= var_93_1 + var_93_4 and arg_90_1.time_ < var_93_1 + var_93_4 + arg_93_0 then
				var_93_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_93_7 = 1.36666666666667
			local var_93_8 = 1

			if var_93_7 < arg_90_1.time_ and arg_90_1.time_ <= var_93_7 + arg_93_0 then
				local var_93_9 = "play"
				local var_93_10 = "effect"

				arg_90_1:AudioAction(var_93_9, var_93_10, "se_story_17", "se_story_17_door_close02", "")
			end

			local var_93_11 = 0
			local var_93_12 = 1.175

			if var_93_11 < arg_90_1.time_ and arg_90_1.time_ <= var_93_11 + arg_93_0 then
				arg_90_1.talkMaxDuration = 0
				arg_90_1.dialogCg_.alpha = 1

				arg_90_1.dialog_:SetActive(true)
				SetActive(arg_90_1.leftNameGo_, false)

				arg_90_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_90_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_90_1:RecordName(arg_90_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_90_1.iconTrs_.gameObject, false)
				arg_90_1.callingController_:SetSelectedState("normal")

				local var_93_13 = arg_90_1:GetWordFromCfg(417161022)
				local var_93_14 = arg_90_1:FormatText(var_93_13.content)

				arg_90_1.text_.text = var_93_14

				LuaForUtil.ClearLinePrefixSymbol(arg_90_1.text_)

				local var_93_15 = 47
				local var_93_16 = utf8.len(var_93_14)
				local var_93_17 = var_93_15 <= 0 and var_93_12 or var_93_12 * (var_93_16 / var_93_15)

				if var_93_17 > 0 and var_93_12 < var_93_17 then
					arg_90_1.talkMaxDuration = var_93_17

					if var_93_17 + var_93_11 > arg_90_1.duration_ then
						arg_90_1.duration_ = var_93_17 + var_93_11
					end
				end

				arg_90_1.text_.text = var_93_14
				arg_90_1.typewritter.percent = 0

				arg_90_1.typewritter:SetDirty()
				arg_90_1:ShowNextGo(false)
				arg_90_1:RecordContent(arg_90_1.text_.text)
			end

			local var_93_18 = math.max(var_93_12, arg_90_1.talkMaxDuration)

			if var_93_11 <= arg_90_1.time_ and arg_90_1.time_ < var_93_11 + var_93_18 then
				arg_90_1.typewritter.percent = (arg_90_1.time_ - var_93_11) / var_93_18

				arg_90_1.typewritter:SetDirty()
			end

			if arg_90_1.time_ >= var_93_11 + var_93_18 and arg_90_1.time_ < var_93_11 + var_93_18 + arg_93_0 then
				arg_90_1.typewritter.percent = 1

				arg_90_1.typewritter:SetDirty()
				arg_90_1:ShowNextGo(true)
			end
		end
	end,
	Play417161023 = function(arg_94_0, arg_94_1)
		arg_94_1.time_ = 0
		arg_94_1.frameCnt_ = 0
		arg_94_1.state_ = "playing"
		arg_94_1.curTalkId_ = 417161023
		arg_94_1.duration_ = 5

		SetActive(arg_94_1.tipsGo_, false)

		function arg_94_1.onSingleLineFinish_()
			arg_94_1.onSingleLineUpdate_ = nil
			arg_94_1.onSingleLineFinish_ = nil
			arg_94_1.state_ = "waiting"
		end

		function arg_94_1.playNext_(arg_96_0)
			if arg_96_0 == 1 then
				arg_94_0:Play417161024(arg_94_1)
			end
		end

		function arg_94_1.onSingleLineUpdate_(arg_97_0)
			local var_97_0 = 0
			local var_97_1 = 1.275

			if var_97_0 < arg_94_1.time_ and arg_94_1.time_ <= var_97_0 + arg_97_0 then
				arg_94_1.talkMaxDuration = 0
				arg_94_1.dialogCg_.alpha = 1

				arg_94_1.dialog_:SetActive(true)
				SetActive(arg_94_1.leftNameGo_, false)

				arg_94_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_94_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_94_1:RecordName(arg_94_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_94_1.iconTrs_.gameObject, false)
				arg_94_1.callingController_:SetSelectedState("normal")

				local var_97_2 = arg_94_1:GetWordFromCfg(417161023)
				local var_97_3 = arg_94_1:FormatText(var_97_2.content)

				arg_94_1.text_.text = var_97_3

				LuaForUtil.ClearLinePrefixSymbol(arg_94_1.text_)

				local var_97_4 = 51
				local var_97_5 = utf8.len(var_97_3)
				local var_97_6 = var_97_4 <= 0 and var_97_1 or var_97_1 * (var_97_5 / var_97_4)

				if var_97_6 > 0 and var_97_1 < var_97_6 then
					arg_94_1.talkMaxDuration = var_97_6

					if var_97_6 + var_97_0 > arg_94_1.duration_ then
						arg_94_1.duration_ = var_97_6 + var_97_0
					end
				end

				arg_94_1.text_.text = var_97_3
				arg_94_1.typewritter.percent = 0

				arg_94_1.typewritter:SetDirty()
				arg_94_1:ShowNextGo(false)
				arg_94_1:RecordContent(arg_94_1.text_.text)
			end

			local var_97_7 = math.max(var_97_1, arg_94_1.talkMaxDuration)

			if var_97_0 <= arg_94_1.time_ and arg_94_1.time_ < var_97_0 + var_97_7 then
				arg_94_1.typewritter.percent = (arg_94_1.time_ - var_97_0) / var_97_7

				arg_94_1.typewritter:SetDirty()
			end

			if arg_94_1.time_ >= var_97_0 + var_97_7 and arg_94_1.time_ < var_97_0 + var_97_7 + arg_97_0 then
				arg_94_1.typewritter.percent = 1

				arg_94_1.typewritter:SetDirty()
				arg_94_1:ShowNextGo(true)
			end
		end
	end,
	Play417161024 = function(arg_98_0, arg_98_1)
		arg_98_1.time_ = 0
		arg_98_1.frameCnt_ = 0
		arg_98_1.state_ = "playing"
		arg_98_1.curTalkId_ = 417161024
		arg_98_1.duration_ = 3.93

		local var_98_0 = {
			zh = 3.566,
			ja = 3.933
		}
		local var_98_1 = manager.audio:GetLocalizationFlag()

		if var_98_0[var_98_1] ~= nil then
			arg_98_1.duration_ = var_98_0[var_98_1]
		end

		SetActive(arg_98_1.tipsGo_, false)

		function arg_98_1.onSingleLineFinish_()
			arg_98_1.onSingleLineUpdate_ = nil
			arg_98_1.onSingleLineFinish_ = nil
			arg_98_1.state_ = "waiting"
		end

		function arg_98_1.playNext_(arg_100_0)
			if arg_100_0 == 1 then
				arg_98_0:Play417161025(arg_98_1)
			end
		end

		function arg_98_1.onSingleLineUpdate_(arg_101_0)
			local var_101_0 = arg_98_1.actors_["10128"]
			local var_101_1 = 0

			if var_101_1 < arg_98_1.time_ and arg_98_1.time_ <= var_101_1 + arg_101_0 and not isNil(var_101_0) and arg_98_1.var_.actorSpriteComps10128 == nil then
				arg_98_1.var_.actorSpriteComps10128 = var_101_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_101_2 = 0.2

			if var_101_1 <= arg_98_1.time_ and arg_98_1.time_ < var_101_1 + var_101_2 and not isNil(var_101_0) then
				local var_101_3 = (arg_98_1.time_ - var_101_1) / var_101_2

				if arg_98_1.var_.actorSpriteComps10128 then
					for iter_101_0, iter_101_1 in pairs(arg_98_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_101_1 then
							if arg_98_1.isInRecall_ then
								local var_101_4 = Mathf.Lerp(iter_101_1.color.r, arg_98_1.hightColor1.r, var_101_3)
								local var_101_5 = Mathf.Lerp(iter_101_1.color.g, arg_98_1.hightColor1.g, var_101_3)
								local var_101_6 = Mathf.Lerp(iter_101_1.color.b, arg_98_1.hightColor1.b, var_101_3)

								iter_101_1.color = Color.New(var_101_4, var_101_5, var_101_6)
							else
								local var_101_7 = Mathf.Lerp(iter_101_1.color.r, 1, var_101_3)

								iter_101_1.color = Color.New(var_101_7, var_101_7, var_101_7)
							end
						end
					end
				end
			end

			if arg_98_1.time_ >= var_101_1 + var_101_2 and arg_98_1.time_ < var_101_1 + var_101_2 + arg_101_0 and not isNil(var_101_0) and arg_98_1.var_.actorSpriteComps10128 then
				for iter_101_2, iter_101_3 in pairs(arg_98_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_101_3 then
						if arg_98_1.isInRecall_ then
							iter_101_3.color = arg_98_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_101_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_98_1.var_.actorSpriteComps10128 = nil
			end

			local var_101_8 = arg_98_1.actors_["10128"].transform
			local var_101_9 = 0

			if var_101_9 < arg_98_1.time_ and arg_98_1.time_ <= var_101_9 + arg_101_0 then
				arg_98_1.var_.moveOldPos10128 = var_101_8.localPosition
				var_101_8.localScale = Vector3.New(1, 1, 1)

				arg_98_1:CheckSpriteTmpPos("10128", 3)

				local var_101_10 = var_101_8.childCount

				for iter_101_4 = 0, var_101_10 - 1 do
					local var_101_11 = var_101_8:GetChild(iter_101_4)

					if var_101_11.name == "split_6" or not string.find(var_101_11.name, "split") then
						var_101_11.gameObject:SetActive(true)
					else
						var_101_11.gameObject:SetActive(false)
					end
				end
			end

			local var_101_12 = 0.001

			if var_101_9 <= arg_98_1.time_ and arg_98_1.time_ < var_101_9 + var_101_12 then
				local var_101_13 = (arg_98_1.time_ - var_101_9) / var_101_12
				local var_101_14 = Vector3.New(0, -347, -300)

				var_101_8.localPosition = Vector3.Lerp(arg_98_1.var_.moveOldPos10128, var_101_14, var_101_13)
			end

			if arg_98_1.time_ >= var_101_9 + var_101_12 and arg_98_1.time_ < var_101_9 + var_101_12 + arg_101_0 then
				var_101_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_101_15 = 0
			local var_101_16 = 0.3

			if var_101_15 < arg_98_1.time_ and arg_98_1.time_ <= var_101_15 + arg_101_0 then
				arg_98_1.talkMaxDuration = 0
				arg_98_1.dialogCg_.alpha = 1

				arg_98_1.dialog_:SetActive(true)
				SetActive(arg_98_1.leftNameGo_, true)

				local var_101_17 = arg_98_1:FormatText(StoryNameCfg[595].name)

				arg_98_1.leftNameTxt_.text = var_101_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_98_1.leftNameTxt_.transform)

				arg_98_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_98_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_98_1:RecordName(arg_98_1.leftNameTxt_.text)
				SetActive(arg_98_1.iconTrs_.gameObject, false)
				arg_98_1.callingController_:SetSelectedState("normal")

				local var_101_18 = arg_98_1:GetWordFromCfg(417161024)
				local var_101_19 = arg_98_1:FormatText(var_101_18.content)

				arg_98_1.text_.text = var_101_19

				LuaForUtil.ClearLinePrefixSymbol(arg_98_1.text_)

				local var_101_20 = 12
				local var_101_21 = utf8.len(var_101_19)
				local var_101_22 = var_101_20 <= 0 and var_101_16 or var_101_16 * (var_101_21 / var_101_20)

				if var_101_22 > 0 and var_101_16 < var_101_22 then
					arg_98_1.talkMaxDuration = var_101_22

					if var_101_22 + var_101_15 > arg_98_1.duration_ then
						arg_98_1.duration_ = var_101_22 + var_101_15
					end
				end

				arg_98_1.text_.text = var_101_19
				arg_98_1.typewritter.percent = 0

				arg_98_1.typewritter:SetDirty()
				arg_98_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161024", "story_v_out_417161.awb") ~= 0 then
					local var_101_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161024", "story_v_out_417161.awb") / 1000

					if var_101_23 + var_101_15 > arg_98_1.duration_ then
						arg_98_1.duration_ = var_101_23 + var_101_15
					end

					if var_101_18.prefab_name ~= "" and arg_98_1.actors_[var_101_18.prefab_name] ~= nil then
						local var_101_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_98_1.actors_[var_101_18.prefab_name].transform, "story_v_out_417161", "417161024", "story_v_out_417161.awb")

						arg_98_1:RecordAudio("417161024", var_101_24)
						arg_98_1:RecordAudio("417161024", var_101_24)
					else
						arg_98_1:AudioAction("play", "voice", "story_v_out_417161", "417161024", "story_v_out_417161.awb")
					end

					arg_98_1:RecordHistoryTalkVoice("story_v_out_417161", "417161024", "story_v_out_417161.awb")
				end

				arg_98_1:RecordContent(arg_98_1.text_.text)
			end

			local var_101_25 = math.max(var_101_16, arg_98_1.talkMaxDuration)

			if var_101_15 <= arg_98_1.time_ and arg_98_1.time_ < var_101_15 + var_101_25 then
				arg_98_1.typewritter.percent = (arg_98_1.time_ - var_101_15) / var_101_25

				arg_98_1.typewritter:SetDirty()
			end

			if arg_98_1.time_ >= var_101_15 + var_101_25 and arg_98_1.time_ < var_101_15 + var_101_25 + arg_101_0 then
				arg_98_1.typewritter.percent = 1

				arg_98_1.typewritter:SetDirty()
				arg_98_1:ShowNextGo(true)
			end
		end
	end,
	Play417161025 = function(arg_102_0, arg_102_1)
		arg_102_1.time_ = 0
		arg_102_1.frameCnt_ = 0
		arg_102_1.state_ = "playing"
		arg_102_1.curTalkId_ = 417161025
		arg_102_1.duration_ = 12.03

		local var_102_0 = {
			zh = 3.766,
			ja = 12.033
		}
		local var_102_1 = manager.audio:GetLocalizationFlag()

		if var_102_0[var_102_1] ~= nil then
			arg_102_1.duration_ = var_102_0[var_102_1]
		end

		SetActive(arg_102_1.tipsGo_, false)

		function arg_102_1.onSingleLineFinish_()
			arg_102_1.onSingleLineUpdate_ = nil
			arg_102_1.onSingleLineFinish_ = nil
			arg_102_1.state_ = "waiting"
		end

		function arg_102_1.playNext_(arg_104_0)
			if arg_104_0 == 1 then
				arg_102_0:Play417161026(arg_102_1)
			end
		end

		function arg_102_1.onSingleLineUpdate_(arg_105_0)
			local var_105_0 = arg_102_1.actors_["10128"]
			local var_105_1 = 0

			if var_105_1 < arg_102_1.time_ and arg_102_1.time_ <= var_105_1 + arg_105_0 and not isNil(var_105_0) and arg_102_1.var_.actorSpriteComps10128 == nil then
				arg_102_1.var_.actorSpriteComps10128 = var_105_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_105_2 = 0.2

			if var_105_1 <= arg_102_1.time_ and arg_102_1.time_ < var_105_1 + var_105_2 and not isNil(var_105_0) then
				local var_105_3 = (arg_102_1.time_ - var_105_1) / var_105_2

				if arg_102_1.var_.actorSpriteComps10128 then
					for iter_105_0, iter_105_1 in pairs(arg_102_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_105_1 then
							if arg_102_1.isInRecall_ then
								local var_105_4 = Mathf.Lerp(iter_105_1.color.r, arg_102_1.hightColor2.r, var_105_3)
								local var_105_5 = Mathf.Lerp(iter_105_1.color.g, arg_102_1.hightColor2.g, var_105_3)
								local var_105_6 = Mathf.Lerp(iter_105_1.color.b, arg_102_1.hightColor2.b, var_105_3)

								iter_105_1.color = Color.New(var_105_4, var_105_5, var_105_6)
							else
								local var_105_7 = Mathf.Lerp(iter_105_1.color.r, 0.5, var_105_3)

								iter_105_1.color = Color.New(var_105_7, var_105_7, var_105_7)
							end
						end
					end
				end
			end

			if arg_102_1.time_ >= var_105_1 + var_105_2 and arg_102_1.time_ < var_105_1 + var_105_2 + arg_105_0 and not isNil(var_105_0) and arg_102_1.var_.actorSpriteComps10128 then
				for iter_105_2, iter_105_3 in pairs(arg_102_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_105_3 then
						if arg_102_1.isInRecall_ then
							iter_105_3.color = arg_102_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_105_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_102_1.var_.actorSpriteComps10128 = nil
			end

			local var_105_8 = arg_102_1.actors_["10128"].transform
			local var_105_9 = 0

			if var_105_9 < arg_102_1.time_ and arg_102_1.time_ <= var_105_9 + arg_105_0 then
				arg_102_1.var_.moveOldPos10128 = var_105_8.localPosition
				var_105_8.localScale = Vector3.New(1, 1, 1)

				arg_102_1:CheckSpriteTmpPos("10128", 2)

				local var_105_10 = var_105_8.childCount

				for iter_105_4 = 0, var_105_10 - 1 do
					local var_105_11 = var_105_8:GetChild(iter_105_4)

					if var_105_11.name == "" or not string.find(var_105_11.name, "split") then
						var_105_11.gameObject:SetActive(true)
					else
						var_105_11.gameObject:SetActive(false)
					end
				end
			end

			local var_105_12 = 0.001

			if var_105_9 <= arg_102_1.time_ and arg_102_1.time_ < var_105_9 + var_105_12 then
				local var_105_13 = (arg_102_1.time_ - var_105_9) / var_105_12
				local var_105_14 = Vector3.New(-390, -347, -300)

				var_105_8.localPosition = Vector3.Lerp(arg_102_1.var_.moveOldPos10128, var_105_14, var_105_13)
			end

			if arg_102_1.time_ >= var_105_9 + var_105_12 and arg_102_1.time_ < var_105_9 + var_105_12 + arg_105_0 then
				var_105_8.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_105_15 = "1095"

			if arg_102_1.actors_[var_105_15] == nil then
				local var_105_16 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1095")

				if not isNil(var_105_16) then
					local var_105_17 = Object.Instantiate(var_105_16, arg_102_1.canvasGo_.transform)

					var_105_17.transform:SetSiblingIndex(1)

					var_105_17.name = var_105_15
					var_105_17.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_102_1.actors_[var_105_15] = var_105_17

					local var_105_18 = var_105_17:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_102_1.isInRecall_ then
						for iter_105_5, iter_105_6 in ipairs(var_105_18) do
							iter_105_6.color = arg_102_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_105_19 = arg_102_1.actors_["1095"].transform
			local var_105_20 = 0

			if var_105_20 < arg_102_1.time_ and arg_102_1.time_ <= var_105_20 + arg_105_0 then
				arg_102_1.var_.moveOldPos1095 = var_105_19.localPosition
				var_105_19.localScale = Vector3.New(1, 1, 1)

				arg_102_1:CheckSpriteTmpPos("1095", 4)

				local var_105_21 = var_105_19.childCount

				for iter_105_7 = 0, var_105_21 - 1 do
					local var_105_22 = var_105_19:GetChild(iter_105_7)

					if var_105_22.name == "" or not string.find(var_105_22.name, "split") then
						var_105_22.gameObject:SetActive(true)
					else
						var_105_22.gameObject:SetActive(false)
					end
				end
			end

			local var_105_23 = 0.001

			if var_105_20 <= arg_102_1.time_ and arg_102_1.time_ < var_105_20 + var_105_23 then
				local var_105_24 = (arg_102_1.time_ - var_105_20) / var_105_23
				local var_105_25 = Vector3.New(390, -340, -285)

				var_105_19.localPosition = Vector3.Lerp(arg_102_1.var_.moveOldPos1095, var_105_25, var_105_24)
			end

			if arg_102_1.time_ >= var_105_20 + var_105_23 and arg_102_1.time_ < var_105_20 + var_105_23 + arg_105_0 then
				var_105_19.localPosition = Vector3.New(390, -340, -285)
			end

			local var_105_26 = arg_102_1.actors_["1095"]
			local var_105_27 = 0

			if var_105_27 < arg_102_1.time_ and arg_102_1.time_ <= var_105_27 + arg_105_0 then
				arg_102_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_105_28 = arg_102_1.actors_["1095"]
			local var_105_29 = 0

			if var_105_29 < arg_102_1.time_ and arg_102_1.time_ <= var_105_29 + arg_105_0 then
				local var_105_30 = var_105_28:GetComponentInChildren(typeof(CanvasGroup))

				if var_105_30 then
					arg_102_1.var_.alphaOldValue1095 = var_105_30.alpha
					arg_102_1.var_.characterEffect1095 = var_105_30
				end
			end

			local var_105_31 = 0.2

			if var_105_29 <= arg_102_1.time_ and arg_102_1.time_ < var_105_29 + var_105_31 then
				local var_105_32 = (arg_102_1.time_ - var_105_29) / var_105_31
				local var_105_33 = Mathf.Lerp(arg_102_1.var_.alphaOldValue1095, 0.6, var_105_32)

				if arg_102_1.var_.characterEffect1095 then
					arg_102_1.var_.characterEffect1095.alpha = var_105_33
				end
			end

			if arg_102_1.time_ >= var_105_29 + var_105_31 and arg_102_1.time_ < var_105_29 + var_105_31 + arg_105_0 and arg_102_1.var_.characterEffect1095 then
				arg_102_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_105_34 = 0
			local var_105_35 = 0.45

			if var_105_34 < arg_102_1.time_ and arg_102_1.time_ <= var_105_34 + arg_105_0 then
				arg_102_1.talkMaxDuration = 0
				arg_102_1.dialogCg_.alpha = 1

				arg_102_1.dialog_:SetActive(true)
				SetActive(arg_102_1.leftNameGo_, true)

				local var_105_36 = arg_102_1:FormatText(StoryNameCfg[471].name)

				arg_102_1.leftNameTxt_.text = var_105_36

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_102_1.leftNameTxt_.transform)

				arg_102_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_102_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_102_1:RecordName(arg_102_1.leftNameTxt_.text)
				SetActive(arg_102_1.iconTrs_.gameObject, false)
				arg_102_1.callingController_:SetSelectedState("normal")

				local var_105_37 = arg_102_1:GetWordFromCfg(417161025)
				local var_105_38 = arg_102_1:FormatText(var_105_37.content)

				arg_102_1.text_.text = var_105_38

				LuaForUtil.ClearLinePrefixSymbol(arg_102_1.text_)

				local var_105_39 = 18
				local var_105_40 = utf8.len(var_105_38)
				local var_105_41 = var_105_39 <= 0 and var_105_35 or var_105_35 * (var_105_40 / var_105_39)

				if var_105_41 > 0 and var_105_35 < var_105_41 then
					arg_102_1.talkMaxDuration = var_105_41

					if var_105_41 + var_105_34 > arg_102_1.duration_ then
						arg_102_1.duration_ = var_105_41 + var_105_34
					end
				end

				arg_102_1.text_.text = var_105_38
				arg_102_1.typewritter.percent = 0

				arg_102_1.typewritter:SetDirty()
				arg_102_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161025", "story_v_out_417161.awb") ~= 0 then
					local var_105_42 = manager.audio:GetVoiceLength("story_v_out_417161", "417161025", "story_v_out_417161.awb") / 1000

					if var_105_42 + var_105_34 > arg_102_1.duration_ then
						arg_102_1.duration_ = var_105_42 + var_105_34
					end

					if var_105_37.prefab_name ~= "" and arg_102_1.actors_[var_105_37.prefab_name] ~= nil then
						local var_105_43 = LuaForUtil.PlayVoiceWithCriLipsync(arg_102_1.actors_[var_105_37.prefab_name].transform, "story_v_out_417161", "417161025", "story_v_out_417161.awb")

						arg_102_1:RecordAudio("417161025", var_105_43)
						arg_102_1:RecordAudio("417161025", var_105_43)
					else
						arg_102_1:AudioAction("play", "voice", "story_v_out_417161", "417161025", "story_v_out_417161.awb")
					end

					arg_102_1:RecordHistoryTalkVoice("story_v_out_417161", "417161025", "story_v_out_417161.awb")
				end

				arg_102_1:RecordContent(arg_102_1.text_.text)
			end

			local var_105_44 = math.max(var_105_35, arg_102_1.talkMaxDuration)

			if var_105_34 <= arg_102_1.time_ and arg_102_1.time_ < var_105_34 + var_105_44 then
				arg_102_1.typewritter.percent = (arg_102_1.time_ - var_105_34) / var_105_44

				arg_102_1.typewritter:SetDirty()
			end

			if arg_102_1.time_ >= var_105_34 + var_105_44 and arg_102_1.time_ < var_105_34 + var_105_44 + arg_105_0 then
				arg_102_1.typewritter.percent = 1

				arg_102_1.typewritter:SetDirty()
				arg_102_1:ShowNextGo(true)
			end
		end
	end,
	Play417161026 = function(arg_106_0, arg_106_1)
		arg_106_1.time_ = 0
		arg_106_1.frameCnt_ = 0
		arg_106_1.state_ = "playing"
		arg_106_1.curTalkId_ = 417161026
		arg_106_1.duration_ = 10.13

		local var_106_0 = {
			zh = 7.466,
			ja = 10.133
		}
		local var_106_1 = manager.audio:GetLocalizationFlag()

		if var_106_0[var_106_1] ~= nil then
			arg_106_1.duration_ = var_106_0[var_106_1]
		end

		SetActive(arg_106_1.tipsGo_, false)

		function arg_106_1.onSingleLineFinish_()
			arg_106_1.onSingleLineUpdate_ = nil
			arg_106_1.onSingleLineFinish_ = nil
			arg_106_1.state_ = "waiting"
		end

		function arg_106_1.playNext_(arg_108_0)
			if arg_108_0 == 1 then
				arg_106_0:Play417161027(arg_106_1)
			end
		end

		function arg_106_1.onSingleLineUpdate_(arg_109_0)
			local var_109_0 = arg_106_1.actors_["10128"]
			local var_109_1 = 0

			if var_109_1 < arg_106_1.time_ and arg_106_1.time_ <= var_109_1 + arg_109_0 and not isNil(var_109_0) and arg_106_1.var_.actorSpriteComps10128 == nil then
				arg_106_1.var_.actorSpriteComps10128 = var_109_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_109_2 = 0.2

			if var_109_1 <= arg_106_1.time_ and arg_106_1.time_ < var_109_1 + var_109_2 and not isNil(var_109_0) then
				local var_109_3 = (arg_106_1.time_ - var_109_1) / var_109_2

				if arg_106_1.var_.actorSpriteComps10128 then
					for iter_109_0, iter_109_1 in pairs(arg_106_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_109_1 then
							if arg_106_1.isInRecall_ then
								local var_109_4 = Mathf.Lerp(iter_109_1.color.r, arg_106_1.hightColor1.r, var_109_3)
								local var_109_5 = Mathf.Lerp(iter_109_1.color.g, arg_106_1.hightColor1.g, var_109_3)
								local var_109_6 = Mathf.Lerp(iter_109_1.color.b, arg_106_1.hightColor1.b, var_109_3)

								iter_109_1.color = Color.New(var_109_4, var_109_5, var_109_6)
							else
								local var_109_7 = Mathf.Lerp(iter_109_1.color.r, 1, var_109_3)

								iter_109_1.color = Color.New(var_109_7, var_109_7, var_109_7)
							end
						end
					end
				end
			end

			if arg_106_1.time_ >= var_109_1 + var_109_2 and arg_106_1.time_ < var_109_1 + var_109_2 + arg_109_0 and not isNil(var_109_0) and arg_106_1.var_.actorSpriteComps10128 then
				for iter_109_2, iter_109_3 in pairs(arg_106_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_109_3 then
						if arg_106_1.isInRecall_ then
							iter_109_3.color = arg_106_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_109_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_106_1.var_.actorSpriteComps10128 = nil
			end

			local var_109_8 = arg_106_1.actors_["1095"]
			local var_109_9 = 0

			if var_109_9 < arg_106_1.time_ and arg_106_1.time_ <= var_109_9 + arg_109_0 and not isNil(var_109_8) and arg_106_1.var_.actorSpriteComps1095 == nil then
				arg_106_1.var_.actorSpriteComps1095 = var_109_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_109_10 = 0.2

			if var_109_9 <= arg_106_1.time_ and arg_106_1.time_ < var_109_9 + var_109_10 and not isNil(var_109_8) then
				local var_109_11 = (arg_106_1.time_ - var_109_9) / var_109_10

				if arg_106_1.var_.actorSpriteComps1095 then
					for iter_109_4, iter_109_5 in pairs(arg_106_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_109_5 then
							if arg_106_1.isInRecall_ then
								local var_109_12 = Mathf.Lerp(iter_109_5.color.r, arg_106_1.hightColor2.r, var_109_11)
								local var_109_13 = Mathf.Lerp(iter_109_5.color.g, arg_106_1.hightColor2.g, var_109_11)
								local var_109_14 = Mathf.Lerp(iter_109_5.color.b, arg_106_1.hightColor2.b, var_109_11)

								iter_109_5.color = Color.New(var_109_12, var_109_13, var_109_14)
							else
								local var_109_15 = Mathf.Lerp(iter_109_5.color.r, 0.5, var_109_11)

								iter_109_5.color = Color.New(var_109_15, var_109_15, var_109_15)
							end
						end
					end
				end
			end

			if arg_106_1.time_ >= var_109_9 + var_109_10 and arg_106_1.time_ < var_109_9 + var_109_10 + arg_109_0 and not isNil(var_109_8) and arg_106_1.var_.actorSpriteComps1095 then
				for iter_109_6, iter_109_7 in pairs(arg_106_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_109_7 then
						if arg_106_1.isInRecall_ then
							iter_109_7.color = arg_106_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_109_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_106_1.var_.actorSpriteComps1095 = nil
			end

			local var_109_16 = 0
			local var_109_17 = 1

			if var_109_16 < arg_106_1.time_ and arg_106_1.time_ <= var_109_16 + arg_109_0 then
				arg_106_1.talkMaxDuration = 0
				arg_106_1.dialogCg_.alpha = 1

				arg_106_1.dialog_:SetActive(true)
				SetActive(arg_106_1.leftNameGo_, true)

				local var_109_18 = arg_106_1:FormatText(StoryNameCfg[595].name)

				arg_106_1.leftNameTxt_.text = var_109_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_106_1.leftNameTxt_.transform)

				arg_106_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_106_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_106_1:RecordName(arg_106_1.leftNameTxt_.text)
				SetActive(arg_106_1.iconTrs_.gameObject, false)
				arg_106_1.callingController_:SetSelectedState("normal")

				local var_109_19 = arg_106_1:GetWordFromCfg(417161026)
				local var_109_20 = arg_106_1:FormatText(var_109_19.content)

				arg_106_1.text_.text = var_109_20

				LuaForUtil.ClearLinePrefixSymbol(arg_106_1.text_)

				local var_109_21 = 40
				local var_109_22 = utf8.len(var_109_20)
				local var_109_23 = var_109_21 <= 0 and var_109_17 or var_109_17 * (var_109_22 / var_109_21)

				if var_109_23 > 0 and var_109_17 < var_109_23 then
					arg_106_1.talkMaxDuration = var_109_23

					if var_109_23 + var_109_16 > arg_106_1.duration_ then
						arg_106_1.duration_ = var_109_23 + var_109_16
					end
				end

				arg_106_1.text_.text = var_109_20
				arg_106_1.typewritter.percent = 0

				arg_106_1.typewritter:SetDirty()
				arg_106_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161026", "story_v_out_417161.awb") ~= 0 then
					local var_109_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161026", "story_v_out_417161.awb") / 1000

					if var_109_24 + var_109_16 > arg_106_1.duration_ then
						arg_106_1.duration_ = var_109_24 + var_109_16
					end

					if var_109_19.prefab_name ~= "" and arg_106_1.actors_[var_109_19.prefab_name] ~= nil then
						local var_109_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_106_1.actors_[var_109_19.prefab_name].transform, "story_v_out_417161", "417161026", "story_v_out_417161.awb")

						arg_106_1:RecordAudio("417161026", var_109_25)
						arg_106_1:RecordAudio("417161026", var_109_25)
					else
						arg_106_1:AudioAction("play", "voice", "story_v_out_417161", "417161026", "story_v_out_417161.awb")
					end

					arg_106_1:RecordHistoryTalkVoice("story_v_out_417161", "417161026", "story_v_out_417161.awb")
				end

				arg_106_1:RecordContent(arg_106_1.text_.text)
			end

			local var_109_26 = math.max(var_109_17, arg_106_1.talkMaxDuration)

			if var_109_16 <= arg_106_1.time_ and arg_106_1.time_ < var_109_16 + var_109_26 then
				arg_106_1.typewritter.percent = (arg_106_1.time_ - var_109_16) / var_109_26

				arg_106_1.typewritter:SetDirty()
			end

			if arg_106_1.time_ >= var_109_16 + var_109_26 and arg_106_1.time_ < var_109_16 + var_109_26 + arg_109_0 then
				arg_106_1.typewritter.percent = 1

				arg_106_1.typewritter:SetDirty()
				arg_106_1:ShowNextGo(true)
			end
		end
	end,
	Play417161027 = function(arg_110_0, arg_110_1)
		arg_110_1.time_ = 0
		arg_110_1.frameCnt_ = 0
		arg_110_1.state_ = "playing"
		arg_110_1.curTalkId_ = 417161027
		arg_110_1.duration_ = 12.4

		local var_110_0 = {
			zh = 8.333,
			ja = 12.4
		}
		local var_110_1 = manager.audio:GetLocalizationFlag()

		if var_110_0[var_110_1] ~= nil then
			arg_110_1.duration_ = var_110_0[var_110_1]
		end

		SetActive(arg_110_1.tipsGo_, false)

		function arg_110_1.onSingleLineFinish_()
			arg_110_1.onSingleLineUpdate_ = nil
			arg_110_1.onSingleLineFinish_ = nil
			arg_110_1.state_ = "waiting"
		end

		function arg_110_1.playNext_(arg_112_0)
			if arg_112_0 == 1 then
				arg_110_0:Play417161028(arg_110_1)
			end
		end

		function arg_110_1.onSingleLineUpdate_(arg_113_0)
			local var_113_0 = 0
			local var_113_1 = 1.175

			if var_113_0 < arg_110_1.time_ and arg_110_1.time_ <= var_113_0 + arg_113_0 then
				arg_110_1.talkMaxDuration = 0
				arg_110_1.dialogCg_.alpha = 1

				arg_110_1.dialog_:SetActive(true)
				SetActive(arg_110_1.leftNameGo_, true)

				local var_113_2 = arg_110_1:FormatText(StoryNameCfg[595].name)

				arg_110_1.leftNameTxt_.text = var_113_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_110_1.leftNameTxt_.transform)

				arg_110_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_110_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_110_1:RecordName(arg_110_1.leftNameTxt_.text)
				SetActive(arg_110_1.iconTrs_.gameObject, false)
				arg_110_1.callingController_:SetSelectedState("normal")

				local var_113_3 = arg_110_1:GetWordFromCfg(417161027)
				local var_113_4 = arg_110_1:FormatText(var_113_3.content)

				arg_110_1.text_.text = var_113_4

				LuaForUtil.ClearLinePrefixSymbol(arg_110_1.text_)

				local var_113_5 = 47
				local var_113_6 = utf8.len(var_113_4)
				local var_113_7 = var_113_5 <= 0 and var_113_1 or var_113_1 * (var_113_6 / var_113_5)

				if var_113_7 > 0 and var_113_1 < var_113_7 then
					arg_110_1.talkMaxDuration = var_113_7

					if var_113_7 + var_113_0 > arg_110_1.duration_ then
						arg_110_1.duration_ = var_113_7 + var_113_0
					end
				end

				arg_110_1.text_.text = var_113_4
				arg_110_1.typewritter.percent = 0

				arg_110_1.typewritter:SetDirty()
				arg_110_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161027", "story_v_out_417161.awb") ~= 0 then
					local var_113_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161027", "story_v_out_417161.awb") / 1000

					if var_113_8 + var_113_0 > arg_110_1.duration_ then
						arg_110_1.duration_ = var_113_8 + var_113_0
					end

					if var_113_3.prefab_name ~= "" and arg_110_1.actors_[var_113_3.prefab_name] ~= nil then
						local var_113_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_110_1.actors_[var_113_3.prefab_name].transform, "story_v_out_417161", "417161027", "story_v_out_417161.awb")

						arg_110_1:RecordAudio("417161027", var_113_9)
						arg_110_1:RecordAudio("417161027", var_113_9)
					else
						arg_110_1:AudioAction("play", "voice", "story_v_out_417161", "417161027", "story_v_out_417161.awb")
					end

					arg_110_1:RecordHistoryTalkVoice("story_v_out_417161", "417161027", "story_v_out_417161.awb")
				end

				arg_110_1:RecordContent(arg_110_1.text_.text)
			end

			local var_113_10 = math.max(var_113_1, arg_110_1.talkMaxDuration)

			if var_113_0 <= arg_110_1.time_ and arg_110_1.time_ < var_113_0 + var_113_10 then
				arg_110_1.typewritter.percent = (arg_110_1.time_ - var_113_0) / var_113_10

				arg_110_1.typewritter:SetDirty()
			end

			if arg_110_1.time_ >= var_113_0 + var_113_10 and arg_110_1.time_ < var_113_0 + var_113_10 + arg_113_0 then
				arg_110_1.typewritter.percent = 1

				arg_110_1.typewritter:SetDirty()
				arg_110_1:ShowNextGo(true)
			end
		end
	end,
	Play417161028 = function(arg_114_0, arg_114_1)
		arg_114_1.time_ = 0
		arg_114_1.frameCnt_ = 0
		arg_114_1.state_ = "playing"
		arg_114_1.curTalkId_ = 417161028
		arg_114_1.duration_ = 5.63

		local var_114_0 = {
			zh = 2.8,
			ja = 5.633
		}
		local var_114_1 = manager.audio:GetLocalizationFlag()

		if var_114_0[var_114_1] ~= nil then
			arg_114_1.duration_ = var_114_0[var_114_1]
		end

		SetActive(arg_114_1.tipsGo_, false)

		function arg_114_1.onSingleLineFinish_()
			arg_114_1.onSingleLineUpdate_ = nil
			arg_114_1.onSingleLineFinish_ = nil
			arg_114_1.state_ = "waiting"
		end

		function arg_114_1.playNext_(arg_116_0)
			if arg_116_0 == 1 then
				arg_114_0:Play417161029(arg_114_1)
			end
		end

		function arg_114_1.onSingleLineUpdate_(arg_117_0)
			local var_117_0 = arg_114_1.actors_["10128"]
			local var_117_1 = 0

			if var_117_1 < arg_114_1.time_ and arg_114_1.time_ <= var_117_1 + arg_117_0 and not isNil(var_117_0) and arg_114_1.var_.actorSpriteComps10128 == nil then
				arg_114_1.var_.actorSpriteComps10128 = var_117_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_117_2 = 0.2

			if var_117_1 <= arg_114_1.time_ and arg_114_1.time_ < var_117_1 + var_117_2 and not isNil(var_117_0) then
				local var_117_3 = (arg_114_1.time_ - var_117_1) / var_117_2

				if arg_114_1.var_.actorSpriteComps10128 then
					for iter_117_0, iter_117_1 in pairs(arg_114_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_117_1 then
							if arg_114_1.isInRecall_ then
								local var_117_4 = Mathf.Lerp(iter_117_1.color.r, arg_114_1.hightColor2.r, var_117_3)
								local var_117_5 = Mathf.Lerp(iter_117_1.color.g, arg_114_1.hightColor2.g, var_117_3)
								local var_117_6 = Mathf.Lerp(iter_117_1.color.b, arg_114_1.hightColor2.b, var_117_3)

								iter_117_1.color = Color.New(var_117_4, var_117_5, var_117_6)
							else
								local var_117_7 = Mathf.Lerp(iter_117_1.color.r, 0.5, var_117_3)

								iter_117_1.color = Color.New(var_117_7, var_117_7, var_117_7)
							end
						end
					end
				end
			end

			if arg_114_1.time_ >= var_117_1 + var_117_2 and arg_114_1.time_ < var_117_1 + var_117_2 + arg_117_0 and not isNil(var_117_0) and arg_114_1.var_.actorSpriteComps10128 then
				for iter_117_2, iter_117_3 in pairs(arg_114_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_117_3 then
						if arg_114_1.isInRecall_ then
							iter_117_3.color = arg_114_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_117_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_114_1.var_.actorSpriteComps10128 = nil
			end

			local var_117_8 = arg_114_1.actors_["1095"].transform
			local var_117_9 = 0

			if var_117_9 < arg_114_1.time_ and arg_114_1.time_ <= var_117_9 + arg_117_0 then
				arg_114_1.var_.moveOldPos1095 = var_117_8.localPosition
				var_117_8.localScale = Vector3.New(1, 1, 1)

				arg_114_1:CheckSpriteTmpPos("1095", 4)

				local var_117_10 = var_117_8.childCount

				for iter_117_4 = 0, var_117_10 - 1 do
					local var_117_11 = var_117_8:GetChild(iter_117_4)

					if var_117_11.name == "split_6" or not string.find(var_117_11.name, "split") then
						var_117_11.gameObject:SetActive(true)
					else
						var_117_11.gameObject:SetActive(false)
					end
				end
			end

			local var_117_12 = 0.001

			if var_117_9 <= arg_114_1.time_ and arg_114_1.time_ < var_117_9 + var_117_12 then
				local var_117_13 = (arg_114_1.time_ - var_117_9) / var_117_12
				local var_117_14 = Vector3.New(390, -340, -285)

				var_117_8.localPosition = Vector3.Lerp(arg_114_1.var_.moveOldPos1095, var_117_14, var_117_13)
			end

			if arg_114_1.time_ >= var_117_9 + var_117_12 and arg_114_1.time_ < var_117_9 + var_117_12 + arg_117_0 then
				var_117_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_117_15 = arg_114_1.actors_["1095"]
			local var_117_16 = 0

			if var_117_16 < arg_114_1.time_ and arg_114_1.time_ <= var_117_16 + arg_117_0 then
				arg_114_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_117_17 = arg_114_1.actors_["1095"]
			local var_117_18 = 0

			if var_117_18 < arg_114_1.time_ and arg_114_1.time_ <= var_117_18 + arg_117_0 then
				local var_117_19 = var_117_17:GetComponentInChildren(typeof(CanvasGroup))

				if var_117_19 then
					arg_114_1.var_.alphaOldValue1095 = var_117_19.alpha
					arg_114_1.var_.characterEffect1095 = var_117_19
				end
			end

			local var_117_20 = 0.2

			if var_117_18 <= arg_114_1.time_ and arg_114_1.time_ < var_117_18 + var_117_20 then
				local var_117_21 = (arg_114_1.time_ - var_117_18) / var_117_20
				local var_117_22 = Mathf.Lerp(arg_114_1.var_.alphaOldValue1095, 0.6, var_117_21)

				if arg_114_1.var_.characterEffect1095 then
					arg_114_1.var_.characterEffect1095.alpha = var_117_22
				end
			end

			if arg_114_1.time_ >= var_117_18 + var_117_20 and arg_114_1.time_ < var_117_18 + var_117_20 + arg_117_0 and arg_114_1.var_.characterEffect1095 then
				arg_114_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_117_23 = 0
			local var_117_24 = 0.225

			if var_117_23 < arg_114_1.time_ and arg_114_1.time_ <= var_117_23 + arg_117_0 then
				arg_114_1.talkMaxDuration = 0
				arg_114_1.dialogCg_.alpha = 1

				arg_114_1.dialog_:SetActive(true)
				SetActive(arg_114_1.leftNameGo_, true)

				local var_117_25 = arg_114_1:FormatText(StoryNameCfg[471].name)

				arg_114_1.leftNameTxt_.text = var_117_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_114_1.leftNameTxt_.transform)

				arg_114_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_114_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_114_1:RecordName(arg_114_1.leftNameTxt_.text)
				SetActive(arg_114_1.iconTrs_.gameObject, false)
				arg_114_1.callingController_:SetSelectedState("normal")

				local var_117_26 = arg_114_1:GetWordFromCfg(417161028)
				local var_117_27 = arg_114_1:FormatText(var_117_26.content)

				arg_114_1.text_.text = var_117_27

				LuaForUtil.ClearLinePrefixSymbol(arg_114_1.text_)

				local var_117_28 = 9
				local var_117_29 = utf8.len(var_117_27)
				local var_117_30 = var_117_28 <= 0 and var_117_24 or var_117_24 * (var_117_29 / var_117_28)

				if var_117_30 > 0 and var_117_24 < var_117_30 then
					arg_114_1.talkMaxDuration = var_117_30

					if var_117_30 + var_117_23 > arg_114_1.duration_ then
						arg_114_1.duration_ = var_117_30 + var_117_23
					end
				end

				arg_114_1.text_.text = var_117_27
				arg_114_1.typewritter.percent = 0

				arg_114_1.typewritter:SetDirty()
				arg_114_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161028", "story_v_out_417161.awb") ~= 0 then
					local var_117_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161028", "story_v_out_417161.awb") / 1000

					if var_117_31 + var_117_23 > arg_114_1.duration_ then
						arg_114_1.duration_ = var_117_31 + var_117_23
					end

					if var_117_26.prefab_name ~= "" and arg_114_1.actors_[var_117_26.prefab_name] ~= nil then
						local var_117_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_114_1.actors_[var_117_26.prefab_name].transform, "story_v_out_417161", "417161028", "story_v_out_417161.awb")

						arg_114_1:RecordAudio("417161028", var_117_32)
						arg_114_1:RecordAudio("417161028", var_117_32)
					else
						arg_114_1:AudioAction("play", "voice", "story_v_out_417161", "417161028", "story_v_out_417161.awb")
					end

					arg_114_1:RecordHistoryTalkVoice("story_v_out_417161", "417161028", "story_v_out_417161.awb")
				end

				arg_114_1:RecordContent(arg_114_1.text_.text)
			end

			local var_117_33 = math.max(var_117_24, arg_114_1.talkMaxDuration)

			if var_117_23 <= arg_114_1.time_ and arg_114_1.time_ < var_117_23 + var_117_33 then
				arg_114_1.typewritter.percent = (arg_114_1.time_ - var_117_23) / var_117_33

				arg_114_1.typewritter:SetDirty()
			end

			if arg_114_1.time_ >= var_117_23 + var_117_33 and arg_114_1.time_ < var_117_23 + var_117_33 + arg_117_0 then
				arg_114_1.typewritter.percent = 1

				arg_114_1.typewritter:SetDirty()
				arg_114_1:ShowNextGo(true)
			end
		end
	end,
	Play417161029 = function(arg_118_0, arg_118_1)
		arg_118_1.time_ = 0
		arg_118_1.frameCnt_ = 0
		arg_118_1.state_ = "playing"
		arg_118_1.curTalkId_ = 417161029
		arg_118_1.duration_ = 6.2

		local var_118_0 = {
			zh = 3.933,
			ja = 6.2
		}
		local var_118_1 = manager.audio:GetLocalizationFlag()

		if var_118_0[var_118_1] ~= nil then
			arg_118_1.duration_ = var_118_0[var_118_1]
		end

		SetActive(arg_118_1.tipsGo_, false)

		function arg_118_1.onSingleLineFinish_()
			arg_118_1.onSingleLineUpdate_ = nil
			arg_118_1.onSingleLineFinish_ = nil
			arg_118_1.state_ = "waiting"
		end

		function arg_118_1.playNext_(arg_120_0)
			if arg_120_0 == 1 then
				arg_118_0:Play417161030(arg_118_1)
			end
		end

		function arg_118_1.onSingleLineUpdate_(arg_121_0)
			local var_121_0 = arg_118_1.actors_["10128"]
			local var_121_1 = 0

			if var_121_1 < arg_118_1.time_ and arg_118_1.time_ <= var_121_1 + arg_121_0 and not isNil(var_121_0) and arg_118_1.var_.actorSpriteComps10128 == nil then
				arg_118_1.var_.actorSpriteComps10128 = var_121_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_121_2 = 0.2

			if var_121_1 <= arg_118_1.time_ and arg_118_1.time_ < var_121_1 + var_121_2 and not isNil(var_121_0) then
				local var_121_3 = (arg_118_1.time_ - var_121_1) / var_121_2

				if arg_118_1.var_.actorSpriteComps10128 then
					for iter_121_0, iter_121_1 in pairs(arg_118_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_121_1 then
							if arg_118_1.isInRecall_ then
								local var_121_4 = Mathf.Lerp(iter_121_1.color.r, arg_118_1.hightColor1.r, var_121_3)
								local var_121_5 = Mathf.Lerp(iter_121_1.color.g, arg_118_1.hightColor1.g, var_121_3)
								local var_121_6 = Mathf.Lerp(iter_121_1.color.b, arg_118_1.hightColor1.b, var_121_3)

								iter_121_1.color = Color.New(var_121_4, var_121_5, var_121_6)
							else
								local var_121_7 = Mathf.Lerp(iter_121_1.color.r, 1, var_121_3)

								iter_121_1.color = Color.New(var_121_7, var_121_7, var_121_7)
							end
						end
					end
				end
			end

			if arg_118_1.time_ >= var_121_1 + var_121_2 and arg_118_1.time_ < var_121_1 + var_121_2 + arg_121_0 and not isNil(var_121_0) and arg_118_1.var_.actorSpriteComps10128 then
				for iter_121_2, iter_121_3 in pairs(arg_118_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_121_3 then
						if arg_118_1.isInRecall_ then
							iter_121_3.color = arg_118_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_121_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_118_1.var_.actorSpriteComps10128 = nil
			end

			local var_121_8 = arg_118_1.actors_["1095"]
			local var_121_9 = 0

			if var_121_9 < arg_118_1.time_ and arg_118_1.time_ <= var_121_9 + arg_121_0 and not isNil(var_121_8) and arg_118_1.var_.actorSpriteComps1095 == nil then
				arg_118_1.var_.actorSpriteComps1095 = var_121_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_121_10 = 0.2

			if var_121_9 <= arg_118_1.time_ and arg_118_1.time_ < var_121_9 + var_121_10 and not isNil(var_121_8) then
				local var_121_11 = (arg_118_1.time_ - var_121_9) / var_121_10

				if arg_118_1.var_.actorSpriteComps1095 then
					for iter_121_4, iter_121_5 in pairs(arg_118_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_121_5 then
							if arg_118_1.isInRecall_ then
								local var_121_12 = Mathf.Lerp(iter_121_5.color.r, arg_118_1.hightColor2.r, var_121_11)
								local var_121_13 = Mathf.Lerp(iter_121_5.color.g, arg_118_1.hightColor2.g, var_121_11)
								local var_121_14 = Mathf.Lerp(iter_121_5.color.b, arg_118_1.hightColor2.b, var_121_11)

								iter_121_5.color = Color.New(var_121_12, var_121_13, var_121_14)
							else
								local var_121_15 = Mathf.Lerp(iter_121_5.color.r, 0.5, var_121_11)

								iter_121_5.color = Color.New(var_121_15, var_121_15, var_121_15)
							end
						end
					end
				end
			end

			if arg_118_1.time_ >= var_121_9 + var_121_10 and arg_118_1.time_ < var_121_9 + var_121_10 + arg_121_0 and not isNil(var_121_8) and arg_118_1.var_.actorSpriteComps1095 then
				for iter_121_6, iter_121_7 in pairs(arg_118_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_121_7 then
						if arg_118_1.isInRecall_ then
							iter_121_7.color = arg_118_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_121_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_118_1.var_.actorSpriteComps1095 = nil
			end

			local var_121_16 = 0
			local var_121_17 = 0.55

			if var_121_16 < arg_118_1.time_ and arg_118_1.time_ <= var_121_16 + arg_121_0 then
				arg_118_1.talkMaxDuration = 0
				arg_118_1.dialogCg_.alpha = 1

				arg_118_1.dialog_:SetActive(true)
				SetActive(arg_118_1.leftNameGo_, true)

				local var_121_18 = arg_118_1:FormatText(StoryNameCfg[595].name)

				arg_118_1.leftNameTxt_.text = var_121_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_118_1.leftNameTxt_.transform)

				arg_118_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_118_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_118_1:RecordName(arg_118_1.leftNameTxt_.text)
				SetActive(arg_118_1.iconTrs_.gameObject, false)
				arg_118_1.callingController_:SetSelectedState("normal")

				local var_121_19 = arg_118_1:GetWordFromCfg(417161029)
				local var_121_20 = arg_118_1:FormatText(var_121_19.content)

				arg_118_1.text_.text = var_121_20

				LuaForUtil.ClearLinePrefixSymbol(arg_118_1.text_)

				local var_121_21 = 22
				local var_121_22 = utf8.len(var_121_20)
				local var_121_23 = var_121_21 <= 0 and var_121_17 or var_121_17 * (var_121_22 / var_121_21)

				if var_121_23 > 0 and var_121_17 < var_121_23 then
					arg_118_1.talkMaxDuration = var_121_23

					if var_121_23 + var_121_16 > arg_118_1.duration_ then
						arg_118_1.duration_ = var_121_23 + var_121_16
					end
				end

				arg_118_1.text_.text = var_121_20
				arg_118_1.typewritter.percent = 0

				arg_118_1.typewritter:SetDirty()
				arg_118_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161029", "story_v_out_417161.awb") ~= 0 then
					local var_121_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161029", "story_v_out_417161.awb") / 1000

					if var_121_24 + var_121_16 > arg_118_1.duration_ then
						arg_118_1.duration_ = var_121_24 + var_121_16
					end

					if var_121_19.prefab_name ~= "" and arg_118_1.actors_[var_121_19.prefab_name] ~= nil then
						local var_121_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_118_1.actors_[var_121_19.prefab_name].transform, "story_v_out_417161", "417161029", "story_v_out_417161.awb")

						arg_118_1:RecordAudio("417161029", var_121_25)
						arg_118_1:RecordAudio("417161029", var_121_25)
					else
						arg_118_1:AudioAction("play", "voice", "story_v_out_417161", "417161029", "story_v_out_417161.awb")
					end

					arg_118_1:RecordHistoryTalkVoice("story_v_out_417161", "417161029", "story_v_out_417161.awb")
				end

				arg_118_1:RecordContent(arg_118_1.text_.text)
			end

			local var_121_26 = math.max(var_121_17, arg_118_1.talkMaxDuration)

			if var_121_16 <= arg_118_1.time_ and arg_118_1.time_ < var_121_16 + var_121_26 then
				arg_118_1.typewritter.percent = (arg_118_1.time_ - var_121_16) / var_121_26

				arg_118_1.typewritter:SetDirty()
			end

			if arg_118_1.time_ >= var_121_16 + var_121_26 and arg_118_1.time_ < var_121_16 + var_121_26 + arg_121_0 then
				arg_118_1.typewritter.percent = 1

				arg_118_1.typewritter:SetDirty()
				arg_118_1:ShowNextGo(true)
			end
		end
	end,
	Play417161030 = function(arg_122_0, arg_122_1)
		arg_122_1.time_ = 0
		arg_122_1.frameCnt_ = 0
		arg_122_1.state_ = "playing"
		arg_122_1.curTalkId_ = 417161030
		arg_122_1.duration_ = 10.2

		local var_122_0 = {
			zh = 4.566,
			ja = 10.2
		}
		local var_122_1 = manager.audio:GetLocalizationFlag()

		if var_122_0[var_122_1] ~= nil then
			arg_122_1.duration_ = var_122_0[var_122_1]
		end

		SetActive(arg_122_1.tipsGo_, false)

		function arg_122_1.onSingleLineFinish_()
			arg_122_1.onSingleLineUpdate_ = nil
			arg_122_1.onSingleLineFinish_ = nil
			arg_122_1.state_ = "waiting"
		end

		function arg_122_1.playNext_(arg_124_0)
			if arg_124_0 == 1 then
				arg_122_0:Play417161031(arg_122_1)
			end
		end

		function arg_122_1.onSingleLineUpdate_(arg_125_0)
			local var_125_0 = arg_122_1.actors_["10128"]
			local var_125_1 = 0

			if var_125_1 < arg_122_1.time_ and arg_122_1.time_ <= var_125_1 + arg_125_0 and not isNil(var_125_0) and arg_122_1.var_.actorSpriteComps10128 == nil then
				arg_122_1.var_.actorSpriteComps10128 = var_125_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_125_2 = 0.2

			if var_125_1 <= arg_122_1.time_ and arg_122_1.time_ < var_125_1 + var_125_2 and not isNil(var_125_0) then
				local var_125_3 = (arg_122_1.time_ - var_125_1) / var_125_2

				if arg_122_1.var_.actorSpriteComps10128 then
					for iter_125_0, iter_125_1 in pairs(arg_122_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_125_1 then
							if arg_122_1.isInRecall_ then
								local var_125_4 = Mathf.Lerp(iter_125_1.color.r, arg_122_1.hightColor2.r, var_125_3)
								local var_125_5 = Mathf.Lerp(iter_125_1.color.g, arg_122_1.hightColor2.g, var_125_3)
								local var_125_6 = Mathf.Lerp(iter_125_1.color.b, arg_122_1.hightColor2.b, var_125_3)

								iter_125_1.color = Color.New(var_125_4, var_125_5, var_125_6)
							else
								local var_125_7 = Mathf.Lerp(iter_125_1.color.r, 0.5, var_125_3)

								iter_125_1.color = Color.New(var_125_7, var_125_7, var_125_7)
							end
						end
					end
				end
			end

			if arg_122_1.time_ >= var_125_1 + var_125_2 and arg_122_1.time_ < var_125_1 + var_125_2 + arg_125_0 and not isNil(var_125_0) and arg_122_1.var_.actorSpriteComps10128 then
				for iter_125_2, iter_125_3 in pairs(arg_122_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_125_3 then
						if arg_122_1.isInRecall_ then
							iter_125_3.color = arg_122_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_125_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_122_1.var_.actorSpriteComps10128 = nil
			end

			local var_125_8 = arg_122_1.actors_["1095"]
			local var_125_9 = 0

			if var_125_9 < arg_122_1.time_ and arg_122_1.time_ <= var_125_9 + arg_125_0 then
				local var_125_10 = var_125_8:GetComponentInChildren(typeof(CanvasGroup))

				if var_125_10 then
					arg_122_1.var_.alphaOldValue1095 = var_125_10.alpha
					arg_122_1.var_.characterEffect1095 = var_125_10
				end
			end

			local var_125_11 = 0.2

			if var_125_9 <= arg_122_1.time_ and arg_122_1.time_ < var_125_9 + var_125_11 then
				local var_125_12 = (arg_122_1.time_ - var_125_9) / var_125_11
				local var_125_13 = Mathf.Lerp(arg_122_1.var_.alphaOldValue1095, 0.6, var_125_12)

				if arg_122_1.var_.characterEffect1095 then
					arg_122_1.var_.characterEffect1095.alpha = var_125_13
				end
			end

			if arg_122_1.time_ >= var_125_9 + var_125_11 and arg_122_1.time_ < var_125_9 + var_125_11 + arg_125_0 and arg_122_1.var_.characterEffect1095 then
				arg_122_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_125_14 = arg_122_1.actors_["1095"]
			local var_125_15 = 0

			if var_125_15 < arg_122_1.time_ and arg_122_1.time_ <= var_125_15 + arg_125_0 then
				arg_122_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_125_16 = 0
			local var_125_17 = 0.6

			if var_125_16 < arg_122_1.time_ and arg_122_1.time_ <= var_125_16 + arg_125_0 then
				arg_122_1.talkMaxDuration = 0
				arg_122_1.dialogCg_.alpha = 1

				arg_122_1.dialog_:SetActive(true)
				SetActive(arg_122_1.leftNameGo_, true)

				local var_125_18 = arg_122_1:FormatText(StoryNameCfg[471].name)

				arg_122_1.leftNameTxt_.text = var_125_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_122_1.leftNameTxt_.transform)

				arg_122_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_122_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_122_1:RecordName(arg_122_1.leftNameTxt_.text)
				SetActive(arg_122_1.iconTrs_.gameObject, false)
				arg_122_1.callingController_:SetSelectedState("normal")

				local var_125_19 = arg_122_1:GetWordFromCfg(417161030)
				local var_125_20 = arg_122_1:FormatText(var_125_19.content)

				arg_122_1.text_.text = var_125_20

				LuaForUtil.ClearLinePrefixSymbol(arg_122_1.text_)

				local var_125_21 = 24
				local var_125_22 = utf8.len(var_125_20)
				local var_125_23 = var_125_21 <= 0 and var_125_17 or var_125_17 * (var_125_22 / var_125_21)

				if var_125_23 > 0 and var_125_17 < var_125_23 then
					arg_122_1.talkMaxDuration = var_125_23

					if var_125_23 + var_125_16 > arg_122_1.duration_ then
						arg_122_1.duration_ = var_125_23 + var_125_16
					end
				end

				arg_122_1.text_.text = var_125_20
				arg_122_1.typewritter.percent = 0

				arg_122_1.typewritter:SetDirty()
				arg_122_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161030", "story_v_out_417161.awb") ~= 0 then
					local var_125_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161030", "story_v_out_417161.awb") / 1000

					if var_125_24 + var_125_16 > arg_122_1.duration_ then
						arg_122_1.duration_ = var_125_24 + var_125_16
					end

					if var_125_19.prefab_name ~= "" and arg_122_1.actors_[var_125_19.prefab_name] ~= nil then
						local var_125_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_122_1.actors_[var_125_19.prefab_name].transform, "story_v_out_417161", "417161030", "story_v_out_417161.awb")

						arg_122_1:RecordAudio("417161030", var_125_25)
						arg_122_1:RecordAudio("417161030", var_125_25)
					else
						arg_122_1:AudioAction("play", "voice", "story_v_out_417161", "417161030", "story_v_out_417161.awb")
					end

					arg_122_1:RecordHistoryTalkVoice("story_v_out_417161", "417161030", "story_v_out_417161.awb")
				end

				arg_122_1:RecordContent(arg_122_1.text_.text)
			end

			local var_125_26 = math.max(var_125_17, arg_122_1.talkMaxDuration)

			if var_125_16 <= arg_122_1.time_ and arg_122_1.time_ < var_125_16 + var_125_26 then
				arg_122_1.typewritter.percent = (arg_122_1.time_ - var_125_16) / var_125_26

				arg_122_1.typewritter:SetDirty()
			end

			if arg_122_1.time_ >= var_125_16 + var_125_26 and arg_122_1.time_ < var_125_16 + var_125_26 + arg_125_0 then
				arg_122_1.typewritter.percent = 1

				arg_122_1.typewritter:SetDirty()
				arg_122_1:ShowNextGo(true)
			end
		end
	end,
	Play417161031 = function(arg_126_0, arg_126_1)
		arg_126_1.time_ = 0
		arg_126_1.frameCnt_ = 0
		arg_126_1.state_ = "playing"
		arg_126_1.curTalkId_ = 417161031
		arg_126_1.duration_ = 6.8

		local var_126_0 = {
			zh = 4.666,
			ja = 6.8
		}
		local var_126_1 = manager.audio:GetLocalizationFlag()

		if var_126_0[var_126_1] ~= nil then
			arg_126_1.duration_ = var_126_0[var_126_1]
		end

		SetActive(arg_126_1.tipsGo_, false)

		function arg_126_1.onSingleLineFinish_()
			arg_126_1.onSingleLineUpdate_ = nil
			arg_126_1.onSingleLineFinish_ = nil
			arg_126_1.state_ = "waiting"
		end

		function arg_126_1.playNext_(arg_128_0)
			if arg_128_0 == 1 then
				arg_126_0:Play417161032(arg_126_1)
			end
		end

		function arg_126_1.onSingleLineUpdate_(arg_129_0)
			local var_129_0 = arg_126_1.actors_["10128"]
			local var_129_1 = 0

			if var_129_1 < arg_126_1.time_ and arg_126_1.time_ <= var_129_1 + arg_129_0 and not isNil(var_129_0) and arg_126_1.var_.actorSpriteComps10128 == nil then
				arg_126_1.var_.actorSpriteComps10128 = var_129_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_129_2 = 0.2

			if var_129_1 <= arg_126_1.time_ and arg_126_1.time_ < var_129_1 + var_129_2 and not isNil(var_129_0) then
				local var_129_3 = (arg_126_1.time_ - var_129_1) / var_129_2

				if arg_126_1.var_.actorSpriteComps10128 then
					for iter_129_0, iter_129_1 in pairs(arg_126_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_129_1 then
							if arg_126_1.isInRecall_ then
								local var_129_4 = Mathf.Lerp(iter_129_1.color.r, arg_126_1.hightColor1.r, var_129_3)
								local var_129_5 = Mathf.Lerp(iter_129_1.color.g, arg_126_1.hightColor1.g, var_129_3)
								local var_129_6 = Mathf.Lerp(iter_129_1.color.b, arg_126_1.hightColor1.b, var_129_3)

								iter_129_1.color = Color.New(var_129_4, var_129_5, var_129_6)
							else
								local var_129_7 = Mathf.Lerp(iter_129_1.color.r, 1, var_129_3)

								iter_129_1.color = Color.New(var_129_7, var_129_7, var_129_7)
							end
						end
					end
				end
			end

			if arg_126_1.time_ >= var_129_1 + var_129_2 and arg_126_1.time_ < var_129_1 + var_129_2 + arg_129_0 and not isNil(var_129_0) and arg_126_1.var_.actorSpriteComps10128 then
				for iter_129_2, iter_129_3 in pairs(arg_126_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_129_3 then
						if arg_126_1.isInRecall_ then
							iter_129_3.color = arg_126_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_129_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_126_1.var_.actorSpriteComps10128 = nil
			end

			local var_129_8 = arg_126_1.actors_["1095"]
			local var_129_9 = 0

			if var_129_9 < arg_126_1.time_ and arg_126_1.time_ <= var_129_9 + arg_129_0 and not isNil(var_129_8) and arg_126_1.var_.actorSpriteComps1095 == nil then
				arg_126_1.var_.actorSpriteComps1095 = var_129_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_129_10 = 0.2

			if var_129_9 <= arg_126_1.time_ and arg_126_1.time_ < var_129_9 + var_129_10 and not isNil(var_129_8) then
				local var_129_11 = (arg_126_1.time_ - var_129_9) / var_129_10

				if arg_126_1.var_.actorSpriteComps1095 then
					for iter_129_4, iter_129_5 in pairs(arg_126_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_129_5 then
							if arg_126_1.isInRecall_ then
								local var_129_12 = Mathf.Lerp(iter_129_5.color.r, arg_126_1.hightColor2.r, var_129_11)
								local var_129_13 = Mathf.Lerp(iter_129_5.color.g, arg_126_1.hightColor2.g, var_129_11)
								local var_129_14 = Mathf.Lerp(iter_129_5.color.b, arg_126_1.hightColor2.b, var_129_11)

								iter_129_5.color = Color.New(var_129_12, var_129_13, var_129_14)
							else
								local var_129_15 = Mathf.Lerp(iter_129_5.color.r, 0.5, var_129_11)

								iter_129_5.color = Color.New(var_129_15, var_129_15, var_129_15)
							end
						end
					end
				end
			end

			if arg_126_1.time_ >= var_129_9 + var_129_10 and arg_126_1.time_ < var_129_9 + var_129_10 + arg_129_0 and not isNil(var_129_8) and arg_126_1.var_.actorSpriteComps1095 then
				for iter_129_6, iter_129_7 in pairs(arg_126_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_129_7 then
						if arg_126_1.isInRecall_ then
							iter_129_7.color = arg_126_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_129_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_126_1.var_.actorSpriteComps1095 = nil
			end

			local var_129_16 = 0
			local var_129_17 = 0.475

			if var_129_16 < arg_126_1.time_ and arg_126_1.time_ <= var_129_16 + arg_129_0 then
				arg_126_1.talkMaxDuration = 0
				arg_126_1.dialogCg_.alpha = 1

				arg_126_1.dialog_:SetActive(true)
				SetActive(arg_126_1.leftNameGo_, true)

				local var_129_18 = arg_126_1:FormatText(StoryNameCfg[595].name)

				arg_126_1.leftNameTxt_.text = var_129_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_126_1.leftNameTxt_.transform)

				arg_126_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_126_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_126_1:RecordName(arg_126_1.leftNameTxt_.text)
				SetActive(arg_126_1.iconTrs_.gameObject, false)
				arg_126_1.callingController_:SetSelectedState("normal")

				local var_129_19 = arg_126_1:GetWordFromCfg(417161031)
				local var_129_20 = arg_126_1:FormatText(var_129_19.content)

				arg_126_1.text_.text = var_129_20

				LuaForUtil.ClearLinePrefixSymbol(arg_126_1.text_)

				local var_129_21 = 19
				local var_129_22 = utf8.len(var_129_20)
				local var_129_23 = var_129_21 <= 0 and var_129_17 or var_129_17 * (var_129_22 / var_129_21)

				if var_129_23 > 0 and var_129_17 < var_129_23 then
					arg_126_1.talkMaxDuration = var_129_23

					if var_129_23 + var_129_16 > arg_126_1.duration_ then
						arg_126_1.duration_ = var_129_23 + var_129_16
					end
				end

				arg_126_1.text_.text = var_129_20
				arg_126_1.typewritter.percent = 0

				arg_126_1.typewritter:SetDirty()
				arg_126_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161031", "story_v_out_417161.awb") ~= 0 then
					local var_129_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161031", "story_v_out_417161.awb") / 1000

					if var_129_24 + var_129_16 > arg_126_1.duration_ then
						arg_126_1.duration_ = var_129_24 + var_129_16
					end

					if var_129_19.prefab_name ~= "" and arg_126_1.actors_[var_129_19.prefab_name] ~= nil then
						local var_129_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_126_1.actors_[var_129_19.prefab_name].transform, "story_v_out_417161", "417161031", "story_v_out_417161.awb")

						arg_126_1:RecordAudio("417161031", var_129_25)
						arg_126_1:RecordAudio("417161031", var_129_25)
					else
						arg_126_1:AudioAction("play", "voice", "story_v_out_417161", "417161031", "story_v_out_417161.awb")
					end

					arg_126_1:RecordHistoryTalkVoice("story_v_out_417161", "417161031", "story_v_out_417161.awb")
				end

				arg_126_1:RecordContent(arg_126_1.text_.text)
			end

			local var_129_26 = math.max(var_129_17, arg_126_1.talkMaxDuration)

			if var_129_16 <= arg_126_1.time_ and arg_126_1.time_ < var_129_16 + var_129_26 then
				arg_126_1.typewritter.percent = (arg_126_1.time_ - var_129_16) / var_129_26

				arg_126_1.typewritter:SetDirty()
			end

			if arg_126_1.time_ >= var_129_16 + var_129_26 and arg_126_1.time_ < var_129_16 + var_129_26 + arg_129_0 then
				arg_126_1.typewritter.percent = 1

				arg_126_1.typewritter:SetDirty()
				arg_126_1:ShowNextGo(true)
			end
		end
	end,
	Play417161032 = function(arg_130_0, arg_130_1)
		arg_130_1.time_ = 0
		arg_130_1.frameCnt_ = 0
		arg_130_1.state_ = "playing"
		arg_130_1.curTalkId_ = 417161032
		arg_130_1.duration_ = 13.67

		local var_130_0 = {
			zh = 8.866,
			ja = 13.666
		}
		local var_130_1 = manager.audio:GetLocalizationFlag()

		if var_130_0[var_130_1] ~= nil then
			arg_130_1.duration_ = var_130_0[var_130_1]
		end

		SetActive(arg_130_1.tipsGo_, false)

		function arg_130_1.onSingleLineFinish_()
			arg_130_1.onSingleLineUpdate_ = nil
			arg_130_1.onSingleLineFinish_ = nil
			arg_130_1.state_ = "waiting"
		end

		function arg_130_1.playNext_(arg_132_0)
			if arg_132_0 == 1 then
				arg_130_0:Play417161033(arg_130_1)
			end
		end

		function arg_130_1.onSingleLineUpdate_(arg_133_0)
			local var_133_0 = 0
			local var_133_1 = 1.025

			if var_133_0 < arg_130_1.time_ and arg_130_1.time_ <= var_133_0 + arg_133_0 then
				arg_130_1.talkMaxDuration = 0
				arg_130_1.dialogCg_.alpha = 1

				arg_130_1.dialog_:SetActive(true)
				SetActive(arg_130_1.leftNameGo_, true)

				local var_133_2 = arg_130_1:FormatText(StoryNameCfg[595].name)

				arg_130_1.leftNameTxt_.text = var_133_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_130_1.leftNameTxt_.transform)

				arg_130_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_130_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_130_1:RecordName(arg_130_1.leftNameTxt_.text)
				SetActive(arg_130_1.iconTrs_.gameObject, false)
				arg_130_1.callingController_:SetSelectedState("normal")

				local var_133_3 = arg_130_1:GetWordFromCfg(417161032)
				local var_133_4 = arg_130_1:FormatText(var_133_3.content)

				arg_130_1.text_.text = var_133_4

				LuaForUtil.ClearLinePrefixSymbol(arg_130_1.text_)

				local var_133_5 = 41
				local var_133_6 = utf8.len(var_133_4)
				local var_133_7 = var_133_5 <= 0 and var_133_1 or var_133_1 * (var_133_6 / var_133_5)

				if var_133_7 > 0 and var_133_1 < var_133_7 then
					arg_130_1.talkMaxDuration = var_133_7

					if var_133_7 + var_133_0 > arg_130_1.duration_ then
						arg_130_1.duration_ = var_133_7 + var_133_0
					end
				end

				arg_130_1.text_.text = var_133_4
				arg_130_1.typewritter.percent = 0

				arg_130_1.typewritter:SetDirty()
				arg_130_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161032", "story_v_out_417161.awb") ~= 0 then
					local var_133_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161032", "story_v_out_417161.awb") / 1000

					if var_133_8 + var_133_0 > arg_130_1.duration_ then
						arg_130_1.duration_ = var_133_8 + var_133_0
					end

					if var_133_3.prefab_name ~= "" and arg_130_1.actors_[var_133_3.prefab_name] ~= nil then
						local var_133_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_130_1.actors_[var_133_3.prefab_name].transform, "story_v_out_417161", "417161032", "story_v_out_417161.awb")

						arg_130_1:RecordAudio("417161032", var_133_9)
						arg_130_1:RecordAudio("417161032", var_133_9)
					else
						arg_130_1:AudioAction("play", "voice", "story_v_out_417161", "417161032", "story_v_out_417161.awb")
					end

					arg_130_1:RecordHistoryTalkVoice("story_v_out_417161", "417161032", "story_v_out_417161.awb")
				end

				arg_130_1:RecordContent(arg_130_1.text_.text)
			end

			local var_133_10 = math.max(var_133_1, arg_130_1.talkMaxDuration)

			if var_133_0 <= arg_130_1.time_ and arg_130_1.time_ < var_133_0 + var_133_10 then
				arg_130_1.typewritter.percent = (arg_130_1.time_ - var_133_0) / var_133_10

				arg_130_1.typewritter:SetDirty()
			end

			if arg_130_1.time_ >= var_133_0 + var_133_10 and arg_130_1.time_ < var_133_0 + var_133_10 + arg_133_0 then
				arg_130_1.typewritter.percent = 1

				arg_130_1.typewritter:SetDirty()
				arg_130_1:ShowNextGo(true)
			end
		end
	end,
	Play417161033 = function(arg_134_0, arg_134_1)
		arg_134_1.time_ = 0
		arg_134_1.frameCnt_ = 0
		arg_134_1.state_ = "playing"
		arg_134_1.curTalkId_ = 417161033
		arg_134_1.duration_ = 4.67

		local var_134_0 = {
			zh = 2.5,
			ja = 4.666
		}
		local var_134_1 = manager.audio:GetLocalizationFlag()

		if var_134_0[var_134_1] ~= nil then
			arg_134_1.duration_ = var_134_0[var_134_1]
		end

		SetActive(arg_134_1.tipsGo_, false)

		function arg_134_1.onSingleLineFinish_()
			arg_134_1.onSingleLineUpdate_ = nil
			arg_134_1.onSingleLineFinish_ = nil
			arg_134_1.state_ = "waiting"
		end

		function arg_134_1.playNext_(arg_136_0)
			if arg_136_0 == 1 then
				arg_134_0:Play417161034(arg_134_1)
			end
		end

		function arg_134_1.onSingleLineUpdate_(arg_137_0)
			local var_137_0 = arg_134_1.actors_["10128"]
			local var_137_1 = 0

			if var_137_1 < arg_134_1.time_ and arg_134_1.time_ <= var_137_1 + arg_137_0 and not isNil(var_137_0) and arg_134_1.var_.actorSpriteComps10128 == nil then
				arg_134_1.var_.actorSpriteComps10128 = var_137_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_137_2 = 0.2

			if var_137_1 <= arg_134_1.time_ and arg_134_1.time_ < var_137_1 + var_137_2 and not isNil(var_137_0) then
				local var_137_3 = (arg_134_1.time_ - var_137_1) / var_137_2

				if arg_134_1.var_.actorSpriteComps10128 then
					for iter_137_0, iter_137_1 in pairs(arg_134_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_137_1 then
							if arg_134_1.isInRecall_ then
								local var_137_4 = Mathf.Lerp(iter_137_1.color.r, arg_134_1.hightColor2.r, var_137_3)
								local var_137_5 = Mathf.Lerp(iter_137_1.color.g, arg_134_1.hightColor2.g, var_137_3)
								local var_137_6 = Mathf.Lerp(iter_137_1.color.b, arg_134_1.hightColor2.b, var_137_3)

								iter_137_1.color = Color.New(var_137_4, var_137_5, var_137_6)
							else
								local var_137_7 = Mathf.Lerp(iter_137_1.color.r, 0.5, var_137_3)

								iter_137_1.color = Color.New(var_137_7, var_137_7, var_137_7)
							end
						end
					end
				end
			end

			if arg_134_1.time_ >= var_137_1 + var_137_2 and arg_134_1.time_ < var_137_1 + var_137_2 + arg_137_0 and not isNil(var_137_0) and arg_134_1.var_.actorSpriteComps10128 then
				for iter_137_2, iter_137_3 in pairs(arg_134_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_137_3 then
						if arg_134_1.isInRecall_ then
							iter_137_3.color = arg_134_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_137_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_134_1.var_.actorSpriteComps10128 = nil
			end

			local var_137_8 = arg_134_1.actors_["1095"].transform
			local var_137_9 = 0

			if var_137_9 < arg_134_1.time_ and arg_134_1.time_ <= var_137_9 + arg_137_0 then
				arg_134_1.var_.moveOldPos1095 = var_137_8.localPosition
				var_137_8.localScale = Vector3.New(1, 1, 1)

				arg_134_1:CheckSpriteTmpPos("1095", 4)

				local var_137_10 = var_137_8.childCount

				for iter_137_4 = 0, var_137_10 - 1 do
					local var_137_11 = var_137_8:GetChild(iter_137_4)

					if var_137_11.name == "" or not string.find(var_137_11.name, "split") then
						var_137_11.gameObject:SetActive(true)
					else
						var_137_11.gameObject:SetActive(false)
					end
				end
			end

			local var_137_12 = 0.001

			if var_137_9 <= arg_134_1.time_ and arg_134_1.time_ < var_137_9 + var_137_12 then
				local var_137_13 = (arg_134_1.time_ - var_137_9) / var_137_12
				local var_137_14 = Vector3.New(390, -340, -285)

				var_137_8.localPosition = Vector3.Lerp(arg_134_1.var_.moveOldPos1095, var_137_14, var_137_13)
			end

			if arg_134_1.time_ >= var_137_9 + var_137_12 and arg_134_1.time_ < var_137_9 + var_137_12 + arg_137_0 then
				var_137_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_137_15 = arg_134_1.actors_["1095"]
			local var_137_16 = 0

			if var_137_16 < arg_134_1.time_ and arg_134_1.time_ <= var_137_16 + arg_137_0 then
				arg_134_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_137_17 = arg_134_1.actors_["1095"]
			local var_137_18 = 0

			if var_137_18 < arg_134_1.time_ and arg_134_1.time_ <= var_137_18 + arg_137_0 then
				local var_137_19 = var_137_17:GetComponentInChildren(typeof(CanvasGroup))

				if var_137_19 then
					arg_134_1.var_.alphaOldValue1095 = var_137_19.alpha
					arg_134_1.var_.characterEffect1095 = var_137_19
				end
			end

			local var_137_20 = 0.2

			if var_137_18 <= arg_134_1.time_ and arg_134_1.time_ < var_137_18 + var_137_20 then
				local var_137_21 = (arg_134_1.time_ - var_137_18) / var_137_20
				local var_137_22 = Mathf.Lerp(arg_134_1.var_.alphaOldValue1095, 0.6, var_137_21)

				if arg_134_1.var_.characterEffect1095 then
					arg_134_1.var_.characterEffect1095.alpha = var_137_22
				end
			end

			if arg_134_1.time_ >= var_137_18 + var_137_20 and arg_134_1.time_ < var_137_18 + var_137_20 + arg_137_0 and arg_134_1.var_.characterEffect1095 then
				arg_134_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_137_23 = 0
			local var_137_24 = 0.25

			if var_137_23 < arg_134_1.time_ and arg_134_1.time_ <= var_137_23 + arg_137_0 then
				arg_134_1.talkMaxDuration = 0
				arg_134_1.dialogCg_.alpha = 1

				arg_134_1.dialog_:SetActive(true)
				SetActive(arg_134_1.leftNameGo_, true)

				local var_137_25 = arg_134_1:FormatText(StoryNameCfg[471].name)

				arg_134_1.leftNameTxt_.text = var_137_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_134_1.leftNameTxt_.transform)

				arg_134_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_134_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_134_1:RecordName(arg_134_1.leftNameTxt_.text)
				SetActive(arg_134_1.iconTrs_.gameObject, false)
				arg_134_1.callingController_:SetSelectedState("normal")

				local var_137_26 = arg_134_1:GetWordFromCfg(417161033)
				local var_137_27 = arg_134_1:FormatText(var_137_26.content)

				arg_134_1.text_.text = var_137_27

				LuaForUtil.ClearLinePrefixSymbol(arg_134_1.text_)

				local var_137_28 = 10
				local var_137_29 = utf8.len(var_137_27)
				local var_137_30 = var_137_28 <= 0 and var_137_24 or var_137_24 * (var_137_29 / var_137_28)

				if var_137_30 > 0 and var_137_24 < var_137_30 then
					arg_134_1.talkMaxDuration = var_137_30

					if var_137_30 + var_137_23 > arg_134_1.duration_ then
						arg_134_1.duration_ = var_137_30 + var_137_23
					end
				end

				arg_134_1.text_.text = var_137_27
				arg_134_1.typewritter.percent = 0

				arg_134_1.typewritter:SetDirty()
				arg_134_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161033", "story_v_out_417161.awb") ~= 0 then
					local var_137_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161033", "story_v_out_417161.awb") / 1000

					if var_137_31 + var_137_23 > arg_134_1.duration_ then
						arg_134_1.duration_ = var_137_31 + var_137_23
					end

					if var_137_26.prefab_name ~= "" and arg_134_1.actors_[var_137_26.prefab_name] ~= nil then
						local var_137_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_134_1.actors_[var_137_26.prefab_name].transform, "story_v_out_417161", "417161033", "story_v_out_417161.awb")

						arg_134_1:RecordAudio("417161033", var_137_32)
						arg_134_1:RecordAudio("417161033", var_137_32)
					else
						arg_134_1:AudioAction("play", "voice", "story_v_out_417161", "417161033", "story_v_out_417161.awb")
					end

					arg_134_1:RecordHistoryTalkVoice("story_v_out_417161", "417161033", "story_v_out_417161.awb")
				end

				arg_134_1:RecordContent(arg_134_1.text_.text)
			end

			local var_137_33 = math.max(var_137_24, arg_134_1.talkMaxDuration)

			if var_137_23 <= arg_134_1.time_ and arg_134_1.time_ < var_137_23 + var_137_33 then
				arg_134_1.typewritter.percent = (arg_134_1.time_ - var_137_23) / var_137_33

				arg_134_1.typewritter:SetDirty()
			end

			if arg_134_1.time_ >= var_137_23 + var_137_33 and arg_134_1.time_ < var_137_23 + var_137_33 + arg_137_0 then
				arg_134_1.typewritter.percent = 1

				arg_134_1.typewritter:SetDirty()
				arg_134_1:ShowNextGo(true)
			end
		end
	end,
	Play417161034 = function(arg_138_0, arg_138_1)
		arg_138_1.time_ = 0
		arg_138_1.frameCnt_ = 0
		arg_138_1.state_ = "playing"
		arg_138_1.curTalkId_ = 417161034
		arg_138_1.duration_ = 9.6

		local var_138_0 = {
			zh = 8.233,
			ja = 9.6
		}
		local var_138_1 = manager.audio:GetLocalizationFlag()

		if var_138_0[var_138_1] ~= nil then
			arg_138_1.duration_ = var_138_0[var_138_1]
		end

		SetActive(arg_138_1.tipsGo_, false)

		function arg_138_1.onSingleLineFinish_()
			arg_138_1.onSingleLineUpdate_ = nil
			arg_138_1.onSingleLineFinish_ = nil
			arg_138_1.state_ = "waiting"
		end

		function arg_138_1.playNext_(arg_140_0)
			if arg_140_0 == 1 then
				arg_138_0:Play417161035(arg_138_1)
			end
		end

		function arg_138_1.onSingleLineUpdate_(arg_141_0)
			local var_141_0 = arg_138_1.actors_["10128"]
			local var_141_1 = 0

			if var_141_1 < arg_138_1.time_ and arg_138_1.time_ <= var_141_1 + arg_141_0 and not isNil(var_141_0) and arg_138_1.var_.actorSpriteComps10128 == nil then
				arg_138_1.var_.actorSpriteComps10128 = var_141_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_141_2 = 0.2

			if var_141_1 <= arg_138_1.time_ and arg_138_1.time_ < var_141_1 + var_141_2 and not isNil(var_141_0) then
				local var_141_3 = (arg_138_1.time_ - var_141_1) / var_141_2

				if arg_138_1.var_.actorSpriteComps10128 then
					for iter_141_0, iter_141_1 in pairs(arg_138_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_141_1 then
							if arg_138_1.isInRecall_ then
								local var_141_4 = Mathf.Lerp(iter_141_1.color.r, arg_138_1.hightColor1.r, var_141_3)
								local var_141_5 = Mathf.Lerp(iter_141_1.color.g, arg_138_1.hightColor1.g, var_141_3)
								local var_141_6 = Mathf.Lerp(iter_141_1.color.b, arg_138_1.hightColor1.b, var_141_3)

								iter_141_1.color = Color.New(var_141_4, var_141_5, var_141_6)
							else
								local var_141_7 = Mathf.Lerp(iter_141_1.color.r, 1, var_141_3)

								iter_141_1.color = Color.New(var_141_7, var_141_7, var_141_7)
							end
						end
					end
				end
			end

			if arg_138_1.time_ >= var_141_1 + var_141_2 and arg_138_1.time_ < var_141_1 + var_141_2 + arg_141_0 and not isNil(var_141_0) and arg_138_1.var_.actorSpriteComps10128 then
				for iter_141_2, iter_141_3 in pairs(arg_138_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_141_3 then
						if arg_138_1.isInRecall_ then
							iter_141_3.color = arg_138_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_141_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_138_1.var_.actorSpriteComps10128 = nil
			end

			local var_141_8 = arg_138_1.actors_["1095"]
			local var_141_9 = 0

			if var_141_9 < arg_138_1.time_ and arg_138_1.time_ <= var_141_9 + arg_141_0 and not isNil(var_141_8) and arg_138_1.var_.actorSpriteComps1095 == nil then
				arg_138_1.var_.actorSpriteComps1095 = var_141_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_141_10 = 0.2

			if var_141_9 <= arg_138_1.time_ and arg_138_1.time_ < var_141_9 + var_141_10 and not isNil(var_141_8) then
				local var_141_11 = (arg_138_1.time_ - var_141_9) / var_141_10

				if arg_138_1.var_.actorSpriteComps1095 then
					for iter_141_4, iter_141_5 in pairs(arg_138_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_141_5 then
							if arg_138_1.isInRecall_ then
								local var_141_12 = Mathf.Lerp(iter_141_5.color.r, arg_138_1.hightColor2.r, var_141_11)
								local var_141_13 = Mathf.Lerp(iter_141_5.color.g, arg_138_1.hightColor2.g, var_141_11)
								local var_141_14 = Mathf.Lerp(iter_141_5.color.b, arg_138_1.hightColor2.b, var_141_11)

								iter_141_5.color = Color.New(var_141_12, var_141_13, var_141_14)
							else
								local var_141_15 = Mathf.Lerp(iter_141_5.color.r, 0.5, var_141_11)

								iter_141_5.color = Color.New(var_141_15, var_141_15, var_141_15)
							end
						end
					end
				end
			end

			if arg_138_1.time_ >= var_141_9 + var_141_10 and arg_138_1.time_ < var_141_9 + var_141_10 + arg_141_0 and not isNil(var_141_8) and arg_138_1.var_.actorSpriteComps1095 then
				for iter_141_6, iter_141_7 in pairs(arg_138_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_141_7 then
						if arg_138_1.isInRecall_ then
							iter_141_7.color = arg_138_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_141_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_138_1.var_.actorSpriteComps1095 = nil
			end

			local var_141_16 = arg_138_1.actors_["10128"].transform
			local var_141_17 = 0

			if var_141_17 < arg_138_1.time_ and arg_138_1.time_ <= var_141_17 + arg_141_0 then
				arg_138_1.var_.moveOldPos10128 = var_141_16.localPosition
				var_141_16.localScale = Vector3.New(1, 1, 1)

				arg_138_1:CheckSpriteTmpPos("10128", 2)

				local var_141_18 = var_141_16.childCount

				for iter_141_8 = 0, var_141_18 - 1 do
					local var_141_19 = var_141_16:GetChild(iter_141_8)

					if var_141_19.name == "split_6" or not string.find(var_141_19.name, "split") then
						var_141_19.gameObject:SetActive(true)
					else
						var_141_19.gameObject:SetActive(false)
					end
				end
			end

			local var_141_20 = 0.001

			if var_141_17 <= arg_138_1.time_ and arg_138_1.time_ < var_141_17 + var_141_20 then
				local var_141_21 = (arg_138_1.time_ - var_141_17) / var_141_20
				local var_141_22 = Vector3.New(-390, -347, -300)

				var_141_16.localPosition = Vector3.Lerp(arg_138_1.var_.moveOldPos10128, var_141_22, var_141_21)
			end

			if arg_138_1.time_ >= var_141_17 + var_141_20 and arg_138_1.time_ < var_141_17 + var_141_20 + arg_141_0 then
				var_141_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_141_23 = 0
			local var_141_24 = 1.025

			if var_141_23 < arg_138_1.time_ and arg_138_1.time_ <= var_141_23 + arg_141_0 then
				arg_138_1.talkMaxDuration = 0
				arg_138_1.dialogCg_.alpha = 1

				arg_138_1.dialog_:SetActive(true)
				SetActive(arg_138_1.leftNameGo_, true)

				local var_141_25 = arg_138_1:FormatText(StoryNameCfg[595].name)

				arg_138_1.leftNameTxt_.text = var_141_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_138_1.leftNameTxt_.transform)

				arg_138_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_138_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_138_1:RecordName(arg_138_1.leftNameTxt_.text)
				SetActive(arg_138_1.iconTrs_.gameObject, false)
				arg_138_1.callingController_:SetSelectedState("normal")

				local var_141_26 = arg_138_1:GetWordFromCfg(417161034)
				local var_141_27 = arg_138_1:FormatText(var_141_26.content)

				arg_138_1.text_.text = var_141_27

				LuaForUtil.ClearLinePrefixSymbol(arg_138_1.text_)

				local var_141_28 = 41
				local var_141_29 = utf8.len(var_141_27)
				local var_141_30 = var_141_28 <= 0 and var_141_24 or var_141_24 * (var_141_29 / var_141_28)

				if var_141_30 > 0 and var_141_24 < var_141_30 then
					arg_138_1.talkMaxDuration = var_141_30

					if var_141_30 + var_141_23 > arg_138_1.duration_ then
						arg_138_1.duration_ = var_141_30 + var_141_23
					end
				end

				arg_138_1.text_.text = var_141_27
				arg_138_1.typewritter.percent = 0

				arg_138_1.typewritter:SetDirty()
				arg_138_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161034", "story_v_out_417161.awb") ~= 0 then
					local var_141_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161034", "story_v_out_417161.awb") / 1000

					if var_141_31 + var_141_23 > arg_138_1.duration_ then
						arg_138_1.duration_ = var_141_31 + var_141_23
					end

					if var_141_26.prefab_name ~= "" and arg_138_1.actors_[var_141_26.prefab_name] ~= nil then
						local var_141_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_138_1.actors_[var_141_26.prefab_name].transform, "story_v_out_417161", "417161034", "story_v_out_417161.awb")

						arg_138_1:RecordAudio("417161034", var_141_32)
						arg_138_1:RecordAudio("417161034", var_141_32)
					else
						arg_138_1:AudioAction("play", "voice", "story_v_out_417161", "417161034", "story_v_out_417161.awb")
					end

					arg_138_1:RecordHistoryTalkVoice("story_v_out_417161", "417161034", "story_v_out_417161.awb")
				end

				arg_138_1:RecordContent(arg_138_1.text_.text)
			end

			local var_141_33 = math.max(var_141_24, arg_138_1.talkMaxDuration)

			if var_141_23 <= arg_138_1.time_ and arg_138_1.time_ < var_141_23 + var_141_33 then
				arg_138_1.typewritter.percent = (arg_138_1.time_ - var_141_23) / var_141_33

				arg_138_1.typewritter:SetDirty()
			end

			if arg_138_1.time_ >= var_141_23 + var_141_33 and arg_138_1.time_ < var_141_23 + var_141_33 + arg_141_0 then
				arg_138_1.typewritter.percent = 1

				arg_138_1.typewritter:SetDirty()
				arg_138_1:ShowNextGo(true)
			end
		end
	end,
	Play417161035 = function(arg_142_0, arg_142_1)
		arg_142_1.time_ = 0
		arg_142_1.frameCnt_ = 0
		arg_142_1.state_ = "playing"
		arg_142_1.curTalkId_ = 417161035
		arg_142_1.duration_ = 11.8

		local var_142_0 = {
			zh = 6.733,
			ja = 11.8
		}
		local var_142_1 = manager.audio:GetLocalizationFlag()

		if var_142_0[var_142_1] ~= nil then
			arg_142_1.duration_ = var_142_0[var_142_1]
		end

		SetActive(arg_142_1.tipsGo_, false)

		function arg_142_1.onSingleLineFinish_()
			arg_142_1.onSingleLineUpdate_ = nil
			arg_142_1.onSingleLineFinish_ = nil
			arg_142_1.state_ = "waiting"
		end

		function arg_142_1.playNext_(arg_144_0)
			if arg_144_0 == 1 then
				arg_142_0:Play417161036(arg_142_1)
			end
		end

		function arg_142_1.onSingleLineUpdate_(arg_145_0)
			local var_145_0 = 0
			local var_145_1 = 1

			if var_145_0 < arg_142_1.time_ and arg_142_1.time_ <= var_145_0 + arg_145_0 then
				arg_142_1.talkMaxDuration = 0
				arg_142_1.dialogCg_.alpha = 1

				arg_142_1.dialog_:SetActive(true)
				SetActive(arg_142_1.leftNameGo_, true)

				local var_145_2 = arg_142_1:FormatText(StoryNameCfg[595].name)

				arg_142_1.leftNameTxt_.text = var_145_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_142_1.leftNameTxt_.transform)

				arg_142_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_142_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_142_1:RecordName(arg_142_1.leftNameTxt_.text)
				SetActive(arg_142_1.iconTrs_.gameObject, false)
				arg_142_1.callingController_:SetSelectedState("normal")

				local var_145_3 = arg_142_1:GetWordFromCfg(417161035)
				local var_145_4 = arg_142_1:FormatText(var_145_3.content)

				arg_142_1.text_.text = var_145_4

				LuaForUtil.ClearLinePrefixSymbol(arg_142_1.text_)

				local var_145_5 = 40
				local var_145_6 = utf8.len(var_145_4)
				local var_145_7 = var_145_5 <= 0 and var_145_1 or var_145_1 * (var_145_6 / var_145_5)

				if var_145_7 > 0 and var_145_1 < var_145_7 then
					arg_142_1.talkMaxDuration = var_145_7

					if var_145_7 + var_145_0 > arg_142_1.duration_ then
						arg_142_1.duration_ = var_145_7 + var_145_0
					end
				end

				arg_142_1.text_.text = var_145_4
				arg_142_1.typewritter.percent = 0

				arg_142_1.typewritter:SetDirty()
				arg_142_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161035", "story_v_out_417161.awb") ~= 0 then
					local var_145_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161035", "story_v_out_417161.awb") / 1000

					if var_145_8 + var_145_0 > arg_142_1.duration_ then
						arg_142_1.duration_ = var_145_8 + var_145_0
					end

					if var_145_3.prefab_name ~= "" and arg_142_1.actors_[var_145_3.prefab_name] ~= nil then
						local var_145_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_142_1.actors_[var_145_3.prefab_name].transform, "story_v_out_417161", "417161035", "story_v_out_417161.awb")

						arg_142_1:RecordAudio("417161035", var_145_9)
						arg_142_1:RecordAudio("417161035", var_145_9)
					else
						arg_142_1:AudioAction("play", "voice", "story_v_out_417161", "417161035", "story_v_out_417161.awb")
					end

					arg_142_1:RecordHistoryTalkVoice("story_v_out_417161", "417161035", "story_v_out_417161.awb")
				end

				arg_142_1:RecordContent(arg_142_1.text_.text)
			end

			local var_145_10 = math.max(var_145_1, arg_142_1.talkMaxDuration)

			if var_145_0 <= arg_142_1.time_ and arg_142_1.time_ < var_145_0 + var_145_10 then
				arg_142_1.typewritter.percent = (arg_142_1.time_ - var_145_0) / var_145_10

				arg_142_1.typewritter:SetDirty()
			end

			if arg_142_1.time_ >= var_145_0 + var_145_10 and arg_142_1.time_ < var_145_0 + var_145_10 + arg_145_0 then
				arg_142_1.typewritter.percent = 1

				arg_142_1.typewritter:SetDirty()
				arg_142_1:ShowNextGo(true)
			end
		end
	end,
	Play417161036 = function(arg_146_0, arg_146_1)
		arg_146_1.time_ = 0
		arg_146_1.frameCnt_ = 0
		arg_146_1.state_ = "playing"
		arg_146_1.curTalkId_ = 417161036
		arg_146_1.duration_ = 4.1

		local var_146_0 = {
			zh = 3.633,
			ja = 4.1
		}
		local var_146_1 = manager.audio:GetLocalizationFlag()

		if var_146_0[var_146_1] ~= nil then
			arg_146_1.duration_ = var_146_0[var_146_1]
		end

		SetActive(arg_146_1.tipsGo_, false)

		function arg_146_1.onSingleLineFinish_()
			arg_146_1.onSingleLineUpdate_ = nil
			arg_146_1.onSingleLineFinish_ = nil
			arg_146_1.state_ = "waiting"
		end

		function arg_146_1.playNext_(arg_148_0)
			if arg_148_0 == 1 then
				arg_146_0:Play417161037(arg_146_1)
			end
		end

		function arg_146_1.onSingleLineUpdate_(arg_149_0)
			local var_149_0 = 0
			local var_149_1 = 0.525

			if var_149_0 < arg_146_1.time_ and arg_146_1.time_ <= var_149_0 + arg_149_0 then
				arg_146_1.talkMaxDuration = 0
				arg_146_1.dialogCg_.alpha = 1

				arg_146_1.dialog_:SetActive(true)
				SetActive(arg_146_1.leftNameGo_, true)

				local var_149_2 = arg_146_1:FormatText(StoryNameCfg[595].name)

				arg_146_1.leftNameTxt_.text = var_149_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_146_1.leftNameTxt_.transform)

				arg_146_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_146_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_146_1:RecordName(arg_146_1.leftNameTxt_.text)
				SetActive(arg_146_1.iconTrs_.gameObject, false)
				arg_146_1.callingController_:SetSelectedState("normal")

				local var_149_3 = arg_146_1:GetWordFromCfg(417161036)
				local var_149_4 = arg_146_1:FormatText(var_149_3.content)

				arg_146_1.text_.text = var_149_4

				LuaForUtil.ClearLinePrefixSymbol(arg_146_1.text_)

				local var_149_5 = 21
				local var_149_6 = utf8.len(var_149_4)
				local var_149_7 = var_149_5 <= 0 and var_149_1 or var_149_1 * (var_149_6 / var_149_5)

				if var_149_7 > 0 and var_149_1 < var_149_7 then
					arg_146_1.talkMaxDuration = var_149_7

					if var_149_7 + var_149_0 > arg_146_1.duration_ then
						arg_146_1.duration_ = var_149_7 + var_149_0
					end
				end

				arg_146_1.text_.text = var_149_4
				arg_146_1.typewritter.percent = 0

				arg_146_1.typewritter:SetDirty()
				arg_146_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161036", "story_v_out_417161.awb") ~= 0 then
					local var_149_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161036", "story_v_out_417161.awb") / 1000

					if var_149_8 + var_149_0 > arg_146_1.duration_ then
						arg_146_1.duration_ = var_149_8 + var_149_0
					end

					if var_149_3.prefab_name ~= "" and arg_146_1.actors_[var_149_3.prefab_name] ~= nil then
						local var_149_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_146_1.actors_[var_149_3.prefab_name].transform, "story_v_out_417161", "417161036", "story_v_out_417161.awb")

						arg_146_1:RecordAudio("417161036", var_149_9)
						arg_146_1:RecordAudio("417161036", var_149_9)
					else
						arg_146_1:AudioAction("play", "voice", "story_v_out_417161", "417161036", "story_v_out_417161.awb")
					end

					arg_146_1:RecordHistoryTalkVoice("story_v_out_417161", "417161036", "story_v_out_417161.awb")
				end

				arg_146_1:RecordContent(arg_146_1.text_.text)
			end

			local var_149_10 = math.max(var_149_1, arg_146_1.talkMaxDuration)

			if var_149_0 <= arg_146_1.time_ and arg_146_1.time_ < var_149_0 + var_149_10 then
				arg_146_1.typewritter.percent = (arg_146_1.time_ - var_149_0) / var_149_10

				arg_146_1.typewritter:SetDirty()
			end

			if arg_146_1.time_ >= var_149_0 + var_149_10 and arg_146_1.time_ < var_149_0 + var_149_10 + arg_149_0 then
				arg_146_1.typewritter.percent = 1

				arg_146_1.typewritter:SetDirty()
				arg_146_1:ShowNextGo(true)
			end
		end
	end,
	Play417161037 = function(arg_150_0, arg_150_1)
		arg_150_1.time_ = 0
		arg_150_1.frameCnt_ = 0
		arg_150_1.state_ = "playing"
		arg_150_1.curTalkId_ = 417161037
		arg_150_1.duration_ = 4.73

		local var_150_0 = {
			zh = 2.1,
			ja = 4.733
		}
		local var_150_1 = manager.audio:GetLocalizationFlag()

		if var_150_0[var_150_1] ~= nil then
			arg_150_1.duration_ = var_150_0[var_150_1]
		end

		SetActive(arg_150_1.tipsGo_, false)

		function arg_150_1.onSingleLineFinish_()
			arg_150_1.onSingleLineUpdate_ = nil
			arg_150_1.onSingleLineFinish_ = nil
			arg_150_1.state_ = "waiting"
		end

		function arg_150_1.playNext_(arg_152_0)
			if arg_152_0 == 1 then
				arg_150_0:Play417161038(arg_150_1)
			end
		end

		function arg_150_1.onSingleLineUpdate_(arg_153_0)
			local var_153_0 = arg_150_1.actors_["10128"]
			local var_153_1 = 0

			if var_153_1 < arg_150_1.time_ and arg_150_1.time_ <= var_153_1 + arg_153_0 and not isNil(var_153_0) and arg_150_1.var_.actorSpriteComps10128 == nil then
				arg_150_1.var_.actorSpriteComps10128 = var_153_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_153_2 = 0.2

			if var_153_1 <= arg_150_1.time_ and arg_150_1.time_ < var_153_1 + var_153_2 and not isNil(var_153_0) then
				local var_153_3 = (arg_150_1.time_ - var_153_1) / var_153_2

				if arg_150_1.var_.actorSpriteComps10128 then
					for iter_153_0, iter_153_1 in pairs(arg_150_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_153_1 then
							if arg_150_1.isInRecall_ then
								local var_153_4 = Mathf.Lerp(iter_153_1.color.r, arg_150_1.hightColor2.r, var_153_3)
								local var_153_5 = Mathf.Lerp(iter_153_1.color.g, arg_150_1.hightColor2.g, var_153_3)
								local var_153_6 = Mathf.Lerp(iter_153_1.color.b, arg_150_1.hightColor2.b, var_153_3)

								iter_153_1.color = Color.New(var_153_4, var_153_5, var_153_6)
							else
								local var_153_7 = Mathf.Lerp(iter_153_1.color.r, 0.5, var_153_3)

								iter_153_1.color = Color.New(var_153_7, var_153_7, var_153_7)
							end
						end
					end
				end
			end

			if arg_150_1.time_ >= var_153_1 + var_153_2 and arg_150_1.time_ < var_153_1 + var_153_2 + arg_153_0 and not isNil(var_153_0) and arg_150_1.var_.actorSpriteComps10128 then
				for iter_153_2, iter_153_3 in pairs(arg_150_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_153_3 then
						if arg_150_1.isInRecall_ then
							iter_153_3.color = arg_150_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_153_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_150_1.var_.actorSpriteComps10128 = nil
			end

			local var_153_8 = arg_150_1.actors_["1095"].transform
			local var_153_9 = 0

			if var_153_9 < arg_150_1.time_ and arg_150_1.time_ <= var_153_9 + arg_153_0 then
				arg_150_1.var_.moveOldPos1095 = var_153_8.localPosition
				var_153_8.localScale = Vector3.New(1, 1, 1)

				arg_150_1:CheckSpriteTmpPos("1095", 4)

				local var_153_10 = var_153_8.childCount

				for iter_153_4 = 0, var_153_10 - 1 do
					local var_153_11 = var_153_8:GetChild(iter_153_4)

					if var_153_11.name == "split_3" or not string.find(var_153_11.name, "split") then
						var_153_11.gameObject:SetActive(true)
					else
						var_153_11.gameObject:SetActive(false)
					end
				end
			end

			local var_153_12 = 0.001

			if var_153_9 <= arg_150_1.time_ and arg_150_1.time_ < var_153_9 + var_153_12 then
				local var_153_13 = (arg_150_1.time_ - var_153_9) / var_153_12
				local var_153_14 = Vector3.New(390, -340, -285)

				var_153_8.localPosition = Vector3.Lerp(arg_150_1.var_.moveOldPos1095, var_153_14, var_153_13)
			end

			if arg_150_1.time_ >= var_153_9 + var_153_12 and arg_150_1.time_ < var_153_9 + var_153_12 + arg_153_0 then
				var_153_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_153_15 = arg_150_1.actors_["1095"]
			local var_153_16 = 0

			if var_153_16 < arg_150_1.time_ and arg_150_1.time_ <= var_153_16 + arg_153_0 then
				local var_153_17 = var_153_15:GetComponentInChildren(typeof(CanvasGroup))

				if var_153_17 then
					arg_150_1.var_.alphaOldValue1095 = var_153_17.alpha
					arg_150_1.var_.characterEffect1095 = var_153_17
				end
			end

			local var_153_18 = 0.2

			if var_153_16 <= arg_150_1.time_ and arg_150_1.time_ < var_153_16 + var_153_18 then
				local var_153_19 = (arg_150_1.time_ - var_153_16) / var_153_18
				local var_153_20 = Mathf.Lerp(arg_150_1.var_.alphaOldValue1095, 0.6, var_153_19)

				if arg_150_1.var_.characterEffect1095 then
					arg_150_1.var_.characterEffect1095.alpha = var_153_20
				end
			end

			if arg_150_1.time_ >= var_153_16 + var_153_18 and arg_150_1.time_ < var_153_16 + var_153_18 + arg_153_0 and arg_150_1.var_.characterEffect1095 then
				arg_150_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_153_21 = arg_150_1.actors_["1095"]
			local var_153_22 = 0

			if var_153_22 < arg_150_1.time_ and arg_150_1.time_ <= var_153_22 + arg_153_0 then
				arg_150_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_153_23 = 0
			local var_153_24 = 0.225

			if var_153_23 < arg_150_1.time_ and arg_150_1.time_ <= var_153_23 + arg_153_0 then
				arg_150_1.talkMaxDuration = 0
				arg_150_1.dialogCg_.alpha = 1

				arg_150_1.dialog_:SetActive(true)
				SetActive(arg_150_1.leftNameGo_, true)

				local var_153_25 = arg_150_1:FormatText(StoryNameCfg[471].name)

				arg_150_1.leftNameTxt_.text = var_153_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_150_1.leftNameTxt_.transform)

				arg_150_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_150_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_150_1:RecordName(arg_150_1.leftNameTxt_.text)
				SetActive(arg_150_1.iconTrs_.gameObject, false)
				arg_150_1.callingController_:SetSelectedState("normal")

				local var_153_26 = arg_150_1:GetWordFromCfg(417161037)
				local var_153_27 = arg_150_1:FormatText(var_153_26.content)

				arg_150_1.text_.text = var_153_27

				LuaForUtil.ClearLinePrefixSymbol(arg_150_1.text_)

				local var_153_28 = 9
				local var_153_29 = utf8.len(var_153_27)
				local var_153_30 = var_153_28 <= 0 and var_153_24 or var_153_24 * (var_153_29 / var_153_28)

				if var_153_30 > 0 and var_153_24 < var_153_30 then
					arg_150_1.talkMaxDuration = var_153_30

					if var_153_30 + var_153_23 > arg_150_1.duration_ then
						arg_150_1.duration_ = var_153_30 + var_153_23
					end
				end

				arg_150_1.text_.text = var_153_27
				arg_150_1.typewritter.percent = 0

				arg_150_1.typewritter:SetDirty()
				arg_150_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161037", "story_v_out_417161.awb") ~= 0 then
					local var_153_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161037", "story_v_out_417161.awb") / 1000

					if var_153_31 + var_153_23 > arg_150_1.duration_ then
						arg_150_1.duration_ = var_153_31 + var_153_23
					end

					if var_153_26.prefab_name ~= "" and arg_150_1.actors_[var_153_26.prefab_name] ~= nil then
						local var_153_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_150_1.actors_[var_153_26.prefab_name].transform, "story_v_out_417161", "417161037", "story_v_out_417161.awb")

						arg_150_1:RecordAudio("417161037", var_153_32)
						arg_150_1:RecordAudio("417161037", var_153_32)
					else
						arg_150_1:AudioAction("play", "voice", "story_v_out_417161", "417161037", "story_v_out_417161.awb")
					end

					arg_150_1:RecordHistoryTalkVoice("story_v_out_417161", "417161037", "story_v_out_417161.awb")
				end

				arg_150_1:RecordContent(arg_150_1.text_.text)
			end

			local var_153_33 = math.max(var_153_24, arg_150_1.talkMaxDuration)

			if var_153_23 <= arg_150_1.time_ and arg_150_1.time_ < var_153_23 + var_153_33 then
				arg_150_1.typewritter.percent = (arg_150_1.time_ - var_153_23) / var_153_33

				arg_150_1.typewritter:SetDirty()
			end

			if arg_150_1.time_ >= var_153_23 + var_153_33 and arg_150_1.time_ < var_153_23 + var_153_33 + arg_153_0 then
				arg_150_1.typewritter.percent = 1

				arg_150_1.typewritter:SetDirty()
				arg_150_1:ShowNextGo(true)
			end
		end
	end,
	Play417161038 = function(arg_154_0, arg_154_1)
		arg_154_1.time_ = 0
		arg_154_1.frameCnt_ = 0
		arg_154_1.state_ = "playing"
		arg_154_1.curTalkId_ = 417161038
		arg_154_1.duration_ = 10.57

		local var_154_0 = {
			zh = 10.566,
			ja = 10.533
		}
		local var_154_1 = manager.audio:GetLocalizationFlag()

		if var_154_0[var_154_1] ~= nil then
			arg_154_1.duration_ = var_154_0[var_154_1]
		end

		SetActive(arg_154_1.tipsGo_, false)

		function arg_154_1.onSingleLineFinish_()
			arg_154_1.onSingleLineUpdate_ = nil
			arg_154_1.onSingleLineFinish_ = nil
			arg_154_1.state_ = "waiting"
		end

		function arg_154_1.playNext_(arg_156_0)
			if arg_156_0 == 1 then
				arg_154_0:Play417161039(arg_154_1)
			end
		end

		function arg_154_1.onSingleLineUpdate_(arg_157_0)
			local var_157_0 = arg_154_1.actors_["10128"]
			local var_157_1 = 0

			if var_157_1 < arg_154_1.time_ and arg_154_1.time_ <= var_157_1 + arg_157_0 and not isNil(var_157_0) and arg_154_1.var_.actorSpriteComps10128 == nil then
				arg_154_1.var_.actorSpriteComps10128 = var_157_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_157_2 = 0.2

			if var_157_1 <= arg_154_1.time_ and arg_154_1.time_ < var_157_1 + var_157_2 and not isNil(var_157_0) then
				local var_157_3 = (arg_154_1.time_ - var_157_1) / var_157_2

				if arg_154_1.var_.actorSpriteComps10128 then
					for iter_157_0, iter_157_1 in pairs(arg_154_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_157_1 then
							if arg_154_1.isInRecall_ then
								local var_157_4 = Mathf.Lerp(iter_157_1.color.r, arg_154_1.hightColor1.r, var_157_3)
								local var_157_5 = Mathf.Lerp(iter_157_1.color.g, arg_154_1.hightColor1.g, var_157_3)
								local var_157_6 = Mathf.Lerp(iter_157_1.color.b, arg_154_1.hightColor1.b, var_157_3)

								iter_157_1.color = Color.New(var_157_4, var_157_5, var_157_6)
							else
								local var_157_7 = Mathf.Lerp(iter_157_1.color.r, 1, var_157_3)

								iter_157_1.color = Color.New(var_157_7, var_157_7, var_157_7)
							end
						end
					end
				end
			end

			if arg_154_1.time_ >= var_157_1 + var_157_2 and arg_154_1.time_ < var_157_1 + var_157_2 + arg_157_0 and not isNil(var_157_0) and arg_154_1.var_.actorSpriteComps10128 then
				for iter_157_2, iter_157_3 in pairs(arg_154_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_157_3 then
						if arg_154_1.isInRecall_ then
							iter_157_3.color = arg_154_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_157_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_154_1.var_.actorSpriteComps10128 = nil
			end

			local var_157_8 = arg_154_1.actors_["1095"]
			local var_157_9 = 0

			if var_157_9 < arg_154_1.time_ and arg_154_1.time_ <= var_157_9 + arg_157_0 and not isNil(var_157_8) and arg_154_1.var_.actorSpriteComps1095 == nil then
				arg_154_1.var_.actorSpriteComps1095 = var_157_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_157_10 = 0.2

			if var_157_9 <= arg_154_1.time_ and arg_154_1.time_ < var_157_9 + var_157_10 and not isNil(var_157_8) then
				local var_157_11 = (arg_154_1.time_ - var_157_9) / var_157_10

				if arg_154_1.var_.actorSpriteComps1095 then
					for iter_157_4, iter_157_5 in pairs(arg_154_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_157_5 then
							if arg_154_1.isInRecall_ then
								local var_157_12 = Mathf.Lerp(iter_157_5.color.r, arg_154_1.hightColor2.r, var_157_11)
								local var_157_13 = Mathf.Lerp(iter_157_5.color.g, arg_154_1.hightColor2.g, var_157_11)
								local var_157_14 = Mathf.Lerp(iter_157_5.color.b, arg_154_1.hightColor2.b, var_157_11)

								iter_157_5.color = Color.New(var_157_12, var_157_13, var_157_14)
							else
								local var_157_15 = Mathf.Lerp(iter_157_5.color.r, 0.5, var_157_11)

								iter_157_5.color = Color.New(var_157_15, var_157_15, var_157_15)
							end
						end
					end
				end
			end

			if arg_154_1.time_ >= var_157_9 + var_157_10 and arg_154_1.time_ < var_157_9 + var_157_10 + arg_157_0 and not isNil(var_157_8) and arg_154_1.var_.actorSpriteComps1095 then
				for iter_157_6, iter_157_7 in pairs(arg_154_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_157_7 then
						if arg_154_1.isInRecall_ then
							iter_157_7.color = arg_154_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_157_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_154_1.var_.actorSpriteComps1095 = nil
			end

			local var_157_16 = 0
			local var_157_17 = 0.95

			if var_157_16 < arg_154_1.time_ and arg_154_1.time_ <= var_157_16 + arg_157_0 then
				arg_154_1.talkMaxDuration = 0
				arg_154_1.dialogCg_.alpha = 1

				arg_154_1.dialog_:SetActive(true)
				SetActive(arg_154_1.leftNameGo_, true)

				local var_157_18 = arg_154_1:FormatText(StoryNameCfg[595].name)

				arg_154_1.leftNameTxt_.text = var_157_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_154_1.leftNameTxt_.transform)

				arg_154_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_154_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_154_1:RecordName(arg_154_1.leftNameTxt_.text)
				SetActive(arg_154_1.iconTrs_.gameObject, false)
				arg_154_1.callingController_:SetSelectedState("normal")

				local var_157_19 = arg_154_1:GetWordFromCfg(417161038)
				local var_157_20 = arg_154_1:FormatText(var_157_19.content)

				arg_154_1.text_.text = var_157_20

				LuaForUtil.ClearLinePrefixSymbol(arg_154_1.text_)

				local var_157_21 = 38
				local var_157_22 = utf8.len(var_157_20)
				local var_157_23 = var_157_21 <= 0 and var_157_17 or var_157_17 * (var_157_22 / var_157_21)

				if var_157_23 > 0 and var_157_17 < var_157_23 then
					arg_154_1.talkMaxDuration = var_157_23

					if var_157_23 + var_157_16 > arg_154_1.duration_ then
						arg_154_1.duration_ = var_157_23 + var_157_16
					end
				end

				arg_154_1.text_.text = var_157_20
				arg_154_1.typewritter.percent = 0

				arg_154_1.typewritter:SetDirty()
				arg_154_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161038", "story_v_out_417161.awb") ~= 0 then
					local var_157_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161038", "story_v_out_417161.awb") / 1000

					if var_157_24 + var_157_16 > arg_154_1.duration_ then
						arg_154_1.duration_ = var_157_24 + var_157_16
					end

					if var_157_19.prefab_name ~= "" and arg_154_1.actors_[var_157_19.prefab_name] ~= nil then
						local var_157_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_154_1.actors_[var_157_19.prefab_name].transform, "story_v_out_417161", "417161038", "story_v_out_417161.awb")

						arg_154_1:RecordAudio("417161038", var_157_25)
						arg_154_1:RecordAudio("417161038", var_157_25)
					else
						arg_154_1:AudioAction("play", "voice", "story_v_out_417161", "417161038", "story_v_out_417161.awb")
					end

					arg_154_1:RecordHistoryTalkVoice("story_v_out_417161", "417161038", "story_v_out_417161.awb")
				end

				arg_154_1:RecordContent(arg_154_1.text_.text)
			end

			local var_157_26 = math.max(var_157_17, arg_154_1.talkMaxDuration)

			if var_157_16 <= arg_154_1.time_ and arg_154_1.time_ < var_157_16 + var_157_26 then
				arg_154_1.typewritter.percent = (arg_154_1.time_ - var_157_16) / var_157_26

				arg_154_1.typewritter:SetDirty()
			end

			if arg_154_1.time_ >= var_157_16 + var_157_26 and arg_154_1.time_ < var_157_16 + var_157_26 + arg_157_0 then
				arg_154_1.typewritter.percent = 1

				arg_154_1.typewritter:SetDirty()
				arg_154_1:ShowNextGo(true)
			end
		end
	end,
	Play417161039 = function(arg_158_0, arg_158_1)
		arg_158_1.time_ = 0
		arg_158_1.frameCnt_ = 0
		arg_158_1.state_ = "playing"
		arg_158_1.curTalkId_ = 417161039
		arg_158_1.duration_ = 10.33

		local var_158_0 = {
			zh = 10.333,
			ja = 9.4
		}
		local var_158_1 = manager.audio:GetLocalizationFlag()

		if var_158_0[var_158_1] ~= nil then
			arg_158_1.duration_ = var_158_0[var_158_1]
		end

		SetActive(arg_158_1.tipsGo_, false)

		function arg_158_1.onSingleLineFinish_()
			arg_158_1.onSingleLineUpdate_ = nil
			arg_158_1.onSingleLineFinish_ = nil
			arg_158_1.state_ = "waiting"
		end

		function arg_158_1.playNext_(arg_160_0)
			if arg_160_0 == 1 then
				arg_158_0:Play417161040(arg_158_1)
			end
		end

		function arg_158_1.onSingleLineUpdate_(arg_161_0)
			local var_161_0 = 0
			local var_161_1 = 1.15

			if var_161_0 < arg_158_1.time_ and arg_158_1.time_ <= var_161_0 + arg_161_0 then
				arg_158_1.talkMaxDuration = 0
				arg_158_1.dialogCg_.alpha = 1

				arg_158_1.dialog_:SetActive(true)
				SetActive(arg_158_1.leftNameGo_, true)

				local var_161_2 = arg_158_1:FormatText(StoryNameCfg[595].name)

				arg_158_1.leftNameTxt_.text = var_161_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_158_1.leftNameTxt_.transform)

				arg_158_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_158_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_158_1:RecordName(arg_158_1.leftNameTxt_.text)
				SetActive(arg_158_1.iconTrs_.gameObject, false)
				arg_158_1.callingController_:SetSelectedState("normal")

				local var_161_3 = arg_158_1:GetWordFromCfg(417161039)
				local var_161_4 = arg_158_1:FormatText(var_161_3.content)

				arg_158_1.text_.text = var_161_4

				LuaForUtil.ClearLinePrefixSymbol(arg_158_1.text_)

				local var_161_5 = 46
				local var_161_6 = utf8.len(var_161_4)
				local var_161_7 = var_161_5 <= 0 and var_161_1 or var_161_1 * (var_161_6 / var_161_5)

				if var_161_7 > 0 and var_161_1 < var_161_7 then
					arg_158_1.talkMaxDuration = var_161_7

					if var_161_7 + var_161_0 > arg_158_1.duration_ then
						arg_158_1.duration_ = var_161_7 + var_161_0
					end
				end

				arg_158_1.text_.text = var_161_4
				arg_158_1.typewritter.percent = 0

				arg_158_1.typewritter:SetDirty()
				arg_158_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161039", "story_v_out_417161.awb") ~= 0 then
					local var_161_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161039", "story_v_out_417161.awb") / 1000

					if var_161_8 + var_161_0 > arg_158_1.duration_ then
						arg_158_1.duration_ = var_161_8 + var_161_0
					end

					if var_161_3.prefab_name ~= "" and arg_158_1.actors_[var_161_3.prefab_name] ~= nil then
						local var_161_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_158_1.actors_[var_161_3.prefab_name].transform, "story_v_out_417161", "417161039", "story_v_out_417161.awb")

						arg_158_1:RecordAudio("417161039", var_161_9)
						arg_158_1:RecordAudio("417161039", var_161_9)
					else
						arg_158_1:AudioAction("play", "voice", "story_v_out_417161", "417161039", "story_v_out_417161.awb")
					end

					arg_158_1:RecordHistoryTalkVoice("story_v_out_417161", "417161039", "story_v_out_417161.awb")
				end

				arg_158_1:RecordContent(arg_158_1.text_.text)
			end

			local var_161_10 = math.max(var_161_1, arg_158_1.talkMaxDuration)

			if var_161_0 <= arg_158_1.time_ and arg_158_1.time_ < var_161_0 + var_161_10 then
				arg_158_1.typewritter.percent = (arg_158_1.time_ - var_161_0) / var_161_10

				arg_158_1.typewritter:SetDirty()
			end

			if arg_158_1.time_ >= var_161_0 + var_161_10 and arg_158_1.time_ < var_161_0 + var_161_10 + arg_161_0 then
				arg_158_1.typewritter.percent = 1

				arg_158_1.typewritter:SetDirty()
				arg_158_1:ShowNextGo(true)
			end
		end
	end,
	Play417161040 = function(arg_162_0, arg_162_1)
		arg_162_1.time_ = 0
		arg_162_1.frameCnt_ = 0
		arg_162_1.state_ = "playing"
		arg_162_1.curTalkId_ = 417161040
		arg_162_1.duration_ = 11.37

		local var_162_0 = {
			zh = 6.9,
			ja = 11.366
		}
		local var_162_1 = manager.audio:GetLocalizationFlag()

		if var_162_0[var_162_1] ~= nil then
			arg_162_1.duration_ = var_162_0[var_162_1]
		end

		SetActive(arg_162_1.tipsGo_, false)

		function arg_162_1.onSingleLineFinish_()
			arg_162_1.onSingleLineUpdate_ = nil
			arg_162_1.onSingleLineFinish_ = nil
			arg_162_1.state_ = "waiting"
		end

		function arg_162_1.playNext_(arg_164_0)
			if arg_164_0 == 1 then
				arg_162_0:Play417161041(arg_162_1)
			end
		end

		function arg_162_1.onSingleLineUpdate_(arg_165_0)
			local var_165_0 = 0
			local var_165_1 = 1

			if var_165_0 < arg_162_1.time_ and arg_162_1.time_ <= var_165_0 + arg_165_0 then
				arg_162_1.talkMaxDuration = 0
				arg_162_1.dialogCg_.alpha = 1

				arg_162_1.dialog_:SetActive(true)
				SetActive(arg_162_1.leftNameGo_, true)

				local var_165_2 = arg_162_1:FormatText(StoryNameCfg[595].name)

				arg_162_1.leftNameTxt_.text = var_165_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_162_1.leftNameTxt_.transform)

				arg_162_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_162_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_162_1:RecordName(arg_162_1.leftNameTxt_.text)
				SetActive(arg_162_1.iconTrs_.gameObject, false)
				arg_162_1.callingController_:SetSelectedState("normal")

				local var_165_3 = arg_162_1:GetWordFromCfg(417161040)
				local var_165_4 = arg_162_1:FormatText(var_165_3.content)

				arg_162_1.text_.text = var_165_4

				LuaForUtil.ClearLinePrefixSymbol(arg_162_1.text_)

				local var_165_5 = 38
				local var_165_6 = utf8.len(var_165_4)
				local var_165_7 = var_165_5 <= 0 and var_165_1 or var_165_1 * (var_165_6 / var_165_5)

				if var_165_7 > 0 and var_165_1 < var_165_7 then
					arg_162_1.talkMaxDuration = var_165_7

					if var_165_7 + var_165_0 > arg_162_1.duration_ then
						arg_162_1.duration_ = var_165_7 + var_165_0
					end
				end

				arg_162_1.text_.text = var_165_4
				arg_162_1.typewritter.percent = 0

				arg_162_1.typewritter:SetDirty()
				arg_162_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161040", "story_v_out_417161.awb") ~= 0 then
					local var_165_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161040", "story_v_out_417161.awb") / 1000

					if var_165_8 + var_165_0 > arg_162_1.duration_ then
						arg_162_1.duration_ = var_165_8 + var_165_0
					end

					if var_165_3.prefab_name ~= "" and arg_162_1.actors_[var_165_3.prefab_name] ~= nil then
						local var_165_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_162_1.actors_[var_165_3.prefab_name].transform, "story_v_out_417161", "417161040", "story_v_out_417161.awb")

						arg_162_1:RecordAudio("417161040", var_165_9)
						arg_162_1:RecordAudio("417161040", var_165_9)
					else
						arg_162_1:AudioAction("play", "voice", "story_v_out_417161", "417161040", "story_v_out_417161.awb")
					end

					arg_162_1:RecordHistoryTalkVoice("story_v_out_417161", "417161040", "story_v_out_417161.awb")
				end

				arg_162_1:RecordContent(arg_162_1.text_.text)
			end

			local var_165_10 = math.max(var_165_1, arg_162_1.talkMaxDuration)

			if var_165_0 <= arg_162_1.time_ and arg_162_1.time_ < var_165_0 + var_165_10 then
				arg_162_1.typewritter.percent = (arg_162_1.time_ - var_165_0) / var_165_10

				arg_162_1.typewritter:SetDirty()
			end

			if arg_162_1.time_ >= var_165_0 + var_165_10 and arg_162_1.time_ < var_165_0 + var_165_10 + arg_165_0 then
				arg_162_1.typewritter.percent = 1

				arg_162_1.typewritter:SetDirty()
				arg_162_1:ShowNextGo(true)
			end
		end
	end,
	Play417161041 = function(arg_166_0, arg_166_1)
		arg_166_1.time_ = 0
		arg_166_1.frameCnt_ = 0
		arg_166_1.state_ = "playing"
		arg_166_1.curTalkId_ = 417161041
		arg_166_1.duration_ = 5.37

		local var_166_0 = {
			zh = 2.333,
			ja = 5.366
		}
		local var_166_1 = manager.audio:GetLocalizationFlag()

		if var_166_0[var_166_1] ~= nil then
			arg_166_1.duration_ = var_166_0[var_166_1]
		end

		SetActive(arg_166_1.tipsGo_, false)

		function arg_166_1.onSingleLineFinish_()
			arg_166_1.onSingleLineUpdate_ = nil
			arg_166_1.onSingleLineFinish_ = nil
			arg_166_1.state_ = "waiting"
		end

		function arg_166_1.playNext_(arg_168_0)
			if arg_168_0 == 1 then
				arg_166_0:Play417161042(arg_166_1)
			end
		end

		function arg_166_1.onSingleLineUpdate_(arg_169_0)
			local var_169_0 = arg_166_1.actors_["10128"]
			local var_169_1 = 0

			if var_169_1 < arg_166_1.time_ and arg_166_1.time_ <= var_169_1 + arg_169_0 and not isNil(var_169_0) and arg_166_1.var_.actorSpriteComps10128 == nil then
				arg_166_1.var_.actorSpriteComps10128 = var_169_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_169_2 = 0.2

			if var_169_1 <= arg_166_1.time_ and arg_166_1.time_ < var_169_1 + var_169_2 and not isNil(var_169_0) then
				local var_169_3 = (arg_166_1.time_ - var_169_1) / var_169_2

				if arg_166_1.var_.actorSpriteComps10128 then
					for iter_169_0, iter_169_1 in pairs(arg_166_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_169_1 then
							if arg_166_1.isInRecall_ then
								local var_169_4 = Mathf.Lerp(iter_169_1.color.r, arg_166_1.hightColor2.r, var_169_3)
								local var_169_5 = Mathf.Lerp(iter_169_1.color.g, arg_166_1.hightColor2.g, var_169_3)
								local var_169_6 = Mathf.Lerp(iter_169_1.color.b, arg_166_1.hightColor2.b, var_169_3)

								iter_169_1.color = Color.New(var_169_4, var_169_5, var_169_6)
							else
								local var_169_7 = Mathf.Lerp(iter_169_1.color.r, 0.5, var_169_3)

								iter_169_1.color = Color.New(var_169_7, var_169_7, var_169_7)
							end
						end
					end
				end
			end

			if arg_166_1.time_ >= var_169_1 + var_169_2 and arg_166_1.time_ < var_169_1 + var_169_2 + arg_169_0 and not isNil(var_169_0) and arg_166_1.var_.actorSpriteComps10128 then
				for iter_169_2, iter_169_3 in pairs(arg_166_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_169_3 then
						if arg_166_1.isInRecall_ then
							iter_169_3.color = arg_166_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_169_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_166_1.var_.actorSpriteComps10128 = nil
			end

			local var_169_8 = arg_166_1.actors_["1095"].transform
			local var_169_9 = 0

			if var_169_9 < arg_166_1.time_ and arg_166_1.time_ <= var_169_9 + arg_169_0 then
				arg_166_1.var_.moveOldPos1095 = var_169_8.localPosition
				var_169_8.localScale = Vector3.New(1, 1, 1)

				arg_166_1:CheckSpriteTmpPos("1095", 4)

				local var_169_10 = var_169_8.childCount

				for iter_169_4 = 0, var_169_10 - 1 do
					local var_169_11 = var_169_8:GetChild(iter_169_4)

					if var_169_11.name == "split_6" or not string.find(var_169_11.name, "split") then
						var_169_11.gameObject:SetActive(true)
					else
						var_169_11.gameObject:SetActive(false)
					end
				end
			end

			local var_169_12 = 0.001

			if var_169_9 <= arg_166_1.time_ and arg_166_1.time_ < var_169_9 + var_169_12 then
				local var_169_13 = (arg_166_1.time_ - var_169_9) / var_169_12
				local var_169_14 = Vector3.New(390, -340, -285)

				var_169_8.localPosition = Vector3.Lerp(arg_166_1.var_.moveOldPos1095, var_169_14, var_169_13)
			end

			if arg_166_1.time_ >= var_169_9 + var_169_12 and arg_166_1.time_ < var_169_9 + var_169_12 + arg_169_0 then
				var_169_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_169_15 = arg_166_1.actors_["1095"]
			local var_169_16 = 0

			if var_169_16 < arg_166_1.time_ and arg_166_1.time_ <= var_169_16 + arg_169_0 then
				arg_166_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_169_17 = arg_166_1.actors_["1095"]
			local var_169_18 = 0

			if var_169_18 < arg_166_1.time_ and arg_166_1.time_ <= var_169_18 + arg_169_0 then
				local var_169_19 = var_169_17:GetComponentInChildren(typeof(CanvasGroup))

				if var_169_19 then
					arg_166_1.var_.alphaOldValue1095 = var_169_19.alpha
					arg_166_1.var_.characterEffect1095 = var_169_19
				end
			end

			local var_169_20 = 0.2

			if var_169_18 <= arg_166_1.time_ and arg_166_1.time_ < var_169_18 + var_169_20 then
				local var_169_21 = (arg_166_1.time_ - var_169_18) / var_169_20
				local var_169_22 = Mathf.Lerp(arg_166_1.var_.alphaOldValue1095, 0.6, var_169_21)

				if arg_166_1.var_.characterEffect1095 then
					arg_166_1.var_.characterEffect1095.alpha = var_169_22
				end
			end

			if arg_166_1.time_ >= var_169_18 + var_169_20 and arg_166_1.time_ < var_169_18 + var_169_20 + arg_169_0 and arg_166_1.var_.characterEffect1095 then
				arg_166_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_169_23 = 0
			local var_169_24 = 0.3

			if var_169_23 < arg_166_1.time_ and arg_166_1.time_ <= var_169_23 + arg_169_0 then
				arg_166_1.talkMaxDuration = 0
				arg_166_1.dialogCg_.alpha = 1

				arg_166_1.dialog_:SetActive(true)
				SetActive(arg_166_1.leftNameGo_, true)

				local var_169_25 = arg_166_1:FormatText(StoryNameCfg[471].name)

				arg_166_1.leftNameTxt_.text = var_169_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_166_1.leftNameTxt_.transform)

				arg_166_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_166_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_166_1:RecordName(arg_166_1.leftNameTxt_.text)
				SetActive(arg_166_1.iconTrs_.gameObject, false)
				arg_166_1.callingController_:SetSelectedState("normal")

				local var_169_26 = arg_166_1:GetWordFromCfg(417161041)
				local var_169_27 = arg_166_1:FormatText(var_169_26.content)

				arg_166_1.text_.text = var_169_27

				LuaForUtil.ClearLinePrefixSymbol(arg_166_1.text_)

				local var_169_28 = 12
				local var_169_29 = utf8.len(var_169_27)
				local var_169_30 = var_169_28 <= 0 and var_169_24 or var_169_24 * (var_169_29 / var_169_28)

				if var_169_30 > 0 and var_169_24 < var_169_30 then
					arg_166_1.talkMaxDuration = var_169_30

					if var_169_30 + var_169_23 > arg_166_1.duration_ then
						arg_166_1.duration_ = var_169_30 + var_169_23
					end
				end

				arg_166_1.text_.text = var_169_27
				arg_166_1.typewritter.percent = 0

				arg_166_1.typewritter:SetDirty()
				arg_166_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161041", "story_v_out_417161.awb") ~= 0 then
					local var_169_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161041", "story_v_out_417161.awb") / 1000

					if var_169_31 + var_169_23 > arg_166_1.duration_ then
						arg_166_1.duration_ = var_169_31 + var_169_23
					end

					if var_169_26.prefab_name ~= "" and arg_166_1.actors_[var_169_26.prefab_name] ~= nil then
						local var_169_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_166_1.actors_[var_169_26.prefab_name].transform, "story_v_out_417161", "417161041", "story_v_out_417161.awb")

						arg_166_1:RecordAudio("417161041", var_169_32)
						arg_166_1:RecordAudio("417161041", var_169_32)
					else
						arg_166_1:AudioAction("play", "voice", "story_v_out_417161", "417161041", "story_v_out_417161.awb")
					end

					arg_166_1:RecordHistoryTalkVoice("story_v_out_417161", "417161041", "story_v_out_417161.awb")
				end

				arg_166_1:RecordContent(arg_166_1.text_.text)
			end

			local var_169_33 = math.max(var_169_24, arg_166_1.talkMaxDuration)

			if var_169_23 <= arg_166_1.time_ and arg_166_1.time_ < var_169_23 + var_169_33 then
				arg_166_1.typewritter.percent = (arg_166_1.time_ - var_169_23) / var_169_33

				arg_166_1.typewritter:SetDirty()
			end

			if arg_166_1.time_ >= var_169_23 + var_169_33 and arg_166_1.time_ < var_169_23 + var_169_33 + arg_169_0 then
				arg_166_1.typewritter.percent = 1

				arg_166_1.typewritter:SetDirty()
				arg_166_1:ShowNextGo(true)
			end
		end
	end,
	Play417161042 = function(arg_170_0, arg_170_1)
		arg_170_1.time_ = 0
		arg_170_1.frameCnt_ = 0
		arg_170_1.state_ = "playing"
		arg_170_1.curTalkId_ = 417161042
		arg_170_1.duration_ = 9.4

		local var_170_0 = {
			zh = 6.133,
			ja = 9.4
		}
		local var_170_1 = manager.audio:GetLocalizationFlag()

		if var_170_0[var_170_1] ~= nil then
			arg_170_1.duration_ = var_170_0[var_170_1]
		end

		SetActive(arg_170_1.tipsGo_, false)

		function arg_170_1.onSingleLineFinish_()
			arg_170_1.onSingleLineUpdate_ = nil
			arg_170_1.onSingleLineFinish_ = nil
			arg_170_1.state_ = "waiting"
		end

		function arg_170_1.playNext_(arg_172_0)
			if arg_172_0 == 1 then
				arg_170_0:Play417161043(arg_170_1)
			end
		end

		function arg_170_1.onSingleLineUpdate_(arg_173_0)
			local var_173_0 = arg_170_1.actors_["10128"]
			local var_173_1 = 0

			if var_173_1 < arg_170_1.time_ and arg_170_1.time_ <= var_173_1 + arg_173_0 and not isNil(var_173_0) and arg_170_1.var_.actorSpriteComps10128 == nil then
				arg_170_1.var_.actorSpriteComps10128 = var_173_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_173_2 = 0.2

			if var_173_1 <= arg_170_1.time_ and arg_170_1.time_ < var_173_1 + var_173_2 and not isNil(var_173_0) then
				local var_173_3 = (arg_170_1.time_ - var_173_1) / var_173_2

				if arg_170_1.var_.actorSpriteComps10128 then
					for iter_173_0, iter_173_1 in pairs(arg_170_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_173_1 then
							if arg_170_1.isInRecall_ then
								local var_173_4 = Mathf.Lerp(iter_173_1.color.r, arg_170_1.hightColor1.r, var_173_3)
								local var_173_5 = Mathf.Lerp(iter_173_1.color.g, arg_170_1.hightColor1.g, var_173_3)
								local var_173_6 = Mathf.Lerp(iter_173_1.color.b, arg_170_1.hightColor1.b, var_173_3)

								iter_173_1.color = Color.New(var_173_4, var_173_5, var_173_6)
							else
								local var_173_7 = Mathf.Lerp(iter_173_1.color.r, 1, var_173_3)

								iter_173_1.color = Color.New(var_173_7, var_173_7, var_173_7)
							end
						end
					end
				end
			end

			if arg_170_1.time_ >= var_173_1 + var_173_2 and arg_170_1.time_ < var_173_1 + var_173_2 + arg_173_0 and not isNil(var_173_0) and arg_170_1.var_.actorSpriteComps10128 then
				for iter_173_2, iter_173_3 in pairs(arg_170_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_173_3 then
						if arg_170_1.isInRecall_ then
							iter_173_3.color = arg_170_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_173_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_170_1.var_.actorSpriteComps10128 = nil
			end

			local var_173_8 = arg_170_1.actors_["1095"]
			local var_173_9 = 0

			if var_173_9 < arg_170_1.time_ and arg_170_1.time_ <= var_173_9 + arg_173_0 and not isNil(var_173_8) and arg_170_1.var_.actorSpriteComps1095 == nil then
				arg_170_1.var_.actorSpriteComps1095 = var_173_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_173_10 = 0.2

			if var_173_9 <= arg_170_1.time_ and arg_170_1.time_ < var_173_9 + var_173_10 and not isNil(var_173_8) then
				local var_173_11 = (arg_170_1.time_ - var_173_9) / var_173_10

				if arg_170_1.var_.actorSpriteComps1095 then
					for iter_173_4, iter_173_5 in pairs(arg_170_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_173_5 then
							if arg_170_1.isInRecall_ then
								local var_173_12 = Mathf.Lerp(iter_173_5.color.r, arg_170_1.hightColor2.r, var_173_11)
								local var_173_13 = Mathf.Lerp(iter_173_5.color.g, arg_170_1.hightColor2.g, var_173_11)
								local var_173_14 = Mathf.Lerp(iter_173_5.color.b, arg_170_1.hightColor2.b, var_173_11)

								iter_173_5.color = Color.New(var_173_12, var_173_13, var_173_14)
							else
								local var_173_15 = Mathf.Lerp(iter_173_5.color.r, 0.5, var_173_11)

								iter_173_5.color = Color.New(var_173_15, var_173_15, var_173_15)
							end
						end
					end
				end
			end

			if arg_170_1.time_ >= var_173_9 + var_173_10 and arg_170_1.time_ < var_173_9 + var_173_10 + arg_173_0 and not isNil(var_173_8) and arg_170_1.var_.actorSpriteComps1095 then
				for iter_173_6, iter_173_7 in pairs(arg_170_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_173_7 then
						if arg_170_1.isInRecall_ then
							iter_173_7.color = arg_170_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_173_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_170_1.var_.actorSpriteComps1095 = nil
			end

			local var_173_16 = 0
			local var_173_17 = 0.7

			if var_173_16 < arg_170_1.time_ and arg_170_1.time_ <= var_173_16 + arg_173_0 then
				arg_170_1.talkMaxDuration = 0
				arg_170_1.dialogCg_.alpha = 1

				arg_170_1.dialog_:SetActive(true)
				SetActive(arg_170_1.leftNameGo_, true)

				local var_173_18 = arg_170_1:FormatText(StoryNameCfg[595].name)

				arg_170_1.leftNameTxt_.text = var_173_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_170_1.leftNameTxt_.transform)

				arg_170_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_170_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_170_1:RecordName(arg_170_1.leftNameTxt_.text)
				SetActive(arg_170_1.iconTrs_.gameObject, false)
				arg_170_1.callingController_:SetSelectedState("normal")

				local var_173_19 = arg_170_1:GetWordFromCfg(417161042)
				local var_173_20 = arg_170_1:FormatText(var_173_19.content)

				arg_170_1.text_.text = var_173_20

				LuaForUtil.ClearLinePrefixSymbol(arg_170_1.text_)

				local var_173_21 = 28
				local var_173_22 = utf8.len(var_173_20)
				local var_173_23 = var_173_21 <= 0 and var_173_17 or var_173_17 * (var_173_22 / var_173_21)

				if var_173_23 > 0 and var_173_17 < var_173_23 then
					arg_170_1.talkMaxDuration = var_173_23

					if var_173_23 + var_173_16 > arg_170_1.duration_ then
						arg_170_1.duration_ = var_173_23 + var_173_16
					end
				end

				arg_170_1.text_.text = var_173_20
				arg_170_1.typewritter.percent = 0

				arg_170_1.typewritter:SetDirty()
				arg_170_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161042", "story_v_out_417161.awb") ~= 0 then
					local var_173_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161042", "story_v_out_417161.awb") / 1000

					if var_173_24 + var_173_16 > arg_170_1.duration_ then
						arg_170_1.duration_ = var_173_24 + var_173_16
					end

					if var_173_19.prefab_name ~= "" and arg_170_1.actors_[var_173_19.prefab_name] ~= nil then
						local var_173_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_170_1.actors_[var_173_19.prefab_name].transform, "story_v_out_417161", "417161042", "story_v_out_417161.awb")

						arg_170_1:RecordAudio("417161042", var_173_25)
						arg_170_1:RecordAudio("417161042", var_173_25)
					else
						arg_170_1:AudioAction("play", "voice", "story_v_out_417161", "417161042", "story_v_out_417161.awb")
					end

					arg_170_1:RecordHistoryTalkVoice("story_v_out_417161", "417161042", "story_v_out_417161.awb")
				end

				arg_170_1:RecordContent(arg_170_1.text_.text)
			end

			local var_173_26 = math.max(var_173_17, arg_170_1.talkMaxDuration)

			if var_173_16 <= arg_170_1.time_ and arg_170_1.time_ < var_173_16 + var_173_26 then
				arg_170_1.typewritter.percent = (arg_170_1.time_ - var_173_16) / var_173_26

				arg_170_1.typewritter:SetDirty()
			end

			if arg_170_1.time_ >= var_173_16 + var_173_26 and arg_170_1.time_ < var_173_16 + var_173_26 + arg_173_0 then
				arg_170_1.typewritter.percent = 1

				arg_170_1.typewritter:SetDirty()
				arg_170_1:ShowNextGo(true)
			end
		end
	end,
	Play417161043 = function(arg_174_0, arg_174_1)
		arg_174_1.time_ = 0
		arg_174_1.frameCnt_ = 0
		arg_174_1.state_ = "playing"
		arg_174_1.curTalkId_ = 417161043
		arg_174_1.duration_ = 4.9

		local var_174_0 = {
			zh = 3.6,
			ja = 4.9
		}
		local var_174_1 = manager.audio:GetLocalizationFlag()

		if var_174_0[var_174_1] ~= nil then
			arg_174_1.duration_ = var_174_0[var_174_1]
		end

		SetActive(arg_174_1.tipsGo_, false)

		function arg_174_1.onSingleLineFinish_()
			arg_174_1.onSingleLineUpdate_ = nil
			arg_174_1.onSingleLineFinish_ = nil
			arg_174_1.state_ = "waiting"
		end

		function arg_174_1.playNext_(arg_176_0)
			if arg_176_0 == 1 then
				arg_174_0:Play417161044(arg_174_1)
			end
		end

		function arg_174_1.onSingleLineUpdate_(arg_177_0)
			local var_177_0 = 0
			local var_177_1 = 0.55

			if var_177_0 < arg_174_1.time_ and arg_174_1.time_ <= var_177_0 + arg_177_0 then
				arg_174_1.talkMaxDuration = 0
				arg_174_1.dialogCg_.alpha = 1

				arg_174_1.dialog_:SetActive(true)
				SetActive(arg_174_1.leftNameGo_, true)

				local var_177_2 = arg_174_1:FormatText(StoryNameCfg[595].name)

				arg_174_1.leftNameTxt_.text = var_177_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_174_1.leftNameTxt_.transform)

				arg_174_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_174_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_174_1:RecordName(arg_174_1.leftNameTxt_.text)
				SetActive(arg_174_1.iconTrs_.gameObject, false)
				arg_174_1.callingController_:SetSelectedState("normal")

				local var_177_3 = arg_174_1:GetWordFromCfg(417161043)
				local var_177_4 = arg_174_1:FormatText(var_177_3.content)

				arg_174_1.text_.text = var_177_4

				LuaForUtil.ClearLinePrefixSymbol(arg_174_1.text_)

				local var_177_5 = 22
				local var_177_6 = utf8.len(var_177_4)
				local var_177_7 = var_177_5 <= 0 and var_177_1 or var_177_1 * (var_177_6 / var_177_5)

				if var_177_7 > 0 and var_177_1 < var_177_7 then
					arg_174_1.talkMaxDuration = var_177_7

					if var_177_7 + var_177_0 > arg_174_1.duration_ then
						arg_174_1.duration_ = var_177_7 + var_177_0
					end
				end

				arg_174_1.text_.text = var_177_4
				arg_174_1.typewritter.percent = 0

				arg_174_1.typewritter:SetDirty()
				arg_174_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161043", "story_v_out_417161.awb") ~= 0 then
					local var_177_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161043", "story_v_out_417161.awb") / 1000

					if var_177_8 + var_177_0 > arg_174_1.duration_ then
						arg_174_1.duration_ = var_177_8 + var_177_0
					end

					if var_177_3.prefab_name ~= "" and arg_174_1.actors_[var_177_3.prefab_name] ~= nil then
						local var_177_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_174_1.actors_[var_177_3.prefab_name].transform, "story_v_out_417161", "417161043", "story_v_out_417161.awb")

						arg_174_1:RecordAudio("417161043", var_177_9)
						arg_174_1:RecordAudio("417161043", var_177_9)
					else
						arg_174_1:AudioAction("play", "voice", "story_v_out_417161", "417161043", "story_v_out_417161.awb")
					end

					arg_174_1:RecordHistoryTalkVoice("story_v_out_417161", "417161043", "story_v_out_417161.awb")
				end

				arg_174_1:RecordContent(arg_174_1.text_.text)
			end

			local var_177_10 = math.max(var_177_1, arg_174_1.talkMaxDuration)

			if var_177_0 <= arg_174_1.time_ and arg_174_1.time_ < var_177_0 + var_177_10 then
				arg_174_1.typewritter.percent = (arg_174_1.time_ - var_177_0) / var_177_10

				arg_174_1.typewritter:SetDirty()
			end

			if arg_174_1.time_ >= var_177_0 + var_177_10 and arg_174_1.time_ < var_177_0 + var_177_10 + arg_177_0 then
				arg_174_1.typewritter.percent = 1

				arg_174_1.typewritter:SetDirty()
				arg_174_1:ShowNextGo(true)
			end
		end
	end,
	Play417161044 = function(arg_178_0, arg_178_1)
		arg_178_1.time_ = 0
		arg_178_1.frameCnt_ = 0
		arg_178_1.state_ = "playing"
		arg_178_1.curTalkId_ = 417161044
		arg_178_1.duration_ = 7.37

		local var_178_0 = {
			zh = 4.466,
			ja = 7.366
		}
		local var_178_1 = manager.audio:GetLocalizationFlag()

		if var_178_0[var_178_1] ~= nil then
			arg_178_1.duration_ = var_178_0[var_178_1]
		end

		SetActive(arg_178_1.tipsGo_, false)

		function arg_178_1.onSingleLineFinish_()
			arg_178_1.onSingleLineUpdate_ = nil
			arg_178_1.onSingleLineFinish_ = nil
			arg_178_1.state_ = "waiting"
		end

		function arg_178_1.playNext_(arg_180_0)
			if arg_180_0 == 1 then
				arg_178_0:Play417161045(arg_178_1)
			end
		end

		function arg_178_1.onSingleLineUpdate_(arg_181_0)
			local var_181_0 = arg_178_1.actors_["10128"]
			local var_181_1 = 0

			if var_181_1 < arg_178_1.time_ and arg_178_1.time_ <= var_181_1 + arg_181_0 and not isNil(var_181_0) and arg_178_1.var_.actorSpriteComps10128 == nil then
				arg_178_1.var_.actorSpriteComps10128 = var_181_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_181_2 = 0.2

			if var_181_1 <= arg_178_1.time_ and arg_178_1.time_ < var_181_1 + var_181_2 and not isNil(var_181_0) then
				local var_181_3 = (arg_178_1.time_ - var_181_1) / var_181_2

				if arg_178_1.var_.actorSpriteComps10128 then
					for iter_181_0, iter_181_1 in pairs(arg_178_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_181_1 then
							if arg_178_1.isInRecall_ then
								local var_181_4 = Mathf.Lerp(iter_181_1.color.r, arg_178_1.hightColor2.r, var_181_3)
								local var_181_5 = Mathf.Lerp(iter_181_1.color.g, arg_178_1.hightColor2.g, var_181_3)
								local var_181_6 = Mathf.Lerp(iter_181_1.color.b, arg_178_1.hightColor2.b, var_181_3)

								iter_181_1.color = Color.New(var_181_4, var_181_5, var_181_6)
							else
								local var_181_7 = Mathf.Lerp(iter_181_1.color.r, 0.5, var_181_3)

								iter_181_1.color = Color.New(var_181_7, var_181_7, var_181_7)
							end
						end
					end
				end
			end

			if arg_178_1.time_ >= var_181_1 + var_181_2 and arg_178_1.time_ < var_181_1 + var_181_2 + arg_181_0 and not isNil(var_181_0) and arg_178_1.var_.actorSpriteComps10128 then
				for iter_181_2, iter_181_3 in pairs(arg_178_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_181_3 then
						if arg_178_1.isInRecall_ then
							iter_181_3.color = arg_178_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_181_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_178_1.var_.actorSpriteComps10128 = nil
			end

			local var_181_8 = arg_178_1.actors_["1095"]
			local var_181_9 = 0

			if var_181_9 < arg_178_1.time_ and arg_178_1.time_ <= var_181_9 + arg_181_0 then
				local var_181_10 = var_181_8:GetComponentInChildren(typeof(CanvasGroup))

				if var_181_10 then
					arg_178_1.var_.alphaOldValue1095 = var_181_10.alpha
					arg_178_1.var_.characterEffect1095 = var_181_10
				end
			end

			local var_181_11 = 0.2

			if var_181_9 <= arg_178_1.time_ and arg_178_1.time_ < var_181_9 + var_181_11 then
				local var_181_12 = (arg_178_1.time_ - var_181_9) / var_181_11
				local var_181_13 = Mathf.Lerp(arg_178_1.var_.alphaOldValue1095, 0.6, var_181_12)

				if arg_178_1.var_.characterEffect1095 then
					arg_178_1.var_.characterEffect1095.alpha = var_181_13
				end
			end

			if arg_178_1.time_ >= var_181_9 + var_181_11 and arg_178_1.time_ < var_181_9 + var_181_11 + arg_181_0 and arg_178_1.var_.characterEffect1095 then
				arg_178_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_181_14 = arg_178_1.actors_["1095"]
			local var_181_15 = 0

			if var_181_15 < arg_178_1.time_ and arg_178_1.time_ <= var_181_15 + arg_181_0 then
				arg_178_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_181_16 = 0
			local var_181_17 = 0.55

			if var_181_16 < arg_178_1.time_ and arg_178_1.time_ <= var_181_16 + arg_181_0 then
				arg_178_1.talkMaxDuration = 0
				arg_178_1.dialogCg_.alpha = 1

				arg_178_1.dialog_:SetActive(true)
				SetActive(arg_178_1.leftNameGo_, true)

				local var_181_18 = arg_178_1:FormatText(StoryNameCfg[471].name)

				arg_178_1.leftNameTxt_.text = var_181_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_178_1.leftNameTxt_.transform)

				arg_178_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_178_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_178_1:RecordName(arg_178_1.leftNameTxt_.text)
				SetActive(arg_178_1.iconTrs_.gameObject, false)
				arg_178_1.callingController_:SetSelectedState("normal")

				local var_181_19 = arg_178_1:GetWordFromCfg(417161044)
				local var_181_20 = arg_178_1:FormatText(var_181_19.content)

				arg_178_1.text_.text = var_181_20

				LuaForUtil.ClearLinePrefixSymbol(arg_178_1.text_)

				local var_181_21 = 22
				local var_181_22 = utf8.len(var_181_20)
				local var_181_23 = var_181_21 <= 0 and var_181_17 or var_181_17 * (var_181_22 / var_181_21)

				if var_181_23 > 0 and var_181_17 < var_181_23 then
					arg_178_1.talkMaxDuration = var_181_23

					if var_181_23 + var_181_16 > arg_178_1.duration_ then
						arg_178_1.duration_ = var_181_23 + var_181_16
					end
				end

				arg_178_1.text_.text = var_181_20
				arg_178_1.typewritter.percent = 0

				arg_178_1.typewritter:SetDirty()
				arg_178_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161044", "story_v_out_417161.awb") ~= 0 then
					local var_181_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161044", "story_v_out_417161.awb") / 1000

					if var_181_24 + var_181_16 > arg_178_1.duration_ then
						arg_178_1.duration_ = var_181_24 + var_181_16
					end

					if var_181_19.prefab_name ~= "" and arg_178_1.actors_[var_181_19.prefab_name] ~= nil then
						local var_181_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_178_1.actors_[var_181_19.prefab_name].transform, "story_v_out_417161", "417161044", "story_v_out_417161.awb")

						arg_178_1:RecordAudio("417161044", var_181_25)
						arg_178_1:RecordAudio("417161044", var_181_25)
					else
						arg_178_1:AudioAction("play", "voice", "story_v_out_417161", "417161044", "story_v_out_417161.awb")
					end

					arg_178_1:RecordHistoryTalkVoice("story_v_out_417161", "417161044", "story_v_out_417161.awb")
				end

				arg_178_1:RecordContent(arg_178_1.text_.text)
			end

			local var_181_26 = math.max(var_181_17, arg_178_1.talkMaxDuration)

			if var_181_16 <= arg_178_1.time_ and arg_178_1.time_ < var_181_16 + var_181_26 then
				arg_178_1.typewritter.percent = (arg_178_1.time_ - var_181_16) / var_181_26

				arg_178_1.typewritter:SetDirty()
			end

			if arg_178_1.time_ >= var_181_16 + var_181_26 and arg_178_1.time_ < var_181_16 + var_181_26 + arg_181_0 then
				arg_178_1.typewritter.percent = 1

				arg_178_1.typewritter:SetDirty()
				arg_178_1:ShowNextGo(true)
			end
		end
	end,
	Play417161045 = function(arg_182_0, arg_182_1)
		arg_182_1.time_ = 0
		arg_182_1.frameCnt_ = 0
		arg_182_1.state_ = "playing"
		arg_182_1.curTalkId_ = 417161045
		arg_182_1.duration_ = 7.47

		local var_182_0 = {
			zh = 7.466,
			ja = 6.733
		}
		local var_182_1 = manager.audio:GetLocalizationFlag()

		if var_182_0[var_182_1] ~= nil then
			arg_182_1.duration_ = var_182_0[var_182_1]
		end

		SetActive(arg_182_1.tipsGo_, false)

		function arg_182_1.onSingleLineFinish_()
			arg_182_1.onSingleLineUpdate_ = nil
			arg_182_1.onSingleLineFinish_ = nil
			arg_182_1.state_ = "waiting"
		end

		function arg_182_1.playNext_(arg_184_0)
			if arg_184_0 == 1 then
				arg_182_0:Play417161046(arg_182_1)
			end
		end

		function arg_182_1.onSingleLineUpdate_(arg_185_0)
			local var_185_0 = arg_182_1.actors_["1095"]
			local var_185_1 = 0

			if var_185_1 < arg_182_1.time_ and arg_182_1.time_ <= var_185_1 + arg_185_0 then
				arg_182_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_185_2 = arg_182_1.actors_["1095"]
			local var_185_3 = 0

			if var_185_3 < arg_182_1.time_ and arg_182_1.time_ <= var_185_3 + arg_185_0 then
				local var_185_4 = var_185_2:GetComponentInChildren(typeof(CanvasGroup))

				if var_185_4 then
					arg_182_1.var_.alphaOldValue1095 = var_185_4.alpha
					arg_182_1.var_.characterEffect1095 = var_185_4
				end
			end

			local var_185_5 = 0.2

			if var_185_3 <= arg_182_1.time_ and arg_182_1.time_ < var_185_3 + var_185_5 then
				local var_185_6 = (arg_182_1.time_ - var_185_3) / var_185_5
				local var_185_7 = Mathf.Lerp(arg_182_1.var_.alphaOldValue1095, 0.6, var_185_6)

				if arg_182_1.var_.characterEffect1095 then
					arg_182_1.var_.characterEffect1095.alpha = var_185_7
				end
			end

			if arg_182_1.time_ >= var_185_3 + var_185_5 and arg_182_1.time_ < var_185_3 + var_185_5 + arg_185_0 and arg_182_1.var_.characterEffect1095 then
				arg_182_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_185_8 = 0
			local var_185_9 = 0.725

			if var_185_8 < arg_182_1.time_ and arg_182_1.time_ <= var_185_8 + arg_185_0 then
				arg_182_1.talkMaxDuration = 0
				arg_182_1.dialogCg_.alpha = 1

				arg_182_1.dialog_:SetActive(true)
				SetActive(arg_182_1.leftNameGo_, true)

				local var_185_10 = arg_182_1:FormatText(StoryNameCfg[471].name)

				arg_182_1.leftNameTxt_.text = var_185_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_182_1.leftNameTxt_.transform)

				arg_182_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_182_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_182_1:RecordName(arg_182_1.leftNameTxt_.text)
				SetActive(arg_182_1.iconTrs_.gameObject, false)
				arg_182_1.callingController_:SetSelectedState("normal")

				local var_185_11 = arg_182_1:GetWordFromCfg(417161045)
				local var_185_12 = arg_182_1:FormatText(var_185_11.content)

				arg_182_1.text_.text = var_185_12

				LuaForUtil.ClearLinePrefixSymbol(arg_182_1.text_)

				local var_185_13 = 29
				local var_185_14 = utf8.len(var_185_12)
				local var_185_15 = var_185_13 <= 0 and var_185_9 or var_185_9 * (var_185_14 / var_185_13)

				if var_185_15 > 0 and var_185_9 < var_185_15 then
					arg_182_1.talkMaxDuration = var_185_15

					if var_185_15 + var_185_8 > arg_182_1.duration_ then
						arg_182_1.duration_ = var_185_15 + var_185_8
					end
				end

				arg_182_1.text_.text = var_185_12
				arg_182_1.typewritter.percent = 0

				arg_182_1.typewritter:SetDirty()
				arg_182_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161045", "story_v_out_417161.awb") ~= 0 then
					local var_185_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161045", "story_v_out_417161.awb") / 1000

					if var_185_16 + var_185_8 > arg_182_1.duration_ then
						arg_182_1.duration_ = var_185_16 + var_185_8
					end

					if var_185_11.prefab_name ~= "" and arg_182_1.actors_[var_185_11.prefab_name] ~= nil then
						local var_185_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_182_1.actors_[var_185_11.prefab_name].transform, "story_v_out_417161", "417161045", "story_v_out_417161.awb")

						arg_182_1:RecordAudio("417161045", var_185_17)
						arg_182_1:RecordAudio("417161045", var_185_17)
					else
						arg_182_1:AudioAction("play", "voice", "story_v_out_417161", "417161045", "story_v_out_417161.awb")
					end

					arg_182_1:RecordHistoryTalkVoice("story_v_out_417161", "417161045", "story_v_out_417161.awb")
				end

				arg_182_1:RecordContent(arg_182_1.text_.text)
			end

			local var_185_18 = math.max(var_185_9, arg_182_1.talkMaxDuration)

			if var_185_8 <= arg_182_1.time_ and arg_182_1.time_ < var_185_8 + var_185_18 then
				arg_182_1.typewritter.percent = (arg_182_1.time_ - var_185_8) / var_185_18

				arg_182_1.typewritter:SetDirty()
			end

			if arg_182_1.time_ >= var_185_8 + var_185_18 and arg_182_1.time_ < var_185_8 + var_185_18 + arg_185_0 then
				arg_182_1.typewritter.percent = 1

				arg_182_1.typewritter:SetDirty()
				arg_182_1:ShowNextGo(true)
			end
		end
	end,
	Play417161046 = function(arg_186_0, arg_186_1)
		arg_186_1.time_ = 0
		arg_186_1.frameCnt_ = 0
		arg_186_1.state_ = "playing"
		arg_186_1.curTalkId_ = 417161046
		arg_186_1.duration_ = 5

		local var_186_0 = {
			zh = 3.266,
			ja = 5
		}
		local var_186_1 = manager.audio:GetLocalizationFlag()

		if var_186_0[var_186_1] ~= nil then
			arg_186_1.duration_ = var_186_0[var_186_1]
		end

		SetActive(arg_186_1.tipsGo_, false)

		function arg_186_1.onSingleLineFinish_()
			arg_186_1.onSingleLineUpdate_ = nil
			arg_186_1.onSingleLineFinish_ = nil
			arg_186_1.state_ = "waiting"
		end

		function arg_186_1.playNext_(arg_188_0)
			if arg_188_0 == 1 then
				arg_186_0:Play417161047(arg_186_1)
			end
		end

		function arg_186_1.onSingleLineUpdate_(arg_189_0)
			local var_189_0 = arg_186_1.actors_["10128"]
			local var_189_1 = 0

			if var_189_1 < arg_186_1.time_ and arg_186_1.time_ <= var_189_1 + arg_189_0 and not isNil(var_189_0) and arg_186_1.var_.actorSpriteComps10128 == nil then
				arg_186_1.var_.actorSpriteComps10128 = var_189_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_189_2 = 0.2

			if var_189_1 <= arg_186_1.time_ and arg_186_1.time_ < var_189_1 + var_189_2 and not isNil(var_189_0) then
				local var_189_3 = (arg_186_1.time_ - var_189_1) / var_189_2

				if arg_186_1.var_.actorSpriteComps10128 then
					for iter_189_0, iter_189_1 in pairs(arg_186_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_189_1 then
							if arg_186_1.isInRecall_ then
								local var_189_4 = Mathf.Lerp(iter_189_1.color.r, arg_186_1.hightColor1.r, var_189_3)
								local var_189_5 = Mathf.Lerp(iter_189_1.color.g, arg_186_1.hightColor1.g, var_189_3)
								local var_189_6 = Mathf.Lerp(iter_189_1.color.b, arg_186_1.hightColor1.b, var_189_3)

								iter_189_1.color = Color.New(var_189_4, var_189_5, var_189_6)
							else
								local var_189_7 = Mathf.Lerp(iter_189_1.color.r, 1, var_189_3)

								iter_189_1.color = Color.New(var_189_7, var_189_7, var_189_7)
							end
						end
					end
				end
			end

			if arg_186_1.time_ >= var_189_1 + var_189_2 and arg_186_1.time_ < var_189_1 + var_189_2 + arg_189_0 and not isNil(var_189_0) and arg_186_1.var_.actorSpriteComps10128 then
				for iter_189_2, iter_189_3 in pairs(arg_186_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_189_3 then
						if arg_186_1.isInRecall_ then
							iter_189_3.color = arg_186_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_189_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_186_1.var_.actorSpriteComps10128 = nil
			end

			local var_189_8 = arg_186_1.actors_["1095"]
			local var_189_9 = 0

			if var_189_9 < arg_186_1.time_ and arg_186_1.time_ <= var_189_9 + arg_189_0 and not isNil(var_189_8) and arg_186_1.var_.actorSpriteComps1095 == nil then
				arg_186_1.var_.actorSpriteComps1095 = var_189_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_189_10 = 0.2

			if var_189_9 <= arg_186_1.time_ and arg_186_1.time_ < var_189_9 + var_189_10 and not isNil(var_189_8) then
				local var_189_11 = (arg_186_1.time_ - var_189_9) / var_189_10

				if arg_186_1.var_.actorSpriteComps1095 then
					for iter_189_4, iter_189_5 in pairs(arg_186_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_189_5 then
							if arg_186_1.isInRecall_ then
								local var_189_12 = Mathf.Lerp(iter_189_5.color.r, arg_186_1.hightColor2.r, var_189_11)
								local var_189_13 = Mathf.Lerp(iter_189_5.color.g, arg_186_1.hightColor2.g, var_189_11)
								local var_189_14 = Mathf.Lerp(iter_189_5.color.b, arg_186_1.hightColor2.b, var_189_11)

								iter_189_5.color = Color.New(var_189_12, var_189_13, var_189_14)
							else
								local var_189_15 = Mathf.Lerp(iter_189_5.color.r, 0.5, var_189_11)

								iter_189_5.color = Color.New(var_189_15, var_189_15, var_189_15)
							end
						end
					end
				end
			end

			if arg_186_1.time_ >= var_189_9 + var_189_10 and arg_186_1.time_ < var_189_9 + var_189_10 + arg_189_0 and not isNil(var_189_8) and arg_186_1.var_.actorSpriteComps1095 then
				for iter_189_6, iter_189_7 in pairs(arg_186_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_189_7 then
						if arg_186_1.isInRecall_ then
							iter_189_7.color = arg_186_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_189_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_186_1.var_.actorSpriteComps1095 = nil
			end

			local var_189_16 = 0
			local var_189_17 = 0.45

			if var_189_16 < arg_186_1.time_ and arg_186_1.time_ <= var_189_16 + arg_189_0 then
				arg_186_1.talkMaxDuration = 0
				arg_186_1.dialogCg_.alpha = 1

				arg_186_1.dialog_:SetActive(true)
				SetActive(arg_186_1.leftNameGo_, true)

				local var_189_18 = arg_186_1:FormatText(StoryNameCfg[595].name)

				arg_186_1.leftNameTxt_.text = var_189_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_186_1.leftNameTxt_.transform)

				arg_186_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_186_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_186_1:RecordName(arg_186_1.leftNameTxt_.text)
				SetActive(arg_186_1.iconTrs_.gameObject, false)
				arg_186_1.callingController_:SetSelectedState("normal")

				local var_189_19 = arg_186_1:GetWordFromCfg(417161046)
				local var_189_20 = arg_186_1:FormatText(var_189_19.content)

				arg_186_1.text_.text = var_189_20

				LuaForUtil.ClearLinePrefixSymbol(arg_186_1.text_)

				local var_189_21 = 18
				local var_189_22 = utf8.len(var_189_20)
				local var_189_23 = var_189_21 <= 0 and var_189_17 or var_189_17 * (var_189_22 / var_189_21)

				if var_189_23 > 0 and var_189_17 < var_189_23 then
					arg_186_1.talkMaxDuration = var_189_23

					if var_189_23 + var_189_16 > arg_186_1.duration_ then
						arg_186_1.duration_ = var_189_23 + var_189_16
					end
				end

				arg_186_1.text_.text = var_189_20
				arg_186_1.typewritter.percent = 0

				arg_186_1.typewritter:SetDirty()
				arg_186_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161046", "story_v_out_417161.awb") ~= 0 then
					local var_189_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161046", "story_v_out_417161.awb") / 1000

					if var_189_24 + var_189_16 > arg_186_1.duration_ then
						arg_186_1.duration_ = var_189_24 + var_189_16
					end

					if var_189_19.prefab_name ~= "" and arg_186_1.actors_[var_189_19.prefab_name] ~= nil then
						local var_189_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_186_1.actors_[var_189_19.prefab_name].transform, "story_v_out_417161", "417161046", "story_v_out_417161.awb")

						arg_186_1:RecordAudio("417161046", var_189_25)
						arg_186_1:RecordAudio("417161046", var_189_25)
					else
						arg_186_1:AudioAction("play", "voice", "story_v_out_417161", "417161046", "story_v_out_417161.awb")
					end

					arg_186_1:RecordHistoryTalkVoice("story_v_out_417161", "417161046", "story_v_out_417161.awb")
				end

				arg_186_1:RecordContent(arg_186_1.text_.text)
			end

			local var_189_26 = math.max(var_189_17, arg_186_1.talkMaxDuration)

			if var_189_16 <= arg_186_1.time_ and arg_186_1.time_ < var_189_16 + var_189_26 then
				arg_186_1.typewritter.percent = (arg_186_1.time_ - var_189_16) / var_189_26

				arg_186_1.typewritter:SetDirty()
			end

			if arg_186_1.time_ >= var_189_16 + var_189_26 and arg_186_1.time_ < var_189_16 + var_189_26 + arg_189_0 then
				arg_186_1.typewritter.percent = 1

				arg_186_1.typewritter:SetDirty()
				arg_186_1:ShowNextGo(true)
			end
		end
	end,
	Play417161047 = function(arg_190_0, arg_190_1)
		arg_190_1.time_ = 0
		arg_190_1.frameCnt_ = 0
		arg_190_1.state_ = "playing"
		arg_190_1.curTalkId_ = 417161047
		arg_190_1.duration_ = 5.57

		local var_190_0 = {
			zh = 3.1,
			ja = 5.566
		}
		local var_190_1 = manager.audio:GetLocalizationFlag()

		if var_190_0[var_190_1] ~= nil then
			arg_190_1.duration_ = var_190_0[var_190_1]
		end

		SetActive(arg_190_1.tipsGo_, false)

		function arg_190_1.onSingleLineFinish_()
			arg_190_1.onSingleLineUpdate_ = nil
			arg_190_1.onSingleLineFinish_ = nil
			arg_190_1.state_ = "waiting"
		end

		function arg_190_1.playNext_(arg_192_0)
			if arg_192_0 == 1 then
				arg_190_0:Play417161048(arg_190_1)
			end
		end

		function arg_190_1.onSingleLineUpdate_(arg_193_0)
			local var_193_0 = arg_190_1.actors_["10128"]
			local var_193_1 = 0

			if var_193_1 < arg_190_1.time_ and arg_190_1.time_ <= var_193_1 + arg_193_0 and not isNil(var_193_0) and arg_190_1.var_.actorSpriteComps10128 == nil then
				arg_190_1.var_.actorSpriteComps10128 = var_193_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_193_2 = 0.2

			if var_193_1 <= arg_190_1.time_ and arg_190_1.time_ < var_193_1 + var_193_2 and not isNil(var_193_0) then
				local var_193_3 = (arg_190_1.time_ - var_193_1) / var_193_2

				if arg_190_1.var_.actorSpriteComps10128 then
					for iter_193_0, iter_193_1 in pairs(arg_190_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_193_1 then
							if arg_190_1.isInRecall_ then
								local var_193_4 = Mathf.Lerp(iter_193_1.color.r, arg_190_1.hightColor2.r, var_193_3)
								local var_193_5 = Mathf.Lerp(iter_193_1.color.g, arg_190_1.hightColor2.g, var_193_3)
								local var_193_6 = Mathf.Lerp(iter_193_1.color.b, arg_190_1.hightColor2.b, var_193_3)

								iter_193_1.color = Color.New(var_193_4, var_193_5, var_193_6)
							else
								local var_193_7 = Mathf.Lerp(iter_193_1.color.r, 0.5, var_193_3)

								iter_193_1.color = Color.New(var_193_7, var_193_7, var_193_7)
							end
						end
					end
				end
			end

			if arg_190_1.time_ >= var_193_1 + var_193_2 and arg_190_1.time_ < var_193_1 + var_193_2 + arg_193_0 and not isNil(var_193_0) and arg_190_1.var_.actorSpriteComps10128 then
				for iter_193_2, iter_193_3 in pairs(arg_190_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_193_3 then
						if arg_190_1.isInRecall_ then
							iter_193_3.color = arg_190_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_193_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_190_1.var_.actorSpriteComps10128 = nil
			end

			local var_193_8 = arg_190_1.actors_["1095"]
			local var_193_9 = 0

			if var_193_9 < arg_190_1.time_ and arg_190_1.time_ <= var_193_9 + arg_193_0 then
				local var_193_10 = var_193_8:GetComponentInChildren(typeof(CanvasGroup))

				if var_193_10 then
					arg_190_1.var_.alphaOldValue1095 = var_193_10.alpha
					arg_190_1.var_.characterEffect1095 = var_193_10
				end
			end

			local var_193_11 = 0.2

			if var_193_9 <= arg_190_1.time_ and arg_190_1.time_ < var_193_9 + var_193_11 then
				local var_193_12 = (arg_190_1.time_ - var_193_9) / var_193_11
				local var_193_13 = Mathf.Lerp(arg_190_1.var_.alphaOldValue1095, 0.6, var_193_12)

				if arg_190_1.var_.characterEffect1095 then
					arg_190_1.var_.characterEffect1095.alpha = var_193_13
				end
			end

			if arg_190_1.time_ >= var_193_9 + var_193_11 and arg_190_1.time_ < var_193_9 + var_193_11 + arg_193_0 and arg_190_1.var_.characterEffect1095 then
				arg_190_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_193_14 = arg_190_1.actors_["1095"]
			local var_193_15 = 0

			if var_193_15 < arg_190_1.time_ and arg_190_1.time_ <= var_193_15 + arg_193_0 then
				arg_190_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_193_16 = 0
			local var_193_17 = 0.375

			if var_193_16 < arg_190_1.time_ and arg_190_1.time_ <= var_193_16 + arg_193_0 then
				arg_190_1.talkMaxDuration = 0
				arg_190_1.dialogCg_.alpha = 1

				arg_190_1.dialog_:SetActive(true)
				SetActive(arg_190_1.leftNameGo_, true)

				local var_193_18 = arg_190_1:FormatText(StoryNameCfg[471].name)

				arg_190_1.leftNameTxt_.text = var_193_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_190_1.leftNameTxt_.transform)

				arg_190_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_190_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_190_1:RecordName(arg_190_1.leftNameTxt_.text)
				SetActive(arg_190_1.iconTrs_.gameObject, false)
				arg_190_1.callingController_:SetSelectedState("normal")

				local var_193_19 = arg_190_1:GetWordFromCfg(417161047)
				local var_193_20 = arg_190_1:FormatText(var_193_19.content)

				arg_190_1.text_.text = var_193_20

				LuaForUtil.ClearLinePrefixSymbol(arg_190_1.text_)

				local var_193_21 = 15
				local var_193_22 = utf8.len(var_193_20)
				local var_193_23 = var_193_21 <= 0 and var_193_17 or var_193_17 * (var_193_22 / var_193_21)

				if var_193_23 > 0 and var_193_17 < var_193_23 then
					arg_190_1.talkMaxDuration = var_193_23

					if var_193_23 + var_193_16 > arg_190_1.duration_ then
						arg_190_1.duration_ = var_193_23 + var_193_16
					end
				end

				arg_190_1.text_.text = var_193_20
				arg_190_1.typewritter.percent = 0

				arg_190_1.typewritter:SetDirty()
				arg_190_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161047", "story_v_out_417161.awb") ~= 0 then
					local var_193_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161047", "story_v_out_417161.awb") / 1000

					if var_193_24 + var_193_16 > arg_190_1.duration_ then
						arg_190_1.duration_ = var_193_24 + var_193_16
					end

					if var_193_19.prefab_name ~= "" and arg_190_1.actors_[var_193_19.prefab_name] ~= nil then
						local var_193_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_190_1.actors_[var_193_19.prefab_name].transform, "story_v_out_417161", "417161047", "story_v_out_417161.awb")

						arg_190_1:RecordAudio("417161047", var_193_25)
						arg_190_1:RecordAudio("417161047", var_193_25)
					else
						arg_190_1:AudioAction("play", "voice", "story_v_out_417161", "417161047", "story_v_out_417161.awb")
					end

					arg_190_1:RecordHistoryTalkVoice("story_v_out_417161", "417161047", "story_v_out_417161.awb")
				end

				arg_190_1:RecordContent(arg_190_1.text_.text)
			end

			local var_193_26 = math.max(var_193_17, arg_190_1.talkMaxDuration)

			if var_193_16 <= arg_190_1.time_ and arg_190_1.time_ < var_193_16 + var_193_26 then
				arg_190_1.typewritter.percent = (arg_190_1.time_ - var_193_16) / var_193_26

				arg_190_1.typewritter:SetDirty()
			end

			if arg_190_1.time_ >= var_193_16 + var_193_26 and arg_190_1.time_ < var_193_16 + var_193_26 + arg_193_0 then
				arg_190_1.typewritter.percent = 1

				arg_190_1.typewritter:SetDirty()
				arg_190_1:ShowNextGo(true)
			end
		end
	end,
	Play417161048 = function(arg_194_0, arg_194_1)
		arg_194_1.time_ = 0
		arg_194_1.frameCnt_ = 0
		arg_194_1.state_ = "playing"
		arg_194_1.curTalkId_ = 417161048
		arg_194_1.duration_ = 3.5

		local var_194_0 = {
			zh = 3.2,
			ja = 3.5
		}
		local var_194_1 = manager.audio:GetLocalizationFlag()

		if var_194_0[var_194_1] ~= nil then
			arg_194_1.duration_ = var_194_0[var_194_1]
		end

		SetActive(arg_194_1.tipsGo_, false)

		function arg_194_1.onSingleLineFinish_()
			arg_194_1.onSingleLineUpdate_ = nil
			arg_194_1.onSingleLineFinish_ = nil
			arg_194_1.state_ = "waiting"
		end

		function arg_194_1.playNext_(arg_196_0)
			if arg_196_0 == 1 then
				arg_194_0:Play417161049(arg_194_1)
			end
		end

		function arg_194_1.onSingleLineUpdate_(arg_197_0)
			local var_197_0 = arg_194_1.actors_["10128"]
			local var_197_1 = 0

			if var_197_1 < arg_194_1.time_ and arg_194_1.time_ <= var_197_1 + arg_197_0 and not isNil(var_197_0) and arg_194_1.var_.actorSpriteComps10128 == nil then
				arg_194_1.var_.actorSpriteComps10128 = var_197_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_197_2 = 0.2

			if var_197_1 <= arg_194_1.time_ and arg_194_1.time_ < var_197_1 + var_197_2 and not isNil(var_197_0) then
				local var_197_3 = (arg_194_1.time_ - var_197_1) / var_197_2

				if arg_194_1.var_.actorSpriteComps10128 then
					for iter_197_0, iter_197_1 in pairs(arg_194_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_197_1 then
							if arg_194_1.isInRecall_ then
								local var_197_4 = Mathf.Lerp(iter_197_1.color.r, arg_194_1.hightColor1.r, var_197_3)
								local var_197_5 = Mathf.Lerp(iter_197_1.color.g, arg_194_1.hightColor1.g, var_197_3)
								local var_197_6 = Mathf.Lerp(iter_197_1.color.b, arg_194_1.hightColor1.b, var_197_3)

								iter_197_1.color = Color.New(var_197_4, var_197_5, var_197_6)
							else
								local var_197_7 = Mathf.Lerp(iter_197_1.color.r, 1, var_197_3)

								iter_197_1.color = Color.New(var_197_7, var_197_7, var_197_7)
							end
						end
					end
				end
			end

			if arg_194_1.time_ >= var_197_1 + var_197_2 and arg_194_1.time_ < var_197_1 + var_197_2 + arg_197_0 and not isNil(var_197_0) and arg_194_1.var_.actorSpriteComps10128 then
				for iter_197_2, iter_197_3 in pairs(arg_194_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_197_3 then
						if arg_194_1.isInRecall_ then
							iter_197_3.color = arg_194_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_197_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_194_1.var_.actorSpriteComps10128 = nil
			end

			local var_197_8 = arg_194_1.actors_["1095"]
			local var_197_9 = 0

			if var_197_9 < arg_194_1.time_ and arg_194_1.time_ <= var_197_9 + arg_197_0 and not isNil(var_197_8) and arg_194_1.var_.actorSpriteComps1095 == nil then
				arg_194_1.var_.actorSpriteComps1095 = var_197_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_197_10 = 0.2

			if var_197_9 <= arg_194_1.time_ and arg_194_1.time_ < var_197_9 + var_197_10 and not isNil(var_197_8) then
				local var_197_11 = (arg_194_1.time_ - var_197_9) / var_197_10

				if arg_194_1.var_.actorSpriteComps1095 then
					for iter_197_4, iter_197_5 in pairs(arg_194_1.var_.actorSpriteComps1095:ToTable()) do
						if iter_197_5 then
							if arg_194_1.isInRecall_ then
								local var_197_12 = Mathf.Lerp(iter_197_5.color.r, arg_194_1.hightColor2.r, var_197_11)
								local var_197_13 = Mathf.Lerp(iter_197_5.color.g, arg_194_1.hightColor2.g, var_197_11)
								local var_197_14 = Mathf.Lerp(iter_197_5.color.b, arg_194_1.hightColor2.b, var_197_11)

								iter_197_5.color = Color.New(var_197_12, var_197_13, var_197_14)
							else
								local var_197_15 = Mathf.Lerp(iter_197_5.color.r, 0.5, var_197_11)

								iter_197_5.color = Color.New(var_197_15, var_197_15, var_197_15)
							end
						end
					end
				end
			end

			if arg_194_1.time_ >= var_197_9 + var_197_10 and arg_194_1.time_ < var_197_9 + var_197_10 + arg_197_0 and not isNil(var_197_8) and arg_194_1.var_.actorSpriteComps1095 then
				for iter_197_6, iter_197_7 in pairs(arg_194_1.var_.actorSpriteComps1095:ToTable()) do
					if iter_197_7 then
						if arg_194_1.isInRecall_ then
							iter_197_7.color = arg_194_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_197_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_194_1.var_.actorSpriteComps1095 = nil
			end

			local var_197_16 = 0
			local var_197_17 = 0.3

			if var_197_16 < arg_194_1.time_ and arg_194_1.time_ <= var_197_16 + arg_197_0 then
				arg_194_1.talkMaxDuration = 0
				arg_194_1.dialogCg_.alpha = 1

				arg_194_1.dialog_:SetActive(true)
				SetActive(arg_194_1.leftNameGo_, true)

				local var_197_18 = arg_194_1:FormatText(StoryNameCfg[595].name)

				arg_194_1.leftNameTxt_.text = var_197_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_194_1.leftNameTxt_.transform)

				arg_194_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_194_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_194_1:RecordName(arg_194_1.leftNameTxt_.text)
				SetActive(arg_194_1.iconTrs_.gameObject, false)
				arg_194_1.callingController_:SetSelectedState("normal")

				local var_197_19 = arg_194_1:GetWordFromCfg(417161048)
				local var_197_20 = arg_194_1:FormatText(var_197_19.content)

				arg_194_1.text_.text = var_197_20

				LuaForUtil.ClearLinePrefixSymbol(arg_194_1.text_)

				local var_197_21 = 12
				local var_197_22 = utf8.len(var_197_20)
				local var_197_23 = var_197_21 <= 0 and var_197_17 or var_197_17 * (var_197_22 / var_197_21)

				if var_197_23 > 0 and var_197_17 < var_197_23 then
					arg_194_1.talkMaxDuration = var_197_23

					if var_197_23 + var_197_16 > arg_194_1.duration_ then
						arg_194_1.duration_ = var_197_23 + var_197_16
					end
				end

				arg_194_1.text_.text = var_197_20
				arg_194_1.typewritter.percent = 0

				arg_194_1.typewritter:SetDirty()
				arg_194_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161048", "story_v_out_417161.awb") ~= 0 then
					local var_197_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161048", "story_v_out_417161.awb") / 1000

					if var_197_24 + var_197_16 > arg_194_1.duration_ then
						arg_194_1.duration_ = var_197_24 + var_197_16
					end

					if var_197_19.prefab_name ~= "" and arg_194_1.actors_[var_197_19.prefab_name] ~= nil then
						local var_197_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_194_1.actors_[var_197_19.prefab_name].transform, "story_v_out_417161", "417161048", "story_v_out_417161.awb")

						arg_194_1:RecordAudio("417161048", var_197_25)
						arg_194_1:RecordAudio("417161048", var_197_25)
					else
						arg_194_1:AudioAction("play", "voice", "story_v_out_417161", "417161048", "story_v_out_417161.awb")
					end

					arg_194_1:RecordHistoryTalkVoice("story_v_out_417161", "417161048", "story_v_out_417161.awb")
				end

				arg_194_1:RecordContent(arg_194_1.text_.text)
			end

			local var_197_26 = math.max(var_197_17, arg_194_1.talkMaxDuration)

			if var_197_16 <= arg_194_1.time_ and arg_194_1.time_ < var_197_16 + var_197_26 then
				arg_194_1.typewritter.percent = (arg_194_1.time_ - var_197_16) / var_197_26

				arg_194_1.typewritter:SetDirty()
			end

			if arg_194_1.time_ >= var_197_16 + var_197_26 and arg_194_1.time_ < var_197_16 + var_197_26 + arg_197_0 then
				arg_194_1.typewritter.percent = 1

				arg_194_1.typewritter:SetDirty()
				arg_194_1:ShowNextGo(true)
			end
		end
	end,
	Play417161049 = function(arg_198_0, arg_198_1)
		arg_198_1.time_ = 0
		arg_198_1.frameCnt_ = 0
		arg_198_1.state_ = "playing"
		arg_198_1.curTalkId_ = 417161049
		arg_198_1.duration_ = 8.47

		local var_198_0 = {
			zh = 6.4,
			ja = 8.466
		}
		local var_198_1 = manager.audio:GetLocalizationFlag()

		if var_198_0[var_198_1] ~= nil then
			arg_198_1.duration_ = var_198_0[var_198_1]
		end

		SetActive(arg_198_1.tipsGo_, false)

		function arg_198_1.onSingleLineFinish_()
			arg_198_1.onSingleLineUpdate_ = nil
			arg_198_1.onSingleLineFinish_ = nil
			arg_198_1.state_ = "waiting"
		end

		function arg_198_1.playNext_(arg_200_0)
			if arg_200_0 == 1 then
				arg_198_0:Play417161050(arg_198_1)
			end
		end

		function arg_198_1.onSingleLineUpdate_(arg_201_0)
			local var_201_0 = arg_198_1.actors_["10128"]
			local var_201_1 = 0

			if var_201_1 < arg_198_1.time_ and arg_198_1.time_ <= var_201_1 + arg_201_0 and not isNil(var_201_0) and arg_198_1.var_.actorSpriteComps10128 == nil then
				arg_198_1.var_.actorSpriteComps10128 = var_201_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_201_2 = 0.2

			if var_201_1 <= arg_198_1.time_ and arg_198_1.time_ < var_201_1 + var_201_2 and not isNil(var_201_0) then
				local var_201_3 = (arg_198_1.time_ - var_201_1) / var_201_2

				if arg_198_1.var_.actorSpriteComps10128 then
					for iter_201_0, iter_201_1 in pairs(arg_198_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_201_1 then
							if arg_198_1.isInRecall_ then
								local var_201_4 = Mathf.Lerp(iter_201_1.color.r, arg_198_1.hightColor2.r, var_201_3)
								local var_201_5 = Mathf.Lerp(iter_201_1.color.g, arg_198_1.hightColor2.g, var_201_3)
								local var_201_6 = Mathf.Lerp(iter_201_1.color.b, arg_198_1.hightColor2.b, var_201_3)

								iter_201_1.color = Color.New(var_201_4, var_201_5, var_201_6)
							else
								local var_201_7 = Mathf.Lerp(iter_201_1.color.r, 0.5, var_201_3)

								iter_201_1.color = Color.New(var_201_7, var_201_7, var_201_7)
							end
						end
					end
				end
			end

			if arg_198_1.time_ >= var_201_1 + var_201_2 and arg_198_1.time_ < var_201_1 + var_201_2 + arg_201_0 and not isNil(var_201_0) and arg_198_1.var_.actorSpriteComps10128 then
				for iter_201_2, iter_201_3 in pairs(arg_198_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_201_3 then
						if arg_198_1.isInRecall_ then
							iter_201_3.color = arg_198_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_201_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_198_1.var_.actorSpriteComps10128 = nil
			end

			local var_201_8 = arg_198_1.actors_["1095"].transform
			local var_201_9 = 0

			if var_201_9 < arg_198_1.time_ and arg_198_1.time_ <= var_201_9 + arg_201_0 then
				arg_198_1.var_.moveOldPos1095 = var_201_8.localPosition
				var_201_8.localScale = Vector3.New(1, 1, 1)

				arg_198_1:CheckSpriteTmpPos("1095", 4)

				local var_201_10 = var_201_8.childCount

				for iter_201_4 = 0, var_201_10 - 1 do
					local var_201_11 = var_201_8:GetChild(iter_201_4)

					if var_201_11.name == "split_2" or not string.find(var_201_11.name, "split") then
						var_201_11.gameObject:SetActive(true)
					else
						var_201_11.gameObject:SetActive(false)
					end
				end
			end

			local var_201_12 = 0.001

			if var_201_9 <= arg_198_1.time_ and arg_198_1.time_ < var_201_9 + var_201_12 then
				local var_201_13 = (arg_198_1.time_ - var_201_9) / var_201_12
				local var_201_14 = Vector3.New(390, -340, -285)

				var_201_8.localPosition = Vector3.Lerp(arg_198_1.var_.moveOldPos1095, var_201_14, var_201_13)
			end

			if arg_198_1.time_ >= var_201_9 + var_201_12 and arg_198_1.time_ < var_201_9 + var_201_12 + arg_201_0 then
				var_201_8.localPosition = Vector3.New(390, -340, -285)
			end

			local var_201_15 = arg_198_1.actors_["1095"]
			local var_201_16 = 0

			if var_201_16 < arg_198_1.time_ and arg_198_1.time_ <= var_201_16 + arg_201_0 then
				arg_198_1:SetSpriteNiuquEffect("1095", true)
			end

			local var_201_17 = arg_198_1.actors_["1095"]
			local var_201_18 = 0

			if var_201_18 < arg_198_1.time_ and arg_198_1.time_ <= var_201_18 + arg_201_0 then
				local var_201_19 = var_201_17:GetComponentInChildren(typeof(CanvasGroup))

				if var_201_19 then
					arg_198_1.var_.alphaOldValue1095 = var_201_19.alpha
					arg_198_1.var_.characterEffect1095 = var_201_19
				end
			end

			local var_201_20 = 0.2

			if var_201_18 <= arg_198_1.time_ and arg_198_1.time_ < var_201_18 + var_201_20 then
				local var_201_21 = (arg_198_1.time_ - var_201_18) / var_201_20
				local var_201_22 = Mathf.Lerp(arg_198_1.var_.alphaOldValue1095, 0.6, var_201_21)

				if arg_198_1.var_.characterEffect1095 then
					arg_198_1.var_.characterEffect1095.alpha = var_201_22
				end
			end

			if arg_198_1.time_ >= var_201_18 + var_201_20 and arg_198_1.time_ < var_201_18 + var_201_20 + arg_201_0 and arg_198_1.var_.characterEffect1095 then
				arg_198_1.var_.characterEffect1095.alpha = 0.6
			end

			local var_201_23 = 0
			local var_201_24 = 0.7

			if var_201_23 < arg_198_1.time_ and arg_198_1.time_ <= var_201_23 + arg_201_0 then
				arg_198_1.talkMaxDuration = 0
				arg_198_1.dialogCg_.alpha = 1

				arg_198_1.dialog_:SetActive(true)
				SetActive(arg_198_1.leftNameGo_, true)

				local var_201_25 = arg_198_1:FormatText(StoryNameCfg[471].name)

				arg_198_1.leftNameTxt_.text = var_201_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_198_1.leftNameTxt_.transform)

				arg_198_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_198_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_198_1:RecordName(arg_198_1.leftNameTxt_.text)
				SetActive(arg_198_1.iconTrs_.gameObject, false)
				arg_198_1.callingController_:SetSelectedState("normal")

				local var_201_26 = arg_198_1:GetWordFromCfg(417161049)
				local var_201_27 = arg_198_1:FormatText(var_201_26.content)

				arg_198_1.text_.text = var_201_27

				LuaForUtil.ClearLinePrefixSymbol(arg_198_1.text_)

				local var_201_28 = 28
				local var_201_29 = utf8.len(var_201_27)
				local var_201_30 = var_201_28 <= 0 and var_201_24 or var_201_24 * (var_201_29 / var_201_28)

				if var_201_30 > 0 and var_201_24 < var_201_30 then
					arg_198_1.talkMaxDuration = var_201_30

					if var_201_30 + var_201_23 > arg_198_1.duration_ then
						arg_198_1.duration_ = var_201_30 + var_201_23
					end
				end

				arg_198_1.text_.text = var_201_27
				arg_198_1.typewritter.percent = 0

				arg_198_1.typewritter:SetDirty()
				arg_198_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161049", "story_v_out_417161.awb") ~= 0 then
					local var_201_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161049", "story_v_out_417161.awb") / 1000

					if var_201_31 + var_201_23 > arg_198_1.duration_ then
						arg_198_1.duration_ = var_201_31 + var_201_23
					end

					if var_201_26.prefab_name ~= "" and arg_198_1.actors_[var_201_26.prefab_name] ~= nil then
						local var_201_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_198_1.actors_[var_201_26.prefab_name].transform, "story_v_out_417161", "417161049", "story_v_out_417161.awb")

						arg_198_1:RecordAudio("417161049", var_201_32)
						arg_198_1:RecordAudio("417161049", var_201_32)
					else
						arg_198_1:AudioAction("play", "voice", "story_v_out_417161", "417161049", "story_v_out_417161.awb")
					end

					arg_198_1:RecordHistoryTalkVoice("story_v_out_417161", "417161049", "story_v_out_417161.awb")
				end

				arg_198_1:RecordContent(arg_198_1.text_.text)
			end

			local var_201_33 = math.max(var_201_24, arg_198_1.talkMaxDuration)

			if var_201_23 <= arg_198_1.time_ and arg_198_1.time_ < var_201_23 + var_201_33 then
				arg_198_1.typewritter.percent = (arg_198_1.time_ - var_201_23) / var_201_33

				arg_198_1.typewritter:SetDirty()
			end

			if arg_198_1.time_ >= var_201_23 + var_201_33 and arg_198_1.time_ < var_201_23 + var_201_33 + arg_201_0 then
				arg_198_1.typewritter.percent = 1

				arg_198_1.typewritter:SetDirty()
				arg_198_1:ShowNextGo(true)
			end
		end
	end,
	Play417161050 = function(arg_202_0, arg_202_1)
		arg_202_1.time_ = 0
		arg_202_1.frameCnt_ = 0
		arg_202_1.state_ = "playing"
		arg_202_1.curTalkId_ = 417161050
		arg_202_1.duration_ = 5

		SetActive(arg_202_1.tipsGo_, false)

		function arg_202_1.onSingleLineFinish_()
			arg_202_1.onSingleLineUpdate_ = nil
			arg_202_1.onSingleLineFinish_ = nil
			arg_202_1.state_ = "waiting"
		end

		function arg_202_1.playNext_(arg_204_0)
			if arg_204_0 == 1 then
				arg_202_0:Play417161051(arg_202_1)
			end
		end

		function arg_202_1.onSingleLineUpdate_(arg_205_0)
			local var_205_0 = arg_202_1.actors_["10128"].transform
			local var_205_1 = 0

			if var_205_1 < arg_202_1.time_ and arg_202_1.time_ <= var_205_1 + arg_205_0 then
				arg_202_1.var_.moveOldPos10128 = var_205_0.localPosition
				var_205_0.localScale = Vector3.New(1, 1, 1)

				arg_202_1:CheckSpriteTmpPos("10128", 7)

				local var_205_2 = var_205_0.childCount

				for iter_205_0 = 0, var_205_2 - 1 do
					local var_205_3 = var_205_0:GetChild(iter_205_0)

					if var_205_3.name == "" or not string.find(var_205_3.name, "split") then
						var_205_3.gameObject:SetActive(true)
					else
						var_205_3.gameObject:SetActive(false)
					end
				end
			end

			local var_205_4 = 0.001

			if var_205_1 <= arg_202_1.time_ and arg_202_1.time_ < var_205_1 + var_205_4 then
				local var_205_5 = (arg_202_1.time_ - var_205_1) / var_205_4
				local var_205_6 = Vector3.New(0, -2000, -300)

				var_205_0.localPosition = Vector3.Lerp(arg_202_1.var_.moveOldPos10128, var_205_6, var_205_5)
			end

			if arg_202_1.time_ >= var_205_1 + var_205_4 and arg_202_1.time_ < var_205_1 + var_205_4 + arg_205_0 then
				var_205_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_205_7 = arg_202_1.actors_["1095"].transform
			local var_205_8 = 0

			if var_205_8 < arg_202_1.time_ and arg_202_1.time_ <= var_205_8 + arg_205_0 then
				arg_202_1.var_.moveOldPos1095 = var_205_7.localPosition
				var_205_7.localScale = Vector3.New(1, 1, 1)

				arg_202_1:CheckSpriteTmpPos("1095", 7)

				local var_205_9 = var_205_7.childCount

				for iter_205_1 = 0, var_205_9 - 1 do
					local var_205_10 = var_205_7:GetChild(iter_205_1)

					if var_205_10.name == "" or not string.find(var_205_10.name, "split") then
						var_205_10.gameObject:SetActive(true)
					else
						var_205_10.gameObject:SetActive(false)
					end
				end
			end

			local var_205_11 = 0.001

			if var_205_8 <= arg_202_1.time_ and arg_202_1.time_ < var_205_8 + var_205_11 then
				local var_205_12 = (arg_202_1.time_ - var_205_8) / var_205_11
				local var_205_13 = Vector3.New(0, -2000, 0)

				var_205_7.localPosition = Vector3.Lerp(arg_202_1.var_.moveOldPos1095, var_205_13, var_205_12)
			end

			if arg_202_1.time_ >= var_205_8 + var_205_11 and arg_202_1.time_ < var_205_8 + var_205_11 + arg_205_0 then
				var_205_7.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_205_14 = 0.533333333333333
			local var_205_15 = 1

			if var_205_14 < arg_202_1.time_ and arg_202_1.time_ <= var_205_14 + arg_205_0 then
				local var_205_16 = "play"
				local var_205_17 = "effect"

				arg_202_1:AudioAction(var_205_16, var_205_17, "ui_system_3_0", "ui_sight_archieve_in", "")
			end

			local var_205_18 = 0
			local var_205_19 = 0.65

			if var_205_18 < arg_202_1.time_ and arg_202_1.time_ <= var_205_18 + arg_205_0 then
				arg_202_1.talkMaxDuration = 0
				arg_202_1.dialogCg_.alpha = 1

				arg_202_1.dialog_:SetActive(true)
				SetActive(arg_202_1.leftNameGo_, false)

				arg_202_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_202_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_202_1:RecordName(arg_202_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_202_1.iconTrs_.gameObject, false)
				arg_202_1.callingController_:SetSelectedState("normal")

				local var_205_20 = arg_202_1:GetWordFromCfg(417161050)
				local var_205_21 = arg_202_1:FormatText(var_205_20.content)

				arg_202_1.text_.text = var_205_21

				LuaForUtil.ClearLinePrefixSymbol(arg_202_1.text_)

				local var_205_22 = 26
				local var_205_23 = utf8.len(var_205_21)
				local var_205_24 = var_205_22 <= 0 and var_205_19 or var_205_19 * (var_205_23 / var_205_22)

				if var_205_24 > 0 and var_205_19 < var_205_24 then
					arg_202_1.talkMaxDuration = var_205_24

					if var_205_24 + var_205_18 > arg_202_1.duration_ then
						arg_202_1.duration_ = var_205_24 + var_205_18
					end
				end

				arg_202_1.text_.text = var_205_21
				arg_202_1.typewritter.percent = 0

				arg_202_1.typewritter:SetDirty()
				arg_202_1:ShowNextGo(false)
				arg_202_1:RecordContent(arg_202_1.text_.text)
			end

			local var_205_25 = math.max(var_205_19, arg_202_1.talkMaxDuration)

			if var_205_18 <= arg_202_1.time_ and arg_202_1.time_ < var_205_18 + var_205_25 then
				arg_202_1.typewritter.percent = (arg_202_1.time_ - var_205_18) / var_205_25

				arg_202_1.typewritter:SetDirty()
			end

			if arg_202_1.time_ >= var_205_18 + var_205_25 and arg_202_1.time_ < var_205_18 + var_205_25 + arg_205_0 then
				arg_202_1.typewritter.percent = 1

				arg_202_1.typewritter:SetDirty()
				arg_202_1:ShowNextGo(true)
			end
		end
	end,
	Play417161051 = function(arg_206_0, arg_206_1)
		arg_206_1.time_ = 0
		arg_206_1.frameCnt_ = 0
		arg_206_1.state_ = "playing"
		arg_206_1.curTalkId_ = 417161051
		arg_206_1.duration_ = 6.03

		local var_206_0 = {
			zh = 3.266,
			ja = 6.033
		}
		local var_206_1 = manager.audio:GetLocalizationFlag()

		if var_206_0[var_206_1] ~= nil then
			arg_206_1.duration_ = var_206_0[var_206_1]
		end

		SetActive(arg_206_1.tipsGo_, false)

		function arg_206_1.onSingleLineFinish_()
			arg_206_1.onSingleLineUpdate_ = nil
			arg_206_1.onSingleLineFinish_ = nil
			arg_206_1.state_ = "waiting"
		end

		function arg_206_1.playNext_(arg_208_0)
			if arg_208_0 == 1 then
				arg_206_0:Play417161052(arg_206_1)
			end
		end

		function arg_206_1.onSingleLineUpdate_(arg_209_0)
			local var_209_0 = arg_206_1.actors_["10128"]
			local var_209_1 = 0

			if var_209_1 < arg_206_1.time_ and arg_206_1.time_ <= var_209_1 + arg_209_0 and not isNil(var_209_0) and arg_206_1.var_.actorSpriteComps10128 == nil then
				arg_206_1.var_.actorSpriteComps10128 = var_209_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_209_2 = 0.2

			if var_209_1 <= arg_206_1.time_ and arg_206_1.time_ < var_209_1 + var_209_2 and not isNil(var_209_0) then
				local var_209_3 = (arg_206_1.time_ - var_209_1) / var_209_2

				if arg_206_1.var_.actorSpriteComps10128 then
					for iter_209_0, iter_209_1 in pairs(arg_206_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_209_1 then
							if arg_206_1.isInRecall_ then
								local var_209_4 = Mathf.Lerp(iter_209_1.color.r, arg_206_1.hightColor1.r, var_209_3)
								local var_209_5 = Mathf.Lerp(iter_209_1.color.g, arg_206_1.hightColor1.g, var_209_3)
								local var_209_6 = Mathf.Lerp(iter_209_1.color.b, arg_206_1.hightColor1.b, var_209_3)

								iter_209_1.color = Color.New(var_209_4, var_209_5, var_209_6)
							else
								local var_209_7 = Mathf.Lerp(iter_209_1.color.r, 1, var_209_3)

								iter_209_1.color = Color.New(var_209_7, var_209_7, var_209_7)
							end
						end
					end
				end
			end

			if arg_206_1.time_ >= var_209_1 + var_209_2 and arg_206_1.time_ < var_209_1 + var_209_2 + arg_209_0 and not isNil(var_209_0) and arg_206_1.var_.actorSpriteComps10128 then
				for iter_209_2, iter_209_3 in pairs(arg_206_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_209_3 then
						if arg_206_1.isInRecall_ then
							iter_209_3.color = arg_206_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_209_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_206_1.var_.actorSpriteComps10128 = nil
			end

			local var_209_8 = arg_206_1.actors_["10128"].transform
			local var_209_9 = 0

			if var_209_9 < arg_206_1.time_ and arg_206_1.time_ <= var_209_9 + arg_209_0 then
				arg_206_1.var_.moveOldPos10128 = var_209_8.localPosition
				var_209_8.localScale = Vector3.New(1, 1, 1)

				arg_206_1:CheckSpriteTmpPos("10128", 3)

				local var_209_10 = var_209_8.childCount

				for iter_209_4 = 0, var_209_10 - 1 do
					local var_209_11 = var_209_8:GetChild(iter_209_4)

					if var_209_11.name == "split_2" or not string.find(var_209_11.name, "split") then
						var_209_11.gameObject:SetActive(true)
					else
						var_209_11.gameObject:SetActive(false)
					end
				end
			end

			local var_209_12 = 0.001

			if var_209_9 <= arg_206_1.time_ and arg_206_1.time_ < var_209_9 + var_209_12 then
				local var_209_13 = (arg_206_1.time_ - var_209_9) / var_209_12
				local var_209_14 = Vector3.New(0, -347, -300)

				var_209_8.localPosition = Vector3.Lerp(arg_206_1.var_.moveOldPos10128, var_209_14, var_209_13)
			end

			if arg_206_1.time_ >= var_209_9 + var_209_12 and arg_206_1.time_ < var_209_9 + var_209_12 + arg_209_0 then
				var_209_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_209_15 = 0
			local var_209_16 = 0.375

			if var_209_15 < arg_206_1.time_ and arg_206_1.time_ <= var_209_15 + arg_209_0 then
				arg_206_1.talkMaxDuration = 0
				arg_206_1.dialogCg_.alpha = 1

				arg_206_1.dialog_:SetActive(true)
				SetActive(arg_206_1.leftNameGo_, true)

				local var_209_17 = arg_206_1:FormatText(StoryNameCfg[595].name)

				arg_206_1.leftNameTxt_.text = var_209_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_206_1.leftNameTxt_.transform)

				arg_206_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_206_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_206_1:RecordName(arg_206_1.leftNameTxt_.text)
				SetActive(arg_206_1.iconTrs_.gameObject, false)
				arg_206_1.callingController_:SetSelectedState("normal")

				local var_209_18 = arg_206_1:GetWordFromCfg(417161051)
				local var_209_19 = arg_206_1:FormatText(var_209_18.content)

				arg_206_1.text_.text = var_209_19

				LuaForUtil.ClearLinePrefixSymbol(arg_206_1.text_)

				local var_209_20 = 15
				local var_209_21 = utf8.len(var_209_19)
				local var_209_22 = var_209_20 <= 0 and var_209_16 or var_209_16 * (var_209_21 / var_209_20)

				if var_209_22 > 0 and var_209_16 < var_209_22 then
					arg_206_1.talkMaxDuration = var_209_22

					if var_209_22 + var_209_15 > arg_206_1.duration_ then
						arg_206_1.duration_ = var_209_22 + var_209_15
					end
				end

				arg_206_1.text_.text = var_209_19
				arg_206_1.typewritter.percent = 0

				arg_206_1.typewritter:SetDirty()
				arg_206_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161051", "story_v_out_417161.awb") ~= 0 then
					local var_209_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161051", "story_v_out_417161.awb") / 1000

					if var_209_23 + var_209_15 > arg_206_1.duration_ then
						arg_206_1.duration_ = var_209_23 + var_209_15
					end

					if var_209_18.prefab_name ~= "" and arg_206_1.actors_[var_209_18.prefab_name] ~= nil then
						local var_209_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_206_1.actors_[var_209_18.prefab_name].transform, "story_v_out_417161", "417161051", "story_v_out_417161.awb")

						arg_206_1:RecordAudio("417161051", var_209_24)
						arg_206_1:RecordAudio("417161051", var_209_24)
					else
						arg_206_1:AudioAction("play", "voice", "story_v_out_417161", "417161051", "story_v_out_417161.awb")
					end

					arg_206_1:RecordHistoryTalkVoice("story_v_out_417161", "417161051", "story_v_out_417161.awb")
				end

				arg_206_1:RecordContent(arg_206_1.text_.text)
			end

			local var_209_25 = math.max(var_209_16, arg_206_1.talkMaxDuration)

			if var_209_15 <= arg_206_1.time_ and arg_206_1.time_ < var_209_15 + var_209_25 then
				arg_206_1.typewritter.percent = (arg_206_1.time_ - var_209_15) / var_209_25

				arg_206_1.typewritter:SetDirty()
			end

			if arg_206_1.time_ >= var_209_15 + var_209_25 and arg_206_1.time_ < var_209_15 + var_209_25 + arg_209_0 then
				arg_206_1.typewritter.percent = 1

				arg_206_1.typewritter:SetDirty()
				arg_206_1:ShowNextGo(true)
			end
		end
	end,
	Play417161052 = function(arg_210_0, arg_210_1)
		arg_210_1.time_ = 0
		arg_210_1.frameCnt_ = 0
		arg_210_1.state_ = "playing"
		arg_210_1.curTalkId_ = 417161052
		arg_210_1.duration_ = 4

		SetActive(arg_210_1.tipsGo_, false)

		function arg_210_1.onSingleLineFinish_()
			arg_210_1.onSingleLineUpdate_ = nil
			arg_210_1.onSingleLineFinish_ = nil
			arg_210_1.state_ = "waiting"
		end

		function arg_210_1.playNext_(arg_212_0)
			if arg_212_0 == 1 then
				arg_210_0:Play417161053(arg_210_1)
			end
		end

		function arg_210_1.onSingleLineUpdate_(arg_213_0)
			local var_213_0 = "STblack"

			if arg_210_1.bgs_[var_213_0] == nil then
				local var_213_1 = Object.Instantiate(arg_210_1.paintGo_)

				var_213_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_213_0)
				var_213_1.name = var_213_0
				var_213_1.transform.parent = arg_210_1.stage_.transform
				var_213_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_210_1.bgs_[var_213_0] = var_213_1
			end

			local var_213_2 = 2

			if var_213_2 < arg_210_1.time_ and arg_210_1.time_ <= var_213_2 + arg_213_0 then
				local var_213_3 = manager.ui.mainCamera.transform.localPosition
				local var_213_4 = Vector3.New(0, 0, 10) + Vector3.New(var_213_3.x, var_213_3.y, 0)
				local var_213_5 = arg_210_1.bgs_.STblack

				var_213_5.transform.localPosition = var_213_4
				var_213_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_213_6 = var_213_5:GetComponent("SpriteRenderer")

				if var_213_6 and var_213_6.sprite then
					local var_213_7 = (var_213_5.transform.localPosition - var_213_3).z
					local var_213_8 = manager.ui.mainCameraCom_
					local var_213_9 = 2 * var_213_7 * Mathf.Tan(var_213_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_213_10 = var_213_9 * var_213_8.aspect
					local var_213_11 = var_213_6.sprite.bounds.size.x
					local var_213_12 = var_213_6.sprite.bounds.size.y
					local var_213_13 = var_213_10 / var_213_11
					local var_213_14 = var_213_9 / var_213_12
					local var_213_15 = var_213_14 < var_213_13 and var_213_13 or var_213_14

					var_213_5.transform.localScale = Vector3.New(var_213_15, var_213_15, 0)
				end

				for iter_213_0, iter_213_1 in pairs(arg_210_1.bgs_) do
					if iter_213_0 ~= "STblack" then
						iter_213_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_213_16 = 0

			if var_213_16 < arg_210_1.time_ and arg_210_1.time_ <= var_213_16 + arg_213_0 then
				arg_210_1.mask_.enabled = true
				arg_210_1.mask_.raycastTarget = true

				arg_210_1:SetGaussion(false)
			end

			local var_213_17 = 2

			if var_213_16 <= arg_210_1.time_ and arg_210_1.time_ < var_213_16 + var_213_17 then
				local var_213_18 = (arg_210_1.time_ - var_213_16) / var_213_17
				local var_213_19 = Color.New(0, 0, 0)

				var_213_19.a = Mathf.Lerp(0, 1, var_213_18)
				arg_210_1.mask_.color = var_213_19
			end

			if arg_210_1.time_ >= var_213_16 + var_213_17 and arg_210_1.time_ < var_213_16 + var_213_17 + arg_213_0 then
				local var_213_20 = Color.New(0, 0, 0)

				var_213_20.a = 1
				arg_210_1.mask_.color = var_213_20
			end

			local var_213_21 = 2

			if var_213_21 < arg_210_1.time_ and arg_210_1.time_ <= var_213_21 + arg_213_0 then
				arg_210_1.mask_.enabled = true
				arg_210_1.mask_.raycastTarget = true

				arg_210_1:SetGaussion(false)
			end

			local var_213_22 = 2

			if var_213_21 <= arg_210_1.time_ and arg_210_1.time_ < var_213_21 + var_213_22 then
				local var_213_23 = (arg_210_1.time_ - var_213_21) / var_213_22
				local var_213_24 = Color.New(0, 0, 0)

				var_213_24.a = Mathf.Lerp(1, 0, var_213_23)
				arg_210_1.mask_.color = var_213_24
			end

			if arg_210_1.time_ >= var_213_21 + var_213_22 and arg_210_1.time_ < var_213_21 + var_213_22 + arg_213_0 then
				local var_213_25 = Color.New(0, 0, 0)
				local var_213_26 = 0

				arg_210_1.mask_.enabled = false
				var_213_25.a = var_213_26
				arg_210_1.mask_.color = var_213_25
			end

			local var_213_27 = arg_210_1.actors_["10128"].transform
			local var_213_28 = 1.966

			if var_213_28 < arg_210_1.time_ and arg_210_1.time_ <= var_213_28 + arg_213_0 then
				arg_210_1.var_.moveOldPos10128 = var_213_27.localPosition
				var_213_27.localScale = Vector3.New(1, 1, 1)

				arg_210_1:CheckSpriteTmpPos("10128", 7)

				local var_213_29 = var_213_27.childCount

				for iter_213_2 = 0, var_213_29 - 1 do
					local var_213_30 = var_213_27:GetChild(iter_213_2)

					if var_213_30.name == "" or not string.find(var_213_30.name, "split") then
						var_213_30.gameObject:SetActive(true)
					else
						var_213_30.gameObject:SetActive(false)
					end
				end
			end

			local var_213_31 = 0.001

			if var_213_28 <= arg_210_1.time_ and arg_210_1.time_ < var_213_28 + var_213_31 then
				local var_213_32 = (arg_210_1.time_ - var_213_28) / var_213_31
				local var_213_33 = Vector3.New(0, -2000, -300)

				var_213_27.localPosition = Vector3.Lerp(arg_210_1.var_.moveOldPos10128, var_213_33, var_213_32)
			end

			if arg_210_1.time_ >= var_213_28 + var_213_31 and arg_210_1.time_ < var_213_28 + var_213_31 + arg_213_0 then
				var_213_27.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_213_34 = 2

			if var_213_34 < arg_210_1.time_ and arg_210_1.time_ <= var_213_34 + arg_213_0 then
				arg_210_1.fswbg_:SetActive(true)
				arg_210_1.dialog_:SetActive(false)

				arg_210_1.fswtw_.percent = 0

				local var_213_35 = arg_210_1:GetWordFromCfg(417161052)
				local var_213_36 = arg_210_1:FormatText(var_213_35.content)

				arg_210_1.fswt_.text = var_213_36

				LuaForUtil.ClearLinePrefixSymbol(arg_210_1.fswt_)

				arg_210_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_210_1.fswtw_:SetDirty()

				arg_210_1.typewritterCharCountI18N = 0

				arg_210_1:ShowNextGo(false)
			end

			local var_213_37 = 3.33333333333333

			if var_213_37 < arg_210_1.time_ and arg_210_1.time_ <= var_213_37 + arg_213_0 then
				arg_210_1.var_.oldValueTypewriter = arg_210_1.fswtw_.percent

				arg_210_1:ShowNextGo(false)
			end

			local var_213_38 = 5
			local var_213_39 = 0.333333333333333
			local var_213_40 = arg_210_1:GetWordFromCfg(417161052)
			local var_213_41 = arg_210_1:FormatText(var_213_40.content)
			local var_213_42, var_213_43 = arg_210_1:GetPercentByPara(var_213_41, 1)

			if var_213_37 < arg_210_1.time_ and arg_210_1.time_ <= var_213_37 + arg_213_0 then
				arg_210_1.talkMaxDuration = 0

				local var_213_44 = var_213_38 <= 0 and var_213_39 or var_213_39 * ((var_213_43 - arg_210_1.typewritterCharCountI18N) / var_213_38)

				if var_213_44 > 0 and var_213_39 < var_213_44 then
					arg_210_1.talkMaxDuration = var_213_44

					if var_213_44 + var_213_37 > arg_210_1.duration_ then
						arg_210_1.duration_ = var_213_44 + var_213_37
					end
				end
			end

			local var_213_45 = 0.333333333333333
			local var_213_46 = math.max(var_213_45, arg_210_1.talkMaxDuration)

			if var_213_37 <= arg_210_1.time_ and arg_210_1.time_ < var_213_37 + var_213_46 then
				local var_213_47 = (arg_210_1.time_ - var_213_37) / var_213_46

				arg_210_1.fswtw_.percent = Mathf.Lerp(arg_210_1.var_.oldValueTypewriter, var_213_42, var_213_47)
				arg_210_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_210_1.fswtw_:SetDirty()
			end

			if arg_210_1.time_ >= var_213_37 + var_213_46 and arg_210_1.time_ < var_213_37 + var_213_46 + arg_213_0 then
				arg_210_1.fswtw_.percent = var_213_42

				arg_210_1.fswtw_:SetDirty()
				arg_210_1:ShowNextGo(true)

				arg_210_1.typewritterCharCountI18N = var_213_43
			end

			local var_213_48 = 2.01666666666667

			if var_213_48 < arg_210_1.time_ and arg_210_1.time_ <= var_213_48 + arg_213_0 then
				local var_213_49 = arg_210_1.fswbg_.transform:Find("textbox/adapt/content") or arg_210_1.fswbg_.transform:Find("textbox/content")
				local var_213_50 = var_213_49:GetComponent("Text")
				local var_213_51 = var_213_49:GetComponent("RectTransform")

				var_213_50.alignment = UnityEngine.TextAnchor.MiddleLeft
				var_213_51.offsetMin = Vector2.New(0, 0)
				var_213_51.offsetMax = Vector2.New(0, 0)
			end

			local var_213_52 = 0
			local var_213_53 = 0.2

			if var_213_52 < arg_210_1.time_ and arg_210_1.time_ <= var_213_52 + arg_213_0 then
				local var_213_54 = "play"
				local var_213_55 = "music"

				arg_210_1:AudioAction(var_213_54, var_213_55, "ui_battle", "ui_battle_stopbgm", "")

				local var_213_56 = ""
				local var_213_57 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_213_57 ~= "" then
					if arg_210_1.bgmTxt_.text ~= var_213_57 and arg_210_1.bgmTxt_.text ~= "" then
						if arg_210_1.bgmTxt2_.text ~= "" then
							arg_210_1.bgmTxt_.text = arg_210_1.bgmTxt2_.text
						end

						arg_210_1.bgmTxt2_.text = var_213_57

						arg_210_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_210_1.bgmTxt_.text = var_213_57
					end

					if arg_210_1.bgmTimer then
						arg_210_1.bgmTimer:Stop()

						arg_210_1.bgmTimer = nil
					end

					if arg_210_1.settingData.show_music_name == 1 then
						arg_210_1.musicController:SetSelectedState("show")
						arg_210_1.musicAnimator_:Play("open", 0, 0)

						if arg_210_1.settingData.music_time ~= 0 then
							arg_210_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_210_1.settingData.music_time), function()
								if arg_210_1 == nil or isNil(arg_210_1.bgmTxt_) then
									return
								end

								arg_210_1.musicController:SetSelectedState("hide")
								arg_210_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end
		end
	end,
	Play417161053 = function(arg_215_0, arg_215_1)
		arg_215_1.time_ = 0
		arg_215_1.frameCnt_ = 0
		arg_215_1.state_ = "playing"
		arg_215_1.curTalkId_ = 417161053
		arg_215_1.duration_ = 1.53

		SetActive(arg_215_1.tipsGo_, false)

		function arg_215_1.onSingleLineFinish_()
			arg_215_1.onSingleLineUpdate_ = nil
			arg_215_1.onSingleLineFinish_ = nil
			arg_215_1.state_ = "waiting"
		end

		function arg_215_1.playNext_(arg_217_0)
			if arg_217_0 == 1 then
				arg_215_0:Play417161054(arg_215_1)
			end
		end

		function arg_215_1.onSingleLineUpdate_(arg_218_0)
			local var_218_0 = 0

			if var_218_0 < arg_215_1.time_ and arg_215_1.time_ <= var_218_0 + arg_218_0 then
				arg_215_1.var_.oldValueTypewriter = arg_215_1.fswtw_.percent

				arg_215_1:ShowNextGo(false)
			end

			local var_218_1 = 26
			local var_218_2 = 1.26666666666667
			local var_218_3 = arg_215_1:GetWordFromCfg(417161052)
			local var_218_4 = arg_215_1:FormatText(var_218_3.content)
			local var_218_5, var_218_6 = arg_215_1:GetPercentByPara(var_218_4, 2)

			if var_218_0 < arg_215_1.time_ and arg_215_1.time_ <= var_218_0 + arg_218_0 then
				arg_215_1.talkMaxDuration = 0

				local var_218_7 = var_218_1 <= 0 and var_218_2 or var_218_2 * ((var_218_6 - arg_215_1.typewritterCharCountI18N) / var_218_1)

				if var_218_7 > 0 and var_218_2 < var_218_7 then
					arg_215_1.talkMaxDuration = var_218_7

					if var_218_7 + var_218_0 > arg_215_1.duration_ then
						arg_215_1.duration_ = var_218_7 + var_218_0
					end
				end
			end

			local var_218_8 = 1.26666666666667
			local var_218_9 = math.max(var_218_8, arg_215_1.talkMaxDuration)

			if var_218_0 <= arg_215_1.time_ and arg_215_1.time_ < var_218_0 + var_218_9 then
				local var_218_10 = (arg_215_1.time_ - var_218_0) / var_218_9

				arg_215_1.fswtw_.percent = Mathf.Lerp(arg_215_1.var_.oldValueTypewriter, var_218_5, var_218_10)
				arg_215_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_215_1.fswtw_:SetDirty()
			end

			if arg_215_1.time_ >= var_218_0 + var_218_9 and arg_215_1.time_ < var_218_0 + var_218_9 + arg_218_0 then
				arg_215_1.fswtw_.percent = var_218_5

				arg_215_1.fswtw_:SetDirty()
				arg_215_1:ShowNextGo(true)

				arg_215_1.typewritterCharCountI18N = var_218_6
			end
		end
	end,
	Play417161054 = function(arg_219_0, arg_219_1)
		arg_219_1.time_ = 0
		arg_219_1.frameCnt_ = 0
		arg_219_1.state_ = "playing"
		arg_219_1.curTalkId_ = 417161054
		arg_219_1.duration_ = 1

		SetActive(arg_219_1.tipsGo_, false)

		function arg_219_1.onSingleLineFinish_()
			arg_219_1.onSingleLineUpdate_ = nil
			arg_219_1.onSingleLineFinish_ = nil
			arg_219_1.state_ = "waiting"
		end

		function arg_219_1.playNext_(arg_221_0)
			if arg_221_0 == 1 then
				arg_219_0:Play417161055(arg_219_1)
			end
		end

		function arg_219_1.onSingleLineUpdate_(arg_222_0)
			local var_222_0 = 0

			if var_222_0 < arg_219_1.time_ and arg_219_1.time_ <= var_222_0 + arg_222_0 then
				arg_219_1.var_.oldValueTypewriter = arg_219_1.fswtw_.percent

				arg_219_1:ShowNextGo(false)
			end

			local var_222_1 = 5
			local var_222_2 = 0.266666666666667
			local var_222_3 = arg_219_1:GetWordFromCfg(417161052)
			local var_222_4 = arg_219_1:FormatText(var_222_3.content)
			local var_222_5, var_222_6 = arg_219_1:GetPercentByPara(var_222_4, 3)

			if var_222_0 < arg_219_1.time_ and arg_219_1.time_ <= var_222_0 + arg_222_0 then
				arg_219_1.talkMaxDuration = 0

				local var_222_7 = var_222_1 <= 0 and var_222_2 or var_222_2 * ((var_222_6 - arg_219_1.typewritterCharCountI18N) / var_222_1)

				if var_222_7 > 0 and var_222_2 < var_222_7 then
					arg_219_1.talkMaxDuration = var_222_7

					if var_222_7 + var_222_0 > arg_219_1.duration_ then
						arg_219_1.duration_ = var_222_7 + var_222_0
					end
				end
			end

			local var_222_8 = 0.266666666666667
			local var_222_9 = math.max(var_222_8, arg_219_1.talkMaxDuration)

			if var_222_0 <= arg_219_1.time_ and arg_219_1.time_ < var_222_0 + var_222_9 then
				local var_222_10 = (arg_219_1.time_ - var_222_0) / var_222_9

				arg_219_1.fswtw_.percent = Mathf.Lerp(arg_219_1.var_.oldValueTypewriter, var_222_5, var_222_10)
				arg_219_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_219_1.fswtw_:SetDirty()
			end

			if arg_219_1.time_ >= var_222_0 + var_222_9 and arg_219_1.time_ < var_222_0 + var_222_9 + arg_222_0 then
				arg_219_1.fswtw_.percent = var_222_5

				arg_219_1.fswtw_:SetDirty()
				arg_219_1:ShowNextGo(true)

				arg_219_1.typewritterCharCountI18N = var_222_6
			end
		end
	end,
	Play417161055 = function(arg_223_0, arg_223_1)
		arg_223_1.time_ = 0
		arg_223_1.frameCnt_ = 0
		arg_223_1.state_ = "playing"
		arg_223_1.curTalkId_ = 417161055
		arg_223_1.duration_ = 3.22

		SetActive(arg_223_1.tipsGo_, false)

		function arg_223_1.onSingleLineFinish_()
			arg_223_1.onSingleLineUpdate_ = nil
			arg_223_1.onSingleLineFinish_ = nil
			arg_223_1.state_ = "waiting"
		end

		function arg_223_1.playNext_(arg_225_0)
			if arg_225_0 == 1 then
				arg_223_0:Play417161056(arg_223_1)
			end
		end

		function arg_223_1.onSingleLineUpdate_(arg_226_0)
			local var_226_0 = 0

			if var_226_0 < arg_223_1.time_ and arg_223_1.time_ <= var_226_0 + arg_226_0 then
				arg_223_1.var_.oldValueTypewriter = arg_223_1.fswtw_.percent

				arg_223_1:ShowNextGo(false)
			end

			local var_226_1 = 48
			local var_226_2 = 3.2
			local var_226_3 = arg_223_1:GetWordFromCfg(417161052)
			local var_226_4 = arg_223_1:FormatText(var_226_3.content)
			local var_226_5, var_226_6 = arg_223_1:GetPercentByPara(var_226_4, 4)

			if var_226_0 < arg_223_1.time_ and arg_223_1.time_ <= var_226_0 + arg_226_0 then
				arg_223_1.talkMaxDuration = 0

				local var_226_7 = var_226_1 <= 0 and var_226_2 or var_226_2 * ((var_226_6 - arg_223_1.typewritterCharCountI18N) / var_226_1)

				if var_226_7 > 0 and var_226_2 < var_226_7 then
					arg_223_1.talkMaxDuration = var_226_7

					if var_226_7 + var_226_0 > arg_223_1.duration_ then
						arg_223_1.duration_ = var_226_7 + var_226_0
					end
				end
			end

			local var_226_8 = 3.2
			local var_226_9 = math.max(var_226_8, arg_223_1.talkMaxDuration)

			if var_226_0 <= arg_223_1.time_ and arg_223_1.time_ < var_226_0 + var_226_9 then
				local var_226_10 = (arg_223_1.time_ - var_226_0) / var_226_9

				arg_223_1.fswtw_.percent = Mathf.Lerp(arg_223_1.var_.oldValueTypewriter, var_226_5, var_226_10)
				arg_223_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_223_1.fswtw_:SetDirty()
			end

			if arg_223_1.time_ >= var_226_0 + var_226_9 and arg_223_1.time_ < var_226_0 + var_226_9 + arg_226_0 then
				arg_223_1.fswtw_.percent = var_226_5

				arg_223_1.fswtw_:SetDirty()
				arg_223_1:ShowNextGo(true)

				arg_223_1.typewritterCharCountI18N = var_226_6
			end
		end
	end,
	Play417161056 = function(arg_227_0, arg_227_1)
		arg_227_1.time_ = 0
		arg_227_1.frameCnt_ = 0
		arg_227_1.state_ = "playing"
		arg_227_1.curTalkId_ = 417161056
		arg_227_1.duration_ = 1

		SetActive(arg_227_1.tipsGo_, false)

		function arg_227_1.onSingleLineFinish_()
			arg_227_1.onSingleLineUpdate_ = nil
			arg_227_1.onSingleLineFinish_ = nil
			arg_227_1.state_ = "waiting"
		end

		function arg_227_1.playNext_(arg_229_0)
			if arg_229_0 == 1 then
				arg_227_0:Play417161057(arg_227_1)
			end
		end

		function arg_227_1.onSingleLineUpdate_(arg_230_0)
			local var_230_0 = 0

			if var_230_0 < arg_227_1.time_ and arg_227_1.time_ <= var_230_0 + arg_230_0 then
				arg_227_1.var_.oldValueTypewriter = arg_227_1.fswtw_.percent

				arg_227_1:ShowNextGo(false)
			end

			local var_230_1 = 13
			local var_230_2 = 0.866666666666667
			local var_230_3 = arg_227_1:GetWordFromCfg(417161052)
			local var_230_4 = arg_227_1:FormatText(var_230_3.content)
			local var_230_5, var_230_6 = arg_227_1:GetPercentByPara(var_230_4, 5)

			if var_230_0 < arg_227_1.time_ and arg_227_1.time_ <= var_230_0 + arg_230_0 then
				arg_227_1.talkMaxDuration = 0

				local var_230_7 = var_230_1 <= 0 and var_230_2 or var_230_2 * ((var_230_6 - arg_227_1.typewritterCharCountI18N) / var_230_1)

				if var_230_7 > 0 and var_230_2 < var_230_7 then
					arg_227_1.talkMaxDuration = var_230_7

					if var_230_7 + var_230_0 > arg_227_1.duration_ then
						arg_227_1.duration_ = var_230_7 + var_230_0
					end
				end
			end

			local var_230_8 = 0.866666666666667
			local var_230_9 = math.max(var_230_8, arg_227_1.talkMaxDuration)

			if var_230_0 <= arg_227_1.time_ and arg_227_1.time_ < var_230_0 + var_230_9 then
				local var_230_10 = (arg_227_1.time_ - var_230_0) / var_230_9

				arg_227_1.fswtw_.percent = Mathf.Lerp(arg_227_1.var_.oldValueTypewriter, var_230_5, var_230_10)
				arg_227_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_227_1.fswtw_:SetDirty()
			end

			if arg_227_1.time_ >= var_230_0 + var_230_9 and arg_227_1.time_ < var_230_0 + var_230_9 + arg_230_0 then
				arg_227_1.fswtw_.percent = var_230_5

				arg_227_1.fswtw_:SetDirty()
				arg_227_1:ShowNextGo(true)

				arg_227_1.typewritterCharCountI18N = var_230_6
			end
		end
	end,
	Play417161057 = function(arg_231_0, arg_231_1)
		arg_231_1.time_ = 0
		arg_231_1.frameCnt_ = 0
		arg_231_1.state_ = "playing"
		arg_231_1.curTalkId_ = 417161057
		arg_231_1.duration_ = 1

		SetActive(arg_231_1.tipsGo_, false)

		function arg_231_1.onSingleLineFinish_()
			arg_231_1.onSingleLineUpdate_ = nil
			arg_231_1.onSingleLineFinish_ = nil
			arg_231_1.state_ = "waiting"
		end

		function arg_231_1.playNext_(arg_233_0)
			if arg_233_0 == 1 then
				arg_231_0:Play417161058(arg_231_1)
			end
		end

		function arg_231_1.onSingleLineUpdate_(arg_234_0)
			local var_234_0 = 0

			if var_234_0 < arg_231_1.time_ and arg_231_1.time_ <= var_234_0 + arg_234_0 then
				arg_231_1.var_.oldValueTypewriter = arg_231_1.fswtw_.percent

				arg_231_1:ShowNextGo(false)
			end

			local var_234_1 = 2
			local var_234_2 = 0.133333333333333
			local var_234_3 = arg_231_1:GetWordFromCfg(417161052)
			local var_234_4 = arg_231_1:FormatText(var_234_3.content)
			local var_234_5, var_234_6 = arg_231_1:GetPercentByPara(var_234_4, 6)

			if var_234_0 < arg_231_1.time_ and arg_231_1.time_ <= var_234_0 + arg_234_0 then
				arg_231_1.talkMaxDuration = 0

				local var_234_7 = var_234_1 <= 0 and var_234_2 or var_234_2 * ((var_234_6 - arg_231_1.typewritterCharCountI18N) / var_234_1)

				if var_234_7 > 0 and var_234_2 < var_234_7 then
					arg_231_1.talkMaxDuration = var_234_7

					if var_234_7 + var_234_0 > arg_231_1.duration_ then
						arg_231_1.duration_ = var_234_7 + var_234_0
					end
				end
			end

			local var_234_8 = 0.133333333333333
			local var_234_9 = math.max(var_234_8, arg_231_1.talkMaxDuration)

			if var_234_0 <= arg_231_1.time_ and arg_231_1.time_ < var_234_0 + var_234_9 then
				local var_234_10 = (arg_231_1.time_ - var_234_0) / var_234_9

				arg_231_1.fswtw_.percent = Mathf.Lerp(arg_231_1.var_.oldValueTypewriter, var_234_5, var_234_10)
				arg_231_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_231_1.fswtw_:SetDirty()
			end

			if arg_231_1.time_ >= var_234_0 + var_234_9 and arg_231_1.time_ < var_234_0 + var_234_9 + arg_234_0 then
				arg_231_1.fswtw_.percent = var_234_5

				arg_231_1.fswtw_:SetDirty()
				arg_231_1:ShowNextGo(true)

				arg_231_1.typewritterCharCountI18N = var_234_6
			end
		end
	end,
	Play417161058 = function(arg_235_0, arg_235_1)
		arg_235_1.time_ = 0
		arg_235_1.frameCnt_ = 0
		arg_235_1.state_ = "playing"
		arg_235_1.curTalkId_ = 417161058
		arg_235_1.duration_ = 0.82

		SetActive(arg_235_1.tipsGo_, false)

		function arg_235_1.onSingleLineFinish_()
			arg_235_1.onSingleLineUpdate_ = nil
			arg_235_1.onSingleLineFinish_ = nil
			arg_235_1.state_ = "waiting"
		end

		function arg_235_1.playNext_(arg_237_0)
			if arg_237_0 == 1 then
				arg_235_0:Play417161059(arg_235_1)
			end
		end

		function arg_235_1.onSingleLineUpdate_(arg_238_0)
			local var_238_0 = 0

			if var_238_0 < arg_235_1.time_ and arg_235_1.time_ <= var_238_0 + arg_238_0 then
				arg_235_1.var_.oldValueTypewriter = arg_235_1.fswtw_.percent

				arg_235_1:ShowNextGo(false)
			end

			local var_238_1 = 12
			local var_238_2 = 0.8
			local var_238_3 = arg_235_1:GetWordFromCfg(417161052)
			local var_238_4 = arg_235_1:FormatText(var_238_3.content)
			local var_238_5, var_238_6 = arg_235_1:GetPercentByPara(var_238_4, 7)

			if var_238_0 < arg_235_1.time_ and arg_235_1.time_ <= var_238_0 + arg_238_0 then
				arg_235_1.talkMaxDuration = 0

				local var_238_7 = var_238_1 <= 0 and var_238_2 or var_238_2 * ((var_238_6 - arg_235_1.typewritterCharCountI18N) / var_238_1)

				if var_238_7 > 0 and var_238_2 < var_238_7 then
					arg_235_1.talkMaxDuration = var_238_7

					if var_238_7 + var_238_0 > arg_235_1.duration_ then
						arg_235_1.duration_ = var_238_7 + var_238_0
					end
				end
			end

			local var_238_8 = 0.8
			local var_238_9 = math.max(var_238_8, arg_235_1.talkMaxDuration)

			if var_238_0 <= arg_235_1.time_ and arg_235_1.time_ < var_238_0 + var_238_9 then
				local var_238_10 = (arg_235_1.time_ - var_238_0) / var_238_9

				arg_235_1.fswtw_.percent = Mathf.Lerp(arg_235_1.var_.oldValueTypewriter, var_238_5, var_238_10)
				arg_235_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_235_1.fswtw_:SetDirty()
			end

			if arg_235_1.time_ >= var_238_0 + var_238_9 and arg_235_1.time_ < var_238_0 + var_238_9 + arg_238_0 then
				arg_235_1.fswtw_.percent = var_238_5

				arg_235_1.fswtw_:SetDirty()
				arg_235_1:ShowNextGo(true)

				arg_235_1.typewritterCharCountI18N = var_238_6
			end
		end
	end,
	Play417161059 = function(arg_239_0, arg_239_1)
		arg_239_1.time_ = 0
		arg_239_1.frameCnt_ = 0
		arg_239_1.state_ = "playing"
		arg_239_1.curTalkId_ = 417161059
		arg_239_1.duration_ = 8.5

		local var_239_0 = {
			zh = 6.166,
			ja = 8.5
		}
		local var_239_1 = manager.audio:GetLocalizationFlag()

		if var_239_0[var_239_1] ~= nil then
			arg_239_1.duration_ = var_239_0[var_239_1]
		end

		SetActive(arg_239_1.tipsGo_, false)

		function arg_239_1.onSingleLineFinish_()
			arg_239_1.onSingleLineUpdate_ = nil
			arg_239_1.onSingleLineFinish_ = nil
			arg_239_1.state_ = "waiting"
		end

		function arg_239_1.playNext_(arg_241_0)
			if arg_241_0 == 1 then
				arg_239_0:Play417161060(arg_239_1)
			end
		end

		function arg_239_1.onSingleLineUpdate_(arg_242_0)
			local var_242_0 = 2

			if var_242_0 < arg_239_1.time_ and arg_239_1.time_ <= var_242_0 + arg_242_0 then
				arg_239_1.allBtn_.enabled = false
			end

			local var_242_1 = 0.3

			if arg_239_1.time_ >= var_242_0 + var_242_1 and arg_239_1.time_ < var_242_0 + var_242_1 + arg_242_0 then
				arg_239_1.allBtn_.enabled = true
			end

			local var_242_2 = "B13"

			if arg_239_1.bgs_[var_242_2] == nil then
				local var_242_3 = Object.Instantiate(arg_239_1.paintGo_)

				var_242_3:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_242_2)
				var_242_3.name = var_242_2
				var_242_3.transform.parent = arg_239_1.stage_.transform
				var_242_3.transform.localPosition = Vector3.New(0, 100, 0)
				arg_239_1.bgs_[var_242_2] = var_242_3
			end

			local var_242_4 = 0

			if var_242_4 < arg_239_1.time_ and arg_239_1.time_ <= var_242_4 + arg_242_0 then
				local var_242_5 = manager.ui.mainCamera.transform.localPosition
				local var_242_6 = Vector3.New(0, 0, 10) + Vector3.New(var_242_5.x, var_242_5.y, 0)
				local var_242_7 = arg_239_1.bgs_.B13

				var_242_7.transform.localPosition = var_242_6
				var_242_7.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_242_8 = var_242_7:GetComponent("SpriteRenderer")

				if var_242_8 and var_242_8.sprite then
					local var_242_9 = (var_242_7.transform.localPosition - var_242_5).z
					local var_242_10 = manager.ui.mainCameraCom_
					local var_242_11 = 2 * var_242_9 * Mathf.Tan(var_242_10.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_242_12 = var_242_11 * var_242_10.aspect
					local var_242_13 = var_242_8.sprite.bounds.size.x
					local var_242_14 = var_242_8.sprite.bounds.size.y
					local var_242_15 = var_242_12 / var_242_13
					local var_242_16 = var_242_11 / var_242_14
					local var_242_17 = var_242_16 < var_242_15 and var_242_15 or var_242_16

					var_242_7.transform.localScale = Vector3.New(var_242_17, var_242_17, 0)
				end

				for iter_242_0, iter_242_1 in pairs(arg_239_1.bgs_) do
					if iter_242_0 ~= "B13" then
						iter_242_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_242_18 = 0

			if var_242_18 < arg_239_1.time_ and arg_239_1.time_ <= var_242_18 + arg_242_0 then
				arg_239_1.mask_.enabled = true
				arg_239_1.mask_.raycastTarget = true

				arg_239_1:SetGaussion(false)
			end

			local var_242_19 = 2

			if var_242_18 <= arg_239_1.time_ and arg_239_1.time_ < var_242_18 + var_242_19 then
				local var_242_20 = (arg_239_1.time_ - var_242_18) / var_242_19
				local var_242_21 = Color.New(0, 0, 0)

				var_242_21.a = Mathf.Lerp(1, 0, var_242_20)
				arg_239_1.mask_.color = var_242_21
			end

			if arg_239_1.time_ >= var_242_18 + var_242_19 and arg_239_1.time_ < var_242_18 + var_242_19 + arg_242_0 then
				local var_242_22 = Color.New(0, 0, 0)
				local var_242_23 = 0

				arg_239_1.mask_.enabled = false
				var_242_22.a = var_242_23
				arg_239_1.mask_.color = var_242_22
			end

			local var_242_24 = "1060"

			if arg_239_1.actors_[var_242_24] == nil then
				local var_242_25 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1060")

				if not isNil(var_242_25) then
					local var_242_26 = Object.Instantiate(var_242_25, arg_239_1.canvasGo_.transform)

					var_242_26.transform:SetSiblingIndex(1)

					var_242_26.name = var_242_24
					var_242_26.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_239_1.actors_[var_242_24] = var_242_26

					local var_242_27 = var_242_26:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_239_1.isInRecall_ then
						for iter_242_2, iter_242_3 in ipairs(var_242_27) do
							iter_242_3.color = arg_239_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_242_28 = arg_239_1.actors_["1060"]
			local var_242_29 = 2

			if var_242_29 < arg_239_1.time_ and arg_239_1.time_ <= var_242_29 + arg_242_0 and not isNil(var_242_28) and arg_239_1.var_.actorSpriteComps1060 == nil then
				arg_239_1.var_.actorSpriteComps1060 = var_242_28:GetComponentsInChildren(typeof(Image), true)
			end

			local var_242_30 = 0.2

			if var_242_29 <= arg_239_1.time_ and arg_239_1.time_ < var_242_29 + var_242_30 and not isNil(var_242_28) then
				local var_242_31 = (arg_239_1.time_ - var_242_29) / var_242_30

				if arg_239_1.var_.actorSpriteComps1060 then
					for iter_242_4, iter_242_5 in pairs(arg_239_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_242_5 then
							if arg_239_1.isInRecall_ then
								local var_242_32 = Mathf.Lerp(iter_242_5.color.r, arg_239_1.hightColor1.r, var_242_31)
								local var_242_33 = Mathf.Lerp(iter_242_5.color.g, arg_239_1.hightColor1.g, var_242_31)
								local var_242_34 = Mathf.Lerp(iter_242_5.color.b, arg_239_1.hightColor1.b, var_242_31)

								iter_242_5.color = Color.New(var_242_32, var_242_33, var_242_34)
							else
								local var_242_35 = Mathf.Lerp(iter_242_5.color.r, 1, var_242_31)

								iter_242_5.color = Color.New(var_242_35, var_242_35, var_242_35)
							end
						end
					end
				end
			end

			if arg_239_1.time_ >= var_242_29 + var_242_30 and arg_239_1.time_ < var_242_29 + var_242_30 + arg_242_0 and not isNil(var_242_28) and arg_239_1.var_.actorSpriteComps1060 then
				for iter_242_6, iter_242_7 in pairs(arg_239_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_242_7 then
						if arg_239_1.isInRecall_ then
							iter_242_7.color = arg_239_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_242_7.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_239_1.var_.actorSpriteComps1060 = nil
			end

			local var_242_36 = arg_239_1.actors_["1060"].transform
			local var_242_37 = 2

			if var_242_37 < arg_239_1.time_ and arg_239_1.time_ <= var_242_37 + arg_242_0 then
				arg_239_1.var_.moveOldPos1060 = var_242_36.localPosition
				var_242_36.localScale = Vector3.New(1, 1, 1)

				arg_239_1:CheckSpriteTmpPos("1060", 3)

				local var_242_38 = var_242_36.childCount

				for iter_242_8 = 0, var_242_38 - 1 do
					local var_242_39 = var_242_36:GetChild(iter_242_8)

					if var_242_39.name == "" or not string.find(var_242_39.name, "split") then
						var_242_39.gameObject:SetActive(true)
					else
						var_242_39.gameObject:SetActive(false)
					end
				end
			end

			local var_242_40 = 0.001

			if var_242_37 <= arg_239_1.time_ and arg_239_1.time_ < var_242_37 + var_242_40 then
				local var_242_41 = (arg_239_1.time_ - var_242_37) / var_242_40
				local var_242_42 = Vector3.New(33.4, -430.8, 6.9)

				var_242_36.localPosition = Vector3.Lerp(arg_239_1.var_.moveOldPos1060, var_242_42, var_242_41)
			end

			if arg_239_1.time_ >= var_242_37 + var_242_40 and arg_239_1.time_ < var_242_37 + var_242_40 + arg_242_0 then
				var_242_36.localPosition = Vector3.New(33.4, -430.8, 6.9)
			end

			local var_242_43 = 0

			if var_242_43 < arg_239_1.time_ and arg_239_1.time_ <= var_242_43 + arg_242_0 then
				arg_239_1.fswbg_:SetActive(false)
				arg_239_1.dialog_:SetActive(false)
				arg_239_1:ShowNextGo(false)
			end

			local var_242_44 = 0
			local var_242_45 = 0.2

			if var_242_44 < arg_239_1.time_ and arg_239_1.time_ <= var_242_44 + arg_242_0 then
				local var_242_46 = "play"
				local var_242_47 = "music"

				arg_239_1:AudioAction(var_242_46, var_242_47, "ui_battle", "ui_battle_stopbgm", "")

				local var_242_48 = ""
				local var_242_49 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_242_49 ~= "" then
					if arg_239_1.bgmTxt_.text ~= var_242_49 and arg_239_1.bgmTxt_.text ~= "" then
						if arg_239_1.bgmTxt2_.text ~= "" then
							arg_239_1.bgmTxt_.text = arg_239_1.bgmTxt2_.text
						end

						arg_239_1.bgmTxt2_.text = var_242_49

						arg_239_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_239_1.bgmTxt_.text = var_242_49
					end

					if arg_239_1.bgmTimer then
						arg_239_1.bgmTimer:Stop()

						arg_239_1.bgmTimer = nil
					end

					if arg_239_1.settingData.show_music_name == 1 then
						arg_239_1.musicController:SetSelectedState("show")
						arg_239_1.musicAnimator_:Play("open", 0, 0)

						if arg_239_1.settingData.music_time ~= 0 then
							arg_239_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_239_1.settingData.music_time), function()
								if arg_239_1 == nil or isNil(arg_239_1.bgmTxt_) then
									return
								end

								arg_239_1.musicController:SetSelectedState("hide")
								arg_239_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_242_50 = 0.333333333333333
			local var_242_51 = 1

			if var_242_50 < arg_239_1.time_ and arg_239_1.time_ <= var_242_50 + arg_242_0 then
				local var_242_52 = "play"
				local var_242_53 = "music"

				arg_239_1:AudioAction(var_242_52, var_242_53, "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base.awb")

				local var_242_54 = ""
				local var_242_55 = manager.audio:GetAudioName("bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base")

				if var_242_55 ~= "" then
					if arg_239_1.bgmTxt_.text ~= var_242_55 and arg_239_1.bgmTxt_.text ~= "" then
						if arg_239_1.bgmTxt2_.text ~= "" then
							arg_239_1.bgmTxt_.text = arg_239_1.bgmTxt2_.text
						end

						arg_239_1.bgmTxt2_.text = var_242_55

						arg_239_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_239_1.bgmTxt_.text = var_242_55
					end

					if arg_239_1.bgmTimer then
						arg_239_1.bgmTimer:Stop()

						arg_239_1.bgmTimer = nil
					end

					if arg_239_1.settingData.show_music_name == 1 then
						arg_239_1.musicController:SetSelectedState("show")
						arg_239_1.musicAnimator_:Play("open", 0, 0)

						if arg_239_1.settingData.music_time ~= 0 then
							arg_239_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_239_1.settingData.music_time), function()
								if arg_239_1 == nil or isNil(arg_239_1.bgmTxt_) then
									return
								end

								arg_239_1.musicController:SetSelectedState("hide")
								arg_239_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			if arg_239_1.frameCnt_ <= 1 then
				arg_239_1.dialog_:SetActive(false)
			end

			local var_242_56 = 2
			local var_242_57 = 0.425

			if var_242_56 < arg_239_1.time_ and arg_239_1.time_ <= var_242_56 + arg_242_0 then
				arg_239_1.talkMaxDuration = 0

				arg_239_1.dialog_:SetActive(true)

				local var_242_58 = LeanTween.value(arg_239_1.dialog_, 0, 1, 0.3)

				var_242_58:setOnUpdate(LuaHelper.FloatAction(function(arg_245_0)
					arg_239_1.dialogCg_.alpha = arg_245_0
				end))
				var_242_58:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_239_1.dialog_)
					var_242_58:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_239_1.duration_ = arg_239_1.duration_ + 0.3

				SetActive(arg_239_1.leftNameGo_, true)

				local var_242_59 = arg_239_1:FormatText(StoryNameCfg[584].name)

				arg_239_1.leftNameTxt_.text = var_242_59

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_239_1.leftNameTxt_.transform)

				arg_239_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_239_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_239_1:RecordName(arg_239_1.leftNameTxt_.text)
				SetActive(arg_239_1.iconTrs_.gameObject, false)
				arg_239_1.callingController_:SetSelectedState("normal")

				local var_242_60 = arg_239_1:GetWordFromCfg(417161059)
				local var_242_61 = arg_239_1:FormatText(var_242_60.content)

				arg_239_1.text_.text = var_242_61

				LuaForUtil.ClearLinePrefixSymbol(arg_239_1.text_)

				local var_242_62 = 17
				local var_242_63 = utf8.len(var_242_61)
				local var_242_64 = var_242_62 <= 0 and var_242_57 or var_242_57 * (var_242_63 / var_242_62)

				if var_242_64 > 0 and var_242_57 < var_242_64 then
					arg_239_1.talkMaxDuration = var_242_64
					var_242_56 = var_242_56 + 0.3

					if var_242_64 + var_242_56 > arg_239_1.duration_ then
						arg_239_1.duration_ = var_242_64 + var_242_56
					end
				end

				arg_239_1.text_.text = var_242_61
				arg_239_1.typewritter.percent = 0

				arg_239_1.typewritter:SetDirty()
				arg_239_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161059", "story_v_out_417161.awb") ~= 0 then
					local var_242_65 = manager.audio:GetVoiceLength("story_v_out_417161", "417161059", "story_v_out_417161.awb") / 1000

					if var_242_65 + var_242_56 > arg_239_1.duration_ then
						arg_239_1.duration_ = var_242_65 + var_242_56
					end

					if var_242_60.prefab_name ~= "" and arg_239_1.actors_[var_242_60.prefab_name] ~= nil then
						local var_242_66 = LuaForUtil.PlayVoiceWithCriLipsync(arg_239_1.actors_[var_242_60.prefab_name].transform, "story_v_out_417161", "417161059", "story_v_out_417161.awb")

						arg_239_1:RecordAudio("417161059", var_242_66)
						arg_239_1:RecordAudio("417161059", var_242_66)
					else
						arg_239_1:AudioAction("play", "voice", "story_v_out_417161", "417161059", "story_v_out_417161.awb")
					end

					arg_239_1:RecordHistoryTalkVoice("story_v_out_417161", "417161059", "story_v_out_417161.awb")
				end

				arg_239_1:RecordContent(arg_239_1.text_.text)
			end

			local var_242_67 = var_242_56 + 0.3
			local var_242_68 = math.max(var_242_57, arg_239_1.talkMaxDuration)

			if var_242_67 <= arg_239_1.time_ and arg_239_1.time_ < var_242_67 + var_242_68 then
				arg_239_1.typewritter.percent = (arg_239_1.time_ - var_242_67) / var_242_68

				arg_239_1.typewritter:SetDirty()
			end

			if arg_239_1.time_ >= var_242_67 + var_242_68 and arg_239_1.time_ < var_242_67 + var_242_68 + arg_242_0 then
				arg_239_1.typewritter.percent = 1

				arg_239_1.typewritter:SetDirty()
				arg_239_1:ShowNextGo(true)
			end
		end
	end,
	Play417161060 = function(arg_247_0, arg_247_1)
		arg_247_1.time_ = 0
		arg_247_1.frameCnt_ = 0
		arg_247_1.state_ = "playing"
		arg_247_1.curTalkId_ = 417161060
		arg_247_1.duration_ = 5

		SetActive(arg_247_1.tipsGo_, false)

		function arg_247_1.onSingleLineFinish_()
			arg_247_1.onSingleLineUpdate_ = nil
			arg_247_1.onSingleLineFinish_ = nil
			arg_247_1.state_ = "waiting"
		end

		function arg_247_1.playNext_(arg_249_0)
			if arg_249_0 == 1 then
				arg_247_0:Play417161061(arg_247_1)
			end
		end

		function arg_247_1.onSingleLineUpdate_(arg_250_0)
			local var_250_0 = arg_247_1.actors_["1060"].transform
			local var_250_1 = 0

			if var_250_1 < arg_247_1.time_ and arg_247_1.time_ <= var_250_1 + arg_250_0 then
				arg_247_1.var_.moveOldPos1060 = var_250_0.localPosition
				var_250_0.localScale = Vector3.New(1, 1, 1)

				arg_247_1:CheckSpriteTmpPos("1060", 7)

				local var_250_2 = var_250_0.childCount

				for iter_250_0 = 0, var_250_2 - 1 do
					local var_250_3 = var_250_0:GetChild(iter_250_0)

					if var_250_3.name == "" or not string.find(var_250_3.name, "split") then
						var_250_3.gameObject:SetActive(true)
					else
						var_250_3.gameObject:SetActive(false)
					end
				end
			end

			local var_250_4 = 0.001

			if var_250_1 <= arg_247_1.time_ and arg_247_1.time_ < var_250_1 + var_250_4 then
				local var_250_5 = (arg_247_1.time_ - var_250_1) / var_250_4
				local var_250_6 = Vector3.New(0, -2000, -40)

				var_250_0.localPosition = Vector3.Lerp(arg_247_1.var_.moveOldPos1060, var_250_6, var_250_5)
			end

			if arg_247_1.time_ >= var_250_1 + var_250_4 and arg_247_1.time_ < var_250_1 + var_250_4 + arg_250_0 then
				var_250_0.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_250_7 = 0
			local var_250_8 = 1

			if var_250_7 < arg_247_1.time_ and arg_247_1.time_ <= var_250_7 + arg_250_0 then
				local var_250_9 = "play"
				local var_250_10 = "effect"

				arg_247_1:AudioAction(var_250_9, var_250_10, "se_story_1310", "se_story_1310_clap", "")
			end

			local var_250_11 = 0
			local var_250_12 = 1.075

			if var_250_11 < arg_247_1.time_ and arg_247_1.time_ <= var_250_11 + arg_250_0 then
				arg_247_1.talkMaxDuration = 0
				arg_247_1.dialogCg_.alpha = 1

				arg_247_1.dialog_:SetActive(true)
				SetActive(arg_247_1.leftNameGo_, false)

				arg_247_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_247_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_247_1:RecordName(arg_247_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_247_1.iconTrs_.gameObject, false)
				arg_247_1.callingController_:SetSelectedState("normal")

				local var_250_13 = arg_247_1:GetWordFromCfg(417161060)
				local var_250_14 = arg_247_1:FormatText(var_250_13.content)

				arg_247_1.text_.text = var_250_14

				LuaForUtil.ClearLinePrefixSymbol(arg_247_1.text_)

				local var_250_15 = 43
				local var_250_16 = utf8.len(var_250_14)
				local var_250_17 = var_250_15 <= 0 and var_250_12 or var_250_12 * (var_250_16 / var_250_15)

				if var_250_17 > 0 and var_250_12 < var_250_17 then
					arg_247_1.talkMaxDuration = var_250_17

					if var_250_17 + var_250_11 > arg_247_1.duration_ then
						arg_247_1.duration_ = var_250_17 + var_250_11
					end
				end

				arg_247_1.text_.text = var_250_14
				arg_247_1.typewritter.percent = 0

				arg_247_1.typewritter:SetDirty()
				arg_247_1:ShowNextGo(false)
				arg_247_1:RecordContent(arg_247_1.text_.text)
			end

			local var_250_18 = math.max(var_250_12, arg_247_1.talkMaxDuration)

			if var_250_11 <= arg_247_1.time_ and arg_247_1.time_ < var_250_11 + var_250_18 then
				arg_247_1.typewritter.percent = (arg_247_1.time_ - var_250_11) / var_250_18

				arg_247_1.typewritter:SetDirty()
			end

			if arg_247_1.time_ >= var_250_11 + var_250_18 and arg_247_1.time_ < var_250_11 + var_250_18 + arg_250_0 then
				arg_247_1.typewritter.percent = 1

				arg_247_1.typewritter:SetDirty()
				arg_247_1:ShowNextGo(true)
			end
		end
	end,
	Play417161061 = function(arg_251_0, arg_251_1)
		arg_251_1.time_ = 0
		arg_251_1.frameCnt_ = 0
		arg_251_1.state_ = "playing"
		arg_251_1.curTalkId_ = 417161061
		arg_251_1.duration_ = 3.2

		local var_251_0 = {
			zh = 3.2,
			ja = 2.933
		}
		local var_251_1 = manager.audio:GetLocalizationFlag()

		if var_251_0[var_251_1] ~= nil then
			arg_251_1.duration_ = var_251_0[var_251_1]
		end

		SetActive(arg_251_1.tipsGo_, false)

		function arg_251_1.onSingleLineFinish_()
			arg_251_1.onSingleLineUpdate_ = nil
			arg_251_1.onSingleLineFinish_ = nil
			arg_251_1.state_ = "waiting"
		end

		function arg_251_1.playNext_(arg_253_0)
			if arg_253_0 == 1 then
				arg_251_0:Play417161062(arg_251_1)
			end
		end

		function arg_251_1.onSingleLineUpdate_(arg_254_0)
			local var_254_0 = arg_251_1.actors_["10128"]
			local var_254_1 = 0

			if var_254_1 < arg_251_1.time_ and arg_251_1.time_ <= var_254_1 + arg_254_0 and not isNil(var_254_0) and arg_251_1.var_.actorSpriteComps10128 == nil then
				arg_251_1.var_.actorSpriteComps10128 = var_254_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_254_2 = 0.2

			if var_254_1 <= arg_251_1.time_ and arg_251_1.time_ < var_254_1 + var_254_2 and not isNil(var_254_0) then
				local var_254_3 = (arg_251_1.time_ - var_254_1) / var_254_2

				if arg_251_1.var_.actorSpriteComps10128 then
					for iter_254_0, iter_254_1 in pairs(arg_251_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_254_1 then
							if arg_251_1.isInRecall_ then
								local var_254_4 = Mathf.Lerp(iter_254_1.color.r, arg_251_1.hightColor1.r, var_254_3)
								local var_254_5 = Mathf.Lerp(iter_254_1.color.g, arg_251_1.hightColor1.g, var_254_3)
								local var_254_6 = Mathf.Lerp(iter_254_1.color.b, arg_251_1.hightColor1.b, var_254_3)

								iter_254_1.color = Color.New(var_254_4, var_254_5, var_254_6)
							else
								local var_254_7 = Mathf.Lerp(iter_254_1.color.r, 1, var_254_3)

								iter_254_1.color = Color.New(var_254_7, var_254_7, var_254_7)
							end
						end
					end
				end
			end

			if arg_251_1.time_ >= var_254_1 + var_254_2 and arg_251_1.time_ < var_254_1 + var_254_2 + arg_254_0 and not isNil(var_254_0) and arg_251_1.var_.actorSpriteComps10128 then
				for iter_254_2, iter_254_3 in pairs(arg_251_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_254_3 then
						if arg_251_1.isInRecall_ then
							iter_254_3.color = arg_251_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_254_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_251_1.var_.actorSpriteComps10128 = nil
			end

			local var_254_8 = arg_251_1.actors_["10128"].transform
			local var_254_9 = 0

			if var_254_9 < arg_251_1.time_ and arg_251_1.time_ <= var_254_9 + arg_254_0 then
				arg_251_1.var_.moveOldPos10128 = var_254_8.localPosition
				var_254_8.localScale = Vector3.New(1, 1, 1)

				arg_251_1:CheckSpriteTmpPos("10128", 3)

				local var_254_10 = var_254_8.childCount

				for iter_254_4 = 0, var_254_10 - 1 do
					local var_254_11 = var_254_8:GetChild(iter_254_4)

					if var_254_11.name == "split_6" or not string.find(var_254_11.name, "split") then
						var_254_11.gameObject:SetActive(true)
					else
						var_254_11.gameObject:SetActive(false)
					end
				end
			end

			local var_254_12 = 0.001

			if var_254_9 <= arg_251_1.time_ and arg_251_1.time_ < var_254_9 + var_254_12 then
				local var_254_13 = (arg_251_1.time_ - var_254_9) / var_254_12
				local var_254_14 = Vector3.New(0, -347, -300)

				var_254_8.localPosition = Vector3.Lerp(arg_251_1.var_.moveOldPos10128, var_254_14, var_254_13)
			end

			if arg_251_1.time_ >= var_254_9 + var_254_12 and arg_251_1.time_ < var_254_9 + var_254_12 + arg_254_0 then
				var_254_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_254_15 = 0
			local var_254_16 = 0.375

			if var_254_15 < arg_251_1.time_ and arg_251_1.time_ <= var_254_15 + arg_254_0 then
				arg_251_1.talkMaxDuration = 0
				arg_251_1.dialogCg_.alpha = 1

				arg_251_1.dialog_:SetActive(true)
				SetActive(arg_251_1.leftNameGo_, true)

				local var_254_17 = arg_251_1:FormatText(StoryNameCfg[595].name)

				arg_251_1.leftNameTxt_.text = var_254_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_251_1.leftNameTxt_.transform)

				arg_251_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_251_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_251_1:RecordName(arg_251_1.leftNameTxt_.text)
				SetActive(arg_251_1.iconTrs_.gameObject, false)
				arg_251_1.callingController_:SetSelectedState("normal")

				local var_254_18 = arg_251_1:GetWordFromCfg(417161061)
				local var_254_19 = arg_251_1:FormatText(var_254_18.content)

				arg_251_1.text_.text = var_254_19

				LuaForUtil.ClearLinePrefixSymbol(arg_251_1.text_)

				local var_254_20 = 15
				local var_254_21 = utf8.len(var_254_19)
				local var_254_22 = var_254_20 <= 0 and var_254_16 or var_254_16 * (var_254_21 / var_254_20)

				if var_254_22 > 0 and var_254_16 < var_254_22 then
					arg_251_1.talkMaxDuration = var_254_22

					if var_254_22 + var_254_15 > arg_251_1.duration_ then
						arg_251_1.duration_ = var_254_22 + var_254_15
					end
				end

				arg_251_1.text_.text = var_254_19
				arg_251_1.typewritter.percent = 0

				arg_251_1.typewritter:SetDirty()
				arg_251_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161061", "story_v_out_417161.awb") ~= 0 then
					local var_254_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161061", "story_v_out_417161.awb") / 1000

					if var_254_23 + var_254_15 > arg_251_1.duration_ then
						arg_251_1.duration_ = var_254_23 + var_254_15
					end

					if var_254_18.prefab_name ~= "" and arg_251_1.actors_[var_254_18.prefab_name] ~= nil then
						local var_254_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_251_1.actors_[var_254_18.prefab_name].transform, "story_v_out_417161", "417161061", "story_v_out_417161.awb")

						arg_251_1:RecordAudio("417161061", var_254_24)
						arg_251_1:RecordAudio("417161061", var_254_24)
					else
						arg_251_1:AudioAction("play", "voice", "story_v_out_417161", "417161061", "story_v_out_417161.awb")
					end

					arg_251_1:RecordHistoryTalkVoice("story_v_out_417161", "417161061", "story_v_out_417161.awb")
				end

				arg_251_1:RecordContent(arg_251_1.text_.text)
			end

			local var_254_25 = math.max(var_254_16, arg_251_1.talkMaxDuration)

			if var_254_15 <= arg_251_1.time_ and arg_251_1.time_ < var_254_15 + var_254_25 then
				arg_251_1.typewritter.percent = (arg_251_1.time_ - var_254_15) / var_254_25

				arg_251_1.typewritter:SetDirty()
			end

			if arg_251_1.time_ >= var_254_15 + var_254_25 and arg_251_1.time_ < var_254_15 + var_254_25 + arg_254_0 then
				arg_251_1.typewritter.percent = 1

				arg_251_1.typewritter:SetDirty()
				arg_251_1:ShowNextGo(true)
			end
		end
	end,
	Play417161062 = function(arg_255_0, arg_255_1)
		arg_255_1.time_ = 0
		arg_255_1.frameCnt_ = 0
		arg_255_1.state_ = "playing"
		arg_255_1.curTalkId_ = 417161062
		arg_255_1.duration_ = 7.6

		local var_255_0 = {
			zh = 5.933,
			ja = 7.6
		}
		local var_255_1 = manager.audio:GetLocalizationFlag()

		if var_255_0[var_255_1] ~= nil then
			arg_255_1.duration_ = var_255_0[var_255_1]
		end

		SetActive(arg_255_1.tipsGo_, false)

		function arg_255_1.onSingleLineFinish_()
			arg_255_1.onSingleLineUpdate_ = nil
			arg_255_1.onSingleLineFinish_ = nil
			arg_255_1.state_ = "waiting"
		end

		function arg_255_1.playNext_(arg_257_0)
			if arg_257_0 == 1 then
				arg_255_0:Play417161063(arg_255_1)
			end
		end

		function arg_255_1.onSingleLineUpdate_(arg_258_0)
			local var_258_0 = arg_255_1.actors_["1060"]
			local var_258_1 = 0

			if var_258_1 < arg_255_1.time_ and arg_255_1.time_ <= var_258_1 + arg_258_0 and not isNil(var_258_0) and arg_255_1.var_.actorSpriteComps1060 == nil then
				arg_255_1.var_.actorSpriteComps1060 = var_258_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_258_2 = 0.2

			if var_258_1 <= arg_255_1.time_ and arg_255_1.time_ < var_258_1 + var_258_2 and not isNil(var_258_0) then
				local var_258_3 = (arg_255_1.time_ - var_258_1) / var_258_2

				if arg_255_1.var_.actorSpriteComps1060 then
					for iter_258_0, iter_258_1 in pairs(arg_255_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_258_1 then
							if arg_255_1.isInRecall_ then
								local var_258_4 = Mathf.Lerp(iter_258_1.color.r, arg_255_1.hightColor1.r, var_258_3)
								local var_258_5 = Mathf.Lerp(iter_258_1.color.g, arg_255_1.hightColor1.g, var_258_3)
								local var_258_6 = Mathf.Lerp(iter_258_1.color.b, arg_255_1.hightColor1.b, var_258_3)

								iter_258_1.color = Color.New(var_258_4, var_258_5, var_258_6)
							else
								local var_258_7 = Mathf.Lerp(iter_258_1.color.r, 1, var_258_3)

								iter_258_1.color = Color.New(var_258_7, var_258_7, var_258_7)
							end
						end
					end
				end
			end

			if arg_255_1.time_ >= var_258_1 + var_258_2 and arg_255_1.time_ < var_258_1 + var_258_2 + arg_258_0 and not isNil(var_258_0) and arg_255_1.var_.actorSpriteComps1060 then
				for iter_258_2, iter_258_3 in pairs(arg_255_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_258_3 then
						if arg_255_1.isInRecall_ then
							iter_258_3.color = arg_255_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_258_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_255_1.var_.actorSpriteComps1060 = nil
			end

			local var_258_8 = arg_255_1.actors_["10128"]
			local var_258_9 = 0

			if var_258_9 < arg_255_1.time_ and arg_255_1.time_ <= var_258_9 + arg_258_0 and not isNil(var_258_8) and arg_255_1.var_.actorSpriteComps10128 == nil then
				arg_255_1.var_.actorSpriteComps10128 = var_258_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_258_10 = 0.2

			if var_258_9 <= arg_255_1.time_ and arg_255_1.time_ < var_258_9 + var_258_10 and not isNil(var_258_8) then
				local var_258_11 = (arg_255_1.time_ - var_258_9) / var_258_10

				if arg_255_1.var_.actorSpriteComps10128 then
					for iter_258_4, iter_258_5 in pairs(arg_255_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_258_5 then
							if arg_255_1.isInRecall_ then
								local var_258_12 = Mathf.Lerp(iter_258_5.color.r, arg_255_1.hightColor2.r, var_258_11)
								local var_258_13 = Mathf.Lerp(iter_258_5.color.g, arg_255_1.hightColor2.g, var_258_11)
								local var_258_14 = Mathf.Lerp(iter_258_5.color.b, arg_255_1.hightColor2.b, var_258_11)

								iter_258_5.color = Color.New(var_258_12, var_258_13, var_258_14)
							else
								local var_258_15 = Mathf.Lerp(iter_258_5.color.r, 0.5, var_258_11)

								iter_258_5.color = Color.New(var_258_15, var_258_15, var_258_15)
							end
						end
					end
				end
			end

			if arg_255_1.time_ >= var_258_9 + var_258_10 and arg_255_1.time_ < var_258_9 + var_258_10 + arg_258_0 and not isNil(var_258_8) and arg_255_1.var_.actorSpriteComps10128 then
				for iter_258_6, iter_258_7 in pairs(arg_255_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_258_7 then
						if arg_255_1.isInRecall_ then
							iter_258_7.color = arg_255_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_258_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_255_1.var_.actorSpriteComps10128 = nil
			end

			local var_258_16 = arg_255_1.actors_["10128"].transform
			local var_258_17 = 0

			if var_258_17 < arg_255_1.time_ and arg_255_1.time_ <= var_258_17 + arg_258_0 then
				arg_255_1.var_.moveOldPos10128 = var_258_16.localPosition
				var_258_16.localScale = Vector3.New(1, 1, 1)

				arg_255_1:CheckSpriteTmpPos("10128", 2)

				local var_258_18 = var_258_16.childCount

				for iter_258_8 = 0, var_258_18 - 1 do
					local var_258_19 = var_258_16:GetChild(iter_258_8)

					if var_258_19.name == "" or not string.find(var_258_19.name, "split") then
						var_258_19.gameObject:SetActive(true)
					else
						var_258_19.gameObject:SetActive(false)
					end
				end
			end

			local var_258_20 = 0.001

			if var_258_17 <= arg_255_1.time_ and arg_255_1.time_ < var_258_17 + var_258_20 then
				local var_258_21 = (arg_255_1.time_ - var_258_17) / var_258_20
				local var_258_22 = Vector3.New(-390, -347, -300)

				var_258_16.localPosition = Vector3.Lerp(arg_255_1.var_.moveOldPos10128, var_258_22, var_258_21)
			end

			if arg_255_1.time_ >= var_258_17 + var_258_20 and arg_255_1.time_ < var_258_17 + var_258_20 + arg_258_0 then
				var_258_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_258_23 = arg_255_1.actors_["1060"].transform
			local var_258_24 = 0

			if var_258_24 < arg_255_1.time_ and arg_255_1.time_ <= var_258_24 + arg_258_0 then
				arg_255_1.var_.moveOldPos1060 = var_258_23.localPosition
				var_258_23.localScale = Vector3.New(1, 1, 1)

				arg_255_1:CheckSpriteTmpPos("1060", 4)

				local var_258_25 = var_258_23.childCount

				for iter_258_9 = 0, var_258_25 - 1 do
					local var_258_26 = var_258_23:GetChild(iter_258_9)

					if var_258_26.name == "split_1" or not string.find(var_258_26.name, "split") then
						var_258_26.gameObject:SetActive(true)
					else
						var_258_26.gameObject:SetActive(false)
					end
				end
			end

			local var_258_27 = 0.001

			if var_258_24 <= arg_255_1.time_ and arg_255_1.time_ < var_258_24 + var_258_27 then
				local var_258_28 = (arg_255_1.time_ - var_258_24) / var_258_27
				local var_258_29 = Vector3.New(420.9, -430.8, 6.9)

				var_258_23.localPosition = Vector3.Lerp(arg_255_1.var_.moveOldPos1060, var_258_29, var_258_28)
			end

			if arg_255_1.time_ >= var_258_24 + var_258_27 and arg_255_1.time_ < var_258_24 + var_258_27 + arg_258_0 then
				var_258_23.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_258_30 = 0
			local var_258_31 = 0.675

			if var_258_30 < arg_255_1.time_ and arg_255_1.time_ <= var_258_30 + arg_258_0 then
				arg_255_1.talkMaxDuration = 0
				arg_255_1.dialogCg_.alpha = 1

				arg_255_1.dialog_:SetActive(true)
				SetActive(arg_255_1.leftNameGo_, true)

				local var_258_32 = arg_255_1:FormatText(StoryNameCfg[584].name)

				arg_255_1.leftNameTxt_.text = var_258_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_255_1.leftNameTxt_.transform)

				arg_255_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_255_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_255_1:RecordName(arg_255_1.leftNameTxt_.text)
				SetActive(arg_255_1.iconTrs_.gameObject, false)
				arg_255_1.callingController_:SetSelectedState("normal")

				local var_258_33 = arg_255_1:GetWordFromCfg(417161062)
				local var_258_34 = arg_255_1:FormatText(var_258_33.content)

				arg_255_1.text_.text = var_258_34

				LuaForUtil.ClearLinePrefixSymbol(arg_255_1.text_)

				local var_258_35 = 27
				local var_258_36 = utf8.len(var_258_34)
				local var_258_37 = var_258_35 <= 0 and var_258_31 or var_258_31 * (var_258_36 / var_258_35)

				if var_258_37 > 0 and var_258_31 < var_258_37 then
					arg_255_1.talkMaxDuration = var_258_37

					if var_258_37 + var_258_30 > arg_255_1.duration_ then
						arg_255_1.duration_ = var_258_37 + var_258_30
					end
				end

				arg_255_1.text_.text = var_258_34
				arg_255_1.typewritter.percent = 0

				arg_255_1.typewritter:SetDirty()
				arg_255_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161062", "story_v_out_417161.awb") ~= 0 then
					local var_258_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161062", "story_v_out_417161.awb") / 1000

					if var_258_38 + var_258_30 > arg_255_1.duration_ then
						arg_255_1.duration_ = var_258_38 + var_258_30
					end

					if var_258_33.prefab_name ~= "" and arg_255_1.actors_[var_258_33.prefab_name] ~= nil then
						local var_258_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_255_1.actors_[var_258_33.prefab_name].transform, "story_v_out_417161", "417161062", "story_v_out_417161.awb")

						arg_255_1:RecordAudio("417161062", var_258_39)
						arg_255_1:RecordAudio("417161062", var_258_39)
					else
						arg_255_1:AudioAction("play", "voice", "story_v_out_417161", "417161062", "story_v_out_417161.awb")
					end

					arg_255_1:RecordHistoryTalkVoice("story_v_out_417161", "417161062", "story_v_out_417161.awb")
				end

				arg_255_1:RecordContent(arg_255_1.text_.text)
			end

			local var_258_40 = math.max(var_258_31, arg_255_1.talkMaxDuration)

			if var_258_30 <= arg_255_1.time_ and arg_255_1.time_ < var_258_30 + var_258_40 then
				arg_255_1.typewritter.percent = (arg_255_1.time_ - var_258_30) / var_258_40

				arg_255_1.typewritter:SetDirty()
			end

			if arg_255_1.time_ >= var_258_30 + var_258_40 and arg_255_1.time_ < var_258_30 + var_258_40 + arg_258_0 then
				arg_255_1.typewritter.percent = 1

				arg_255_1.typewritter:SetDirty()
				arg_255_1:ShowNextGo(true)
			end
		end
	end,
	Play417161063 = function(arg_259_0, arg_259_1)
		arg_259_1.time_ = 0
		arg_259_1.frameCnt_ = 0
		arg_259_1.state_ = "playing"
		arg_259_1.curTalkId_ = 417161063
		arg_259_1.duration_ = 10.5

		local var_259_0 = {
			zh = 10.5,
			ja = 9.066
		}
		local var_259_1 = manager.audio:GetLocalizationFlag()

		if var_259_0[var_259_1] ~= nil then
			arg_259_1.duration_ = var_259_0[var_259_1]
		end

		SetActive(arg_259_1.tipsGo_, false)

		function arg_259_1.onSingleLineFinish_()
			arg_259_1.onSingleLineUpdate_ = nil
			arg_259_1.onSingleLineFinish_ = nil
			arg_259_1.state_ = "waiting"
		end

		function arg_259_1.playNext_(arg_261_0)
			if arg_261_0 == 1 then
				arg_259_0:Play417161064(arg_259_1)
			end
		end

		function arg_259_1.onSingleLineUpdate_(arg_262_0)
			local var_262_0 = arg_259_1.actors_["1060"].transform
			local var_262_1 = 0

			if var_262_1 < arg_259_1.time_ and arg_259_1.time_ <= var_262_1 + arg_262_0 then
				arg_259_1.var_.moveOldPos1060 = var_262_0.localPosition
				var_262_0.localScale = Vector3.New(1, 1, 1)

				arg_259_1:CheckSpriteTmpPos("1060", 4)

				local var_262_2 = var_262_0.childCount

				for iter_262_0 = 0, var_262_2 - 1 do
					local var_262_3 = var_262_0:GetChild(iter_262_0)

					if var_262_3.name == "split_4" or not string.find(var_262_3.name, "split") then
						var_262_3.gameObject:SetActive(true)
					else
						var_262_3.gameObject:SetActive(false)
					end
				end
			end

			local var_262_4 = 0.001

			if var_262_1 <= arg_259_1.time_ and arg_259_1.time_ < var_262_1 + var_262_4 then
				local var_262_5 = (arg_259_1.time_ - var_262_1) / var_262_4
				local var_262_6 = Vector3.New(420.9, -430.8, 6.9)

				var_262_0.localPosition = Vector3.Lerp(arg_259_1.var_.moveOldPos1060, var_262_6, var_262_5)
			end

			if arg_259_1.time_ >= var_262_1 + var_262_4 and arg_259_1.time_ < var_262_1 + var_262_4 + arg_262_0 then
				var_262_0.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_262_7 = 0
			local var_262_8 = 1

			if var_262_7 < arg_259_1.time_ and arg_259_1.time_ <= var_262_7 + arg_262_0 then
				arg_259_1.talkMaxDuration = 0
				arg_259_1.dialogCg_.alpha = 1

				arg_259_1.dialog_:SetActive(true)
				SetActive(arg_259_1.leftNameGo_, true)

				local var_262_9 = arg_259_1:FormatText(StoryNameCfg[584].name)

				arg_259_1.leftNameTxt_.text = var_262_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_259_1.leftNameTxt_.transform)

				arg_259_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_259_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_259_1:RecordName(arg_259_1.leftNameTxt_.text)
				SetActive(arg_259_1.iconTrs_.gameObject, false)
				arg_259_1.callingController_:SetSelectedState("normal")

				local var_262_10 = arg_259_1:GetWordFromCfg(417161063)
				local var_262_11 = arg_259_1:FormatText(var_262_10.content)

				arg_259_1.text_.text = var_262_11

				LuaForUtil.ClearLinePrefixSymbol(arg_259_1.text_)

				local var_262_12 = 40
				local var_262_13 = utf8.len(var_262_11)
				local var_262_14 = var_262_12 <= 0 and var_262_8 or var_262_8 * (var_262_13 / var_262_12)

				if var_262_14 > 0 and var_262_8 < var_262_14 then
					arg_259_1.talkMaxDuration = var_262_14

					if var_262_14 + var_262_7 > arg_259_1.duration_ then
						arg_259_1.duration_ = var_262_14 + var_262_7
					end
				end

				arg_259_1.text_.text = var_262_11
				arg_259_1.typewritter.percent = 0

				arg_259_1.typewritter:SetDirty()
				arg_259_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161063", "story_v_out_417161.awb") ~= 0 then
					local var_262_15 = manager.audio:GetVoiceLength("story_v_out_417161", "417161063", "story_v_out_417161.awb") / 1000

					if var_262_15 + var_262_7 > arg_259_1.duration_ then
						arg_259_1.duration_ = var_262_15 + var_262_7
					end

					if var_262_10.prefab_name ~= "" and arg_259_1.actors_[var_262_10.prefab_name] ~= nil then
						local var_262_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_259_1.actors_[var_262_10.prefab_name].transform, "story_v_out_417161", "417161063", "story_v_out_417161.awb")

						arg_259_1:RecordAudio("417161063", var_262_16)
						arg_259_1:RecordAudio("417161063", var_262_16)
					else
						arg_259_1:AudioAction("play", "voice", "story_v_out_417161", "417161063", "story_v_out_417161.awb")
					end

					arg_259_1:RecordHistoryTalkVoice("story_v_out_417161", "417161063", "story_v_out_417161.awb")
				end

				arg_259_1:RecordContent(arg_259_1.text_.text)
			end

			local var_262_17 = math.max(var_262_8, arg_259_1.talkMaxDuration)

			if var_262_7 <= arg_259_1.time_ and arg_259_1.time_ < var_262_7 + var_262_17 then
				arg_259_1.typewritter.percent = (arg_259_1.time_ - var_262_7) / var_262_17

				arg_259_1.typewritter:SetDirty()
			end

			if arg_259_1.time_ >= var_262_7 + var_262_17 and arg_259_1.time_ < var_262_7 + var_262_17 + arg_262_0 then
				arg_259_1.typewritter.percent = 1

				arg_259_1.typewritter:SetDirty()
				arg_259_1:ShowNextGo(true)
			end
		end
	end,
	Play417161064 = function(arg_263_0, arg_263_1)
		arg_263_1.time_ = 0
		arg_263_1.frameCnt_ = 0
		arg_263_1.state_ = "playing"
		arg_263_1.curTalkId_ = 417161064
		arg_263_1.duration_ = 5.03

		local var_263_0 = {
			zh = 3.433,
			ja = 5.033
		}
		local var_263_1 = manager.audio:GetLocalizationFlag()

		if var_263_0[var_263_1] ~= nil then
			arg_263_1.duration_ = var_263_0[var_263_1]
		end

		SetActive(arg_263_1.tipsGo_, false)

		function arg_263_1.onSingleLineFinish_()
			arg_263_1.onSingleLineUpdate_ = nil
			arg_263_1.onSingleLineFinish_ = nil
			arg_263_1.state_ = "waiting"
		end

		function arg_263_1.playNext_(arg_265_0)
			if arg_265_0 == 1 then
				arg_263_0:Play417161065(arg_263_1)
			end
		end

		function arg_263_1.onSingleLineUpdate_(arg_266_0)
			local var_266_0 = arg_263_1.actors_["10128"]
			local var_266_1 = 0

			if var_266_1 < arg_263_1.time_ and arg_263_1.time_ <= var_266_1 + arg_266_0 and not isNil(var_266_0) and arg_263_1.var_.actorSpriteComps10128 == nil then
				arg_263_1.var_.actorSpriteComps10128 = var_266_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_266_2 = 0.2

			if var_266_1 <= arg_263_1.time_ and arg_263_1.time_ < var_266_1 + var_266_2 and not isNil(var_266_0) then
				local var_266_3 = (arg_263_1.time_ - var_266_1) / var_266_2

				if arg_263_1.var_.actorSpriteComps10128 then
					for iter_266_0, iter_266_1 in pairs(arg_263_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_266_1 then
							if arg_263_1.isInRecall_ then
								local var_266_4 = Mathf.Lerp(iter_266_1.color.r, arg_263_1.hightColor1.r, var_266_3)
								local var_266_5 = Mathf.Lerp(iter_266_1.color.g, arg_263_1.hightColor1.g, var_266_3)
								local var_266_6 = Mathf.Lerp(iter_266_1.color.b, arg_263_1.hightColor1.b, var_266_3)

								iter_266_1.color = Color.New(var_266_4, var_266_5, var_266_6)
							else
								local var_266_7 = Mathf.Lerp(iter_266_1.color.r, 1, var_266_3)

								iter_266_1.color = Color.New(var_266_7, var_266_7, var_266_7)
							end
						end
					end
				end
			end

			if arg_263_1.time_ >= var_266_1 + var_266_2 and arg_263_1.time_ < var_266_1 + var_266_2 + arg_266_0 and not isNil(var_266_0) and arg_263_1.var_.actorSpriteComps10128 then
				for iter_266_2, iter_266_3 in pairs(arg_263_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_266_3 then
						if arg_263_1.isInRecall_ then
							iter_266_3.color = arg_263_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_266_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_263_1.var_.actorSpriteComps10128 = nil
			end

			local var_266_8 = arg_263_1.actors_["1060"]
			local var_266_9 = 0

			if var_266_9 < arg_263_1.time_ and arg_263_1.time_ <= var_266_9 + arg_266_0 and not isNil(var_266_8) and arg_263_1.var_.actorSpriteComps1060 == nil then
				arg_263_1.var_.actorSpriteComps1060 = var_266_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_266_10 = 0.2

			if var_266_9 <= arg_263_1.time_ and arg_263_1.time_ < var_266_9 + var_266_10 and not isNil(var_266_8) then
				local var_266_11 = (arg_263_1.time_ - var_266_9) / var_266_10

				if arg_263_1.var_.actorSpriteComps1060 then
					for iter_266_4, iter_266_5 in pairs(arg_263_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_266_5 then
							if arg_263_1.isInRecall_ then
								local var_266_12 = Mathf.Lerp(iter_266_5.color.r, arg_263_1.hightColor2.r, var_266_11)
								local var_266_13 = Mathf.Lerp(iter_266_5.color.g, arg_263_1.hightColor2.g, var_266_11)
								local var_266_14 = Mathf.Lerp(iter_266_5.color.b, arg_263_1.hightColor2.b, var_266_11)

								iter_266_5.color = Color.New(var_266_12, var_266_13, var_266_14)
							else
								local var_266_15 = Mathf.Lerp(iter_266_5.color.r, 0.5, var_266_11)

								iter_266_5.color = Color.New(var_266_15, var_266_15, var_266_15)
							end
						end
					end
				end
			end

			if arg_263_1.time_ >= var_266_9 + var_266_10 and arg_263_1.time_ < var_266_9 + var_266_10 + arg_266_0 and not isNil(var_266_8) and arg_263_1.var_.actorSpriteComps1060 then
				for iter_266_6, iter_266_7 in pairs(arg_263_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_266_7 then
						if arg_263_1.isInRecall_ then
							iter_266_7.color = arg_263_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_266_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_263_1.var_.actorSpriteComps1060 = nil
			end

			local var_266_16 = 0
			local var_266_17 = 0.425

			if var_266_16 < arg_263_1.time_ and arg_263_1.time_ <= var_266_16 + arg_266_0 then
				arg_263_1.talkMaxDuration = 0
				arg_263_1.dialogCg_.alpha = 1

				arg_263_1.dialog_:SetActive(true)
				SetActive(arg_263_1.leftNameGo_, true)

				local var_266_18 = arg_263_1:FormatText(StoryNameCfg[595].name)

				arg_263_1.leftNameTxt_.text = var_266_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_263_1.leftNameTxt_.transform)

				arg_263_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_263_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_263_1:RecordName(arg_263_1.leftNameTxt_.text)
				SetActive(arg_263_1.iconTrs_.gameObject, false)
				arg_263_1.callingController_:SetSelectedState("normal")

				local var_266_19 = arg_263_1:GetWordFromCfg(417161064)
				local var_266_20 = arg_263_1:FormatText(var_266_19.content)

				arg_263_1.text_.text = var_266_20

				LuaForUtil.ClearLinePrefixSymbol(arg_263_1.text_)

				local var_266_21 = 17
				local var_266_22 = utf8.len(var_266_20)
				local var_266_23 = var_266_21 <= 0 and var_266_17 or var_266_17 * (var_266_22 / var_266_21)

				if var_266_23 > 0 and var_266_17 < var_266_23 then
					arg_263_1.talkMaxDuration = var_266_23

					if var_266_23 + var_266_16 > arg_263_1.duration_ then
						arg_263_1.duration_ = var_266_23 + var_266_16
					end
				end

				arg_263_1.text_.text = var_266_20
				arg_263_1.typewritter.percent = 0

				arg_263_1.typewritter:SetDirty()
				arg_263_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161064", "story_v_out_417161.awb") ~= 0 then
					local var_266_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161064", "story_v_out_417161.awb") / 1000

					if var_266_24 + var_266_16 > arg_263_1.duration_ then
						arg_263_1.duration_ = var_266_24 + var_266_16
					end

					if var_266_19.prefab_name ~= "" and arg_263_1.actors_[var_266_19.prefab_name] ~= nil then
						local var_266_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_263_1.actors_[var_266_19.prefab_name].transform, "story_v_out_417161", "417161064", "story_v_out_417161.awb")

						arg_263_1:RecordAudio("417161064", var_266_25)
						arg_263_1:RecordAudio("417161064", var_266_25)
					else
						arg_263_1:AudioAction("play", "voice", "story_v_out_417161", "417161064", "story_v_out_417161.awb")
					end

					arg_263_1:RecordHistoryTalkVoice("story_v_out_417161", "417161064", "story_v_out_417161.awb")
				end

				arg_263_1:RecordContent(arg_263_1.text_.text)
			end

			local var_266_26 = math.max(var_266_17, arg_263_1.talkMaxDuration)

			if var_266_16 <= arg_263_1.time_ and arg_263_1.time_ < var_266_16 + var_266_26 then
				arg_263_1.typewritter.percent = (arg_263_1.time_ - var_266_16) / var_266_26

				arg_263_1.typewritter:SetDirty()
			end

			if arg_263_1.time_ >= var_266_16 + var_266_26 and arg_263_1.time_ < var_266_16 + var_266_26 + arg_266_0 then
				arg_263_1.typewritter.percent = 1

				arg_263_1.typewritter:SetDirty()
				arg_263_1:ShowNextGo(true)
			end
		end
	end,
	Play417161065 = function(arg_267_0, arg_267_1)
		arg_267_1.time_ = 0
		arg_267_1.frameCnt_ = 0
		arg_267_1.state_ = "playing"
		arg_267_1.curTalkId_ = 417161065
		arg_267_1.duration_ = 2.97

		local var_267_0 = {
			zh = 2.766,
			ja = 2.966
		}
		local var_267_1 = manager.audio:GetLocalizationFlag()

		if var_267_0[var_267_1] ~= nil then
			arg_267_1.duration_ = var_267_0[var_267_1]
		end

		SetActive(arg_267_1.tipsGo_, false)

		function arg_267_1.onSingleLineFinish_()
			arg_267_1.onSingleLineUpdate_ = nil
			arg_267_1.onSingleLineFinish_ = nil
			arg_267_1.state_ = "waiting"
		end

		function arg_267_1.playNext_(arg_269_0)
			if arg_269_0 == 1 then
				arg_267_0:Play417161066(arg_267_1)
			end
		end

		function arg_267_1.onSingleLineUpdate_(arg_270_0)
			local var_270_0 = arg_267_1.actors_["1060"]
			local var_270_1 = 0

			if var_270_1 < arg_267_1.time_ and arg_267_1.time_ <= var_270_1 + arg_270_0 and not isNil(var_270_0) and arg_267_1.var_.actorSpriteComps1060 == nil then
				arg_267_1.var_.actorSpriteComps1060 = var_270_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_270_2 = 0.2

			if var_270_1 <= arg_267_1.time_ and arg_267_1.time_ < var_270_1 + var_270_2 and not isNil(var_270_0) then
				local var_270_3 = (arg_267_1.time_ - var_270_1) / var_270_2

				if arg_267_1.var_.actorSpriteComps1060 then
					for iter_270_0, iter_270_1 in pairs(arg_267_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_270_1 then
							if arg_267_1.isInRecall_ then
								local var_270_4 = Mathf.Lerp(iter_270_1.color.r, arg_267_1.hightColor1.r, var_270_3)
								local var_270_5 = Mathf.Lerp(iter_270_1.color.g, arg_267_1.hightColor1.g, var_270_3)
								local var_270_6 = Mathf.Lerp(iter_270_1.color.b, arg_267_1.hightColor1.b, var_270_3)

								iter_270_1.color = Color.New(var_270_4, var_270_5, var_270_6)
							else
								local var_270_7 = Mathf.Lerp(iter_270_1.color.r, 1, var_270_3)

								iter_270_1.color = Color.New(var_270_7, var_270_7, var_270_7)
							end
						end
					end
				end
			end

			if arg_267_1.time_ >= var_270_1 + var_270_2 and arg_267_1.time_ < var_270_1 + var_270_2 + arg_270_0 and not isNil(var_270_0) and arg_267_1.var_.actorSpriteComps1060 then
				for iter_270_2, iter_270_3 in pairs(arg_267_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_270_3 then
						if arg_267_1.isInRecall_ then
							iter_270_3.color = arg_267_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_270_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_267_1.var_.actorSpriteComps1060 = nil
			end

			local var_270_8 = arg_267_1.actors_["10128"]
			local var_270_9 = 0

			if var_270_9 < arg_267_1.time_ and arg_267_1.time_ <= var_270_9 + arg_270_0 and not isNil(var_270_8) and arg_267_1.var_.actorSpriteComps10128 == nil then
				arg_267_1.var_.actorSpriteComps10128 = var_270_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_270_10 = 0.2

			if var_270_9 <= arg_267_1.time_ and arg_267_1.time_ < var_270_9 + var_270_10 and not isNil(var_270_8) then
				local var_270_11 = (arg_267_1.time_ - var_270_9) / var_270_10

				if arg_267_1.var_.actorSpriteComps10128 then
					for iter_270_4, iter_270_5 in pairs(arg_267_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_270_5 then
							if arg_267_1.isInRecall_ then
								local var_270_12 = Mathf.Lerp(iter_270_5.color.r, arg_267_1.hightColor2.r, var_270_11)
								local var_270_13 = Mathf.Lerp(iter_270_5.color.g, arg_267_1.hightColor2.g, var_270_11)
								local var_270_14 = Mathf.Lerp(iter_270_5.color.b, arg_267_1.hightColor2.b, var_270_11)

								iter_270_5.color = Color.New(var_270_12, var_270_13, var_270_14)
							else
								local var_270_15 = Mathf.Lerp(iter_270_5.color.r, 0.5, var_270_11)

								iter_270_5.color = Color.New(var_270_15, var_270_15, var_270_15)
							end
						end
					end
				end
			end

			if arg_267_1.time_ >= var_270_9 + var_270_10 and arg_267_1.time_ < var_270_9 + var_270_10 + arg_270_0 and not isNil(var_270_8) and arg_267_1.var_.actorSpriteComps10128 then
				for iter_270_6, iter_270_7 in pairs(arg_267_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_270_7 then
						if arg_267_1.isInRecall_ then
							iter_270_7.color = arg_267_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_270_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_267_1.var_.actorSpriteComps10128 = nil
			end

			local var_270_16 = arg_267_1.actors_["1060"].transform
			local var_270_17 = 0

			if var_270_17 < arg_267_1.time_ and arg_267_1.time_ <= var_270_17 + arg_270_0 then
				arg_267_1.var_.moveOldPos1060 = var_270_16.localPosition
				var_270_16.localScale = Vector3.New(1, 1, 1)

				arg_267_1:CheckSpriteTmpPos("1060", 4)

				local var_270_18 = var_270_16.childCount

				for iter_270_8 = 0, var_270_18 - 1 do
					local var_270_19 = var_270_16:GetChild(iter_270_8)

					if var_270_19.name == "split_1" or not string.find(var_270_19.name, "split") then
						var_270_19.gameObject:SetActive(true)
					else
						var_270_19.gameObject:SetActive(false)
					end
				end
			end

			local var_270_20 = 0.001

			if var_270_17 <= arg_267_1.time_ and arg_267_1.time_ < var_270_17 + var_270_20 then
				local var_270_21 = (arg_267_1.time_ - var_270_17) / var_270_20
				local var_270_22 = Vector3.New(420.9, -430.8, 6.9)

				var_270_16.localPosition = Vector3.Lerp(arg_267_1.var_.moveOldPos1060, var_270_22, var_270_21)
			end

			if arg_267_1.time_ >= var_270_17 + var_270_20 and arg_267_1.time_ < var_270_17 + var_270_20 + arg_270_0 then
				var_270_16.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_270_23 = 0
			local var_270_24 = 0.3

			if var_270_23 < arg_267_1.time_ and arg_267_1.time_ <= var_270_23 + arg_270_0 then
				arg_267_1.talkMaxDuration = 0
				arg_267_1.dialogCg_.alpha = 1

				arg_267_1.dialog_:SetActive(true)
				SetActive(arg_267_1.leftNameGo_, true)

				local var_270_25 = arg_267_1:FormatText(StoryNameCfg[584].name)

				arg_267_1.leftNameTxt_.text = var_270_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_267_1.leftNameTxt_.transform)

				arg_267_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_267_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_267_1:RecordName(arg_267_1.leftNameTxt_.text)
				SetActive(arg_267_1.iconTrs_.gameObject, false)
				arg_267_1.callingController_:SetSelectedState("normal")

				local var_270_26 = arg_267_1:GetWordFromCfg(417161065)
				local var_270_27 = arg_267_1:FormatText(var_270_26.content)

				arg_267_1.text_.text = var_270_27

				LuaForUtil.ClearLinePrefixSymbol(arg_267_1.text_)

				local var_270_28 = 12
				local var_270_29 = utf8.len(var_270_27)
				local var_270_30 = var_270_28 <= 0 and var_270_24 or var_270_24 * (var_270_29 / var_270_28)

				if var_270_30 > 0 and var_270_24 < var_270_30 then
					arg_267_1.talkMaxDuration = var_270_30

					if var_270_30 + var_270_23 > arg_267_1.duration_ then
						arg_267_1.duration_ = var_270_30 + var_270_23
					end
				end

				arg_267_1.text_.text = var_270_27
				arg_267_1.typewritter.percent = 0

				arg_267_1.typewritter:SetDirty()
				arg_267_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161065", "story_v_out_417161.awb") ~= 0 then
					local var_270_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161065", "story_v_out_417161.awb") / 1000

					if var_270_31 + var_270_23 > arg_267_1.duration_ then
						arg_267_1.duration_ = var_270_31 + var_270_23
					end

					if var_270_26.prefab_name ~= "" and arg_267_1.actors_[var_270_26.prefab_name] ~= nil then
						local var_270_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_267_1.actors_[var_270_26.prefab_name].transform, "story_v_out_417161", "417161065", "story_v_out_417161.awb")

						arg_267_1:RecordAudio("417161065", var_270_32)
						arg_267_1:RecordAudio("417161065", var_270_32)
					else
						arg_267_1:AudioAction("play", "voice", "story_v_out_417161", "417161065", "story_v_out_417161.awb")
					end

					arg_267_1:RecordHistoryTalkVoice("story_v_out_417161", "417161065", "story_v_out_417161.awb")
				end

				arg_267_1:RecordContent(arg_267_1.text_.text)
			end

			local var_270_33 = math.max(var_270_24, arg_267_1.talkMaxDuration)

			if var_270_23 <= arg_267_1.time_ and arg_267_1.time_ < var_270_23 + var_270_33 then
				arg_267_1.typewritter.percent = (arg_267_1.time_ - var_270_23) / var_270_33

				arg_267_1.typewritter:SetDirty()
			end

			if arg_267_1.time_ >= var_270_23 + var_270_33 and arg_267_1.time_ < var_270_23 + var_270_33 + arg_270_0 then
				arg_267_1.typewritter.percent = 1

				arg_267_1.typewritter:SetDirty()
				arg_267_1:ShowNextGo(true)
			end
		end
	end,
	Play417161066 = function(arg_271_0, arg_271_1)
		arg_271_1.time_ = 0
		arg_271_1.frameCnt_ = 0
		arg_271_1.state_ = "playing"
		arg_271_1.curTalkId_ = 417161066
		arg_271_1.duration_ = 6.83

		local var_271_0 = {
			zh = 3.566,
			ja = 6.833
		}
		local var_271_1 = manager.audio:GetLocalizationFlag()

		if var_271_0[var_271_1] ~= nil then
			arg_271_1.duration_ = var_271_0[var_271_1]
		end

		SetActive(arg_271_1.tipsGo_, false)

		function arg_271_1.onSingleLineFinish_()
			arg_271_1.onSingleLineUpdate_ = nil
			arg_271_1.onSingleLineFinish_ = nil
			arg_271_1.state_ = "waiting"
		end

		function arg_271_1.playNext_(arg_273_0)
			if arg_273_0 == 1 then
				arg_271_0:Play417161067(arg_271_1)
			end
		end

		function arg_271_1.onSingleLineUpdate_(arg_274_0)
			local var_274_0 = arg_271_1.actors_["10128"]
			local var_274_1 = 0

			if var_274_1 < arg_271_1.time_ and arg_271_1.time_ <= var_274_1 + arg_274_0 and not isNil(var_274_0) and arg_271_1.var_.actorSpriteComps10128 == nil then
				arg_271_1.var_.actorSpriteComps10128 = var_274_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_274_2 = 0.2

			if var_274_1 <= arg_271_1.time_ and arg_271_1.time_ < var_274_1 + var_274_2 and not isNil(var_274_0) then
				local var_274_3 = (arg_271_1.time_ - var_274_1) / var_274_2

				if arg_271_1.var_.actorSpriteComps10128 then
					for iter_274_0, iter_274_1 in pairs(arg_271_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_274_1 then
							if arg_271_1.isInRecall_ then
								local var_274_4 = Mathf.Lerp(iter_274_1.color.r, arg_271_1.hightColor1.r, var_274_3)
								local var_274_5 = Mathf.Lerp(iter_274_1.color.g, arg_271_1.hightColor1.g, var_274_3)
								local var_274_6 = Mathf.Lerp(iter_274_1.color.b, arg_271_1.hightColor1.b, var_274_3)

								iter_274_1.color = Color.New(var_274_4, var_274_5, var_274_6)
							else
								local var_274_7 = Mathf.Lerp(iter_274_1.color.r, 1, var_274_3)

								iter_274_1.color = Color.New(var_274_7, var_274_7, var_274_7)
							end
						end
					end
				end
			end

			if arg_271_1.time_ >= var_274_1 + var_274_2 and arg_271_1.time_ < var_274_1 + var_274_2 + arg_274_0 and not isNil(var_274_0) and arg_271_1.var_.actorSpriteComps10128 then
				for iter_274_2, iter_274_3 in pairs(arg_271_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_274_3 then
						if arg_271_1.isInRecall_ then
							iter_274_3.color = arg_271_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_274_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_271_1.var_.actorSpriteComps10128 = nil
			end

			local var_274_8 = arg_271_1.actors_["1060"]
			local var_274_9 = 0

			if var_274_9 < arg_271_1.time_ and arg_271_1.time_ <= var_274_9 + arg_274_0 and not isNil(var_274_8) and arg_271_1.var_.actorSpriteComps1060 == nil then
				arg_271_1.var_.actorSpriteComps1060 = var_274_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_274_10 = 0.2

			if var_274_9 <= arg_271_1.time_ and arg_271_1.time_ < var_274_9 + var_274_10 and not isNil(var_274_8) then
				local var_274_11 = (arg_271_1.time_ - var_274_9) / var_274_10

				if arg_271_1.var_.actorSpriteComps1060 then
					for iter_274_4, iter_274_5 in pairs(arg_271_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_274_5 then
							if arg_271_1.isInRecall_ then
								local var_274_12 = Mathf.Lerp(iter_274_5.color.r, arg_271_1.hightColor2.r, var_274_11)
								local var_274_13 = Mathf.Lerp(iter_274_5.color.g, arg_271_1.hightColor2.g, var_274_11)
								local var_274_14 = Mathf.Lerp(iter_274_5.color.b, arg_271_1.hightColor2.b, var_274_11)

								iter_274_5.color = Color.New(var_274_12, var_274_13, var_274_14)
							else
								local var_274_15 = Mathf.Lerp(iter_274_5.color.r, 0.5, var_274_11)

								iter_274_5.color = Color.New(var_274_15, var_274_15, var_274_15)
							end
						end
					end
				end
			end

			if arg_271_1.time_ >= var_274_9 + var_274_10 and arg_271_1.time_ < var_274_9 + var_274_10 + arg_274_0 and not isNil(var_274_8) and arg_271_1.var_.actorSpriteComps1060 then
				for iter_274_6, iter_274_7 in pairs(arg_271_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_274_7 then
						if arg_271_1.isInRecall_ then
							iter_274_7.color = arg_271_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_274_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_271_1.var_.actorSpriteComps1060 = nil
			end

			local var_274_16 = 0
			local var_274_17 = 0.5

			if var_274_16 < arg_271_1.time_ and arg_271_1.time_ <= var_274_16 + arg_274_0 then
				arg_271_1.talkMaxDuration = 0
				arg_271_1.dialogCg_.alpha = 1

				arg_271_1.dialog_:SetActive(true)
				SetActive(arg_271_1.leftNameGo_, true)

				local var_274_18 = arg_271_1:FormatText(StoryNameCfg[595].name)

				arg_271_1.leftNameTxt_.text = var_274_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_271_1.leftNameTxt_.transform)

				arg_271_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_271_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_271_1:RecordName(arg_271_1.leftNameTxt_.text)
				SetActive(arg_271_1.iconTrs_.gameObject, false)
				arg_271_1.callingController_:SetSelectedState("normal")

				local var_274_19 = arg_271_1:GetWordFromCfg(417161066)
				local var_274_20 = arg_271_1:FormatText(var_274_19.content)

				arg_271_1.text_.text = var_274_20

				LuaForUtil.ClearLinePrefixSymbol(arg_271_1.text_)

				local var_274_21 = 20
				local var_274_22 = utf8.len(var_274_20)
				local var_274_23 = var_274_21 <= 0 and var_274_17 or var_274_17 * (var_274_22 / var_274_21)

				if var_274_23 > 0 and var_274_17 < var_274_23 then
					arg_271_1.talkMaxDuration = var_274_23

					if var_274_23 + var_274_16 > arg_271_1.duration_ then
						arg_271_1.duration_ = var_274_23 + var_274_16
					end
				end

				arg_271_1.text_.text = var_274_20
				arg_271_1.typewritter.percent = 0

				arg_271_1.typewritter:SetDirty()
				arg_271_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161066", "story_v_out_417161.awb") ~= 0 then
					local var_274_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161066", "story_v_out_417161.awb") / 1000

					if var_274_24 + var_274_16 > arg_271_1.duration_ then
						arg_271_1.duration_ = var_274_24 + var_274_16
					end

					if var_274_19.prefab_name ~= "" and arg_271_1.actors_[var_274_19.prefab_name] ~= nil then
						local var_274_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_271_1.actors_[var_274_19.prefab_name].transform, "story_v_out_417161", "417161066", "story_v_out_417161.awb")

						arg_271_1:RecordAudio("417161066", var_274_25)
						arg_271_1:RecordAudio("417161066", var_274_25)
					else
						arg_271_1:AudioAction("play", "voice", "story_v_out_417161", "417161066", "story_v_out_417161.awb")
					end

					arg_271_1:RecordHistoryTalkVoice("story_v_out_417161", "417161066", "story_v_out_417161.awb")
				end

				arg_271_1:RecordContent(arg_271_1.text_.text)
			end

			local var_274_26 = math.max(var_274_17, arg_271_1.talkMaxDuration)

			if var_274_16 <= arg_271_1.time_ and arg_271_1.time_ < var_274_16 + var_274_26 then
				arg_271_1.typewritter.percent = (arg_271_1.time_ - var_274_16) / var_274_26

				arg_271_1.typewritter:SetDirty()
			end

			if arg_271_1.time_ >= var_274_16 + var_274_26 and arg_271_1.time_ < var_274_16 + var_274_26 + arg_274_0 then
				arg_271_1.typewritter.percent = 1

				arg_271_1.typewritter:SetDirty()
				arg_271_1:ShowNextGo(true)
			end
		end
	end,
	Play417161067 = function(arg_275_0, arg_275_1)
		arg_275_1.time_ = 0
		arg_275_1.frameCnt_ = 0
		arg_275_1.state_ = "playing"
		arg_275_1.curTalkId_ = 417161067
		arg_275_1.duration_ = 8.8

		local var_275_0 = {
			zh = 6.533,
			ja = 8.8
		}
		local var_275_1 = manager.audio:GetLocalizationFlag()

		if var_275_0[var_275_1] ~= nil then
			arg_275_1.duration_ = var_275_0[var_275_1]
		end

		SetActive(arg_275_1.tipsGo_, false)

		function arg_275_1.onSingleLineFinish_()
			arg_275_1.onSingleLineUpdate_ = nil
			arg_275_1.onSingleLineFinish_ = nil
			arg_275_1.state_ = "waiting"
		end

		function arg_275_1.playNext_(arg_277_0)
			if arg_277_0 == 1 then
				arg_275_0:Play417161068(arg_275_1)
			end
		end

		function arg_275_1.onSingleLineUpdate_(arg_278_0)
			local var_278_0 = 0
			local var_278_1 = 0.925

			if var_278_0 < arg_275_1.time_ and arg_275_1.time_ <= var_278_0 + arg_278_0 then
				arg_275_1.talkMaxDuration = 0
				arg_275_1.dialogCg_.alpha = 1

				arg_275_1.dialog_:SetActive(true)
				SetActive(arg_275_1.leftNameGo_, true)

				local var_278_2 = arg_275_1:FormatText(StoryNameCfg[595].name)

				arg_275_1.leftNameTxt_.text = var_278_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_275_1.leftNameTxt_.transform)

				arg_275_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_275_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_275_1:RecordName(arg_275_1.leftNameTxt_.text)
				SetActive(arg_275_1.iconTrs_.gameObject, false)
				arg_275_1.callingController_:SetSelectedState("normal")

				local var_278_3 = arg_275_1:GetWordFromCfg(417161067)
				local var_278_4 = arg_275_1:FormatText(var_278_3.content)

				arg_275_1.text_.text = var_278_4

				LuaForUtil.ClearLinePrefixSymbol(arg_275_1.text_)

				local var_278_5 = 37
				local var_278_6 = utf8.len(var_278_4)
				local var_278_7 = var_278_5 <= 0 and var_278_1 or var_278_1 * (var_278_6 / var_278_5)

				if var_278_7 > 0 and var_278_1 < var_278_7 then
					arg_275_1.talkMaxDuration = var_278_7

					if var_278_7 + var_278_0 > arg_275_1.duration_ then
						arg_275_1.duration_ = var_278_7 + var_278_0
					end
				end

				arg_275_1.text_.text = var_278_4
				arg_275_1.typewritter.percent = 0

				arg_275_1.typewritter:SetDirty()
				arg_275_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161067", "story_v_out_417161.awb") ~= 0 then
					local var_278_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161067", "story_v_out_417161.awb") / 1000

					if var_278_8 + var_278_0 > arg_275_1.duration_ then
						arg_275_1.duration_ = var_278_8 + var_278_0
					end

					if var_278_3.prefab_name ~= "" and arg_275_1.actors_[var_278_3.prefab_name] ~= nil then
						local var_278_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_275_1.actors_[var_278_3.prefab_name].transform, "story_v_out_417161", "417161067", "story_v_out_417161.awb")

						arg_275_1:RecordAudio("417161067", var_278_9)
						arg_275_1:RecordAudio("417161067", var_278_9)
					else
						arg_275_1:AudioAction("play", "voice", "story_v_out_417161", "417161067", "story_v_out_417161.awb")
					end

					arg_275_1:RecordHistoryTalkVoice("story_v_out_417161", "417161067", "story_v_out_417161.awb")
				end

				arg_275_1:RecordContent(arg_275_1.text_.text)
			end

			local var_278_10 = math.max(var_278_1, arg_275_1.talkMaxDuration)

			if var_278_0 <= arg_275_1.time_ and arg_275_1.time_ < var_278_0 + var_278_10 then
				arg_275_1.typewritter.percent = (arg_275_1.time_ - var_278_0) / var_278_10

				arg_275_1.typewritter:SetDirty()
			end

			if arg_275_1.time_ >= var_278_0 + var_278_10 and arg_275_1.time_ < var_278_0 + var_278_10 + arg_278_0 then
				arg_275_1.typewritter.percent = 1

				arg_275_1.typewritter:SetDirty()
				arg_275_1:ShowNextGo(true)
			end
		end
	end,
	Play417161068 = function(arg_279_0, arg_279_1)
		arg_279_1.time_ = 0
		arg_279_1.frameCnt_ = 0
		arg_279_1.state_ = "playing"
		arg_279_1.curTalkId_ = 417161068
		arg_279_1.duration_ = 5.8

		local var_279_0 = {
			zh = 4.333,
			ja = 5.8
		}
		local var_279_1 = manager.audio:GetLocalizationFlag()

		if var_279_0[var_279_1] ~= nil then
			arg_279_1.duration_ = var_279_0[var_279_1]
		end

		SetActive(arg_279_1.tipsGo_, false)

		function arg_279_1.onSingleLineFinish_()
			arg_279_1.onSingleLineUpdate_ = nil
			arg_279_1.onSingleLineFinish_ = nil
			arg_279_1.state_ = "waiting"
		end

		function arg_279_1.playNext_(arg_281_0)
			if arg_281_0 == 1 then
				arg_279_0:Play417161069(arg_279_1)
			end
		end

		function arg_279_1.onSingleLineUpdate_(arg_282_0)
			local var_282_0 = arg_279_1.actors_["1060"]
			local var_282_1 = 0

			if var_282_1 < arg_279_1.time_ and arg_279_1.time_ <= var_282_1 + arg_282_0 and not isNil(var_282_0) and arg_279_1.var_.actorSpriteComps1060 == nil then
				arg_279_1.var_.actorSpriteComps1060 = var_282_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_282_2 = 0.2

			if var_282_1 <= arg_279_1.time_ and arg_279_1.time_ < var_282_1 + var_282_2 and not isNil(var_282_0) then
				local var_282_3 = (arg_279_1.time_ - var_282_1) / var_282_2

				if arg_279_1.var_.actorSpriteComps1060 then
					for iter_282_0, iter_282_1 in pairs(arg_279_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_282_1 then
							if arg_279_1.isInRecall_ then
								local var_282_4 = Mathf.Lerp(iter_282_1.color.r, arg_279_1.hightColor1.r, var_282_3)
								local var_282_5 = Mathf.Lerp(iter_282_1.color.g, arg_279_1.hightColor1.g, var_282_3)
								local var_282_6 = Mathf.Lerp(iter_282_1.color.b, arg_279_1.hightColor1.b, var_282_3)

								iter_282_1.color = Color.New(var_282_4, var_282_5, var_282_6)
							else
								local var_282_7 = Mathf.Lerp(iter_282_1.color.r, 1, var_282_3)

								iter_282_1.color = Color.New(var_282_7, var_282_7, var_282_7)
							end
						end
					end
				end
			end

			if arg_279_1.time_ >= var_282_1 + var_282_2 and arg_279_1.time_ < var_282_1 + var_282_2 + arg_282_0 and not isNil(var_282_0) and arg_279_1.var_.actorSpriteComps1060 then
				for iter_282_2, iter_282_3 in pairs(arg_279_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_282_3 then
						if arg_279_1.isInRecall_ then
							iter_282_3.color = arg_279_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_282_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_279_1.var_.actorSpriteComps1060 = nil
			end

			local var_282_8 = arg_279_1.actors_["10128"]
			local var_282_9 = 0

			if var_282_9 < arg_279_1.time_ and arg_279_1.time_ <= var_282_9 + arg_282_0 and not isNil(var_282_8) and arg_279_1.var_.actorSpriteComps10128 == nil then
				arg_279_1.var_.actorSpriteComps10128 = var_282_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_282_10 = 0.2

			if var_282_9 <= arg_279_1.time_ and arg_279_1.time_ < var_282_9 + var_282_10 and not isNil(var_282_8) then
				local var_282_11 = (arg_279_1.time_ - var_282_9) / var_282_10

				if arg_279_1.var_.actorSpriteComps10128 then
					for iter_282_4, iter_282_5 in pairs(arg_279_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_282_5 then
							if arg_279_1.isInRecall_ then
								local var_282_12 = Mathf.Lerp(iter_282_5.color.r, arg_279_1.hightColor2.r, var_282_11)
								local var_282_13 = Mathf.Lerp(iter_282_5.color.g, arg_279_1.hightColor2.g, var_282_11)
								local var_282_14 = Mathf.Lerp(iter_282_5.color.b, arg_279_1.hightColor2.b, var_282_11)

								iter_282_5.color = Color.New(var_282_12, var_282_13, var_282_14)
							else
								local var_282_15 = Mathf.Lerp(iter_282_5.color.r, 0.5, var_282_11)

								iter_282_5.color = Color.New(var_282_15, var_282_15, var_282_15)
							end
						end
					end
				end
			end

			if arg_279_1.time_ >= var_282_9 + var_282_10 and arg_279_1.time_ < var_282_9 + var_282_10 + arg_282_0 and not isNil(var_282_8) and arg_279_1.var_.actorSpriteComps10128 then
				for iter_282_6, iter_282_7 in pairs(arg_279_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_282_7 then
						if arg_279_1.isInRecall_ then
							iter_282_7.color = arg_279_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_282_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_279_1.var_.actorSpriteComps10128 = nil
			end

			local var_282_16 = 0
			local var_282_17 = 0.55

			if var_282_16 < arg_279_1.time_ and arg_279_1.time_ <= var_282_16 + arg_282_0 then
				arg_279_1.talkMaxDuration = 0
				arg_279_1.dialogCg_.alpha = 1

				arg_279_1.dialog_:SetActive(true)
				SetActive(arg_279_1.leftNameGo_, true)

				local var_282_18 = arg_279_1:FormatText(StoryNameCfg[584].name)

				arg_279_1.leftNameTxt_.text = var_282_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_279_1.leftNameTxt_.transform)

				arg_279_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_279_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_279_1:RecordName(arg_279_1.leftNameTxt_.text)
				SetActive(arg_279_1.iconTrs_.gameObject, false)
				arg_279_1.callingController_:SetSelectedState("normal")

				local var_282_19 = arg_279_1:GetWordFromCfg(417161068)
				local var_282_20 = arg_279_1:FormatText(var_282_19.content)

				arg_279_1.text_.text = var_282_20

				LuaForUtil.ClearLinePrefixSymbol(arg_279_1.text_)

				local var_282_21 = 22
				local var_282_22 = utf8.len(var_282_20)
				local var_282_23 = var_282_21 <= 0 and var_282_17 or var_282_17 * (var_282_22 / var_282_21)

				if var_282_23 > 0 and var_282_17 < var_282_23 then
					arg_279_1.talkMaxDuration = var_282_23

					if var_282_23 + var_282_16 > arg_279_1.duration_ then
						arg_279_1.duration_ = var_282_23 + var_282_16
					end
				end

				arg_279_1.text_.text = var_282_20
				arg_279_1.typewritter.percent = 0

				arg_279_1.typewritter:SetDirty()
				arg_279_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161068", "story_v_out_417161.awb") ~= 0 then
					local var_282_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161068", "story_v_out_417161.awb") / 1000

					if var_282_24 + var_282_16 > arg_279_1.duration_ then
						arg_279_1.duration_ = var_282_24 + var_282_16
					end

					if var_282_19.prefab_name ~= "" and arg_279_1.actors_[var_282_19.prefab_name] ~= nil then
						local var_282_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_279_1.actors_[var_282_19.prefab_name].transform, "story_v_out_417161", "417161068", "story_v_out_417161.awb")

						arg_279_1:RecordAudio("417161068", var_282_25)
						arg_279_1:RecordAudio("417161068", var_282_25)
					else
						arg_279_1:AudioAction("play", "voice", "story_v_out_417161", "417161068", "story_v_out_417161.awb")
					end

					arg_279_1:RecordHistoryTalkVoice("story_v_out_417161", "417161068", "story_v_out_417161.awb")
				end

				arg_279_1:RecordContent(arg_279_1.text_.text)
			end

			local var_282_26 = math.max(var_282_17, arg_279_1.talkMaxDuration)

			if var_282_16 <= arg_279_1.time_ and arg_279_1.time_ < var_282_16 + var_282_26 then
				arg_279_1.typewritter.percent = (arg_279_1.time_ - var_282_16) / var_282_26

				arg_279_1.typewritter:SetDirty()
			end

			if arg_279_1.time_ >= var_282_16 + var_282_26 and arg_279_1.time_ < var_282_16 + var_282_26 + arg_282_0 then
				arg_279_1.typewritter.percent = 1

				arg_279_1.typewritter:SetDirty()
				arg_279_1:ShowNextGo(true)
			end
		end
	end,
	Play417161069 = function(arg_283_0, arg_283_1)
		arg_283_1.time_ = 0
		arg_283_1.frameCnt_ = 0
		arg_283_1.state_ = "playing"
		arg_283_1.curTalkId_ = 417161069
		arg_283_1.duration_ = 11.63

		local var_283_0 = {
			zh = 8.9,
			ja = 11.633
		}
		local var_283_1 = manager.audio:GetLocalizationFlag()

		if var_283_0[var_283_1] ~= nil then
			arg_283_1.duration_ = var_283_0[var_283_1]
		end

		SetActive(arg_283_1.tipsGo_, false)

		function arg_283_1.onSingleLineFinish_()
			arg_283_1.onSingleLineUpdate_ = nil
			arg_283_1.onSingleLineFinish_ = nil
			arg_283_1.state_ = "waiting"
		end

		function arg_283_1.playNext_(arg_285_0)
			if arg_285_0 == 1 then
				arg_283_0:Play417161070(arg_283_1)
			end
		end

		function arg_283_1.onSingleLineUpdate_(arg_286_0)
			local var_286_0 = 0
			local var_286_1 = 1.1

			if var_286_0 < arg_283_1.time_ and arg_283_1.time_ <= var_286_0 + arg_286_0 then
				arg_283_1.talkMaxDuration = 0
				arg_283_1.dialogCg_.alpha = 1

				arg_283_1.dialog_:SetActive(true)
				SetActive(arg_283_1.leftNameGo_, true)

				local var_286_2 = arg_283_1:FormatText(StoryNameCfg[584].name)

				arg_283_1.leftNameTxt_.text = var_286_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_283_1.leftNameTxt_.transform)

				arg_283_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_283_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_283_1:RecordName(arg_283_1.leftNameTxt_.text)
				SetActive(arg_283_1.iconTrs_.gameObject, false)
				arg_283_1.callingController_:SetSelectedState("normal")

				local var_286_3 = arg_283_1:GetWordFromCfg(417161069)
				local var_286_4 = arg_283_1:FormatText(var_286_3.content)

				arg_283_1.text_.text = var_286_4

				LuaForUtil.ClearLinePrefixSymbol(arg_283_1.text_)

				local var_286_5 = 44
				local var_286_6 = utf8.len(var_286_4)
				local var_286_7 = var_286_5 <= 0 and var_286_1 or var_286_1 * (var_286_6 / var_286_5)

				if var_286_7 > 0 and var_286_1 < var_286_7 then
					arg_283_1.talkMaxDuration = var_286_7

					if var_286_7 + var_286_0 > arg_283_1.duration_ then
						arg_283_1.duration_ = var_286_7 + var_286_0
					end
				end

				arg_283_1.text_.text = var_286_4
				arg_283_1.typewritter.percent = 0

				arg_283_1.typewritter:SetDirty()
				arg_283_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161069", "story_v_out_417161.awb") ~= 0 then
					local var_286_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161069", "story_v_out_417161.awb") / 1000

					if var_286_8 + var_286_0 > arg_283_1.duration_ then
						arg_283_1.duration_ = var_286_8 + var_286_0
					end

					if var_286_3.prefab_name ~= "" and arg_283_1.actors_[var_286_3.prefab_name] ~= nil then
						local var_286_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_283_1.actors_[var_286_3.prefab_name].transform, "story_v_out_417161", "417161069", "story_v_out_417161.awb")

						arg_283_1:RecordAudio("417161069", var_286_9)
						arg_283_1:RecordAudio("417161069", var_286_9)
					else
						arg_283_1:AudioAction("play", "voice", "story_v_out_417161", "417161069", "story_v_out_417161.awb")
					end

					arg_283_1:RecordHistoryTalkVoice("story_v_out_417161", "417161069", "story_v_out_417161.awb")
				end

				arg_283_1:RecordContent(arg_283_1.text_.text)
			end

			local var_286_10 = math.max(var_286_1, arg_283_1.talkMaxDuration)

			if var_286_0 <= arg_283_1.time_ and arg_283_1.time_ < var_286_0 + var_286_10 then
				arg_283_1.typewritter.percent = (arg_283_1.time_ - var_286_0) / var_286_10

				arg_283_1.typewritter:SetDirty()
			end

			if arg_283_1.time_ >= var_286_0 + var_286_10 and arg_283_1.time_ < var_286_0 + var_286_10 + arg_286_0 then
				arg_283_1.typewritter.percent = 1

				arg_283_1.typewritter:SetDirty()
				arg_283_1:ShowNextGo(true)
			end
		end
	end,
	Play417161070 = function(arg_287_0, arg_287_1)
		arg_287_1.time_ = 0
		arg_287_1.frameCnt_ = 0
		arg_287_1.state_ = "playing"
		arg_287_1.curTalkId_ = 417161070
		arg_287_1.duration_ = 5.77

		local var_287_0 = {
			zh = 5.5,
			ja = 5.766
		}
		local var_287_1 = manager.audio:GetLocalizationFlag()

		if var_287_0[var_287_1] ~= nil then
			arg_287_1.duration_ = var_287_0[var_287_1]
		end

		SetActive(arg_287_1.tipsGo_, false)

		function arg_287_1.onSingleLineFinish_()
			arg_287_1.onSingleLineUpdate_ = nil
			arg_287_1.onSingleLineFinish_ = nil
			arg_287_1.state_ = "waiting"
		end

		function arg_287_1.playNext_(arg_289_0)
			if arg_289_0 == 1 then
				arg_287_0:Play417161071(arg_287_1)
			end
		end

		function arg_287_1.onSingleLineUpdate_(arg_290_0)
			local var_290_0 = arg_287_1.actors_["10128"]
			local var_290_1 = 0

			if var_290_1 < arg_287_1.time_ and arg_287_1.time_ <= var_290_1 + arg_290_0 and not isNil(var_290_0) and arg_287_1.var_.actorSpriteComps10128 == nil then
				arg_287_1.var_.actorSpriteComps10128 = var_290_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_290_2 = 0.2

			if var_290_1 <= arg_287_1.time_ and arg_287_1.time_ < var_290_1 + var_290_2 and not isNil(var_290_0) then
				local var_290_3 = (arg_287_1.time_ - var_290_1) / var_290_2

				if arg_287_1.var_.actorSpriteComps10128 then
					for iter_290_0, iter_290_1 in pairs(arg_287_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_290_1 then
							if arg_287_1.isInRecall_ then
								local var_290_4 = Mathf.Lerp(iter_290_1.color.r, arg_287_1.hightColor1.r, var_290_3)
								local var_290_5 = Mathf.Lerp(iter_290_1.color.g, arg_287_1.hightColor1.g, var_290_3)
								local var_290_6 = Mathf.Lerp(iter_290_1.color.b, arg_287_1.hightColor1.b, var_290_3)

								iter_290_1.color = Color.New(var_290_4, var_290_5, var_290_6)
							else
								local var_290_7 = Mathf.Lerp(iter_290_1.color.r, 1, var_290_3)

								iter_290_1.color = Color.New(var_290_7, var_290_7, var_290_7)
							end
						end
					end
				end
			end

			if arg_287_1.time_ >= var_290_1 + var_290_2 and arg_287_1.time_ < var_290_1 + var_290_2 + arg_290_0 and not isNil(var_290_0) and arg_287_1.var_.actorSpriteComps10128 then
				for iter_290_2, iter_290_3 in pairs(arg_287_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_290_3 then
						if arg_287_1.isInRecall_ then
							iter_290_3.color = arg_287_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_290_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_287_1.var_.actorSpriteComps10128 = nil
			end

			local var_290_8 = arg_287_1.actors_["1060"]
			local var_290_9 = 0

			if var_290_9 < arg_287_1.time_ and arg_287_1.time_ <= var_290_9 + arg_290_0 and not isNil(var_290_8) and arg_287_1.var_.actorSpriteComps1060 == nil then
				arg_287_1.var_.actorSpriteComps1060 = var_290_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_290_10 = 0.2

			if var_290_9 <= arg_287_1.time_ and arg_287_1.time_ < var_290_9 + var_290_10 and not isNil(var_290_8) then
				local var_290_11 = (arg_287_1.time_ - var_290_9) / var_290_10

				if arg_287_1.var_.actorSpriteComps1060 then
					for iter_290_4, iter_290_5 in pairs(arg_287_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_290_5 then
							if arg_287_1.isInRecall_ then
								local var_290_12 = Mathf.Lerp(iter_290_5.color.r, arg_287_1.hightColor2.r, var_290_11)
								local var_290_13 = Mathf.Lerp(iter_290_5.color.g, arg_287_1.hightColor2.g, var_290_11)
								local var_290_14 = Mathf.Lerp(iter_290_5.color.b, arg_287_1.hightColor2.b, var_290_11)

								iter_290_5.color = Color.New(var_290_12, var_290_13, var_290_14)
							else
								local var_290_15 = Mathf.Lerp(iter_290_5.color.r, 0.5, var_290_11)

								iter_290_5.color = Color.New(var_290_15, var_290_15, var_290_15)
							end
						end
					end
				end
			end

			if arg_287_1.time_ >= var_290_9 + var_290_10 and arg_287_1.time_ < var_290_9 + var_290_10 + arg_290_0 and not isNil(var_290_8) and arg_287_1.var_.actorSpriteComps1060 then
				for iter_290_6, iter_290_7 in pairs(arg_287_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_290_7 then
						if arg_287_1.isInRecall_ then
							iter_290_7.color = arg_287_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_290_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_287_1.var_.actorSpriteComps1060 = nil
			end

			local var_290_16 = 0
			local var_290_17 = 0.65

			if var_290_16 < arg_287_1.time_ and arg_287_1.time_ <= var_290_16 + arg_290_0 then
				arg_287_1.talkMaxDuration = 0
				arg_287_1.dialogCg_.alpha = 1

				arg_287_1.dialog_:SetActive(true)
				SetActive(arg_287_1.leftNameGo_, true)

				local var_290_18 = arg_287_1:FormatText(StoryNameCfg[595].name)

				arg_287_1.leftNameTxt_.text = var_290_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_287_1.leftNameTxt_.transform)

				arg_287_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_287_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_287_1:RecordName(arg_287_1.leftNameTxt_.text)
				SetActive(arg_287_1.iconTrs_.gameObject, false)
				arg_287_1.callingController_:SetSelectedState("normal")

				local var_290_19 = arg_287_1:GetWordFromCfg(417161070)
				local var_290_20 = arg_287_1:FormatText(var_290_19.content)

				arg_287_1.text_.text = var_290_20

				LuaForUtil.ClearLinePrefixSymbol(arg_287_1.text_)

				local var_290_21 = 26
				local var_290_22 = utf8.len(var_290_20)
				local var_290_23 = var_290_21 <= 0 and var_290_17 or var_290_17 * (var_290_22 / var_290_21)

				if var_290_23 > 0 and var_290_17 < var_290_23 then
					arg_287_1.talkMaxDuration = var_290_23

					if var_290_23 + var_290_16 > arg_287_1.duration_ then
						arg_287_1.duration_ = var_290_23 + var_290_16
					end
				end

				arg_287_1.text_.text = var_290_20
				arg_287_1.typewritter.percent = 0

				arg_287_1.typewritter:SetDirty()
				arg_287_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161070", "story_v_out_417161.awb") ~= 0 then
					local var_290_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161070", "story_v_out_417161.awb") / 1000

					if var_290_24 + var_290_16 > arg_287_1.duration_ then
						arg_287_1.duration_ = var_290_24 + var_290_16
					end

					if var_290_19.prefab_name ~= "" and arg_287_1.actors_[var_290_19.prefab_name] ~= nil then
						local var_290_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_287_1.actors_[var_290_19.prefab_name].transform, "story_v_out_417161", "417161070", "story_v_out_417161.awb")

						arg_287_1:RecordAudio("417161070", var_290_25)
						arg_287_1:RecordAudio("417161070", var_290_25)
					else
						arg_287_1:AudioAction("play", "voice", "story_v_out_417161", "417161070", "story_v_out_417161.awb")
					end

					arg_287_1:RecordHistoryTalkVoice("story_v_out_417161", "417161070", "story_v_out_417161.awb")
				end

				arg_287_1:RecordContent(arg_287_1.text_.text)
			end

			local var_290_26 = math.max(var_290_17, arg_287_1.talkMaxDuration)

			if var_290_16 <= arg_287_1.time_ and arg_287_1.time_ < var_290_16 + var_290_26 then
				arg_287_1.typewritter.percent = (arg_287_1.time_ - var_290_16) / var_290_26

				arg_287_1.typewritter:SetDirty()
			end

			if arg_287_1.time_ >= var_290_16 + var_290_26 and arg_287_1.time_ < var_290_16 + var_290_26 + arg_290_0 then
				arg_287_1.typewritter.percent = 1

				arg_287_1.typewritter:SetDirty()
				arg_287_1:ShowNextGo(true)
			end
		end
	end,
	Play417161071 = function(arg_291_0, arg_291_1)
		arg_291_1.time_ = 0
		arg_291_1.frameCnt_ = 0
		arg_291_1.state_ = "playing"
		arg_291_1.curTalkId_ = 417161071
		arg_291_1.duration_ = 4.2

		local var_291_0 = {
			zh = 2.933,
			ja = 4.2
		}
		local var_291_1 = manager.audio:GetLocalizationFlag()

		if var_291_0[var_291_1] ~= nil then
			arg_291_1.duration_ = var_291_0[var_291_1]
		end

		SetActive(arg_291_1.tipsGo_, false)

		function arg_291_1.onSingleLineFinish_()
			arg_291_1.onSingleLineUpdate_ = nil
			arg_291_1.onSingleLineFinish_ = nil
			arg_291_1.state_ = "waiting"
		end

		function arg_291_1.playNext_(arg_293_0)
			if arg_293_0 == 1 then
				arg_291_0:Play417161072(arg_291_1)
			end
		end

		function arg_291_1.onSingleLineUpdate_(arg_294_0)
			local var_294_0 = arg_291_1.actors_["1060"]
			local var_294_1 = 0

			if var_294_1 < arg_291_1.time_ and arg_291_1.time_ <= var_294_1 + arg_294_0 and not isNil(var_294_0) and arg_291_1.var_.actorSpriteComps1060 == nil then
				arg_291_1.var_.actorSpriteComps1060 = var_294_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_294_2 = 0.2

			if var_294_1 <= arg_291_1.time_ and arg_291_1.time_ < var_294_1 + var_294_2 and not isNil(var_294_0) then
				local var_294_3 = (arg_291_1.time_ - var_294_1) / var_294_2

				if arg_291_1.var_.actorSpriteComps1060 then
					for iter_294_0, iter_294_1 in pairs(arg_291_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_294_1 then
							if arg_291_1.isInRecall_ then
								local var_294_4 = Mathf.Lerp(iter_294_1.color.r, arg_291_1.hightColor1.r, var_294_3)
								local var_294_5 = Mathf.Lerp(iter_294_1.color.g, arg_291_1.hightColor1.g, var_294_3)
								local var_294_6 = Mathf.Lerp(iter_294_1.color.b, arg_291_1.hightColor1.b, var_294_3)

								iter_294_1.color = Color.New(var_294_4, var_294_5, var_294_6)
							else
								local var_294_7 = Mathf.Lerp(iter_294_1.color.r, 1, var_294_3)

								iter_294_1.color = Color.New(var_294_7, var_294_7, var_294_7)
							end
						end
					end
				end
			end

			if arg_291_1.time_ >= var_294_1 + var_294_2 and arg_291_1.time_ < var_294_1 + var_294_2 + arg_294_0 and not isNil(var_294_0) and arg_291_1.var_.actorSpriteComps1060 then
				for iter_294_2, iter_294_3 in pairs(arg_291_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_294_3 then
						if arg_291_1.isInRecall_ then
							iter_294_3.color = arg_291_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_294_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_291_1.var_.actorSpriteComps1060 = nil
			end

			local var_294_8 = arg_291_1.actors_["10128"]
			local var_294_9 = 0

			if var_294_9 < arg_291_1.time_ and arg_291_1.time_ <= var_294_9 + arg_294_0 and not isNil(var_294_8) and arg_291_1.var_.actorSpriteComps10128 == nil then
				arg_291_1.var_.actorSpriteComps10128 = var_294_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_294_10 = 0.2

			if var_294_9 <= arg_291_1.time_ and arg_291_1.time_ < var_294_9 + var_294_10 and not isNil(var_294_8) then
				local var_294_11 = (arg_291_1.time_ - var_294_9) / var_294_10

				if arg_291_1.var_.actorSpriteComps10128 then
					for iter_294_4, iter_294_5 in pairs(arg_291_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_294_5 then
							if arg_291_1.isInRecall_ then
								local var_294_12 = Mathf.Lerp(iter_294_5.color.r, arg_291_1.hightColor2.r, var_294_11)
								local var_294_13 = Mathf.Lerp(iter_294_5.color.g, arg_291_1.hightColor2.g, var_294_11)
								local var_294_14 = Mathf.Lerp(iter_294_5.color.b, arg_291_1.hightColor2.b, var_294_11)

								iter_294_5.color = Color.New(var_294_12, var_294_13, var_294_14)
							else
								local var_294_15 = Mathf.Lerp(iter_294_5.color.r, 0.5, var_294_11)

								iter_294_5.color = Color.New(var_294_15, var_294_15, var_294_15)
							end
						end
					end
				end
			end

			if arg_291_1.time_ >= var_294_9 + var_294_10 and arg_291_1.time_ < var_294_9 + var_294_10 + arg_294_0 and not isNil(var_294_8) and arg_291_1.var_.actorSpriteComps10128 then
				for iter_294_6, iter_294_7 in pairs(arg_291_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_294_7 then
						if arg_291_1.isInRecall_ then
							iter_294_7.color = arg_291_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_294_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_291_1.var_.actorSpriteComps10128 = nil
			end

			local var_294_16 = 0
			local var_294_17 = 0.325

			if var_294_16 < arg_291_1.time_ and arg_291_1.time_ <= var_294_16 + arg_294_0 then
				arg_291_1.talkMaxDuration = 0
				arg_291_1.dialogCg_.alpha = 1

				arg_291_1.dialog_:SetActive(true)
				SetActive(arg_291_1.leftNameGo_, true)

				local var_294_18 = arg_291_1:FormatText(StoryNameCfg[584].name)

				arg_291_1.leftNameTxt_.text = var_294_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_291_1.leftNameTxt_.transform)

				arg_291_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_291_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_291_1:RecordName(arg_291_1.leftNameTxt_.text)
				SetActive(arg_291_1.iconTrs_.gameObject, false)
				arg_291_1.callingController_:SetSelectedState("normal")

				local var_294_19 = arg_291_1:GetWordFromCfg(417161071)
				local var_294_20 = arg_291_1:FormatText(var_294_19.content)

				arg_291_1.text_.text = var_294_20

				LuaForUtil.ClearLinePrefixSymbol(arg_291_1.text_)

				local var_294_21 = 13
				local var_294_22 = utf8.len(var_294_20)
				local var_294_23 = var_294_21 <= 0 and var_294_17 or var_294_17 * (var_294_22 / var_294_21)

				if var_294_23 > 0 and var_294_17 < var_294_23 then
					arg_291_1.talkMaxDuration = var_294_23

					if var_294_23 + var_294_16 > arg_291_1.duration_ then
						arg_291_1.duration_ = var_294_23 + var_294_16
					end
				end

				arg_291_1.text_.text = var_294_20
				arg_291_1.typewritter.percent = 0

				arg_291_1.typewritter:SetDirty()
				arg_291_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161071", "story_v_out_417161.awb") ~= 0 then
					local var_294_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161071", "story_v_out_417161.awb") / 1000

					if var_294_24 + var_294_16 > arg_291_1.duration_ then
						arg_291_1.duration_ = var_294_24 + var_294_16
					end

					if var_294_19.prefab_name ~= "" and arg_291_1.actors_[var_294_19.prefab_name] ~= nil then
						local var_294_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_291_1.actors_[var_294_19.prefab_name].transform, "story_v_out_417161", "417161071", "story_v_out_417161.awb")

						arg_291_1:RecordAudio("417161071", var_294_25)
						arg_291_1:RecordAudio("417161071", var_294_25)
					else
						arg_291_1:AudioAction("play", "voice", "story_v_out_417161", "417161071", "story_v_out_417161.awb")
					end

					arg_291_1:RecordHistoryTalkVoice("story_v_out_417161", "417161071", "story_v_out_417161.awb")
				end

				arg_291_1:RecordContent(arg_291_1.text_.text)
			end

			local var_294_26 = math.max(var_294_17, arg_291_1.talkMaxDuration)

			if var_294_16 <= arg_291_1.time_ and arg_291_1.time_ < var_294_16 + var_294_26 then
				arg_291_1.typewritter.percent = (arg_291_1.time_ - var_294_16) / var_294_26

				arg_291_1.typewritter:SetDirty()
			end

			if arg_291_1.time_ >= var_294_16 + var_294_26 and arg_291_1.time_ < var_294_16 + var_294_26 + arg_294_0 then
				arg_291_1.typewritter.percent = 1

				arg_291_1.typewritter:SetDirty()
				arg_291_1:ShowNextGo(true)
			end
		end
	end,
	Play417161072 = function(arg_295_0, arg_295_1)
		arg_295_1.time_ = 0
		arg_295_1.frameCnt_ = 0
		arg_295_1.state_ = "playing"
		arg_295_1.curTalkId_ = 417161072
		arg_295_1.duration_ = 5

		SetActive(arg_295_1.tipsGo_, false)

		function arg_295_1.onSingleLineFinish_()
			arg_295_1.onSingleLineUpdate_ = nil
			arg_295_1.onSingleLineFinish_ = nil
			arg_295_1.state_ = "waiting"
		end

		function arg_295_1.playNext_(arg_297_0)
			if arg_297_0 == 1 then
				arg_295_0:Play417161073(arg_295_1)
			end
		end

		function arg_295_1.onSingleLineUpdate_(arg_298_0)
			local var_298_0 = arg_295_1.actors_["1060"].transform
			local var_298_1 = 0

			if var_298_1 < arg_295_1.time_ and arg_295_1.time_ <= var_298_1 + arg_298_0 then
				arg_295_1.var_.moveOldPos1060 = var_298_0.localPosition
				var_298_0.localScale = Vector3.New(1, 1, 1)

				arg_295_1:CheckSpriteTmpPos("1060", 7)

				local var_298_2 = var_298_0.childCount

				for iter_298_0 = 0, var_298_2 - 1 do
					local var_298_3 = var_298_0:GetChild(iter_298_0)

					if var_298_3.name == "" or not string.find(var_298_3.name, "split") then
						var_298_3.gameObject:SetActive(true)
					else
						var_298_3.gameObject:SetActive(false)
					end
				end
			end

			local var_298_4 = 0.001

			if var_298_1 <= arg_295_1.time_ and arg_295_1.time_ < var_298_1 + var_298_4 then
				local var_298_5 = (arg_295_1.time_ - var_298_1) / var_298_4
				local var_298_6 = Vector3.New(0, -2000, -40)

				var_298_0.localPosition = Vector3.Lerp(arg_295_1.var_.moveOldPos1060, var_298_6, var_298_5)
			end

			if arg_295_1.time_ >= var_298_1 + var_298_4 and arg_295_1.time_ < var_298_1 + var_298_4 + arg_298_0 then
				var_298_0.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_298_7 = arg_295_1.actors_["10128"].transform
			local var_298_8 = 0

			if var_298_8 < arg_295_1.time_ and arg_295_1.time_ <= var_298_8 + arg_298_0 then
				arg_295_1.var_.moveOldPos10128 = var_298_7.localPosition
				var_298_7.localScale = Vector3.New(1, 1, 1)

				arg_295_1:CheckSpriteTmpPos("10128", 7)

				local var_298_9 = var_298_7.childCount

				for iter_298_1 = 0, var_298_9 - 1 do
					local var_298_10 = var_298_7:GetChild(iter_298_1)

					if var_298_10.name == "" or not string.find(var_298_10.name, "split") then
						var_298_10.gameObject:SetActive(true)
					else
						var_298_10.gameObject:SetActive(false)
					end
				end
			end

			local var_298_11 = 0.001

			if var_298_8 <= arg_295_1.time_ and arg_295_1.time_ < var_298_8 + var_298_11 then
				local var_298_12 = (arg_295_1.time_ - var_298_8) / var_298_11
				local var_298_13 = Vector3.New(0, -2000, -300)

				var_298_7.localPosition = Vector3.Lerp(arg_295_1.var_.moveOldPos10128, var_298_13, var_298_12)
			end

			if arg_295_1.time_ >= var_298_8 + var_298_11 and arg_295_1.time_ < var_298_8 + var_298_11 + arg_298_0 then
				var_298_7.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_298_14 = 0
			local var_298_15 = 0.7

			if var_298_14 < arg_295_1.time_ and arg_295_1.time_ <= var_298_14 + arg_298_0 then
				arg_295_1.talkMaxDuration = 0
				arg_295_1.dialogCg_.alpha = 1

				arg_295_1.dialog_:SetActive(true)
				SetActive(arg_295_1.leftNameGo_, false)

				arg_295_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_295_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_295_1:RecordName(arg_295_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_295_1.iconTrs_.gameObject, false)
				arg_295_1.callingController_:SetSelectedState("normal")

				local var_298_16 = arg_295_1:GetWordFromCfg(417161072)
				local var_298_17 = arg_295_1:FormatText(var_298_16.content)

				arg_295_1.text_.text = var_298_17

				LuaForUtil.ClearLinePrefixSymbol(arg_295_1.text_)

				local var_298_18 = 28
				local var_298_19 = utf8.len(var_298_17)
				local var_298_20 = var_298_18 <= 0 and var_298_15 or var_298_15 * (var_298_19 / var_298_18)

				if var_298_20 > 0 and var_298_15 < var_298_20 then
					arg_295_1.talkMaxDuration = var_298_20

					if var_298_20 + var_298_14 > arg_295_1.duration_ then
						arg_295_1.duration_ = var_298_20 + var_298_14
					end
				end

				arg_295_1.text_.text = var_298_17
				arg_295_1.typewritter.percent = 0

				arg_295_1.typewritter:SetDirty()
				arg_295_1:ShowNextGo(false)
				arg_295_1:RecordContent(arg_295_1.text_.text)
			end

			local var_298_21 = math.max(var_298_15, arg_295_1.talkMaxDuration)

			if var_298_14 <= arg_295_1.time_ and arg_295_1.time_ < var_298_14 + var_298_21 then
				arg_295_1.typewritter.percent = (arg_295_1.time_ - var_298_14) / var_298_21

				arg_295_1.typewritter:SetDirty()
			end

			if arg_295_1.time_ >= var_298_14 + var_298_21 and arg_295_1.time_ < var_298_14 + var_298_21 + arg_298_0 then
				arg_295_1.typewritter.percent = 1

				arg_295_1.typewritter:SetDirty()
				arg_295_1:ShowNextGo(true)
			end
		end
	end,
	Play417161073 = function(arg_299_0, arg_299_1)
		arg_299_1.time_ = 0
		arg_299_1.frameCnt_ = 0
		arg_299_1.state_ = "playing"
		arg_299_1.curTalkId_ = 417161073
		arg_299_1.duration_ = 5.53

		local var_299_0 = {
			zh = 4.2,
			ja = 5.533
		}
		local var_299_1 = manager.audio:GetLocalizationFlag()

		if var_299_0[var_299_1] ~= nil then
			arg_299_1.duration_ = var_299_0[var_299_1]
		end

		SetActive(arg_299_1.tipsGo_, false)

		function arg_299_1.onSingleLineFinish_()
			arg_299_1.onSingleLineUpdate_ = nil
			arg_299_1.onSingleLineFinish_ = nil
			arg_299_1.state_ = "waiting"
		end

		function arg_299_1.playNext_(arg_301_0)
			if arg_301_0 == 1 then
				arg_299_0:Play417161074(arg_299_1)
			end
		end

		function arg_299_1.onSingleLineUpdate_(arg_302_0)
			local var_302_0 = arg_299_1.actors_["1060"]
			local var_302_1 = 0

			if var_302_1 < arg_299_1.time_ and arg_299_1.time_ <= var_302_1 + arg_302_0 and not isNil(var_302_0) and arg_299_1.var_.actorSpriteComps1060 == nil then
				arg_299_1.var_.actorSpriteComps1060 = var_302_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_302_2 = 0.2

			if var_302_1 <= arg_299_1.time_ and arg_299_1.time_ < var_302_1 + var_302_2 and not isNil(var_302_0) then
				local var_302_3 = (arg_299_1.time_ - var_302_1) / var_302_2

				if arg_299_1.var_.actorSpriteComps1060 then
					for iter_302_0, iter_302_1 in pairs(arg_299_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_302_1 then
							if arg_299_1.isInRecall_ then
								local var_302_4 = Mathf.Lerp(iter_302_1.color.r, arg_299_1.hightColor1.r, var_302_3)
								local var_302_5 = Mathf.Lerp(iter_302_1.color.g, arg_299_1.hightColor1.g, var_302_3)
								local var_302_6 = Mathf.Lerp(iter_302_1.color.b, arg_299_1.hightColor1.b, var_302_3)

								iter_302_1.color = Color.New(var_302_4, var_302_5, var_302_6)
							else
								local var_302_7 = Mathf.Lerp(iter_302_1.color.r, 1, var_302_3)

								iter_302_1.color = Color.New(var_302_7, var_302_7, var_302_7)
							end
						end
					end
				end
			end

			if arg_299_1.time_ >= var_302_1 + var_302_2 and arg_299_1.time_ < var_302_1 + var_302_2 + arg_302_0 and not isNil(var_302_0) and arg_299_1.var_.actorSpriteComps1060 then
				for iter_302_2, iter_302_3 in pairs(arg_299_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_302_3 then
						if arg_299_1.isInRecall_ then
							iter_302_3.color = arg_299_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_302_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_299_1.var_.actorSpriteComps1060 = nil
			end

			local var_302_8 = arg_299_1.actors_["1060"].transform
			local var_302_9 = 0

			if var_302_9 < arg_299_1.time_ and arg_299_1.time_ <= var_302_9 + arg_302_0 then
				arg_299_1.var_.moveOldPos1060 = var_302_8.localPosition
				var_302_8.localScale = Vector3.New(1, 1, 1)

				arg_299_1:CheckSpriteTmpPos("1060", 3)

				local var_302_10 = var_302_8.childCount

				for iter_302_4 = 0, var_302_10 - 1 do
					local var_302_11 = var_302_8:GetChild(iter_302_4)

					if var_302_11.name == "" or not string.find(var_302_11.name, "split") then
						var_302_11.gameObject:SetActive(true)
					else
						var_302_11.gameObject:SetActive(false)
					end
				end
			end

			local var_302_12 = 0.001

			if var_302_9 <= arg_299_1.time_ and arg_299_1.time_ < var_302_9 + var_302_12 then
				local var_302_13 = (arg_299_1.time_ - var_302_9) / var_302_12
				local var_302_14 = Vector3.New(33.4, -430.8, 6.9)

				var_302_8.localPosition = Vector3.Lerp(arg_299_1.var_.moveOldPos1060, var_302_14, var_302_13)
			end

			if arg_299_1.time_ >= var_302_9 + var_302_12 and arg_299_1.time_ < var_302_9 + var_302_12 + arg_302_0 then
				var_302_8.localPosition = Vector3.New(33.4, -430.8, 6.9)
			end

			local var_302_15 = 0
			local var_302_16 = 0.45

			if var_302_15 < arg_299_1.time_ and arg_299_1.time_ <= var_302_15 + arg_302_0 then
				arg_299_1.talkMaxDuration = 0
				arg_299_1.dialogCg_.alpha = 1

				arg_299_1.dialog_:SetActive(true)
				SetActive(arg_299_1.leftNameGo_, true)

				local var_302_17 = arg_299_1:FormatText(StoryNameCfg[584].name)

				arg_299_1.leftNameTxt_.text = var_302_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_299_1.leftNameTxt_.transform)

				arg_299_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_299_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_299_1:RecordName(arg_299_1.leftNameTxt_.text)
				SetActive(arg_299_1.iconTrs_.gameObject, false)
				arg_299_1.callingController_:SetSelectedState("normal")

				local var_302_18 = arg_299_1:GetWordFromCfg(417161073)
				local var_302_19 = arg_299_1:FormatText(var_302_18.content)

				arg_299_1.text_.text = var_302_19

				LuaForUtil.ClearLinePrefixSymbol(arg_299_1.text_)

				local var_302_20 = 18
				local var_302_21 = utf8.len(var_302_19)
				local var_302_22 = var_302_20 <= 0 and var_302_16 or var_302_16 * (var_302_21 / var_302_20)

				if var_302_22 > 0 and var_302_16 < var_302_22 then
					arg_299_1.talkMaxDuration = var_302_22

					if var_302_22 + var_302_15 > arg_299_1.duration_ then
						arg_299_1.duration_ = var_302_22 + var_302_15
					end
				end

				arg_299_1.text_.text = var_302_19
				arg_299_1.typewritter.percent = 0

				arg_299_1.typewritter:SetDirty()
				arg_299_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161073", "story_v_out_417161.awb") ~= 0 then
					local var_302_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161073", "story_v_out_417161.awb") / 1000

					if var_302_23 + var_302_15 > arg_299_1.duration_ then
						arg_299_1.duration_ = var_302_23 + var_302_15
					end

					if var_302_18.prefab_name ~= "" and arg_299_1.actors_[var_302_18.prefab_name] ~= nil then
						local var_302_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_299_1.actors_[var_302_18.prefab_name].transform, "story_v_out_417161", "417161073", "story_v_out_417161.awb")

						arg_299_1:RecordAudio("417161073", var_302_24)
						arg_299_1:RecordAudio("417161073", var_302_24)
					else
						arg_299_1:AudioAction("play", "voice", "story_v_out_417161", "417161073", "story_v_out_417161.awb")
					end

					arg_299_1:RecordHistoryTalkVoice("story_v_out_417161", "417161073", "story_v_out_417161.awb")
				end

				arg_299_1:RecordContent(arg_299_1.text_.text)
			end

			local var_302_25 = math.max(var_302_16, arg_299_1.talkMaxDuration)

			if var_302_15 <= arg_299_1.time_ and arg_299_1.time_ < var_302_15 + var_302_25 then
				arg_299_1.typewritter.percent = (arg_299_1.time_ - var_302_15) / var_302_25

				arg_299_1.typewritter:SetDirty()
			end

			if arg_299_1.time_ >= var_302_15 + var_302_25 and arg_299_1.time_ < var_302_15 + var_302_25 + arg_302_0 then
				arg_299_1.typewritter.percent = 1

				arg_299_1.typewritter:SetDirty()
				arg_299_1:ShowNextGo(true)
			end
		end
	end,
	Play417161074 = function(arg_303_0, arg_303_1)
		arg_303_1.time_ = 0
		arg_303_1.frameCnt_ = 0
		arg_303_1.state_ = "playing"
		arg_303_1.curTalkId_ = 417161074
		arg_303_1.duration_ = 4.73

		local var_303_0 = {
			zh = 4.433,
			ja = 4.733
		}
		local var_303_1 = manager.audio:GetLocalizationFlag()

		if var_303_0[var_303_1] ~= nil then
			arg_303_1.duration_ = var_303_0[var_303_1]
		end

		SetActive(arg_303_1.tipsGo_, false)

		function arg_303_1.onSingleLineFinish_()
			arg_303_1.onSingleLineUpdate_ = nil
			arg_303_1.onSingleLineFinish_ = nil
			arg_303_1.state_ = "waiting"
		end

		function arg_303_1.playNext_(arg_305_0)
			if arg_305_0 == 1 then
				arg_303_0:Play417161075(arg_303_1)
			end
		end

		function arg_303_1.onSingleLineUpdate_(arg_306_0)
			local var_306_0 = arg_303_1.actors_["10128"]
			local var_306_1 = 0

			if var_306_1 < arg_303_1.time_ and arg_303_1.time_ <= var_306_1 + arg_306_0 and not isNil(var_306_0) and arg_303_1.var_.actorSpriteComps10128 == nil then
				arg_303_1.var_.actorSpriteComps10128 = var_306_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_306_2 = 0.2

			if var_306_1 <= arg_303_1.time_ and arg_303_1.time_ < var_306_1 + var_306_2 and not isNil(var_306_0) then
				local var_306_3 = (arg_303_1.time_ - var_306_1) / var_306_2

				if arg_303_1.var_.actorSpriteComps10128 then
					for iter_306_0, iter_306_1 in pairs(arg_303_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_306_1 then
							if arg_303_1.isInRecall_ then
								local var_306_4 = Mathf.Lerp(iter_306_1.color.r, arg_303_1.hightColor1.r, var_306_3)
								local var_306_5 = Mathf.Lerp(iter_306_1.color.g, arg_303_1.hightColor1.g, var_306_3)
								local var_306_6 = Mathf.Lerp(iter_306_1.color.b, arg_303_1.hightColor1.b, var_306_3)

								iter_306_1.color = Color.New(var_306_4, var_306_5, var_306_6)
							else
								local var_306_7 = Mathf.Lerp(iter_306_1.color.r, 1, var_306_3)

								iter_306_1.color = Color.New(var_306_7, var_306_7, var_306_7)
							end
						end
					end
				end
			end

			if arg_303_1.time_ >= var_306_1 + var_306_2 and arg_303_1.time_ < var_306_1 + var_306_2 + arg_306_0 and not isNil(var_306_0) and arg_303_1.var_.actorSpriteComps10128 then
				for iter_306_2, iter_306_3 in pairs(arg_303_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_306_3 then
						if arg_303_1.isInRecall_ then
							iter_306_3.color = arg_303_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_306_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_303_1.var_.actorSpriteComps10128 = nil
			end

			local var_306_8 = arg_303_1.actors_["1060"]
			local var_306_9 = 0

			if var_306_9 < arg_303_1.time_ and arg_303_1.time_ <= var_306_9 + arg_306_0 and not isNil(var_306_8) and arg_303_1.var_.actorSpriteComps1060 == nil then
				arg_303_1.var_.actorSpriteComps1060 = var_306_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_306_10 = 0.2

			if var_306_9 <= arg_303_1.time_ and arg_303_1.time_ < var_306_9 + var_306_10 and not isNil(var_306_8) then
				local var_306_11 = (arg_303_1.time_ - var_306_9) / var_306_10

				if arg_303_1.var_.actorSpriteComps1060 then
					for iter_306_4, iter_306_5 in pairs(arg_303_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_306_5 then
							if arg_303_1.isInRecall_ then
								local var_306_12 = Mathf.Lerp(iter_306_5.color.r, arg_303_1.hightColor2.r, var_306_11)
								local var_306_13 = Mathf.Lerp(iter_306_5.color.g, arg_303_1.hightColor2.g, var_306_11)
								local var_306_14 = Mathf.Lerp(iter_306_5.color.b, arg_303_1.hightColor2.b, var_306_11)

								iter_306_5.color = Color.New(var_306_12, var_306_13, var_306_14)
							else
								local var_306_15 = Mathf.Lerp(iter_306_5.color.r, 0.5, var_306_11)

								iter_306_5.color = Color.New(var_306_15, var_306_15, var_306_15)
							end
						end
					end
				end
			end

			if arg_303_1.time_ >= var_306_9 + var_306_10 and arg_303_1.time_ < var_306_9 + var_306_10 + arg_306_0 and not isNil(var_306_8) and arg_303_1.var_.actorSpriteComps1060 then
				for iter_306_6, iter_306_7 in pairs(arg_303_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_306_7 then
						if arg_303_1.isInRecall_ then
							iter_306_7.color = arg_303_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_306_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_303_1.var_.actorSpriteComps1060 = nil
			end

			local var_306_16 = arg_303_1.actors_["10128"].transform
			local var_306_17 = 0

			if var_306_17 < arg_303_1.time_ and arg_303_1.time_ <= var_306_17 + arg_306_0 then
				arg_303_1.var_.moveOldPos10128 = var_306_16.localPosition
				var_306_16.localScale = Vector3.New(1, 1, 1)

				arg_303_1:CheckSpriteTmpPos("10128", 3)

				local var_306_18 = var_306_16.childCount

				for iter_306_8 = 0, var_306_18 - 1 do
					local var_306_19 = var_306_16:GetChild(iter_306_8)

					if var_306_19.name == "" or not string.find(var_306_19.name, "split") then
						var_306_19.gameObject:SetActive(true)
					else
						var_306_19.gameObject:SetActive(false)
					end
				end
			end

			local var_306_20 = 0.001

			if var_306_17 <= arg_303_1.time_ and arg_303_1.time_ < var_306_17 + var_306_20 then
				local var_306_21 = (arg_303_1.time_ - var_306_17) / var_306_20
				local var_306_22 = Vector3.New(0, -347, -300)

				var_306_16.localPosition = Vector3.Lerp(arg_303_1.var_.moveOldPos10128, var_306_22, var_306_21)
			end

			if arg_303_1.time_ >= var_306_17 + var_306_20 and arg_303_1.time_ < var_306_17 + var_306_20 + arg_306_0 then
				var_306_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_306_23 = arg_303_1.actors_["1060"].transform
			local var_306_24 = 0

			if var_306_24 < arg_303_1.time_ and arg_303_1.time_ <= var_306_24 + arg_306_0 then
				arg_303_1.var_.moveOldPos1060 = var_306_23.localPosition
				var_306_23.localScale = Vector3.New(1, 1, 1)

				arg_303_1:CheckSpriteTmpPos("1060", 7)

				local var_306_25 = var_306_23.childCount

				for iter_306_9 = 0, var_306_25 - 1 do
					local var_306_26 = var_306_23:GetChild(iter_306_9)

					if var_306_26.name == "" or not string.find(var_306_26.name, "split") then
						var_306_26.gameObject:SetActive(true)
					else
						var_306_26.gameObject:SetActive(false)
					end
				end
			end

			local var_306_27 = 0.001

			if var_306_24 <= arg_303_1.time_ and arg_303_1.time_ < var_306_24 + var_306_27 then
				local var_306_28 = (arg_303_1.time_ - var_306_24) / var_306_27
				local var_306_29 = Vector3.New(0, -2000, -40)

				var_306_23.localPosition = Vector3.Lerp(arg_303_1.var_.moveOldPos1060, var_306_29, var_306_28)
			end

			if arg_303_1.time_ >= var_306_24 + var_306_27 and arg_303_1.time_ < var_306_24 + var_306_27 + arg_306_0 then
				var_306_23.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_306_30 = 0
			local var_306_31 = 0.5

			if var_306_30 < arg_303_1.time_ and arg_303_1.time_ <= var_306_30 + arg_306_0 then
				arg_303_1.talkMaxDuration = 0
				arg_303_1.dialogCg_.alpha = 1

				arg_303_1.dialog_:SetActive(true)
				SetActive(arg_303_1.leftNameGo_, true)

				local var_306_32 = arg_303_1:FormatText(StoryNameCfg[595].name)

				arg_303_1.leftNameTxt_.text = var_306_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_303_1.leftNameTxt_.transform)

				arg_303_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_303_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_303_1:RecordName(arg_303_1.leftNameTxt_.text)
				SetActive(arg_303_1.iconTrs_.gameObject, false)
				arg_303_1.callingController_:SetSelectedState("normal")

				local var_306_33 = arg_303_1:GetWordFromCfg(417161074)
				local var_306_34 = arg_303_1:FormatText(var_306_33.content)

				arg_303_1.text_.text = var_306_34

				LuaForUtil.ClearLinePrefixSymbol(arg_303_1.text_)

				local var_306_35 = 20
				local var_306_36 = utf8.len(var_306_34)
				local var_306_37 = var_306_35 <= 0 and var_306_31 or var_306_31 * (var_306_36 / var_306_35)

				if var_306_37 > 0 and var_306_31 < var_306_37 then
					arg_303_1.talkMaxDuration = var_306_37

					if var_306_37 + var_306_30 > arg_303_1.duration_ then
						arg_303_1.duration_ = var_306_37 + var_306_30
					end
				end

				arg_303_1.text_.text = var_306_34
				arg_303_1.typewritter.percent = 0

				arg_303_1.typewritter:SetDirty()
				arg_303_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161074", "story_v_out_417161.awb") ~= 0 then
					local var_306_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161074", "story_v_out_417161.awb") / 1000

					if var_306_38 + var_306_30 > arg_303_1.duration_ then
						arg_303_1.duration_ = var_306_38 + var_306_30
					end

					if var_306_33.prefab_name ~= "" and arg_303_1.actors_[var_306_33.prefab_name] ~= nil then
						local var_306_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_303_1.actors_[var_306_33.prefab_name].transform, "story_v_out_417161", "417161074", "story_v_out_417161.awb")

						arg_303_1:RecordAudio("417161074", var_306_39)
						arg_303_1:RecordAudio("417161074", var_306_39)
					else
						arg_303_1:AudioAction("play", "voice", "story_v_out_417161", "417161074", "story_v_out_417161.awb")
					end

					arg_303_1:RecordHistoryTalkVoice("story_v_out_417161", "417161074", "story_v_out_417161.awb")
				end

				arg_303_1:RecordContent(arg_303_1.text_.text)
			end

			local var_306_40 = math.max(var_306_31, arg_303_1.talkMaxDuration)

			if var_306_30 <= arg_303_1.time_ and arg_303_1.time_ < var_306_30 + var_306_40 then
				arg_303_1.typewritter.percent = (arg_303_1.time_ - var_306_30) / var_306_40

				arg_303_1.typewritter:SetDirty()
			end

			if arg_303_1.time_ >= var_306_30 + var_306_40 and arg_303_1.time_ < var_306_30 + var_306_40 + arg_306_0 then
				arg_303_1.typewritter.percent = 1

				arg_303_1.typewritter:SetDirty()
				arg_303_1:ShowNextGo(true)
			end
		end
	end,
	Play417161075 = function(arg_307_0, arg_307_1)
		arg_307_1.time_ = 0
		arg_307_1.frameCnt_ = 0
		arg_307_1.state_ = "playing"
		arg_307_1.curTalkId_ = 417161075
		arg_307_1.duration_ = 10

		local var_307_0 = {
			zh = 6.466,
			ja = 10
		}
		local var_307_1 = manager.audio:GetLocalizationFlag()

		if var_307_0[var_307_1] ~= nil then
			arg_307_1.duration_ = var_307_0[var_307_1]
		end

		SetActive(arg_307_1.tipsGo_, false)

		function arg_307_1.onSingleLineFinish_()
			arg_307_1.onSingleLineUpdate_ = nil
			arg_307_1.onSingleLineFinish_ = nil
			arg_307_1.state_ = "waiting"
		end

		function arg_307_1.playNext_(arg_309_0)
			if arg_309_0 == 1 then
				arg_307_0:Play417161076(arg_307_1)
			end
		end

		function arg_307_1.onSingleLineUpdate_(arg_310_0)
			local var_310_0 = arg_307_1.actors_["1060"]
			local var_310_1 = 0

			if var_310_1 < arg_307_1.time_ and arg_307_1.time_ <= var_310_1 + arg_310_0 and not isNil(var_310_0) and arg_307_1.var_.actorSpriteComps1060 == nil then
				arg_307_1.var_.actorSpriteComps1060 = var_310_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_310_2 = 0.2

			if var_310_1 <= arg_307_1.time_ and arg_307_1.time_ < var_310_1 + var_310_2 and not isNil(var_310_0) then
				local var_310_3 = (arg_307_1.time_ - var_310_1) / var_310_2

				if arg_307_1.var_.actorSpriteComps1060 then
					for iter_310_0, iter_310_1 in pairs(arg_307_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_310_1 then
							if arg_307_1.isInRecall_ then
								local var_310_4 = Mathf.Lerp(iter_310_1.color.r, arg_307_1.hightColor1.r, var_310_3)
								local var_310_5 = Mathf.Lerp(iter_310_1.color.g, arg_307_1.hightColor1.g, var_310_3)
								local var_310_6 = Mathf.Lerp(iter_310_1.color.b, arg_307_1.hightColor1.b, var_310_3)

								iter_310_1.color = Color.New(var_310_4, var_310_5, var_310_6)
							else
								local var_310_7 = Mathf.Lerp(iter_310_1.color.r, 1, var_310_3)

								iter_310_1.color = Color.New(var_310_7, var_310_7, var_310_7)
							end
						end
					end
				end
			end

			if arg_307_1.time_ >= var_310_1 + var_310_2 and arg_307_1.time_ < var_310_1 + var_310_2 + arg_310_0 and not isNil(var_310_0) and arg_307_1.var_.actorSpriteComps1060 then
				for iter_310_2, iter_310_3 in pairs(arg_307_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_310_3 then
						if arg_307_1.isInRecall_ then
							iter_310_3.color = arg_307_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_310_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_307_1.var_.actorSpriteComps1060 = nil
			end

			local var_310_8 = arg_307_1.actors_["10128"]
			local var_310_9 = 0

			if var_310_9 < arg_307_1.time_ and arg_307_1.time_ <= var_310_9 + arg_310_0 and not isNil(var_310_8) and arg_307_1.var_.actorSpriteComps10128 == nil then
				arg_307_1.var_.actorSpriteComps10128 = var_310_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_310_10 = 0.2

			if var_310_9 <= arg_307_1.time_ and arg_307_1.time_ < var_310_9 + var_310_10 and not isNil(var_310_8) then
				local var_310_11 = (arg_307_1.time_ - var_310_9) / var_310_10

				if arg_307_1.var_.actorSpriteComps10128 then
					for iter_310_4, iter_310_5 in pairs(arg_307_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_310_5 then
							if arg_307_1.isInRecall_ then
								local var_310_12 = Mathf.Lerp(iter_310_5.color.r, arg_307_1.hightColor2.r, var_310_11)
								local var_310_13 = Mathf.Lerp(iter_310_5.color.g, arg_307_1.hightColor2.g, var_310_11)
								local var_310_14 = Mathf.Lerp(iter_310_5.color.b, arg_307_1.hightColor2.b, var_310_11)

								iter_310_5.color = Color.New(var_310_12, var_310_13, var_310_14)
							else
								local var_310_15 = Mathf.Lerp(iter_310_5.color.r, 0.5, var_310_11)

								iter_310_5.color = Color.New(var_310_15, var_310_15, var_310_15)
							end
						end
					end
				end
			end

			if arg_307_1.time_ >= var_310_9 + var_310_10 and arg_307_1.time_ < var_310_9 + var_310_10 + arg_310_0 and not isNil(var_310_8) and arg_307_1.var_.actorSpriteComps10128 then
				for iter_310_6, iter_310_7 in pairs(arg_307_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_310_7 then
						if arg_307_1.isInRecall_ then
							iter_310_7.color = arg_307_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_310_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_307_1.var_.actorSpriteComps10128 = nil
			end

			local var_310_16 = arg_307_1.actors_["10128"].transform
			local var_310_17 = 0

			if var_310_17 < arg_307_1.time_ and arg_307_1.time_ <= var_310_17 + arg_310_0 then
				arg_307_1.var_.moveOldPos10128 = var_310_16.localPosition
				var_310_16.localScale = Vector3.New(1, 1, 1)

				arg_307_1:CheckSpriteTmpPos("10128", 2)

				local var_310_18 = var_310_16.childCount

				for iter_310_8 = 0, var_310_18 - 1 do
					local var_310_19 = var_310_16:GetChild(iter_310_8)

					if var_310_19.name == "" or not string.find(var_310_19.name, "split") then
						var_310_19.gameObject:SetActive(true)
					else
						var_310_19.gameObject:SetActive(false)
					end
				end
			end

			local var_310_20 = 0.001

			if var_310_17 <= arg_307_1.time_ and arg_307_1.time_ < var_310_17 + var_310_20 then
				local var_310_21 = (arg_307_1.time_ - var_310_17) / var_310_20
				local var_310_22 = Vector3.New(-390, -347, -300)

				var_310_16.localPosition = Vector3.Lerp(arg_307_1.var_.moveOldPos10128, var_310_22, var_310_21)
			end

			if arg_307_1.time_ >= var_310_17 + var_310_20 and arg_307_1.time_ < var_310_17 + var_310_20 + arg_310_0 then
				var_310_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_310_23 = arg_307_1.actors_["1060"].transform
			local var_310_24 = 0

			if var_310_24 < arg_307_1.time_ and arg_307_1.time_ <= var_310_24 + arg_310_0 then
				arg_307_1.var_.moveOldPos1060 = var_310_23.localPosition
				var_310_23.localScale = Vector3.New(1, 1, 1)

				arg_307_1:CheckSpriteTmpPos("1060", 4)

				local var_310_25 = var_310_23.childCount

				for iter_310_9 = 0, var_310_25 - 1 do
					local var_310_26 = var_310_23:GetChild(iter_310_9)

					if var_310_26.name == "" or not string.find(var_310_26.name, "split") then
						var_310_26.gameObject:SetActive(true)
					else
						var_310_26.gameObject:SetActive(false)
					end
				end
			end

			local var_310_27 = 0.001

			if var_310_24 <= arg_307_1.time_ and arg_307_1.time_ < var_310_24 + var_310_27 then
				local var_310_28 = (arg_307_1.time_ - var_310_24) / var_310_27
				local var_310_29 = Vector3.New(420.9, -430.8, 6.9)

				var_310_23.localPosition = Vector3.Lerp(arg_307_1.var_.moveOldPos1060, var_310_29, var_310_28)
			end

			if arg_307_1.time_ >= var_310_24 + var_310_27 and arg_307_1.time_ < var_310_24 + var_310_27 + arg_310_0 then
				var_310_23.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_310_30 = 0
			local var_310_31 = 0.875

			if var_310_30 < arg_307_1.time_ and arg_307_1.time_ <= var_310_30 + arg_310_0 then
				arg_307_1.talkMaxDuration = 0
				arg_307_1.dialogCg_.alpha = 1

				arg_307_1.dialog_:SetActive(true)
				SetActive(arg_307_1.leftNameGo_, true)

				local var_310_32 = arg_307_1:FormatText(StoryNameCfg[584].name)

				arg_307_1.leftNameTxt_.text = var_310_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_307_1.leftNameTxt_.transform)

				arg_307_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_307_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_307_1:RecordName(arg_307_1.leftNameTxt_.text)
				SetActive(arg_307_1.iconTrs_.gameObject, false)
				arg_307_1.callingController_:SetSelectedState("normal")

				local var_310_33 = arg_307_1:GetWordFromCfg(417161075)
				local var_310_34 = arg_307_1:FormatText(var_310_33.content)

				arg_307_1.text_.text = var_310_34

				LuaForUtil.ClearLinePrefixSymbol(arg_307_1.text_)

				local var_310_35 = 33
				local var_310_36 = utf8.len(var_310_34)
				local var_310_37 = var_310_35 <= 0 and var_310_31 or var_310_31 * (var_310_36 / var_310_35)

				if var_310_37 > 0 and var_310_31 < var_310_37 then
					arg_307_1.talkMaxDuration = var_310_37

					if var_310_37 + var_310_30 > arg_307_1.duration_ then
						arg_307_1.duration_ = var_310_37 + var_310_30
					end
				end

				arg_307_1.text_.text = var_310_34
				arg_307_1.typewritter.percent = 0

				arg_307_1.typewritter:SetDirty()
				arg_307_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161075", "story_v_out_417161.awb") ~= 0 then
					local var_310_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161075", "story_v_out_417161.awb") / 1000

					if var_310_38 + var_310_30 > arg_307_1.duration_ then
						arg_307_1.duration_ = var_310_38 + var_310_30
					end

					if var_310_33.prefab_name ~= "" and arg_307_1.actors_[var_310_33.prefab_name] ~= nil then
						local var_310_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_307_1.actors_[var_310_33.prefab_name].transform, "story_v_out_417161", "417161075", "story_v_out_417161.awb")

						arg_307_1:RecordAudio("417161075", var_310_39)
						arg_307_1:RecordAudio("417161075", var_310_39)
					else
						arg_307_1:AudioAction("play", "voice", "story_v_out_417161", "417161075", "story_v_out_417161.awb")
					end

					arg_307_1:RecordHistoryTalkVoice("story_v_out_417161", "417161075", "story_v_out_417161.awb")
				end

				arg_307_1:RecordContent(arg_307_1.text_.text)
			end

			local var_310_40 = math.max(var_310_31, arg_307_1.talkMaxDuration)

			if var_310_30 <= arg_307_1.time_ and arg_307_1.time_ < var_310_30 + var_310_40 then
				arg_307_1.typewritter.percent = (arg_307_1.time_ - var_310_30) / var_310_40

				arg_307_1.typewritter:SetDirty()
			end

			if arg_307_1.time_ >= var_310_30 + var_310_40 and arg_307_1.time_ < var_310_30 + var_310_40 + arg_310_0 then
				arg_307_1.typewritter.percent = 1

				arg_307_1.typewritter:SetDirty()
				arg_307_1:ShowNextGo(true)
			end
		end
	end,
	Play417161076 = function(arg_311_0, arg_311_1)
		arg_311_1.time_ = 0
		arg_311_1.frameCnt_ = 0
		arg_311_1.state_ = "playing"
		arg_311_1.curTalkId_ = 417161076
		arg_311_1.duration_ = 9.53

		local var_311_0 = {
			zh = 8.4,
			ja = 9.533
		}
		local var_311_1 = manager.audio:GetLocalizationFlag()

		if var_311_0[var_311_1] ~= nil then
			arg_311_1.duration_ = var_311_0[var_311_1]
		end

		SetActive(arg_311_1.tipsGo_, false)

		function arg_311_1.onSingleLineFinish_()
			arg_311_1.onSingleLineUpdate_ = nil
			arg_311_1.onSingleLineFinish_ = nil
			arg_311_1.state_ = "waiting"
		end

		function arg_311_1.playNext_(arg_313_0)
			if arg_313_0 == 1 then
				arg_311_0:Play417161077(arg_311_1)
			end
		end

		function arg_311_1.onSingleLineUpdate_(arg_314_0)
			local var_314_0 = 0
			local var_314_1 = 1.075

			if var_314_0 < arg_311_1.time_ and arg_311_1.time_ <= var_314_0 + arg_314_0 then
				arg_311_1.talkMaxDuration = 0
				arg_311_1.dialogCg_.alpha = 1

				arg_311_1.dialog_:SetActive(true)
				SetActive(arg_311_1.leftNameGo_, true)

				local var_314_2 = arg_311_1:FormatText(StoryNameCfg[584].name)

				arg_311_1.leftNameTxt_.text = var_314_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_311_1.leftNameTxt_.transform)

				arg_311_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_311_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_311_1:RecordName(arg_311_1.leftNameTxt_.text)
				SetActive(arg_311_1.iconTrs_.gameObject, false)
				arg_311_1.callingController_:SetSelectedState("normal")

				local var_314_3 = arg_311_1:GetWordFromCfg(417161076)
				local var_314_4 = arg_311_1:FormatText(var_314_3.content)

				arg_311_1.text_.text = var_314_4

				LuaForUtil.ClearLinePrefixSymbol(arg_311_1.text_)

				local var_314_5 = 43
				local var_314_6 = utf8.len(var_314_4)
				local var_314_7 = var_314_5 <= 0 and var_314_1 or var_314_1 * (var_314_6 / var_314_5)

				if var_314_7 > 0 and var_314_1 < var_314_7 then
					arg_311_1.talkMaxDuration = var_314_7

					if var_314_7 + var_314_0 > arg_311_1.duration_ then
						arg_311_1.duration_ = var_314_7 + var_314_0
					end
				end

				arg_311_1.text_.text = var_314_4
				arg_311_1.typewritter.percent = 0

				arg_311_1.typewritter:SetDirty()
				arg_311_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161076", "story_v_out_417161.awb") ~= 0 then
					local var_314_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161076", "story_v_out_417161.awb") / 1000

					if var_314_8 + var_314_0 > arg_311_1.duration_ then
						arg_311_1.duration_ = var_314_8 + var_314_0
					end

					if var_314_3.prefab_name ~= "" and arg_311_1.actors_[var_314_3.prefab_name] ~= nil then
						local var_314_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_311_1.actors_[var_314_3.prefab_name].transform, "story_v_out_417161", "417161076", "story_v_out_417161.awb")

						arg_311_1:RecordAudio("417161076", var_314_9)
						arg_311_1:RecordAudio("417161076", var_314_9)
					else
						arg_311_1:AudioAction("play", "voice", "story_v_out_417161", "417161076", "story_v_out_417161.awb")
					end

					arg_311_1:RecordHistoryTalkVoice("story_v_out_417161", "417161076", "story_v_out_417161.awb")
				end

				arg_311_1:RecordContent(arg_311_1.text_.text)
			end

			local var_314_10 = math.max(var_314_1, arg_311_1.talkMaxDuration)

			if var_314_0 <= arg_311_1.time_ and arg_311_1.time_ < var_314_0 + var_314_10 then
				arg_311_1.typewritter.percent = (arg_311_1.time_ - var_314_0) / var_314_10

				arg_311_1.typewritter:SetDirty()
			end

			if arg_311_1.time_ >= var_314_0 + var_314_10 and arg_311_1.time_ < var_314_0 + var_314_10 + arg_314_0 then
				arg_311_1.typewritter.percent = 1

				arg_311_1.typewritter:SetDirty()
				arg_311_1:ShowNextGo(true)
			end
		end
	end,
	Play417161077 = function(arg_315_0, arg_315_1)
		arg_315_1.time_ = 0
		arg_315_1.frameCnt_ = 0
		arg_315_1.state_ = "playing"
		arg_315_1.curTalkId_ = 417161077
		arg_315_1.duration_ = 2.87

		local var_315_0 = {
			zh = 2.366,
			ja = 2.866
		}
		local var_315_1 = manager.audio:GetLocalizationFlag()

		if var_315_0[var_315_1] ~= nil then
			arg_315_1.duration_ = var_315_0[var_315_1]
		end

		SetActive(arg_315_1.tipsGo_, false)

		function arg_315_1.onSingleLineFinish_()
			arg_315_1.onSingleLineUpdate_ = nil
			arg_315_1.onSingleLineFinish_ = nil
			arg_315_1.state_ = "waiting"
		end

		function arg_315_1.playNext_(arg_317_0)
			if arg_317_0 == 1 then
				arg_315_0:Play417161078(arg_315_1)
			end
		end

		function arg_315_1.onSingleLineUpdate_(arg_318_0)
			local var_318_0 = arg_315_1.actors_["10128"]
			local var_318_1 = 0

			if var_318_1 < arg_315_1.time_ and arg_315_1.time_ <= var_318_1 + arg_318_0 and not isNil(var_318_0) and arg_315_1.var_.actorSpriteComps10128 == nil then
				arg_315_1.var_.actorSpriteComps10128 = var_318_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_318_2 = 0.2

			if var_318_1 <= arg_315_1.time_ and arg_315_1.time_ < var_318_1 + var_318_2 and not isNil(var_318_0) then
				local var_318_3 = (arg_315_1.time_ - var_318_1) / var_318_2

				if arg_315_1.var_.actorSpriteComps10128 then
					for iter_318_0, iter_318_1 in pairs(arg_315_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_318_1 then
							if arg_315_1.isInRecall_ then
								local var_318_4 = Mathf.Lerp(iter_318_1.color.r, arg_315_1.hightColor1.r, var_318_3)
								local var_318_5 = Mathf.Lerp(iter_318_1.color.g, arg_315_1.hightColor1.g, var_318_3)
								local var_318_6 = Mathf.Lerp(iter_318_1.color.b, arg_315_1.hightColor1.b, var_318_3)

								iter_318_1.color = Color.New(var_318_4, var_318_5, var_318_6)
							else
								local var_318_7 = Mathf.Lerp(iter_318_1.color.r, 1, var_318_3)

								iter_318_1.color = Color.New(var_318_7, var_318_7, var_318_7)
							end
						end
					end
				end
			end

			if arg_315_1.time_ >= var_318_1 + var_318_2 and arg_315_1.time_ < var_318_1 + var_318_2 + arg_318_0 and not isNil(var_318_0) and arg_315_1.var_.actorSpriteComps10128 then
				for iter_318_2, iter_318_3 in pairs(arg_315_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_318_3 then
						if arg_315_1.isInRecall_ then
							iter_318_3.color = arg_315_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_318_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_315_1.var_.actorSpriteComps10128 = nil
			end

			local var_318_8 = arg_315_1.actors_["1060"]
			local var_318_9 = 0

			if var_318_9 < arg_315_1.time_ and arg_315_1.time_ <= var_318_9 + arg_318_0 and not isNil(var_318_8) and arg_315_1.var_.actorSpriteComps1060 == nil then
				arg_315_1.var_.actorSpriteComps1060 = var_318_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_318_10 = 0.2

			if var_318_9 <= arg_315_1.time_ and arg_315_1.time_ < var_318_9 + var_318_10 and not isNil(var_318_8) then
				local var_318_11 = (arg_315_1.time_ - var_318_9) / var_318_10

				if arg_315_1.var_.actorSpriteComps1060 then
					for iter_318_4, iter_318_5 in pairs(arg_315_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_318_5 then
							if arg_315_1.isInRecall_ then
								local var_318_12 = Mathf.Lerp(iter_318_5.color.r, arg_315_1.hightColor2.r, var_318_11)
								local var_318_13 = Mathf.Lerp(iter_318_5.color.g, arg_315_1.hightColor2.g, var_318_11)
								local var_318_14 = Mathf.Lerp(iter_318_5.color.b, arg_315_1.hightColor2.b, var_318_11)

								iter_318_5.color = Color.New(var_318_12, var_318_13, var_318_14)
							else
								local var_318_15 = Mathf.Lerp(iter_318_5.color.r, 0.5, var_318_11)

								iter_318_5.color = Color.New(var_318_15, var_318_15, var_318_15)
							end
						end
					end
				end
			end

			if arg_315_1.time_ >= var_318_9 + var_318_10 and arg_315_1.time_ < var_318_9 + var_318_10 + arg_318_0 and not isNil(var_318_8) and arg_315_1.var_.actorSpriteComps1060 then
				for iter_318_6, iter_318_7 in pairs(arg_315_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_318_7 then
						if arg_315_1.isInRecall_ then
							iter_318_7.color = arg_315_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_318_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_315_1.var_.actorSpriteComps1060 = nil
			end

			local var_318_16 = 0
			local var_318_17 = 0.325

			if var_318_16 < arg_315_1.time_ and arg_315_1.time_ <= var_318_16 + arg_318_0 then
				arg_315_1.talkMaxDuration = 0
				arg_315_1.dialogCg_.alpha = 1

				arg_315_1.dialog_:SetActive(true)
				SetActive(arg_315_1.leftNameGo_, true)

				local var_318_18 = arg_315_1:FormatText(StoryNameCfg[595].name)

				arg_315_1.leftNameTxt_.text = var_318_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_315_1.leftNameTxt_.transform)

				arg_315_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_315_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_315_1:RecordName(arg_315_1.leftNameTxt_.text)
				SetActive(arg_315_1.iconTrs_.gameObject, false)
				arg_315_1.callingController_:SetSelectedState("normal")

				local var_318_19 = arg_315_1:GetWordFromCfg(417161077)
				local var_318_20 = arg_315_1:FormatText(var_318_19.content)

				arg_315_1.text_.text = var_318_20

				LuaForUtil.ClearLinePrefixSymbol(arg_315_1.text_)

				local var_318_21 = 13
				local var_318_22 = utf8.len(var_318_20)
				local var_318_23 = var_318_21 <= 0 and var_318_17 or var_318_17 * (var_318_22 / var_318_21)

				if var_318_23 > 0 and var_318_17 < var_318_23 then
					arg_315_1.talkMaxDuration = var_318_23

					if var_318_23 + var_318_16 > arg_315_1.duration_ then
						arg_315_1.duration_ = var_318_23 + var_318_16
					end
				end

				arg_315_1.text_.text = var_318_20
				arg_315_1.typewritter.percent = 0

				arg_315_1.typewritter:SetDirty()
				arg_315_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161077", "story_v_out_417161.awb") ~= 0 then
					local var_318_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161077", "story_v_out_417161.awb") / 1000

					if var_318_24 + var_318_16 > arg_315_1.duration_ then
						arg_315_1.duration_ = var_318_24 + var_318_16
					end

					if var_318_19.prefab_name ~= "" and arg_315_1.actors_[var_318_19.prefab_name] ~= nil then
						local var_318_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_315_1.actors_[var_318_19.prefab_name].transform, "story_v_out_417161", "417161077", "story_v_out_417161.awb")

						arg_315_1:RecordAudio("417161077", var_318_25)
						arg_315_1:RecordAudio("417161077", var_318_25)
					else
						arg_315_1:AudioAction("play", "voice", "story_v_out_417161", "417161077", "story_v_out_417161.awb")
					end

					arg_315_1:RecordHistoryTalkVoice("story_v_out_417161", "417161077", "story_v_out_417161.awb")
				end

				arg_315_1:RecordContent(arg_315_1.text_.text)
			end

			local var_318_26 = math.max(var_318_17, arg_315_1.talkMaxDuration)

			if var_318_16 <= arg_315_1.time_ and arg_315_1.time_ < var_318_16 + var_318_26 then
				arg_315_1.typewritter.percent = (arg_315_1.time_ - var_318_16) / var_318_26

				arg_315_1.typewritter:SetDirty()
			end

			if arg_315_1.time_ >= var_318_16 + var_318_26 and arg_315_1.time_ < var_318_16 + var_318_26 + arg_318_0 then
				arg_315_1.typewritter.percent = 1

				arg_315_1.typewritter:SetDirty()
				arg_315_1:ShowNextGo(true)
			end
		end
	end,
	Play417161078 = function(arg_319_0, arg_319_1)
		arg_319_1.time_ = 0
		arg_319_1.frameCnt_ = 0
		arg_319_1.state_ = "playing"
		arg_319_1.curTalkId_ = 417161078
		arg_319_1.duration_ = 11.37

		local var_319_0 = {
			zh = 6.733,
			ja = 11.366
		}
		local var_319_1 = manager.audio:GetLocalizationFlag()

		if var_319_0[var_319_1] ~= nil then
			arg_319_1.duration_ = var_319_0[var_319_1]
		end

		SetActive(arg_319_1.tipsGo_, false)

		function arg_319_1.onSingleLineFinish_()
			arg_319_1.onSingleLineUpdate_ = nil
			arg_319_1.onSingleLineFinish_ = nil
			arg_319_1.state_ = "waiting"
		end

		function arg_319_1.playNext_(arg_321_0)
			if arg_321_0 == 1 then
				arg_319_0:Play417161079(arg_319_1)
			end
		end

		function arg_319_1.onSingleLineUpdate_(arg_322_0)
			local var_322_0 = arg_319_1.actors_["1060"]
			local var_322_1 = 0

			if var_322_1 < arg_319_1.time_ and arg_319_1.time_ <= var_322_1 + arg_322_0 and not isNil(var_322_0) and arg_319_1.var_.actorSpriteComps1060 == nil then
				arg_319_1.var_.actorSpriteComps1060 = var_322_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_322_2 = 0.2

			if var_322_1 <= arg_319_1.time_ and arg_319_1.time_ < var_322_1 + var_322_2 and not isNil(var_322_0) then
				local var_322_3 = (arg_319_1.time_ - var_322_1) / var_322_2

				if arg_319_1.var_.actorSpriteComps1060 then
					for iter_322_0, iter_322_1 in pairs(arg_319_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_322_1 then
							if arg_319_1.isInRecall_ then
								local var_322_4 = Mathf.Lerp(iter_322_1.color.r, arg_319_1.hightColor1.r, var_322_3)
								local var_322_5 = Mathf.Lerp(iter_322_1.color.g, arg_319_1.hightColor1.g, var_322_3)
								local var_322_6 = Mathf.Lerp(iter_322_1.color.b, arg_319_1.hightColor1.b, var_322_3)

								iter_322_1.color = Color.New(var_322_4, var_322_5, var_322_6)
							else
								local var_322_7 = Mathf.Lerp(iter_322_1.color.r, 1, var_322_3)

								iter_322_1.color = Color.New(var_322_7, var_322_7, var_322_7)
							end
						end
					end
				end
			end

			if arg_319_1.time_ >= var_322_1 + var_322_2 and arg_319_1.time_ < var_322_1 + var_322_2 + arg_322_0 and not isNil(var_322_0) and arg_319_1.var_.actorSpriteComps1060 then
				for iter_322_2, iter_322_3 in pairs(arg_319_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_322_3 then
						if arg_319_1.isInRecall_ then
							iter_322_3.color = arg_319_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_322_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_319_1.var_.actorSpriteComps1060 = nil
			end

			local var_322_8 = arg_319_1.actors_["10128"]
			local var_322_9 = 0

			if var_322_9 < arg_319_1.time_ and arg_319_1.time_ <= var_322_9 + arg_322_0 and not isNil(var_322_8) and arg_319_1.var_.actorSpriteComps10128 == nil then
				arg_319_1.var_.actorSpriteComps10128 = var_322_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_322_10 = 0.2

			if var_322_9 <= arg_319_1.time_ and arg_319_1.time_ < var_322_9 + var_322_10 and not isNil(var_322_8) then
				local var_322_11 = (arg_319_1.time_ - var_322_9) / var_322_10

				if arg_319_1.var_.actorSpriteComps10128 then
					for iter_322_4, iter_322_5 in pairs(arg_319_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_322_5 then
							if arg_319_1.isInRecall_ then
								local var_322_12 = Mathf.Lerp(iter_322_5.color.r, arg_319_1.hightColor2.r, var_322_11)
								local var_322_13 = Mathf.Lerp(iter_322_5.color.g, arg_319_1.hightColor2.g, var_322_11)
								local var_322_14 = Mathf.Lerp(iter_322_5.color.b, arg_319_1.hightColor2.b, var_322_11)

								iter_322_5.color = Color.New(var_322_12, var_322_13, var_322_14)
							else
								local var_322_15 = Mathf.Lerp(iter_322_5.color.r, 0.5, var_322_11)

								iter_322_5.color = Color.New(var_322_15, var_322_15, var_322_15)
							end
						end
					end
				end
			end

			if arg_319_1.time_ >= var_322_9 + var_322_10 and arg_319_1.time_ < var_322_9 + var_322_10 + arg_322_0 and not isNil(var_322_8) and arg_319_1.var_.actorSpriteComps10128 then
				for iter_322_6, iter_322_7 in pairs(arg_319_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_322_7 then
						if arg_319_1.isInRecall_ then
							iter_322_7.color = arg_319_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_322_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_319_1.var_.actorSpriteComps10128 = nil
			end

			local var_322_16 = 0
			local var_322_17 = 0.875

			if var_322_16 < arg_319_1.time_ and arg_319_1.time_ <= var_322_16 + arg_322_0 then
				arg_319_1.talkMaxDuration = 0
				arg_319_1.dialogCg_.alpha = 1

				arg_319_1.dialog_:SetActive(true)
				SetActive(arg_319_1.leftNameGo_, true)

				local var_322_18 = arg_319_1:FormatText(StoryNameCfg[584].name)

				arg_319_1.leftNameTxt_.text = var_322_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_319_1.leftNameTxt_.transform)

				arg_319_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_319_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_319_1:RecordName(arg_319_1.leftNameTxt_.text)
				SetActive(arg_319_1.iconTrs_.gameObject, false)
				arg_319_1.callingController_:SetSelectedState("normal")

				local var_322_19 = arg_319_1:GetWordFromCfg(417161078)
				local var_322_20 = arg_319_1:FormatText(var_322_19.content)

				arg_319_1.text_.text = var_322_20

				LuaForUtil.ClearLinePrefixSymbol(arg_319_1.text_)

				local var_322_21 = 35
				local var_322_22 = utf8.len(var_322_20)
				local var_322_23 = var_322_21 <= 0 and var_322_17 or var_322_17 * (var_322_22 / var_322_21)

				if var_322_23 > 0 and var_322_17 < var_322_23 then
					arg_319_1.talkMaxDuration = var_322_23

					if var_322_23 + var_322_16 > arg_319_1.duration_ then
						arg_319_1.duration_ = var_322_23 + var_322_16
					end
				end

				arg_319_1.text_.text = var_322_20
				arg_319_1.typewritter.percent = 0

				arg_319_1.typewritter:SetDirty()
				arg_319_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161078", "story_v_out_417161.awb") ~= 0 then
					local var_322_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161078", "story_v_out_417161.awb") / 1000

					if var_322_24 + var_322_16 > arg_319_1.duration_ then
						arg_319_1.duration_ = var_322_24 + var_322_16
					end

					if var_322_19.prefab_name ~= "" and arg_319_1.actors_[var_322_19.prefab_name] ~= nil then
						local var_322_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_319_1.actors_[var_322_19.prefab_name].transform, "story_v_out_417161", "417161078", "story_v_out_417161.awb")

						arg_319_1:RecordAudio("417161078", var_322_25)
						arg_319_1:RecordAudio("417161078", var_322_25)
					else
						arg_319_1:AudioAction("play", "voice", "story_v_out_417161", "417161078", "story_v_out_417161.awb")
					end

					arg_319_1:RecordHistoryTalkVoice("story_v_out_417161", "417161078", "story_v_out_417161.awb")
				end

				arg_319_1:RecordContent(arg_319_1.text_.text)
			end

			local var_322_26 = math.max(var_322_17, arg_319_1.talkMaxDuration)

			if var_322_16 <= arg_319_1.time_ and arg_319_1.time_ < var_322_16 + var_322_26 then
				arg_319_1.typewritter.percent = (arg_319_1.time_ - var_322_16) / var_322_26

				arg_319_1.typewritter:SetDirty()
			end

			if arg_319_1.time_ >= var_322_16 + var_322_26 and arg_319_1.time_ < var_322_16 + var_322_26 + arg_322_0 then
				arg_319_1.typewritter.percent = 1

				arg_319_1.typewritter:SetDirty()
				arg_319_1:ShowNextGo(true)
			end
		end
	end,
	Play417161079 = function(arg_323_0, arg_323_1)
		arg_323_1.time_ = 0
		arg_323_1.frameCnt_ = 0
		arg_323_1.state_ = "playing"
		arg_323_1.curTalkId_ = 417161079
		arg_323_1.duration_ = 2.87

		local var_323_0 = {
			zh = 1.433,
			ja = 2.866
		}
		local var_323_1 = manager.audio:GetLocalizationFlag()

		if var_323_0[var_323_1] ~= nil then
			arg_323_1.duration_ = var_323_0[var_323_1]
		end

		SetActive(arg_323_1.tipsGo_, false)

		function arg_323_1.onSingleLineFinish_()
			arg_323_1.onSingleLineUpdate_ = nil
			arg_323_1.onSingleLineFinish_ = nil
			arg_323_1.state_ = "waiting"
		end

		function arg_323_1.playNext_(arg_325_0)
			if arg_325_0 == 1 then
				arg_323_0:Play417161080(arg_323_1)
			end
		end

		function arg_323_1.onSingleLineUpdate_(arg_326_0)
			local var_326_0 = arg_323_1.actors_["10128"]
			local var_326_1 = 0

			if var_326_1 < arg_323_1.time_ and arg_323_1.time_ <= var_326_1 + arg_326_0 and not isNil(var_326_0) and arg_323_1.var_.actorSpriteComps10128 == nil then
				arg_323_1.var_.actorSpriteComps10128 = var_326_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_326_2 = 0.2

			if var_326_1 <= arg_323_1.time_ and arg_323_1.time_ < var_326_1 + var_326_2 and not isNil(var_326_0) then
				local var_326_3 = (arg_323_1.time_ - var_326_1) / var_326_2

				if arg_323_1.var_.actorSpriteComps10128 then
					for iter_326_0, iter_326_1 in pairs(arg_323_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_326_1 then
							if arg_323_1.isInRecall_ then
								local var_326_4 = Mathf.Lerp(iter_326_1.color.r, arg_323_1.hightColor1.r, var_326_3)
								local var_326_5 = Mathf.Lerp(iter_326_1.color.g, arg_323_1.hightColor1.g, var_326_3)
								local var_326_6 = Mathf.Lerp(iter_326_1.color.b, arg_323_1.hightColor1.b, var_326_3)

								iter_326_1.color = Color.New(var_326_4, var_326_5, var_326_6)
							else
								local var_326_7 = Mathf.Lerp(iter_326_1.color.r, 1, var_326_3)

								iter_326_1.color = Color.New(var_326_7, var_326_7, var_326_7)
							end
						end
					end
				end
			end

			if arg_323_1.time_ >= var_326_1 + var_326_2 and arg_323_1.time_ < var_326_1 + var_326_2 + arg_326_0 and not isNil(var_326_0) and arg_323_1.var_.actorSpriteComps10128 then
				for iter_326_2, iter_326_3 in pairs(arg_323_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_326_3 then
						if arg_323_1.isInRecall_ then
							iter_326_3.color = arg_323_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_326_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_323_1.var_.actorSpriteComps10128 = nil
			end

			local var_326_8 = arg_323_1.actors_["1060"]
			local var_326_9 = 0

			if var_326_9 < arg_323_1.time_ and arg_323_1.time_ <= var_326_9 + arg_326_0 and not isNil(var_326_8) and arg_323_1.var_.actorSpriteComps1060 == nil then
				arg_323_1.var_.actorSpriteComps1060 = var_326_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_326_10 = 0.2

			if var_326_9 <= arg_323_1.time_ and arg_323_1.time_ < var_326_9 + var_326_10 and not isNil(var_326_8) then
				local var_326_11 = (arg_323_1.time_ - var_326_9) / var_326_10

				if arg_323_1.var_.actorSpriteComps1060 then
					for iter_326_4, iter_326_5 in pairs(arg_323_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_326_5 then
							if arg_323_1.isInRecall_ then
								local var_326_12 = Mathf.Lerp(iter_326_5.color.r, arg_323_1.hightColor2.r, var_326_11)
								local var_326_13 = Mathf.Lerp(iter_326_5.color.g, arg_323_1.hightColor2.g, var_326_11)
								local var_326_14 = Mathf.Lerp(iter_326_5.color.b, arg_323_1.hightColor2.b, var_326_11)

								iter_326_5.color = Color.New(var_326_12, var_326_13, var_326_14)
							else
								local var_326_15 = Mathf.Lerp(iter_326_5.color.r, 0.5, var_326_11)

								iter_326_5.color = Color.New(var_326_15, var_326_15, var_326_15)
							end
						end
					end
				end
			end

			if arg_323_1.time_ >= var_326_9 + var_326_10 and arg_323_1.time_ < var_326_9 + var_326_10 + arg_326_0 and not isNil(var_326_8) and arg_323_1.var_.actorSpriteComps1060 then
				for iter_326_6, iter_326_7 in pairs(arg_323_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_326_7 then
						if arg_323_1.isInRecall_ then
							iter_326_7.color = arg_323_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_326_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_323_1.var_.actorSpriteComps1060 = nil
			end

			local var_326_16 = 0
			local var_326_17 = 0.125

			if var_326_16 < arg_323_1.time_ and arg_323_1.time_ <= var_326_16 + arg_326_0 then
				arg_323_1.talkMaxDuration = 0
				arg_323_1.dialogCg_.alpha = 1

				arg_323_1.dialog_:SetActive(true)
				SetActive(arg_323_1.leftNameGo_, true)

				local var_326_18 = arg_323_1:FormatText(StoryNameCfg[595].name)

				arg_323_1.leftNameTxt_.text = var_326_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_323_1.leftNameTxt_.transform)

				arg_323_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_323_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_323_1:RecordName(arg_323_1.leftNameTxt_.text)
				SetActive(arg_323_1.iconTrs_.gameObject, false)
				arg_323_1.callingController_:SetSelectedState("normal")

				local var_326_19 = arg_323_1:GetWordFromCfg(417161079)
				local var_326_20 = arg_323_1:FormatText(var_326_19.content)

				arg_323_1.text_.text = var_326_20

				LuaForUtil.ClearLinePrefixSymbol(arg_323_1.text_)

				local var_326_21 = 5
				local var_326_22 = utf8.len(var_326_20)
				local var_326_23 = var_326_21 <= 0 and var_326_17 or var_326_17 * (var_326_22 / var_326_21)

				if var_326_23 > 0 and var_326_17 < var_326_23 then
					arg_323_1.talkMaxDuration = var_326_23

					if var_326_23 + var_326_16 > arg_323_1.duration_ then
						arg_323_1.duration_ = var_326_23 + var_326_16
					end
				end

				arg_323_1.text_.text = var_326_20
				arg_323_1.typewritter.percent = 0

				arg_323_1.typewritter:SetDirty()
				arg_323_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161079", "story_v_out_417161.awb") ~= 0 then
					local var_326_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161079", "story_v_out_417161.awb") / 1000

					if var_326_24 + var_326_16 > arg_323_1.duration_ then
						arg_323_1.duration_ = var_326_24 + var_326_16
					end

					if var_326_19.prefab_name ~= "" and arg_323_1.actors_[var_326_19.prefab_name] ~= nil then
						local var_326_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_323_1.actors_[var_326_19.prefab_name].transform, "story_v_out_417161", "417161079", "story_v_out_417161.awb")

						arg_323_1:RecordAudio("417161079", var_326_25)
						arg_323_1:RecordAudio("417161079", var_326_25)
					else
						arg_323_1:AudioAction("play", "voice", "story_v_out_417161", "417161079", "story_v_out_417161.awb")
					end

					arg_323_1:RecordHistoryTalkVoice("story_v_out_417161", "417161079", "story_v_out_417161.awb")
				end

				arg_323_1:RecordContent(arg_323_1.text_.text)
			end

			local var_326_26 = math.max(var_326_17, arg_323_1.talkMaxDuration)

			if var_326_16 <= arg_323_1.time_ and arg_323_1.time_ < var_326_16 + var_326_26 then
				arg_323_1.typewritter.percent = (arg_323_1.time_ - var_326_16) / var_326_26

				arg_323_1.typewritter:SetDirty()
			end

			if arg_323_1.time_ >= var_326_16 + var_326_26 and arg_323_1.time_ < var_326_16 + var_326_26 + arg_326_0 then
				arg_323_1.typewritter.percent = 1

				arg_323_1.typewritter:SetDirty()
				arg_323_1:ShowNextGo(true)
			end
		end
	end,
	Play417161080 = function(arg_327_0, arg_327_1)
		arg_327_1.time_ = 0
		arg_327_1.frameCnt_ = 0
		arg_327_1.state_ = "playing"
		arg_327_1.curTalkId_ = 417161080
		arg_327_1.duration_ = 8.7

		local var_327_0 = {
			zh = 6.366,
			ja = 8.7
		}
		local var_327_1 = manager.audio:GetLocalizationFlag()

		if var_327_0[var_327_1] ~= nil then
			arg_327_1.duration_ = var_327_0[var_327_1]
		end

		SetActive(arg_327_1.tipsGo_, false)

		function arg_327_1.onSingleLineFinish_()
			arg_327_1.onSingleLineUpdate_ = nil
			arg_327_1.onSingleLineFinish_ = nil
			arg_327_1.state_ = "waiting"
		end

		function arg_327_1.playNext_(arg_329_0)
			if arg_329_0 == 1 then
				arg_327_0:Play417161081(arg_327_1)
			end
		end

		function arg_327_1.onSingleLineUpdate_(arg_330_0)
			local var_330_0 = arg_327_1.actors_["1060"]
			local var_330_1 = 0

			if var_330_1 < arg_327_1.time_ and arg_327_1.time_ <= var_330_1 + arg_330_0 and not isNil(var_330_0) and arg_327_1.var_.actorSpriteComps1060 == nil then
				arg_327_1.var_.actorSpriteComps1060 = var_330_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_330_2 = 0.2

			if var_330_1 <= arg_327_1.time_ and arg_327_1.time_ < var_330_1 + var_330_2 and not isNil(var_330_0) then
				local var_330_3 = (arg_327_1.time_ - var_330_1) / var_330_2

				if arg_327_1.var_.actorSpriteComps1060 then
					for iter_330_0, iter_330_1 in pairs(arg_327_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_330_1 then
							if arg_327_1.isInRecall_ then
								local var_330_4 = Mathf.Lerp(iter_330_1.color.r, arg_327_1.hightColor1.r, var_330_3)
								local var_330_5 = Mathf.Lerp(iter_330_1.color.g, arg_327_1.hightColor1.g, var_330_3)
								local var_330_6 = Mathf.Lerp(iter_330_1.color.b, arg_327_1.hightColor1.b, var_330_3)

								iter_330_1.color = Color.New(var_330_4, var_330_5, var_330_6)
							else
								local var_330_7 = Mathf.Lerp(iter_330_1.color.r, 1, var_330_3)

								iter_330_1.color = Color.New(var_330_7, var_330_7, var_330_7)
							end
						end
					end
				end
			end

			if arg_327_1.time_ >= var_330_1 + var_330_2 and arg_327_1.time_ < var_330_1 + var_330_2 + arg_330_0 and not isNil(var_330_0) and arg_327_1.var_.actorSpriteComps1060 then
				for iter_330_2, iter_330_3 in pairs(arg_327_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_330_3 then
						if arg_327_1.isInRecall_ then
							iter_330_3.color = arg_327_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_330_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_327_1.var_.actorSpriteComps1060 = nil
			end

			local var_330_8 = arg_327_1.actors_["10128"]
			local var_330_9 = 0

			if var_330_9 < arg_327_1.time_ and arg_327_1.time_ <= var_330_9 + arg_330_0 and not isNil(var_330_8) and arg_327_1.var_.actorSpriteComps10128 == nil then
				arg_327_1.var_.actorSpriteComps10128 = var_330_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_330_10 = 0.2

			if var_330_9 <= arg_327_1.time_ and arg_327_1.time_ < var_330_9 + var_330_10 and not isNil(var_330_8) then
				local var_330_11 = (arg_327_1.time_ - var_330_9) / var_330_10

				if arg_327_1.var_.actorSpriteComps10128 then
					for iter_330_4, iter_330_5 in pairs(arg_327_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_330_5 then
							if arg_327_1.isInRecall_ then
								local var_330_12 = Mathf.Lerp(iter_330_5.color.r, arg_327_1.hightColor2.r, var_330_11)
								local var_330_13 = Mathf.Lerp(iter_330_5.color.g, arg_327_1.hightColor2.g, var_330_11)
								local var_330_14 = Mathf.Lerp(iter_330_5.color.b, arg_327_1.hightColor2.b, var_330_11)

								iter_330_5.color = Color.New(var_330_12, var_330_13, var_330_14)
							else
								local var_330_15 = Mathf.Lerp(iter_330_5.color.r, 0.5, var_330_11)

								iter_330_5.color = Color.New(var_330_15, var_330_15, var_330_15)
							end
						end
					end
				end
			end

			if arg_327_1.time_ >= var_330_9 + var_330_10 and arg_327_1.time_ < var_330_9 + var_330_10 + arg_330_0 and not isNil(var_330_8) and arg_327_1.var_.actorSpriteComps10128 then
				for iter_330_6, iter_330_7 in pairs(arg_327_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_330_7 then
						if arg_327_1.isInRecall_ then
							iter_330_7.color = arg_327_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_330_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_327_1.var_.actorSpriteComps10128 = nil
			end

			local var_330_16 = 0
			local var_330_17 = 0.925

			if var_330_16 < arg_327_1.time_ and arg_327_1.time_ <= var_330_16 + arg_330_0 then
				arg_327_1.talkMaxDuration = 0
				arg_327_1.dialogCg_.alpha = 1

				arg_327_1.dialog_:SetActive(true)
				SetActive(arg_327_1.leftNameGo_, true)

				local var_330_18 = arg_327_1:FormatText(StoryNameCfg[584].name)

				arg_327_1.leftNameTxt_.text = var_330_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_327_1.leftNameTxt_.transform)

				arg_327_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_327_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_327_1:RecordName(arg_327_1.leftNameTxt_.text)
				SetActive(arg_327_1.iconTrs_.gameObject, false)
				arg_327_1.callingController_:SetSelectedState("normal")

				local var_330_19 = arg_327_1:GetWordFromCfg(417161080)
				local var_330_20 = arg_327_1:FormatText(var_330_19.content)

				arg_327_1.text_.text = var_330_20

				LuaForUtil.ClearLinePrefixSymbol(arg_327_1.text_)

				local var_330_21 = 37
				local var_330_22 = utf8.len(var_330_20)
				local var_330_23 = var_330_21 <= 0 and var_330_17 or var_330_17 * (var_330_22 / var_330_21)

				if var_330_23 > 0 and var_330_17 < var_330_23 then
					arg_327_1.talkMaxDuration = var_330_23

					if var_330_23 + var_330_16 > arg_327_1.duration_ then
						arg_327_1.duration_ = var_330_23 + var_330_16
					end
				end

				arg_327_1.text_.text = var_330_20
				arg_327_1.typewritter.percent = 0

				arg_327_1.typewritter:SetDirty()
				arg_327_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161080", "story_v_out_417161.awb") ~= 0 then
					local var_330_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161080", "story_v_out_417161.awb") / 1000

					if var_330_24 + var_330_16 > arg_327_1.duration_ then
						arg_327_1.duration_ = var_330_24 + var_330_16
					end

					if var_330_19.prefab_name ~= "" and arg_327_1.actors_[var_330_19.prefab_name] ~= nil then
						local var_330_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_327_1.actors_[var_330_19.prefab_name].transform, "story_v_out_417161", "417161080", "story_v_out_417161.awb")

						arg_327_1:RecordAudio("417161080", var_330_25)
						arg_327_1:RecordAudio("417161080", var_330_25)
					else
						arg_327_1:AudioAction("play", "voice", "story_v_out_417161", "417161080", "story_v_out_417161.awb")
					end

					arg_327_1:RecordHistoryTalkVoice("story_v_out_417161", "417161080", "story_v_out_417161.awb")
				end

				arg_327_1:RecordContent(arg_327_1.text_.text)
			end

			local var_330_26 = math.max(var_330_17, arg_327_1.talkMaxDuration)

			if var_330_16 <= arg_327_1.time_ and arg_327_1.time_ < var_330_16 + var_330_26 then
				arg_327_1.typewritter.percent = (arg_327_1.time_ - var_330_16) / var_330_26

				arg_327_1.typewritter:SetDirty()
			end

			if arg_327_1.time_ >= var_330_16 + var_330_26 and arg_327_1.time_ < var_330_16 + var_330_26 + arg_330_0 then
				arg_327_1.typewritter.percent = 1

				arg_327_1.typewritter:SetDirty()
				arg_327_1:ShowNextGo(true)
			end
		end
	end,
	Play417161081 = function(arg_331_0, arg_331_1)
		arg_331_1.time_ = 0
		arg_331_1.frameCnt_ = 0
		arg_331_1.state_ = "playing"
		arg_331_1.curTalkId_ = 417161081
		arg_331_1.duration_ = 3.63

		local var_331_0 = {
			zh = 2.366,
			ja = 3.633
		}
		local var_331_1 = manager.audio:GetLocalizationFlag()

		if var_331_0[var_331_1] ~= nil then
			arg_331_1.duration_ = var_331_0[var_331_1]
		end

		SetActive(arg_331_1.tipsGo_, false)

		function arg_331_1.onSingleLineFinish_()
			arg_331_1.onSingleLineUpdate_ = nil
			arg_331_1.onSingleLineFinish_ = nil
			arg_331_1.state_ = "waiting"
		end

		function arg_331_1.playNext_(arg_333_0)
			if arg_333_0 == 1 then
				arg_331_0:Play417161082(arg_331_1)
			end
		end

		function arg_331_1.onSingleLineUpdate_(arg_334_0)
			local var_334_0 = arg_331_1.actors_["10128"]
			local var_334_1 = 0

			if var_334_1 < arg_331_1.time_ and arg_331_1.time_ <= var_334_1 + arg_334_0 and not isNil(var_334_0) and arg_331_1.var_.actorSpriteComps10128 == nil then
				arg_331_1.var_.actorSpriteComps10128 = var_334_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_334_2 = 0.2

			if var_334_1 <= arg_331_1.time_ and arg_331_1.time_ < var_334_1 + var_334_2 and not isNil(var_334_0) then
				local var_334_3 = (arg_331_1.time_ - var_334_1) / var_334_2

				if arg_331_1.var_.actorSpriteComps10128 then
					for iter_334_0, iter_334_1 in pairs(arg_331_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_334_1 then
							if arg_331_1.isInRecall_ then
								local var_334_4 = Mathf.Lerp(iter_334_1.color.r, arg_331_1.hightColor1.r, var_334_3)
								local var_334_5 = Mathf.Lerp(iter_334_1.color.g, arg_331_1.hightColor1.g, var_334_3)
								local var_334_6 = Mathf.Lerp(iter_334_1.color.b, arg_331_1.hightColor1.b, var_334_3)

								iter_334_1.color = Color.New(var_334_4, var_334_5, var_334_6)
							else
								local var_334_7 = Mathf.Lerp(iter_334_1.color.r, 1, var_334_3)

								iter_334_1.color = Color.New(var_334_7, var_334_7, var_334_7)
							end
						end
					end
				end
			end

			if arg_331_1.time_ >= var_334_1 + var_334_2 and arg_331_1.time_ < var_334_1 + var_334_2 + arg_334_0 and not isNil(var_334_0) and arg_331_1.var_.actorSpriteComps10128 then
				for iter_334_2, iter_334_3 in pairs(arg_331_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_334_3 then
						if arg_331_1.isInRecall_ then
							iter_334_3.color = arg_331_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_334_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_331_1.var_.actorSpriteComps10128 = nil
			end

			local var_334_8 = arg_331_1.actors_["1060"]
			local var_334_9 = 0

			if var_334_9 < arg_331_1.time_ and arg_331_1.time_ <= var_334_9 + arg_334_0 and not isNil(var_334_8) and arg_331_1.var_.actorSpriteComps1060 == nil then
				arg_331_1.var_.actorSpriteComps1060 = var_334_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_334_10 = 0.2

			if var_334_9 <= arg_331_1.time_ and arg_331_1.time_ < var_334_9 + var_334_10 and not isNil(var_334_8) then
				local var_334_11 = (arg_331_1.time_ - var_334_9) / var_334_10

				if arg_331_1.var_.actorSpriteComps1060 then
					for iter_334_4, iter_334_5 in pairs(arg_331_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_334_5 then
							if arg_331_1.isInRecall_ then
								local var_334_12 = Mathf.Lerp(iter_334_5.color.r, arg_331_1.hightColor2.r, var_334_11)
								local var_334_13 = Mathf.Lerp(iter_334_5.color.g, arg_331_1.hightColor2.g, var_334_11)
								local var_334_14 = Mathf.Lerp(iter_334_5.color.b, arg_331_1.hightColor2.b, var_334_11)

								iter_334_5.color = Color.New(var_334_12, var_334_13, var_334_14)
							else
								local var_334_15 = Mathf.Lerp(iter_334_5.color.r, 0.5, var_334_11)

								iter_334_5.color = Color.New(var_334_15, var_334_15, var_334_15)
							end
						end
					end
				end
			end

			if arg_331_1.time_ >= var_334_9 + var_334_10 and arg_331_1.time_ < var_334_9 + var_334_10 + arg_334_0 and not isNil(var_334_8) and arg_331_1.var_.actorSpriteComps1060 then
				for iter_334_6, iter_334_7 in pairs(arg_331_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_334_7 then
						if arg_331_1.isInRecall_ then
							iter_334_7.color = arg_331_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_334_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_331_1.var_.actorSpriteComps1060 = nil
			end

			local var_334_16 = 0
			local var_334_17 = 0.225

			if var_334_16 < arg_331_1.time_ and arg_331_1.time_ <= var_334_16 + arg_334_0 then
				arg_331_1.talkMaxDuration = 0
				arg_331_1.dialogCg_.alpha = 1

				arg_331_1.dialog_:SetActive(true)
				SetActive(arg_331_1.leftNameGo_, true)

				local var_334_18 = arg_331_1:FormatText(StoryNameCfg[595].name)

				arg_331_1.leftNameTxt_.text = var_334_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_331_1.leftNameTxt_.transform)

				arg_331_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_331_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_331_1:RecordName(arg_331_1.leftNameTxt_.text)
				SetActive(arg_331_1.iconTrs_.gameObject, false)
				arg_331_1.callingController_:SetSelectedState("normal")

				local var_334_19 = arg_331_1:GetWordFromCfg(417161081)
				local var_334_20 = arg_331_1:FormatText(var_334_19.content)

				arg_331_1.text_.text = var_334_20

				LuaForUtil.ClearLinePrefixSymbol(arg_331_1.text_)

				local var_334_21 = 9
				local var_334_22 = utf8.len(var_334_20)
				local var_334_23 = var_334_21 <= 0 and var_334_17 or var_334_17 * (var_334_22 / var_334_21)

				if var_334_23 > 0 and var_334_17 < var_334_23 then
					arg_331_1.talkMaxDuration = var_334_23

					if var_334_23 + var_334_16 > arg_331_1.duration_ then
						arg_331_1.duration_ = var_334_23 + var_334_16
					end
				end

				arg_331_1.text_.text = var_334_20
				arg_331_1.typewritter.percent = 0

				arg_331_1.typewritter:SetDirty()
				arg_331_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161081", "story_v_out_417161.awb") ~= 0 then
					local var_334_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161081", "story_v_out_417161.awb") / 1000

					if var_334_24 + var_334_16 > arg_331_1.duration_ then
						arg_331_1.duration_ = var_334_24 + var_334_16
					end

					if var_334_19.prefab_name ~= "" and arg_331_1.actors_[var_334_19.prefab_name] ~= nil then
						local var_334_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_331_1.actors_[var_334_19.prefab_name].transform, "story_v_out_417161", "417161081", "story_v_out_417161.awb")

						arg_331_1:RecordAudio("417161081", var_334_25)
						arg_331_1:RecordAudio("417161081", var_334_25)
					else
						arg_331_1:AudioAction("play", "voice", "story_v_out_417161", "417161081", "story_v_out_417161.awb")
					end

					arg_331_1:RecordHistoryTalkVoice("story_v_out_417161", "417161081", "story_v_out_417161.awb")
				end

				arg_331_1:RecordContent(arg_331_1.text_.text)
			end

			local var_334_26 = math.max(var_334_17, arg_331_1.talkMaxDuration)

			if var_334_16 <= arg_331_1.time_ and arg_331_1.time_ < var_334_16 + var_334_26 then
				arg_331_1.typewritter.percent = (arg_331_1.time_ - var_334_16) / var_334_26

				arg_331_1.typewritter:SetDirty()
			end

			if arg_331_1.time_ >= var_334_16 + var_334_26 and arg_331_1.time_ < var_334_16 + var_334_26 + arg_334_0 then
				arg_331_1.typewritter.percent = 1

				arg_331_1.typewritter:SetDirty()
				arg_331_1:ShowNextGo(true)
			end
		end
	end,
	Play417161082 = function(arg_335_0, arg_335_1)
		arg_335_1.time_ = 0
		arg_335_1.frameCnt_ = 0
		arg_335_1.state_ = "playing"
		arg_335_1.curTalkId_ = 417161082
		arg_335_1.duration_ = 11.93

		local var_335_0 = {
			zh = 11.933,
			ja = 11.433
		}
		local var_335_1 = manager.audio:GetLocalizationFlag()

		if var_335_0[var_335_1] ~= nil then
			arg_335_1.duration_ = var_335_0[var_335_1]
		end

		SetActive(arg_335_1.tipsGo_, false)

		function arg_335_1.onSingleLineFinish_()
			arg_335_1.onSingleLineUpdate_ = nil
			arg_335_1.onSingleLineFinish_ = nil
			arg_335_1.state_ = "waiting"
		end

		function arg_335_1.playNext_(arg_337_0)
			if arg_337_0 == 1 then
				arg_335_0:Play417161083(arg_335_1)
			end
		end

		function arg_335_1.onSingleLineUpdate_(arg_338_0)
			local var_338_0 = arg_335_1.actors_["1060"]
			local var_338_1 = 0

			if var_338_1 < arg_335_1.time_ and arg_335_1.time_ <= var_338_1 + arg_338_0 and not isNil(var_338_0) and arg_335_1.var_.actorSpriteComps1060 == nil then
				arg_335_1.var_.actorSpriteComps1060 = var_338_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_338_2 = 0.2

			if var_338_1 <= arg_335_1.time_ and arg_335_1.time_ < var_338_1 + var_338_2 and not isNil(var_338_0) then
				local var_338_3 = (arg_335_1.time_ - var_338_1) / var_338_2

				if arg_335_1.var_.actorSpriteComps1060 then
					for iter_338_0, iter_338_1 in pairs(arg_335_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_338_1 then
							if arg_335_1.isInRecall_ then
								local var_338_4 = Mathf.Lerp(iter_338_1.color.r, arg_335_1.hightColor1.r, var_338_3)
								local var_338_5 = Mathf.Lerp(iter_338_1.color.g, arg_335_1.hightColor1.g, var_338_3)
								local var_338_6 = Mathf.Lerp(iter_338_1.color.b, arg_335_1.hightColor1.b, var_338_3)

								iter_338_1.color = Color.New(var_338_4, var_338_5, var_338_6)
							else
								local var_338_7 = Mathf.Lerp(iter_338_1.color.r, 1, var_338_3)

								iter_338_1.color = Color.New(var_338_7, var_338_7, var_338_7)
							end
						end
					end
				end
			end

			if arg_335_1.time_ >= var_338_1 + var_338_2 and arg_335_1.time_ < var_338_1 + var_338_2 + arg_338_0 and not isNil(var_338_0) and arg_335_1.var_.actorSpriteComps1060 then
				for iter_338_2, iter_338_3 in pairs(arg_335_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_338_3 then
						if arg_335_1.isInRecall_ then
							iter_338_3.color = arg_335_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_338_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_335_1.var_.actorSpriteComps1060 = nil
			end

			local var_338_8 = arg_335_1.actors_["10128"]
			local var_338_9 = 0

			if var_338_9 < arg_335_1.time_ and arg_335_1.time_ <= var_338_9 + arg_338_0 and not isNil(var_338_8) and arg_335_1.var_.actorSpriteComps10128 == nil then
				arg_335_1.var_.actorSpriteComps10128 = var_338_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_338_10 = 0.2

			if var_338_9 <= arg_335_1.time_ and arg_335_1.time_ < var_338_9 + var_338_10 and not isNil(var_338_8) then
				local var_338_11 = (arg_335_1.time_ - var_338_9) / var_338_10

				if arg_335_1.var_.actorSpriteComps10128 then
					for iter_338_4, iter_338_5 in pairs(arg_335_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_338_5 then
							if arg_335_1.isInRecall_ then
								local var_338_12 = Mathf.Lerp(iter_338_5.color.r, arg_335_1.hightColor2.r, var_338_11)
								local var_338_13 = Mathf.Lerp(iter_338_5.color.g, arg_335_1.hightColor2.g, var_338_11)
								local var_338_14 = Mathf.Lerp(iter_338_5.color.b, arg_335_1.hightColor2.b, var_338_11)

								iter_338_5.color = Color.New(var_338_12, var_338_13, var_338_14)
							else
								local var_338_15 = Mathf.Lerp(iter_338_5.color.r, 0.5, var_338_11)

								iter_338_5.color = Color.New(var_338_15, var_338_15, var_338_15)
							end
						end
					end
				end
			end

			if arg_335_1.time_ >= var_338_9 + var_338_10 and arg_335_1.time_ < var_338_9 + var_338_10 + arg_338_0 and not isNil(var_338_8) and arg_335_1.var_.actorSpriteComps10128 then
				for iter_338_6, iter_338_7 in pairs(arg_335_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_338_7 then
						if arg_335_1.isInRecall_ then
							iter_338_7.color = arg_335_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_338_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_335_1.var_.actorSpriteComps10128 = nil
			end

			local var_338_16 = 0
			local var_338_17 = 1.675

			if var_338_16 < arg_335_1.time_ and arg_335_1.time_ <= var_338_16 + arg_338_0 then
				arg_335_1.talkMaxDuration = 0
				arg_335_1.dialogCg_.alpha = 1

				arg_335_1.dialog_:SetActive(true)
				SetActive(arg_335_1.leftNameGo_, true)

				local var_338_18 = arg_335_1:FormatText(StoryNameCfg[584].name)

				arg_335_1.leftNameTxt_.text = var_338_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_335_1.leftNameTxt_.transform)

				arg_335_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_335_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_335_1:RecordName(arg_335_1.leftNameTxt_.text)
				SetActive(arg_335_1.iconTrs_.gameObject, false)
				arg_335_1.callingController_:SetSelectedState("normal")

				local var_338_19 = arg_335_1:GetWordFromCfg(417161082)
				local var_338_20 = arg_335_1:FormatText(var_338_19.content)

				arg_335_1.text_.text = var_338_20

				LuaForUtil.ClearLinePrefixSymbol(arg_335_1.text_)

				local var_338_21 = 67
				local var_338_22 = utf8.len(var_338_20)
				local var_338_23 = var_338_21 <= 0 and var_338_17 or var_338_17 * (var_338_22 / var_338_21)

				if var_338_23 > 0 and var_338_17 < var_338_23 then
					arg_335_1.talkMaxDuration = var_338_23

					if var_338_23 + var_338_16 > arg_335_1.duration_ then
						arg_335_1.duration_ = var_338_23 + var_338_16
					end
				end

				arg_335_1.text_.text = var_338_20
				arg_335_1.typewritter.percent = 0

				arg_335_1.typewritter:SetDirty()
				arg_335_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161082", "story_v_out_417161.awb") ~= 0 then
					local var_338_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161082", "story_v_out_417161.awb") / 1000

					if var_338_24 + var_338_16 > arg_335_1.duration_ then
						arg_335_1.duration_ = var_338_24 + var_338_16
					end

					if var_338_19.prefab_name ~= "" and arg_335_1.actors_[var_338_19.prefab_name] ~= nil then
						local var_338_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_335_1.actors_[var_338_19.prefab_name].transform, "story_v_out_417161", "417161082", "story_v_out_417161.awb")

						arg_335_1:RecordAudio("417161082", var_338_25)
						arg_335_1:RecordAudio("417161082", var_338_25)
					else
						arg_335_1:AudioAction("play", "voice", "story_v_out_417161", "417161082", "story_v_out_417161.awb")
					end

					arg_335_1:RecordHistoryTalkVoice("story_v_out_417161", "417161082", "story_v_out_417161.awb")
				end

				arg_335_1:RecordContent(arg_335_1.text_.text)
			end

			local var_338_26 = math.max(var_338_17, arg_335_1.talkMaxDuration)

			if var_338_16 <= arg_335_1.time_ and arg_335_1.time_ < var_338_16 + var_338_26 then
				arg_335_1.typewritter.percent = (arg_335_1.time_ - var_338_16) / var_338_26

				arg_335_1.typewritter:SetDirty()
			end

			if arg_335_1.time_ >= var_338_16 + var_338_26 and arg_335_1.time_ < var_338_16 + var_338_26 + arg_338_0 then
				arg_335_1.typewritter.percent = 1

				arg_335_1.typewritter:SetDirty()
				arg_335_1:ShowNextGo(true)
			end
		end
	end,
	Play417161083 = function(arg_339_0, arg_339_1)
		arg_339_1.time_ = 0
		arg_339_1.frameCnt_ = 0
		arg_339_1.state_ = "playing"
		arg_339_1.curTalkId_ = 417161083
		arg_339_1.duration_ = 7.2

		local var_339_0 = {
			zh = 6.133,
			ja = 7.2
		}
		local var_339_1 = manager.audio:GetLocalizationFlag()

		if var_339_0[var_339_1] ~= nil then
			arg_339_1.duration_ = var_339_0[var_339_1]
		end

		SetActive(arg_339_1.tipsGo_, false)

		function arg_339_1.onSingleLineFinish_()
			arg_339_1.onSingleLineUpdate_ = nil
			arg_339_1.onSingleLineFinish_ = nil
			arg_339_1.state_ = "waiting"
		end

		function arg_339_1.playNext_(arg_341_0)
			if arg_341_0 == 1 then
				arg_339_0:Play417161084(arg_339_1)
			end
		end

		function arg_339_1.onSingleLineUpdate_(arg_342_0)
			local var_342_0 = 0
			local var_342_1 = 0.725

			if var_342_0 < arg_339_1.time_ and arg_339_1.time_ <= var_342_0 + arg_342_0 then
				arg_339_1.talkMaxDuration = 0
				arg_339_1.dialogCg_.alpha = 1

				arg_339_1.dialog_:SetActive(true)
				SetActive(arg_339_1.leftNameGo_, true)

				local var_342_2 = arg_339_1:FormatText(StoryNameCfg[584].name)

				arg_339_1.leftNameTxt_.text = var_342_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_339_1.leftNameTxt_.transform)

				arg_339_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_339_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_339_1:RecordName(arg_339_1.leftNameTxt_.text)
				SetActive(arg_339_1.iconTrs_.gameObject, false)
				arg_339_1.callingController_:SetSelectedState("normal")

				local var_342_3 = arg_339_1:GetWordFromCfg(417161083)
				local var_342_4 = arg_339_1:FormatText(var_342_3.content)

				arg_339_1.text_.text = var_342_4

				LuaForUtil.ClearLinePrefixSymbol(arg_339_1.text_)

				local var_342_5 = 29
				local var_342_6 = utf8.len(var_342_4)
				local var_342_7 = var_342_5 <= 0 and var_342_1 or var_342_1 * (var_342_6 / var_342_5)

				if var_342_7 > 0 and var_342_1 < var_342_7 then
					arg_339_1.talkMaxDuration = var_342_7

					if var_342_7 + var_342_0 > arg_339_1.duration_ then
						arg_339_1.duration_ = var_342_7 + var_342_0
					end
				end

				arg_339_1.text_.text = var_342_4
				arg_339_1.typewritter.percent = 0

				arg_339_1.typewritter:SetDirty()
				arg_339_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161083", "story_v_out_417161.awb") ~= 0 then
					local var_342_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161083", "story_v_out_417161.awb") / 1000

					if var_342_8 + var_342_0 > arg_339_1.duration_ then
						arg_339_1.duration_ = var_342_8 + var_342_0
					end

					if var_342_3.prefab_name ~= "" and arg_339_1.actors_[var_342_3.prefab_name] ~= nil then
						local var_342_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_339_1.actors_[var_342_3.prefab_name].transform, "story_v_out_417161", "417161083", "story_v_out_417161.awb")

						arg_339_1:RecordAudio("417161083", var_342_9)
						arg_339_1:RecordAudio("417161083", var_342_9)
					else
						arg_339_1:AudioAction("play", "voice", "story_v_out_417161", "417161083", "story_v_out_417161.awb")
					end

					arg_339_1:RecordHistoryTalkVoice("story_v_out_417161", "417161083", "story_v_out_417161.awb")
				end

				arg_339_1:RecordContent(arg_339_1.text_.text)
			end

			local var_342_10 = math.max(var_342_1, arg_339_1.talkMaxDuration)

			if var_342_0 <= arg_339_1.time_ and arg_339_1.time_ < var_342_0 + var_342_10 then
				arg_339_1.typewritter.percent = (arg_339_1.time_ - var_342_0) / var_342_10

				arg_339_1.typewritter:SetDirty()
			end

			if arg_339_1.time_ >= var_342_0 + var_342_10 and arg_339_1.time_ < var_342_0 + var_342_10 + arg_342_0 then
				arg_339_1.typewritter.percent = 1

				arg_339_1.typewritter:SetDirty()
				arg_339_1:ShowNextGo(true)
			end
		end
	end,
	Play417161084 = function(arg_343_0, arg_343_1)
		arg_343_1.time_ = 0
		arg_343_1.frameCnt_ = 0
		arg_343_1.state_ = "playing"
		arg_343_1.curTalkId_ = 417161084
		arg_343_1.duration_ = 1

		SetActive(arg_343_1.tipsGo_, false)

		function arg_343_1.onSingleLineFinish_()
			arg_343_1.onSingleLineUpdate_ = nil
			arg_343_1.onSingleLineFinish_ = nil
			arg_343_1.state_ = "waiting"
		end

		function arg_343_1.playNext_(arg_345_0)
			if arg_345_0 == 1 then
				arg_343_0:Play417161085(arg_343_1)
			end
		end

		function arg_343_1.onSingleLineUpdate_(arg_346_0)
			local var_346_0 = arg_343_1.actors_["10128"]
			local var_346_1 = 0

			if var_346_1 < arg_343_1.time_ and arg_343_1.time_ <= var_346_1 + arg_346_0 and not isNil(var_346_0) and arg_343_1.var_.actorSpriteComps10128 == nil then
				arg_343_1.var_.actorSpriteComps10128 = var_346_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_346_2 = 0.2

			if var_346_1 <= arg_343_1.time_ and arg_343_1.time_ < var_346_1 + var_346_2 and not isNil(var_346_0) then
				local var_346_3 = (arg_343_1.time_ - var_346_1) / var_346_2

				if arg_343_1.var_.actorSpriteComps10128 then
					for iter_346_0, iter_346_1 in pairs(arg_343_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_346_1 then
							if arg_343_1.isInRecall_ then
								local var_346_4 = Mathf.Lerp(iter_346_1.color.r, arg_343_1.hightColor1.r, var_346_3)
								local var_346_5 = Mathf.Lerp(iter_346_1.color.g, arg_343_1.hightColor1.g, var_346_3)
								local var_346_6 = Mathf.Lerp(iter_346_1.color.b, arg_343_1.hightColor1.b, var_346_3)

								iter_346_1.color = Color.New(var_346_4, var_346_5, var_346_6)
							else
								local var_346_7 = Mathf.Lerp(iter_346_1.color.r, 1, var_346_3)

								iter_346_1.color = Color.New(var_346_7, var_346_7, var_346_7)
							end
						end
					end
				end
			end

			if arg_343_1.time_ >= var_346_1 + var_346_2 and arg_343_1.time_ < var_346_1 + var_346_2 + arg_346_0 and not isNil(var_346_0) and arg_343_1.var_.actorSpriteComps10128 then
				for iter_346_2, iter_346_3 in pairs(arg_343_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_346_3 then
						if arg_343_1.isInRecall_ then
							iter_346_3.color = arg_343_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_346_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_343_1.var_.actorSpriteComps10128 = nil
			end

			local var_346_8 = arg_343_1.actors_["1060"]
			local var_346_9 = 0

			if var_346_9 < arg_343_1.time_ and arg_343_1.time_ <= var_346_9 + arg_346_0 and not isNil(var_346_8) and arg_343_1.var_.actorSpriteComps1060 == nil then
				arg_343_1.var_.actorSpriteComps1060 = var_346_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_346_10 = 0.2

			if var_346_9 <= arg_343_1.time_ and arg_343_1.time_ < var_346_9 + var_346_10 and not isNil(var_346_8) then
				local var_346_11 = (arg_343_1.time_ - var_346_9) / var_346_10

				if arg_343_1.var_.actorSpriteComps1060 then
					for iter_346_4, iter_346_5 in pairs(arg_343_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_346_5 then
							if arg_343_1.isInRecall_ then
								local var_346_12 = Mathf.Lerp(iter_346_5.color.r, arg_343_1.hightColor2.r, var_346_11)
								local var_346_13 = Mathf.Lerp(iter_346_5.color.g, arg_343_1.hightColor2.g, var_346_11)
								local var_346_14 = Mathf.Lerp(iter_346_5.color.b, arg_343_1.hightColor2.b, var_346_11)

								iter_346_5.color = Color.New(var_346_12, var_346_13, var_346_14)
							else
								local var_346_15 = Mathf.Lerp(iter_346_5.color.r, 0.5, var_346_11)

								iter_346_5.color = Color.New(var_346_15, var_346_15, var_346_15)
							end
						end
					end
				end
			end

			if arg_343_1.time_ >= var_346_9 + var_346_10 and arg_343_1.time_ < var_346_9 + var_346_10 + arg_346_0 and not isNil(var_346_8) and arg_343_1.var_.actorSpriteComps1060 then
				for iter_346_6, iter_346_7 in pairs(arg_343_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_346_7 then
						if arg_343_1.isInRecall_ then
							iter_346_7.color = arg_343_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_346_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_343_1.var_.actorSpriteComps1060 = nil
			end

			local var_346_16 = arg_343_1.actors_["10128"].transform
			local var_346_17 = 0

			if var_346_17 < arg_343_1.time_ and arg_343_1.time_ <= var_346_17 + arg_346_0 then
				arg_343_1.var_.moveOldPos10128 = var_346_16.localPosition
				var_346_16.localScale = Vector3.New(1, 1, 1)

				arg_343_1:CheckSpriteTmpPos("10128", 2)

				local var_346_18 = var_346_16.childCount

				for iter_346_8 = 0, var_346_18 - 1 do
					local var_346_19 = var_346_16:GetChild(iter_346_8)

					if var_346_19.name == "split_2" or not string.find(var_346_19.name, "split") then
						var_346_19.gameObject:SetActive(true)
					else
						var_346_19.gameObject:SetActive(false)
					end
				end
			end

			local var_346_20 = 0.001

			if var_346_17 <= arg_343_1.time_ and arg_343_1.time_ < var_346_17 + var_346_20 then
				local var_346_21 = (arg_343_1.time_ - var_346_17) / var_346_20
				local var_346_22 = Vector3.New(-390, -347, -300)

				var_346_16.localPosition = Vector3.Lerp(arg_343_1.var_.moveOldPos10128, var_346_22, var_346_21)
			end

			if arg_343_1.time_ >= var_346_17 + var_346_20 and arg_343_1.time_ < var_346_17 + var_346_20 + arg_346_0 then
				var_346_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_346_23 = 0
			local var_346_24 = 0.075

			if var_346_23 < arg_343_1.time_ and arg_343_1.time_ <= var_346_23 + arg_346_0 then
				arg_343_1.talkMaxDuration = 0
				arg_343_1.dialogCg_.alpha = 1

				arg_343_1.dialog_:SetActive(true)
				SetActive(arg_343_1.leftNameGo_, true)

				local var_346_25 = arg_343_1:FormatText(StoryNameCfg[595].name)

				arg_343_1.leftNameTxt_.text = var_346_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_343_1.leftNameTxt_.transform)

				arg_343_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_343_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_343_1:RecordName(arg_343_1.leftNameTxt_.text)
				SetActive(arg_343_1.iconTrs_.gameObject, false)
				arg_343_1.callingController_:SetSelectedState("normal")

				local var_346_26 = arg_343_1:GetWordFromCfg(417161084)
				local var_346_27 = arg_343_1:FormatText(var_346_26.content)

				arg_343_1.text_.text = var_346_27

				LuaForUtil.ClearLinePrefixSymbol(arg_343_1.text_)

				local var_346_28 = 3
				local var_346_29 = utf8.len(var_346_27)
				local var_346_30 = var_346_28 <= 0 and var_346_24 or var_346_24 * (var_346_29 / var_346_28)

				if var_346_30 > 0 and var_346_24 < var_346_30 then
					arg_343_1.talkMaxDuration = var_346_30

					if var_346_30 + var_346_23 > arg_343_1.duration_ then
						arg_343_1.duration_ = var_346_30 + var_346_23
					end
				end

				arg_343_1.text_.text = var_346_27
				arg_343_1.typewritter.percent = 0

				arg_343_1.typewritter:SetDirty()
				arg_343_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161084", "story_v_out_417161.awb") ~= 0 then
					local var_346_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161084", "story_v_out_417161.awb") / 1000

					if var_346_31 + var_346_23 > arg_343_1.duration_ then
						arg_343_1.duration_ = var_346_31 + var_346_23
					end

					if var_346_26.prefab_name ~= "" and arg_343_1.actors_[var_346_26.prefab_name] ~= nil then
						local var_346_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_343_1.actors_[var_346_26.prefab_name].transform, "story_v_out_417161", "417161084", "story_v_out_417161.awb")

						arg_343_1:RecordAudio("417161084", var_346_32)
						arg_343_1:RecordAudio("417161084", var_346_32)
					else
						arg_343_1:AudioAction("play", "voice", "story_v_out_417161", "417161084", "story_v_out_417161.awb")
					end

					arg_343_1:RecordHistoryTalkVoice("story_v_out_417161", "417161084", "story_v_out_417161.awb")
				end

				arg_343_1:RecordContent(arg_343_1.text_.text)
			end

			local var_346_33 = math.max(var_346_24, arg_343_1.talkMaxDuration)

			if var_346_23 <= arg_343_1.time_ and arg_343_1.time_ < var_346_23 + var_346_33 then
				arg_343_1.typewritter.percent = (arg_343_1.time_ - var_346_23) / var_346_33

				arg_343_1.typewritter:SetDirty()
			end

			if arg_343_1.time_ >= var_346_23 + var_346_33 and arg_343_1.time_ < var_346_23 + var_346_33 + arg_346_0 then
				arg_343_1.typewritter.percent = 1

				arg_343_1.typewritter:SetDirty()
				arg_343_1:ShowNextGo(true)
			end
		end
	end,
	Play417161085 = function(arg_347_0, arg_347_1)
		arg_347_1.time_ = 0
		arg_347_1.frameCnt_ = 0
		arg_347_1.state_ = "playing"
		arg_347_1.curTalkId_ = 417161085
		arg_347_1.duration_ = 3.4

		local var_347_0 = {
			zh = 1.566,
			ja = 3.4
		}
		local var_347_1 = manager.audio:GetLocalizationFlag()

		if var_347_0[var_347_1] ~= nil then
			arg_347_1.duration_ = var_347_0[var_347_1]
		end

		SetActive(arg_347_1.tipsGo_, false)

		function arg_347_1.onSingleLineFinish_()
			arg_347_1.onSingleLineUpdate_ = nil
			arg_347_1.onSingleLineFinish_ = nil
			arg_347_1.state_ = "waiting"
		end

		function arg_347_1.playNext_(arg_349_0)
			if arg_349_0 == 1 then
				arg_347_0:Play417161086(arg_347_1)
			end
		end

		function arg_347_1.onSingleLineUpdate_(arg_350_0)
			local var_350_0 = arg_347_1.actors_["1060"]
			local var_350_1 = 0

			if var_350_1 < arg_347_1.time_ and arg_347_1.time_ <= var_350_1 + arg_350_0 and not isNil(var_350_0) and arg_347_1.var_.actorSpriteComps1060 == nil then
				arg_347_1.var_.actorSpriteComps1060 = var_350_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_350_2 = 0.2

			if var_350_1 <= arg_347_1.time_ and arg_347_1.time_ < var_350_1 + var_350_2 and not isNil(var_350_0) then
				local var_350_3 = (arg_347_1.time_ - var_350_1) / var_350_2

				if arg_347_1.var_.actorSpriteComps1060 then
					for iter_350_0, iter_350_1 in pairs(arg_347_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_350_1 then
							if arg_347_1.isInRecall_ then
								local var_350_4 = Mathf.Lerp(iter_350_1.color.r, arg_347_1.hightColor1.r, var_350_3)
								local var_350_5 = Mathf.Lerp(iter_350_1.color.g, arg_347_1.hightColor1.g, var_350_3)
								local var_350_6 = Mathf.Lerp(iter_350_1.color.b, arg_347_1.hightColor1.b, var_350_3)

								iter_350_1.color = Color.New(var_350_4, var_350_5, var_350_6)
							else
								local var_350_7 = Mathf.Lerp(iter_350_1.color.r, 1, var_350_3)

								iter_350_1.color = Color.New(var_350_7, var_350_7, var_350_7)
							end
						end
					end
				end
			end

			if arg_347_1.time_ >= var_350_1 + var_350_2 and arg_347_1.time_ < var_350_1 + var_350_2 + arg_350_0 and not isNil(var_350_0) and arg_347_1.var_.actorSpriteComps1060 then
				for iter_350_2, iter_350_3 in pairs(arg_347_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_350_3 then
						if arg_347_1.isInRecall_ then
							iter_350_3.color = arg_347_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_350_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_347_1.var_.actorSpriteComps1060 = nil
			end

			local var_350_8 = arg_347_1.actors_["10128"]
			local var_350_9 = 0

			if var_350_9 < arg_347_1.time_ and arg_347_1.time_ <= var_350_9 + arg_350_0 and not isNil(var_350_8) and arg_347_1.var_.actorSpriteComps10128 == nil then
				arg_347_1.var_.actorSpriteComps10128 = var_350_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_350_10 = 0.2

			if var_350_9 <= arg_347_1.time_ and arg_347_1.time_ < var_350_9 + var_350_10 and not isNil(var_350_8) then
				local var_350_11 = (arg_347_1.time_ - var_350_9) / var_350_10

				if arg_347_1.var_.actorSpriteComps10128 then
					for iter_350_4, iter_350_5 in pairs(arg_347_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_350_5 then
							if arg_347_1.isInRecall_ then
								local var_350_12 = Mathf.Lerp(iter_350_5.color.r, arg_347_1.hightColor2.r, var_350_11)
								local var_350_13 = Mathf.Lerp(iter_350_5.color.g, arg_347_1.hightColor2.g, var_350_11)
								local var_350_14 = Mathf.Lerp(iter_350_5.color.b, arg_347_1.hightColor2.b, var_350_11)

								iter_350_5.color = Color.New(var_350_12, var_350_13, var_350_14)
							else
								local var_350_15 = Mathf.Lerp(iter_350_5.color.r, 0.5, var_350_11)

								iter_350_5.color = Color.New(var_350_15, var_350_15, var_350_15)
							end
						end
					end
				end
			end

			if arg_347_1.time_ >= var_350_9 + var_350_10 and arg_347_1.time_ < var_350_9 + var_350_10 + arg_350_0 and not isNil(var_350_8) and arg_347_1.var_.actorSpriteComps10128 then
				for iter_350_6, iter_350_7 in pairs(arg_347_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_350_7 then
						if arg_347_1.isInRecall_ then
							iter_350_7.color = arg_347_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_350_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_347_1.var_.actorSpriteComps10128 = nil
			end

			local var_350_16 = arg_347_1.actors_["1060"].transform
			local var_350_17 = 0

			if var_350_17 < arg_347_1.time_ and arg_347_1.time_ <= var_350_17 + arg_350_0 then
				arg_347_1.var_.moveOldPos1060 = var_350_16.localPosition
				var_350_16.localScale = Vector3.New(1, 1, 1)

				arg_347_1:CheckSpriteTmpPos("1060", 4)

				local var_350_18 = var_350_16.childCount

				for iter_350_8 = 0, var_350_18 - 1 do
					local var_350_19 = var_350_16:GetChild(iter_350_8)

					if var_350_19.name == "split_1" or not string.find(var_350_19.name, "split") then
						var_350_19.gameObject:SetActive(true)
					else
						var_350_19.gameObject:SetActive(false)
					end
				end
			end

			local var_350_20 = 0.001

			if var_350_17 <= arg_347_1.time_ and arg_347_1.time_ < var_350_17 + var_350_20 then
				local var_350_21 = (arg_347_1.time_ - var_350_17) / var_350_20
				local var_350_22 = Vector3.New(420.9, -430.8, 6.9)

				var_350_16.localPosition = Vector3.Lerp(arg_347_1.var_.moveOldPos1060, var_350_22, var_350_21)
			end

			if arg_347_1.time_ >= var_350_17 + var_350_20 and arg_347_1.time_ < var_350_17 + var_350_20 + arg_350_0 then
				var_350_16.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_350_23 = 0
			local var_350_24 = 0.125

			if var_350_23 < arg_347_1.time_ and arg_347_1.time_ <= var_350_23 + arg_350_0 then
				arg_347_1.talkMaxDuration = 0
				arg_347_1.dialogCg_.alpha = 1

				arg_347_1.dialog_:SetActive(true)
				SetActive(arg_347_1.leftNameGo_, true)

				local var_350_25 = arg_347_1:FormatText(StoryNameCfg[584].name)

				arg_347_1.leftNameTxt_.text = var_350_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_347_1.leftNameTxt_.transform)

				arg_347_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_347_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_347_1:RecordName(arg_347_1.leftNameTxt_.text)
				SetActive(arg_347_1.iconTrs_.gameObject, false)
				arg_347_1.callingController_:SetSelectedState("normal")

				local var_350_26 = arg_347_1:GetWordFromCfg(417161085)
				local var_350_27 = arg_347_1:FormatText(var_350_26.content)

				arg_347_1.text_.text = var_350_27

				LuaForUtil.ClearLinePrefixSymbol(arg_347_1.text_)

				local var_350_28 = 5
				local var_350_29 = utf8.len(var_350_27)
				local var_350_30 = var_350_28 <= 0 and var_350_24 or var_350_24 * (var_350_29 / var_350_28)

				if var_350_30 > 0 and var_350_24 < var_350_30 then
					arg_347_1.talkMaxDuration = var_350_30

					if var_350_30 + var_350_23 > arg_347_1.duration_ then
						arg_347_1.duration_ = var_350_30 + var_350_23
					end
				end

				arg_347_1.text_.text = var_350_27
				arg_347_1.typewritter.percent = 0

				arg_347_1.typewritter:SetDirty()
				arg_347_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161085", "story_v_out_417161.awb") ~= 0 then
					local var_350_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161085", "story_v_out_417161.awb") / 1000

					if var_350_31 + var_350_23 > arg_347_1.duration_ then
						arg_347_1.duration_ = var_350_31 + var_350_23
					end

					if var_350_26.prefab_name ~= "" and arg_347_1.actors_[var_350_26.prefab_name] ~= nil then
						local var_350_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_347_1.actors_[var_350_26.prefab_name].transform, "story_v_out_417161", "417161085", "story_v_out_417161.awb")

						arg_347_1:RecordAudio("417161085", var_350_32)
						arg_347_1:RecordAudio("417161085", var_350_32)
					else
						arg_347_1:AudioAction("play", "voice", "story_v_out_417161", "417161085", "story_v_out_417161.awb")
					end

					arg_347_1:RecordHistoryTalkVoice("story_v_out_417161", "417161085", "story_v_out_417161.awb")
				end

				arg_347_1:RecordContent(arg_347_1.text_.text)
			end

			local var_350_33 = math.max(var_350_24, arg_347_1.talkMaxDuration)

			if var_350_23 <= arg_347_1.time_ and arg_347_1.time_ < var_350_23 + var_350_33 then
				arg_347_1.typewritter.percent = (arg_347_1.time_ - var_350_23) / var_350_33

				arg_347_1.typewritter:SetDirty()
			end

			if arg_347_1.time_ >= var_350_23 + var_350_33 and arg_347_1.time_ < var_350_23 + var_350_33 + arg_350_0 then
				arg_347_1.typewritter.percent = 1

				arg_347_1.typewritter:SetDirty()
				arg_347_1:ShowNextGo(true)
			end
		end
	end,
	Play417161086 = function(arg_351_0, arg_351_1)
		arg_351_1.time_ = 0
		arg_351_1.frameCnt_ = 0
		arg_351_1.state_ = "playing"
		arg_351_1.curTalkId_ = 417161086
		arg_351_1.duration_ = 5.93

		local var_351_0 = {
			zh = 3.1,
			ja = 5.933
		}
		local var_351_1 = manager.audio:GetLocalizationFlag()

		if var_351_0[var_351_1] ~= nil then
			arg_351_1.duration_ = var_351_0[var_351_1]
		end

		SetActive(arg_351_1.tipsGo_, false)

		function arg_351_1.onSingleLineFinish_()
			arg_351_1.onSingleLineUpdate_ = nil
			arg_351_1.onSingleLineFinish_ = nil
			arg_351_1.state_ = "waiting"
		end

		function arg_351_1.playNext_(arg_353_0)
			if arg_353_0 == 1 then
				arg_351_0:Play417161087(arg_351_1)
			end
		end

		function arg_351_1.onSingleLineUpdate_(arg_354_0)
			local var_354_0 = arg_351_1.actors_["10128"]
			local var_354_1 = 0

			if var_354_1 < arg_351_1.time_ and arg_351_1.time_ <= var_354_1 + arg_354_0 and not isNil(var_354_0) and arg_351_1.var_.actorSpriteComps10128 == nil then
				arg_351_1.var_.actorSpriteComps10128 = var_354_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_354_2 = 0.2

			if var_354_1 <= arg_351_1.time_ and arg_351_1.time_ < var_354_1 + var_354_2 and not isNil(var_354_0) then
				local var_354_3 = (arg_351_1.time_ - var_354_1) / var_354_2

				if arg_351_1.var_.actorSpriteComps10128 then
					for iter_354_0, iter_354_1 in pairs(arg_351_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_354_1 then
							if arg_351_1.isInRecall_ then
								local var_354_4 = Mathf.Lerp(iter_354_1.color.r, arg_351_1.hightColor1.r, var_354_3)
								local var_354_5 = Mathf.Lerp(iter_354_1.color.g, arg_351_1.hightColor1.g, var_354_3)
								local var_354_6 = Mathf.Lerp(iter_354_1.color.b, arg_351_1.hightColor1.b, var_354_3)

								iter_354_1.color = Color.New(var_354_4, var_354_5, var_354_6)
							else
								local var_354_7 = Mathf.Lerp(iter_354_1.color.r, 1, var_354_3)

								iter_354_1.color = Color.New(var_354_7, var_354_7, var_354_7)
							end
						end
					end
				end
			end

			if arg_351_1.time_ >= var_354_1 + var_354_2 and arg_351_1.time_ < var_354_1 + var_354_2 + arg_354_0 and not isNil(var_354_0) and arg_351_1.var_.actorSpriteComps10128 then
				for iter_354_2, iter_354_3 in pairs(arg_351_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_354_3 then
						if arg_351_1.isInRecall_ then
							iter_354_3.color = arg_351_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_354_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_351_1.var_.actorSpriteComps10128 = nil
			end

			local var_354_8 = arg_351_1.actors_["1060"]
			local var_354_9 = 0

			if var_354_9 < arg_351_1.time_ and arg_351_1.time_ <= var_354_9 + arg_354_0 and not isNil(var_354_8) and arg_351_1.var_.actorSpriteComps1060 == nil then
				arg_351_1.var_.actorSpriteComps1060 = var_354_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_354_10 = 0.2

			if var_354_9 <= arg_351_1.time_ and arg_351_1.time_ < var_354_9 + var_354_10 and not isNil(var_354_8) then
				local var_354_11 = (arg_351_1.time_ - var_354_9) / var_354_10

				if arg_351_1.var_.actorSpriteComps1060 then
					for iter_354_4, iter_354_5 in pairs(arg_351_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_354_5 then
							if arg_351_1.isInRecall_ then
								local var_354_12 = Mathf.Lerp(iter_354_5.color.r, arg_351_1.hightColor2.r, var_354_11)
								local var_354_13 = Mathf.Lerp(iter_354_5.color.g, arg_351_1.hightColor2.g, var_354_11)
								local var_354_14 = Mathf.Lerp(iter_354_5.color.b, arg_351_1.hightColor2.b, var_354_11)

								iter_354_5.color = Color.New(var_354_12, var_354_13, var_354_14)
							else
								local var_354_15 = Mathf.Lerp(iter_354_5.color.r, 0.5, var_354_11)

								iter_354_5.color = Color.New(var_354_15, var_354_15, var_354_15)
							end
						end
					end
				end
			end

			if arg_351_1.time_ >= var_354_9 + var_354_10 and arg_351_1.time_ < var_354_9 + var_354_10 + arg_354_0 and not isNil(var_354_8) and arg_351_1.var_.actorSpriteComps1060 then
				for iter_354_6, iter_354_7 in pairs(arg_351_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_354_7 then
						if arg_351_1.isInRecall_ then
							iter_354_7.color = arg_351_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_354_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_351_1.var_.actorSpriteComps1060 = nil
			end

			local var_354_16 = arg_351_1.actors_["10128"].transform
			local var_354_17 = 0

			if var_354_17 < arg_351_1.time_ and arg_351_1.time_ <= var_354_17 + arg_354_0 then
				arg_351_1.var_.moveOldPos10128 = var_354_16.localPosition
				var_354_16.localScale = Vector3.New(1, 1, 1)

				arg_351_1:CheckSpriteTmpPos("10128", 3)

				local var_354_18 = var_354_16.childCount

				for iter_354_8 = 0, var_354_18 - 1 do
					local var_354_19 = var_354_16:GetChild(iter_354_8)

					if var_354_19.name == "" or not string.find(var_354_19.name, "split") then
						var_354_19.gameObject:SetActive(true)
					else
						var_354_19.gameObject:SetActive(false)
					end
				end
			end

			local var_354_20 = 0.001

			if var_354_17 <= arg_351_1.time_ and arg_351_1.time_ < var_354_17 + var_354_20 then
				local var_354_21 = (arg_351_1.time_ - var_354_17) / var_354_20
				local var_354_22 = Vector3.New(0, -347, -300)

				var_354_16.localPosition = Vector3.Lerp(arg_351_1.var_.moveOldPos10128, var_354_22, var_354_21)
			end

			if arg_351_1.time_ >= var_354_17 + var_354_20 and arg_351_1.time_ < var_354_17 + var_354_20 + arg_354_0 then
				var_354_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_354_23 = arg_351_1.actors_["1060"].transform
			local var_354_24 = 0

			if var_354_24 < arg_351_1.time_ and arg_351_1.time_ <= var_354_24 + arg_354_0 then
				arg_351_1.var_.moveOldPos1060 = var_354_23.localPosition
				var_354_23.localScale = Vector3.New(1, 1, 1)

				arg_351_1:CheckSpriteTmpPos("1060", 7)

				local var_354_25 = var_354_23.childCount

				for iter_354_9 = 0, var_354_25 - 1 do
					local var_354_26 = var_354_23:GetChild(iter_354_9)

					if var_354_26.name == "" or not string.find(var_354_26.name, "split") then
						var_354_26.gameObject:SetActive(true)
					else
						var_354_26.gameObject:SetActive(false)
					end
				end
			end

			local var_354_27 = 0.001

			if var_354_24 <= arg_351_1.time_ and arg_351_1.time_ < var_354_24 + var_354_27 then
				local var_354_28 = (arg_351_1.time_ - var_354_24) / var_354_27
				local var_354_29 = Vector3.New(0, -2000, -40)

				var_354_23.localPosition = Vector3.Lerp(arg_351_1.var_.moveOldPos1060, var_354_29, var_354_28)
			end

			if arg_351_1.time_ >= var_354_24 + var_354_27 and arg_351_1.time_ < var_354_24 + var_354_27 + arg_354_0 then
				var_354_23.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_354_30 = 0
			local var_354_31 = 0.275

			if var_354_30 < arg_351_1.time_ and arg_351_1.time_ <= var_354_30 + arg_354_0 then
				arg_351_1.talkMaxDuration = 0
				arg_351_1.dialogCg_.alpha = 1

				arg_351_1.dialog_:SetActive(true)
				SetActive(arg_351_1.leftNameGo_, true)

				local var_354_32 = arg_351_1:FormatText(StoryNameCfg[595].name)

				arg_351_1.leftNameTxt_.text = var_354_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_351_1.leftNameTxt_.transform)

				arg_351_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_351_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_351_1:RecordName(arg_351_1.leftNameTxt_.text)
				SetActive(arg_351_1.iconTrs_.gameObject, false)
				arg_351_1.callingController_:SetSelectedState("normal")

				local var_354_33 = arg_351_1:GetWordFromCfg(417161086)
				local var_354_34 = arg_351_1:FormatText(var_354_33.content)

				arg_351_1.text_.text = var_354_34

				LuaForUtil.ClearLinePrefixSymbol(arg_351_1.text_)

				local var_354_35 = 11
				local var_354_36 = utf8.len(var_354_34)
				local var_354_37 = var_354_35 <= 0 and var_354_31 or var_354_31 * (var_354_36 / var_354_35)

				if var_354_37 > 0 and var_354_31 < var_354_37 then
					arg_351_1.talkMaxDuration = var_354_37

					if var_354_37 + var_354_30 > arg_351_1.duration_ then
						arg_351_1.duration_ = var_354_37 + var_354_30
					end
				end

				arg_351_1.text_.text = var_354_34
				arg_351_1.typewritter.percent = 0

				arg_351_1.typewritter:SetDirty()
				arg_351_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161086", "story_v_out_417161.awb") ~= 0 then
					local var_354_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161086", "story_v_out_417161.awb") / 1000

					if var_354_38 + var_354_30 > arg_351_1.duration_ then
						arg_351_1.duration_ = var_354_38 + var_354_30
					end

					if var_354_33.prefab_name ~= "" and arg_351_1.actors_[var_354_33.prefab_name] ~= nil then
						local var_354_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_351_1.actors_[var_354_33.prefab_name].transform, "story_v_out_417161", "417161086", "story_v_out_417161.awb")

						arg_351_1:RecordAudio("417161086", var_354_39)
						arg_351_1:RecordAudio("417161086", var_354_39)
					else
						arg_351_1:AudioAction("play", "voice", "story_v_out_417161", "417161086", "story_v_out_417161.awb")
					end

					arg_351_1:RecordHistoryTalkVoice("story_v_out_417161", "417161086", "story_v_out_417161.awb")
				end

				arg_351_1:RecordContent(arg_351_1.text_.text)
			end

			local var_354_40 = math.max(var_354_31, arg_351_1.talkMaxDuration)

			if var_354_30 <= arg_351_1.time_ and arg_351_1.time_ < var_354_30 + var_354_40 then
				arg_351_1.typewritter.percent = (arg_351_1.time_ - var_354_30) / var_354_40

				arg_351_1.typewritter:SetDirty()
			end

			if arg_351_1.time_ >= var_354_30 + var_354_40 and arg_351_1.time_ < var_354_30 + var_354_40 + arg_354_0 then
				arg_351_1.typewritter.percent = 1

				arg_351_1.typewritter:SetDirty()
				arg_351_1:ShowNextGo(true)
			end
		end
	end,
	Play417161087 = function(arg_355_0, arg_355_1)
		arg_355_1.time_ = 0
		arg_355_1.frameCnt_ = 0
		arg_355_1.state_ = "playing"
		arg_355_1.curTalkId_ = 417161087
		arg_355_1.duration_ = 5

		SetActive(arg_355_1.tipsGo_, false)

		function arg_355_1.onSingleLineFinish_()
			arg_355_1.onSingleLineUpdate_ = nil
			arg_355_1.onSingleLineFinish_ = nil
			arg_355_1.state_ = "waiting"
		end

		function arg_355_1.playNext_(arg_357_0)
			if arg_357_0 == 1 then
				arg_355_0:Play417161088(arg_355_1)
			end
		end

		function arg_355_1.onSingleLineUpdate_(arg_358_0)
			local var_358_0 = arg_355_1.actors_["10128"]
			local var_358_1 = 0

			if var_358_1 < arg_355_1.time_ and arg_355_1.time_ <= var_358_1 + arg_358_0 and not isNil(var_358_0) and arg_355_1.var_.actorSpriteComps10128 == nil then
				arg_355_1.var_.actorSpriteComps10128 = var_358_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_358_2 = 0.2

			if var_358_1 <= arg_355_1.time_ and arg_355_1.time_ < var_358_1 + var_358_2 and not isNil(var_358_0) then
				local var_358_3 = (arg_355_1.time_ - var_358_1) / var_358_2

				if arg_355_1.var_.actorSpriteComps10128 then
					for iter_358_0, iter_358_1 in pairs(arg_355_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_358_1 then
							if arg_355_1.isInRecall_ then
								local var_358_4 = Mathf.Lerp(iter_358_1.color.r, arg_355_1.hightColor2.r, var_358_3)
								local var_358_5 = Mathf.Lerp(iter_358_1.color.g, arg_355_1.hightColor2.g, var_358_3)
								local var_358_6 = Mathf.Lerp(iter_358_1.color.b, arg_355_1.hightColor2.b, var_358_3)

								iter_358_1.color = Color.New(var_358_4, var_358_5, var_358_6)
							else
								local var_358_7 = Mathf.Lerp(iter_358_1.color.r, 0.5, var_358_3)

								iter_358_1.color = Color.New(var_358_7, var_358_7, var_358_7)
							end
						end
					end
				end
			end

			if arg_355_1.time_ >= var_358_1 + var_358_2 and arg_355_1.time_ < var_358_1 + var_358_2 + arg_358_0 and not isNil(var_358_0) and arg_355_1.var_.actorSpriteComps10128 then
				for iter_358_2, iter_358_3 in pairs(arg_355_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_358_3 then
						if arg_355_1.isInRecall_ then
							iter_358_3.color = arg_355_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_358_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_355_1.var_.actorSpriteComps10128 = nil
			end

			local var_358_8 = arg_355_1.actors_["10128"].transform
			local var_358_9 = 0

			if var_358_9 < arg_355_1.time_ and arg_355_1.time_ <= var_358_9 + arg_358_0 then
				arg_355_1.var_.moveOldPos10128 = var_358_8.localPosition
				var_358_8.localScale = Vector3.New(1, 1, 1)

				arg_355_1:CheckSpriteTmpPos("10128", 7)

				local var_358_10 = var_358_8.childCount

				for iter_358_4 = 0, var_358_10 - 1 do
					local var_358_11 = var_358_8:GetChild(iter_358_4)

					if var_358_11.name == "" or not string.find(var_358_11.name, "split") then
						var_358_11.gameObject:SetActive(true)
					else
						var_358_11.gameObject:SetActive(false)
					end
				end
			end

			local var_358_12 = 0.001

			if var_358_9 <= arg_355_1.time_ and arg_355_1.time_ < var_358_9 + var_358_12 then
				local var_358_13 = (arg_355_1.time_ - var_358_9) / var_358_12
				local var_358_14 = Vector3.New(0, -2000, -300)

				var_358_8.localPosition = Vector3.Lerp(arg_355_1.var_.moveOldPos10128, var_358_14, var_358_13)
			end

			if arg_355_1.time_ >= var_358_9 + var_358_12 and arg_355_1.time_ < var_358_9 + var_358_12 + arg_358_0 then
				var_358_8.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_358_15 = 0.766666666666667
			local var_358_16 = 1

			if var_358_15 < arg_355_1.time_ and arg_355_1.time_ <= var_358_15 + arg_358_0 then
				local var_358_17 = "play"
				local var_358_18 = "effect"

				arg_355_1:AudioAction(var_358_17, var_358_18, "se_story_side_1033", "se_story_side_1033_footstep", "")
			end

			local var_358_19 = 0
			local var_358_20 = 0.95

			if var_358_19 < arg_355_1.time_ and arg_355_1.time_ <= var_358_19 + arg_358_0 then
				arg_355_1.talkMaxDuration = 0
				arg_355_1.dialogCg_.alpha = 1

				arg_355_1.dialog_:SetActive(true)
				SetActive(arg_355_1.leftNameGo_, false)

				arg_355_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_355_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_355_1:RecordName(arg_355_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_355_1.iconTrs_.gameObject, false)
				arg_355_1.callingController_:SetSelectedState("normal")

				local var_358_21 = arg_355_1:GetWordFromCfg(417161087)
				local var_358_22 = arg_355_1:FormatText(var_358_21.content)

				arg_355_1.text_.text = var_358_22

				LuaForUtil.ClearLinePrefixSymbol(arg_355_1.text_)

				local var_358_23 = 38
				local var_358_24 = utf8.len(var_358_22)
				local var_358_25 = var_358_23 <= 0 and var_358_20 or var_358_20 * (var_358_24 / var_358_23)

				if var_358_25 > 0 and var_358_20 < var_358_25 then
					arg_355_1.talkMaxDuration = var_358_25

					if var_358_25 + var_358_19 > arg_355_1.duration_ then
						arg_355_1.duration_ = var_358_25 + var_358_19
					end
				end

				arg_355_1.text_.text = var_358_22
				arg_355_1.typewritter.percent = 0

				arg_355_1.typewritter:SetDirty()
				arg_355_1:ShowNextGo(false)
				arg_355_1:RecordContent(arg_355_1.text_.text)
			end

			local var_358_26 = math.max(var_358_20, arg_355_1.talkMaxDuration)

			if var_358_19 <= arg_355_1.time_ and arg_355_1.time_ < var_358_19 + var_358_26 then
				arg_355_1.typewritter.percent = (arg_355_1.time_ - var_358_19) / var_358_26

				arg_355_1.typewritter:SetDirty()
			end

			if arg_355_1.time_ >= var_358_19 + var_358_26 and arg_355_1.time_ < var_358_19 + var_358_26 + arg_358_0 then
				arg_355_1.typewritter.percent = 1

				arg_355_1.typewritter:SetDirty()
				arg_355_1:ShowNextGo(true)
			end
		end
	end,
	Play417161088 = function(arg_359_0, arg_359_1)
		arg_359_1.time_ = 0
		arg_359_1.frameCnt_ = 0
		arg_359_1.state_ = "playing"
		arg_359_1.curTalkId_ = 417161088
		arg_359_1.duration_ = 4.13

		SetActive(arg_359_1.tipsGo_, false)

		function arg_359_1.onSingleLineFinish_()
			arg_359_1.onSingleLineUpdate_ = nil
			arg_359_1.onSingleLineFinish_ = nil
			arg_359_1.state_ = "waiting"
		end

		function arg_359_1.playNext_(arg_361_0)
			if arg_361_0 == 1 then
				arg_359_0:Play417161089(arg_359_1)
			end
		end

		function arg_359_1.onSingleLineUpdate_(arg_362_0)
			local var_362_0 = 2

			if var_362_0 < arg_359_1.time_ and arg_359_1.time_ <= var_362_0 + arg_362_0 then
				local var_362_1 = manager.ui.mainCamera.transform.localPosition
				local var_362_2 = Vector3.New(0, 0, 10) + Vector3.New(var_362_1.x, var_362_1.y, 0)
				local var_362_3 = arg_359_1.bgs_.STblack

				var_362_3.transform.localPosition = var_362_2
				var_362_3.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_362_4 = var_362_3:GetComponent("SpriteRenderer")

				if var_362_4 and var_362_4.sprite then
					local var_362_5 = (var_362_3.transform.localPosition - var_362_1).z
					local var_362_6 = manager.ui.mainCameraCom_
					local var_362_7 = 2 * var_362_5 * Mathf.Tan(var_362_6.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_362_8 = var_362_7 * var_362_6.aspect
					local var_362_9 = var_362_4.sprite.bounds.size.x
					local var_362_10 = var_362_4.sprite.bounds.size.y
					local var_362_11 = var_362_8 / var_362_9
					local var_362_12 = var_362_7 / var_362_10
					local var_362_13 = var_362_12 < var_362_11 and var_362_11 or var_362_12

					var_362_3.transform.localScale = Vector3.New(var_362_13, var_362_13, 0)
				end

				for iter_362_0, iter_362_1 in pairs(arg_359_1.bgs_) do
					if iter_362_0 ~= "STblack" then
						iter_362_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_362_14 = 0

			if var_362_14 < arg_359_1.time_ and arg_359_1.time_ <= var_362_14 + arg_362_0 then
				arg_359_1.mask_.enabled = true
				arg_359_1.mask_.raycastTarget = true

				arg_359_1:SetGaussion(false)
			end

			local var_362_15 = 2

			if var_362_14 <= arg_359_1.time_ and arg_359_1.time_ < var_362_14 + var_362_15 then
				local var_362_16 = (arg_359_1.time_ - var_362_14) / var_362_15
				local var_362_17 = Color.New(0, 0, 0)

				var_362_17.a = Mathf.Lerp(0, 1, var_362_16)
				arg_359_1.mask_.color = var_362_17
			end

			if arg_359_1.time_ >= var_362_14 + var_362_15 and arg_359_1.time_ < var_362_14 + var_362_15 + arg_362_0 then
				local var_362_18 = Color.New(0, 0, 0)

				var_362_18.a = 1
				arg_359_1.mask_.color = var_362_18
			end

			local var_362_19 = 2

			if var_362_19 < arg_359_1.time_ and arg_359_1.time_ <= var_362_19 + arg_362_0 then
				arg_359_1.mask_.enabled = true
				arg_359_1.mask_.raycastTarget = true

				arg_359_1:SetGaussion(false)
			end

			local var_362_20 = 2

			if var_362_19 <= arg_359_1.time_ and arg_359_1.time_ < var_362_19 + var_362_20 then
				local var_362_21 = (arg_359_1.time_ - var_362_19) / var_362_20
				local var_362_22 = Color.New(0, 0, 0)

				var_362_22.a = Mathf.Lerp(1, 0, var_362_21)
				arg_359_1.mask_.color = var_362_22
			end

			if arg_359_1.time_ >= var_362_19 + var_362_20 and arg_359_1.time_ < var_362_19 + var_362_20 + arg_362_0 then
				local var_362_23 = Color.New(0, 0, 0)
				local var_362_24 = 0

				arg_359_1.mask_.enabled = false
				var_362_23.a = var_362_24
				arg_359_1.mask_.color = var_362_23
			end

			local var_362_25 = 2

			if var_362_25 < arg_359_1.time_ and arg_359_1.time_ <= var_362_25 + arg_362_0 then
				arg_359_1.fswbg_:SetActive(true)
				arg_359_1.dialog_:SetActive(false)

				arg_359_1.fswtw_.percent = 0

				local var_362_26 = arg_359_1:GetWordFromCfg(417161088)
				local var_362_27 = arg_359_1:FormatText(var_362_26.content)

				arg_359_1.fswt_.text = var_362_27

				LuaForUtil.ClearLinePrefixSymbol(arg_359_1.fswt_)

				arg_359_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_359_1.fswtw_:SetDirty()

				arg_359_1.typewritterCharCountI18N = 0

				arg_359_1:ShowNextGo(false)
			end

			local var_362_28 = 3.8

			if var_362_28 < arg_359_1.time_ and arg_359_1.time_ <= var_362_28 + arg_362_0 then
				arg_359_1.var_.oldValueTypewriter = arg_359_1.fswtw_.percent

				arg_359_1:ShowNextGo(false)
			end

			local var_362_29 = 5
			local var_362_30 = 0.333333333333333
			local var_362_31 = arg_359_1:GetWordFromCfg(417161088)
			local var_362_32 = arg_359_1:FormatText(var_362_31.content)
			local var_362_33, var_362_34 = arg_359_1:GetPercentByPara(var_362_32, 1)

			if var_362_28 < arg_359_1.time_ and arg_359_1.time_ <= var_362_28 + arg_362_0 then
				arg_359_1.talkMaxDuration = 0

				local var_362_35 = var_362_29 <= 0 and var_362_30 or var_362_30 * ((var_362_34 - arg_359_1.typewritterCharCountI18N) / var_362_29)

				if var_362_35 > 0 and var_362_30 < var_362_35 then
					arg_359_1.talkMaxDuration = var_362_35

					if var_362_35 + var_362_28 > arg_359_1.duration_ then
						arg_359_1.duration_ = var_362_35 + var_362_28
					end
				end
			end

			local var_362_36 = 0.333333333333333
			local var_362_37 = math.max(var_362_36, arg_359_1.talkMaxDuration)

			if var_362_28 <= arg_359_1.time_ and arg_359_1.time_ < var_362_28 + var_362_37 then
				local var_362_38 = (arg_359_1.time_ - var_362_28) / var_362_37

				arg_359_1.fswtw_.percent = Mathf.Lerp(arg_359_1.var_.oldValueTypewriter, var_362_33, var_362_38)
				arg_359_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_359_1.fswtw_:SetDirty()
			end

			if arg_359_1.time_ >= var_362_28 + var_362_37 and arg_359_1.time_ < var_362_28 + var_362_37 + arg_362_0 then
				arg_359_1.fswtw_.percent = var_362_33

				arg_359_1.fswtw_:SetDirty()
				arg_359_1:ShowNextGo(true)

				arg_359_1.typewritterCharCountI18N = var_362_34
			end

			local var_362_39 = 2

			if var_362_39 < arg_359_1.time_ and arg_359_1.time_ <= var_362_39 + arg_362_0 then
				local var_362_40 = arg_359_1.fswbg_.transform:Find("textbox/adapt/content") or arg_359_1.fswbg_.transform:Find("textbox/content")
				local var_362_41 = var_362_40:GetComponent("Text")
				local var_362_42 = var_362_40:GetComponent("RectTransform")

				var_362_41.alignment = UnityEngine.TextAnchor.MiddleCenter
				var_362_42.offsetMin = Vector2.New(0, 0)
				var_362_42.offsetMax = Vector2.New(0, 0)
			end

			local var_362_43 = 0
			local var_362_44 = 0.533333333333333

			if var_362_43 < arg_359_1.time_ and arg_359_1.time_ <= var_362_43 + arg_362_0 then
				local var_362_45 = "play"
				local var_362_46 = "music"

				arg_359_1:AudioAction(var_362_45, var_362_46, "ui_battle", "ui_battle_stopbgm", "")

				local var_362_47 = ""
				local var_362_48 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_362_48 ~= "" then
					if arg_359_1.bgmTxt_.text ~= var_362_48 and arg_359_1.bgmTxt_.text ~= "" then
						if arg_359_1.bgmTxt2_.text ~= "" then
							arg_359_1.bgmTxt_.text = arg_359_1.bgmTxt2_.text
						end

						arg_359_1.bgmTxt2_.text = var_362_48

						arg_359_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_359_1.bgmTxt_.text = var_362_48
					end

					if arg_359_1.bgmTimer then
						arg_359_1.bgmTimer:Stop()

						arg_359_1.bgmTimer = nil
					end

					if arg_359_1.settingData.show_music_name == 1 then
						arg_359_1.musicController:SetSelectedState("show")
						arg_359_1.musicAnimator_:Play("open", 0, 0)

						if arg_359_1.settingData.music_time ~= 0 then
							arg_359_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_359_1.settingData.music_time), function()
								if arg_359_1 == nil or isNil(arg_359_1.bgmTxt_) then
									return
								end

								arg_359_1.musicController:SetSelectedState("hide")
								arg_359_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end
		end
	end,
	Play417161089 = function(arg_364_0, arg_364_1)
		arg_364_1.time_ = 0
		arg_364_1.frameCnt_ = 0
		arg_364_1.state_ = "playing"
		arg_364_1.curTalkId_ = 417161089
		arg_364_1.duration_ = 7

		SetActive(arg_364_1.tipsGo_, false)

		function arg_364_1.onSingleLineFinish_()
			arg_364_1.onSingleLineUpdate_ = nil
			arg_364_1.onSingleLineFinish_ = nil
			arg_364_1.state_ = "waiting"
		end

		function arg_364_1.playNext_(arg_366_0)
			if arg_366_0 == 1 then
				arg_364_0:Play417161090(arg_364_1)
			end
		end

		function arg_364_1.onSingleLineUpdate_(arg_367_0)
			local var_367_0 = "ST03a"

			if arg_364_1.bgs_[var_367_0] == nil then
				local var_367_1 = Object.Instantiate(arg_364_1.paintGo_)

				var_367_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_367_0)
				var_367_1.name = var_367_0
				var_367_1.transform.parent = arg_364_1.stage_.transform
				var_367_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_364_1.bgs_[var_367_0] = var_367_1
			end

			local var_367_2 = 0

			if var_367_2 < arg_364_1.time_ and arg_364_1.time_ <= var_367_2 + arg_367_0 then
				local var_367_3 = manager.ui.mainCamera.transform.localPosition
				local var_367_4 = Vector3.New(0, 0, 10) + Vector3.New(var_367_3.x, var_367_3.y, 0)
				local var_367_5 = arg_364_1.bgs_.ST03a

				var_367_5.transform.localPosition = var_367_4
				var_367_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_367_6 = var_367_5:GetComponent("SpriteRenderer")

				if var_367_6 and var_367_6.sprite then
					local var_367_7 = (var_367_5.transform.localPosition - var_367_3).z
					local var_367_8 = manager.ui.mainCameraCom_
					local var_367_9 = 2 * var_367_7 * Mathf.Tan(var_367_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_367_10 = var_367_9 * var_367_8.aspect
					local var_367_11 = var_367_6.sprite.bounds.size.x
					local var_367_12 = var_367_6.sprite.bounds.size.y
					local var_367_13 = var_367_10 / var_367_11
					local var_367_14 = var_367_9 / var_367_12
					local var_367_15 = var_367_14 < var_367_13 and var_367_13 or var_367_14

					var_367_5.transform.localScale = Vector3.New(var_367_15, var_367_15, 0)
				end

				for iter_367_0, iter_367_1 in pairs(arg_364_1.bgs_) do
					if iter_367_0 ~= "ST03a" then
						iter_367_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_367_16 = 0

			if var_367_16 < arg_364_1.time_ and arg_364_1.time_ <= var_367_16 + arg_367_0 then
				arg_364_1.mask_.enabled = true
				arg_364_1.mask_.raycastTarget = true

				arg_364_1:SetGaussion(false)
			end

			local var_367_17 = 2

			if var_367_16 <= arg_364_1.time_ and arg_364_1.time_ < var_367_16 + var_367_17 then
				local var_367_18 = (arg_364_1.time_ - var_367_16) / var_367_17
				local var_367_19 = Color.New(0, 0, 0)

				var_367_19.a = Mathf.Lerp(1, 0, var_367_18)
				arg_364_1.mask_.color = var_367_19
			end

			if arg_364_1.time_ >= var_367_16 + var_367_17 and arg_364_1.time_ < var_367_16 + var_367_17 + arg_367_0 then
				local var_367_20 = Color.New(0, 0, 0)
				local var_367_21 = 0

				arg_364_1.mask_.enabled = false
				var_367_20.a = var_367_21
				arg_364_1.mask_.color = var_367_20
			end

			local var_367_22 = manager.ui.mainCamera.transform
			local var_367_23 = 0

			if var_367_23 < arg_364_1.time_ and arg_364_1.time_ <= var_367_23 + arg_367_0 then
				local var_367_24 = arg_364_1.var_.effect1036

				if not var_367_24 then
					var_367_24 = Object.Instantiate(Asset.Load("Effect/Scene/fx_uistory_rain_heavy_ui"))
					var_367_24.name = "1036"
					arg_364_1.var_.effect1036 = var_367_24
				end

				local var_367_25 = var_367_22:Find("")

				if var_367_25 then
					var_367_24.transform.parent = var_367_25
				else
					var_367_24.transform.parent = var_367_22
				end

				var_367_24.transform.localPosition = Vector3.New(0, 0, 0)
				var_367_24.transform.localRotation = Quaternion.Euler(0, 0, 0)

				local var_367_26 = manager.ui.mainCameraCom_
				local var_367_27 = Mathf.Tan(12.5 * Mathf.Deg2Rad) / Mathf.Tan(var_367_26.fieldOfView * 0.5 * Mathf.Deg2Rad)
				local var_367_28 = var_367_24.transform:GetComponentsInChildren(typeof(Transform), true):ToTable()
				local var_367_29 = 15
				local var_367_30 = 2 * var_367_29 * Mathf.Tan(var_367_26.fieldOfView * 0.5 * Mathf.Deg2Rad) * var_367_26.aspect
				local var_367_31 = 1
				local var_367_32 = 1.7777777777777777

				if var_367_32 < var_367_26.aspect then
					var_367_31 = var_367_30 / (2 * var_367_29 * Mathf.Tan(15 * Mathf.Deg2Rad) * var_367_32)
				end

				for iter_367_2, iter_367_3 in ipairs(var_367_28) do
					local var_367_33 = iter_367_3.transform.localScale

					iter_367_3.transform.localScale = Vector3.New(var_367_33.x / var_367_27 * var_367_31, var_367_33.y / var_367_27, var_367_33.z)
				end
			end

			local var_367_34 = 0

			if var_367_34 < arg_364_1.time_ and arg_364_1.time_ <= var_367_34 + arg_367_0 then
				arg_364_1.fswbg_:SetActive(false)
				arg_364_1.dialog_:SetActive(false)
				arg_364_1:ShowNextGo(false)
			end

			local var_367_35 = 3.03333333333333
			local var_367_36 = 1

			if var_367_35 < arg_364_1.time_ and arg_364_1.time_ <= var_367_35 + arg_367_0 then
				local var_367_37 = "play"
				local var_367_38 = "effect"

				arg_364_1:AudioAction(var_367_37, var_367_38, "se_story_side_1093", "se_story_1093_message_get", "")
			end

			local var_367_39 = 0
			local var_367_40 = 0.2

			if var_367_39 < arg_364_1.time_ and arg_364_1.time_ <= var_367_39 + arg_367_0 then
				local var_367_41 = "play"
				local var_367_42 = "music"

				arg_364_1:AudioAction(var_367_41, var_367_42, "ui_battle", "ui_battle_stopbgm", "")

				local var_367_43 = ""
				local var_367_44 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_367_44 ~= "" then
					if arg_364_1.bgmTxt_.text ~= var_367_44 and arg_364_1.bgmTxt_.text ~= "" then
						if arg_364_1.bgmTxt2_.text ~= "" then
							arg_364_1.bgmTxt_.text = arg_364_1.bgmTxt2_.text
						end

						arg_364_1.bgmTxt2_.text = var_367_44

						arg_364_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_364_1.bgmTxt_.text = var_367_44
					end

					if arg_364_1.bgmTimer then
						arg_364_1.bgmTimer:Stop()

						arg_364_1.bgmTimer = nil
					end

					if arg_364_1.settingData.show_music_name == 1 then
						arg_364_1.musicController:SetSelectedState("show")
						arg_364_1.musicAnimator_:Play("open", 0, 0)

						if arg_364_1.settingData.music_time ~= 0 then
							arg_364_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_364_1.settingData.music_time), function()
								if arg_364_1 == nil or isNil(arg_364_1.bgmTxt_) then
									return
								end

								arg_364_1.musicController:SetSelectedState("hide")
								arg_364_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_367_45 = 0.3
			local var_367_46 = 1

			if var_367_45 < arg_364_1.time_ and arg_364_1.time_ <= var_367_45 + arg_367_0 then
				local var_367_47 = "play"
				local var_367_48 = "music"

				arg_364_1:AudioAction(var_367_47, var_367_48, "bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily.awb")

				local var_367_49 = ""
				local var_367_50 = manager.audio:GetAudioName("bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily")

				if var_367_50 ~= "" then
					if arg_364_1.bgmTxt_.text ~= var_367_50 and arg_364_1.bgmTxt_.text ~= "" then
						if arg_364_1.bgmTxt2_.text ~= "" then
							arg_364_1.bgmTxt_.text = arg_364_1.bgmTxt2_.text
						end

						arg_364_1.bgmTxt2_.text = var_367_50

						arg_364_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_364_1.bgmTxt_.text = var_367_50
					end

					if arg_364_1.bgmTimer then
						arg_364_1.bgmTimer:Stop()

						arg_364_1.bgmTimer = nil
					end

					if arg_364_1.settingData.show_music_name == 1 then
						arg_364_1.musicController:SetSelectedState("show")
						arg_364_1.musicAnimator_:Play("open", 0, 0)

						if arg_364_1.settingData.music_time ~= 0 then
							arg_364_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_364_1.settingData.music_time), function()
								if arg_364_1 == nil or isNil(arg_364_1.bgmTxt_) then
									return
								end

								arg_364_1.musicController:SetSelectedState("hide")
								arg_364_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_367_51 = 2
			local var_367_52 = 1.6

			if var_367_51 < arg_364_1.time_ and arg_364_1.time_ <= var_367_51 + arg_367_0 then
				arg_364_1.talkMaxDuration = 0
				arg_364_1.dialogCg_.alpha = 1

				arg_364_1.dialog_:SetActive(true)
				SetActive(arg_364_1.leftNameGo_, false)

				arg_364_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_364_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_364_1:RecordName(arg_364_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_364_1.iconTrs_.gameObject, false)
				arg_364_1.callingController_:SetSelectedState("normal")

				local var_367_53 = arg_364_1:GetWordFromCfg(417161089)
				local var_367_54 = arg_364_1:FormatText(var_367_53.content)

				arg_364_1.text_.text = var_367_54

				LuaForUtil.ClearLinePrefixSymbol(arg_364_1.text_)

				local var_367_55 = 36
				local var_367_56 = utf8.len(var_367_54)
				local var_367_57 = var_367_55 <= 0 and var_367_52 or var_367_52 * (var_367_56 / var_367_55)

				if var_367_57 > 0 and var_367_52 < var_367_57 then
					arg_364_1.talkMaxDuration = var_367_57

					if var_367_57 + var_367_51 > arg_364_1.duration_ then
						arg_364_1.duration_ = var_367_57 + var_367_51
					end
				end

				arg_364_1.text_.text = var_367_54
				arg_364_1.typewritter.percent = 0

				arg_364_1.typewritter:SetDirty()
				arg_364_1:ShowNextGo(false)
				arg_364_1:RecordContent(arg_364_1.text_.text)
			end

			local var_367_58 = math.max(var_367_52, arg_364_1.talkMaxDuration)

			if var_367_51 <= arg_364_1.time_ and arg_364_1.time_ < var_367_51 + var_367_58 then
				arg_364_1.typewritter.percent = (arg_364_1.time_ - var_367_51) / var_367_58

				arg_364_1.typewritter:SetDirty()
			end

			if arg_364_1.time_ >= var_367_51 + var_367_58 and arg_364_1.time_ < var_367_51 + var_367_58 + arg_367_0 then
				arg_364_1.typewritter.percent = 1

				arg_364_1.typewritter:SetDirty()
				arg_364_1:ShowNextGo(true)
			end
		end
	end,
	Play417161090 = function(arg_370_0, arg_370_1)
		arg_370_1.time_ = 0
		arg_370_1.frameCnt_ = 0
		arg_370_1.state_ = "playing"
		arg_370_1.curTalkId_ = 417161090
		arg_370_1.duration_ = 5

		SetActive(arg_370_1.tipsGo_, false)

		function arg_370_1.onSingleLineFinish_()
			arg_370_1.onSingleLineUpdate_ = nil
			arg_370_1.onSingleLineFinish_ = nil
			arg_370_1.state_ = "waiting"
		end

		function arg_370_1.playNext_(arg_372_0)
			if arg_372_0 == 1 then
				arg_370_0:Play417161091(arg_370_1)
			end
		end

		function arg_370_1.onSingleLineUpdate_(arg_373_0)
			local var_373_0 = 0
			local var_373_1 = 1.6

			if var_373_0 < arg_370_1.time_ and arg_370_1.time_ <= var_373_0 + arg_373_0 then
				arg_370_1.talkMaxDuration = 0
				arg_370_1.dialogCg_.alpha = 1

				arg_370_1.dialog_:SetActive(true)
				SetActive(arg_370_1.leftNameGo_, false)

				arg_370_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_370_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_370_1:RecordName(arg_370_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_370_1.iconTrs_.gameObject, false)
				arg_370_1.callingController_:SetSelectedState("normal")

				local var_373_2 = arg_370_1:GetWordFromCfg(417161090)
				local var_373_3 = arg_370_1:FormatText(var_373_2.content)

				arg_370_1.text_.text = var_373_3

				LuaForUtil.ClearLinePrefixSymbol(arg_370_1.text_)

				local var_373_4 = 38
				local var_373_5 = utf8.len(var_373_3)
				local var_373_6 = var_373_4 <= 0 and var_373_1 or var_373_1 * (var_373_5 / var_373_4)

				if var_373_6 > 0 and var_373_1 < var_373_6 then
					arg_370_1.talkMaxDuration = var_373_6

					if var_373_6 + var_373_0 > arg_370_1.duration_ then
						arg_370_1.duration_ = var_373_6 + var_373_0
					end
				end

				arg_370_1.text_.text = var_373_3
				arg_370_1.typewritter.percent = 0

				arg_370_1.typewritter:SetDirty()
				arg_370_1:ShowNextGo(false)
				arg_370_1:RecordContent(arg_370_1.text_.text)
			end

			local var_373_7 = math.max(var_373_1, arg_370_1.talkMaxDuration)

			if var_373_0 <= arg_370_1.time_ and arg_370_1.time_ < var_373_0 + var_373_7 then
				arg_370_1.typewritter.percent = (arg_370_1.time_ - var_373_0) / var_373_7

				arg_370_1.typewritter:SetDirty()
			end

			if arg_370_1.time_ >= var_373_0 + var_373_7 and arg_370_1.time_ < var_373_0 + var_373_7 + arg_373_0 then
				arg_370_1.typewritter.percent = 1

				arg_370_1.typewritter:SetDirty()
				arg_370_1:ShowNextGo(true)
			end
		end
	end,
	Play417161091 = function(arg_374_0, arg_374_1)
		arg_374_1.time_ = 0
		arg_374_1.frameCnt_ = 0
		arg_374_1.state_ = "playing"
		arg_374_1.curTalkId_ = 417161091
		arg_374_1.duration_ = 5

		SetActive(arg_374_1.tipsGo_, false)

		function arg_374_1.onSingleLineFinish_()
			arg_374_1.onSingleLineUpdate_ = nil
			arg_374_1.onSingleLineFinish_ = nil
			arg_374_1.state_ = "waiting"
		end

		function arg_374_1.playNext_(arg_376_0)
			if arg_376_0 == 1 then
				arg_374_0:Play417161092(arg_374_1)
			end
		end

		function arg_374_1.onSingleLineUpdate_(arg_377_0)
			local var_377_0 = 1.6
			local var_377_1 = 1

			if var_377_0 < arg_374_1.time_ and arg_374_1.time_ <= var_377_0 + arg_377_0 then
				local var_377_2 = "play"
				local var_377_3 = "effect"

				arg_374_1:AudioAction(var_377_2, var_377_3, "se_story_1311", "se_story_1311_clap01", "")
			end

			local var_377_4 = 0
			local var_377_5 = 1.6

			if var_377_4 < arg_374_1.time_ and arg_374_1.time_ <= var_377_4 + arg_377_0 then
				arg_374_1.talkMaxDuration = 0
				arg_374_1.dialogCg_.alpha = 1

				arg_374_1.dialog_:SetActive(true)
				SetActive(arg_374_1.leftNameGo_, false)

				arg_374_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_374_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_374_1:RecordName(arg_374_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_374_1.iconTrs_.gameObject, false)
				arg_374_1.callingController_:SetSelectedState("normal")

				local var_377_6 = arg_374_1:GetWordFromCfg(417161091)
				local var_377_7 = arg_374_1:FormatText(var_377_6.content)

				arg_374_1.text_.text = var_377_7

				LuaForUtil.ClearLinePrefixSymbol(arg_374_1.text_)

				local var_377_8 = 64
				local var_377_9 = utf8.len(var_377_7)
				local var_377_10 = var_377_8 <= 0 and var_377_5 or var_377_5 * (var_377_9 / var_377_8)

				if var_377_10 > 0 and var_377_5 < var_377_10 then
					arg_374_1.talkMaxDuration = var_377_10

					if var_377_10 + var_377_4 > arg_374_1.duration_ then
						arg_374_1.duration_ = var_377_10 + var_377_4
					end
				end

				arg_374_1.text_.text = var_377_7
				arg_374_1.typewritter.percent = 0

				arg_374_1.typewritter:SetDirty()
				arg_374_1:ShowNextGo(false)
				arg_374_1:RecordContent(arg_374_1.text_.text)
			end

			local var_377_11 = math.max(var_377_5, arg_374_1.talkMaxDuration)

			if var_377_4 <= arg_374_1.time_ and arg_374_1.time_ < var_377_4 + var_377_11 then
				arg_374_1.typewritter.percent = (arg_374_1.time_ - var_377_4) / var_377_11

				arg_374_1.typewritter:SetDirty()
			end

			if arg_374_1.time_ >= var_377_4 + var_377_11 and arg_374_1.time_ < var_377_4 + var_377_11 + arg_377_0 then
				arg_374_1.typewritter.percent = 1

				arg_374_1.typewritter:SetDirty()
				arg_374_1:ShowNextGo(true)
			end
		end
	end,
	Play417161092 = function(arg_378_0, arg_378_1)
		arg_378_1.time_ = 0
		arg_378_1.frameCnt_ = 0
		arg_378_1.state_ = "playing"
		arg_378_1.curTalkId_ = 417161092
		arg_378_1.duration_ = 2.47

		local var_378_0 = {
			zh = 2.166,
			ja = 2.466
		}
		local var_378_1 = manager.audio:GetLocalizationFlag()

		if var_378_0[var_378_1] ~= nil then
			arg_378_1.duration_ = var_378_0[var_378_1]
		end

		SetActive(arg_378_1.tipsGo_, false)

		function arg_378_1.onSingleLineFinish_()
			arg_378_1.onSingleLineUpdate_ = nil
			arg_378_1.onSingleLineFinish_ = nil
			arg_378_1.state_ = "waiting"
		end

		function arg_378_1.playNext_(arg_380_0)
			if arg_380_0 == 1 then
				arg_378_0:Play417161093(arg_378_1)
			end
		end

		function arg_378_1.onSingleLineUpdate_(arg_381_0)
			local var_381_0 = arg_378_1.actors_["1060"]
			local var_381_1 = 0

			if var_381_1 < arg_378_1.time_ and arg_378_1.time_ <= var_381_1 + arg_381_0 and not isNil(var_381_0) and arg_378_1.var_.actorSpriteComps1060 == nil then
				arg_378_1.var_.actorSpriteComps1060 = var_381_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_381_2 = 0.2

			if var_381_1 <= arg_378_1.time_ and arg_378_1.time_ < var_381_1 + var_381_2 and not isNil(var_381_0) then
				local var_381_3 = (arg_378_1.time_ - var_381_1) / var_381_2

				if arg_378_1.var_.actorSpriteComps1060 then
					for iter_381_0, iter_381_1 in pairs(arg_378_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_381_1 then
							if arg_378_1.isInRecall_ then
								local var_381_4 = Mathf.Lerp(iter_381_1.color.r, arg_378_1.hightColor1.r, var_381_3)
								local var_381_5 = Mathf.Lerp(iter_381_1.color.g, arg_378_1.hightColor1.g, var_381_3)
								local var_381_6 = Mathf.Lerp(iter_381_1.color.b, arg_378_1.hightColor1.b, var_381_3)

								iter_381_1.color = Color.New(var_381_4, var_381_5, var_381_6)
							else
								local var_381_7 = Mathf.Lerp(iter_381_1.color.r, 1, var_381_3)

								iter_381_1.color = Color.New(var_381_7, var_381_7, var_381_7)
							end
						end
					end
				end
			end

			if arg_378_1.time_ >= var_381_1 + var_381_2 and arg_378_1.time_ < var_381_1 + var_381_2 + arg_381_0 and not isNil(var_381_0) and arg_378_1.var_.actorSpriteComps1060 then
				for iter_381_2, iter_381_3 in pairs(arg_378_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_381_3 then
						if arg_378_1.isInRecall_ then
							iter_381_3.color = arg_378_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_381_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_378_1.var_.actorSpriteComps1060 = nil
			end

			local var_381_8 = arg_378_1.actors_["1060"].transform
			local var_381_9 = 0

			if var_381_9 < arg_378_1.time_ and arg_378_1.time_ <= var_381_9 + arg_381_0 then
				arg_378_1.var_.moveOldPos1060 = var_381_8.localPosition
				var_381_8.localScale = Vector3.New(1, 1, 1)

				arg_378_1:CheckSpriteTmpPos("1060", 3)

				local var_381_10 = var_381_8.childCount

				for iter_381_4 = 0, var_381_10 - 1 do
					local var_381_11 = var_381_8:GetChild(iter_381_4)

					if var_381_11.name == "split_2" or not string.find(var_381_11.name, "split") then
						var_381_11.gameObject:SetActive(true)
					else
						var_381_11.gameObject:SetActive(false)
					end
				end
			end

			local var_381_12 = 0.001

			if var_381_9 <= arg_378_1.time_ and arg_378_1.time_ < var_381_9 + var_381_12 then
				local var_381_13 = (arg_378_1.time_ - var_381_9) / var_381_12
				local var_381_14 = Vector3.New(33.4, -430.8, 6.9)

				var_381_8.localPosition = Vector3.Lerp(arg_378_1.var_.moveOldPos1060, var_381_14, var_381_13)
			end

			if arg_378_1.time_ >= var_381_9 + var_381_12 and arg_378_1.time_ < var_381_9 + var_381_12 + arg_381_0 then
				var_381_8.localPosition = Vector3.New(33.4, -430.8, 6.9)
			end

			local var_381_15 = manager.ui.mainCamera.transform
			local var_381_16 = 0

			if var_381_16 < arg_378_1.time_ and arg_378_1.time_ <= var_381_16 + arg_381_0 then
				local var_381_17 = arg_378_1.var_.effect1036

				if var_381_17 then
					Object.Destroy(var_381_17)

					arg_378_1.var_.effect1036 = nil
				end
			end

			local var_381_18 = 0
			local var_381_19 = 0.2

			if var_381_18 < arg_378_1.time_ and arg_378_1.time_ <= var_381_18 + arg_381_0 then
				arg_378_1.talkMaxDuration = 0
				arg_378_1.dialogCg_.alpha = 1

				arg_378_1.dialog_:SetActive(true)
				SetActive(arg_378_1.leftNameGo_, true)

				local var_381_20 = arg_378_1:FormatText(StoryNameCfg[584].name)

				arg_378_1.leftNameTxt_.text = var_381_20

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_378_1.leftNameTxt_.transform)

				arg_378_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_378_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_378_1:RecordName(arg_378_1.leftNameTxt_.text)
				SetActive(arg_378_1.iconTrs_.gameObject, false)
				arg_378_1.callingController_:SetSelectedState("normal")

				local var_381_21 = arg_378_1:GetWordFromCfg(417161092)
				local var_381_22 = arg_378_1:FormatText(var_381_21.content)

				arg_378_1.text_.text = var_381_22

				LuaForUtil.ClearLinePrefixSymbol(arg_378_1.text_)

				local var_381_23 = 8
				local var_381_24 = utf8.len(var_381_22)
				local var_381_25 = var_381_23 <= 0 and var_381_19 or var_381_19 * (var_381_24 / var_381_23)

				if var_381_25 > 0 and var_381_19 < var_381_25 then
					arg_378_1.talkMaxDuration = var_381_25

					if var_381_25 + var_381_18 > arg_378_1.duration_ then
						arg_378_1.duration_ = var_381_25 + var_381_18
					end
				end

				arg_378_1.text_.text = var_381_22
				arg_378_1.typewritter.percent = 0

				arg_378_1.typewritter:SetDirty()
				arg_378_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161092", "story_v_out_417161.awb") ~= 0 then
					local var_381_26 = manager.audio:GetVoiceLength("story_v_out_417161", "417161092", "story_v_out_417161.awb") / 1000

					if var_381_26 + var_381_18 > arg_378_1.duration_ then
						arg_378_1.duration_ = var_381_26 + var_381_18
					end

					if var_381_21.prefab_name ~= "" and arg_378_1.actors_[var_381_21.prefab_name] ~= nil then
						local var_381_27 = LuaForUtil.PlayVoiceWithCriLipsync(arg_378_1.actors_[var_381_21.prefab_name].transform, "story_v_out_417161", "417161092", "story_v_out_417161.awb")

						arg_378_1:RecordAudio("417161092", var_381_27)
						arg_378_1:RecordAudio("417161092", var_381_27)
					else
						arg_378_1:AudioAction("play", "voice", "story_v_out_417161", "417161092", "story_v_out_417161.awb")
					end

					arg_378_1:RecordHistoryTalkVoice("story_v_out_417161", "417161092", "story_v_out_417161.awb")
				end

				arg_378_1:RecordContent(arg_378_1.text_.text)
			end

			local var_381_28 = math.max(var_381_19, arg_378_1.talkMaxDuration)

			if var_381_18 <= arg_378_1.time_ and arg_378_1.time_ < var_381_18 + var_381_28 then
				arg_378_1.typewritter.percent = (arg_378_1.time_ - var_381_18) / var_381_28

				arg_378_1.typewritter:SetDirty()
			end

			if arg_378_1.time_ >= var_381_18 + var_381_28 and arg_378_1.time_ < var_381_18 + var_381_28 + arg_381_0 then
				arg_378_1.typewritter.percent = 1

				arg_378_1.typewritter:SetDirty()
				arg_378_1:ShowNextGo(true)
			end
		end
	end,
	Play417161093 = function(arg_382_0, arg_382_1)
		arg_382_1.time_ = 0
		arg_382_1.frameCnt_ = 0
		arg_382_1.state_ = "playing"
		arg_382_1.curTalkId_ = 417161093
		arg_382_1.duration_ = 2.63

		local var_382_0 = {
			zh = 1.433,
			ja = 2.633
		}
		local var_382_1 = manager.audio:GetLocalizationFlag()

		if var_382_0[var_382_1] ~= nil then
			arg_382_1.duration_ = var_382_0[var_382_1]
		end

		SetActive(arg_382_1.tipsGo_, false)

		function arg_382_1.onSingleLineFinish_()
			arg_382_1.onSingleLineUpdate_ = nil
			arg_382_1.onSingleLineFinish_ = nil
			arg_382_1.state_ = "waiting"
		end

		function arg_382_1.playNext_(arg_384_0)
			if arg_384_0 == 1 then
				arg_382_0:Play417161094(arg_382_1)
			end
		end

		function arg_382_1.onSingleLineUpdate_(arg_385_0)
			local var_385_0 = arg_382_1.actors_["10128"]
			local var_385_1 = 0

			if var_385_1 < arg_382_1.time_ and arg_382_1.time_ <= var_385_1 + arg_385_0 and not isNil(var_385_0) and arg_382_1.var_.actorSpriteComps10128 == nil then
				arg_382_1.var_.actorSpriteComps10128 = var_385_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_385_2 = 0.2

			if var_385_1 <= arg_382_1.time_ and arg_382_1.time_ < var_385_1 + var_385_2 and not isNil(var_385_0) then
				local var_385_3 = (arg_382_1.time_ - var_385_1) / var_385_2

				if arg_382_1.var_.actorSpriteComps10128 then
					for iter_385_0, iter_385_1 in pairs(arg_382_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_385_1 then
							if arg_382_1.isInRecall_ then
								local var_385_4 = Mathf.Lerp(iter_385_1.color.r, arg_382_1.hightColor1.r, var_385_3)
								local var_385_5 = Mathf.Lerp(iter_385_1.color.g, arg_382_1.hightColor1.g, var_385_3)
								local var_385_6 = Mathf.Lerp(iter_385_1.color.b, arg_382_1.hightColor1.b, var_385_3)

								iter_385_1.color = Color.New(var_385_4, var_385_5, var_385_6)
							else
								local var_385_7 = Mathf.Lerp(iter_385_1.color.r, 1, var_385_3)

								iter_385_1.color = Color.New(var_385_7, var_385_7, var_385_7)
							end
						end
					end
				end
			end

			if arg_382_1.time_ >= var_385_1 + var_385_2 and arg_382_1.time_ < var_385_1 + var_385_2 + arg_385_0 and not isNil(var_385_0) and arg_382_1.var_.actorSpriteComps10128 then
				for iter_385_2, iter_385_3 in pairs(arg_382_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_385_3 then
						if arg_382_1.isInRecall_ then
							iter_385_3.color = arg_382_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_385_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_382_1.var_.actorSpriteComps10128 = nil
			end

			local var_385_8 = arg_382_1.actors_["1060"]
			local var_385_9 = 0

			if var_385_9 < arg_382_1.time_ and arg_382_1.time_ <= var_385_9 + arg_385_0 and not isNil(var_385_8) and arg_382_1.var_.actorSpriteComps1060 == nil then
				arg_382_1.var_.actorSpriteComps1060 = var_385_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_385_10 = 0.2

			if var_385_9 <= arg_382_1.time_ and arg_382_1.time_ < var_385_9 + var_385_10 and not isNil(var_385_8) then
				local var_385_11 = (arg_382_1.time_ - var_385_9) / var_385_10

				if arg_382_1.var_.actorSpriteComps1060 then
					for iter_385_4, iter_385_5 in pairs(arg_382_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_385_5 then
							if arg_382_1.isInRecall_ then
								local var_385_12 = Mathf.Lerp(iter_385_5.color.r, arg_382_1.hightColor2.r, var_385_11)
								local var_385_13 = Mathf.Lerp(iter_385_5.color.g, arg_382_1.hightColor2.g, var_385_11)
								local var_385_14 = Mathf.Lerp(iter_385_5.color.b, arg_382_1.hightColor2.b, var_385_11)

								iter_385_5.color = Color.New(var_385_12, var_385_13, var_385_14)
							else
								local var_385_15 = Mathf.Lerp(iter_385_5.color.r, 0.5, var_385_11)

								iter_385_5.color = Color.New(var_385_15, var_385_15, var_385_15)
							end
						end
					end
				end
			end

			if arg_382_1.time_ >= var_385_9 + var_385_10 and arg_382_1.time_ < var_385_9 + var_385_10 + arg_385_0 and not isNil(var_385_8) and arg_382_1.var_.actorSpriteComps1060 then
				for iter_385_6, iter_385_7 in pairs(arg_382_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_385_7 then
						if arg_382_1.isInRecall_ then
							iter_385_7.color = arg_382_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_385_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_382_1.var_.actorSpriteComps1060 = nil
			end

			local var_385_16 = arg_382_1.actors_["10128"].transform
			local var_385_17 = 0

			if var_385_17 < arg_382_1.time_ and arg_382_1.time_ <= var_385_17 + arg_385_0 then
				arg_382_1.var_.moveOldPos10128 = var_385_16.localPosition
				var_385_16.localScale = Vector3.New(1, 1, 1)

				arg_382_1:CheckSpriteTmpPos("10128", 3)

				local var_385_18 = var_385_16.childCount

				for iter_385_8 = 0, var_385_18 - 1 do
					local var_385_19 = var_385_16:GetChild(iter_385_8)

					if var_385_19.name == "" or not string.find(var_385_19.name, "split") then
						var_385_19.gameObject:SetActive(true)
					else
						var_385_19.gameObject:SetActive(false)
					end
				end
			end

			local var_385_20 = 0.001

			if var_385_17 <= arg_382_1.time_ and arg_382_1.time_ < var_385_17 + var_385_20 then
				local var_385_21 = (arg_382_1.time_ - var_385_17) / var_385_20
				local var_385_22 = Vector3.New(0, -347, -300)

				var_385_16.localPosition = Vector3.Lerp(arg_382_1.var_.moveOldPos10128, var_385_22, var_385_21)
			end

			if arg_382_1.time_ >= var_385_17 + var_385_20 and arg_382_1.time_ < var_385_17 + var_385_20 + arg_385_0 then
				var_385_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_385_23 = arg_382_1.actors_["1060"].transform
			local var_385_24 = 0

			if var_385_24 < arg_382_1.time_ and arg_382_1.time_ <= var_385_24 + arg_385_0 then
				arg_382_1.var_.moveOldPos1060 = var_385_23.localPosition
				var_385_23.localScale = Vector3.New(1, 1, 1)

				arg_382_1:CheckSpriteTmpPos("1060", 7)

				local var_385_25 = var_385_23.childCount

				for iter_385_9 = 0, var_385_25 - 1 do
					local var_385_26 = var_385_23:GetChild(iter_385_9)

					if var_385_26.name == "" or not string.find(var_385_26.name, "split") then
						var_385_26.gameObject:SetActive(true)
					else
						var_385_26.gameObject:SetActive(false)
					end
				end
			end

			local var_385_27 = 0.001

			if var_385_24 <= arg_382_1.time_ and arg_382_1.time_ < var_385_24 + var_385_27 then
				local var_385_28 = (arg_382_1.time_ - var_385_24) / var_385_27
				local var_385_29 = Vector3.New(0, -2000, -40)

				var_385_23.localPosition = Vector3.Lerp(arg_382_1.var_.moveOldPos1060, var_385_29, var_385_28)
			end

			if arg_382_1.time_ >= var_385_24 + var_385_27 and arg_382_1.time_ < var_385_24 + var_385_27 + arg_385_0 then
				var_385_23.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_385_30 = 0
			local var_385_31 = 0.1

			if var_385_30 < arg_382_1.time_ and arg_382_1.time_ <= var_385_30 + arg_385_0 then
				arg_382_1.talkMaxDuration = 0
				arg_382_1.dialogCg_.alpha = 1

				arg_382_1.dialog_:SetActive(true)
				SetActive(arg_382_1.leftNameGo_, true)

				local var_385_32 = arg_382_1:FormatText(StoryNameCfg[595].name)

				arg_382_1.leftNameTxt_.text = var_385_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_382_1.leftNameTxt_.transform)

				arg_382_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_382_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_382_1:RecordName(arg_382_1.leftNameTxt_.text)
				SetActive(arg_382_1.iconTrs_.gameObject, false)
				arg_382_1.callingController_:SetSelectedState("normal")

				local var_385_33 = arg_382_1:GetWordFromCfg(417161093)
				local var_385_34 = arg_382_1:FormatText(var_385_33.content)

				arg_382_1.text_.text = var_385_34

				LuaForUtil.ClearLinePrefixSymbol(arg_382_1.text_)

				local var_385_35 = 4
				local var_385_36 = utf8.len(var_385_34)
				local var_385_37 = var_385_35 <= 0 and var_385_31 or var_385_31 * (var_385_36 / var_385_35)

				if var_385_37 > 0 and var_385_31 < var_385_37 then
					arg_382_1.talkMaxDuration = var_385_37

					if var_385_37 + var_385_30 > arg_382_1.duration_ then
						arg_382_1.duration_ = var_385_37 + var_385_30
					end
				end

				arg_382_1.text_.text = var_385_34
				arg_382_1.typewritter.percent = 0

				arg_382_1.typewritter:SetDirty()
				arg_382_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161093", "story_v_out_417161.awb") ~= 0 then
					local var_385_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161093", "story_v_out_417161.awb") / 1000

					if var_385_38 + var_385_30 > arg_382_1.duration_ then
						arg_382_1.duration_ = var_385_38 + var_385_30
					end

					if var_385_33.prefab_name ~= "" and arg_382_1.actors_[var_385_33.prefab_name] ~= nil then
						local var_385_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_382_1.actors_[var_385_33.prefab_name].transform, "story_v_out_417161", "417161093", "story_v_out_417161.awb")

						arg_382_1:RecordAudio("417161093", var_385_39)
						arg_382_1:RecordAudio("417161093", var_385_39)
					else
						arg_382_1:AudioAction("play", "voice", "story_v_out_417161", "417161093", "story_v_out_417161.awb")
					end

					arg_382_1:RecordHistoryTalkVoice("story_v_out_417161", "417161093", "story_v_out_417161.awb")
				end

				arg_382_1:RecordContent(arg_382_1.text_.text)
			end

			local var_385_40 = math.max(var_385_31, arg_382_1.talkMaxDuration)

			if var_385_30 <= arg_382_1.time_ and arg_382_1.time_ < var_385_30 + var_385_40 then
				arg_382_1.typewritter.percent = (arg_382_1.time_ - var_385_30) / var_385_40

				arg_382_1.typewritter:SetDirty()
			end

			if arg_382_1.time_ >= var_385_30 + var_385_40 and arg_382_1.time_ < var_385_30 + var_385_40 + arg_385_0 then
				arg_382_1.typewritter.percent = 1

				arg_382_1.typewritter:SetDirty()
				arg_382_1:ShowNextGo(true)
			end
		end
	end,
	Play417161094 = function(arg_386_0, arg_386_1)
		arg_386_1.time_ = 0
		arg_386_1.frameCnt_ = 0
		arg_386_1.state_ = "playing"
		arg_386_1.curTalkId_ = 417161094
		arg_386_1.duration_ = 6.23

		local var_386_0 = {
			zh = 5.033,
			ja = 6.233
		}
		local var_386_1 = manager.audio:GetLocalizationFlag()

		if var_386_0[var_386_1] ~= nil then
			arg_386_1.duration_ = var_386_0[var_386_1]
		end

		SetActive(arg_386_1.tipsGo_, false)

		function arg_386_1.onSingleLineFinish_()
			arg_386_1.onSingleLineUpdate_ = nil
			arg_386_1.onSingleLineFinish_ = nil
			arg_386_1.state_ = "waiting"
		end

		function arg_386_1.playNext_(arg_388_0)
			if arg_388_0 == 1 then
				arg_386_0:Play417161095(arg_386_1)
			end
		end

		function arg_386_1.onSingleLineUpdate_(arg_389_0)
			local var_389_0 = arg_386_1.actors_["1060"]
			local var_389_1 = 0

			if var_389_1 < arg_386_1.time_ and arg_386_1.time_ <= var_389_1 + arg_389_0 and not isNil(var_389_0) and arg_386_1.var_.actorSpriteComps1060 == nil then
				arg_386_1.var_.actorSpriteComps1060 = var_389_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_389_2 = 0.2

			if var_389_1 <= arg_386_1.time_ and arg_386_1.time_ < var_389_1 + var_389_2 and not isNil(var_389_0) then
				local var_389_3 = (arg_386_1.time_ - var_389_1) / var_389_2

				if arg_386_1.var_.actorSpriteComps1060 then
					for iter_389_0, iter_389_1 in pairs(arg_386_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_389_1 then
							if arg_386_1.isInRecall_ then
								local var_389_4 = Mathf.Lerp(iter_389_1.color.r, arg_386_1.hightColor1.r, var_389_3)
								local var_389_5 = Mathf.Lerp(iter_389_1.color.g, arg_386_1.hightColor1.g, var_389_3)
								local var_389_6 = Mathf.Lerp(iter_389_1.color.b, arg_386_1.hightColor1.b, var_389_3)

								iter_389_1.color = Color.New(var_389_4, var_389_5, var_389_6)
							else
								local var_389_7 = Mathf.Lerp(iter_389_1.color.r, 1, var_389_3)

								iter_389_1.color = Color.New(var_389_7, var_389_7, var_389_7)
							end
						end
					end
				end
			end

			if arg_386_1.time_ >= var_389_1 + var_389_2 and arg_386_1.time_ < var_389_1 + var_389_2 + arg_389_0 and not isNil(var_389_0) and arg_386_1.var_.actorSpriteComps1060 then
				for iter_389_2, iter_389_3 in pairs(arg_386_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_389_3 then
						if arg_386_1.isInRecall_ then
							iter_389_3.color = arg_386_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_389_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_386_1.var_.actorSpriteComps1060 = nil
			end

			local var_389_8 = arg_386_1.actors_["10128"]
			local var_389_9 = 0

			if var_389_9 < arg_386_1.time_ and arg_386_1.time_ <= var_389_9 + arg_389_0 and not isNil(var_389_8) and arg_386_1.var_.actorSpriteComps10128 == nil then
				arg_386_1.var_.actorSpriteComps10128 = var_389_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_389_10 = 0.2

			if var_389_9 <= arg_386_1.time_ and arg_386_1.time_ < var_389_9 + var_389_10 and not isNil(var_389_8) then
				local var_389_11 = (arg_386_1.time_ - var_389_9) / var_389_10

				if arg_386_1.var_.actorSpriteComps10128 then
					for iter_389_4, iter_389_5 in pairs(arg_386_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_389_5 then
							if arg_386_1.isInRecall_ then
								local var_389_12 = Mathf.Lerp(iter_389_5.color.r, arg_386_1.hightColor2.r, var_389_11)
								local var_389_13 = Mathf.Lerp(iter_389_5.color.g, arg_386_1.hightColor2.g, var_389_11)
								local var_389_14 = Mathf.Lerp(iter_389_5.color.b, arg_386_1.hightColor2.b, var_389_11)

								iter_389_5.color = Color.New(var_389_12, var_389_13, var_389_14)
							else
								local var_389_15 = Mathf.Lerp(iter_389_5.color.r, 0.5, var_389_11)

								iter_389_5.color = Color.New(var_389_15, var_389_15, var_389_15)
							end
						end
					end
				end
			end

			if arg_386_1.time_ >= var_389_9 + var_389_10 and arg_386_1.time_ < var_389_9 + var_389_10 + arg_389_0 and not isNil(var_389_8) and arg_386_1.var_.actorSpriteComps10128 then
				for iter_389_6, iter_389_7 in pairs(arg_386_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_389_7 then
						if arg_386_1.isInRecall_ then
							iter_389_7.color = arg_386_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_389_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_386_1.var_.actorSpriteComps10128 = nil
			end

			local var_389_16 = arg_386_1.actors_["10128"].transform
			local var_389_17 = 0

			if var_389_17 < arg_386_1.time_ and arg_386_1.time_ <= var_389_17 + arg_389_0 then
				arg_386_1.var_.moveOldPos10128 = var_389_16.localPosition
				var_389_16.localScale = Vector3.New(1, 1, 1)

				arg_386_1:CheckSpriteTmpPos("10128", 2)

				local var_389_18 = var_389_16.childCount

				for iter_389_8 = 0, var_389_18 - 1 do
					local var_389_19 = var_389_16:GetChild(iter_389_8)

					if var_389_19.name == "" or not string.find(var_389_19.name, "split") then
						var_389_19.gameObject:SetActive(true)
					else
						var_389_19.gameObject:SetActive(false)
					end
				end
			end

			local var_389_20 = 0.001

			if var_389_17 <= arg_386_1.time_ and arg_386_1.time_ < var_389_17 + var_389_20 then
				local var_389_21 = (arg_386_1.time_ - var_389_17) / var_389_20
				local var_389_22 = Vector3.New(-390, -347, -300)

				var_389_16.localPosition = Vector3.Lerp(arg_386_1.var_.moveOldPos10128, var_389_22, var_389_21)
			end

			if arg_386_1.time_ >= var_389_17 + var_389_20 and arg_386_1.time_ < var_389_17 + var_389_20 + arg_389_0 then
				var_389_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_389_23 = arg_386_1.actors_["1060"].transform
			local var_389_24 = 0

			if var_389_24 < arg_386_1.time_ and arg_386_1.time_ <= var_389_24 + arg_389_0 then
				arg_386_1.var_.moveOldPos1060 = var_389_23.localPosition
				var_389_23.localScale = Vector3.New(1, 1, 1)

				arg_386_1:CheckSpriteTmpPos("1060", 4)

				local var_389_25 = var_389_23.childCount

				for iter_389_9 = 0, var_389_25 - 1 do
					local var_389_26 = var_389_23:GetChild(iter_389_9)

					if var_389_26.name == "" or not string.find(var_389_26.name, "split") then
						var_389_26.gameObject:SetActive(true)
					else
						var_389_26.gameObject:SetActive(false)
					end
				end
			end

			local var_389_27 = 0.001

			if var_389_24 <= arg_386_1.time_ and arg_386_1.time_ < var_389_24 + var_389_27 then
				local var_389_28 = (arg_386_1.time_ - var_389_24) / var_389_27
				local var_389_29 = Vector3.New(420.9, -430.8, 6.9)

				var_389_23.localPosition = Vector3.Lerp(arg_386_1.var_.moveOldPos1060, var_389_29, var_389_28)
			end

			if arg_386_1.time_ >= var_389_24 + var_389_27 and arg_386_1.time_ < var_389_24 + var_389_27 + arg_389_0 then
				var_389_23.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_389_30 = 0
			local var_389_31 = 0.55

			if var_389_30 < arg_386_1.time_ and arg_386_1.time_ <= var_389_30 + arg_389_0 then
				arg_386_1.talkMaxDuration = 0
				arg_386_1.dialogCg_.alpha = 1

				arg_386_1.dialog_:SetActive(true)
				SetActive(arg_386_1.leftNameGo_, true)

				local var_389_32 = arg_386_1:FormatText(StoryNameCfg[584].name)

				arg_386_1.leftNameTxt_.text = var_389_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_386_1.leftNameTxt_.transform)

				arg_386_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_386_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_386_1:RecordName(arg_386_1.leftNameTxt_.text)
				SetActive(arg_386_1.iconTrs_.gameObject, false)
				arg_386_1.callingController_:SetSelectedState("normal")

				local var_389_33 = arg_386_1:GetWordFromCfg(417161094)
				local var_389_34 = arg_386_1:FormatText(var_389_33.content)

				arg_386_1.text_.text = var_389_34

				LuaForUtil.ClearLinePrefixSymbol(arg_386_1.text_)

				local var_389_35 = 22
				local var_389_36 = utf8.len(var_389_34)
				local var_389_37 = var_389_35 <= 0 and var_389_31 or var_389_31 * (var_389_36 / var_389_35)

				if var_389_37 > 0 and var_389_31 < var_389_37 then
					arg_386_1.talkMaxDuration = var_389_37

					if var_389_37 + var_389_30 > arg_386_1.duration_ then
						arg_386_1.duration_ = var_389_37 + var_389_30
					end
				end

				arg_386_1.text_.text = var_389_34
				arg_386_1.typewritter.percent = 0

				arg_386_1.typewritter:SetDirty()
				arg_386_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161094", "story_v_out_417161.awb") ~= 0 then
					local var_389_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161094", "story_v_out_417161.awb") / 1000

					if var_389_38 + var_389_30 > arg_386_1.duration_ then
						arg_386_1.duration_ = var_389_38 + var_389_30
					end

					if var_389_33.prefab_name ~= "" and arg_386_1.actors_[var_389_33.prefab_name] ~= nil then
						local var_389_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_386_1.actors_[var_389_33.prefab_name].transform, "story_v_out_417161", "417161094", "story_v_out_417161.awb")

						arg_386_1:RecordAudio("417161094", var_389_39)
						arg_386_1:RecordAudio("417161094", var_389_39)
					else
						arg_386_1:AudioAction("play", "voice", "story_v_out_417161", "417161094", "story_v_out_417161.awb")
					end

					arg_386_1:RecordHistoryTalkVoice("story_v_out_417161", "417161094", "story_v_out_417161.awb")
				end

				arg_386_1:RecordContent(arg_386_1.text_.text)
			end

			local var_389_40 = math.max(var_389_31, arg_386_1.talkMaxDuration)

			if var_389_30 <= arg_386_1.time_ and arg_386_1.time_ < var_389_30 + var_389_40 then
				arg_386_1.typewritter.percent = (arg_386_1.time_ - var_389_30) / var_389_40

				arg_386_1.typewritter:SetDirty()
			end

			if arg_386_1.time_ >= var_389_30 + var_389_40 and arg_386_1.time_ < var_389_30 + var_389_40 + arg_389_0 then
				arg_386_1.typewritter.percent = 1

				arg_386_1.typewritter:SetDirty()
				arg_386_1:ShowNextGo(true)
			end
		end
	end,
	Play417161095 = function(arg_390_0, arg_390_1)
		arg_390_1.time_ = 0
		arg_390_1.frameCnt_ = 0
		arg_390_1.state_ = "playing"
		arg_390_1.curTalkId_ = 417161095
		arg_390_1.duration_ = 8.17

		local var_390_0 = {
			zh = 5.3,
			ja = 8.166
		}
		local var_390_1 = manager.audio:GetLocalizationFlag()

		if var_390_0[var_390_1] ~= nil then
			arg_390_1.duration_ = var_390_0[var_390_1]
		end

		SetActive(arg_390_1.tipsGo_, false)

		function arg_390_1.onSingleLineFinish_()
			arg_390_1.onSingleLineUpdate_ = nil
			arg_390_1.onSingleLineFinish_ = nil
			arg_390_1.state_ = "waiting"
		end

		function arg_390_1.playNext_(arg_392_0)
			if arg_392_0 == 1 then
				arg_390_0:Play417161096(arg_390_1)
			end
		end

		function arg_390_1.onSingleLineUpdate_(arg_393_0)
			local var_393_0 = arg_390_1.actors_["10128"]
			local var_393_1 = 0

			if var_393_1 < arg_390_1.time_ and arg_390_1.time_ <= var_393_1 + arg_393_0 and not isNil(var_393_0) and arg_390_1.var_.actorSpriteComps10128 == nil then
				arg_390_1.var_.actorSpriteComps10128 = var_393_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_393_2 = 0.2

			if var_393_1 <= arg_390_1.time_ and arg_390_1.time_ < var_393_1 + var_393_2 and not isNil(var_393_0) then
				local var_393_3 = (arg_390_1.time_ - var_393_1) / var_393_2

				if arg_390_1.var_.actorSpriteComps10128 then
					for iter_393_0, iter_393_1 in pairs(arg_390_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_393_1 then
							if arg_390_1.isInRecall_ then
								local var_393_4 = Mathf.Lerp(iter_393_1.color.r, arg_390_1.hightColor1.r, var_393_3)
								local var_393_5 = Mathf.Lerp(iter_393_1.color.g, arg_390_1.hightColor1.g, var_393_3)
								local var_393_6 = Mathf.Lerp(iter_393_1.color.b, arg_390_1.hightColor1.b, var_393_3)

								iter_393_1.color = Color.New(var_393_4, var_393_5, var_393_6)
							else
								local var_393_7 = Mathf.Lerp(iter_393_1.color.r, 1, var_393_3)

								iter_393_1.color = Color.New(var_393_7, var_393_7, var_393_7)
							end
						end
					end
				end
			end

			if arg_390_1.time_ >= var_393_1 + var_393_2 and arg_390_1.time_ < var_393_1 + var_393_2 + arg_393_0 and not isNil(var_393_0) and arg_390_1.var_.actorSpriteComps10128 then
				for iter_393_2, iter_393_3 in pairs(arg_390_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_393_3 then
						if arg_390_1.isInRecall_ then
							iter_393_3.color = arg_390_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_393_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_390_1.var_.actorSpriteComps10128 = nil
			end

			local var_393_8 = arg_390_1.actors_["1060"]
			local var_393_9 = 0

			if var_393_9 < arg_390_1.time_ and arg_390_1.time_ <= var_393_9 + arg_393_0 and not isNil(var_393_8) and arg_390_1.var_.actorSpriteComps1060 == nil then
				arg_390_1.var_.actorSpriteComps1060 = var_393_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_393_10 = 0.2

			if var_393_9 <= arg_390_1.time_ and arg_390_1.time_ < var_393_9 + var_393_10 and not isNil(var_393_8) then
				local var_393_11 = (arg_390_1.time_ - var_393_9) / var_393_10

				if arg_390_1.var_.actorSpriteComps1060 then
					for iter_393_4, iter_393_5 in pairs(arg_390_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_393_5 then
							if arg_390_1.isInRecall_ then
								local var_393_12 = Mathf.Lerp(iter_393_5.color.r, arg_390_1.hightColor2.r, var_393_11)
								local var_393_13 = Mathf.Lerp(iter_393_5.color.g, arg_390_1.hightColor2.g, var_393_11)
								local var_393_14 = Mathf.Lerp(iter_393_5.color.b, arg_390_1.hightColor2.b, var_393_11)

								iter_393_5.color = Color.New(var_393_12, var_393_13, var_393_14)
							else
								local var_393_15 = Mathf.Lerp(iter_393_5.color.r, 0.5, var_393_11)

								iter_393_5.color = Color.New(var_393_15, var_393_15, var_393_15)
							end
						end
					end
				end
			end

			if arg_390_1.time_ >= var_393_9 + var_393_10 and arg_390_1.time_ < var_393_9 + var_393_10 + arg_393_0 and not isNil(var_393_8) and arg_390_1.var_.actorSpriteComps1060 then
				for iter_393_6, iter_393_7 in pairs(arg_390_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_393_7 then
						if arg_390_1.isInRecall_ then
							iter_393_7.color = arg_390_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_393_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_390_1.var_.actorSpriteComps1060 = nil
			end

			local var_393_16 = 0
			local var_393_17 = 0.775

			if var_393_16 < arg_390_1.time_ and arg_390_1.time_ <= var_393_16 + arg_393_0 then
				arg_390_1.talkMaxDuration = 0
				arg_390_1.dialogCg_.alpha = 1

				arg_390_1.dialog_:SetActive(true)
				SetActive(arg_390_1.leftNameGo_, true)

				local var_393_18 = arg_390_1:FormatText(StoryNameCfg[595].name)

				arg_390_1.leftNameTxt_.text = var_393_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_390_1.leftNameTxt_.transform)

				arg_390_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_390_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_390_1:RecordName(arg_390_1.leftNameTxt_.text)
				SetActive(arg_390_1.iconTrs_.gameObject, false)
				arg_390_1.callingController_:SetSelectedState("normal")

				local var_393_19 = arg_390_1:GetWordFromCfg(417161095)
				local var_393_20 = arg_390_1:FormatText(var_393_19.content)

				arg_390_1.text_.text = var_393_20

				LuaForUtil.ClearLinePrefixSymbol(arg_390_1.text_)

				local var_393_21 = 31
				local var_393_22 = utf8.len(var_393_20)
				local var_393_23 = var_393_21 <= 0 and var_393_17 or var_393_17 * (var_393_22 / var_393_21)

				if var_393_23 > 0 and var_393_17 < var_393_23 then
					arg_390_1.talkMaxDuration = var_393_23

					if var_393_23 + var_393_16 > arg_390_1.duration_ then
						arg_390_1.duration_ = var_393_23 + var_393_16
					end
				end

				arg_390_1.text_.text = var_393_20
				arg_390_1.typewritter.percent = 0

				arg_390_1.typewritter:SetDirty()
				arg_390_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161095", "story_v_out_417161.awb") ~= 0 then
					local var_393_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161095", "story_v_out_417161.awb") / 1000

					if var_393_24 + var_393_16 > arg_390_1.duration_ then
						arg_390_1.duration_ = var_393_24 + var_393_16
					end

					if var_393_19.prefab_name ~= "" and arg_390_1.actors_[var_393_19.prefab_name] ~= nil then
						local var_393_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_390_1.actors_[var_393_19.prefab_name].transform, "story_v_out_417161", "417161095", "story_v_out_417161.awb")

						arg_390_1:RecordAudio("417161095", var_393_25)
						arg_390_1:RecordAudio("417161095", var_393_25)
					else
						arg_390_1:AudioAction("play", "voice", "story_v_out_417161", "417161095", "story_v_out_417161.awb")
					end

					arg_390_1:RecordHistoryTalkVoice("story_v_out_417161", "417161095", "story_v_out_417161.awb")
				end

				arg_390_1:RecordContent(arg_390_1.text_.text)
			end

			local var_393_26 = math.max(var_393_17, arg_390_1.talkMaxDuration)

			if var_393_16 <= arg_390_1.time_ and arg_390_1.time_ < var_393_16 + var_393_26 then
				arg_390_1.typewritter.percent = (arg_390_1.time_ - var_393_16) / var_393_26

				arg_390_1.typewritter:SetDirty()
			end

			if arg_390_1.time_ >= var_393_16 + var_393_26 and arg_390_1.time_ < var_393_16 + var_393_26 + arg_393_0 then
				arg_390_1.typewritter.percent = 1

				arg_390_1.typewritter:SetDirty()
				arg_390_1:ShowNextGo(true)
			end
		end
	end,
	Play417161096 = function(arg_394_0, arg_394_1)
		arg_394_1.time_ = 0
		arg_394_1.frameCnt_ = 0
		arg_394_1.state_ = "playing"
		arg_394_1.curTalkId_ = 417161096
		arg_394_1.duration_ = 8.7

		local var_394_0 = {
			zh = 8.7,
			ja = 8.4
		}
		local var_394_1 = manager.audio:GetLocalizationFlag()

		if var_394_0[var_394_1] ~= nil then
			arg_394_1.duration_ = var_394_0[var_394_1]
		end

		SetActive(arg_394_1.tipsGo_, false)

		function arg_394_1.onSingleLineFinish_()
			arg_394_1.onSingleLineUpdate_ = nil
			arg_394_1.onSingleLineFinish_ = nil
			arg_394_1.state_ = "waiting"
		end

		function arg_394_1.playNext_(arg_396_0)
			if arg_396_0 == 1 then
				arg_394_0:Play417161097(arg_394_1)
			end
		end

		function arg_394_1.onSingleLineUpdate_(arg_397_0)
			local var_397_0 = arg_394_1.actors_["1060"]
			local var_397_1 = 0

			if var_397_1 < arg_394_1.time_ and arg_394_1.time_ <= var_397_1 + arg_397_0 and not isNil(var_397_0) and arg_394_1.var_.actorSpriteComps1060 == nil then
				arg_394_1.var_.actorSpriteComps1060 = var_397_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_397_2 = 0.2

			if var_397_1 <= arg_394_1.time_ and arg_394_1.time_ < var_397_1 + var_397_2 and not isNil(var_397_0) then
				local var_397_3 = (arg_394_1.time_ - var_397_1) / var_397_2

				if arg_394_1.var_.actorSpriteComps1060 then
					for iter_397_0, iter_397_1 in pairs(arg_394_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_397_1 then
							if arg_394_1.isInRecall_ then
								local var_397_4 = Mathf.Lerp(iter_397_1.color.r, arg_394_1.hightColor1.r, var_397_3)
								local var_397_5 = Mathf.Lerp(iter_397_1.color.g, arg_394_1.hightColor1.g, var_397_3)
								local var_397_6 = Mathf.Lerp(iter_397_1.color.b, arg_394_1.hightColor1.b, var_397_3)

								iter_397_1.color = Color.New(var_397_4, var_397_5, var_397_6)
							else
								local var_397_7 = Mathf.Lerp(iter_397_1.color.r, 1, var_397_3)

								iter_397_1.color = Color.New(var_397_7, var_397_7, var_397_7)
							end
						end
					end
				end
			end

			if arg_394_1.time_ >= var_397_1 + var_397_2 and arg_394_1.time_ < var_397_1 + var_397_2 + arg_397_0 and not isNil(var_397_0) and arg_394_1.var_.actorSpriteComps1060 then
				for iter_397_2, iter_397_3 in pairs(arg_394_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_397_3 then
						if arg_394_1.isInRecall_ then
							iter_397_3.color = arg_394_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_397_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_394_1.var_.actorSpriteComps1060 = nil
			end

			local var_397_8 = arg_394_1.actors_["10128"]
			local var_397_9 = 0

			if var_397_9 < arg_394_1.time_ and arg_394_1.time_ <= var_397_9 + arg_397_0 and not isNil(var_397_8) and arg_394_1.var_.actorSpriteComps10128 == nil then
				arg_394_1.var_.actorSpriteComps10128 = var_397_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_397_10 = 0.2

			if var_397_9 <= arg_394_1.time_ and arg_394_1.time_ < var_397_9 + var_397_10 and not isNil(var_397_8) then
				local var_397_11 = (arg_394_1.time_ - var_397_9) / var_397_10

				if arg_394_1.var_.actorSpriteComps10128 then
					for iter_397_4, iter_397_5 in pairs(arg_394_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_397_5 then
							if arg_394_1.isInRecall_ then
								local var_397_12 = Mathf.Lerp(iter_397_5.color.r, arg_394_1.hightColor2.r, var_397_11)
								local var_397_13 = Mathf.Lerp(iter_397_5.color.g, arg_394_1.hightColor2.g, var_397_11)
								local var_397_14 = Mathf.Lerp(iter_397_5.color.b, arg_394_1.hightColor2.b, var_397_11)

								iter_397_5.color = Color.New(var_397_12, var_397_13, var_397_14)
							else
								local var_397_15 = Mathf.Lerp(iter_397_5.color.r, 0.5, var_397_11)

								iter_397_5.color = Color.New(var_397_15, var_397_15, var_397_15)
							end
						end
					end
				end
			end

			if arg_394_1.time_ >= var_397_9 + var_397_10 and arg_394_1.time_ < var_397_9 + var_397_10 + arg_397_0 and not isNil(var_397_8) and arg_394_1.var_.actorSpriteComps10128 then
				for iter_397_6, iter_397_7 in pairs(arg_394_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_397_7 then
						if arg_394_1.isInRecall_ then
							iter_397_7.color = arg_394_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_397_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_394_1.var_.actorSpriteComps10128 = nil
			end

			local var_397_16 = 0
			local var_397_17 = 0.975

			if var_397_16 < arg_394_1.time_ and arg_394_1.time_ <= var_397_16 + arg_397_0 then
				arg_394_1.talkMaxDuration = 0
				arg_394_1.dialogCg_.alpha = 1

				arg_394_1.dialog_:SetActive(true)
				SetActive(arg_394_1.leftNameGo_, true)

				local var_397_18 = arg_394_1:FormatText(StoryNameCfg[584].name)

				arg_394_1.leftNameTxt_.text = var_397_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_394_1.leftNameTxt_.transform)

				arg_394_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_394_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_394_1:RecordName(arg_394_1.leftNameTxt_.text)
				SetActive(arg_394_1.iconTrs_.gameObject, false)
				arg_394_1.callingController_:SetSelectedState("normal")

				local var_397_19 = arg_394_1:GetWordFromCfg(417161096)
				local var_397_20 = arg_394_1:FormatText(var_397_19.content)

				arg_394_1.text_.text = var_397_20

				LuaForUtil.ClearLinePrefixSymbol(arg_394_1.text_)

				local var_397_21 = 39
				local var_397_22 = utf8.len(var_397_20)
				local var_397_23 = var_397_21 <= 0 and var_397_17 or var_397_17 * (var_397_22 / var_397_21)

				if var_397_23 > 0 and var_397_17 < var_397_23 then
					arg_394_1.talkMaxDuration = var_397_23

					if var_397_23 + var_397_16 > arg_394_1.duration_ then
						arg_394_1.duration_ = var_397_23 + var_397_16
					end
				end

				arg_394_1.text_.text = var_397_20
				arg_394_1.typewritter.percent = 0

				arg_394_1.typewritter:SetDirty()
				arg_394_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161096", "story_v_out_417161.awb") ~= 0 then
					local var_397_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161096", "story_v_out_417161.awb") / 1000

					if var_397_24 + var_397_16 > arg_394_1.duration_ then
						arg_394_1.duration_ = var_397_24 + var_397_16
					end

					if var_397_19.prefab_name ~= "" and arg_394_1.actors_[var_397_19.prefab_name] ~= nil then
						local var_397_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_394_1.actors_[var_397_19.prefab_name].transform, "story_v_out_417161", "417161096", "story_v_out_417161.awb")

						arg_394_1:RecordAudio("417161096", var_397_25)
						arg_394_1:RecordAudio("417161096", var_397_25)
					else
						arg_394_1:AudioAction("play", "voice", "story_v_out_417161", "417161096", "story_v_out_417161.awb")
					end

					arg_394_1:RecordHistoryTalkVoice("story_v_out_417161", "417161096", "story_v_out_417161.awb")
				end

				arg_394_1:RecordContent(arg_394_1.text_.text)
			end

			local var_397_26 = math.max(var_397_17, arg_394_1.talkMaxDuration)

			if var_397_16 <= arg_394_1.time_ and arg_394_1.time_ < var_397_16 + var_397_26 then
				arg_394_1.typewritter.percent = (arg_394_1.time_ - var_397_16) / var_397_26

				arg_394_1.typewritter:SetDirty()
			end

			if arg_394_1.time_ >= var_397_16 + var_397_26 and arg_394_1.time_ < var_397_16 + var_397_26 + arg_397_0 then
				arg_394_1.typewritter.percent = 1

				arg_394_1.typewritter:SetDirty()
				arg_394_1:ShowNextGo(true)
			end
		end
	end,
	Play417161097 = function(arg_398_0, arg_398_1)
		arg_398_1.time_ = 0
		arg_398_1.frameCnt_ = 0
		arg_398_1.state_ = "playing"
		arg_398_1.curTalkId_ = 417161097
		arg_398_1.duration_ = 7.67

		local var_398_0 = {
			zh = 4,
			ja = 7.666
		}
		local var_398_1 = manager.audio:GetLocalizationFlag()

		if var_398_0[var_398_1] ~= nil then
			arg_398_1.duration_ = var_398_0[var_398_1]
		end

		SetActive(arg_398_1.tipsGo_, false)

		function arg_398_1.onSingleLineFinish_()
			arg_398_1.onSingleLineUpdate_ = nil
			arg_398_1.onSingleLineFinish_ = nil
			arg_398_1.state_ = "waiting"
		end

		function arg_398_1.playNext_(arg_400_0)
			if arg_400_0 == 1 then
				arg_398_0:Play417161098(arg_398_1)
			end
		end

		function arg_398_1.onSingleLineUpdate_(arg_401_0)
			local var_401_0 = arg_398_1.actors_["10128"]
			local var_401_1 = 0

			if var_401_1 < arg_398_1.time_ and arg_398_1.time_ <= var_401_1 + arg_401_0 and not isNil(var_401_0) and arg_398_1.var_.actorSpriteComps10128 == nil then
				arg_398_1.var_.actorSpriteComps10128 = var_401_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_401_2 = 0.2

			if var_401_1 <= arg_398_1.time_ and arg_398_1.time_ < var_401_1 + var_401_2 and not isNil(var_401_0) then
				local var_401_3 = (arg_398_1.time_ - var_401_1) / var_401_2

				if arg_398_1.var_.actorSpriteComps10128 then
					for iter_401_0, iter_401_1 in pairs(arg_398_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_401_1 then
							if arg_398_1.isInRecall_ then
								local var_401_4 = Mathf.Lerp(iter_401_1.color.r, arg_398_1.hightColor1.r, var_401_3)
								local var_401_5 = Mathf.Lerp(iter_401_1.color.g, arg_398_1.hightColor1.g, var_401_3)
								local var_401_6 = Mathf.Lerp(iter_401_1.color.b, arg_398_1.hightColor1.b, var_401_3)

								iter_401_1.color = Color.New(var_401_4, var_401_5, var_401_6)
							else
								local var_401_7 = Mathf.Lerp(iter_401_1.color.r, 1, var_401_3)

								iter_401_1.color = Color.New(var_401_7, var_401_7, var_401_7)
							end
						end
					end
				end
			end

			if arg_398_1.time_ >= var_401_1 + var_401_2 and arg_398_1.time_ < var_401_1 + var_401_2 + arg_401_0 and not isNil(var_401_0) and arg_398_1.var_.actorSpriteComps10128 then
				for iter_401_2, iter_401_3 in pairs(arg_398_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_401_3 then
						if arg_398_1.isInRecall_ then
							iter_401_3.color = arg_398_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_401_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_398_1.var_.actorSpriteComps10128 = nil
			end

			local var_401_8 = arg_398_1.actors_["1060"]
			local var_401_9 = 0

			if var_401_9 < arg_398_1.time_ and arg_398_1.time_ <= var_401_9 + arg_401_0 and not isNil(var_401_8) and arg_398_1.var_.actorSpriteComps1060 == nil then
				arg_398_1.var_.actorSpriteComps1060 = var_401_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_401_10 = 0.2

			if var_401_9 <= arg_398_1.time_ and arg_398_1.time_ < var_401_9 + var_401_10 and not isNil(var_401_8) then
				local var_401_11 = (arg_398_1.time_ - var_401_9) / var_401_10

				if arg_398_1.var_.actorSpriteComps1060 then
					for iter_401_4, iter_401_5 in pairs(arg_398_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_401_5 then
							if arg_398_1.isInRecall_ then
								local var_401_12 = Mathf.Lerp(iter_401_5.color.r, arg_398_1.hightColor2.r, var_401_11)
								local var_401_13 = Mathf.Lerp(iter_401_5.color.g, arg_398_1.hightColor2.g, var_401_11)
								local var_401_14 = Mathf.Lerp(iter_401_5.color.b, arg_398_1.hightColor2.b, var_401_11)

								iter_401_5.color = Color.New(var_401_12, var_401_13, var_401_14)
							else
								local var_401_15 = Mathf.Lerp(iter_401_5.color.r, 0.5, var_401_11)

								iter_401_5.color = Color.New(var_401_15, var_401_15, var_401_15)
							end
						end
					end
				end
			end

			if arg_398_1.time_ >= var_401_9 + var_401_10 and arg_398_1.time_ < var_401_9 + var_401_10 + arg_401_0 and not isNil(var_401_8) and arg_398_1.var_.actorSpriteComps1060 then
				for iter_401_6, iter_401_7 in pairs(arg_398_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_401_7 then
						if arg_398_1.isInRecall_ then
							iter_401_7.color = arg_398_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_401_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_398_1.var_.actorSpriteComps1060 = nil
			end

			local var_401_16 = 0
			local var_401_17 = 0.55

			if var_401_16 < arg_398_1.time_ and arg_398_1.time_ <= var_401_16 + arg_401_0 then
				arg_398_1.talkMaxDuration = 0
				arg_398_1.dialogCg_.alpha = 1

				arg_398_1.dialog_:SetActive(true)
				SetActive(arg_398_1.leftNameGo_, true)

				local var_401_18 = arg_398_1:FormatText(StoryNameCfg[595].name)

				arg_398_1.leftNameTxt_.text = var_401_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_398_1.leftNameTxt_.transform)

				arg_398_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_398_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_398_1:RecordName(arg_398_1.leftNameTxt_.text)
				SetActive(arg_398_1.iconTrs_.gameObject, false)
				arg_398_1.callingController_:SetSelectedState("normal")

				local var_401_19 = arg_398_1:GetWordFromCfg(417161097)
				local var_401_20 = arg_398_1:FormatText(var_401_19.content)

				arg_398_1.text_.text = var_401_20

				LuaForUtil.ClearLinePrefixSymbol(arg_398_1.text_)

				local var_401_21 = 22
				local var_401_22 = utf8.len(var_401_20)
				local var_401_23 = var_401_21 <= 0 and var_401_17 or var_401_17 * (var_401_22 / var_401_21)

				if var_401_23 > 0 and var_401_17 < var_401_23 then
					arg_398_1.talkMaxDuration = var_401_23

					if var_401_23 + var_401_16 > arg_398_1.duration_ then
						arg_398_1.duration_ = var_401_23 + var_401_16
					end
				end

				arg_398_1.text_.text = var_401_20
				arg_398_1.typewritter.percent = 0

				arg_398_1.typewritter:SetDirty()
				arg_398_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161097", "story_v_out_417161.awb") ~= 0 then
					local var_401_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161097", "story_v_out_417161.awb") / 1000

					if var_401_24 + var_401_16 > arg_398_1.duration_ then
						arg_398_1.duration_ = var_401_24 + var_401_16
					end

					if var_401_19.prefab_name ~= "" and arg_398_1.actors_[var_401_19.prefab_name] ~= nil then
						local var_401_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_398_1.actors_[var_401_19.prefab_name].transform, "story_v_out_417161", "417161097", "story_v_out_417161.awb")

						arg_398_1:RecordAudio("417161097", var_401_25)
						arg_398_1:RecordAudio("417161097", var_401_25)
					else
						arg_398_1:AudioAction("play", "voice", "story_v_out_417161", "417161097", "story_v_out_417161.awb")
					end

					arg_398_1:RecordHistoryTalkVoice("story_v_out_417161", "417161097", "story_v_out_417161.awb")
				end

				arg_398_1:RecordContent(arg_398_1.text_.text)
			end

			local var_401_26 = math.max(var_401_17, arg_398_1.talkMaxDuration)

			if var_401_16 <= arg_398_1.time_ and arg_398_1.time_ < var_401_16 + var_401_26 then
				arg_398_1.typewritter.percent = (arg_398_1.time_ - var_401_16) / var_401_26

				arg_398_1.typewritter:SetDirty()
			end

			if arg_398_1.time_ >= var_401_16 + var_401_26 and arg_398_1.time_ < var_401_16 + var_401_26 + arg_401_0 then
				arg_398_1.typewritter.percent = 1

				arg_398_1.typewritter:SetDirty()
				arg_398_1:ShowNextGo(true)
			end
		end
	end,
	Play417161098 = function(arg_402_0, arg_402_1)
		arg_402_1.time_ = 0
		arg_402_1.frameCnt_ = 0
		arg_402_1.state_ = "playing"
		arg_402_1.curTalkId_ = 417161098
		arg_402_1.duration_ = 7.77

		local var_402_0 = {
			zh = 6.366,
			ja = 7.766
		}
		local var_402_1 = manager.audio:GetLocalizationFlag()

		if var_402_0[var_402_1] ~= nil then
			arg_402_1.duration_ = var_402_0[var_402_1]
		end

		SetActive(arg_402_1.tipsGo_, false)

		function arg_402_1.onSingleLineFinish_()
			arg_402_1.onSingleLineUpdate_ = nil
			arg_402_1.onSingleLineFinish_ = nil
			arg_402_1.state_ = "waiting"
		end

		function arg_402_1.playNext_(arg_404_0)
			if arg_404_0 == 1 then
				arg_402_0:Play417161099(arg_402_1)
			end
		end

		function arg_402_1.onSingleLineUpdate_(arg_405_0)
			local var_405_0 = 0
			local var_405_1 = 0.825

			if var_405_0 < arg_402_1.time_ and arg_402_1.time_ <= var_405_0 + arg_405_0 then
				arg_402_1.talkMaxDuration = 0
				arg_402_1.dialogCg_.alpha = 1

				arg_402_1.dialog_:SetActive(true)
				SetActive(arg_402_1.leftNameGo_, true)

				local var_405_2 = arg_402_1:FormatText(StoryNameCfg[595].name)

				arg_402_1.leftNameTxt_.text = var_405_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_402_1.leftNameTxt_.transform)

				arg_402_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_402_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_402_1:RecordName(arg_402_1.leftNameTxt_.text)
				SetActive(arg_402_1.iconTrs_.gameObject, false)
				arg_402_1.callingController_:SetSelectedState("normal")

				local var_405_3 = arg_402_1:GetWordFromCfg(417161098)
				local var_405_4 = arg_402_1:FormatText(var_405_3.content)

				arg_402_1.text_.text = var_405_4

				LuaForUtil.ClearLinePrefixSymbol(arg_402_1.text_)

				local var_405_5 = 33
				local var_405_6 = utf8.len(var_405_4)
				local var_405_7 = var_405_5 <= 0 and var_405_1 or var_405_1 * (var_405_6 / var_405_5)

				if var_405_7 > 0 and var_405_1 < var_405_7 then
					arg_402_1.talkMaxDuration = var_405_7

					if var_405_7 + var_405_0 > arg_402_1.duration_ then
						arg_402_1.duration_ = var_405_7 + var_405_0
					end
				end

				arg_402_1.text_.text = var_405_4
				arg_402_1.typewritter.percent = 0

				arg_402_1.typewritter:SetDirty()
				arg_402_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161098", "story_v_out_417161.awb") ~= 0 then
					local var_405_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161098", "story_v_out_417161.awb") / 1000

					if var_405_8 + var_405_0 > arg_402_1.duration_ then
						arg_402_1.duration_ = var_405_8 + var_405_0
					end

					if var_405_3.prefab_name ~= "" and arg_402_1.actors_[var_405_3.prefab_name] ~= nil then
						local var_405_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_402_1.actors_[var_405_3.prefab_name].transform, "story_v_out_417161", "417161098", "story_v_out_417161.awb")

						arg_402_1:RecordAudio("417161098", var_405_9)
						arg_402_1:RecordAudio("417161098", var_405_9)
					else
						arg_402_1:AudioAction("play", "voice", "story_v_out_417161", "417161098", "story_v_out_417161.awb")
					end

					arg_402_1:RecordHistoryTalkVoice("story_v_out_417161", "417161098", "story_v_out_417161.awb")
				end

				arg_402_1:RecordContent(arg_402_1.text_.text)
			end

			local var_405_10 = math.max(var_405_1, arg_402_1.talkMaxDuration)

			if var_405_0 <= arg_402_1.time_ and arg_402_1.time_ < var_405_0 + var_405_10 then
				arg_402_1.typewritter.percent = (arg_402_1.time_ - var_405_0) / var_405_10

				arg_402_1.typewritter:SetDirty()
			end

			if arg_402_1.time_ >= var_405_0 + var_405_10 and arg_402_1.time_ < var_405_0 + var_405_10 + arg_405_0 then
				arg_402_1.typewritter.percent = 1

				arg_402_1.typewritter:SetDirty()
				arg_402_1:ShowNextGo(true)
			end
		end
	end,
	Play417161099 = function(arg_406_0, arg_406_1)
		arg_406_1.time_ = 0
		arg_406_1.frameCnt_ = 0
		arg_406_1.state_ = "playing"
		arg_406_1.curTalkId_ = 417161099
		arg_406_1.duration_ = 6.2

		local var_406_0 = {
			zh = 4.8,
			ja = 6.2
		}
		local var_406_1 = manager.audio:GetLocalizationFlag()

		if var_406_0[var_406_1] ~= nil then
			arg_406_1.duration_ = var_406_0[var_406_1]
		end

		SetActive(arg_406_1.tipsGo_, false)

		function arg_406_1.onSingleLineFinish_()
			arg_406_1.onSingleLineUpdate_ = nil
			arg_406_1.onSingleLineFinish_ = nil
			arg_406_1.state_ = "waiting"
		end

		function arg_406_1.playNext_(arg_408_0)
			if arg_408_0 == 1 then
				arg_406_0:Play417161100(arg_406_1)
			end
		end

		function arg_406_1.onSingleLineUpdate_(arg_409_0)
			local var_409_0 = arg_406_1.actors_["1060"]
			local var_409_1 = 0

			if var_409_1 < arg_406_1.time_ and arg_406_1.time_ <= var_409_1 + arg_409_0 and not isNil(var_409_0) and arg_406_1.var_.actorSpriteComps1060 == nil then
				arg_406_1.var_.actorSpriteComps1060 = var_409_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_409_2 = 0.2

			if var_409_1 <= arg_406_1.time_ and arg_406_1.time_ < var_409_1 + var_409_2 and not isNil(var_409_0) then
				local var_409_3 = (arg_406_1.time_ - var_409_1) / var_409_2

				if arg_406_1.var_.actorSpriteComps1060 then
					for iter_409_0, iter_409_1 in pairs(arg_406_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_409_1 then
							if arg_406_1.isInRecall_ then
								local var_409_4 = Mathf.Lerp(iter_409_1.color.r, arg_406_1.hightColor1.r, var_409_3)
								local var_409_5 = Mathf.Lerp(iter_409_1.color.g, arg_406_1.hightColor1.g, var_409_3)
								local var_409_6 = Mathf.Lerp(iter_409_1.color.b, arg_406_1.hightColor1.b, var_409_3)

								iter_409_1.color = Color.New(var_409_4, var_409_5, var_409_6)
							else
								local var_409_7 = Mathf.Lerp(iter_409_1.color.r, 1, var_409_3)

								iter_409_1.color = Color.New(var_409_7, var_409_7, var_409_7)
							end
						end
					end
				end
			end

			if arg_406_1.time_ >= var_409_1 + var_409_2 and arg_406_1.time_ < var_409_1 + var_409_2 + arg_409_0 and not isNil(var_409_0) and arg_406_1.var_.actorSpriteComps1060 then
				for iter_409_2, iter_409_3 in pairs(arg_406_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_409_3 then
						if arg_406_1.isInRecall_ then
							iter_409_3.color = arg_406_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_409_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_406_1.var_.actorSpriteComps1060 = nil
			end

			local var_409_8 = arg_406_1.actors_["10128"]
			local var_409_9 = 0

			if var_409_9 < arg_406_1.time_ and arg_406_1.time_ <= var_409_9 + arg_409_0 and not isNil(var_409_8) and arg_406_1.var_.actorSpriteComps10128 == nil then
				arg_406_1.var_.actorSpriteComps10128 = var_409_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_409_10 = 0.2

			if var_409_9 <= arg_406_1.time_ and arg_406_1.time_ < var_409_9 + var_409_10 and not isNil(var_409_8) then
				local var_409_11 = (arg_406_1.time_ - var_409_9) / var_409_10

				if arg_406_1.var_.actorSpriteComps10128 then
					for iter_409_4, iter_409_5 in pairs(arg_406_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_409_5 then
							if arg_406_1.isInRecall_ then
								local var_409_12 = Mathf.Lerp(iter_409_5.color.r, arg_406_1.hightColor2.r, var_409_11)
								local var_409_13 = Mathf.Lerp(iter_409_5.color.g, arg_406_1.hightColor2.g, var_409_11)
								local var_409_14 = Mathf.Lerp(iter_409_5.color.b, arg_406_1.hightColor2.b, var_409_11)

								iter_409_5.color = Color.New(var_409_12, var_409_13, var_409_14)
							else
								local var_409_15 = Mathf.Lerp(iter_409_5.color.r, 0.5, var_409_11)

								iter_409_5.color = Color.New(var_409_15, var_409_15, var_409_15)
							end
						end
					end
				end
			end

			if arg_406_1.time_ >= var_409_9 + var_409_10 and arg_406_1.time_ < var_409_9 + var_409_10 + arg_409_0 and not isNil(var_409_8) and arg_406_1.var_.actorSpriteComps10128 then
				for iter_409_6, iter_409_7 in pairs(arg_406_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_409_7 then
						if arg_406_1.isInRecall_ then
							iter_409_7.color = arg_406_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_409_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_406_1.var_.actorSpriteComps10128 = nil
			end

			local var_409_16 = 0
			local var_409_17 = 0.45

			if var_409_16 < arg_406_1.time_ and arg_406_1.time_ <= var_409_16 + arg_409_0 then
				arg_406_1.talkMaxDuration = 0
				arg_406_1.dialogCg_.alpha = 1

				arg_406_1.dialog_:SetActive(true)
				SetActive(arg_406_1.leftNameGo_, true)

				local var_409_18 = arg_406_1:FormatText(StoryNameCfg[584].name)

				arg_406_1.leftNameTxt_.text = var_409_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_406_1.leftNameTxt_.transform)

				arg_406_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_406_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_406_1:RecordName(arg_406_1.leftNameTxt_.text)
				SetActive(arg_406_1.iconTrs_.gameObject, false)
				arg_406_1.callingController_:SetSelectedState("normal")

				local var_409_19 = arg_406_1:GetWordFromCfg(417161099)
				local var_409_20 = arg_406_1:FormatText(var_409_19.content)

				arg_406_1.text_.text = var_409_20

				LuaForUtil.ClearLinePrefixSymbol(arg_406_1.text_)

				local var_409_21 = 18
				local var_409_22 = utf8.len(var_409_20)
				local var_409_23 = var_409_21 <= 0 and var_409_17 or var_409_17 * (var_409_22 / var_409_21)

				if var_409_23 > 0 and var_409_17 < var_409_23 then
					arg_406_1.talkMaxDuration = var_409_23

					if var_409_23 + var_409_16 > arg_406_1.duration_ then
						arg_406_1.duration_ = var_409_23 + var_409_16
					end
				end

				arg_406_1.text_.text = var_409_20
				arg_406_1.typewritter.percent = 0

				arg_406_1.typewritter:SetDirty()
				arg_406_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161099", "story_v_out_417161.awb") ~= 0 then
					local var_409_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161099", "story_v_out_417161.awb") / 1000

					if var_409_24 + var_409_16 > arg_406_1.duration_ then
						arg_406_1.duration_ = var_409_24 + var_409_16
					end

					if var_409_19.prefab_name ~= "" and arg_406_1.actors_[var_409_19.prefab_name] ~= nil then
						local var_409_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_406_1.actors_[var_409_19.prefab_name].transform, "story_v_out_417161", "417161099", "story_v_out_417161.awb")

						arg_406_1:RecordAudio("417161099", var_409_25)
						arg_406_1:RecordAudio("417161099", var_409_25)
					else
						arg_406_1:AudioAction("play", "voice", "story_v_out_417161", "417161099", "story_v_out_417161.awb")
					end

					arg_406_1:RecordHistoryTalkVoice("story_v_out_417161", "417161099", "story_v_out_417161.awb")
				end

				arg_406_1:RecordContent(arg_406_1.text_.text)
			end

			local var_409_26 = math.max(var_409_17, arg_406_1.talkMaxDuration)

			if var_409_16 <= arg_406_1.time_ and arg_406_1.time_ < var_409_16 + var_409_26 then
				arg_406_1.typewritter.percent = (arg_406_1.time_ - var_409_16) / var_409_26

				arg_406_1.typewritter:SetDirty()
			end

			if arg_406_1.time_ >= var_409_16 + var_409_26 and arg_406_1.time_ < var_409_16 + var_409_26 + arg_409_0 then
				arg_406_1.typewritter.percent = 1

				arg_406_1.typewritter:SetDirty()
				arg_406_1:ShowNextGo(true)
			end
		end
	end,
	Play417161100 = function(arg_410_0, arg_410_1)
		arg_410_1.time_ = 0
		arg_410_1.frameCnt_ = 0
		arg_410_1.state_ = "playing"
		arg_410_1.curTalkId_ = 417161100
		arg_410_1.duration_ = 5

		SetActive(arg_410_1.tipsGo_, false)

		function arg_410_1.onSingleLineFinish_()
			arg_410_1.onSingleLineUpdate_ = nil
			arg_410_1.onSingleLineFinish_ = nil
			arg_410_1.state_ = "waiting"
		end

		function arg_410_1.playNext_(arg_412_0)
			if arg_412_0 == 1 then
				arg_410_0:Play417161101(arg_410_1)
			end
		end

		function arg_410_1.onSingleLineUpdate_(arg_413_0)
			local var_413_0 = arg_410_1.actors_["10128"].transform
			local var_413_1 = 0

			if var_413_1 < arg_410_1.time_ and arg_410_1.time_ <= var_413_1 + arg_413_0 then
				arg_410_1.var_.moveOldPos10128 = var_413_0.localPosition
				var_413_0.localScale = Vector3.New(1, 1, 1)

				arg_410_1:CheckSpriteTmpPos("10128", 7)

				local var_413_2 = var_413_0.childCount

				for iter_413_0 = 0, var_413_2 - 1 do
					local var_413_3 = var_413_0:GetChild(iter_413_0)

					if var_413_3.name == "" or not string.find(var_413_3.name, "split") then
						var_413_3.gameObject:SetActive(true)
					else
						var_413_3.gameObject:SetActive(false)
					end
				end
			end

			local var_413_4 = 0.001

			if var_413_1 <= arg_410_1.time_ and arg_410_1.time_ < var_413_1 + var_413_4 then
				local var_413_5 = (arg_410_1.time_ - var_413_1) / var_413_4
				local var_413_6 = Vector3.New(0, -2000, -300)

				var_413_0.localPosition = Vector3.Lerp(arg_410_1.var_.moveOldPos10128, var_413_6, var_413_5)
			end

			if arg_410_1.time_ >= var_413_1 + var_413_4 and arg_410_1.time_ < var_413_1 + var_413_4 + arg_413_0 then
				var_413_0.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_413_7 = arg_410_1.actors_["1060"].transform
			local var_413_8 = 0

			if var_413_8 < arg_410_1.time_ and arg_410_1.time_ <= var_413_8 + arg_413_0 then
				arg_410_1.var_.moveOldPos1060 = var_413_7.localPosition
				var_413_7.localScale = Vector3.New(1, 1, 1)

				arg_410_1:CheckSpriteTmpPos("1060", 7)

				local var_413_9 = var_413_7.childCount

				for iter_413_1 = 0, var_413_9 - 1 do
					local var_413_10 = var_413_7:GetChild(iter_413_1)

					if var_413_10.name == "" or not string.find(var_413_10.name, "split") then
						var_413_10.gameObject:SetActive(true)
					else
						var_413_10.gameObject:SetActive(false)
					end
				end
			end

			local var_413_11 = 0.001

			if var_413_8 <= arg_410_1.time_ and arg_410_1.time_ < var_413_8 + var_413_11 then
				local var_413_12 = (arg_410_1.time_ - var_413_8) / var_413_11
				local var_413_13 = Vector3.New(0, -2000, -40)

				var_413_7.localPosition = Vector3.Lerp(arg_410_1.var_.moveOldPos1060, var_413_13, var_413_12)
			end

			if arg_410_1.time_ >= var_413_8 + var_413_11 and arg_410_1.time_ < var_413_8 + var_413_11 + arg_413_0 then
				var_413_7.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_413_14 = 0
			local var_413_15 = 0.75

			if var_413_14 < arg_410_1.time_ and arg_410_1.time_ <= var_413_14 + arg_413_0 then
				arg_410_1.talkMaxDuration = 0
				arg_410_1.dialogCg_.alpha = 1

				arg_410_1.dialog_:SetActive(true)
				SetActive(arg_410_1.leftNameGo_, false)

				arg_410_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_410_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_410_1:RecordName(arg_410_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_410_1.iconTrs_.gameObject, false)
				arg_410_1.callingController_:SetSelectedState("normal")

				local var_413_16 = arg_410_1:GetWordFromCfg(417161100)
				local var_413_17 = arg_410_1:FormatText(var_413_16.content)

				arg_410_1.text_.text = var_413_17

				LuaForUtil.ClearLinePrefixSymbol(arg_410_1.text_)

				local var_413_18 = 30
				local var_413_19 = utf8.len(var_413_17)
				local var_413_20 = var_413_18 <= 0 and var_413_15 or var_413_15 * (var_413_19 / var_413_18)

				if var_413_20 > 0 and var_413_15 < var_413_20 then
					arg_410_1.talkMaxDuration = var_413_20

					if var_413_20 + var_413_14 > arg_410_1.duration_ then
						arg_410_1.duration_ = var_413_20 + var_413_14
					end
				end

				arg_410_1.text_.text = var_413_17
				arg_410_1.typewritter.percent = 0

				arg_410_1.typewritter:SetDirty()
				arg_410_1:ShowNextGo(false)
				arg_410_1:RecordContent(arg_410_1.text_.text)
			end

			local var_413_21 = math.max(var_413_15, arg_410_1.talkMaxDuration)

			if var_413_14 <= arg_410_1.time_ and arg_410_1.time_ < var_413_14 + var_413_21 then
				arg_410_1.typewritter.percent = (arg_410_1.time_ - var_413_14) / var_413_21

				arg_410_1.typewritter:SetDirty()
			end

			if arg_410_1.time_ >= var_413_14 + var_413_21 and arg_410_1.time_ < var_413_14 + var_413_21 + arg_413_0 then
				arg_410_1.typewritter.percent = 1

				arg_410_1.typewritter:SetDirty()
				arg_410_1:ShowNextGo(true)
			end
		end
	end,
	Play417161101 = function(arg_414_0, arg_414_1)
		arg_414_1.time_ = 0
		arg_414_1.frameCnt_ = 0
		arg_414_1.state_ = "playing"
		arg_414_1.curTalkId_ = 417161101
		arg_414_1.duration_ = 1.8

		local var_414_0 = {
			zh = 1.8,
			ja = 1.7
		}
		local var_414_1 = manager.audio:GetLocalizationFlag()

		if var_414_0[var_414_1] ~= nil then
			arg_414_1.duration_ = var_414_0[var_414_1]
		end

		SetActive(arg_414_1.tipsGo_, false)

		function arg_414_1.onSingleLineFinish_()
			arg_414_1.onSingleLineUpdate_ = nil
			arg_414_1.onSingleLineFinish_ = nil
			arg_414_1.state_ = "waiting"
		end

		function arg_414_1.playNext_(arg_416_0)
			if arg_416_0 == 1 then
				arg_414_0:Play417161102(arg_414_1)
			end
		end

		function arg_414_1.onSingleLineUpdate_(arg_417_0)
			local var_417_0 = arg_414_1.actors_["10128"]
			local var_417_1 = 0

			if var_417_1 < arg_414_1.time_ and arg_414_1.time_ <= var_417_1 + arg_417_0 and not isNil(var_417_0) and arg_414_1.var_.actorSpriteComps10128 == nil then
				arg_414_1.var_.actorSpriteComps10128 = var_417_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_417_2 = 0.2

			if var_417_1 <= arg_414_1.time_ and arg_414_1.time_ < var_417_1 + var_417_2 and not isNil(var_417_0) then
				local var_417_3 = (arg_414_1.time_ - var_417_1) / var_417_2

				if arg_414_1.var_.actorSpriteComps10128 then
					for iter_417_0, iter_417_1 in pairs(arg_414_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_417_1 then
							if arg_414_1.isInRecall_ then
								local var_417_4 = Mathf.Lerp(iter_417_1.color.r, arg_414_1.hightColor1.r, var_417_3)
								local var_417_5 = Mathf.Lerp(iter_417_1.color.g, arg_414_1.hightColor1.g, var_417_3)
								local var_417_6 = Mathf.Lerp(iter_417_1.color.b, arg_414_1.hightColor1.b, var_417_3)

								iter_417_1.color = Color.New(var_417_4, var_417_5, var_417_6)
							else
								local var_417_7 = Mathf.Lerp(iter_417_1.color.r, 1, var_417_3)

								iter_417_1.color = Color.New(var_417_7, var_417_7, var_417_7)
							end
						end
					end
				end
			end

			if arg_414_1.time_ >= var_417_1 + var_417_2 and arg_414_1.time_ < var_417_1 + var_417_2 + arg_417_0 and not isNil(var_417_0) and arg_414_1.var_.actorSpriteComps10128 then
				for iter_417_2, iter_417_3 in pairs(arg_414_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_417_3 then
						if arg_414_1.isInRecall_ then
							iter_417_3.color = arg_414_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_417_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_414_1.var_.actorSpriteComps10128 = nil
			end

			local var_417_8 = arg_414_1.actors_["10128"].transform
			local var_417_9 = 0

			if var_417_9 < arg_414_1.time_ and arg_414_1.time_ <= var_417_9 + arg_417_0 then
				arg_414_1.var_.moveOldPos10128 = var_417_8.localPosition
				var_417_8.localScale = Vector3.New(1, 1, 1)

				arg_414_1:CheckSpriteTmpPos("10128", 3)

				local var_417_10 = var_417_8.childCount

				for iter_417_4 = 0, var_417_10 - 1 do
					local var_417_11 = var_417_8:GetChild(iter_417_4)

					if var_417_11.name == "" or not string.find(var_417_11.name, "split") then
						var_417_11.gameObject:SetActive(true)
					else
						var_417_11.gameObject:SetActive(false)
					end
				end
			end

			local var_417_12 = 0.001

			if var_417_9 <= arg_414_1.time_ and arg_414_1.time_ < var_417_9 + var_417_12 then
				local var_417_13 = (arg_414_1.time_ - var_417_9) / var_417_12
				local var_417_14 = Vector3.New(0, -347, -300)

				var_417_8.localPosition = Vector3.Lerp(arg_414_1.var_.moveOldPos10128, var_417_14, var_417_13)
			end

			if arg_414_1.time_ >= var_417_9 + var_417_12 and arg_414_1.time_ < var_417_9 + var_417_12 + arg_417_0 then
				var_417_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_417_15 = 0
			local var_417_16 = 0.2

			if var_417_15 < arg_414_1.time_ and arg_414_1.time_ <= var_417_15 + arg_417_0 then
				arg_414_1.talkMaxDuration = 0
				arg_414_1.dialogCg_.alpha = 1

				arg_414_1.dialog_:SetActive(true)
				SetActive(arg_414_1.leftNameGo_, true)

				local var_417_17 = arg_414_1:FormatText(StoryNameCfg[595].name)

				arg_414_1.leftNameTxt_.text = var_417_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_414_1.leftNameTxt_.transform)

				arg_414_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_414_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_414_1:RecordName(arg_414_1.leftNameTxt_.text)
				SetActive(arg_414_1.iconTrs_.gameObject, false)
				arg_414_1.callingController_:SetSelectedState("normal")

				local var_417_18 = arg_414_1:GetWordFromCfg(417161101)
				local var_417_19 = arg_414_1:FormatText(var_417_18.content)

				arg_414_1.text_.text = var_417_19

				LuaForUtil.ClearLinePrefixSymbol(arg_414_1.text_)

				local var_417_20 = 8
				local var_417_21 = utf8.len(var_417_19)
				local var_417_22 = var_417_20 <= 0 and var_417_16 or var_417_16 * (var_417_21 / var_417_20)

				if var_417_22 > 0 and var_417_16 < var_417_22 then
					arg_414_1.talkMaxDuration = var_417_22

					if var_417_22 + var_417_15 > arg_414_1.duration_ then
						arg_414_1.duration_ = var_417_22 + var_417_15
					end
				end

				arg_414_1.text_.text = var_417_19
				arg_414_1.typewritter.percent = 0

				arg_414_1.typewritter:SetDirty()
				arg_414_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161101", "story_v_out_417161.awb") ~= 0 then
					local var_417_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161101", "story_v_out_417161.awb") / 1000

					if var_417_23 + var_417_15 > arg_414_1.duration_ then
						arg_414_1.duration_ = var_417_23 + var_417_15
					end

					if var_417_18.prefab_name ~= "" and arg_414_1.actors_[var_417_18.prefab_name] ~= nil then
						local var_417_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_414_1.actors_[var_417_18.prefab_name].transform, "story_v_out_417161", "417161101", "story_v_out_417161.awb")

						arg_414_1:RecordAudio("417161101", var_417_24)
						arg_414_1:RecordAudio("417161101", var_417_24)
					else
						arg_414_1:AudioAction("play", "voice", "story_v_out_417161", "417161101", "story_v_out_417161.awb")
					end

					arg_414_1:RecordHistoryTalkVoice("story_v_out_417161", "417161101", "story_v_out_417161.awb")
				end

				arg_414_1:RecordContent(arg_414_1.text_.text)
			end

			local var_417_25 = math.max(var_417_16, arg_414_1.talkMaxDuration)

			if var_417_15 <= arg_414_1.time_ and arg_414_1.time_ < var_417_15 + var_417_25 then
				arg_414_1.typewritter.percent = (arg_414_1.time_ - var_417_15) / var_417_25

				arg_414_1.typewritter:SetDirty()
			end

			if arg_414_1.time_ >= var_417_15 + var_417_25 and arg_414_1.time_ < var_417_15 + var_417_25 + arg_417_0 then
				arg_414_1.typewritter.percent = 1

				arg_414_1.typewritter:SetDirty()
				arg_414_1:ShowNextGo(true)
			end
		end
	end,
	Play417161102 = function(arg_418_0, arg_418_1)
		arg_418_1.time_ = 0
		arg_418_1.frameCnt_ = 0
		arg_418_1.state_ = "playing"
		arg_418_1.curTalkId_ = 417161102
		arg_418_1.duration_ = 6.57

		local var_418_0 = {
			zh = 2.9,
			ja = 6.566
		}
		local var_418_1 = manager.audio:GetLocalizationFlag()

		if var_418_0[var_418_1] ~= nil then
			arg_418_1.duration_ = var_418_0[var_418_1]
		end

		SetActive(arg_418_1.tipsGo_, false)

		function arg_418_1.onSingleLineFinish_()
			arg_418_1.onSingleLineUpdate_ = nil
			arg_418_1.onSingleLineFinish_ = nil
			arg_418_1.state_ = "waiting"
		end

		function arg_418_1.playNext_(arg_420_0)
			if arg_420_0 == 1 then
				arg_418_0:Play417161103(arg_418_1)
			end
		end

		function arg_418_1.onSingleLineUpdate_(arg_421_0)
			local var_421_0 = arg_418_1.actors_["1060"]
			local var_421_1 = 0

			if var_421_1 < arg_418_1.time_ and arg_418_1.time_ <= var_421_1 + arg_421_0 and not isNil(var_421_0) and arg_418_1.var_.actorSpriteComps1060 == nil then
				arg_418_1.var_.actorSpriteComps1060 = var_421_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_421_2 = 0.2

			if var_421_1 <= arg_418_1.time_ and arg_418_1.time_ < var_421_1 + var_421_2 and not isNil(var_421_0) then
				local var_421_3 = (arg_418_1.time_ - var_421_1) / var_421_2

				if arg_418_1.var_.actorSpriteComps1060 then
					for iter_421_0, iter_421_1 in pairs(arg_418_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_421_1 then
							if arg_418_1.isInRecall_ then
								local var_421_4 = Mathf.Lerp(iter_421_1.color.r, arg_418_1.hightColor1.r, var_421_3)
								local var_421_5 = Mathf.Lerp(iter_421_1.color.g, arg_418_1.hightColor1.g, var_421_3)
								local var_421_6 = Mathf.Lerp(iter_421_1.color.b, arg_418_1.hightColor1.b, var_421_3)

								iter_421_1.color = Color.New(var_421_4, var_421_5, var_421_6)
							else
								local var_421_7 = Mathf.Lerp(iter_421_1.color.r, 1, var_421_3)

								iter_421_1.color = Color.New(var_421_7, var_421_7, var_421_7)
							end
						end
					end
				end
			end

			if arg_418_1.time_ >= var_421_1 + var_421_2 and arg_418_1.time_ < var_421_1 + var_421_2 + arg_421_0 and not isNil(var_421_0) and arg_418_1.var_.actorSpriteComps1060 then
				for iter_421_2, iter_421_3 in pairs(arg_418_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_421_3 then
						if arg_418_1.isInRecall_ then
							iter_421_3.color = arg_418_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_421_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_418_1.var_.actorSpriteComps1060 = nil
			end

			local var_421_8 = arg_418_1.actors_["10128"]
			local var_421_9 = 0

			if var_421_9 < arg_418_1.time_ and arg_418_1.time_ <= var_421_9 + arg_421_0 and not isNil(var_421_8) and arg_418_1.var_.actorSpriteComps10128 == nil then
				arg_418_1.var_.actorSpriteComps10128 = var_421_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_421_10 = 0.2

			if var_421_9 <= arg_418_1.time_ and arg_418_1.time_ < var_421_9 + var_421_10 and not isNil(var_421_8) then
				local var_421_11 = (arg_418_1.time_ - var_421_9) / var_421_10

				if arg_418_1.var_.actorSpriteComps10128 then
					for iter_421_4, iter_421_5 in pairs(arg_418_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_421_5 then
							if arg_418_1.isInRecall_ then
								local var_421_12 = Mathf.Lerp(iter_421_5.color.r, arg_418_1.hightColor2.r, var_421_11)
								local var_421_13 = Mathf.Lerp(iter_421_5.color.g, arg_418_1.hightColor2.g, var_421_11)
								local var_421_14 = Mathf.Lerp(iter_421_5.color.b, arg_418_1.hightColor2.b, var_421_11)

								iter_421_5.color = Color.New(var_421_12, var_421_13, var_421_14)
							else
								local var_421_15 = Mathf.Lerp(iter_421_5.color.r, 0.5, var_421_11)

								iter_421_5.color = Color.New(var_421_15, var_421_15, var_421_15)
							end
						end
					end
				end
			end

			if arg_418_1.time_ >= var_421_9 + var_421_10 and arg_418_1.time_ < var_421_9 + var_421_10 + arg_421_0 and not isNil(var_421_8) and arg_418_1.var_.actorSpriteComps10128 then
				for iter_421_6, iter_421_7 in pairs(arg_418_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_421_7 then
						if arg_418_1.isInRecall_ then
							iter_421_7.color = arg_418_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_421_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_418_1.var_.actorSpriteComps10128 = nil
			end

			local var_421_16 = arg_418_1.actors_["10128"].transform
			local var_421_17 = 0

			if var_421_17 < arg_418_1.time_ and arg_418_1.time_ <= var_421_17 + arg_421_0 then
				arg_418_1.var_.moveOldPos10128 = var_421_16.localPosition
				var_421_16.localScale = Vector3.New(1, 1, 1)

				arg_418_1:CheckSpriteTmpPos("10128", 2)

				local var_421_18 = var_421_16.childCount

				for iter_421_8 = 0, var_421_18 - 1 do
					local var_421_19 = var_421_16:GetChild(iter_421_8)

					if var_421_19.name == "" or not string.find(var_421_19.name, "split") then
						var_421_19.gameObject:SetActive(true)
					else
						var_421_19.gameObject:SetActive(false)
					end
				end
			end

			local var_421_20 = 0.001

			if var_421_17 <= arg_418_1.time_ and arg_418_1.time_ < var_421_17 + var_421_20 then
				local var_421_21 = (arg_418_1.time_ - var_421_17) / var_421_20
				local var_421_22 = Vector3.New(-390, -347, -300)

				var_421_16.localPosition = Vector3.Lerp(arg_418_1.var_.moveOldPos10128, var_421_22, var_421_21)
			end

			if arg_418_1.time_ >= var_421_17 + var_421_20 and arg_418_1.time_ < var_421_17 + var_421_20 + arg_421_0 then
				var_421_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_421_23 = arg_418_1.actors_["1060"].transform
			local var_421_24 = 0

			if var_421_24 < arg_418_1.time_ and arg_418_1.time_ <= var_421_24 + arg_421_0 then
				arg_418_1.var_.moveOldPos1060 = var_421_23.localPosition
				var_421_23.localScale = Vector3.New(1, 1, 1)

				arg_418_1:CheckSpriteTmpPos("1060", 4)

				local var_421_25 = var_421_23.childCount

				for iter_421_9 = 0, var_421_25 - 1 do
					local var_421_26 = var_421_23:GetChild(iter_421_9)

					if var_421_26.name == "" or not string.find(var_421_26.name, "split") then
						var_421_26.gameObject:SetActive(true)
					else
						var_421_26.gameObject:SetActive(false)
					end
				end
			end

			local var_421_27 = 0.001

			if var_421_24 <= arg_418_1.time_ and arg_418_1.time_ < var_421_24 + var_421_27 then
				local var_421_28 = (arg_418_1.time_ - var_421_24) / var_421_27
				local var_421_29 = Vector3.New(420.9, -430.8, 6.9)

				var_421_23.localPosition = Vector3.Lerp(arg_418_1.var_.moveOldPos1060, var_421_29, var_421_28)
			end

			if arg_418_1.time_ >= var_421_24 + var_421_27 and arg_418_1.time_ < var_421_24 + var_421_27 + arg_421_0 then
				var_421_23.localPosition = Vector3.New(420.9, -430.8, 6.9)
			end

			local var_421_30 = 0
			local var_421_31 = 0.275

			if var_421_30 < arg_418_1.time_ and arg_418_1.time_ <= var_421_30 + arg_421_0 then
				arg_418_1.talkMaxDuration = 0
				arg_418_1.dialogCg_.alpha = 1

				arg_418_1.dialog_:SetActive(true)
				SetActive(arg_418_1.leftNameGo_, true)

				local var_421_32 = arg_418_1:FormatText(StoryNameCfg[584].name)

				arg_418_1.leftNameTxt_.text = var_421_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_418_1.leftNameTxt_.transform)

				arg_418_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_418_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_418_1:RecordName(arg_418_1.leftNameTxt_.text)
				SetActive(arg_418_1.iconTrs_.gameObject, false)
				arg_418_1.callingController_:SetSelectedState("normal")

				local var_421_33 = arg_418_1:GetWordFromCfg(417161102)
				local var_421_34 = arg_418_1:FormatText(var_421_33.content)

				arg_418_1.text_.text = var_421_34

				LuaForUtil.ClearLinePrefixSymbol(arg_418_1.text_)

				local var_421_35 = 11
				local var_421_36 = utf8.len(var_421_34)
				local var_421_37 = var_421_35 <= 0 and var_421_31 or var_421_31 * (var_421_36 / var_421_35)

				if var_421_37 > 0 and var_421_31 < var_421_37 then
					arg_418_1.talkMaxDuration = var_421_37

					if var_421_37 + var_421_30 > arg_418_1.duration_ then
						arg_418_1.duration_ = var_421_37 + var_421_30
					end
				end

				arg_418_1.text_.text = var_421_34
				arg_418_1.typewritter.percent = 0

				arg_418_1.typewritter:SetDirty()
				arg_418_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161102", "story_v_out_417161.awb") ~= 0 then
					local var_421_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161102", "story_v_out_417161.awb") / 1000

					if var_421_38 + var_421_30 > arg_418_1.duration_ then
						arg_418_1.duration_ = var_421_38 + var_421_30
					end

					if var_421_33.prefab_name ~= "" and arg_418_1.actors_[var_421_33.prefab_name] ~= nil then
						local var_421_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_418_1.actors_[var_421_33.prefab_name].transform, "story_v_out_417161", "417161102", "story_v_out_417161.awb")

						arg_418_1:RecordAudio("417161102", var_421_39)
						arg_418_1:RecordAudio("417161102", var_421_39)
					else
						arg_418_1:AudioAction("play", "voice", "story_v_out_417161", "417161102", "story_v_out_417161.awb")
					end

					arg_418_1:RecordHistoryTalkVoice("story_v_out_417161", "417161102", "story_v_out_417161.awb")
				end

				arg_418_1:RecordContent(arg_418_1.text_.text)
			end

			local var_421_40 = math.max(var_421_31, arg_418_1.talkMaxDuration)

			if var_421_30 <= arg_418_1.time_ and arg_418_1.time_ < var_421_30 + var_421_40 then
				arg_418_1.typewritter.percent = (arg_418_1.time_ - var_421_30) / var_421_40

				arg_418_1.typewritter:SetDirty()
			end

			if arg_418_1.time_ >= var_421_30 + var_421_40 and arg_418_1.time_ < var_421_30 + var_421_40 + arg_421_0 then
				arg_418_1.typewritter.percent = 1

				arg_418_1.typewritter:SetDirty()
				arg_418_1:ShowNextGo(true)
			end
		end
	end,
	Play417161103 = function(arg_422_0, arg_422_1)
		arg_422_1.time_ = 0
		arg_422_1.frameCnt_ = 0
		arg_422_1.state_ = "playing"
		arg_422_1.curTalkId_ = 417161103
		arg_422_1.duration_ = 9.8

		local var_422_0 = {
			zh = 6.066,
			ja = 9.8
		}
		local var_422_1 = manager.audio:GetLocalizationFlag()

		if var_422_0[var_422_1] ~= nil then
			arg_422_1.duration_ = var_422_0[var_422_1]
		end

		SetActive(arg_422_1.tipsGo_, false)

		function arg_422_1.onSingleLineFinish_()
			arg_422_1.onSingleLineUpdate_ = nil
			arg_422_1.onSingleLineFinish_ = nil
			arg_422_1.state_ = "waiting"
		end

		function arg_422_1.playNext_(arg_424_0)
			if arg_424_0 == 1 then
				arg_422_0:Play417161104(arg_422_1)
			end
		end

		function arg_422_1.onSingleLineUpdate_(arg_425_0)
			local var_425_0 = arg_422_1.actors_["10128"]
			local var_425_1 = 0

			if var_425_1 < arg_422_1.time_ and arg_422_1.time_ <= var_425_1 + arg_425_0 and not isNil(var_425_0) and arg_422_1.var_.actorSpriteComps10128 == nil then
				arg_422_1.var_.actorSpriteComps10128 = var_425_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_425_2 = 0.2

			if var_425_1 <= arg_422_1.time_ and arg_422_1.time_ < var_425_1 + var_425_2 and not isNil(var_425_0) then
				local var_425_3 = (arg_422_1.time_ - var_425_1) / var_425_2

				if arg_422_1.var_.actorSpriteComps10128 then
					for iter_425_0, iter_425_1 in pairs(arg_422_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_425_1 then
							if arg_422_1.isInRecall_ then
								local var_425_4 = Mathf.Lerp(iter_425_1.color.r, arg_422_1.hightColor1.r, var_425_3)
								local var_425_5 = Mathf.Lerp(iter_425_1.color.g, arg_422_1.hightColor1.g, var_425_3)
								local var_425_6 = Mathf.Lerp(iter_425_1.color.b, arg_422_1.hightColor1.b, var_425_3)

								iter_425_1.color = Color.New(var_425_4, var_425_5, var_425_6)
							else
								local var_425_7 = Mathf.Lerp(iter_425_1.color.r, 1, var_425_3)

								iter_425_1.color = Color.New(var_425_7, var_425_7, var_425_7)
							end
						end
					end
				end
			end

			if arg_422_1.time_ >= var_425_1 + var_425_2 and arg_422_1.time_ < var_425_1 + var_425_2 + arg_425_0 and not isNil(var_425_0) and arg_422_1.var_.actorSpriteComps10128 then
				for iter_425_2, iter_425_3 in pairs(arg_422_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_425_3 then
						if arg_422_1.isInRecall_ then
							iter_425_3.color = arg_422_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_425_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_422_1.var_.actorSpriteComps10128 = nil
			end

			local var_425_8 = arg_422_1.actors_["1060"]
			local var_425_9 = 0

			if var_425_9 < arg_422_1.time_ and arg_422_1.time_ <= var_425_9 + arg_425_0 and not isNil(var_425_8) and arg_422_1.var_.actorSpriteComps1060 == nil then
				arg_422_1.var_.actorSpriteComps1060 = var_425_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_425_10 = 0.2

			if var_425_9 <= arg_422_1.time_ and arg_422_1.time_ < var_425_9 + var_425_10 and not isNil(var_425_8) then
				local var_425_11 = (arg_422_1.time_ - var_425_9) / var_425_10

				if arg_422_1.var_.actorSpriteComps1060 then
					for iter_425_4, iter_425_5 in pairs(arg_422_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_425_5 then
							if arg_422_1.isInRecall_ then
								local var_425_12 = Mathf.Lerp(iter_425_5.color.r, arg_422_1.hightColor2.r, var_425_11)
								local var_425_13 = Mathf.Lerp(iter_425_5.color.g, arg_422_1.hightColor2.g, var_425_11)
								local var_425_14 = Mathf.Lerp(iter_425_5.color.b, arg_422_1.hightColor2.b, var_425_11)

								iter_425_5.color = Color.New(var_425_12, var_425_13, var_425_14)
							else
								local var_425_15 = Mathf.Lerp(iter_425_5.color.r, 0.5, var_425_11)

								iter_425_5.color = Color.New(var_425_15, var_425_15, var_425_15)
							end
						end
					end
				end
			end

			if arg_422_1.time_ >= var_425_9 + var_425_10 and arg_422_1.time_ < var_425_9 + var_425_10 + arg_425_0 and not isNil(var_425_8) and arg_422_1.var_.actorSpriteComps1060 then
				for iter_425_6, iter_425_7 in pairs(arg_422_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_425_7 then
						if arg_422_1.isInRecall_ then
							iter_425_7.color = arg_422_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_425_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_422_1.var_.actorSpriteComps1060 = nil
			end

			local var_425_16 = 0
			local var_425_17 = 0.8

			if var_425_16 < arg_422_1.time_ and arg_422_1.time_ <= var_425_16 + arg_425_0 then
				arg_422_1.talkMaxDuration = 0
				arg_422_1.dialogCg_.alpha = 1

				arg_422_1.dialog_:SetActive(true)
				SetActive(arg_422_1.leftNameGo_, true)

				local var_425_18 = arg_422_1:FormatText(StoryNameCfg[595].name)

				arg_422_1.leftNameTxt_.text = var_425_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_422_1.leftNameTxt_.transform)

				arg_422_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_422_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_422_1:RecordName(arg_422_1.leftNameTxt_.text)
				SetActive(arg_422_1.iconTrs_.gameObject, false)
				arg_422_1.callingController_:SetSelectedState("normal")

				local var_425_19 = arg_422_1:GetWordFromCfg(417161103)
				local var_425_20 = arg_422_1:FormatText(var_425_19.content)

				arg_422_1.text_.text = var_425_20

				LuaForUtil.ClearLinePrefixSymbol(arg_422_1.text_)

				local var_425_21 = 32
				local var_425_22 = utf8.len(var_425_20)
				local var_425_23 = var_425_21 <= 0 and var_425_17 or var_425_17 * (var_425_22 / var_425_21)

				if var_425_23 > 0 and var_425_17 < var_425_23 then
					arg_422_1.talkMaxDuration = var_425_23

					if var_425_23 + var_425_16 > arg_422_1.duration_ then
						arg_422_1.duration_ = var_425_23 + var_425_16
					end
				end

				arg_422_1.text_.text = var_425_20
				arg_422_1.typewritter.percent = 0

				arg_422_1.typewritter:SetDirty()
				arg_422_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161103", "story_v_out_417161.awb") ~= 0 then
					local var_425_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161103", "story_v_out_417161.awb") / 1000

					if var_425_24 + var_425_16 > arg_422_1.duration_ then
						arg_422_1.duration_ = var_425_24 + var_425_16
					end

					if var_425_19.prefab_name ~= "" and arg_422_1.actors_[var_425_19.prefab_name] ~= nil then
						local var_425_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_422_1.actors_[var_425_19.prefab_name].transform, "story_v_out_417161", "417161103", "story_v_out_417161.awb")

						arg_422_1:RecordAudio("417161103", var_425_25)
						arg_422_1:RecordAudio("417161103", var_425_25)
					else
						arg_422_1:AudioAction("play", "voice", "story_v_out_417161", "417161103", "story_v_out_417161.awb")
					end

					arg_422_1:RecordHistoryTalkVoice("story_v_out_417161", "417161103", "story_v_out_417161.awb")
				end

				arg_422_1:RecordContent(arg_422_1.text_.text)
			end

			local var_425_26 = math.max(var_425_17, arg_422_1.talkMaxDuration)

			if var_425_16 <= arg_422_1.time_ and arg_422_1.time_ < var_425_16 + var_425_26 then
				arg_422_1.typewritter.percent = (arg_422_1.time_ - var_425_16) / var_425_26

				arg_422_1.typewritter:SetDirty()
			end

			if arg_422_1.time_ >= var_425_16 + var_425_26 and arg_422_1.time_ < var_425_16 + var_425_26 + arg_425_0 then
				arg_422_1.typewritter.percent = 1

				arg_422_1.typewritter:SetDirty()
				arg_422_1:ShowNextGo(true)
			end
		end
	end,
	Play417161104 = function(arg_426_0, arg_426_1)
		arg_426_1.time_ = 0
		arg_426_1.frameCnt_ = 0
		arg_426_1.state_ = "playing"
		arg_426_1.curTalkId_ = 417161104
		arg_426_1.duration_ = 11.8

		local var_426_0 = {
			zh = 11.8,
			ja = 10.833
		}
		local var_426_1 = manager.audio:GetLocalizationFlag()

		if var_426_0[var_426_1] ~= nil then
			arg_426_1.duration_ = var_426_0[var_426_1]
		end

		SetActive(arg_426_1.tipsGo_, false)

		function arg_426_1.onSingleLineFinish_()
			arg_426_1.onSingleLineUpdate_ = nil
			arg_426_1.onSingleLineFinish_ = nil
			arg_426_1.state_ = "waiting"
		end

		function arg_426_1.playNext_(arg_428_0)
			if arg_428_0 == 1 then
				arg_426_0:Play417161105(arg_426_1)
			end
		end

		function arg_426_1.onSingleLineUpdate_(arg_429_0)
			local var_429_0 = 0
			local var_429_1 = 1.475

			if var_429_0 < arg_426_1.time_ and arg_426_1.time_ <= var_429_0 + arg_429_0 then
				arg_426_1.talkMaxDuration = 0
				arg_426_1.dialogCg_.alpha = 1

				arg_426_1.dialog_:SetActive(true)
				SetActive(arg_426_1.leftNameGo_, true)

				local var_429_2 = arg_426_1:FormatText(StoryNameCfg[595].name)

				arg_426_1.leftNameTxt_.text = var_429_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_426_1.leftNameTxt_.transform)

				arg_426_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_426_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_426_1:RecordName(arg_426_1.leftNameTxt_.text)
				SetActive(arg_426_1.iconTrs_.gameObject, false)
				arg_426_1.callingController_:SetSelectedState("normal")

				local var_429_3 = arg_426_1:GetWordFromCfg(417161104)
				local var_429_4 = arg_426_1:FormatText(var_429_3.content)

				arg_426_1.text_.text = var_429_4

				LuaForUtil.ClearLinePrefixSymbol(arg_426_1.text_)

				local var_429_5 = 59
				local var_429_6 = utf8.len(var_429_4)
				local var_429_7 = var_429_5 <= 0 and var_429_1 or var_429_1 * (var_429_6 / var_429_5)

				if var_429_7 > 0 and var_429_1 < var_429_7 then
					arg_426_1.talkMaxDuration = var_429_7

					if var_429_7 + var_429_0 > arg_426_1.duration_ then
						arg_426_1.duration_ = var_429_7 + var_429_0
					end
				end

				arg_426_1.text_.text = var_429_4
				arg_426_1.typewritter.percent = 0

				arg_426_1.typewritter:SetDirty()
				arg_426_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161104", "story_v_out_417161.awb") ~= 0 then
					local var_429_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161104", "story_v_out_417161.awb") / 1000

					if var_429_8 + var_429_0 > arg_426_1.duration_ then
						arg_426_1.duration_ = var_429_8 + var_429_0
					end

					if var_429_3.prefab_name ~= "" and arg_426_1.actors_[var_429_3.prefab_name] ~= nil then
						local var_429_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_426_1.actors_[var_429_3.prefab_name].transform, "story_v_out_417161", "417161104", "story_v_out_417161.awb")

						arg_426_1:RecordAudio("417161104", var_429_9)
						arg_426_1:RecordAudio("417161104", var_429_9)
					else
						arg_426_1:AudioAction("play", "voice", "story_v_out_417161", "417161104", "story_v_out_417161.awb")
					end

					arg_426_1:RecordHistoryTalkVoice("story_v_out_417161", "417161104", "story_v_out_417161.awb")
				end

				arg_426_1:RecordContent(arg_426_1.text_.text)
			end

			local var_429_10 = math.max(var_429_1, arg_426_1.talkMaxDuration)

			if var_429_0 <= arg_426_1.time_ and arg_426_1.time_ < var_429_0 + var_429_10 then
				arg_426_1.typewritter.percent = (arg_426_1.time_ - var_429_0) / var_429_10

				arg_426_1.typewritter:SetDirty()
			end

			if arg_426_1.time_ >= var_429_0 + var_429_10 and arg_426_1.time_ < var_429_0 + var_429_10 + arg_429_0 then
				arg_426_1.typewritter.percent = 1

				arg_426_1.typewritter:SetDirty()
				arg_426_1:ShowNextGo(true)
			end
		end
	end,
	Play417161105 = function(arg_430_0, arg_430_1)
		arg_430_1.time_ = 0
		arg_430_1.frameCnt_ = 0
		arg_430_1.state_ = "playing"
		arg_430_1.curTalkId_ = 417161105
		arg_430_1.duration_ = 5

		local var_430_0 = {
			zh = 1.933,
			ja = 5
		}
		local var_430_1 = manager.audio:GetLocalizationFlag()

		if var_430_0[var_430_1] ~= nil then
			arg_430_1.duration_ = var_430_0[var_430_1]
		end

		SetActive(arg_430_1.tipsGo_, false)

		function arg_430_1.onSingleLineFinish_()
			arg_430_1.onSingleLineUpdate_ = nil
			arg_430_1.onSingleLineFinish_ = nil
			arg_430_1.state_ = "waiting"
		end

		function arg_430_1.playNext_(arg_432_0)
			if arg_432_0 == 1 then
				arg_430_0:Play417161106(arg_430_1)
			end
		end

		function arg_430_1.onSingleLineUpdate_(arg_433_0)
			local var_433_0 = arg_430_1.actors_["1060"]
			local var_433_1 = 0

			if var_433_1 < arg_430_1.time_ and arg_430_1.time_ <= var_433_1 + arg_433_0 and not isNil(var_433_0) and arg_430_1.var_.actorSpriteComps1060 == nil then
				arg_430_1.var_.actorSpriteComps1060 = var_433_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_433_2 = 0.2

			if var_433_1 <= arg_430_1.time_ and arg_430_1.time_ < var_433_1 + var_433_2 and not isNil(var_433_0) then
				local var_433_3 = (arg_430_1.time_ - var_433_1) / var_433_2

				if arg_430_1.var_.actorSpriteComps1060 then
					for iter_433_0, iter_433_1 in pairs(arg_430_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_433_1 then
							if arg_430_1.isInRecall_ then
								local var_433_4 = Mathf.Lerp(iter_433_1.color.r, arg_430_1.hightColor1.r, var_433_3)
								local var_433_5 = Mathf.Lerp(iter_433_1.color.g, arg_430_1.hightColor1.g, var_433_3)
								local var_433_6 = Mathf.Lerp(iter_433_1.color.b, arg_430_1.hightColor1.b, var_433_3)

								iter_433_1.color = Color.New(var_433_4, var_433_5, var_433_6)
							else
								local var_433_7 = Mathf.Lerp(iter_433_1.color.r, 1, var_433_3)

								iter_433_1.color = Color.New(var_433_7, var_433_7, var_433_7)
							end
						end
					end
				end
			end

			if arg_430_1.time_ >= var_433_1 + var_433_2 and arg_430_1.time_ < var_433_1 + var_433_2 + arg_433_0 and not isNil(var_433_0) and arg_430_1.var_.actorSpriteComps1060 then
				for iter_433_2, iter_433_3 in pairs(arg_430_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_433_3 then
						if arg_430_1.isInRecall_ then
							iter_433_3.color = arg_430_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_433_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_430_1.var_.actorSpriteComps1060 = nil
			end

			local var_433_8 = arg_430_1.actors_["10128"]
			local var_433_9 = 0

			if var_433_9 < arg_430_1.time_ and arg_430_1.time_ <= var_433_9 + arg_433_0 and not isNil(var_433_8) and arg_430_1.var_.actorSpriteComps10128 == nil then
				arg_430_1.var_.actorSpriteComps10128 = var_433_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_433_10 = 0.2

			if var_433_9 <= arg_430_1.time_ and arg_430_1.time_ < var_433_9 + var_433_10 and not isNil(var_433_8) then
				local var_433_11 = (arg_430_1.time_ - var_433_9) / var_433_10

				if arg_430_1.var_.actorSpriteComps10128 then
					for iter_433_4, iter_433_5 in pairs(arg_430_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_433_5 then
							if arg_430_1.isInRecall_ then
								local var_433_12 = Mathf.Lerp(iter_433_5.color.r, arg_430_1.hightColor2.r, var_433_11)
								local var_433_13 = Mathf.Lerp(iter_433_5.color.g, arg_430_1.hightColor2.g, var_433_11)
								local var_433_14 = Mathf.Lerp(iter_433_5.color.b, arg_430_1.hightColor2.b, var_433_11)

								iter_433_5.color = Color.New(var_433_12, var_433_13, var_433_14)
							else
								local var_433_15 = Mathf.Lerp(iter_433_5.color.r, 0.5, var_433_11)

								iter_433_5.color = Color.New(var_433_15, var_433_15, var_433_15)
							end
						end
					end
				end
			end

			if arg_430_1.time_ >= var_433_9 + var_433_10 and arg_430_1.time_ < var_433_9 + var_433_10 + arg_433_0 and not isNil(var_433_8) and arg_430_1.var_.actorSpriteComps10128 then
				for iter_433_6, iter_433_7 in pairs(arg_430_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_433_7 then
						if arg_430_1.isInRecall_ then
							iter_433_7.color = arg_430_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_433_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_430_1.var_.actorSpriteComps10128 = nil
			end

			local var_433_16 = 0
			local var_433_17 = 0.275

			if var_433_16 < arg_430_1.time_ and arg_430_1.time_ <= var_433_16 + arg_433_0 then
				arg_430_1.talkMaxDuration = 0
				arg_430_1.dialogCg_.alpha = 1

				arg_430_1.dialog_:SetActive(true)
				SetActive(arg_430_1.leftNameGo_, true)

				local var_433_18 = arg_430_1:FormatText(StoryNameCfg[584].name)

				arg_430_1.leftNameTxt_.text = var_433_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_430_1.leftNameTxt_.transform)

				arg_430_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_430_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_430_1:RecordName(arg_430_1.leftNameTxt_.text)
				SetActive(arg_430_1.iconTrs_.gameObject, false)
				arg_430_1.callingController_:SetSelectedState("normal")

				local var_433_19 = arg_430_1:GetWordFromCfg(417161105)
				local var_433_20 = arg_430_1:FormatText(var_433_19.content)

				arg_430_1.text_.text = var_433_20

				LuaForUtil.ClearLinePrefixSymbol(arg_430_1.text_)

				local var_433_21 = 11
				local var_433_22 = utf8.len(var_433_20)
				local var_433_23 = var_433_21 <= 0 and var_433_17 or var_433_17 * (var_433_22 / var_433_21)

				if var_433_23 > 0 and var_433_17 < var_433_23 then
					arg_430_1.talkMaxDuration = var_433_23

					if var_433_23 + var_433_16 > arg_430_1.duration_ then
						arg_430_1.duration_ = var_433_23 + var_433_16
					end
				end

				arg_430_1.text_.text = var_433_20
				arg_430_1.typewritter.percent = 0

				arg_430_1.typewritter:SetDirty()
				arg_430_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161105", "story_v_out_417161.awb") ~= 0 then
					local var_433_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161105", "story_v_out_417161.awb") / 1000

					if var_433_24 + var_433_16 > arg_430_1.duration_ then
						arg_430_1.duration_ = var_433_24 + var_433_16
					end

					if var_433_19.prefab_name ~= "" and arg_430_1.actors_[var_433_19.prefab_name] ~= nil then
						local var_433_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_430_1.actors_[var_433_19.prefab_name].transform, "story_v_out_417161", "417161105", "story_v_out_417161.awb")

						arg_430_1:RecordAudio("417161105", var_433_25)
						arg_430_1:RecordAudio("417161105", var_433_25)
					else
						arg_430_1:AudioAction("play", "voice", "story_v_out_417161", "417161105", "story_v_out_417161.awb")
					end

					arg_430_1:RecordHistoryTalkVoice("story_v_out_417161", "417161105", "story_v_out_417161.awb")
				end

				arg_430_1:RecordContent(arg_430_1.text_.text)
			end

			local var_433_26 = math.max(var_433_17, arg_430_1.talkMaxDuration)

			if var_433_16 <= arg_430_1.time_ and arg_430_1.time_ < var_433_16 + var_433_26 then
				arg_430_1.typewritter.percent = (arg_430_1.time_ - var_433_16) / var_433_26

				arg_430_1.typewritter:SetDirty()
			end

			if arg_430_1.time_ >= var_433_16 + var_433_26 and arg_430_1.time_ < var_433_16 + var_433_26 + arg_433_0 then
				arg_430_1.typewritter.percent = 1

				arg_430_1.typewritter:SetDirty()
				arg_430_1:ShowNextGo(true)
			end
		end
	end,
	Play417161106 = function(arg_434_0, arg_434_1)
		arg_434_1.time_ = 0
		arg_434_1.frameCnt_ = 0
		arg_434_1.state_ = "playing"
		arg_434_1.curTalkId_ = 417161106
		arg_434_1.duration_ = 5.7

		local var_434_0 = {
			zh = 2.433,
			ja = 5.7
		}
		local var_434_1 = manager.audio:GetLocalizationFlag()

		if var_434_0[var_434_1] ~= nil then
			arg_434_1.duration_ = var_434_0[var_434_1]
		end

		SetActive(arg_434_1.tipsGo_, false)

		function arg_434_1.onSingleLineFinish_()
			arg_434_1.onSingleLineUpdate_ = nil
			arg_434_1.onSingleLineFinish_ = nil
			arg_434_1.state_ = "waiting"
		end

		function arg_434_1.playNext_(arg_436_0)
			if arg_436_0 == 1 then
				arg_434_0:Play417161107(arg_434_1)
			end
		end

		function arg_434_1.onSingleLineUpdate_(arg_437_0)
			local var_437_0 = arg_434_1.actors_["10128"]
			local var_437_1 = 0

			if var_437_1 < arg_434_1.time_ and arg_434_1.time_ <= var_437_1 + arg_437_0 and not isNil(var_437_0) and arg_434_1.var_.actorSpriteComps10128 == nil then
				arg_434_1.var_.actorSpriteComps10128 = var_437_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_437_2 = 0.2

			if var_437_1 <= arg_434_1.time_ and arg_434_1.time_ < var_437_1 + var_437_2 and not isNil(var_437_0) then
				local var_437_3 = (arg_434_1.time_ - var_437_1) / var_437_2

				if arg_434_1.var_.actorSpriteComps10128 then
					for iter_437_0, iter_437_1 in pairs(arg_434_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_437_1 then
							if arg_434_1.isInRecall_ then
								local var_437_4 = Mathf.Lerp(iter_437_1.color.r, arg_434_1.hightColor1.r, var_437_3)
								local var_437_5 = Mathf.Lerp(iter_437_1.color.g, arg_434_1.hightColor1.g, var_437_3)
								local var_437_6 = Mathf.Lerp(iter_437_1.color.b, arg_434_1.hightColor1.b, var_437_3)

								iter_437_1.color = Color.New(var_437_4, var_437_5, var_437_6)
							else
								local var_437_7 = Mathf.Lerp(iter_437_1.color.r, 1, var_437_3)

								iter_437_1.color = Color.New(var_437_7, var_437_7, var_437_7)
							end
						end
					end
				end
			end

			if arg_434_1.time_ >= var_437_1 + var_437_2 and arg_434_1.time_ < var_437_1 + var_437_2 + arg_437_0 and not isNil(var_437_0) and arg_434_1.var_.actorSpriteComps10128 then
				for iter_437_2, iter_437_3 in pairs(arg_434_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_437_3 then
						if arg_434_1.isInRecall_ then
							iter_437_3.color = arg_434_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_437_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_434_1.var_.actorSpriteComps10128 = nil
			end

			local var_437_8 = arg_434_1.actors_["1060"]
			local var_437_9 = 0

			if var_437_9 < arg_434_1.time_ and arg_434_1.time_ <= var_437_9 + arg_437_0 and not isNil(var_437_8) and arg_434_1.var_.actorSpriteComps1060 == nil then
				arg_434_1.var_.actorSpriteComps1060 = var_437_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_437_10 = 0.2

			if var_437_9 <= arg_434_1.time_ and arg_434_1.time_ < var_437_9 + var_437_10 and not isNil(var_437_8) then
				local var_437_11 = (arg_434_1.time_ - var_437_9) / var_437_10

				if arg_434_1.var_.actorSpriteComps1060 then
					for iter_437_4, iter_437_5 in pairs(arg_434_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_437_5 then
							if arg_434_1.isInRecall_ then
								local var_437_12 = Mathf.Lerp(iter_437_5.color.r, arg_434_1.hightColor2.r, var_437_11)
								local var_437_13 = Mathf.Lerp(iter_437_5.color.g, arg_434_1.hightColor2.g, var_437_11)
								local var_437_14 = Mathf.Lerp(iter_437_5.color.b, arg_434_1.hightColor2.b, var_437_11)

								iter_437_5.color = Color.New(var_437_12, var_437_13, var_437_14)
							else
								local var_437_15 = Mathf.Lerp(iter_437_5.color.r, 0.5, var_437_11)

								iter_437_5.color = Color.New(var_437_15, var_437_15, var_437_15)
							end
						end
					end
				end
			end

			if arg_434_1.time_ >= var_437_9 + var_437_10 and arg_434_1.time_ < var_437_9 + var_437_10 + arg_437_0 and not isNil(var_437_8) and arg_434_1.var_.actorSpriteComps1060 then
				for iter_437_6, iter_437_7 in pairs(arg_434_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_437_7 then
						if arg_434_1.isInRecall_ then
							iter_437_7.color = arg_434_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_437_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_434_1.var_.actorSpriteComps1060 = nil
			end

			local var_437_16 = arg_434_1.actors_["10128"].transform
			local var_437_17 = 0

			if var_437_17 < arg_434_1.time_ and arg_434_1.time_ <= var_437_17 + arg_437_0 then
				arg_434_1.var_.moveOldPos10128 = var_437_16.localPosition
				var_437_16.localScale = Vector3.New(1, 1, 1)

				arg_434_1:CheckSpriteTmpPos("10128", 2)

				local var_437_18 = var_437_16.childCount

				for iter_437_8 = 0, var_437_18 - 1 do
					local var_437_19 = var_437_16:GetChild(iter_437_8)

					if var_437_19.name == "split_6" or not string.find(var_437_19.name, "split") then
						var_437_19.gameObject:SetActive(true)
					else
						var_437_19.gameObject:SetActive(false)
					end
				end
			end

			local var_437_20 = 0.001

			if var_437_17 <= arg_434_1.time_ and arg_434_1.time_ < var_437_17 + var_437_20 then
				local var_437_21 = (arg_434_1.time_ - var_437_17) / var_437_20
				local var_437_22 = Vector3.New(-390, -347, -300)

				var_437_16.localPosition = Vector3.Lerp(arg_434_1.var_.moveOldPos10128, var_437_22, var_437_21)
			end

			if arg_434_1.time_ >= var_437_17 + var_437_20 and arg_434_1.time_ < var_437_17 + var_437_20 + arg_437_0 then
				var_437_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_437_23 = 0
			local var_437_24 = 0.275

			if var_437_23 < arg_434_1.time_ and arg_434_1.time_ <= var_437_23 + arg_437_0 then
				arg_434_1.talkMaxDuration = 0
				arg_434_1.dialogCg_.alpha = 1

				arg_434_1.dialog_:SetActive(true)
				SetActive(arg_434_1.leftNameGo_, true)

				local var_437_25 = arg_434_1:FormatText(StoryNameCfg[595].name)

				arg_434_1.leftNameTxt_.text = var_437_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_434_1.leftNameTxt_.transform)

				arg_434_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_434_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_434_1:RecordName(arg_434_1.leftNameTxt_.text)
				SetActive(arg_434_1.iconTrs_.gameObject, false)
				arg_434_1.callingController_:SetSelectedState("normal")

				local var_437_26 = arg_434_1:GetWordFromCfg(417161106)
				local var_437_27 = arg_434_1:FormatText(var_437_26.content)

				arg_434_1.text_.text = var_437_27

				LuaForUtil.ClearLinePrefixSymbol(arg_434_1.text_)

				local var_437_28 = 11
				local var_437_29 = utf8.len(var_437_27)
				local var_437_30 = var_437_28 <= 0 and var_437_24 or var_437_24 * (var_437_29 / var_437_28)

				if var_437_30 > 0 and var_437_24 < var_437_30 then
					arg_434_1.talkMaxDuration = var_437_30

					if var_437_30 + var_437_23 > arg_434_1.duration_ then
						arg_434_1.duration_ = var_437_30 + var_437_23
					end
				end

				arg_434_1.text_.text = var_437_27
				arg_434_1.typewritter.percent = 0

				arg_434_1.typewritter:SetDirty()
				arg_434_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161106", "story_v_out_417161.awb") ~= 0 then
					local var_437_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161106", "story_v_out_417161.awb") / 1000

					if var_437_31 + var_437_23 > arg_434_1.duration_ then
						arg_434_1.duration_ = var_437_31 + var_437_23
					end

					if var_437_26.prefab_name ~= "" and arg_434_1.actors_[var_437_26.prefab_name] ~= nil then
						local var_437_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_434_1.actors_[var_437_26.prefab_name].transform, "story_v_out_417161", "417161106", "story_v_out_417161.awb")

						arg_434_1:RecordAudio("417161106", var_437_32)
						arg_434_1:RecordAudio("417161106", var_437_32)
					else
						arg_434_1:AudioAction("play", "voice", "story_v_out_417161", "417161106", "story_v_out_417161.awb")
					end

					arg_434_1:RecordHistoryTalkVoice("story_v_out_417161", "417161106", "story_v_out_417161.awb")
				end

				arg_434_1:RecordContent(arg_434_1.text_.text)
			end

			local var_437_33 = math.max(var_437_24, arg_434_1.talkMaxDuration)

			if var_437_23 <= arg_434_1.time_ and arg_434_1.time_ < var_437_23 + var_437_33 then
				arg_434_1.typewritter.percent = (arg_434_1.time_ - var_437_23) / var_437_33

				arg_434_1.typewritter:SetDirty()
			end

			if arg_434_1.time_ >= var_437_23 + var_437_33 and arg_434_1.time_ < var_437_23 + var_437_33 + arg_437_0 then
				arg_434_1.typewritter.percent = 1

				arg_434_1.typewritter:SetDirty()
				arg_434_1:ShowNextGo(true)
			end
		end
	end,
	Play417161107 = function(arg_438_0, arg_438_1)
		arg_438_1.time_ = 0
		arg_438_1.frameCnt_ = 0
		arg_438_1.state_ = "playing"
		arg_438_1.curTalkId_ = 417161107
		arg_438_1.duration_ = 5

		SetActive(arg_438_1.tipsGo_, false)

		function arg_438_1.onSingleLineFinish_()
			arg_438_1.onSingleLineUpdate_ = nil
			arg_438_1.onSingleLineFinish_ = nil
			arg_438_1.state_ = "waiting"
		end

		function arg_438_1.playNext_(arg_440_0)
			if arg_440_0 == 1 then
				arg_438_0:Play417161108(arg_438_1)
			end
		end

		function arg_438_1.onSingleLineUpdate_(arg_441_0)
			local var_441_0 = arg_438_1.actors_["10128"]
			local var_441_1 = 0

			if var_441_1 < arg_438_1.time_ and arg_438_1.time_ <= var_441_1 + arg_441_0 and not isNil(var_441_0) and arg_438_1.var_.actorSpriteComps10128 == nil then
				arg_438_1.var_.actorSpriteComps10128 = var_441_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_441_2 = 0.2

			if var_441_1 <= arg_438_1.time_ and arg_438_1.time_ < var_441_1 + var_441_2 and not isNil(var_441_0) then
				local var_441_3 = (arg_438_1.time_ - var_441_1) / var_441_2

				if arg_438_1.var_.actorSpriteComps10128 then
					for iter_441_0, iter_441_1 in pairs(arg_438_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_441_1 then
							if arg_438_1.isInRecall_ then
								local var_441_4 = Mathf.Lerp(iter_441_1.color.r, arg_438_1.hightColor2.r, var_441_3)
								local var_441_5 = Mathf.Lerp(iter_441_1.color.g, arg_438_1.hightColor2.g, var_441_3)
								local var_441_6 = Mathf.Lerp(iter_441_1.color.b, arg_438_1.hightColor2.b, var_441_3)

								iter_441_1.color = Color.New(var_441_4, var_441_5, var_441_6)
							else
								local var_441_7 = Mathf.Lerp(iter_441_1.color.r, 0.5, var_441_3)

								iter_441_1.color = Color.New(var_441_7, var_441_7, var_441_7)
							end
						end
					end
				end
			end

			if arg_438_1.time_ >= var_441_1 + var_441_2 and arg_438_1.time_ < var_441_1 + var_441_2 + arg_441_0 and not isNil(var_441_0) and arg_438_1.var_.actorSpriteComps10128 then
				for iter_441_2, iter_441_3 in pairs(arg_438_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_441_3 then
						if arg_438_1.isInRecall_ then
							iter_441_3.color = arg_438_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_441_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_438_1.var_.actorSpriteComps10128 = nil
			end

			local var_441_8 = arg_438_1.actors_["10128"].transform
			local var_441_9 = 0

			if var_441_9 < arg_438_1.time_ and arg_438_1.time_ <= var_441_9 + arg_441_0 then
				arg_438_1.var_.moveOldPos10128 = var_441_8.localPosition
				var_441_8.localScale = Vector3.New(1, 1, 1)

				arg_438_1:CheckSpriteTmpPos("10128", 7)

				local var_441_10 = var_441_8.childCount

				for iter_441_4 = 0, var_441_10 - 1 do
					local var_441_11 = var_441_8:GetChild(iter_441_4)

					if var_441_11.name == "" or not string.find(var_441_11.name, "split") then
						var_441_11.gameObject:SetActive(true)
					else
						var_441_11.gameObject:SetActive(false)
					end
				end
			end

			local var_441_12 = 0.001

			if var_441_9 <= arg_438_1.time_ and arg_438_1.time_ < var_441_9 + var_441_12 then
				local var_441_13 = (arg_438_1.time_ - var_441_9) / var_441_12
				local var_441_14 = Vector3.New(0, -2000, -300)

				var_441_8.localPosition = Vector3.Lerp(arg_438_1.var_.moveOldPos10128, var_441_14, var_441_13)
			end

			if arg_438_1.time_ >= var_441_9 + var_441_12 and arg_438_1.time_ < var_441_9 + var_441_12 + arg_441_0 then
				var_441_8.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_441_15 = arg_438_1.actors_["1060"].transform
			local var_441_16 = 0

			if var_441_16 < arg_438_1.time_ and arg_438_1.time_ <= var_441_16 + arg_441_0 then
				arg_438_1.var_.moveOldPos1060 = var_441_15.localPosition
				var_441_15.localScale = Vector3.New(1, 1, 1)

				arg_438_1:CheckSpriteTmpPos("1060", 7)

				local var_441_17 = var_441_15.childCount

				for iter_441_5 = 0, var_441_17 - 1 do
					local var_441_18 = var_441_15:GetChild(iter_441_5)

					if var_441_18.name == "" or not string.find(var_441_18.name, "split") then
						var_441_18.gameObject:SetActive(true)
					else
						var_441_18.gameObject:SetActive(false)
					end
				end
			end

			local var_441_19 = 0.001

			if var_441_16 <= arg_438_1.time_ and arg_438_1.time_ < var_441_16 + var_441_19 then
				local var_441_20 = (arg_438_1.time_ - var_441_16) / var_441_19
				local var_441_21 = Vector3.New(0, -2000, -40)

				var_441_15.localPosition = Vector3.Lerp(arg_438_1.var_.moveOldPos1060, var_441_21, var_441_20)
			end

			if arg_438_1.time_ >= var_441_16 + var_441_19 and arg_438_1.time_ < var_441_16 + var_441_19 + arg_441_0 then
				var_441_15.localPosition = Vector3.New(0, -2000, -40)
			end

			local var_441_22 = 0
			local var_441_23 = 0.925

			if var_441_22 < arg_438_1.time_ and arg_438_1.time_ <= var_441_22 + arg_441_0 then
				arg_438_1.talkMaxDuration = 0
				arg_438_1.dialogCg_.alpha = 1

				arg_438_1.dialog_:SetActive(true)
				SetActive(arg_438_1.leftNameGo_, false)

				arg_438_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_438_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_438_1:RecordName(arg_438_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_438_1.iconTrs_.gameObject, false)
				arg_438_1.callingController_:SetSelectedState("normal")

				local var_441_24 = arg_438_1:GetWordFromCfg(417161107)
				local var_441_25 = arg_438_1:FormatText(var_441_24.content)

				arg_438_1.text_.text = var_441_25

				LuaForUtil.ClearLinePrefixSymbol(arg_438_1.text_)

				local var_441_26 = 37
				local var_441_27 = utf8.len(var_441_25)
				local var_441_28 = var_441_26 <= 0 and var_441_23 or var_441_23 * (var_441_27 / var_441_26)

				if var_441_28 > 0 and var_441_23 < var_441_28 then
					arg_438_1.talkMaxDuration = var_441_28

					if var_441_28 + var_441_22 > arg_438_1.duration_ then
						arg_438_1.duration_ = var_441_28 + var_441_22
					end
				end

				arg_438_1.text_.text = var_441_25
				arg_438_1.typewritter.percent = 0

				arg_438_1.typewritter:SetDirty()
				arg_438_1:ShowNextGo(false)
				arg_438_1:RecordContent(arg_438_1.text_.text)
			end

			local var_441_29 = math.max(var_441_23, arg_438_1.talkMaxDuration)

			if var_441_22 <= arg_438_1.time_ and arg_438_1.time_ < var_441_22 + var_441_29 then
				arg_438_1.typewritter.percent = (arg_438_1.time_ - var_441_22) / var_441_29

				arg_438_1.typewritter:SetDirty()
			end

			if arg_438_1.time_ >= var_441_22 + var_441_29 and arg_438_1.time_ < var_441_22 + var_441_29 + arg_441_0 then
				arg_438_1.typewritter.percent = 1

				arg_438_1.typewritter:SetDirty()
				arg_438_1:ShowNextGo(true)
			end
		end
	end,
	Play417161108 = function(arg_442_0, arg_442_1)
		arg_442_1.time_ = 0
		arg_442_1.frameCnt_ = 0
		arg_442_1.state_ = "playing"
		arg_442_1.curTalkId_ = 417161108
		arg_442_1.duration_ = 5

		SetActive(arg_442_1.tipsGo_, false)

		function arg_442_1.onSingleLineFinish_()
			arg_442_1.onSingleLineUpdate_ = nil
			arg_442_1.onSingleLineFinish_ = nil
			arg_442_1.state_ = "waiting"
		end

		function arg_442_1.playNext_(arg_444_0)
			if arg_444_0 == 1 then
				arg_442_0:Play417161109(arg_442_1)
			end
		end

		function arg_442_1.onSingleLineUpdate_(arg_445_0)
			local var_445_0 = 0.499999999999
			local var_445_1 = 1

			if var_445_0 < arg_442_1.time_ and arg_442_1.time_ <= var_445_0 + arg_445_0 then
				local var_445_2 = "play"
				local var_445_3 = "effect"

				arg_442_1:AudioAction(var_445_2, var_445_3, "se_story_1311", "se_story_1311_knockcar", "")
			end

			local var_445_4 = 0
			local var_445_5 = 1.3

			if var_445_4 < arg_442_1.time_ and arg_442_1.time_ <= var_445_4 + arg_445_0 then
				arg_442_1.talkMaxDuration = 0
				arg_442_1.dialogCg_.alpha = 1

				arg_442_1.dialog_:SetActive(true)
				SetActive(arg_442_1.leftNameGo_, false)

				arg_442_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_442_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_442_1:RecordName(arg_442_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_442_1.iconTrs_.gameObject, false)
				arg_442_1.callingController_:SetSelectedState("normal")

				local var_445_6 = arg_442_1:GetWordFromCfg(417161108)
				local var_445_7 = arg_442_1:FormatText(var_445_6.content)

				arg_442_1.text_.text = var_445_7

				LuaForUtil.ClearLinePrefixSymbol(arg_442_1.text_)

				local var_445_8 = 52
				local var_445_9 = utf8.len(var_445_7)
				local var_445_10 = var_445_8 <= 0 and var_445_5 or var_445_5 * (var_445_9 / var_445_8)

				if var_445_10 > 0 and var_445_5 < var_445_10 then
					arg_442_1.talkMaxDuration = var_445_10

					if var_445_10 + var_445_4 > arg_442_1.duration_ then
						arg_442_1.duration_ = var_445_10 + var_445_4
					end
				end

				arg_442_1.text_.text = var_445_7
				arg_442_1.typewritter.percent = 0

				arg_442_1.typewritter:SetDirty()
				arg_442_1:ShowNextGo(false)
				arg_442_1:RecordContent(arg_442_1.text_.text)
			end

			local var_445_11 = math.max(var_445_5, arg_442_1.talkMaxDuration)

			if var_445_4 <= arg_442_1.time_ and arg_442_1.time_ < var_445_4 + var_445_11 then
				arg_442_1.typewritter.percent = (arg_442_1.time_ - var_445_4) / var_445_11

				arg_442_1.typewritter:SetDirty()
			end

			if arg_442_1.time_ >= var_445_4 + var_445_11 and arg_442_1.time_ < var_445_4 + var_445_11 + arg_445_0 then
				arg_442_1.typewritter.percent = 1

				arg_442_1.typewritter:SetDirty()
				arg_442_1:ShowNextGo(true)
			end
		end
	end,
	Play417161109 = function(arg_446_0, arg_446_1)
		arg_446_1.time_ = 0
		arg_446_1.frameCnt_ = 0
		arg_446_1.state_ = "playing"
		arg_446_1.curTalkId_ = 417161109
		arg_446_1.duration_ = 2.1

		SetActive(arg_446_1.tipsGo_, false)

		function arg_446_1.onSingleLineFinish_()
			arg_446_1.onSingleLineUpdate_ = nil
			arg_446_1.onSingleLineFinish_ = nil
			arg_446_1.state_ = "waiting"
		end

		function arg_446_1.playNext_(arg_448_0)
			if arg_448_0 == 1 then
				arg_446_0:Play417161110(arg_446_1)
			end
		end

		function arg_446_1.onSingleLineUpdate_(arg_449_0)
			local var_449_0 = 0

			if var_449_0 < arg_446_1.time_ and arg_446_1.time_ <= var_449_0 + arg_449_0 then
				local var_449_1 = manager.ui.mainCamera.transform.localPosition
				local var_449_2 = Vector3.New(0, 0, 10) + Vector3.New(var_449_1.x, var_449_1.y, 0)
				local var_449_3 = arg_446_1.bgs_.STblack

				var_449_3.transform.localPosition = var_449_2
				var_449_3.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_449_4 = var_449_3:GetComponent("SpriteRenderer")

				if var_449_4 and var_449_4.sprite then
					local var_449_5 = (var_449_3.transform.localPosition - var_449_1).z
					local var_449_6 = manager.ui.mainCameraCom_
					local var_449_7 = 2 * var_449_5 * Mathf.Tan(var_449_6.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_449_8 = var_449_7 * var_449_6.aspect
					local var_449_9 = var_449_4.sprite.bounds.size.x
					local var_449_10 = var_449_4.sprite.bounds.size.y
					local var_449_11 = var_449_8 / var_449_9
					local var_449_12 = var_449_7 / var_449_10
					local var_449_13 = var_449_12 < var_449_11 and var_449_11 or var_449_12

					var_449_3.transform.localScale = Vector3.New(var_449_13, var_449_13, 0)
				end

				for iter_449_0, iter_449_1 in pairs(arg_446_1.bgs_) do
					if iter_449_0 ~= "STblack" then
						iter_449_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_449_14 = 0

			if var_449_14 < arg_446_1.time_ and arg_446_1.time_ <= var_449_14 + arg_449_0 then
				arg_446_1.cswbg_:SetActive(true)

				local var_449_15 = arg_446_1.cswt_:GetComponent("RectTransform")

				arg_446_1.cswt_.alignment = UnityEngine.TextAnchor.MiddleCenter
				var_449_15.offsetMin = Vector2.New(0, 0)
				var_449_15.offsetMax = Vector2.New(0, 0)

				local var_449_16 = arg_446_1:GetWordFromCfg(419107)
				local var_449_17 = arg_446_1:FormatText(var_449_16.content)

				arg_446_1.cswt_.text = var_449_17

				LuaForUtil.ClearLinePrefixSymbol(arg_446_1.cswt_)

				arg_446_1.cswt_.fontSize = 120
				arg_446_1.cswt_:GetComponent("Text").color = Color(1, 1, 1)
				arg_446_1.cswt_.font = Asset.Load("Fonts/SourceHanSerifCN-Bold-3.0")
			end

			local var_449_18 = 0

			if var_449_18 < arg_446_1.time_ and arg_446_1.time_ <= var_449_18 + arg_449_0 then
				arg_446_1.fswbg_:SetActive(true)
				arg_446_1.dialog_:SetActive(false)

				arg_446_1.fswtw_.percent = 0

				local var_449_19 = arg_446_1:GetWordFromCfg(417161109)
				local var_449_20 = arg_446_1:FormatText(var_449_19.content)

				arg_446_1.fswt_.text = var_449_20

				LuaForUtil.ClearLinePrefixSymbol(arg_446_1.fswt_)

				arg_446_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_446_1.fswtw_:SetDirty()

				arg_446_1.typewritterCharCountI18N = 0

				arg_446_1:ShowNextGo(false)
			end

			local var_449_21 = 1.03333333333333

			if var_449_21 < arg_446_1.time_ and arg_446_1.time_ <= var_449_21 + arg_449_0 then
				arg_446_1.var_.oldValueTypewriter = arg_446_1.fswtw_.percent

				arg_446_1:ShowNextGo(false)
			end

			local var_449_22 = 4
			local var_449_23 = 0.266666666666667
			local var_449_24 = arg_446_1:GetWordFromCfg(417161109)
			local var_449_25 = arg_446_1:FormatText(var_449_24.content)
			local var_449_26, var_449_27 = arg_446_1:GetPercentByPara(var_449_25, 1)

			if var_449_21 < arg_446_1.time_ and arg_446_1.time_ <= var_449_21 + arg_449_0 then
				arg_446_1.talkMaxDuration = 0

				local var_449_28 = var_449_22 <= 0 and var_449_23 or var_449_23 * ((var_449_27 - arg_446_1.typewritterCharCountI18N) / var_449_22)

				if var_449_28 > 0 and var_449_23 < var_449_28 then
					arg_446_1.talkMaxDuration = var_449_28

					if var_449_28 + var_449_21 > arg_446_1.duration_ then
						arg_446_1.duration_ = var_449_28 + var_449_21
					end
				end
			end

			local var_449_29 = 0.266666666666667
			local var_449_30 = math.max(var_449_29, arg_446_1.talkMaxDuration)

			if var_449_21 <= arg_446_1.time_ and arg_446_1.time_ < var_449_21 + var_449_30 then
				local var_449_31 = (arg_446_1.time_ - var_449_21) / var_449_30

				arg_446_1.fswtw_.percent = Mathf.Lerp(arg_446_1.var_.oldValueTypewriter, var_449_26, var_449_31)
				arg_446_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_446_1.fswtw_:SetDirty()
			end

			if arg_446_1.time_ >= var_449_21 + var_449_30 and arg_446_1.time_ < var_449_21 + var_449_30 + arg_449_0 then
				arg_446_1.fswtw_.percent = var_449_26

				arg_446_1.fswtw_:SetDirty()
				arg_446_1:ShowNextGo(true)

				arg_446_1.typewritterCharCountI18N = var_449_27
			end

			local var_449_32 = 0

			if var_449_32 < arg_446_1.time_ and arg_446_1.time_ <= var_449_32 + arg_449_0 then
				local var_449_33 = arg_446_1.fswbg_.transform:Find("textbox/adapt/content") or arg_446_1.fswbg_.transform:Find("textbox/content")
				local var_449_34 = var_449_33:GetComponent("Text")
				local var_449_35 = var_449_33:GetComponent("RectTransform")

				var_449_34.alignment = UnityEngine.TextAnchor.LowerCenter
				var_449_35.offsetMin = Vector2.New(0, 0)
				var_449_35.offsetMax = Vector2.New(0, 0)
			end

			local var_449_36 = 1.03333333333333
			local var_449_37 = 1.066
			local var_449_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161109", "") / 1000

			if var_449_38 > 0 and var_449_37 < var_449_38 and var_449_38 + var_449_36 > arg_446_1.duration_ then
				local var_449_39 = var_449_38

				arg_446_1.duration_ = var_449_38 + var_449_36
			end

			if var_449_36 < arg_446_1.time_ and arg_446_1.time_ <= var_449_36 + arg_449_0 then
				local var_449_40 = "play"
				local var_449_41 = "voice"

				arg_446_1:AudioAction(var_449_40, var_449_41, "story_v_out_417161", "417161109", "")
			end

			local var_449_42 = 0
			local var_449_43 = 0.2

			if var_449_42 < arg_446_1.time_ and arg_446_1.time_ <= var_449_42 + arg_449_0 then
				local var_449_44 = "play"
				local var_449_45 = "music"

				arg_446_1:AudioAction(var_449_44, var_449_45, "ui_battle", "ui_battle_stopbgm", "")

				local var_449_46 = ""
				local var_449_47 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_449_47 ~= "" then
					if arg_446_1.bgmTxt_.text ~= var_449_47 and arg_446_1.bgmTxt_.text ~= "" then
						if arg_446_1.bgmTxt2_.text ~= "" then
							arg_446_1.bgmTxt_.text = arg_446_1.bgmTxt2_.text
						end

						arg_446_1.bgmTxt2_.text = var_449_47

						arg_446_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_446_1.bgmTxt_.text = var_449_47
					end

					if arg_446_1.bgmTimer then
						arg_446_1.bgmTimer:Stop()

						arg_446_1.bgmTimer = nil
					end

					if arg_446_1.settingData.show_music_name == 1 then
						arg_446_1.musicController:SetSelectedState("show")
						arg_446_1.musicAnimator_:Play("open", 0, 0)

						if arg_446_1.settingData.music_time ~= 0 then
							arg_446_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_446_1.settingData.music_time), function()
								if arg_446_1 == nil or isNil(arg_446_1.bgmTxt_) then
									return
								end

								arg_446_1.musicController:SetSelectedState("hide")
								arg_446_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_449_48 = 0.3
			local var_449_49 = 1

			if var_449_48 < arg_446_1.time_ and arg_446_1.time_ <= var_449_48 + arg_449_0 then
				local var_449_50 = "stop"
				local var_449_51 = "music"

				arg_446_1:AudioAction(var_449_50, var_449_51, "bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily.awb")

				local var_449_52 = ""
				local var_449_53 = manager.audio:GetAudioName("bgm_activity_3_10_story_daily", "bgm_activity_3_10_story_daily")

				if var_449_53 ~= "" then
					if arg_446_1.bgmTxt_.text ~= var_449_53 and arg_446_1.bgmTxt_.text ~= "" then
						if arg_446_1.bgmTxt2_.text ~= "" then
							arg_446_1.bgmTxt_.text = arg_446_1.bgmTxt2_.text
						end

						arg_446_1.bgmTxt2_.text = var_449_53

						arg_446_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_446_1.bgmTxt_.text = var_449_53
					end

					if arg_446_1.bgmTimer then
						arg_446_1.bgmTimer:Stop()

						arg_446_1.bgmTimer = nil
					end

					if arg_446_1.settingData.show_music_name == 1 then
						arg_446_1.musicController:SetSelectedState("show")
						arg_446_1.musicAnimator_:Play("open", 0, 0)

						if arg_446_1.settingData.music_time ~= 0 then
							arg_446_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_446_1.settingData.music_time), function()
								if arg_446_1 == nil or isNil(arg_446_1.bgmTxt_) then
									return
								end

								arg_446_1.musicController:SetSelectedState("hide")
								arg_446_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end
		end
	end,
	Play417161110 = function(arg_452_0, arg_452_1)
		arg_452_1.time_ = 0
		arg_452_1.frameCnt_ = 0
		arg_452_1.state_ = "playing"
		arg_452_1.curTalkId_ = 417161110
		arg_452_1.duration_ = 5.7

		SetActive(arg_452_1.tipsGo_, false)

		function arg_452_1.onSingleLineFinish_()
			arg_452_1.onSingleLineUpdate_ = nil
			arg_452_1.onSingleLineFinish_ = nil
			arg_452_1.state_ = "waiting"
		end

		function arg_452_1.playNext_(arg_454_0)
			if arg_454_0 == 1 then
				arg_452_0:Play417161111(arg_452_1)
			end
		end

		function arg_452_1.onSingleLineUpdate_(arg_455_0)
			local var_455_0 = 0

			if var_455_0 < arg_452_1.time_ and arg_452_1.time_ <= var_455_0 + arg_455_0 then
				arg_452_1.fswbg_:SetActive(true)
				arg_452_1.dialog_:SetActive(false)

				arg_452_1.fswtw_.percent = 0

				local var_455_1 = arg_452_1:GetWordFromCfg(417161110)
				local var_455_2 = arg_452_1:FormatText(var_455_1.content)

				arg_452_1.fswt_.text = var_455_2

				LuaForUtil.ClearLinePrefixSymbol(arg_452_1.fswt_)

				arg_452_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_452_1.fswtw_:SetDirty()

				arg_452_1.typewritterCharCountI18N = 0

				arg_452_1:ShowNextGo(false)
			end

			local var_455_3 = 0.0999999999999999

			if var_455_3 < arg_452_1.time_ and arg_452_1.time_ <= var_455_3 + arg_455_0 then
				arg_452_1.var_.oldValueTypewriter = arg_452_1.fswtw_.percent

				arg_452_1:ShowNextGo(false)
			end

			local var_455_4 = 24
			local var_455_5 = 1.6
			local var_455_6 = arg_452_1:GetWordFromCfg(417161110)
			local var_455_7 = arg_452_1:FormatText(var_455_6.content)
			local var_455_8, var_455_9 = arg_452_1:GetPercentByPara(var_455_7, 1)

			if var_455_3 < arg_452_1.time_ and arg_452_1.time_ <= var_455_3 + arg_455_0 then
				arg_452_1.talkMaxDuration = 0

				local var_455_10 = var_455_4 <= 0 and var_455_5 or var_455_5 * ((var_455_9 - arg_452_1.typewritterCharCountI18N) / var_455_4)

				if var_455_10 > 0 and var_455_5 < var_455_10 then
					arg_452_1.talkMaxDuration = var_455_10

					if var_455_10 + var_455_3 > arg_452_1.duration_ then
						arg_452_1.duration_ = var_455_10 + var_455_3
					end
				end
			end

			local var_455_11 = 1.6
			local var_455_12 = math.max(var_455_11, arg_452_1.talkMaxDuration)

			if var_455_3 <= arg_452_1.time_ and arg_452_1.time_ < var_455_3 + var_455_12 then
				local var_455_13 = (arg_452_1.time_ - var_455_3) / var_455_12

				arg_452_1.fswtw_.percent = Mathf.Lerp(arg_452_1.var_.oldValueTypewriter, var_455_8, var_455_13)
				arg_452_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_452_1.fswtw_:SetDirty()
			end

			if arg_452_1.time_ >= var_455_3 + var_455_12 and arg_452_1.time_ < var_455_3 + var_455_12 + arg_455_0 then
				arg_452_1.fswtw_.percent = var_455_8

				arg_452_1.fswtw_:SetDirty()
				arg_452_1:ShowNextGo(true)

				arg_452_1.typewritterCharCountI18N = var_455_9
			end

			local var_455_14 = 0.1
			local var_455_15 = 5.6
			local var_455_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161110", "") / 1000

			if var_455_16 > 0 and var_455_15 < var_455_16 and var_455_16 + var_455_14 > arg_452_1.duration_ then
				local var_455_17 = var_455_16

				arg_452_1.duration_ = var_455_16 + var_455_14
			end

			if var_455_14 < arg_452_1.time_ and arg_452_1.time_ <= var_455_14 + arg_455_0 then
				local var_455_18 = "play"
				local var_455_19 = "voice"

				arg_452_1:AudioAction(var_455_18, var_455_19, "story_v_out_417161", "417161110", "")
			end

			local var_455_20 = 0
			local var_455_21 = 0.2

			if var_455_20 < arg_452_1.time_ and arg_452_1.time_ <= var_455_20 + arg_455_0 then
				local var_455_22 = "play"
				local var_455_23 = "music"

				arg_452_1:AudioAction(var_455_22, var_455_23, "ui_battle", "ui_battle_stopbgm", "")

				local var_455_24 = ""
				local var_455_25 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_455_25 ~= "" then
					if arg_452_1.bgmTxt_.text ~= var_455_25 and arg_452_1.bgmTxt_.text ~= "" then
						if arg_452_1.bgmTxt2_.text ~= "" then
							arg_452_1.bgmTxt_.text = arg_452_1.bgmTxt2_.text
						end

						arg_452_1.bgmTxt2_.text = var_455_25

						arg_452_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_452_1.bgmTxt_.text = var_455_25
					end

					if arg_452_1.bgmTimer then
						arg_452_1.bgmTimer:Stop()

						arg_452_1.bgmTimer = nil
					end

					if arg_452_1.settingData.show_music_name == 1 then
						arg_452_1.musicController:SetSelectedState("show")
						arg_452_1.musicAnimator_:Play("open", 0, 0)

						if arg_452_1.settingData.music_time ~= 0 then
							arg_452_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_452_1.settingData.music_time), function()
								if arg_452_1 == nil or isNil(arg_452_1.bgmTxt_) then
									return
								end

								arg_452_1.musicController:SetSelectedState("hide")
								arg_452_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_455_26 = 0.5
			local var_455_27 = 1

			if var_455_26 < arg_452_1.time_ and arg_452_1.time_ <= var_455_26 + arg_455_0 then
				local var_455_28 = "play"
				local var_455_29 = "music"

				arg_452_1:AudioAction(var_455_28, var_455_29, "bgm_activity_3_10_story_scheme_1", "bgm_activity_3_10_story_scheme_1", "bgm_activity_3_10_story_scheme_1.awb")

				local var_455_30 = ""
				local var_455_31 = manager.audio:GetAudioName("bgm_activity_3_10_story_scheme_1", "bgm_activity_3_10_story_scheme_1")

				if var_455_31 ~= "" then
					if arg_452_1.bgmTxt_.text ~= var_455_31 and arg_452_1.bgmTxt_.text ~= "" then
						if arg_452_1.bgmTxt2_.text ~= "" then
							arg_452_1.bgmTxt_.text = arg_452_1.bgmTxt2_.text
						end

						arg_452_1.bgmTxt2_.text = var_455_31

						arg_452_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_452_1.bgmTxt_.text = var_455_31
					end

					if arg_452_1.bgmTimer then
						arg_452_1.bgmTimer:Stop()

						arg_452_1.bgmTimer = nil
					end

					if arg_452_1.settingData.show_music_name == 1 then
						arg_452_1.musicController:SetSelectedState("show")
						arg_452_1.musicAnimator_:Play("open", 0, 0)

						if arg_452_1.settingData.music_time ~= 0 then
							arg_452_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_452_1.settingData.music_time), function()
								if arg_452_1 == nil or isNil(arg_452_1.bgmTxt_) then
									return
								end

								arg_452_1.musicController:SetSelectedState("hide")
								arg_452_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end
		end
	end,
	Play417161111 = function(arg_458_0, arg_458_1)
		arg_458_1.time_ = 0
		arg_458_1.frameCnt_ = 0
		arg_458_1.state_ = "playing"
		arg_458_1.curTalkId_ = 417161111
		arg_458_1.duration_ = 3.57

		SetActive(arg_458_1.tipsGo_, false)

		function arg_458_1.onSingleLineFinish_()
			arg_458_1.onSingleLineUpdate_ = nil
			arg_458_1.onSingleLineFinish_ = nil
			arg_458_1.state_ = "waiting"
		end

		function arg_458_1.playNext_(arg_460_0)
			if arg_460_0 == 1 then
				arg_458_0:Play417161112(arg_458_1)
			end
		end

		function arg_458_1.onSingleLineUpdate_(arg_461_0)
			local var_461_0 = arg_458_1.actors_["10128"]
			local var_461_1 = 0

			if var_461_1 < arg_458_1.time_ and arg_458_1.time_ <= var_461_1 + arg_461_0 and not isNil(var_461_0) and arg_458_1.var_.actorSpriteComps10128 == nil then
				arg_458_1.var_.actorSpriteComps10128 = var_461_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_461_2 = 0.2

			if var_461_1 <= arg_458_1.time_ and arg_458_1.time_ < var_461_1 + var_461_2 and not isNil(var_461_0) then
				local var_461_3 = (arg_458_1.time_ - var_461_1) / var_461_2

				if arg_458_1.var_.actorSpriteComps10128 then
					for iter_461_0, iter_461_1 in pairs(arg_458_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_461_1 then
							if arg_458_1.isInRecall_ then
								local var_461_4 = Mathf.Lerp(iter_461_1.color.r, arg_458_1.hightColor1.r, var_461_3)
								local var_461_5 = Mathf.Lerp(iter_461_1.color.g, arg_458_1.hightColor1.g, var_461_3)
								local var_461_6 = Mathf.Lerp(iter_461_1.color.b, arg_458_1.hightColor1.b, var_461_3)

								iter_461_1.color = Color.New(var_461_4, var_461_5, var_461_6)
							else
								local var_461_7 = Mathf.Lerp(iter_461_1.color.r, 1, var_461_3)

								iter_461_1.color = Color.New(var_461_7, var_461_7, var_461_7)
							end
						end
					end
				end
			end

			if arg_458_1.time_ >= var_461_1 + var_461_2 and arg_458_1.time_ < var_461_1 + var_461_2 + arg_461_0 and not isNil(var_461_0) and arg_458_1.var_.actorSpriteComps10128 then
				for iter_461_2, iter_461_3 in pairs(arg_458_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_461_3 then
						if arg_458_1.isInRecall_ then
							iter_461_3.color = arg_458_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_461_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_458_1.var_.actorSpriteComps10128 = nil
			end

			local var_461_8 = 0

			if var_461_8 < arg_458_1.time_ and arg_458_1.time_ <= var_461_8 + arg_461_0 then
				arg_458_1.fswbg_:SetActive(true)
				arg_458_1.dialog_:SetActive(false)

				arg_458_1.fswtw_.percent = 0

				local var_461_9 = arg_458_1:GetWordFromCfg(417161111)
				local var_461_10 = arg_458_1:FormatText(var_461_9.content)

				arg_458_1.fswt_.text = var_461_10

				LuaForUtil.ClearLinePrefixSymbol(arg_458_1.fswt_)

				arg_458_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_458_1.fswtw_:SetDirty()

				arg_458_1.typewritterCharCountI18N = 0

				arg_458_1:ShowNextGo(false)
			end

			local var_461_11 = 0.0999999999999999

			if var_461_11 < arg_458_1.time_ and arg_458_1.time_ <= var_461_11 + arg_461_0 then
				arg_458_1.var_.oldValueTypewriter = arg_458_1.fswtw_.percent

				arg_458_1:ShowNextGo(false)
			end

			local var_461_12 = 18
			local var_461_13 = 1.2
			local var_461_14 = arg_458_1:GetWordFromCfg(417161111)
			local var_461_15 = arg_458_1:FormatText(var_461_14.content)
			local var_461_16, var_461_17 = arg_458_1:GetPercentByPara(var_461_15, 1)

			if var_461_11 < arg_458_1.time_ and arg_458_1.time_ <= var_461_11 + arg_461_0 then
				arg_458_1.talkMaxDuration = 0

				local var_461_18 = var_461_12 <= 0 and var_461_13 or var_461_13 * ((var_461_17 - arg_458_1.typewritterCharCountI18N) / var_461_12)

				if var_461_18 > 0 and var_461_13 < var_461_18 then
					arg_458_1.talkMaxDuration = var_461_18

					if var_461_18 + var_461_11 > arg_458_1.duration_ then
						arg_458_1.duration_ = var_461_18 + var_461_11
					end
				end
			end

			local var_461_19 = 1.2
			local var_461_20 = math.max(var_461_19, arg_458_1.talkMaxDuration)

			if var_461_11 <= arg_458_1.time_ and arg_458_1.time_ < var_461_11 + var_461_20 then
				local var_461_21 = (arg_458_1.time_ - var_461_11) / var_461_20

				arg_458_1.fswtw_.percent = Mathf.Lerp(arg_458_1.var_.oldValueTypewriter, var_461_16, var_461_21)
				arg_458_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_458_1.fswtw_:SetDirty()
			end

			if arg_458_1.time_ >= var_461_11 + var_461_20 and arg_458_1.time_ < var_461_11 + var_461_20 + arg_461_0 then
				arg_458_1.fswtw_.percent = var_461_16

				arg_458_1.fswtw_:SetDirty()
				arg_458_1:ShowNextGo(true)

				arg_458_1.typewritterCharCountI18N = var_461_17
			end

			local var_461_22 = 0.0999999999999999
			local var_461_23 = 3.466
			local var_461_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161111", "") / 1000

			if var_461_24 > 0 and var_461_23 < var_461_24 and var_461_24 + var_461_22 > arg_458_1.duration_ then
				local var_461_25 = var_461_24

				arg_458_1.duration_ = var_461_24 + var_461_22
			end

			if var_461_22 < arg_458_1.time_ and arg_458_1.time_ <= var_461_22 + arg_461_0 then
				local var_461_26 = "play"
				local var_461_27 = "voice"

				arg_458_1:AudioAction(var_461_26, var_461_27, "story_v_out_417161", "417161111", "")
			end
		end
	end,
	Play417161112 = function(arg_462_0, arg_462_1)
		arg_462_1.time_ = 0
		arg_462_1.frameCnt_ = 0
		arg_462_1.state_ = "playing"
		arg_462_1.curTalkId_ = 417161112
		arg_462_1.duration_ = 9

		SetActive(arg_462_1.tipsGo_, false)

		function arg_462_1.onSingleLineFinish_()
			arg_462_1.onSingleLineUpdate_ = nil
			arg_462_1.onSingleLineFinish_ = nil
			arg_462_1.state_ = "waiting"
		end

		function arg_462_1.playNext_(arg_464_0)
			if arg_464_0 == 1 then
				arg_462_0:Play417161113(arg_462_1)
			end
		end

		function arg_462_1.onSingleLineUpdate_(arg_465_0)
			local var_465_0 = 4

			if var_465_0 < arg_462_1.time_ and arg_462_1.time_ <= var_465_0 + arg_465_0 then
				arg_462_1.allBtn_.enabled = false
			end

			local var_465_1 = 0.3

			if arg_462_1.time_ >= var_465_0 + var_465_1 and arg_462_1.time_ < var_465_0 + var_465_1 + arg_465_0 then
				arg_462_1.allBtn_.enabled = true
			end

			local var_465_2 = "SS1706"

			if arg_462_1.bgs_[var_465_2] == nil then
				local var_465_3 = Object.Instantiate(arg_462_1.paintGo_)

				var_465_3:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_465_2)
				var_465_3.name = var_465_2
				var_465_3.transform.parent = arg_462_1.stage_.transform
				var_465_3.transform.localPosition = Vector3.New(0, 100, 0)
				arg_462_1.bgs_[var_465_2] = var_465_3
			end

			local var_465_4 = 2

			if var_465_4 < arg_462_1.time_ and arg_462_1.time_ <= var_465_4 + arg_465_0 then
				local var_465_5 = manager.ui.mainCamera.transform.localPosition
				local var_465_6 = Vector3.New(0, 0, 10) + Vector3.New(var_465_5.x, var_465_5.y, 0)
				local var_465_7 = arg_462_1.bgs_.SS1706

				var_465_7.transform.localPosition = var_465_6
				var_465_7.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_465_8 = var_465_7:GetComponent("SpriteRenderer")

				if var_465_8 and var_465_8.sprite then
					local var_465_9 = (var_465_7.transform.localPosition - var_465_5).z
					local var_465_10 = manager.ui.mainCameraCom_
					local var_465_11 = 2 * var_465_9 * Mathf.Tan(var_465_10.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_465_12 = var_465_11 * var_465_10.aspect
					local var_465_13 = var_465_8.sprite.bounds.size.x
					local var_465_14 = var_465_8.sprite.bounds.size.y
					local var_465_15 = var_465_12 / var_465_13
					local var_465_16 = var_465_11 / var_465_14
					local var_465_17 = var_465_16 < var_465_15 and var_465_15 or var_465_16

					var_465_7.transform.localScale = Vector3.New(var_465_17, var_465_17, 0)
				end

				for iter_465_0, iter_465_1 in pairs(arg_462_1.bgs_) do
					if iter_465_0 ~= "SS1706" then
						iter_465_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_465_18 = 0

			if var_465_18 < arg_462_1.time_ and arg_462_1.time_ <= var_465_18 + arg_465_0 then
				arg_462_1.mask_.enabled = true
				arg_462_1.mask_.raycastTarget = true

				arg_462_1:SetGaussion(false)
			end

			local var_465_19 = 2

			if var_465_18 <= arg_462_1.time_ and arg_462_1.time_ < var_465_18 + var_465_19 then
				local var_465_20 = (arg_462_1.time_ - var_465_18) / var_465_19
				local var_465_21 = Color.New(0, 0, 0)

				var_465_21.a = Mathf.Lerp(0, 1, var_465_20)
				arg_462_1.mask_.color = var_465_21
			end

			if arg_462_1.time_ >= var_465_18 + var_465_19 and arg_462_1.time_ < var_465_18 + var_465_19 + arg_465_0 then
				local var_465_22 = Color.New(0, 0, 0)

				var_465_22.a = 1
				arg_462_1.mask_.color = var_465_22
			end

			local var_465_23 = 2

			if var_465_23 < arg_462_1.time_ and arg_462_1.time_ <= var_465_23 + arg_465_0 then
				arg_462_1.mask_.enabled = true
				arg_462_1.mask_.raycastTarget = true

				arg_462_1:SetGaussion(false)
			end

			local var_465_24 = 2

			if var_465_23 <= arg_462_1.time_ and arg_462_1.time_ < var_465_23 + var_465_24 then
				local var_465_25 = (arg_462_1.time_ - var_465_23) / var_465_24
				local var_465_26 = Color.New(0, 0, 0)

				var_465_26.a = Mathf.Lerp(1, 0, var_465_25)
				arg_462_1.mask_.color = var_465_26
			end

			if arg_462_1.time_ >= var_465_23 + var_465_24 and arg_462_1.time_ < var_465_23 + var_465_24 + arg_465_0 then
				local var_465_27 = Color.New(0, 0, 0)
				local var_465_28 = 0

				arg_462_1.mask_.enabled = false
				var_465_27.a = var_465_28
				arg_462_1.mask_.color = var_465_27
			end

			local var_465_29 = 1.83333333333333

			if var_465_29 < arg_462_1.time_ and arg_462_1.time_ <= var_465_29 + arg_465_0 then
				arg_462_1.cswbg_:SetActive(false)
			end

			local var_465_30 = 1.83333333333333

			if var_465_30 < arg_462_1.time_ and arg_462_1.time_ <= var_465_30 + arg_465_0 then
				arg_462_1.fswbg_:SetActive(false)
				arg_462_1.dialog_:SetActive(false)
				arg_462_1:ShowNextGo(false)
			end

			local var_465_31 = 2.1
			local var_465_32 = 1

			if var_465_31 < arg_462_1.time_ and arg_462_1.time_ <= var_465_31 + arg_465_0 then
				local var_465_33 = "play"
				local var_465_34 = "effect"

				arg_462_1:AudioAction(var_465_33, var_465_34, "se_story_1311", "se_story_1311_taxi01", "")
			end

			if arg_462_1.frameCnt_ <= 1 then
				arg_462_1.dialog_:SetActive(false)
			end

			local var_465_35 = 4
			local var_465_36 = 1

			if var_465_35 < arg_462_1.time_ and arg_462_1.time_ <= var_465_35 + arg_465_0 then
				arg_462_1.talkMaxDuration = 0

				arg_462_1.dialog_:SetActive(true)

				local var_465_37 = LeanTween.value(arg_462_1.dialog_, 0, 1, 0.3)

				var_465_37:setOnUpdate(LuaHelper.FloatAction(function(arg_466_0)
					arg_462_1.dialogCg_.alpha = arg_466_0
				end))
				var_465_37:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_462_1.dialog_)
					var_465_37:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_462_1.duration_ = arg_462_1.duration_ + 0.3

				SetActive(arg_462_1.leftNameGo_, false)

				arg_462_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_462_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_462_1:RecordName(arg_462_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_462_1.iconTrs_.gameObject, false)
				arg_462_1.callingController_:SetSelectedState("normal")

				local var_465_38 = arg_462_1:GetWordFromCfg(417161112)
				local var_465_39 = arg_462_1:FormatText(var_465_38.content)

				arg_462_1.text_.text = var_465_39

				LuaForUtil.ClearLinePrefixSymbol(arg_462_1.text_)

				local var_465_40 = 40
				local var_465_41 = utf8.len(var_465_39)
				local var_465_42 = var_465_40 <= 0 and var_465_36 or var_465_36 * (var_465_41 / var_465_40)

				if var_465_42 > 0 and var_465_36 < var_465_42 then
					arg_462_1.talkMaxDuration = var_465_42
					var_465_35 = var_465_35 + 0.3

					if var_465_42 + var_465_35 > arg_462_1.duration_ then
						arg_462_1.duration_ = var_465_42 + var_465_35
					end
				end

				arg_462_1.text_.text = var_465_39
				arg_462_1.typewritter.percent = 0

				arg_462_1.typewritter:SetDirty()
				arg_462_1:ShowNextGo(false)
				arg_462_1:RecordContent(arg_462_1.text_.text)
			end

			local var_465_43 = var_465_35 + 0.3
			local var_465_44 = math.max(var_465_36, arg_462_1.talkMaxDuration)

			if var_465_43 <= arg_462_1.time_ and arg_462_1.time_ < var_465_43 + var_465_44 then
				arg_462_1.typewritter.percent = (arg_462_1.time_ - var_465_43) / var_465_44

				arg_462_1.typewritter:SetDirty()
			end

			if arg_462_1.time_ >= var_465_43 + var_465_44 and arg_462_1.time_ < var_465_43 + var_465_44 + arg_465_0 then
				arg_462_1.typewritter.percent = 1

				arg_462_1.typewritter:SetDirty()
				arg_462_1:ShowNextGo(true)
			end
		end
	end,
	Play417161113 = function(arg_468_0, arg_468_1)
		arg_468_1.time_ = 0
		arg_468_1.frameCnt_ = 0
		arg_468_1.state_ = "playing"
		arg_468_1.curTalkId_ = 417161113
		arg_468_1.duration_ = 3.3

		local var_468_0 = {
			zh = 3.3,
			ja = 2.7
		}
		local var_468_1 = manager.audio:GetLocalizationFlag()

		if var_468_0[var_468_1] ~= nil then
			arg_468_1.duration_ = var_468_0[var_468_1]
		end

		SetActive(arg_468_1.tipsGo_, false)

		function arg_468_1.onSingleLineFinish_()
			arg_468_1.onSingleLineUpdate_ = nil
			arg_468_1.onSingleLineFinish_ = nil
			arg_468_1.state_ = "waiting"
		end

		function arg_468_1.playNext_(arg_470_0)
			if arg_470_0 == 1 then
				arg_468_0:Play417161114(arg_468_1)
			end
		end

		function arg_468_1.onSingleLineUpdate_(arg_471_0)
			local var_471_0 = 0
			local var_471_1 = 0.175

			if var_471_0 < arg_468_1.time_ and arg_468_1.time_ <= var_471_0 + arg_471_0 then
				arg_468_1.talkMaxDuration = 0
				arg_468_1.dialogCg_.alpha = 1

				arg_468_1.dialog_:SetActive(true)
				SetActive(arg_468_1.leftNameGo_, true)

				local var_471_2 = arg_468_1:FormatText(StoryNameCfg[1125].name)

				arg_468_1.leftNameTxt_.text = var_471_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_468_1.leftNameTxt_.transform)

				arg_468_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_468_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_468_1:RecordName(arg_468_1.leftNameTxt_.text)
				SetActive(arg_468_1.iconTrs_.gameObject, false)
				arg_468_1.callingController_:SetSelectedState("normal")

				local var_471_3 = arg_468_1:GetWordFromCfg(417161113)
				local var_471_4 = arg_468_1:FormatText(var_471_3.content)

				arg_468_1.text_.text = var_471_4

				LuaForUtil.ClearLinePrefixSymbol(arg_468_1.text_)

				local var_471_5 = 7
				local var_471_6 = utf8.len(var_471_4)
				local var_471_7 = var_471_5 <= 0 and var_471_1 or var_471_1 * (var_471_6 / var_471_5)

				if var_471_7 > 0 and var_471_1 < var_471_7 then
					arg_468_1.talkMaxDuration = var_471_7

					if var_471_7 + var_471_0 > arg_468_1.duration_ then
						arg_468_1.duration_ = var_471_7 + var_471_0
					end
				end

				arg_468_1.text_.text = var_471_4
				arg_468_1.typewritter.percent = 0

				arg_468_1.typewritter:SetDirty()
				arg_468_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161113", "story_v_out_417161.awb") ~= 0 then
					local var_471_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161113", "story_v_out_417161.awb") / 1000

					if var_471_8 + var_471_0 > arg_468_1.duration_ then
						arg_468_1.duration_ = var_471_8 + var_471_0
					end

					if var_471_3.prefab_name ~= "" and arg_468_1.actors_[var_471_3.prefab_name] ~= nil then
						local var_471_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_468_1.actors_[var_471_3.prefab_name].transform, "story_v_out_417161", "417161113", "story_v_out_417161.awb")

						arg_468_1:RecordAudio("417161113", var_471_9)
						arg_468_1:RecordAudio("417161113", var_471_9)
					else
						arg_468_1:AudioAction("play", "voice", "story_v_out_417161", "417161113", "story_v_out_417161.awb")
					end

					arg_468_1:RecordHistoryTalkVoice("story_v_out_417161", "417161113", "story_v_out_417161.awb")
				end

				arg_468_1:RecordContent(arg_468_1.text_.text)
			end

			local var_471_10 = math.max(var_471_1, arg_468_1.talkMaxDuration)

			if var_471_0 <= arg_468_1.time_ and arg_468_1.time_ < var_471_0 + var_471_10 then
				arg_468_1.typewritter.percent = (arg_468_1.time_ - var_471_0) / var_471_10

				arg_468_1.typewritter:SetDirty()
			end

			if arg_468_1.time_ >= var_471_0 + var_471_10 and arg_468_1.time_ < var_471_0 + var_471_10 + arg_471_0 then
				arg_468_1.typewritter.percent = 1

				arg_468_1.typewritter:SetDirty()
				arg_468_1:ShowNextGo(true)
			end
		end
	end,
	Play417161114 = function(arg_472_0, arg_472_1)
		arg_472_1.time_ = 0
		arg_472_1.frameCnt_ = 0
		arg_472_1.state_ = "playing"
		arg_472_1.curTalkId_ = 417161114
		arg_472_1.duration_ = 4.7

		local var_472_0 = {
			zh = 4.7,
			ja = 4.133
		}
		local var_472_1 = manager.audio:GetLocalizationFlag()

		if var_472_0[var_472_1] ~= nil then
			arg_472_1.duration_ = var_472_0[var_472_1]
		end

		SetActive(arg_472_1.tipsGo_, false)

		function arg_472_1.onSingleLineFinish_()
			arg_472_1.onSingleLineUpdate_ = nil
			arg_472_1.onSingleLineFinish_ = nil
			arg_472_1.state_ = "waiting"
		end

		function arg_472_1.playNext_(arg_474_0)
			if arg_474_0 == 1 then
				arg_472_0:Play417161115(arg_472_1)
			end
		end

		function arg_472_1.onSingleLineUpdate_(arg_475_0)
			local var_475_0 = 0
			local var_475_1 = 0.55

			if var_475_0 < arg_472_1.time_ and arg_472_1.time_ <= var_475_0 + arg_475_0 then
				arg_472_1.talkMaxDuration = 0
				arg_472_1.dialogCg_.alpha = 1

				arg_472_1.dialog_:SetActive(true)
				SetActive(arg_472_1.leftNameGo_, true)

				local var_475_2 = arg_472_1:FormatText(StoryNameCfg[595].name)

				arg_472_1.leftNameTxt_.text = var_475_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_472_1.leftNameTxt_.transform)

				arg_472_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_472_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_472_1:RecordName(arg_472_1.leftNameTxt_.text)
				SetActive(arg_472_1.iconTrs_.gameObject, false)
				arg_472_1.callingController_:SetSelectedState("normal")

				local var_475_3 = arg_472_1:GetWordFromCfg(417161114)
				local var_475_4 = arg_472_1:FormatText(var_475_3.content)

				arg_472_1.text_.text = var_475_4

				LuaForUtil.ClearLinePrefixSymbol(arg_472_1.text_)

				local var_475_5 = 22
				local var_475_6 = utf8.len(var_475_4)
				local var_475_7 = var_475_5 <= 0 and var_475_1 or var_475_1 * (var_475_6 / var_475_5)

				if var_475_7 > 0 and var_475_1 < var_475_7 then
					arg_472_1.talkMaxDuration = var_475_7

					if var_475_7 + var_475_0 > arg_472_1.duration_ then
						arg_472_1.duration_ = var_475_7 + var_475_0
					end
				end

				arg_472_1.text_.text = var_475_4
				arg_472_1.typewritter.percent = 0

				arg_472_1.typewritter:SetDirty()
				arg_472_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161114", "story_v_out_417161.awb") ~= 0 then
					local var_475_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161114", "story_v_out_417161.awb") / 1000

					if var_475_8 + var_475_0 > arg_472_1.duration_ then
						arg_472_1.duration_ = var_475_8 + var_475_0
					end

					if var_475_3.prefab_name ~= "" and arg_472_1.actors_[var_475_3.prefab_name] ~= nil then
						local var_475_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_472_1.actors_[var_475_3.prefab_name].transform, "story_v_out_417161", "417161114", "story_v_out_417161.awb")

						arg_472_1:RecordAudio("417161114", var_475_9)
						arg_472_1:RecordAudio("417161114", var_475_9)
					else
						arg_472_1:AudioAction("play", "voice", "story_v_out_417161", "417161114", "story_v_out_417161.awb")
					end

					arg_472_1:RecordHistoryTalkVoice("story_v_out_417161", "417161114", "story_v_out_417161.awb")
				end

				arg_472_1:RecordContent(arg_472_1.text_.text)
			end

			local var_475_10 = math.max(var_475_1, arg_472_1.talkMaxDuration)

			if var_475_0 <= arg_472_1.time_ and arg_472_1.time_ < var_475_0 + var_475_10 then
				arg_472_1.typewritter.percent = (arg_472_1.time_ - var_475_0) / var_475_10

				arg_472_1.typewritter:SetDirty()
			end

			if arg_472_1.time_ >= var_475_0 + var_475_10 and arg_472_1.time_ < var_475_0 + var_475_10 + arg_475_0 then
				arg_472_1.typewritter.percent = 1

				arg_472_1.typewritter:SetDirty()
				arg_472_1:ShowNextGo(true)
			end
		end
	end,
	Play417161115 = function(arg_476_0, arg_476_1)
		arg_476_1.time_ = 0
		arg_476_1.frameCnt_ = 0
		arg_476_1.state_ = "playing"
		arg_476_1.curTalkId_ = 417161115
		arg_476_1.duration_ = 6.43

		local var_476_0 = {
			zh = 4.266,
			ja = 6.433
		}
		local var_476_1 = manager.audio:GetLocalizationFlag()

		if var_476_0[var_476_1] ~= nil then
			arg_476_1.duration_ = var_476_0[var_476_1]
		end

		SetActive(arg_476_1.tipsGo_, false)

		function arg_476_1.onSingleLineFinish_()
			arg_476_1.onSingleLineUpdate_ = nil
			arg_476_1.onSingleLineFinish_ = nil
			arg_476_1.state_ = "waiting"
		end

		function arg_476_1.playNext_(arg_478_0)
			if arg_478_0 == 1 then
				arg_476_0:Play417161116(arg_476_1)
			end
		end

		function arg_476_1.onSingleLineUpdate_(arg_479_0)
			local var_479_0 = 0
			local var_479_1 = 0.55

			if var_479_0 < arg_476_1.time_ and arg_476_1.time_ <= var_479_0 + arg_479_0 then
				arg_476_1.talkMaxDuration = 0
				arg_476_1.dialogCg_.alpha = 1

				arg_476_1.dialog_:SetActive(true)
				SetActive(arg_476_1.leftNameGo_, true)

				local var_479_2 = arg_476_1:FormatText(StoryNameCfg[595].name)

				arg_476_1.leftNameTxt_.text = var_479_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_476_1.leftNameTxt_.transform)

				arg_476_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_476_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_476_1:RecordName(arg_476_1.leftNameTxt_.text)
				SetActive(arg_476_1.iconTrs_.gameObject, false)
				arg_476_1.callingController_:SetSelectedState("normal")

				local var_479_3 = arg_476_1:GetWordFromCfg(417161115)
				local var_479_4 = arg_476_1:FormatText(var_479_3.content)

				arg_476_1.text_.text = var_479_4

				LuaForUtil.ClearLinePrefixSymbol(arg_476_1.text_)

				local var_479_5 = 22
				local var_479_6 = utf8.len(var_479_4)
				local var_479_7 = var_479_5 <= 0 and var_479_1 or var_479_1 * (var_479_6 / var_479_5)

				if var_479_7 > 0 and var_479_1 < var_479_7 then
					arg_476_1.talkMaxDuration = var_479_7

					if var_479_7 + var_479_0 > arg_476_1.duration_ then
						arg_476_1.duration_ = var_479_7 + var_479_0
					end
				end

				arg_476_1.text_.text = var_479_4
				arg_476_1.typewritter.percent = 0

				arg_476_1.typewritter:SetDirty()
				arg_476_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161115", "story_v_out_417161.awb") ~= 0 then
					local var_479_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161115", "story_v_out_417161.awb") / 1000

					if var_479_8 + var_479_0 > arg_476_1.duration_ then
						arg_476_1.duration_ = var_479_8 + var_479_0
					end

					if var_479_3.prefab_name ~= "" and arg_476_1.actors_[var_479_3.prefab_name] ~= nil then
						local var_479_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_476_1.actors_[var_479_3.prefab_name].transform, "story_v_out_417161", "417161115", "story_v_out_417161.awb")

						arg_476_1:RecordAudio("417161115", var_479_9)
						arg_476_1:RecordAudio("417161115", var_479_9)
					else
						arg_476_1:AudioAction("play", "voice", "story_v_out_417161", "417161115", "story_v_out_417161.awb")
					end

					arg_476_1:RecordHistoryTalkVoice("story_v_out_417161", "417161115", "story_v_out_417161.awb")
				end

				arg_476_1:RecordContent(arg_476_1.text_.text)
			end

			local var_479_10 = math.max(var_479_1, arg_476_1.talkMaxDuration)

			if var_479_0 <= arg_476_1.time_ and arg_476_1.time_ < var_479_0 + var_479_10 then
				arg_476_1.typewritter.percent = (arg_476_1.time_ - var_479_0) / var_479_10

				arg_476_1.typewritter:SetDirty()
			end

			if arg_476_1.time_ >= var_479_0 + var_479_10 and arg_476_1.time_ < var_479_0 + var_479_10 + arg_479_0 then
				arg_476_1.typewritter.percent = 1

				arg_476_1.typewritter:SetDirty()
				arg_476_1:ShowNextGo(true)
			end
		end
	end,
	Play417161116 = function(arg_480_0, arg_480_1)
		arg_480_1.time_ = 0
		arg_480_1.frameCnt_ = 0
		arg_480_1.state_ = "playing"
		arg_480_1.curTalkId_ = 417161116
		arg_480_1.duration_ = 2.97

		local var_480_0 = {
			zh = 2.966,
			ja = 2.866
		}
		local var_480_1 = manager.audio:GetLocalizationFlag()

		if var_480_0[var_480_1] ~= nil then
			arg_480_1.duration_ = var_480_0[var_480_1]
		end

		SetActive(arg_480_1.tipsGo_, false)

		function arg_480_1.onSingleLineFinish_()
			arg_480_1.onSingleLineUpdate_ = nil
			arg_480_1.onSingleLineFinish_ = nil
			arg_480_1.state_ = "waiting"
		end

		function arg_480_1.playNext_(arg_482_0)
			if arg_482_0 == 1 then
				arg_480_0:Play417161117(arg_480_1)
			end
		end

		function arg_480_1.onSingleLineUpdate_(arg_483_0)
			local var_483_0 = 0
			local var_483_1 = 0.35

			if var_483_0 < arg_480_1.time_ and arg_480_1.time_ <= var_483_0 + arg_483_0 then
				arg_480_1.talkMaxDuration = 0
				arg_480_1.dialogCg_.alpha = 1

				arg_480_1.dialog_:SetActive(true)
				SetActive(arg_480_1.leftNameGo_, true)

				local var_483_2 = arg_480_1:FormatText(StoryNameCfg[1125].name)

				arg_480_1.leftNameTxt_.text = var_483_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_480_1.leftNameTxt_.transform)

				arg_480_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_480_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_480_1:RecordName(arg_480_1.leftNameTxt_.text)
				SetActive(arg_480_1.iconTrs_.gameObject, false)
				arg_480_1.callingController_:SetSelectedState("normal")

				local var_483_3 = arg_480_1:GetWordFromCfg(417161116)
				local var_483_4 = arg_480_1:FormatText(var_483_3.content)

				arg_480_1.text_.text = var_483_4

				LuaForUtil.ClearLinePrefixSymbol(arg_480_1.text_)

				local var_483_5 = 14
				local var_483_6 = utf8.len(var_483_4)
				local var_483_7 = var_483_5 <= 0 and var_483_1 or var_483_1 * (var_483_6 / var_483_5)

				if var_483_7 > 0 and var_483_1 < var_483_7 then
					arg_480_1.talkMaxDuration = var_483_7

					if var_483_7 + var_483_0 > arg_480_1.duration_ then
						arg_480_1.duration_ = var_483_7 + var_483_0
					end
				end

				arg_480_1.text_.text = var_483_4
				arg_480_1.typewritter.percent = 0

				arg_480_1.typewritter:SetDirty()
				arg_480_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161116", "story_v_out_417161.awb") ~= 0 then
					local var_483_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161116", "story_v_out_417161.awb") / 1000

					if var_483_8 + var_483_0 > arg_480_1.duration_ then
						arg_480_1.duration_ = var_483_8 + var_483_0
					end

					if var_483_3.prefab_name ~= "" and arg_480_1.actors_[var_483_3.prefab_name] ~= nil then
						local var_483_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_480_1.actors_[var_483_3.prefab_name].transform, "story_v_out_417161", "417161116", "story_v_out_417161.awb")

						arg_480_1:RecordAudio("417161116", var_483_9)
						arg_480_1:RecordAudio("417161116", var_483_9)
					else
						arg_480_1:AudioAction("play", "voice", "story_v_out_417161", "417161116", "story_v_out_417161.awb")
					end

					arg_480_1:RecordHistoryTalkVoice("story_v_out_417161", "417161116", "story_v_out_417161.awb")
				end

				arg_480_1:RecordContent(arg_480_1.text_.text)
			end

			local var_483_10 = math.max(var_483_1, arg_480_1.talkMaxDuration)

			if var_483_0 <= arg_480_1.time_ and arg_480_1.time_ < var_483_0 + var_483_10 then
				arg_480_1.typewritter.percent = (arg_480_1.time_ - var_483_0) / var_483_10

				arg_480_1.typewritter:SetDirty()
			end

			if arg_480_1.time_ >= var_483_0 + var_483_10 and arg_480_1.time_ < var_483_0 + var_483_10 + arg_483_0 then
				arg_480_1.typewritter.percent = 1

				arg_480_1.typewritter:SetDirty()
				arg_480_1:ShowNextGo(true)
			end
		end
	end,
	Play417161117 = function(arg_484_0, arg_484_1)
		arg_484_1.time_ = 0
		arg_484_1.frameCnt_ = 0
		arg_484_1.state_ = "playing"
		arg_484_1.curTalkId_ = 417161117
		arg_484_1.duration_ = 5.63

		local var_484_0 = {
			zh = 5.466,
			ja = 5.633
		}
		local var_484_1 = manager.audio:GetLocalizationFlag()

		if var_484_0[var_484_1] ~= nil then
			arg_484_1.duration_ = var_484_0[var_484_1]
		end

		SetActive(arg_484_1.tipsGo_, false)

		function arg_484_1.onSingleLineFinish_()
			arg_484_1.onSingleLineUpdate_ = nil
			arg_484_1.onSingleLineFinish_ = nil
			arg_484_1.state_ = "waiting"
		end

		function arg_484_1.playNext_(arg_486_0)
			if arg_486_0 == 1 then
				arg_484_0:Play417161118(arg_484_1)
			end
		end

		function arg_484_1.onSingleLineUpdate_(arg_487_0)
			local var_487_0 = 0
			local var_487_1 = 0.65

			if var_487_0 < arg_484_1.time_ and arg_484_1.time_ <= var_487_0 + arg_487_0 then
				arg_484_1.talkMaxDuration = 0
				arg_484_1.dialogCg_.alpha = 1

				arg_484_1.dialog_:SetActive(true)
				SetActive(arg_484_1.leftNameGo_, true)

				local var_487_2 = arg_484_1:FormatText(StoryNameCfg[1125].name)

				arg_484_1.leftNameTxt_.text = var_487_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_484_1.leftNameTxt_.transform)

				arg_484_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_484_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_484_1:RecordName(arg_484_1.leftNameTxt_.text)
				SetActive(arg_484_1.iconTrs_.gameObject, false)
				arg_484_1.callingController_:SetSelectedState("normal")

				local var_487_3 = arg_484_1:GetWordFromCfg(417161117)
				local var_487_4 = arg_484_1:FormatText(var_487_3.content)

				arg_484_1.text_.text = var_487_4

				LuaForUtil.ClearLinePrefixSymbol(arg_484_1.text_)

				local var_487_5 = 26
				local var_487_6 = utf8.len(var_487_4)
				local var_487_7 = var_487_5 <= 0 and var_487_1 or var_487_1 * (var_487_6 / var_487_5)

				if var_487_7 > 0 and var_487_1 < var_487_7 then
					arg_484_1.talkMaxDuration = var_487_7

					if var_487_7 + var_487_0 > arg_484_1.duration_ then
						arg_484_1.duration_ = var_487_7 + var_487_0
					end
				end

				arg_484_1.text_.text = var_487_4
				arg_484_1.typewritter.percent = 0

				arg_484_1.typewritter:SetDirty()
				arg_484_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161117", "story_v_out_417161.awb") ~= 0 then
					local var_487_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161117", "story_v_out_417161.awb") / 1000

					if var_487_8 + var_487_0 > arg_484_1.duration_ then
						arg_484_1.duration_ = var_487_8 + var_487_0
					end

					if var_487_3.prefab_name ~= "" and arg_484_1.actors_[var_487_3.prefab_name] ~= nil then
						local var_487_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_484_1.actors_[var_487_3.prefab_name].transform, "story_v_out_417161", "417161117", "story_v_out_417161.awb")

						arg_484_1:RecordAudio("417161117", var_487_9)
						arg_484_1:RecordAudio("417161117", var_487_9)
					else
						arg_484_1:AudioAction("play", "voice", "story_v_out_417161", "417161117", "story_v_out_417161.awb")
					end

					arg_484_1:RecordHistoryTalkVoice("story_v_out_417161", "417161117", "story_v_out_417161.awb")
				end

				arg_484_1:RecordContent(arg_484_1.text_.text)
			end

			local var_487_10 = math.max(var_487_1, arg_484_1.talkMaxDuration)

			if var_487_0 <= arg_484_1.time_ and arg_484_1.time_ < var_487_0 + var_487_10 then
				arg_484_1.typewritter.percent = (arg_484_1.time_ - var_487_0) / var_487_10

				arg_484_1.typewritter:SetDirty()
			end

			if arg_484_1.time_ >= var_487_0 + var_487_10 and arg_484_1.time_ < var_487_0 + var_487_10 + arg_487_0 then
				arg_484_1.typewritter.percent = 1

				arg_484_1.typewritter:SetDirty()
				arg_484_1:ShowNextGo(true)
			end
		end
	end,
	Play417161118 = function(arg_488_0, arg_488_1)
		arg_488_1.time_ = 0
		arg_488_1.frameCnt_ = 0
		arg_488_1.state_ = "playing"
		arg_488_1.curTalkId_ = 417161118
		arg_488_1.duration_ = 10.4

		local var_488_0 = {
			zh = 10.133,
			ja = 10.4
		}
		local var_488_1 = manager.audio:GetLocalizationFlag()

		if var_488_0[var_488_1] ~= nil then
			arg_488_1.duration_ = var_488_0[var_488_1]
		end

		SetActive(arg_488_1.tipsGo_, false)

		function arg_488_1.onSingleLineFinish_()
			arg_488_1.onSingleLineUpdate_ = nil
			arg_488_1.onSingleLineFinish_ = nil
			arg_488_1.state_ = "waiting"
		end

		function arg_488_1.playNext_(arg_490_0)
			if arg_490_0 == 1 then
				arg_488_0:Play417161119(arg_488_1)
			end
		end

		function arg_488_1.onSingleLineUpdate_(arg_491_0)
			local var_491_0 = 4

			if var_491_0 < arg_488_1.time_ and arg_488_1.time_ <= var_491_0 + arg_491_0 then
				arg_488_1.allBtn_.enabled = false
			end

			local var_491_1 = 0.3

			if arg_488_1.time_ >= var_491_0 + var_491_1 and arg_488_1.time_ < var_491_0 + var_491_1 + arg_491_0 then
				arg_488_1.allBtn_.enabled = true
			end

			local var_491_2 = "D06b"

			if arg_488_1.bgs_[var_491_2] == nil then
				local var_491_3 = Object.Instantiate(arg_488_1.paintGo_)

				var_491_3:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_491_2)
				var_491_3.name = var_491_2
				var_491_3.transform.parent = arg_488_1.stage_.transform
				var_491_3.transform.localPosition = Vector3.New(0, 100, 0)
				arg_488_1.bgs_[var_491_2] = var_491_3
			end

			local var_491_4 = 2

			if var_491_4 < arg_488_1.time_ and arg_488_1.time_ <= var_491_4 + arg_491_0 then
				local var_491_5 = manager.ui.mainCamera.transform.localPosition
				local var_491_6 = Vector3.New(0, 0, 10) + Vector3.New(var_491_5.x, var_491_5.y, 0)
				local var_491_7 = arg_488_1.bgs_.D06b

				var_491_7.transform.localPosition = var_491_6
				var_491_7.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_491_8 = var_491_7:GetComponent("SpriteRenderer")

				if var_491_8 and var_491_8.sprite then
					local var_491_9 = (var_491_7.transform.localPosition - var_491_5).z
					local var_491_10 = manager.ui.mainCameraCom_
					local var_491_11 = 2 * var_491_9 * Mathf.Tan(var_491_10.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_491_12 = var_491_11 * var_491_10.aspect
					local var_491_13 = var_491_8.sprite.bounds.size.x
					local var_491_14 = var_491_8.sprite.bounds.size.y
					local var_491_15 = var_491_12 / var_491_13
					local var_491_16 = var_491_11 / var_491_14
					local var_491_17 = var_491_16 < var_491_15 and var_491_15 or var_491_16

					var_491_7.transform.localScale = Vector3.New(var_491_17, var_491_17, 0)
				end

				for iter_491_0, iter_491_1 in pairs(arg_488_1.bgs_) do
					if iter_491_0 ~= "D06b" then
						iter_491_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_491_18 = 0

			if var_491_18 < arg_488_1.time_ and arg_488_1.time_ <= var_491_18 + arg_491_0 then
				arg_488_1.mask_.enabled = true
				arg_488_1.mask_.raycastTarget = true

				arg_488_1:SetGaussion(false)
			end

			local var_491_19 = 2

			if var_491_18 <= arg_488_1.time_ and arg_488_1.time_ < var_491_18 + var_491_19 then
				local var_491_20 = (arg_488_1.time_ - var_491_18) / var_491_19
				local var_491_21 = Color.New(0, 0, 0)

				var_491_21.a = Mathf.Lerp(0, 1, var_491_20)
				arg_488_1.mask_.color = var_491_21
			end

			if arg_488_1.time_ >= var_491_18 + var_491_19 and arg_488_1.time_ < var_491_18 + var_491_19 + arg_491_0 then
				local var_491_22 = Color.New(0, 0, 0)

				var_491_22.a = 1
				arg_488_1.mask_.color = var_491_22
			end

			local var_491_23 = 2

			if var_491_23 < arg_488_1.time_ and arg_488_1.time_ <= var_491_23 + arg_491_0 then
				arg_488_1.mask_.enabled = true
				arg_488_1.mask_.raycastTarget = true

				arg_488_1:SetGaussion(false)
			end

			local var_491_24 = 2

			if var_491_23 <= arg_488_1.time_ and arg_488_1.time_ < var_491_23 + var_491_24 then
				local var_491_25 = (arg_488_1.time_ - var_491_23) / var_491_24
				local var_491_26 = Color.New(0, 0, 0)

				var_491_26.a = Mathf.Lerp(1, 0, var_491_25)
				arg_488_1.mask_.color = var_491_26
			end

			if arg_488_1.time_ >= var_491_23 + var_491_24 and arg_488_1.time_ < var_491_23 + var_491_24 + arg_491_0 then
				local var_491_27 = Color.New(0, 0, 0)
				local var_491_28 = 0

				arg_488_1.mask_.enabled = false
				var_491_27.a = var_491_28
				arg_488_1.mask_.color = var_491_27
			end

			local var_491_29 = "1034"

			if arg_488_1.actors_[var_491_29] == nil then
				local var_491_30 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1034")

				if not isNil(var_491_30) then
					local var_491_31 = Object.Instantiate(var_491_30, arg_488_1.canvasGo_.transform)

					var_491_31.transform:SetSiblingIndex(1)

					var_491_31.name = var_491_29
					var_491_31.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_488_1.actors_[var_491_29] = var_491_31

					local var_491_32 = var_491_31:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_488_1.isInRecall_ then
						for iter_491_2, iter_491_3 in ipairs(var_491_32) do
							iter_491_3.color = arg_488_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_491_33 = arg_488_1.actors_["1034"].transform
			local var_491_34 = 3.66666666666667

			if var_491_34 < arg_488_1.time_ and arg_488_1.time_ <= var_491_34 + arg_491_0 then
				arg_488_1.var_.moveOldPos1034 = var_491_33.localPosition
				var_491_33.localScale = Vector3.New(1, 1, 1)

				arg_488_1:CheckSpriteTmpPos("1034", 3)

				local var_491_35 = var_491_33.childCount

				for iter_491_4 = 0, var_491_35 - 1 do
					local var_491_36 = var_491_33:GetChild(iter_491_4)

					if var_491_36.name == "" or not string.find(var_491_36.name, "split") then
						var_491_36.gameObject:SetActive(true)
					else
						var_491_36.gameObject:SetActive(false)
					end
				end
			end

			local var_491_37 = 0.001

			if var_491_34 <= arg_488_1.time_ and arg_488_1.time_ < var_491_34 + var_491_37 then
				local var_491_38 = (arg_488_1.time_ - var_491_34) / var_491_37
				local var_491_39 = Vector3.New(0, -331.9, -324)

				var_491_33.localPosition = Vector3.Lerp(arg_488_1.var_.moveOldPos1034, var_491_39, var_491_38)
			end

			if arg_488_1.time_ >= var_491_34 + var_491_37 and arg_488_1.time_ < var_491_34 + var_491_37 + arg_491_0 then
				var_491_33.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_491_40 = arg_488_1.actors_["1034"]
			local var_491_41 = 3.66666666666667

			if var_491_41 < arg_488_1.time_ and arg_488_1.time_ <= var_491_41 + arg_491_0 then
				arg_488_1:SetSpriteNiuquEffect("1034", true)
			end

			local var_491_42 = arg_488_1.actors_["1034"]
			local var_491_43 = 3.66666666666667

			if var_491_43 < arg_488_1.time_ and arg_488_1.time_ <= var_491_43 + arg_491_0 then
				local var_491_44 = var_491_42:GetComponentInChildren(typeof(CanvasGroup))

				if var_491_44 then
					arg_488_1.var_.alphaOldValue1034 = var_491_44.alpha
					arg_488_1.var_.characterEffect1034 = var_491_44
				end
			end

			local var_491_45 = 0.2

			if var_491_43 <= arg_488_1.time_ and arg_488_1.time_ < var_491_43 + var_491_45 then
				local var_491_46 = (arg_488_1.time_ - var_491_43) / var_491_45
				local var_491_47 = Mathf.Lerp(arg_488_1.var_.alphaOldValue1034, 0.6, var_491_46)

				if arg_488_1.var_.characterEffect1034 then
					arg_488_1.var_.characterEffect1034.alpha = var_491_47
				end
			end

			if arg_488_1.time_ >= var_491_43 + var_491_45 and arg_488_1.time_ < var_491_43 + var_491_45 + arg_491_0 and arg_488_1.var_.characterEffect1034 then
				arg_488_1.var_.characterEffect1034.alpha = 0.6
			end

			local var_491_48 = 2

			arg_488_1.isInRecall_ = true

			if var_491_48 < arg_488_1.time_ and arg_488_1.time_ <= var_491_48 + arg_491_0 then
				arg_488_1.screenFilterGo_:SetActive(true)

				arg_488_1.screenFilterEffect_.profile = Asset.Load("Effect/Scene/fx_vintageStyle_Profile.asset")
				arg_488_1.hightColor1 = Color.New(0.82, 0.77, 0.62)
				arg_488_1.hightColor2 = Color.New(0.46, 0.43, 0.35)

				for iter_491_5, iter_491_6 in pairs(arg_488_1.actors_) do
					local var_491_49 = iter_491_6:GetComponentsInChildren(typeof(Image), true):ToTable()

					for iter_491_7, iter_491_8 in ipairs(var_491_49) do
						if iter_491_8.color.r > 0.51 then
							iter_491_8.color = Color.New(0.82, 0.77, 0.62)
						else
							iter_491_8.color = Color.New(0.46, 0.43, 0.35)
						end
					end
				end
			end

			local var_491_50 = 0.0666666666666667

			if var_491_48 <= arg_488_1.time_ and arg_488_1.time_ < var_491_48 + var_491_50 then
				local var_491_51 = (arg_488_1.time_ - var_491_48) / var_491_50

				arg_488_1.screenFilterEffect_.weight = Mathf.Lerp(0, 1, var_491_51)
			end

			if arg_488_1.time_ >= var_491_48 + var_491_50 and arg_488_1.time_ < var_491_48 + var_491_50 + arg_491_0 then
				arg_488_1.screenFilterEffect_.weight = 1
			end

			local var_491_52 = arg_488_1.actors_["1034"]
			local var_491_53 = 3.66666666666667

			if var_491_53 < arg_488_1.time_ and arg_488_1.time_ <= var_491_53 + arg_491_0 then
				local var_491_54 = var_491_52:GetComponentInChildren(typeof(CanvasGroup))

				if var_491_54 then
					arg_488_1.var_.alphaOldValue1034 = var_491_54.alpha
					arg_488_1.var_.characterEffect1034 = var_491_54
				end

				arg_488_1.var_.alphaOldValue1034 = 0
			end

			local var_491_55 = 0.333333333333333

			if var_491_53 <= arg_488_1.time_ and arg_488_1.time_ < var_491_53 + var_491_55 then
				local var_491_56 = (arg_488_1.time_ - var_491_53) / var_491_55
				local var_491_57 = Mathf.Lerp(arg_488_1.var_.alphaOldValue1034, 1, var_491_56)

				if arg_488_1.var_.characterEffect1034 then
					arg_488_1.var_.characterEffect1034.alpha = var_491_57
				end
			end

			if arg_488_1.time_ >= var_491_53 + var_491_55 and arg_488_1.time_ < var_491_53 + var_491_55 + arg_491_0 and arg_488_1.var_.characterEffect1034 then
				arg_488_1.var_.characterEffect1034.alpha = 1
			end

			if arg_488_1.frameCnt_ <= 1 then
				arg_488_1.dialog_:SetActive(false)
			end

			local var_491_58 = 4
			local var_491_59 = 0.6

			if var_491_58 < arg_488_1.time_ and arg_488_1.time_ <= var_491_58 + arg_491_0 then
				arg_488_1.talkMaxDuration = 0

				arg_488_1.dialog_:SetActive(true)

				local var_491_60 = LeanTween.value(arg_488_1.dialog_, 0, 1, 0.3)

				var_491_60:setOnUpdate(LuaHelper.FloatAction(function(arg_492_0)
					arg_488_1.dialogCg_.alpha = arg_492_0
				end))
				var_491_60:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_488_1.dialog_)
					var_491_60:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_488_1.duration_ = arg_488_1.duration_ + 0.3

				SetActive(arg_488_1.leftNameGo_, true)

				local var_491_61 = arg_488_1:FormatText(StoryNameCfg[1109].name)

				arg_488_1.leftNameTxt_.text = var_491_61

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_488_1.leftNameTxt_.transform)

				arg_488_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_488_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_488_1:RecordName(arg_488_1.leftNameTxt_.text)
				SetActive(arg_488_1.iconTrs_.gameObject, false)
				arg_488_1.callingController_:SetSelectedState("normal")

				local var_491_62 = arg_488_1:GetWordFromCfg(417161118)
				local var_491_63 = arg_488_1:FormatText(var_491_62.content)

				arg_488_1.text_.text = var_491_63

				LuaForUtil.ClearLinePrefixSymbol(arg_488_1.text_)

				local var_491_64 = 25
				local var_491_65 = utf8.len(var_491_63)
				local var_491_66 = var_491_64 <= 0 and var_491_59 or var_491_59 * (var_491_65 / var_491_64)

				if var_491_66 > 0 and var_491_59 < var_491_66 then
					arg_488_1.talkMaxDuration = var_491_66
					var_491_58 = var_491_58 + 0.3

					if var_491_66 + var_491_58 > arg_488_1.duration_ then
						arg_488_1.duration_ = var_491_66 + var_491_58
					end
				end

				arg_488_1.text_.text = var_491_63
				arg_488_1.typewritter.percent = 0

				arg_488_1.typewritter:SetDirty()
				arg_488_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161118", "story_v_out_417161.awb") ~= 0 then
					local var_491_67 = manager.audio:GetVoiceLength("story_v_out_417161", "417161118", "story_v_out_417161.awb") / 1000

					if var_491_67 + var_491_58 > arg_488_1.duration_ then
						arg_488_1.duration_ = var_491_67 + var_491_58
					end

					if var_491_62.prefab_name ~= "" and arg_488_1.actors_[var_491_62.prefab_name] ~= nil then
						local var_491_68 = LuaForUtil.PlayVoiceWithCriLipsync(arg_488_1.actors_[var_491_62.prefab_name].transform, "story_v_out_417161", "417161118", "story_v_out_417161.awb")

						arg_488_1:RecordAudio("417161118", var_491_68)
						arg_488_1:RecordAudio("417161118", var_491_68)
					else
						arg_488_1:AudioAction("play", "voice", "story_v_out_417161", "417161118", "story_v_out_417161.awb")
					end

					arg_488_1:RecordHistoryTalkVoice("story_v_out_417161", "417161118", "story_v_out_417161.awb")
				end

				arg_488_1:RecordContent(arg_488_1.text_.text)
			end

			local var_491_69 = var_491_58 + 0.3
			local var_491_70 = math.max(var_491_59, arg_488_1.talkMaxDuration)

			if var_491_69 <= arg_488_1.time_ and arg_488_1.time_ < var_491_69 + var_491_70 then
				arg_488_1.typewritter.percent = (arg_488_1.time_ - var_491_69) / var_491_70

				arg_488_1.typewritter:SetDirty()
			end

			if arg_488_1.time_ >= var_491_69 + var_491_70 and arg_488_1.time_ < var_491_69 + var_491_70 + arg_491_0 then
				arg_488_1.typewritter.percent = 1

				arg_488_1.typewritter:SetDirty()
				arg_488_1:ShowNextGo(true)
			end
		end
	end,
	Play417161119 = function(arg_494_0, arg_494_1)
		arg_494_1.time_ = 0
		arg_494_1.frameCnt_ = 0
		arg_494_1.state_ = "playing"
		arg_494_1.curTalkId_ = 417161119
		arg_494_1.duration_ = 6.93

		local var_494_0 = {
			zh = 4.8,
			ja = 6.933
		}
		local var_494_1 = manager.audio:GetLocalizationFlag()

		if var_494_0[var_494_1] ~= nil then
			arg_494_1.duration_ = var_494_0[var_494_1]
		end

		SetActive(arg_494_1.tipsGo_, false)

		function arg_494_1.onSingleLineFinish_()
			arg_494_1.onSingleLineUpdate_ = nil
			arg_494_1.onSingleLineFinish_ = nil
			arg_494_1.state_ = "waiting"
		end

		function arg_494_1.playNext_(arg_496_0)
			if arg_496_0 == 1 then
				arg_494_0:Play417161120(arg_494_1)
			end
		end

		function arg_494_1.onSingleLineUpdate_(arg_497_0)
			local var_497_0 = arg_494_1.actors_["10128"]
			local var_497_1 = 0

			if var_497_1 < arg_494_1.time_ and arg_494_1.time_ <= var_497_1 + arg_497_0 and not isNil(var_497_0) and arg_494_1.var_.actorSpriteComps10128 == nil then
				arg_494_1.var_.actorSpriteComps10128 = var_497_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_497_2 = 0.2

			if var_497_1 <= arg_494_1.time_ and arg_494_1.time_ < var_497_1 + var_497_2 and not isNil(var_497_0) then
				local var_497_3 = (arg_494_1.time_ - var_497_1) / var_497_2

				if arg_494_1.var_.actorSpriteComps10128 then
					for iter_497_0, iter_497_1 in pairs(arg_494_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_497_1 then
							if arg_494_1.isInRecall_ then
								local var_497_4 = Mathf.Lerp(iter_497_1.color.r, arg_494_1.hightColor1.r, var_497_3)
								local var_497_5 = Mathf.Lerp(iter_497_1.color.g, arg_494_1.hightColor1.g, var_497_3)
								local var_497_6 = Mathf.Lerp(iter_497_1.color.b, arg_494_1.hightColor1.b, var_497_3)

								iter_497_1.color = Color.New(var_497_4, var_497_5, var_497_6)
							else
								local var_497_7 = Mathf.Lerp(iter_497_1.color.r, 1, var_497_3)

								iter_497_1.color = Color.New(var_497_7, var_497_7, var_497_7)
							end
						end
					end
				end
			end

			if arg_494_1.time_ >= var_497_1 + var_497_2 and arg_494_1.time_ < var_497_1 + var_497_2 + arg_497_0 and not isNil(var_497_0) and arg_494_1.var_.actorSpriteComps10128 then
				for iter_497_2, iter_497_3 in pairs(arg_494_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_497_3 then
						if arg_494_1.isInRecall_ then
							iter_497_3.color = arg_494_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_497_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_494_1.var_.actorSpriteComps10128 = nil
			end

			local var_497_8 = arg_494_1.actors_["1034"]
			local var_497_9 = 0

			if var_497_9 < arg_494_1.time_ and arg_494_1.time_ <= var_497_9 + arg_497_0 and not isNil(var_497_8) and arg_494_1.var_.actorSpriteComps1034 == nil then
				arg_494_1.var_.actorSpriteComps1034 = var_497_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_497_10 = 0.2

			if var_497_9 <= arg_494_1.time_ and arg_494_1.time_ < var_497_9 + var_497_10 and not isNil(var_497_8) then
				local var_497_11 = (arg_494_1.time_ - var_497_9) / var_497_10

				if arg_494_1.var_.actorSpriteComps1034 then
					for iter_497_4, iter_497_5 in pairs(arg_494_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_497_5 then
							if arg_494_1.isInRecall_ then
								local var_497_12 = Mathf.Lerp(iter_497_5.color.r, arg_494_1.hightColor2.r, var_497_11)
								local var_497_13 = Mathf.Lerp(iter_497_5.color.g, arg_494_1.hightColor2.g, var_497_11)
								local var_497_14 = Mathf.Lerp(iter_497_5.color.b, arg_494_1.hightColor2.b, var_497_11)

								iter_497_5.color = Color.New(var_497_12, var_497_13, var_497_14)
							else
								local var_497_15 = Mathf.Lerp(iter_497_5.color.r, 0.5, var_497_11)

								iter_497_5.color = Color.New(var_497_15, var_497_15, var_497_15)
							end
						end
					end
				end
			end

			if arg_494_1.time_ >= var_497_9 + var_497_10 and arg_494_1.time_ < var_497_9 + var_497_10 + arg_497_0 and not isNil(var_497_8) and arg_494_1.var_.actorSpriteComps1034 then
				for iter_497_6, iter_497_7 in pairs(arg_494_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_497_7 then
						if arg_494_1.isInRecall_ then
							iter_497_7.color = arg_494_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_497_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_494_1.var_.actorSpriteComps1034 = nil
			end

			local var_497_16 = arg_494_1.actors_["10128"].transform
			local var_497_17 = 0

			if var_497_17 < arg_494_1.time_ and arg_494_1.time_ <= var_497_17 + arg_497_0 then
				arg_494_1.var_.moveOldPos10128 = var_497_16.localPosition
				var_497_16.localScale = Vector3.New(1, 1, 1)

				arg_494_1:CheckSpriteTmpPos("10128", 3)

				local var_497_18 = var_497_16.childCount

				for iter_497_8 = 0, var_497_18 - 1 do
					local var_497_19 = var_497_16:GetChild(iter_497_8)

					if var_497_19.name == "split_6" or not string.find(var_497_19.name, "split") then
						var_497_19.gameObject:SetActive(true)
					else
						var_497_19.gameObject:SetActive(false)
					end
				end
			end

			local var_497_20 = 0.001

			if var_497_17 <= arg_494_1.time_ and arg_494_1.time_ < var_497_17 + var_497_20 then
				local var_497_21 = (arg_494_1.time_ - var_497_17) / var_497_20
				local var_497_22 = Vector3.New(0, -347, -300)

				var_497_16.localPosition = Vector3.Lerp(arg_494_1.var_.moveOldPos10128, var_497_22, var_497_21)
			end

			if arg_494_1.time_ >= var_497_17 + var_497_20 and arg_494_1.time_ < var_497_17 + var_497_20 + arg_497_0 then
				var_497_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_497_23 = arg_494_1.actors_["1034"].transform
			local var_497_24 = 0

			if var_497_24 < arg_494_1.time_ and arg_494_1.time_ <= var_497_24 + arg_497_0 then
				arg_494_1.var_.moveOldPos1034 = var_497_23.localPosition
				var_497_23.localScale = Vector3.New(1, 1, 1)

				arg_494_1:CheckSpriteTmpPos("1034", 7)

				local var_497_25 = var_497_23.childCount

				for iter_497_9 = 0, var_497_25 - 1 do
					local var_497_26 = var_497_23:GetChild(iter_497_9)

					if var_497_26.name == "" or not string.find(var_497_26.name, "split") then
						var_497_26.gameObject:SetActive(true)
					else
						var_497_26.gameObject:SetActive(false)
					end
				end
			end

			local var_497_27 = 0.001

			if var_497_24 <= arg_494_1.time_ and arg_494_1.time_ < var_497_24 + var_497_27 then
				local var_497_28 = (arg_494_1.time_ - var_497_24) / var_497_27
				local var_497_29 = Vector3.New(0, -2000, 0)

				var_497_23.localPosition = Vector3.Lerp(arg_494_1.var_.moveOldPos1034, var_497_29, var_497_28)
			end

			if arg_494_1.time_ >= var_497_24 + var_497_27 and arg_494_1.time_ < var_497_24 + var_497_27 + arg_497_0 then
				var_497_23.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_497_30 = 0
			local var_497_31 = 0.525

			if var_497_30 < arg_494_1.time_ and arg_494_1.time_ <= var_497_30 + arg_497_0 then
				arg_494_1.talkMaxDuration = 0
				arg_494_1.dialogCg_.alpha = 1

				arg_494_1.dialog_:SetActive(true)
				SetActive(arg_494_1.leftNameGo_, true)

				local var_497_32 = arg_494_1:FormatText(StoryNameCfg[595].name)

				arg_494_1.leftNameTxt_.text = var_497_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_494_1.leftNameTxt_.transform)

				arg_494_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_494_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_494_1:RecordName(arg_494_1.leftNameTxt_.text)
				SetActive(arg_494_1.iconTrs_.gameObject, false)
				arg_494_1.callingController_:SetSelectedState("normal")

				local var_497_33 = arg_494_1:GetWordFromCfg(417161119)
				local var_497_34 = arg_494_1:FormatText(var_497_33.content)

				arg_494_1.text_.text = var_497_34

				LuaForUtil.ClearLinePrefixSymbol(arg_494_1.text_)

				local var_497_35 = 21
				local var_497_36 = utf8.len(var_497_34)
				local var_497_37 = var_497_35 <= 0 and var_497_31 or var_497_31 * (var_497_36 / var_497_35)

				if var_497_37 > 0 and var_497_31 < var_497_37 then
					arg_494_1.talkMaxDuration = var_497_37

					if var_497_37 + var_497_30 > arg_494_1.duration_ then
						arg_494_1.duration_ = var_497_37 + var_497_30
					end
				end

				arg_494_1.text_.text = var_497_34
				arg_494_1.typewritter.percent = 0

				arg_494_1.typewritter:SetDirty()
				arg_494_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161119", "story_v_out_417161.awb") ~= 0 then
					local var_497_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161119", "story_v_out_417161.awb") / 1000

					if var_497_38 + var_497_30 > arg_494_1.duration_ then
						arg_494_1.duration_ = var_497_38 + var_497_30
					end

					if var_497_33.prefab_name ~= "" and arg_494_1.actors_[var_497_33.prefab_name] ~= nil then
						local var_497_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_494_1.actors_[var_497_33.prefab_name].transform, "story_v_out_417161", "417161119", "story_v_out_417161.awb")

						arg_494_1:RecordAudio("417161119", var_497_39)
						arg_494_1:RecordAudio("417161119", var_497_39)
					else
						arg_494_1:AudioAction("play", "voice", "story_v_out_417161", "417161119", "story_v_out_417161.awb")
					end

					arg_494_1:RecordHistoryTalkVoice("story_v_out_417161", "417161119", "story_v_out_417161.awb")
				end

				arg_494_1:RecordContent(arg_494_1.text_.text)
			end

			local var_497_40 = math.max(var_497_31, arg_494_1.talkMaxDuration)

			if var_497_30 <= arg_494_1.time_ and arg_494_1.time_ < var_497_30 + var_497_40 then
				arg_494_1.typewritter.percent = (arg_494_1.time_ - var_497_30) / var_497_40

				arg_494_1.typewritter:SetDirty()
			end

			if arg_494_1.time_ >= var_497_30 + var_497_40 and arg_494_1.time_ < var_497_30 + var_497_40 + arg_497_0 then
				arg_494_1.typewritter.percent = 1

				arg_494_1.typewritter:SetDirty()
				arg_494_1:ShowNextGo(true)
			end
		end
	end,
	Play417161120 = function(arg_498_0, arg_498_1)
		arg_498_1.time_ = 0
		arg_498_1.frameCnt_ = 0
		arg_498_1.state_ = "playing"
		arg_498_1.curTalkId_ = 417161120
		arg_498_1.duration_ = 5

		SetActive(arg_498_1.tipsGo_, false)

		function arg_498_1.onSingleLineFinish_()
			arg_498_1.onSingleLineUpdate_ = nil
			arg_498_1.onSingleLineFinish_ = nil
			arg_498_1.state_ = "waiting"
		end

		function arg_498_1.playNext_(arg_500_0)
			if arg_500_0 == 1 then
				arg_498_0:Play417161121(arg_498_1)
			end
		end

		function arg_498_1.onSingleLineUpdate_(arg_501_0)
			local var_501_0 = arg_498_1.actors_["10128"]
			local var_501_1 = 0

			if var_501_1 < arg_498_1.time_ and arg_498_1.time_ <= var_501_1 + arg_501_0 and not isNil(var_501_0) and arg_498_1.var_.actorSpriteComps10128 == nil then
				arg_498_1.var_.actorSpriteComps10128 = var_501_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_501_2 = 0.2

			if var_501_1 <= arg_498_1.time_ and arg_498_1.time_ < var_501_1 + var_501_2 and not isNil(var_501_0) then
				local var_501_3 = (arg_498_1.time_ - var_501_1) / var_501_2

				if arg_498_1.var_.actorSpriteComps10128 then
					for iter_501_0, iter_501_1 in pairs(arg_498_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_501_1 then
							if arg_498_1.isInRecall_ then
								local var_501_4 = Mathf.Lerp(iter_501_1.color.r, arg_498_1.hightColor2.r, var_501_3)
								local var_501_5 = Mathf.Lerp(iter_501_1.color.g, arg_498_1.hightColor2.g, var_501_3)
								local var_501_6 = Mathf.Lerp(iter_501_1.color.b, arg_498_1.hightColor2.b, var_501_3)

								iter_501_1.color = Color.New(var_501_4, var_501_5, var_501_6)
							else
								local var_501_7 = Mathf.Lerp(iter_501_1.color.r, 0.5, var_501_3)

								iter_501_1.color = Color.New(var_501_7, var_501_7, var_501_7)
							end
						end
					end
				end
			end

			if arg_498_1.time_ >= var_501_1 + var_501_2 and arg_498_1.time_ < var_501_1 + var_501_2 + arg_501_0 and not isNil(var_501_0) and arg_498_1.var_.actorSpriteComps10128 then
				for iter_501_2, iter_501_3 in pairs(arg_498_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_501_3 then
						if arg_498_1.isInRecall_ then
							iter_501_3.color = arg_498_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_501_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_498_1.var_.actorSpriteComps10128 = nil
			end

			local var_501_8 = arg_498_1.actors_["10128"].transform
			local var_501_9 = 0

			if var_501_9 < arg_498_1.time_ and arg_498_1.time_ <= var_501_9 + arg_501_0 then
				arg_498_1.var_.moveOldPos10128 = var_501_8.localPosition
				var_501_8.localScale = Vector3.New(1, 1, 1)

				arg_498_1:CheckSpriteTmpPos("10128", 7)

				local var_501_10 = var_501_8.childCount

				for iter_501_4 = 0, var_501_10 - 1 do
					local var_501_11 = var_501_8:GetChild(iter_501_4)

					if var_501_11.name == "" or not string.find(var_501_11.name, "split") then
						var_501_11.gameObject:SetActive(true)
					else
						var_501_11.gameObject:SetActive(false)
					end
				end
			end

			local var_501_12 = 0.001

			if var_501_9 <= arg_498_1.time_ and arg_498_1.time_ < var_501_9 + var_501_12 then
				local var_501_13 = (arg_498_1.time_ - var_501_9) / var_501_12
				local var_501_14 = Vector3.New(0, -2000, -300)

				var_501_8.localPosition = Vector3.Lerp(arg_498_1.var_.moveOldPos10128, var_501_14, var_501_13)
			end

			if arg_498_1.time_ >= var_501_9 + var_501_12 and arg_498_1.time_ < var_501_9 + var_501_12 + arg_501_0 then
				var_501_8.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_501_15 = 1.1
			local var_501_16 = 1

			if var_501_15 < arg_498_1.time_ and arg_498_1.time_ <= var_501_15 + arg_501_0 then
				local var_501_17 = "play"
				local var_501_18 = "effect"

				arg_498_1:AudioAction(var_501_17, var_501_18, "se_story_16", "se_story_16_attack03", "")
			end

			local var_501_19 = 0
			local var_501_20 = 1.725

			if var_501_19 < arg_498_1.time_ and arg_498_1.time_ <= var_501_19 + arg_501_0 then
				arg_498_1.talkMaxDuration = 0
				arg_498_1.dialogCg_.alpha = 1

				arg_498_1.dialog_:SetActive(true)
				SetActive(arg_498_1.leftNameGo_, false)

				arg_498_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_498_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_498_1:RecordName(arg_498_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_498_1.iconTrs_.gameObject, false)
				arg_498_1.callingController_:SetSelectedState("normal")

				local var_501_21 = arg_498_1:GetWordFromCfg(417161120)
				local var_501_22 = arg_498_1:FormatText(var_501_21.content)

				arg_498_1.text_.text = var_501_22

				LuaForUtil.ClearLinePrefixSymbol(arg_498_1.text_)

				local var_501_23 = 69
				local var_501_24 = utf8.len(var_501_22)
				local var_501_25 = var_501_23 <= 0 and var_501_20 or var_501_20 * (var_501_24 / var_501_23)

				if var_501_25 > 0 and var_501_20 < var_501_25 then
					arg_498_1.talkMaxDuration = var_501_25

					if var_501_25 + var_501_19 > arg_498_1.duration_ then
						arg_498_1.duration_ = var_501_25 + var_501_19
					end
				end

				arg_498_1.text_.text = var_501_22
				arg_498_1.typewritter.percent = 0

				arg_498_1.typewritter:SetDirty()
				arg_498_1:ShowNextGo(false)
				arg_498_1:RecordContent(arg_498_1.text_.text)
			end

			local var_501_26 = math.max(var_501_20, arg_498_1.talkMaxDuration)

			if var_501_19 <= arg_498_1.time_ and arg_498_1.time_ < var_501_19 + var_501_26 then
				arg_498_1.typewritter.percent = (arg_498_1.time_ - var_501_19) / var_501_26

				arg_498_1.typewritter:SetDirty()
			end

			if arg_498_1.time_ >= var_501_19 + var_501_26 and arg_498_1.time_ < var_501_19 + var_501_26 + arg_501_0 then
				arg_498_1.typewritter.percent = 1

				arg_498_1.typewritter:SetDirty()
				arg_498_1:ShowNextGo(true)
			end
		end
	end,
	Play417161121 = function(arg_502_0, arg_502_1)
		arg_502_1.time_ = 0
		arg_502_1.frameCnt_ = 0
		arg_502_1.state_ = "playing"
		arg_502_1.curTalkId_ = 417161121
		arg_502_1.duration_ = 5

		SetActive(arg_502_1.tipsGo_, false)

		function arg_502_1.onSingleLineFinish_()
			arg_502_1.onSingleLineUpdate_ = nil
			arg_502_1.onSingleLineFinish_ = nil
			arg_502_1.state_ = "waiting"
		end

		function arg_502_1.playNext_(arg_504_0)
			if arg_504_0 == 1 then
				arg_502_0:Play417161122(arg_502_1)
			end
		end

		function arg_502_1.onSingleLineUpdate_(arg_505_0)
			local var_505_0 = 0
			local var_505_1 = 1.3

			if var_505_0 < arg_502_1.time_ and arg_502_1.time_ <= var_505_0 + arg_505_0 then
				arg_502_1.talkMaxDuration = 0
				arg_502_1.dialogCg_.alpha = 1

				arg_502_1.dialog_:SetActive(true)
				SetActive(arg_502_1.leftNameGo_, false)

				arg_502_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_502_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_502_1:RecordName(arg_502_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_502_1.iconTrs_.gameObject, false)
				arg_502_1.callingController_:SetSelectedState("normal")

				local var_505_2 = arg_502_1:GetWordFromCfg(417161121)
				local var_505_3 = arg_502_1:FormatText(var_505_2.content)

				arg_502_1.text_.text = var_505_3

				LuaForUtil.ClearLinePrefixSymbol(arg_502_1.text_)

				local var_505_4 = 52
				local var_505_5 = utf8.len(var_505_3)
				local var_505_6 = var_505_4 <= 0 and var_505_1 or var_505_1 * (var_505_5 / var_505_4)

				if var_505_6 > 0 and var_505_1 < var_505_6 then
					arg_502_1.talkMaxDuration = var_505_6

					if var_505_6 + var_505_0 > arg_502_1.duration_ then
						arg_502_1.duration_ = var_505_6 + var_505_0
					end
				end

				arg_502_1.text_.text = var_505_3
				arg_502_1.typewritter.percent = 0

				arg_502_1.typewritter:SetDirty()
				arg_502_1:ShowNextGo(false)
				arg_502_1:RecordContent(arg_502_1.text_.text)
			end

			local var_505_7 = math.max(var_505_1, arg_502_1.talkMaxDuration)

			if var_505_0 <= arg_502_1.time_ and arg_502_1.time_ < var_505_0 + var_505_7 then
				arg_502_1.typewritter.percent = (arg_502_1.time_ - var_505_0) / var_505_7

				arg_502_1.typewritter:SetDirty()
			end

			if arg_502_1.time_ >= var_505_0 + var_505_7 and arg_502_1.time_ < var_505_0 + var_505_7 + arg_505_0 then
				arg_502_1.typewritter.percent = 1

				arg_502_1.typewritter:SetDirty()
				arg_502_1:ShowNextGo(true)
			end
		end
	end,
	Play417161122 = function(arg_506_0, arg_506_1)
		arg_506_1.time_ = 0
		arg_506_1.frameCnt_ = 0
		arg_506_1.state_ = "playing"
		arg_506_1.curTalkId_ = 417161122
		arg_506_1.duration_ = 5.17

		local var_506_0 = {
			zh = 3,
			ja = 5.166
		}
		local var_506_1 = manager.audio:GetLocalizationFlag()

		if var_506_0[var_506_1] ~= nil then
			arg_506_1.duration_ = var_506_0[var_506_1]
		end

		SetActive(arg_506_1.tipsGo_, false)

		function arg_506_1.onSingleLineFinish_()
			arg_506_1.onSingleLineUpdate_ = nil
			arg_506_1.onSingleLineFinish_ = nil
			arg_506_1.state_ = "waiting"
		end

		function arg_506_1.playNext_(arg_508_0)
			if arg_508_0 == 1 then
				arg_506_0:Play417161123(arg_506_1)
			end
		end

		function arg_506_1.onSingleLineUpdate_(arg_509_0)
			local var_509_0 = arg_506_1.actors_["1034"].transform
			local var_509_1 = 0

			if var_509_1 < arg_506_1.time_ and arg_506_1.time_ <= var_509_1 + arg_509_0 then
				arg_506_1.var_.moveOldPos1034 = var_509_0.localPosition
				var_509_0.localScale = Vector3.New(1, 1, 1)

				arg_506_1:CheckSpriteTmpPos("1034", 3)

				local var_509_2 = var_509_0.childCount

				for iter_509_0 = 0, var_509_2 - 1 do
					local var_509_3 = var_509_0:GetChild(iter_509_0)

					if var_509_3.name == "split_6" or not string.find(var_509_3.name, "split") then
						var_509_3.gameObject:SetActive(true)
					else
						var_509_3.gameObject:SetActive(false)
					end
				end
			end

			local var_509_4 = 0.001

			if var_509_1 <= arg_506_1.time_ and arg_506_1.time_ < var_509_1 + var_509_4 then
				local var_509_5 = (arg_506_1.time_ - var_509_1) / var_509_4
				local var_509_6 = Vector3.New(0, -331.9, -324)

				var_509_0.localPosition = Vector3.Lerp(arg_506_1.var_.moveOldPos1034, var_509_6, var_509_5)
			end

			if arg_506_1.time_ >= var_509_1 + var_509_4 and arg_506_1.time_ < var_509_1 + var_509_4 + arg_509_0 then
				var_509_0.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_509_7 = arg_506_1.actors_["1034"]
			local var_509_8 = 0

			if var_509_8 < arg_506_1.time_ and arg_506_1.time_ <= var_509_8 + arg_509_0 then
				arg_506_1:SetSpriteNiuquEffect("1034", true)
			end

			local var_509_9 = arg_506_1.actors_["1034"]
			local var_509_10 = 0

			if var_509_10 < arg_506_1.time_ and arg_506_1.time_ <= var_509_10 + arg_509_0 then
				local var_509_11 = var_509_9:GetComponentInChildren(typeof(CanvasGroup))

				if var_509_11 then
					arg_506_1.var_.alphaOldValue1034 = var_509_11.alpha
					arg_506_1.var_.characterEffect1034 = var_509_11
				end
			end

			local var_509_12 = 0.2

			if var_509_10 <= arg_506_1.time_ and arg_506_1.time_ < var_509_10 + var_509_12 then
				local var_509_13 = (arg_506_1.time_ - var_509_10) / var_509_12
				local var_509_14 = Mathf.Lerp(arg_506_1.var_.alphaOldValue1034, 0.6, var_509_13)

				if arg_506_1.var_.characterEffect1034 then
					arg_506_1.var_.characterEffect1034.alpha = var_509_14
				end
			end

			if arg_506_1.time_ >= var_509_10 + var_509_12 and arg_506_1.time_ < var_509_10 + var_509_12 + arg_509_0 and arg_506_1.var_.characterEffect1034 then
				arg_506_1.var_.characterEffect1034.alpha = 0.6
			end

			local var_509_15 = 0
			local var_509_16 = 0.3

			if var_509_15 < arg_506_1.time_ and arg_506_1.time_ <= var_509_15 + arg_509_0 then
				arg_506_1.talkMaxDuration = 0
				arg_506_1.dialogCg_.alpha = 1

				arg_506_1.dialog_:SetActive(true)
				SetActive(arg_506_1.leftNameGo_, true)

				local var_509_17 = arg_506_1:FormatText(StoryNameCfg[1109].name)

				arg_506_1.leftNameTxt_.text = var_509_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_506_1.leftNameTxt_.transform)

				arg_506_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_506_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_506_1:RecordName(arg_506_1.leftNameTxt_.text)
				SetActive(arg_506_1.iconTrs_.gameObject, false)
				arg_506_1.callingController_:SetSelectedState("normal")

				local var_509_18 = arg_506_1:GetWordFromCfg(417161122)
				local var_509_19 = arg_506_1:FormatText(var_509_18.content)

				arg_506_1.text_.text = var_509_19

				LuaForUtil.ClearLinePrefixSymbol(arg_506_1.text_)

				local var_509_20 = 12
				local var_509_21 = utf8.len(var_509_19)
				local var_509_22 = var_509_20 <= 0 and var_509_16 or var_509_16 * (var_509_21 / var_509_20)

				if var_509_22 > 0 and var_509_16 < var_509_22 then
					arg_506_1.talkMaxDuration = var_509_22

					if var_509_22 + var_509_15 > arg_506_1.duration_ then
						arg_506_1.duration_ = var_509_22 + var_509_15
					end
				end

				arg_506_1.text_.text = var_509_19
				arg_506_1.typewritter.percent = 0

				arg_506_1.typewritter:SetDirty()
				arg_506_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161122", "story_v_out_417161.awb") ~= 0 then
					local var_509_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161122", "story_v_out_417161.awb") / 1000

					if var_509_23 + var_509_15 > arg_506_1.duration_ then
						arg_506_1.duration_ = var_509_23 + var_509_15
					end

					if var_509_18.prefab_name ~= "" and arg_506_1.actors_[var_509_18.prefab_name] ~= nil then
						local var_509_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_506_1.actors_[var_509_18.prefab_name].transform, "story_v_out_417161", "417161122", "story_v_out_417161.awb")

						arg_506_1:RecordAudio("417161122", var_509_24)
						arg_506_1:RecordAudio("417161122", var_509_24)
					else
						arg_506_1:AudioAction("play", "voice", "story_v_out_417161", "417161122", "story_v_out_417161.awb")
					end

					arg_506_1:RecordHistoryTalkVoice("story_v_out_417161", "417161122", "story_v_out_417161.awb")
				end

				arg_506_1:RecordContent(arg_506_1.text_.text)
			end

			local var_509_25 = math.max(var_509_16, arg_506_1.talkMaxDuration)

			if var_509_15 <= arg_506_1.time_ and arg_506_1.time_ < var_509_15 + var_509_25 then
				arg_506_1.typewritter.percent = (arg_506_1.time_ - var_509_15) / var_509_25

				arg_506_1.typewritter:SetDirty()
			end

			if arg_506_1.time_ >= var_509_15 + var_509_25 and arg_506_1.time_ < var_509_15 + var_509_25 + arg_509_0 then
				arg_506_1.typewritter.percent = 1

				arg_506_1.typewritter:SetDirty()
				arg_506_1:ShowNextGo(true)
			end
		end
	end,
	Play417161123 = function(arg_510_0, arg_510_1)
		arg_510_1.time_ = 0
		arg_510_1.frameCnt_ = 0
		arg_510_1.state_ = "playing"
		arg_510_1.curTalkId_ = 417161123
		arg_510_1.duration_ = 8.4

		local var_510_0 = {
			zh = 6.833,
			ja = 8.4
		}
		local var_510_1 = manager.audio:GetLocalizationFlag()

		if var_510_0[var_510_1] ~= nil then
			arg_510_1.duration_ = var_510_0[var_510_1]
		end

		SetActive(arg_510_1.tipsGo_, false)

		function arg_510_1.onSingleLineFinish_()
			arg_510_1.onSingleLineUpdate_ = nil
			arg_510_1.onSingleLineFinish_ = nil
			arg_510_1.state_ = "waiting"
		end

		function arg_510_1.playNext_(arg_512_0)
			if arg_512_0 == 1 then
				arg_510_0:Play417161124(arg_510_1)
			end
		end

		function arg_510_1.onSingleLineUpdate_(arg_513_0)
			local var_513_0 = arg_510_1.actors_["1034"]
			local var_513_1 = 0

			if var_513_1 < arg_510_1.time_ and arg_510_1.time_ <= var_513_1 + arg_513_0 then
				arg_510_1:SetSpriteNiuquEffect("1034", true)
			end

			local var_513_2 = arg_510_1.actors_["1034"]
			local var_513_3 = 0

			if var_513_3 < arg_510_1.time_ and arg_510_1.time_ <= var_513_3 + arg_513_0 then
				local var_513_4 = var_513_2:GetComponentInChildren(typeof(CanvasGroup))

				if var_513_4 then
					arg_510_1.var_.alphaOldValue1034 = var_513_4.alpha
					arg_510_1.var_.characterEffect1034 = var_513_4
				end
			end

			local var_513_5 = 0.2

			if var_513_3 <= arg_510_1.time_ and arg_510_1.time_ < var_513_3 + var_513_5 then
				local var_513_6 = (arg_510_1.time_ - var_513_3) / var_513_5
				local var_513_7 = Mathf.Lerp(arg_510_1.var_.alphaOldValue1034, 0.6, var_513_6)

				if arg_510_1.var_.characterEffect1034 then
					arg_510_1.var_.characterEffect1034.alpha = var_513_7
				end
			end

			if arg_510_1.time_ >= var_513_3 + var_513_5 and arg_510_1.time_ < var_513_3 + var_513_5 + arg_513_0 and arg_510_1.var_.characterEffect1034 then
				arg_510_1.var_.characterEffect1034.alpha = 0.6
			end

			local var_513_8 = 0
			local var_513_9 = 0.875

			if var_513_8 < arg_510_1.time_ and arg_510_1.time_ <= var_513_8 + arg_513_0 then
				arg_510_1.talkMaxDuration = 0
				arg_510_1.dialogCg_.alpha = 1

				arg_510_1.dialog_:SetActive(true)
				SetActive(arg_510_1.leftNameGo_, true)

				local var_513_10 = arg_510_1:FormatText(StoryNameCfg[1109].name)

				arg_510_1.leftNameTxt_.text = var_513_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_510_1.leftNameTxt_.transform)

				arg_510_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_510_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_510_1:RecordName(arg_510_1.leftNameTxt_.text)
				SetActive(arg_510_1.iconTrs_.gameObject, false)
				arg_510_1.callingController_:SetSelectedState("normal")

				local var_513_11 = arg_510_1:GetWordFromCfg(417161123)
				local var_513_12 = arg_510_1:FormatText(var_513_11.content)

				arg_510_1.text_.text = var_513_12

				LuaForUtil.ClearLinePrefixSymbol(arg_510_1.text_)

				local var_513_13 = 35
				local var_513_14 = utf8.len(var_513_12)
				local var_513_15 = var_513_13 <= 0 and var_513_9 or var_513_9 * (var_513_14 / var_513_13)

				if var_513_15 > 0 and var_513_9 < var_513_15 then
					arg_510_1.talkMaxDuration = var_513_15

					if var_513_15 + var_513_8 > arg_510_1.duration_ then
						arg_510_1.duration_ = var_513_15 + var_513_8
					end
				end

				arg_510_1.text_.text = var_513_12
				arg_510_1.typewritter.percent = 0

				arg_510_1.typewritter:SetDirty()
				arg_510_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161123", "story_v_out_417161.awb") ~= 0 then
					local var_513_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161123", "story_v_out_417161.awb") / 1000

					if var_513_16 + var_513_8 > arg_510_1.duration_ then
						arg_510_1.duration_ = var_513_16 + var_513_8
					end

					if var_513_11.prefab_name ~= "" and arg_510_1.actors_[var_513_11.prefab_name] ~= nil then
						local var_513_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_510_1.actors_[var_513_11.prefab_name].transform, "story_v_out_417161", "417161123", "story_v_out_417161.awb")

						arg_510_1:RecordAudio("417161123", var_513_17)
						arg_510_1:RecordAudio("417161123", var_513_17)
					else
						arg_510_1:AudioAction("play", "voice", "story_v_out_417161", "417161123", "story_v_out_417161.awb")
					end

					arg_510_1:RecordHistoryTalkVoice("story_v_out_417161", "417161123", "story_v_out_417161.awb")
				end

				arg_510_1:RecordContent(arg_510_1.text_.text)
			end

			local var_513_18 = math.max(var_513_9, arg_510_1.talkMaxDuration)

			if var_513_8 <= arg_510_1.time_ and arg_510_1.time_ < var_513_8 + var_513_18 then
				arg_510_1.typewritter.percent = (arg_510_1.time_ - var_513_8) / var_513_18

				arg_510_1.typewritter:SetDirty()
			end

			if arg_510_1.time_ >= var_513_8 + var_513_18 and arg_510_1.time_ < var_513_8 + var_513_18 + arg_513_0 then
				arg_510_1.typewritter.percent = 1

				arg_510_1.typewritter:SetDirty()
				arg_510_1:ShowNextGo(true)
			end
		end
	end,
	Play417161124 = function(arg_514_0, arg_514_1)
		arg_514_1.time_ = 0
		arg_514_1.frameCnt_ = 0
		arg_514_1.state_ = "playing"
		arg_514_1.curTalkId_ = 417161124
		arg_514_1.duration_ = 4.5

		local var_514_0 = {
			zh = 2.1,
			ja = 4.5
		}
		local var_514_1 = manager.audio:GetLocalizationFlag()

		if var_514_0[var_514_1] ~= nil then
			arg_514_1.duration_ = var_514_0[var_514_1]
		end

		SetActive(arg_514_1.tipsGo_, false)

		function arg_514_1.onSingleLineFinish_()
			arg_514_1.onSingleLineUpdate_ = nil
			arg_514_1.onSingleLineFinish_ = nil
			arg_514_1.state_ = "waiting"
		end

		function arg_514_1.playNext_(arg_516_0)
			if arg_516_0 == 1 then
				arg_514_0:Play417161125(arg_514_1)
			end
		end

		function arg_514_1.onSingleLineUpdate_(arg_517_0)
			local var_517_0 = arg_514_1.actors_["10128"]
			local var_517_1 = 0

			if var_517_1 < arg_514_1.time_ and arg_514_1.time_ <= var_517_1 + arg_517_0 and not isNil(var_517_0) and arg_514_1.var_.actorSpriteComps10128 == nil then
				arg_514_1.var_.actorSpriteComps10128 = var_517_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_517_2 = 0.2

			if var_517_1 <= arg_514_1.time_ and arg_514_1.time_ < var_517_1 + var_517_2 and not isNil(var_517_0) then
				local var_517_3 = (arg_514_1.time_ - var_517_1) / var_517_2

				if arg_514_1.var_.actorSpriteComps10128 then
					for iter_517_0, iter_517_1 in pairs(arg_514_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_517_1 then
							if arg_514_1.isInRecall_ then
								local var_517_4 = Mathf.Lerp(iter_517_1.color.r, arg_514_1.hightColor1.r, var_517_3)
								local var_517_5 = Mathf.Lerp(iter_517_1.color.g, arg_514_1.hightColor1.g, var_517_3)
								local var_517_6 = Mathf.Lerp(iter_517_1.color.b, arg_514_1.hightColor1.b, var_517_3)

								iter_517_1.color = Color.New(var_517_4, var_517_5, var_517_6)
							else
								local var_517_7 = Mathf.Lerp(iter_517_1.color.r, 1, var_517_3)

								iter_517_1.color = Color.New(var_517_7, var_517_7, var_517_7)
							end
						end
					end
				end
			end

			if arg_514_1.time_ >= var_517_1 + var_517_2 and arg_514_1.time_ < var_517_1 + var_517_2 + arg_517_0 and not isNil(var_517_0) and arg_514_1.var_.actorSpriteComps10128 then
				for iter_517_2, iter_517_3 in pairs(arg_514_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_517_3 then
						if arg_514_1.isInRecall_ then
							iter_517_3.color = arg_514_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_517_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_514_1.var_.actorSpriteComps10128 = nil
			end

			local var_517_8 = arg_514_1.actors_["1034"]
			local var_517_9 = 0

			if var_517_9 < arg_514_1.time_ and arg_514_1.time_ <= var_517_9 + arg_517_0 and not isNil(var_517_8) and arg_514_1.var_.actorSpriteComps1034 == nil then
				arg_514_1.var_.actorSpriteComps1034 = var_517_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_517_10 = 0.2

			if var_517_9 <= arg_514_1.time_ and arg_514_1.time_ < var_517_9 + var_517_10 and not isNil(var_517_8) then
				local var_517_11 = (arg_514_1.time_ - var_517_9) / var_517_10

				if arg_514_1.var_.actorSpriteComps1034 then
					for iter_517_4, iter_517_5 in pairs(arg_514_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_517_5 then
							if arg_514_1.isInRecall_ then
								local var_517_12 = Mathf.Lerp(iter_517_5.color.r, arg_514_1.hightColor2.r, var_517_11)
								local var_517_13 = Mathf.Lerp(iter_517_5.color.g, arg_514_1.hightColor2.g, var_517_11)
								local var_517_14 = Mathf.Lerp(iter_517_5.color.b, arg_514_1.hightColor2.b, var_517_11)

								iter_517_5.color = Color.New(var_517_12, var_517_13, var_517_14)
							else
								local var_517_15 = Mathf.Lerp(iter_517_5.color.r, 0.5, var_517_11)

								iter_517_5.color = Color.New(var_517_15, var_517_15, var_517_15)
							end
						end
					end
				end
			end

			if arg_514_1.time_ >= var_517_9 + var_517_10 and arg_514_1.time_ < var_517_9 + var_517_10 + arg_517_0 and not isNil(var_517_8) and arg_514_1.var_.actorSpriteComps1034 then
				for iter_517_6, iter_517_7 in pairs(arg_514_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_517_7 then
						if arg_514_1.isInRecall_ then
							iter_517_7.color = arg_514_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_517_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_514_1.var_.actorSpriteComps1034 = nil
			end

			local var_517_16 = arg_514_1.actors_["10128"].transform
			local var_517_17 = 0

			if var_517_17 < arg_514_1.time_ and arg_514_1.time_ <= var_517_17 + arg_517_0 then
				arg_514_1.var_.moveOldPos10128 = var_517_16.localPosition
				var_517_16.localScale = Vector3.New(1, 1, 1)

				arg_514_1:CheckSpriteTmpPos("10128", 3)

				local var_517_18 = var_517_16.childCount

				for iter_517_8 = 0, var_517_18 - 1 do
					local var_517_19 = var_517_16:GetChild(iter_517_8)

					if var_517_19.name == "" or not string.find(var_517_19.name, "split") then
						var_517_19.gameObject:SetActive(true)
					else
						var_517_19.gameObject:SetActive(false)
					end
				end
			end

			local var_517_20 = 0.001

			if var_517_17 <= arg_514_1.time_ and arg_514_1.time_ < var_517_17 + var_517_20 then
				local var_517_21 = (arg_514_1.time_ - var_517_17) / var_517_20
				local var_517_22 = Vector3.New(0, -347, -300)

				var_517_16.localPosition = Vector3.Lerp(arg_514_1.var_.moveOldPos10128, var_517_22, var_517_21)
			end

			if arg_514_1.time_ >= var_517_17 + var_517_20 and arg_514_1.time_ < var_517_17 + var_517_20 + arg_517_0 then
				var_517_16.localPosition = Vector3.New(0, -347, -300)
			end

			local var_517_23 = arg_514_1.actors_["1034"].transform
			local var_517_24 = 0

			if var_517_24 < arg_514_1.time_ and arg_514_1.time_ <= var_517_24 + arg_517_0 then
				arg_514_1.var_.moveOldPos1034 = var_517_23.localPosition
				var_517_23.localScale = Vector3.New(1, 1, 1)

				arg_514_1:CheckSpriteTmpPos("1034", 7)

				local var_517_25 = var_517_23.childCount

				for iter_517_9 = 0, var_517_25 - 1 do
					local var_517_26 = var_517_23:GetChild(iter_517_9)

					if var_517_26.name == "" or not string.find(var_517_26.name, "split") then
						var_517_26.gameObject:SetActive(true)
					else
						var_517_26.gameObject:SetActive(false)
					end
				end
			end

			local var_517_27 = 0.001

			if var_517_24 <= arg_514_1.time_ and arg_514_1.time_ < var_517_24 + var_517_27 then
				local var_517_28 = (arg_514_1.time_ - var_517_24) / var_517_27
				local var_517_29 = Vector3.New(0, -2000, 0)

				var_517_23.localPosition = Vector3.Lerp(arg_514_1.var_.moveOldPos1034, var_517_29, var_517_28)
			end

			if arg_514_1.time_ >= var_517_24 + var_517_27 and arg_514_1.time_ < var_517_24 + var_517_27 + arg_517_0 then
				var_517_23.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_517_30 = 0
			local var_517_31 = 0.25

			if var_517_30 < arg_514_1.time_ and arg_514_1.time_ <= var_517_30 + arg_517_0 then
				arg_514_1.talkMaxDuration = 0
				arg_514_1.dialogCg_.alpha = 1

				arg_514_1.dialog_:SetActive(true)
				SetActive(arg_514_1.leftNameGo_, true)

				local var_517_32 = arg_514_1:FormatText(StoryNameCfg[595].name)

				arg_514_1.leftNameTxt_.text = var_517_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_514_1.leftNameTxt_.transform)

				arg_514_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_514_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_514_1:RecordName(arg_514_1.leftNameTxt_.text)
				SetActive(arg_514_1.iconTrs_.gameObject, false)
				arg_514_1.callingController_:SetSelectedState("normal")

				local var_517_33 = arg_514_1:GetWordFromCfg(417161124)
				local var_517_34 = arg_514_1:FormatText(var_517_33.content)

				arg_514_1.text_.text = var_517_34

				LuaForUtil.ClearLinePrefixSymbol(arg_514_1.text_)

				local var_517_35 = 10
				local var_517_36 = utf8.len(var_517_34)
				local var_517_37 = var_517_35 <= 0 and var_517_31 or var_517_31 * (var_517_36 / var_517_35)

				if var_517_37 > 0 and var_517_31 < var_517_37 then
					arg_514_1.talkMaxDuration = var_517_37

					if var_517_37 + var_517_30 > arg_514_1.duration_ then
						arg_514_1.duration_ = var_517_37 + var_517_30
					end
				end

				arg_514_1.text_.text = var_517_34
				arg_514_1.typewritter.percent = 0

				arg_514_1.typewritter:SetDirty()
				arg_514_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161124", "story_v_out_417161.awb") ~= 0 then
					local var_517_38 = manager.audio:GetVoiceLength("story_v_out_417161", "417161124", "story_v_out_417161.awb") / 1000

					if var_517_38 + var_517_30 > arg_514_1.duration_ then
						arg_514_1.duration_ = var_517_38 + var_517_30
					end

					if var_517_33.prefab_name ~= "" and arg_514_1.actors_[var_517_33.prefab_name] ~= nil then
						local var_517_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_514_1.actors_[var_517_33.prefab_name].transform, "story_v_out_417161", "417161124", "story_v_out_417161.awb")

						arg_514_1:RecordAudio("417161124", var_517_39)
						arg_514_1:RecordAudio("417161124", var_517_39)
					else
						arg_514_1:AudioAction("play", "voice", "story_v_out_417161", "417161124", "story_v_out_417161.awb")
					end

					arg_514_1:RecordHistoryTalkVoice("story_v_out_417161", "417161124", "story_v_out_417161.awb")
				end

				arg_514_1:RecordContent(arg_514_1.text_.text)
			end

			local var_517_40 = math.max(var_517_31, arg_514_1.talkMaxDuration)

			if var_517_30 <= arg_514_1.time_ and arg_514_1.time_ < var_517_30 + var_517_40 then
				arg_514_1.typewritter.percent = (arg_514_1.time_ - var_517_30) / var_517_40

				arg_514_1.typewritter:SetDirty()
			end

			if arg_514_1.time_ >= var_517_30 + var_517_40 and arg_514_1.time_ < var_517_30 + var_517_40 + arg_517_0 then
				arg_514_1.typewritter.percent = 1

				arg_514_1.typewritter:SetDirty()
				arg_514_1:ShowNextGo(true)
			end
		end
	end,
	Play417161125 = function(arg_518_0, arg_518_1)
		arg_518_1.time_ = 0
		arg_518_1.frameCnt_ = 0
		arg_518_1.state_ = "playing"
		arg_518_1.curTalkId_ = 417161125
		arg_518_1.duration_ = 7.3

		local var_518_0 = {
			zh = 5.166,
			ja = 7.3
		}
		local var_518_1 = manager.audio:GetLocalizationFlag()

		if var_518_0[var_518_1] ~= nil then
			arg_518_1.duration_ = var_518_0[var_518_1]
		end

		SetActive(arg_518_1.tipsGo_, false)

		function arg_518_1.onSingleLineFinish_()
			arg_518_1.onSingleLineUpdate_ = nil
			arg_518_1.onSingleLineFinish_ = nil
			arg_518_1.state_ = "waiting"
		end

		function arg_518_1.playNext_(arg_520_0)
			if arg_520_0 == 1 then
				arg_518_0:Play417161126(arg_518_1)
			end
		end

		function arg_518_1.onSingleLineUpdate_(arg_521_0)
			local var_521_0 = 0
			local var_521_1 = 0.6

			if var_521_0 < arg_518_1.time_ and arg_518_1.time_ <= var_521_0 + arg_521_0 then
				arg_518_1.talkMaxDuration = 0
				arg_518_1.dialogCg_.alpha = 1

				arg_518_1.dialog_:SetActive(true)
				SetActive(arg_518_1.leftNameGo_, true)

				local var_521_2 = arg_518_1:FormatText(StoryNameCfg[595].name)

				arg_518_1.leftNameTxt_.text = var_521_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_518_1.leftNameTxt_.transform)

				arg_518_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_518_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_518_1:RecordName(arg_518_1.leftNameTxt_.text)
				SetActive(arg_518_1.iconTrs_.gameObject, false)
				arg_518_1.callingController_:SetSelectedState("normal")

				local var_521_3 = arg_518_1:GetWordFromCfg(417161125)
				local var_521_4 = arg_518_1:FormatText(var_521_3.content)

				arg_518_1.text_.text = var_521_4

				LuaForUtil.ClearLinePrefixSymbol(arg_518_1.text_)

				local var_521_5 = 24
				local var_521_6 = utf8.len(var_521_4)
				local var_521_7 = var_521_5 <= 0 and var_521_1 or var_521_1 * (var_521_6 / var_521_5)

				if var_521_7 > 0 and var_521_1 < var_521_7 then
					arg_518_1.talkMaxDuration = var_521_7

					if var_521_7 + var_521_0 > arg_518_1.duration_ then
						arg_518_1.duration_ = var_521_7 + var_521_0
					end
				end

				arg_518_1.text_.text = var_521_4
				arg_518_1.typewritter.percent = 0

				arg_518_1.typewritter:SetDirty()
				arg_518_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161125", "story_v_out_417161.awb") ~= 0 then
					local var_521_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161125", "story_v_out_417161.awb") / 1000

					if var_521_8 + var_521_0 > arg_518_1.duration_ then
						arg_518_1.duration_ = var_521_8 + var_521_0
					end

					if var_521_3.prefab_name ~= "" and arg_518_1.actors_[var_521_3.prefab_name] ~= nil then
						local var_521_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_518_1.actors_[var_521_3.prefab_name].transform, "story_v_out_417161", "417161125", "story_v_out_417161.awb")

						arg_518_1:RecordAudio("417161125", var_521_9)
						arg_518_1:RecordAudio("417161125", var_521_9)
					else
						arg_518_1:AudioAction("play", "voice", "story_v_out_417161", "417161125", "story_v_out_417161.awb")
					end

					arg_518_1:RecordHistoryTalkVoice("story_v_out_417161", "417161125", "story_v_out_417161.awb")
				end

				arg_518_1:RecordContent(arg_518_1.text_.text)
			end

			local var_521_10 = math.max(var_521_1, arg_518_1.talkMaxDuration)

			if var_521_0 <= arg_518_1.time_ and arg_518_1.time_ < var_521_0 + var_521_10 then
				arg_518_1.typewritter.percent = (arg_518_1.time_ - var_521_0) / var_521_10

				arg_518_1.typewritter:SetDirty()
			end

			if arg_518_1.time_ >= var_521_0 + var_521_10 and arg_518_1.time_ < var_521_0 + var_521_10 + arg_521_0 then
				arg_518_1.typewritter.percent = 1

				arg_518_1.typewritter:SetDirty()
				arg_518_1:ShowNextGo(true)
			end
		end
	end,
	Play417161126 = function(arg_522_0, arg_522_1)
		arg_522_1.time_ = 0
		arg_522_1.frameCnt_ = 0
		arg_522_1.state_ = "playing"
		arg_522_1.curTalkId_ = 417161126
		arg_522_1.duration_ = 5

		SetActive(arg_522_1.tipsGo_, false)

		function arg_522_1.onSingleLineFinish_()
			arg_522_1.onSingleLineUpdate_ = nil
			arg_522_1.onSingleLineFinish_ = nil
			arg_522_1.state_ = "waiting"
		end

		function arg_522_1.playNext_(arg_524_0)
			if arg_524_0 == 1 then
				arg_522_0:Play417161127(arg_522_1)
			end
		end

		function arg_522_1.onSingleLineUpdate_(arg_525_0)
			local var_525_0 = arg_522_1.actors_["10128"]
			local var_525_1 = 0

			if var_525_1 < arg_522_1.time_ and arg_522_1.time_ <= var_525_1 + arg_525_0 and not isNil(var_525_0) and arg_522_1.var_.actorSpriteComps10128 == nil then
				arg_522_1.var_.actorSpriteComps10128 = var_525_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_525_2 = 0.2

			if var_525_1 <= arg_522_1.time_ and arg_522_1.time_ < var_525_1 + var_525_2 and not isNil(var_525_0) then
				local var_525_3 = (arg_522_1.time_ - var_525_1) / var_525_2

				if arg_522_1.var_.actorSpriteComps10128 then
					for iter_525_0, iter_525_1 in pairs(arg_522_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_525_1 then
							if arg_522_1.isInRecall_ then
								local var_525_4 = Mathf.Lerp(iter_525_1.color.r, arg_522_1.hightColor2.r, var_525_3)
								local var_525_5 = Mathf.Lerp(iter_525_1.color.g, arg_522_1.hightColor2.g, var_525_3)
								local var_525_6 = Mathf.Lerp(iter_525_1.color.b, arg_522_1.hightColor2.b, var_525_3)

								iter_525_1.color = Color.New(var_525_4, var_525_5, var_525_6)
							else
								local var_525_7 = Mathf.Lerp(iter_525_1.color.r, 0.5, var_525_3)

								iter_525_1.color = Color.New(var_525_7, var_525_7, var_525_7)
							end
						end
					end
				end
			end

			if arg_522_1.time_ >= var_525_1 + var_525_2 and arg_522_1.time_ < var_525_1 + var_525_2 + arg_525_0 and not isNil(var_525_0) and arg_522_1.var_.actorSpriteComps10128 then
				for iter_525_2, iter_525_3 in pairs(arg_522_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_525_3 then
						if arg_522_1.isInRecall_ then
							iter_525_3.color = arg_522_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_525_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_522_1.var_.actorSpriteComps10128 = nil
			end

			local var_525_8 = arg_522_1.actors_["10128"].transform
			local var_525_9 = 0

			if var_525_9 < arg_522_1.time_ and arg_522_1.time_ <= var_525_9 + arg_525_0 then
				arg_522_1.var_.moveOldPos10128 = var_525_8.localPosition
				var_525_8.localScale = Vector3.New(1, 1, 1)

				arg_522_1:CheckSpriteTmpPos("10128", 7)

				local var_525_10 = var_525_8.childCount

				for iter_525_4 = 0, var_525_10 - 1 do
					local var_525_11 = var_525_8:GetChild(iter_525_4)

					if var_525_11.name == "" or not string.find(var_525_11.name, "split") then
						var_525_11.gameObject:SetActive(true)
					else
						var_525_11.gameObject:SetActive(false)
					end
				end
			end

			local var_525_12 = 0.001

			if var_525_9 <= arg_522_1.time_ and arg_522_1.time_ < var_525_9 + var_525_12 then
				local var_525_13 = (arg_522_1.time_ - var_525_9) / var_525_12
				local var_525_14 = Vector3.New(0, -2000, -300)

				var_525_8.localPosition = Vector3.Lerp(arg_522_1.var_.moveOldPos10128, var_525_14, var_525_13)
			end

			if arg_522_1.time_ >= var_525_9 + var_525_12 and arg_522_1.time_ < var_525_9 + var_525_12 + arg_525_0 then
				var_525_8.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_525_15 = 1.05842309817672
			local var_525_16 = 1

			if var_525_15 < arg_522_1.time_ and arg_522_1.time_ <= var_525_15 + arg_525_0 then
				local var_525_17 = "play"
				local var_525_18 = "effect"

				arg_522_1:AudioAction(var_525_17, var_525_18, "se_story_16", "se_story_16_channel", "")
			end

			local var_525_19 = 0
			local var_525_20 = 1.125

			if var_525_19 < arg_522_1.time_ and arg_522_1.time_ <= var_525_19 + arg_525_0 then
				arg_522_1.talkMaxDuration = 0
				arg_522_1.dialogCg_.alpha = 1

				arg_522_1.dialog_:SetActive(true)
				SetActive(arg_522_1.leftNameGo_, false)

				arg_522_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_522_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_522_1:RecordName(arg_522_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_522_1.iconTrs_.gameObject, false)
				arg_522_1.callingController_:SetSelectedState("normal")

				local var_525_21 = arg_522_1:GetWordFromCfg(417161126)
				local var_525_22 = arg_522_1:FormatText(var_525_21.content)

				arg_522_1.text_.text = var_525_22

				LuaForUtil.ClearLinePrefixSymbol(arg_522_1.text_)

				local var_525_23 = 45
				local var_525_24 = utf8.len(var_525_22)
				local var_525_25 = var_525_23 <= 0 and var_525_20 or var_525_20 * (var_525_24 / var_525_23)

				if var_525_25 > 0 and var_525_20 < var_525_25 then
					arg_522_1.talkMaxDuration = var_525_25

					if var_525_25 + var_525_19 > arg_522_1.duration_ then
						arg_522_1.duration_ = var_525_25 + var_525_19
					end
				end

				arg_522_1.text_.text = var_525_22
				arg_522_1.typewritter.percent = 0

				arg_522_1.typewritter:SetDirty()
				arg_522_1:ShowNextGo(false)
				arg_522_1:RecordContent(arg_522_1.text_.text)
			end

			local var_525_26 = math.max(var_525_20, arg_522_1.talkMaxDuration)

			if var_525_19 <= arg_522_1.time_ and arg_522_1.time_ < var_525_19 + var_525_26 then
				arg_522_1.typewritter.percent = (arg_522_1.time_ - var_525_19) / var_525_26

				arg_522_1.typewritter:SetDirty()
			end

			if arg_522_1.time_ >= var_525_19 + var_525_26 and arg_522_1.time_ < var_525_19 + var_525_26 + arg_525_0 then
				arg_522_1.typewritter.percent = 1

				arg_522_1.typewritter:SetDirty()
				arg_522_1:ShowNextGo(true)
			end
		end
	end,
	Play417161127 = function(arg_526_0, arg_526_1)
		arg_526_1.time_ = 0
		arg_526_1.frameCnt_ = 0
		arg_526_1.state_ = "playing"
		arg_526_1.curTalkId_ = 417161127
		arg_526_1.duration_ = 5

		SetActive(arg_526_1.tipsGo_, false)

		function arg_526_1.onSingleLineFinish_()
			arg_526_1.onSingleLineUpdate_ = nil
			arg_526_1.onSingleLineFinish_ = nil
			arg_526_1.state_ = "waiting"
		end

		function arg_526_1.playNext_(arg_528_0)
			if arg_528_0 == 1 then
				arg_526_0:Play417161128(arg_526_1)
			end
		end

		function arg_526_1.onSingleLineUpdate_(arg_529_0)
			local var_529_0 = 0
			local var_529_1 = 1.1

			if var_529_0 < arg_526_1.time_ and arg_526_1.time_ <= var_529_0 + arg_529_0 then
				arg_526_1.talkMaxDuration = 0
				arg_526_1.dialogCg_.alpha = 1

				arg_526_1.dialog_:SetActive(true)
				SetActive(arg_526_1.leftNameGo_, false)

				arg_526_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_526_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_526_1:RecordName(arg_526_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_526_1.iconTrs_.gameObject, false)
				arg_526_1.callingController_:SetSelectedState("normal")

				local var_529_2 = arg_526_1:GetWordFromCfg(417161127)
				local var_529_3 = arg_526_1:FormatText(var_529_2.content)

				arg_526_1.text_.text = var_529_3

				LuaForUtil.ClearLinePrefixSymbol(arg_526_1.text_)

				local var_529_4 = 44
				local var_529_5 = utf8.len(var_529_3)
				local var_529_6 = var_529_4 <= 0 and var_529_1 or var_529_1 * (var_529_5 / var_529_4)

				if var_529_6 > 0 and var_529_1 < var_529_6 then
					arg_526_1.talkMaxDuration = var_529_6

					if var_529_6 + var_529_0 > arg_526_1.duration_ then
						arg_526_1.duration_ = var_529_6 + var_529_0
					end
				end

				arg_526_1.text_.text = var_529_3
				arg_526_1.typewritter.percent = 0

				arg_526_1.typewritter:SetDirty()
				arg_526_1:ShowNextGo(false)
				arg_526_1:RecordContent(arg_526_1.text_.text)
			end

			local var_529_7 = math.max(var_529_1, arg_526_1.talkMaxDuration)

			if var_529_0 <= arg_526_1.time_ and arg_526_1.time_ < var_529_0 + var_529_7 then
				arg_526_1.typewritter.percent = (arg_526_1.time_ - var_529_0) / var_529_7

				arg_526_1.typewritter:SetDirty()
			end

			if arg_526_1.time_ >= var_529_0 + var_529_7 and arg_526_1.time_ < var_529_0 + var_529_7 + arg_529_0 then
				arg_526_1.typewritter.percent = 1

				arg_526_1.typewritter:SetDirty()
				arg_526_1:ShowNextGo(true)
			end
		end
	end,
	Play417161128 = function(arg_530_0, arg_530_1)
		arg_530_1.time_ = 0
		arg_530_1.frameCnt_ = 0
		arg_530_1.state_ = "playing"
		arg_530_1.curTalkId_ = 417161128
		arg_530_1.duration_ = 2.6

		local var_530_0 = {
			zh = 1.3,
			ja = 2.6
		}
		local var_530_1 = manager.audio:GetLocalizationFlag()

		if var_530_0[var_530_1] ~= nil then
			arg_530_1.duration_ = var_530_0[var_530_1]
		end

		SetActive(arg_530_1.tipsGo_, false)

		function arg_530_1.onSingleLineFinish_()
			arg_530_1.onSingleLineUpdate_ = nil
			arg_530_1.onSingleLineFinish_ = nil
			arg_530_1.state_ = "waiting"
		end

		function arg_530_1.playNext_(arg_532_0)
			if arg_532_0 == 1 then
				arg_530_0:Play417161129(arg_530_1)
			end
		end

		function arg_530_1.onSingleLineUpdate_(arg_533_0)
			local var_533_0 = arg_530_1.actors_["10128"]
			local var_533_1 = 0

			if var_533_1 < arg_530_1.time_ and arg_530_1.time_ <= var_533_1 + arg_533_0 and not isNil(var_533_0) and arg_530_1.var_.actorSpriteComps10128 == nil then
				arg_530_1.var_.actorSpriteComps10128 = var_533_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_533_2 = 0.2

			if var_533_1 <= arg_530_1.time_ and arg_530_1.time_ < var_533_1 + var_533_2 and not isNil(var_533_0) then
				local var_533_3 = (arg_530_1.time_ - var_533_1) / var_533_2

				if arg_530_1.var_.actorSpriteComps10128 then
					for iter_533_0, iter_533_1 in pairs(arg_530_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_533_1 then
							if arg_530_1.isInRecall_ then
								local var_533_4 = Mathf.Lerp(iter_533_1.color.r, arg_530_1.hightColor1.r, var_533_3)
								local var_533_5 = Mathf.Lerp(iter_533_1.color.g, arg_530_1.hightColor1.g, var_533_3)
								local var_533_6 = Mathf.Lerp(iter_533_1.color.b, arg_530_1.hightColor1.b, var_533_3)

								iter_533_1.color = Color.New(var_533_4, var_533_5, var_533_6)
							else
								local var_533_7 = Mathf.Lerp(iter_533_1.color.r, 1, var_533_3)

								iter_533_1.color = Color.New(var_533_7, var_533_7, var_533_7)
							end
						end
					end
				end
			end

			if arg_530_1.time_ >= var_533_1 + var_533_2 and arg_530_1.time_ < var_533_1 + var_533_2 + arg_533_0 and not isNil(var_533_0) and arg_530_1.var_.actorSpriteComps10128 then
				for iter_533_2, iter_533_3 in pairs(arg_530_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_533_3 then
						if arg_530_1.isInRecall_ then
							iter_533_3.color = arg_530_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_533_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_530_1.var_.actorSpriteComps10128 = nil
			end

			local var_533_8 = arg_530_1.actors_["10128"].transform
			local var_533_9 = 0

			if var_533_9 < arg_530_1.time_ and arg_530_1.time_ <= var_533_9 + arg_533_0 then
				arg_530_1.var_.moveOldPos10128 = var_533_8.localPosition
				var_533_8.localScale = Vector3.New(1, 1, 1)

				arg_530_1:CheckSpriteTmpPos("10128", 3)

				local var_533_10 = var_533_8.childCount

				for iter_533_4 = 0, var_533_10 - 1 do
					local var_533_11 = var_533_8:GetChild(iter_533_4)

					if var_533_11.name == "" or not string.find(var_533_11.name, "split") then
						var_533_11.gameObject:SetActive(true)
					else
						var_533_11.gameObject:SetActive(false)
					end
				end
			end

			local var_533_12 = 0.001

			if var_533_9 <= arg_530_1.time_ and arg_530_1.time_ < var_533_9 + var_533_12 then
				local var_533_13 = (arg_530_1.time_ - var_533_9) / var_533_12
				local var_533_14 = Vector3.New(0, -347, -300)

				var_533_8.localPosition = Vector3.Lerp(arg_530_1.var_.moveOldPos10128, var_533_14, var_533_13)
			end

			if arg_530_1.time_ >= var_533_9 + var_533_12 and arg_530_1.time_ < var_533_9 + var_533_12 + arg_533_0 then
				var_533_8.localPosition = Vector3.New(0, -347, -300)
			end

			local var_533_15 = 0
			local var_533_16 = 0.1

			if var_533_15 < arg_530_1.time_ and arg_530_1.time_ <= var_533_15 + arg_533_0 then
				arg_530_1.talkMaxDuration = 0
				arg_530_1.dialogCg_.alpha = 1

				arg_530_1.dialog_:SetActive(true)
				SetActive(arg_530_1.leftNameGo_, true)

				local var_533_17 = arg_530_1:FormatText(StoryNameCfg[595].name)

				arg_530_1.leftNameTxt_.text = var_533_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_530_1.leftNameTxt_.transform)

				arg_530_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_530_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_530_1:RecordName(arg_530_1.leftNameTxt_.text)
				SetActive(arg_530_1.iconTrs_.gameObject, false)
				arg_530_1.callingController_:SetSelectedState("normal")

				local var_533_18 = arg_530_1:GetWordFromCfg(417161128)
				local var_533_19 = arg_530_1:FormatText(var_533_18.content)

				arg_530_1.text_.text = var_533_19

				LuaForUtil.ClearLinePrefixSymbol(arg_530_1.text_)

				local var_533_20 = 4
				local var_533_21 = utf8.len(var_533_19)
				local var_533_22 = var_533_20 <= 0 and var_533_16 or var_533_16 * (var_533_21 / var_533_20)

				if var_533_22 > 0 and var_533_16 < var_533_22 then
					arg_530_1.talkMaxDuration = var_533_22

					if var_533_22 + var_533_15 > arg_530_1.duration_ then
						arg_530_1.duration_ = var_533_22 + var_533_15
					end
				end

				arg_530_1.text_.text = var_533_19
				arg_530_1.typewritter.percent = 0

				arg_530_1.typewritter:SetDirty()
				arg_530_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161128", "story_v_out_417161.awb") ~= 0 then
					local var_533_23 = manager.audio:GetVoiceLength("story_v_out_417161", "417161128", "story_v_out_417161.awb") / 1000

					if var_533_23 + var_533_15 > arg_530_1.duration_ then
						arg_530_1.duration_ = var_533_23 + var_533_15
					end

					if var_533_18.prefab_name ~= "" and arg_530_1.actors_[var_533_18.prefab_name] ~= nil then
						local var_533_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_530_1.actors_[var_533_18.prefab_name].transform, "story_v_out_417161", "417161128", "story_v_out_417161.awb")

						arg_530_1:RecordAudio("417161128", var_533_24)
						arg_530_1:RecordAudio("417161128", var_533_24)
					else
						arg_530_1:AudioAction("play", "voice", "story_v_out_417161", "417161128", "story_v_out_417161.awb")
					end

					arg_530_1:RecordHistoryTalkVoice("story_v_out_417161", "417161128", "story_v_out_417161.awb")
				end

				arg_530_1:RecordContent(arg_530_1.text_.text)
			end

			local var_533_25 = math.max(var_533_16, arg_530_1.talkMaxDuration)

			if var_533_15 <= arg_530_1.time_ and arg_530_1.time_ < var_533_15 + var_533_25 then
				arg_530_1.typewritter.percent = (arg_530_1.time_ - var_533_15) / var_533_25

				arg_530_1.typewritter:SetDirty()
			end

			if arg_530_1.time_ >= var_533_15 + var_533_25 and arg_530_1.time_ < var_533_15 + var_533_25 + arg_533_0 then
				arg_530_1.typewritter.percent = 1

				arg_530_1.typewritter:SetDirty()
				arg_530_1:ShowNextGo(true)
			end
		end
	end,
	Play417161129 = function(arg_534_0, arg_534_1)
		arg_534_1.time_ = 0
		arg_534_1.frameCnt_ = 0
		arg_534_1.state_ = "playing"
		arg_534_1.curTalkId_ = 417161129
		arg_534_1.duration_ = 4.93

		local var_534_0 = {
			zh = 4.933,
			ja = 4.6
		}
		local var_534_1 = manager.audio:GetLocalizationFlag()

		if var_534_0[var_534_1] ~= nil then
			arg_534_1.duration_ = var_534_0[var_534_1]
		end

		SetActive(arg_534_1.tipsGo_, false)

		function arg_534_1.onSingleLineFinish_()
			arg_534_1.onSingleLineUpdate_ = nil
			arg_534_1.onSingleLineFinish_ = nil
			arg_534_1.state_ = "waiting"
		end

		function arg_534_1.playNext_(arg_536_0)
			if arg_536_0 == 1 then
				arg_534_0:Play417161130(arg_534_1)
			end
		end

		function arg_534_1.onSingleLineUpdate_(arg_537_0)
			local var_537_0 = "10111"

			if arg_534_1.actors_[var_537_0] == nil then
				local var_537_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10111")

				if not isNil(var_537_1) then
					local var_537_2 = Object.Instantiate(var_537_1, arg_534_1.canvasGo_.transform)

					var_537_2.transform:SetSiblingIndex(1)

					var_537_2.name = var_537_0
					var_537_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_534_1.actors_[var_537_0] = var_537_2

					local var_537_3 = var_537_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_534_1.isInRecall_ then
						for iter_537_0, iter_537_1 in ipairs(var_537_3) do
							iter_537_1.color = arg_534_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_537_4 = arg_534_1.actors_["10111"]
			local var_537_5 = 0

			if var_537_5 < arg_534_1.time_ and arg_534_1.time_ <= var_537_5 + arg_537_0 and not isNil(var_537_4) and arg_534_1.var_.actorSpriteComps10111 == nil then
				arg_534_1.var_.actorSpriteComps10111 = var_537_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_537_6 = 0.2

			if var_537_5 <= arg_534_1.time_ and arg_534_1.time_ < var_537_5 + var_537_6 and not isNil(var_537_4) then
				local var_537_7 = (arg_534_1.time_ - var_537_5) / var_537_6

				if arg_534_1.var_.actorSpriteComps10111 then
					for iter_537_2, iter_537_3 in pairs(arg_534_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_537_3 then
							if arg_534_1.isInRecall_ then
								local var_537_8 = Mathf.Lerp(iter_537_3.color.r, arg_534_1.hightColor1.r, var_537_7)
								local var_537_9 = Mathf.Lerp(iter_537_3.color.g, arg_534_1.hightColor1.g, var_537_7)
								local var_537_10 = Mathf.Lerp(iter_537_3.color.b, arg_534_1.hightColor1.b, var_537_7)

								iter_537_3.color = Color.New(var_537_8, var_537_9, var_537_10)
							else
								local var_537_11 = Mathf.Lerp(iter_537_3.color.r, 1, var_537_7)

								iter_537_3.color = Color.New(var_537_11, var_537_11, var_537_11)
							end
						end
					end
				end
			end

			if arg_534_1.time_ >= var_537_5 + var_537_6 and arg_534_1.time_ < var_537_5 + var_537_6 + arg_537_0 and not isNil(var_537_4) and arg_534_1.var_.actorSpriteComps10111 then
				for iter_537_4, iter_537_5 in pairs(arg_534_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_537_5 then
						if arg_534_1.isInRecall_ then
							iter_537_5.color = arg_534_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_537_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_534_1.var_.actorSpriteComps10111 = nil
			end

			local var_537_12 = arg_534_1.actors_["10128"]
			local var_537_13 = 0

			if var_537_13 < arg_534_1.time_ and arg_534_1.time_ <= var_537_13 + arg_537_0 and not isNil(var_537_12) and arg_534_1.var_.actorSpriteComps10128 == nil then
				arg_534_1.var_.actorSpriteComps10128 = var_537_12:GetComponentsInChildren(typeof(Image), true)
			end

			local var_537_14 = 0.2

			if var_537_13 <= arg_534_1.time_ and arg_534_1.time_ < var_537_13 + var_537_14 and not isNil(var_537_12) then
				local var_537_15 = (arg_534_1.time_ - var_537_13) / var_537_14

				if arg_534_1.var_.actorSpriteComps10128 then
					for iter_537_6, iter_537_7 in pairs(arg_534_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_537_7 then
							if arg_534_1.isInRecall_ then
								local var_537_16 = Mathf.Lerp(iter_537_7.color.r, arg_534_1.hightColor2.r, var_537_15)
								local var_537_17 = Mathf.Lerp(iter_537_7.color.g, arg_534_1.hightColor2.g, var_537_15)
								local var_537_18 = Mathf.Lerp(iter_537_7.color.b, arg_534_1.hightColor2.b, var_537_15)

								iter_537_7.color = Color.New(var_537_16, var_537_17, var_537_18)
							else
								local var_537_19 = Mathf.Lerp(iter_537_7.color.r, 0.5, var_537_15)

								iter_537_7.color = Color.New(var_537_19, var_537_19, var_537_19)
							end
						end
					end
				end
			end

			if arg_534_1.time_ >= var_537_13 + var_537_14 and arg_534_1.time_ < var_537_13 + var_537_14 + arg_537_0 and not isNil(var_537_12) and arg_534_1.var_.actorSpriteComps10128 then
				for iter_537_8, iter_537_9 in pairs(arg_534_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_537_9 then
						if arg_534_1.isInRecall_ then
							iter_537_9.color = arg_534_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_537_9.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_534_1.var_.actorSpriteComps10128 = nil
			end

			local var_537_20 = arg_534_1.actors_["10128"].transform
			local var_537_21 = 0

			if var_537_21 < arg_534_1.time_ and arg_534_1.time_ <= var_537_21 + arg_537_0 then
				arg_534_1.var_.moveOldPos10128 = var_537_20.localPosition
				var_537_20.localScale = Vector3.New(1, 1, 1)

				arg_534_1:CheckSpriteTmpPos("10128", 2)

				local var_537_22 = var_537_20.childCount

				for iter_537_10 = 0, var_537_22 - 1 do
					local var_537_23 = var_537_20:GetChild(iter_537_10)

					if var_537_23.name == "" or not string.find(var_537_23.name, "split") then
						var_537_23.gameObject:SetActive(true)
					else
						var_537_23.gameObject:SetActive(false)
					end
				end
			end

			local var_537_24 = 0.001

			if var_537_21 <= arg_534_1.time_ and arg_534_1.time_ < var_537_21 + var_537_24 then
				local var_537_25 = (arg_534_1.time_ - var_537_21) / var_537_24
				local var_537_26 = Vector3.New(-390, -347, -300)

				var_537_20.localPosition = Vector3.Lerp(arg_534_1.var_.moveOldPos10128, var_537_26, var_537_25)
			end

			if arg_534_1.time_ >= var_537_21 + var_537_24 and arg_534_1.time_ < var_537_21 + var_537_24 + arg_537_0 then
				var_537_20.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_537_27 = arg_534_1.actors_["10111"].transform
			local var_537_28 = 0

			if var_537_28 < arg_534_1.time_ and arg_534_1.time_ <= var_537_28 + arg_537_0 then
				arg_534_1.var_.moveOldPos10111 = var_537_27.localPosition
				var_537_27.localScale = Vector3.New(1, 1, 1)

				arg_534_1:CheckSpriteTmpPos("10111", 4)

				local var_537_29 = var_537_27.childCount

				for iter_537_11 = 0, var_537_29 - 1 do
					local var_537_30 = var_537_27:GetChild(iter_537_11)

					if var_537_30.name == "" or not string.find(var_537_30.name, "split") then
						var_537_30.gameObject:SetActive(true)
					else
						var_537_30.gameObject:SetActive(false)
					end
				end
			end

			local var_537_31 = 0.001

			if var_537_28 <= arg_534_1.time_ and arg_534_1.time_ < var_537_28 + var_537_31 then
				local var_537_32 = (arg_534_1.time_ - var_537_28) / var_537_31
				local var_537_33 = Vector3.New(390, -361.1, -274.6)

				var_537_27.localPosition = Vector3.Lerp(arg_534_1.var_.moveOldPos10111, var_537_33, var_537_32)
			end

			if arg_534_1.time_ >= var_537_28 + var_537_31 and arg_534_1.time_ < var_537_28 + var_537_31 + arg_537_0 then
				var_537_27.localPosition = Vector3.New(390, -361.1, -274.6)
			end

			local var_537_34 = 0
			local var_537_35 = 0.525

			if var_537_34 < arg_534_1.time_ and arg_534_1.time_ <= var_537_34 + arg_537_0 then
				arg_534_1.talkMaxDuration = 0
				arg_534_1.dialogCg_.alpha = 1

				arg_534_1.dialog_:SetActive(true)
				SetActive(arg_534_1.leftNameGo_, true)

				local var_537_36 = arg_534_1:FormatText(StoryNameCfg[1125].name)

				arg_534_1.leftNameTxt_.text = var_537_36

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_534_1.leftNameTxt_.transform)

				arg_534_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_534_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_534_1:RecordName(arg_534_1.leftNameTxt_.text)
				SetActive(arg_534_1.iconTrs_.gameObject, false)
				arg_534_1.callingController_:SetSelectedState("normal")

				local var_537_37 = arg_534_1:GetWordFromCfg(417161129)
				local var_537_38 = arg_534_1:FormatText(var_537_37.content)

				arg_534_1.text_.text = var_537_38

				LuaForUtil.ClearLinePrefixSymbol(arg_534_1.text_)

				local var_537_39 = 21
				local var_537_40 = utf8.len(var_537_38)
				local var_537_41 = var_537_39 <= 0 and var_537_35 or var_537_35 * (var_537_40 / var_537_39)

				if var_537_41 > 0 and var_537_35 < var_537_41 then
					arg_534_1.talkMaxDuration = var_537_41

					if var_537_41 + var_537_34 > arg_534_1.duration_ then
						arg_534_1.duration_ = var_537_41 + var_537_34
					end
				end

				arg_534_1.text_.text = var_537_38
				arg_534_1.typewritter.percent = 0

				arg_534_1.typewritter:SetDirty()
				arg_534_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161129", "story_v_out_417161.awb") ~= 0 then
					local var_537_42 = manager.audio:GetVoiceLength("story_v_out_417161", "417161129", "story_v_out_417161.awb") / 1000

					if var_537_42 + var_537_34 > arg_534_1.duration_ then
						arg_534_1.duration_ = var_537_42 + var_537_34
					end

					if var_537_37.prefab_name ~= "" and arg_534_1.actors_[var_537_37.prefab_name] ~= nil then
						local var_537_43 = LuaForUtil.PlayVoiceWithCriLipsync(arg_534_1.actors_[var_537_37.prefab_name].transform, "story_v_out_417161", "417161129", "story_v_out_417161.awb")

						arg_534_1:RecordAudio("417161129", var_537_43)
						arg_534_1:RecordAudio("417161129", var_537_43)
					else
						arg_534_1:AudioAction("play", "voice", "story_v_out_417161", "417161129", "story_v_out_417161.awb")
					end

					arg_534_1:RecordHistoryTalkVoice("story_v_out_417161", "417161129", "story_v_out_417161.awb")
				end

				arg_534_1:RecordContent(arg_534_1.text_.text)
			end

			local var_537_44 = math.max(var_537_35, arg_534_1.talkMaxDuration)

			if var_537_34 <= arg_534_1.time_ and arg_534_1.time_ < var_537_34 + var_537_44 then
				arg_534_1.typewritter.percent = (arg_534_1.time_ - var_537_34) / var_537_44

				arg_534_1.typewritter:SetDirty()
			end

			if arg_534_1.time_ >= var_537_34 + var_537_44 and arg_534_1.time_ < var_537_34 + var_537_44 + arg_537_0 then
				arg_534_1.typewritter.percent = 1

				arg_534_1.typewritter:SetDirty()
				arg_534_1:ShowNextGo(true)
			end
		end
	end,
	Play417161130 = function(arg_538_0, arg_538_1)
		arg_538_1.time_ = 0
		arg_538_1.frameCnt_ = 0
		arg_538_1.state_ = "playing"
		arg_538_1.curTalkId_ = 417161130
		arg_538_1.duration_ = 3.2

		local var_538_0 = {
			zh = 2.566,
			ja = 3.2
		}
		local var_538_1 = manager.audio:GetLocalizationFlag()

		if var_538_0[var_538_1] ~= nil then
			arg_538_1.duration_ = var_538_0[var_538_1]
		end

		SetActive(arg_538_1.tipsGo_, false)

		function arg_538_1.onSingleLineFinish_()
			arg_538_1.onSingleLineUpdate_ = nil
			arg_538_1.onSingleLineFinish_ = nil
			arg_538_1.state_ = "waiting"
		end

		function arg_538_1.playNext_(arg_540_0)
			if arg_540_0 == 1 then
				arg_538_0:Play417161131(arg_538_1)
			end
		end

		function arg_538_1.onSingleLineUpdate_(arg_541_0)
			local var_541_0 = arg_538_1.actors_["10128"]
			local var_541_1 = 0

			if var_541_1 < arg_538_1.time_ and arg_538_1.time_ <= var_541_1 + arg_541_0 and not isNil(var_541_0) and arg_538_1.var_.actorSpriteComps10128 == nil then
				arg_538_1.var_.actorSpriteComps10128 = var_541_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_541_2 = 0.2

			if var_541_1 <= arg_538_1.time_ and arg_538_1.time_ < var_541_1 + var_541_2 and not isNil(var_541_0) then
				local var_541_3 = (arg_538_1.time_ - var_541_1) / var_541_2

				if arg_538_1.var_.actorSpriteComps10128 then
					for iter_541_0, iter_541_1 in pairs(arg_538_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_541_1 then
							if arg_538_1.isInRecall_ then
								local var_541_4 = Mathf.Lerp(iter_541_1.color.r, arg_538_1.hightColor1.r, var_541_3)
								local var_541_5 = Mathf.Lerp(iter_541_1.color.g, arg_538_1.hightColor1.g, var_541_3)
								local var_541_6 = Mathf.Lerp(iter_541_1.color.b, arg_538_1.hightColor1.b, var_541_3)

								iter_541_1.color = Color.New(var_541_4, var_541_5, var_541_6)
							else
								local var_541_7 = Mathf.Lerp(iter_541_1.color.r, 1, var_541_3)

								iter_541_1.color = Color.New(var_541_7, var_541_7, var_541_7)
							end
						end
					end
				end
			end

			if arg_538_1.time_ >= var_541_1 + var_541_2 and arg_538_1.time_ < var_541_1 + var_541_2 + arg_541_0 and not isNil(var_541_0) and arg_538_1.var_.actorSpriteComps10128 then
				for iter_541_2, iter_541_3 in pairs(arg_538_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_541_3 then
						if arg_538_1.isInRecall_ then
							iter_541_3.color = arg_538_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_541_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_538_1.var_.actorSpriteComps10128 = nil
			end

			local var_541_8 = arg_538_1.actors_["10111"]
			local var_541_9 = 0

			if var_541_9 < arg_538_1.time_ and arg_538_1.time_ <= var_541_9 + arg_541_0 and not isNil(var_541_8) and arg_538_1.var_.actorSpriteComps10111 == nil then
				arg_538_1.var_.actorSpriteComps10111 = var_541_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_541_10 = 0.2

			if var_541_9 <= arg_538_1.time_ and arg_538_1.time_ < var_541_9 + var_541_10 and not isNil(var_541_8) then
				local var_541_11 = (arg_538_1.time_ - var_541_9) / var_541_10

				if arg_538_1.var_.actorSpriteComps10111 then
					for iter_541_4, iter_541_5 in pairs(arg_538_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_541_5 then
							if arg_538_1.isInRecall_ then
								local var_541_12 = Mathf.Lerp(iter_541_5.color.r, arg_538_1.hightColor2.r, var_541_11)
								local var_541_13 = Mathf.Lerp(iter_541_5.color.g, arg_538_1.hightColor2.g, var_541_11)
								local var_541_14 = Mathf.Lerp(iter_541_5.color.b, arg_538_1.hightColor2.b, var_541_11)

								iter_541_5.color = Color.New(var_541_12, var_541_13, var_541_14)
							else
								local var_541_15 = Mathf.Lerp(iter_541_5.color.r, 0.5, var_541_11)

								iter_541_5.color = Color.New(var_541_15, var_541_15, var_541_15)
							end
						end
					end
				end
			end

			if arg_538_1.time_ >= var_541_9 + var_541_10 and arg_538_1.time_ < var_541_9 + var_541_10 + arg_541_0 and not isNil(var_541_8) and arg_538_1.var_.actorSpriteComps10111 then
				for iter_541_6, iter_541_7 in pairs(arg_538_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_541_7 then
						if arg_538_1.isInRecall_ then
							iter_541_7.color = arg_538_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_541_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_538_1.var_.actorSpriteComps10111 = nil
			end

			local var_541_16 = arg_538_1.actors_["10128"].transform
			local var_541_17 = 0

			if var_541_17 < arg_538_1.time_ and arg_538_1.time_ <= var_541_17 + arg_541_0 then
				arg_538_1.var_.moveOldPos10128 = var_541_16.localPosition
				var_541_16.localScale = Vector3.New(1, 1, 1)

				arg_538_1:CheckSpriteTmpPos("10128", 2)

				local var_541_18 = var_541_16.childCount

				for iter_541_8 = 0, var_541_18 - 1 do
					local var_541_19 = var_541_16:GetChild(iter_541_8)

					if var_541_19.name == "split_5" or not string.find(var_541_19.name, "split") then
						var_541_19.gameObject:SetActive(true)
					else
						var_541_19.gameObject:SetActive(false)
					end
				end
			end

			local var_541_20 = 0.001

			if var_541_17 <= arg_538_1.time_ and arg_538_1.time_ < var_541_17 + var_541_20 then
				local var_541_21 = (arg_538_1.time_ - var_541_17) / var_541_20
				local var_541_22 = Vector3.New(-390, -347, -300)

				var_541_16.localPosition = Vector3.Lerp(arg_538_1.var_.moveOldPos10128, var_541_22, var_541_21)
			end

			if arg_538_1.time_ >= var_541_17 + var_541_20 and arg_538_1.time_ < var_541_17 + var_541_20 + arg_541_0 then
				var_541_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_541_23 = 0
			local var_541_24 = 0.25

			if var_541_23 < arg_538_1.time_ and arg_538_1.time_ <= var_541_23 + arg_541_0 then
				arg_538_1.talkMaxDuration = 0
				arg_538_1.dialogCg_.alpha = 1

				arg_538_1.dialog_:SetActive(true)
				SetActive(arg_538_1.leftNameGo_, true)

				local var_541_25 = arg_538_1:FormatText(StoryNameCfg[595].name)

				arg_538_1.leftNameTxt_.text = var_541_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_538_1.leftNameTxt_.transform)

				arg_538_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_538_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_538_1:RecordName(arg_538_1.leftNameTxt_.text)
				SetActive(arg_538_1.iconTrs_.gameObject, false)
				arg_538_1.callingController_:SetSelectedState("normal")

				local var_541_26 = arg_538_1:GetWordFromCfg(417161130)
				local var_541_27 = arg_538_1:FormatText(var_541_26.content)

				arg_538_1.text_.text = var_541_27

				LuaForUtil.ClearLinePrefixSymbol(arg_538_1.text_)

				local var_541_28 = 10
				local var_541_29 = utf8.len(var_541_27)
				local var_541_30 = var_541_28 <= 0 and var_541_24 or var_541_24 * (var_541_29 / var_541_28)

				if var_541_30 > 0 and var_541_24 < var_541_30 then
					arg_538_1.talkMaxDuration = var_541_30

					if var_541_30 + var_541_23 > arg_538_1.duration_ then
						arg_538_1.duration_ = var_541_30 + var_541_23
					end
				end

				arg_538_1.text_.text = var_541_27
				arg_538_1.typewritter.percent = 0

				arg_538_1.typewritter:SetDirty()
				arg_538_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161130", "story_v_out_417161.awb") ~= 0 then
					local var_541_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161130", "story_v_out_417161.awb") / 1000

					if var_541_31 + var_541_23 > arg_538_1.duration_ then
						arg_538_1.duration_ = var_541_31 + var_541_23
					end

					if var_541_26.prefab_name ~= "" and arg_538_1.actors_[var_541_26.prefab_name] ~= nil then
						local var_541_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_538_1.actors_[var_541_26.prefab_name].transform, "story_v_out_417161", "417161130", "story_v_out_417161.awb")

						arg_538_1:RecordAudio("417161130", var_541_32)
						arg_538_1:RecordAudio("417161130", var_541_32)
					else
						arg_538_1:AudioAction("play", "voice", "story_v_out_417161", "417161130", "story_v_out_417161.awb")
					end

					arg_538_1:RecordHistoryTalkVoice("story_v_out_417161", "417161130", "story_v_out_417161.awb")
				end

				arg_538_1:RecordContent(arg_538_1.text_.text)
			end

			local var_541_33 = math.max(var_541_24, arg_538_1.talkMaxDuration)

			if var_541_23 <= arg_538_1.time_ and arg_538_1.time_ < var_541_23 + var_541_33 then
				arg_538_1.typewritter.percent = (arg_538_1.time_ - var_541_23) / var_541_33

				arg_538_1.typewritter:SetDirty()
			end

			if arg_538_1.time_ >= var_541_23 + var_541_33 and arg_538_1.time_ < var_541_23 + var_541_33 + arg_541_0 then
				arg_538_1.typewritter.percent = 1

				arg_538_1.typewritter:SetDirty()
				arg_538_1:ShowNextGo(true)
			end
		end
	end,
	Play417161131 = function(arg_542_0, arg_542_1)
		arg_542_1.time_ = 0
		arg_542_1.frameCnt_ = 0
		arg_542_1.state_ = "playing"
		arg_542_1.curTalkId_ = 417161131
		arg_542_1.duration_ = 9.57

		local var_542_0 = {
			zh = 4.3,
			ja = 9.566
		}
		local var_542_1 = manager.audio:GetLocalizationFlag()

		if var_542_0[var_542_1] ~= nil then
			arg_542_1.duration_ = var_542_0[var_542_1]
		end

		SetActive(arg_542_1.tipsGo_, false)

		function arg_542_1.onSingleLineFinish_()
			arg_542_1.onSingleLineUpdate_ = nil
			arg_542_1.onSingleLineFinish_ = nil
			arg_542_1.state_ = "waiting"
		end

		function arg_542_1.playNext_(arg_544_0)
			if arg_544_0 == 1 then
				arg_542_0:Play417161132(arg_542_1)
			end
		end

		function arg_542_1.onSingleLineUpdate_(arg_545_0)
			local var_545_0 = arg_542_1.actors_["10111"]
			local var_545_1 = 0

			if var_545_1 < arg_542_1.time_ and arg_542_1.time_ <= var_545_1 + arg_545_0 and not isNil(var_545_0) and arg_542_1.var_.actorSpriteComps10111 == nil then
				arg_542_1.var_.actorSpriteComps10111 = var_545_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_545_2 = 0.2

			if var_545_1 <= arg_542_1.time_ and arg_542_1.time_ < var_545_1 + var_545_2 and not isNil(var_545_0) then
				local var_545_3 = (arg_542_1.time_ - var_545_1) / var_545_2

				if arg_542_1.var_.actorSpriteComps10111 then
					for iter_545_0, iter_545_1 in pairs(arg_542_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_545_1 then
							if arg_542_1.isInRecall_ then
								local var_545_4 = Mathf.Lerp(iter_545_1.color.r, arg_542_1.hightColor1.r, var_545_3)
								local var_545_5 = Mathf.Lerp(iter_545_1.color.g, arg_542_1.hightColor1.g, var_545_3)
								local var_545_6 = Mathf.Lerp(iter_545_1.color.b, arg_542_1.hightColor1.b, var_545_3)

								iter_545_1.color = Color.New(var_545_4, var_545_5, var_545_6)
							else
								local var_545_7 = Mathf.Lerp(iter_545_1.color.r, 1, var_545_3)

								iter_545_1.color = Color.New(var_545_7, var_545_7, var_545_7)
							end
						end
					end
				end
			end

			if arg_542_1.time_ >= var_545_1 + var_545_2 and arg_542_1.time_ < var_545_1 + var_545_2 + arg_545_0 and not isNil(var_545_0) and arg_542_1.var_.actorSpriteComps10111 then
				for iter_545_2, iter_545_3 in pairs(arg_542_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_545_3 then
						if arg_542_1.isInRecall_ then
							iter_545_3.color = arg_542_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_545_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_542_1.var_.actorSpriteComps10111 = nil
			end

			local var_545_8 = arg_542_1.actors_["10128"]
			local var_545_9 = 0

			if var_545_9 < arg_542_1.time_ and arg_542_1.time_ <= var_545_9 + arg_545_0 and not isNil(var_545_8) and arg_542_1.var_.actorSpriteComps10128 == nil then
				arg_542_1.var_.actorSpriteComps10128 = var_545_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_545_10 = 0.2

			if var_545_9 <= arg_542_1.time_ and arg_542_1.time_ < var_545_9 + var_545_10 and not isNil(var_545_8) then
				local var_545_11 = (arg_542_1.time_ - var_545_9) / var_545_10

				if arg_542_1.var_.actorSpriteComps10128 then
					for iter_545_4, iter_545_5 in pairs(arg_542_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_545_5 then
							if arg_542_1.isInRecall_ then
								local var_545_12 = Mathf.Lerp(iter_545_5.color.r, arg_542_1.hightColor2.r, var_545_11)
								local var_545_13 = Mathf.Lerp(iter_545_5.color.g, arg_542_1.hightColor2.g, var_545_11)
								local var_545_14 = Mathf.Lerp(iter_545_5.color.b, arg_542_1.hightColor2.b, var_545_11)

								iter_545_5.color = Color.New(var_545_12, var_545_13, var_545_14)
							else
								local var_545_15 = Mathf.Lerp(iter_545_5.color.r, 0.5, var_545_11)

								iter_545_5.color = Color.New(var_545_15, var_545_15, var_545_15)
							end
						end
					end
				end
			end

			if arg_542_1.time_ >= var_545_9 + var_545_10 and arg_542_1.time_ < var_545_9 + var_545_10 + arg_545_0 and not isNil(var_545_8) and arg_542_1.var_.actorSpriteComps10128 then
				for iter_545_6, iter_545_7 in pairs(arg_542_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_545_7 then
						if arg_542_1.isInRecall_ then
							iter_545_7.color = arg_542_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_545_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_542_1.var_.actorSpriteComps10128 = nil
			end

			local var_545_16 = arg_542_1.actors_["10111"].transform
			local var_545_17 = 0

			if var_545_17 < arg_542_1.time_ and arg_542_1.time_ <= var_545_17 + arg_545_0 then
				arg_542_1.var_.moveOldPos10111 = var_545_16.localPosition
				var_545_16.localScale = Vector3.New(1, 1, 1)

				arg_542_1:CheckSpriteTmpPos("10111", 4)

				local var_545_18 = var_545_16.childCount

				for iter_545_8 = 0, var_545_18 - 1 do
					local var_545_19 = var_545_16:GetChild(iter_545_8)

					if var_545_19.name == "split_6" or not string.find(var_545_19.name, "split") then
						var_545_19.gameObject:SetActive(true)
					else
						var_545_19.gameObject:SetActive(false)
					end
				end
			end

			local var_545_20 = 0.001

			if var_545_17 <= arg_542_1.time_ and arg_542_1.time_ < var_545_17 + var_545_20 then
				local var_545_21 = (arg_542_1.time_ - var_545_17) / var_545_20
				local var_545_22 = Vector3.New(390, -361.1, -274.6)

				var_545_16.localPosition = Vector3.Lerp(arg_542_1.var_.moveOldPos10111, var_545_22, var_545_21)
			end

			if arg_542_1.time_ >= var_545_17 + var_545_20 and arg_542_1.time_ < var_545_17 + var_545_20 + arg_545_0 then
				var_545_16.localPosition = Vector3.New(390, -361.1, -274.6)
			end

			local var_545_23 = 0
			local var_545_24 = 0.425

			if var_545_23 < arg_542_1.time_ and arg_542_1.time_ <= var_545_23 + arg_545_0 then
				arg_542_1.talkMaxDuration = 0
				arg_542_1.dialogCg_.alpha = 1

				arg_542_1.dialog_:SetActive(true)
				SetActive(arg_542_1.leftNameGo_, true)

				local var_545_25 = arg_542_1:FormatText(StoryNameCfg[1125].name)

				arg_542_1.leftNameTxt_.text = var_545_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_542_1.leftNameTxt_.transform)

				arg_542_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_542_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_542_1:RecordName(arg_542_1.leftNameTxt_.text)
				SetActive(arg_542_1.iconTrs_.gameObject, false)
				arg_542_1.callingController_:SetSelectedState("normal")

				local var_545_26 = arg_542_1:GetWordFromCfg(417161131)
				local var_545_27 = arg_542_1:FormatText(var_545_26.content)

				arg_542_1.text_.text = var_545_27

				LuaForUtil.ClearLinePrefixSymbol(arg_542_1.text_)

				local var_545_28 = 17
				local var_545_29 = utf8.len(var_545_27)
				local var_545_30 = var_545_28 <= 0 and var_545_24 or var_545_24 * (var_545_29 / var_545_28)

				if var_545_30 > 0 and var_545_24 < var_545_30 then
					arg_542_1.talkMaxDuration = var_545_30

					if var_545_30 + var_545_23 > arg_542_1.duration_ then
						arg_542_1.duration_ = var_545_30 + var_545_23
					end
				end

				arg_542_1.text_.text = var_545_27
				arg_542_1.typewritter.percent = 0

				arg_542_1.typewritter:SetDirty()
				arg_542_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161131", "story_v_out_417161.awb") ~= 0 then
					local var_545_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161131", "story_v_out_417161.awb") / 1000

					if var_545_31 + var_545_23 > arg_542_1.duration_ then
						arg_542_1.duration_ = var_545_31 + var_545_23
					end

					if var_545_26.prefab_name ~= "" and arg_542_1.actors_[var_545_26.prefab_name] ~= nil then
						local var_545_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_542_1.actors_[var_545_26.prefab_name].transform, "story_v_out_417161", "417161131", "story_v_out_417161.awb")

						arg_542_1:RecordAudio("417161131", var_545_32)
						arg_542_1:RecordAudio("417161131", var_545_32)
					else
						arg_542_1:AudioAction("play", "voice", "story_v_out_417161", "417161131", "story_v_out_417161.awb")
					end

					arg_542_1:RecordHistoryTalkVoice("story_v_out_417161", "417161131", "story_v_out_417161.awb")
				end

				arg_542_1:RecordContent(arg_542_1.text_.text)
			end

			local var_545_33 = math.max(var_545_24, arg_542_1.talkMaxDuration)

			if var_545_23 <= arg_542_1.time_ and arg_542_1.time_ < var_545_23 + var_545_33 then
				arg_542_1.typewritter.percent = (arg_542_1.time_ - var_545_23) / var_545_33

				arg_542_1.typewritter:SetDirty()
			end

			if arg_542_1.time_ >= var_545_23 + var_545_33 and arg_542_1.time_ < var_545_23 + var_545_33 + arg_545_0 then
				arg_542_1.typewritter.percent = 1

				arg_542_1.typewritter:SetDirty()
				arg_542_1:ShowNextGo(true)
			end
		end
	end,
	Play417161132 = function(arg_546_0, arg_546_1)
		arg_546_1.time_ = 0
		arg_546_1.frameCnt_ = 0
		arg_546_1.state_ = "playing"
		arg_546_1.curTalkId_ = 417161132
		arg_546_1.duration_ = 11.27

		local var_546_0 = {
			zh = 10.933,
			ja = 11.266
		}
		local var_546_1 = manager.audio:GetLocalizationFlag()

		if var_546_0[var_546_1] ~= nil then
			arg_546_1.duration_ = var_546_0[var_546_1]
		end

		SetActive(arg_546_1.tipsGo_, false)

		function arg_546_1.onSingleLineFinish_()
			arg_546_1.onSingleLineUpdate_ = nil
			arg_546_1.onSingleLineFinish_ = nil
			arg_546_1.state_ = "waiting"
		end

		function arg_546_1.playNext_(arg_548_0)
			if arg_548_0 == 1 then
				arg_546_0:Play417161133(arg_546_1)
			end
		end

		function arg_546_1.onSingleLineUpdate_(arg_549_0)
			local var_549_0 = 0
			local var_549_1 = 1.1

			if var_549_0 < arg_546_1.time_ and arg_546_1.time_ <= var_549_0 + arg_549_0 then
				arg_546_1.talkMaxDuration = 0
				arg_546_1.dialogCg_.alpha = 1

				arg_546_1.dialog_:SetActive(true)
				SetActive(arg_546_1.leftNameGo_, true)

				local var_549_2 = arg_546_1:FormatText(StoryNameCfg[1125].name)

				arg_546_1.leftNameTxt_.text = var_549_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_546_1.leftNameTxt_.transform)

				arg_546_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_546_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_546_1:RecordName(arg_546_1.leftNameTxt_.text)
				SetActive(arg_546_1.iconTrs_.gameObject, false)
				arg_546_1.callingController_:SetSelectedState("normal")

				local var_549_3 = arg_546_1:GetWordFromCfg(417161132)
				local var_549_4 = arg_546_1:FormatText(var_549_3.content)

				arg_546_1.text_.text = var_549_4

				LuaForUtil.ClearLinePrefixSymbol(arg_546_1.text_)

				local var_549_5 = 44
				local var_549_6 = utf8.len(var_549_4)
				local var_549_7 = var_549_5 <= 0 and var_549_1 or var_549_1 * (var_549_6 / var_549_5)

				if var_549_7 > 0 and var_549_1 < var_549_7 then
					arg_546_1.talkMaxDuration = var_549_7

					if var_549_7 + var_549_0 > arg_546_1.duration_ then
						arg_546_1.duration_ = var_549_7 + var_549_0
					end
				end

				arg_546_1.text_.text = var_549_4
				arg_546_1.typewritter.percent = 0

				arg_546_1.typewritter:SetDirty()
				arg_546_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161132", "story_v_out_417161.awb") ~= 0 then
					local var_549_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161132", "story_v_out_417161.awb") / 1000

					if var_549_8 + var_549_0 > arg_546_1.duration_ then
						arg_546_1.duration_ = var_549_8 + var_549_0
					end

					if var_549_3.prefab_name ~= "" and arg_546_1.actors_[var_549_3.prefab_name] ~= nil then
						local var_549_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_546_1.actors_[var_549_3.prefab_name].transform, "story_v_out_417161", "417161132", "story_v_out_417161.awb")

						arg_546_1:RecordAudio("417161132", var_549_9)
						arg_546_1:RecordAudio("417161132", var_549_9)
					else
						arg_546_1:AudioAction("play", "voice", "story_v_out_417161", "417161132", "story_v_out_417161.awb")
					end

					arg_546_1:RecordHistoryTalkVoice("story_v_out_417161", "417161132", "story_v_out_417161.awb")
				end

				arg_546_1:RecordContent(arg_546_1.text_.text)
			end

			local var_549_10 = math.max(var_549_1, arg_546_1.talkMaxDuration)

			if var_549_0 <= arg_546_1.time_ and arg_546_1.time_ < var_549_0 + var_549_10 then
				arg_546_1.typewritter.percent = (arg_546_1.time_ - var_549_0) / var_549_10

				arg_546_1.typewritter:SetDirty()
			end

			if arg_546_1.time_ >= var_549_0 + var_549_10 and arg_546_1.time_ < var_549_0 + var_549_10 + arg_549_0 then
				arg_546_1.typewritter.percent = 1

				arg_546_1.typewritter:SetDirty()
				arg_546_1:ShowNextGo(true)
			end
		end
	end,
	Play417161133 = function(arg_550_0, arg_550_1)
		arg_550_1.time_ = 0
		arg_550_1.frameCnt_ = 0
		arg_550_1.state_ = "playing"
		arg_550_1.curTalkId_ = 417161133
		arg_550_1.duration_ = 1.2

		local var_550_0 = {
			zh = 1.133,
			ja = 1.2
		}
		local var_550_1 = manager.audio:GetLocalizationFlag()

		if var_550_0[var_550_1] ~= nil then
			arg_550_1.duration_ = var_550_0[var_550_1]
		end

		SetActive(arg_550_1.tipsGo_, false)

		function arg_550_1.onSingleLineFinish_()
			arg_550_1.onSingleLineUpdate_ = nil
			arg_550_1.onSingleLineFinish_ = nil
			arg_550_1.state_ = "waiting"
		end

		function arg_550_1.playNext_(arg_552_0)
			if arg_552_0 == 1 then
				arg_550_0:Play417161134(arg_550_1)
			end
		end

		function arg_550_1.onSingleLineUpdate_(arg_553_0)
			local var_553_0 = arg_550_1.actors_["10128"]
			local var_553_1 = 0

			if var_553_1 < arg_550_1.time_ and arg_550_1.time_ <= var_553_1 + arg_553_0 and not isNil(var_553_0) and arg_550_1.var_.actorSpriteComps10128 == nil then
				arg_550_1.var_.actorSpriteComps10128 = var_553_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_553_2 = 0.2

			if var_553_1 <= arg_550_1.time_ and arg_550_1.time_ < var_553_1 + var_553_2 and not isNil(var_553_0) then
				local var_553_3 = (arg_550_1.time_ - var_553_1) / var_553_2

				if arg_550_1.var_.actorSpriteComps10128 then
					for iter_553_0, iter_553_1 in pairs(arg_550_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_553_1 then
							if arg_550_1.isInRecall_ then
								local var_553_4 = Mathf.Lerp(iter_553_1.color.r, arg_550_1.hightColor1.r, var_553_3)
								local var_553_5 = Mathf.Lerp(iter_553_1.color.g, arg_550_1.hightColor1.g, var_553_3)
								local var_553_6 = Mathf.Lerp(iter_553_1.color.b, arg_550_1.hightColor1.b, var_553_3)

								iter_553_1.color = Color.New(var_553_4, var_553_5, var_553_6)
							else
								local var_553_7 = Mathf.Lerp(iter_553_1.color.r, 1, var_553_3)

								iter_553_1.color = Color.New(var_553_7, var_553_7, var_553_7)
							end
						end
					end
				end
			end

			if arg_550_1.time_ >= var_553_1 + var_553_2 and arg_550_1.time_ < var_553_1 + var_553_2 + arg_553_0 and not isNil(var_553_0) and arg_550_1.var_.actorSpriteComps10128 then
				for iter_553_2, iter_553_3 in pairs(arg_550_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_553_3 then
						if arg_550_1.isInRecall_ then
							iter_553_3.color = arg_550_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_553_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_550_1.var_.actorSpriteComps10128 = nil
			end

			local var_553_8 = arg_550_1.actors_["10111"]
			local var_553_9 = 0

			if var_553_9 < arg_550_1.time_ and arg_550_1.time_ <= var_553_9 + arg_553_0 and not isNil(var_553_8) and arg_550_1.var_.actorSpriteComps10111 == nil then
				arg_550_1.var_.actorSpriteComps10111 = var_553_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_553_10 = 0.2

			if var_553_9 <= arg_550_1.time_ and arg_550_1.time_ < var_553_9 + var_553_10 and not isNil(var_553_8) then
				local var_553_11 = (arg_550_1.time_ - var_553_9) / var_553_10

				if arg_550_1.var_.actorSpriteComps10111 then
					for iter_553_4, iter_553_5 in pairs(arg_550_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_553_5 then
							if arg_550_1.isInRecall_ then
								local var_553_12 = Mathf.Lerp(iter_553_5.color.r, arg_550_1.hightColor2.r, var_553_11)
								local var_553_13 = Mathf.Lerp(iter_553_5.color.g, arg_550_1.hightColor2.g, var_553_11)
								local var_553_14 = Mathf.Lerp(iter_553_5.color.b, arg_550_1.hightColor2.b, var_553_11)

								iter_553_5.color = Color.New(var_553_12, var_553_13, var_553_14)
							else
								local var_553_15 = Mathf.Lerp(iter_553_5.color.r, 0.5, var_553_11)

								iter_553_5.color = Color.New(var_553_15, var_553_15, var_553_15)
							end
						end
					end
				end
			end

			if arg_550_1.time_ >= var_553_9 + var_553_10 and arg_550_1.time_ < var_553_9 + var_553_10 + arg_553_0 and not isNil(var_553_8) and arg_550_1.var_.actorSpriteComps10111 then
				for iter_553_6, iter_553_7 in pairs(arg_550_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_553_7 then
						if arg_550_1.isInRecall_ then
							iter_553_7.color = arg_550_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_553_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_550_1.var_.actorSpriteComps10111 = nil
			end

			local var_553_16 = 0
			local var_553_17 = 0.15

			if var_553_16 < arg_550_1.time_ and arg_550_1.time_ <= var_553_16 + arg_553_0 then
				arg_550_1.talkMaxDuration = 0
				arg_550_1.dialogCg_.alpha = 1

				arg_550_1.dialog_:SetActive(true)
				SetActive(arg_550_1.leftNameGo_, true)

				local var_553_18 = arg_550_1:FormatText(StoryNameCfg[595].name)

				arg_550_1.leftNameTxt_.text = var_553_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_550_1.leftNameTxt_.transform)

				arg_550_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_550_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_550_1:RecordName(arg_550_1.leftNameTxt_.text)
				SetActive(arg_550_1.iconTrs_.gameObject, false)
				arg_550_1.callingController_:SetSelectedState("normal")

				local var_553_19 = arg_550_1:GetWordFromCfg(417161133)
				local var_553_20 = arg_550_1:FormatText(var_553_19.content)

				arg_550_1.text_.text = var_553_20

				LuaForUtil.ClearLinePrefixSymbol(arg_550_1.text_)

				local var_553_21 = 6
				local var_553_22 = utf8.len(var_553_20)
				local var_553_23 = var_553_21 <= 0 and var_553_17 or var_553_17 * (var_553_22 / var_553_21)

				if var_553_23 > 0 and var_553_17 < var_553_23 then
					arg_550_1.talkMaxDuration = var_553_23

					if var_553_23 + var_553_16 > arg_550_1.duration_ then
						arg_550_1.duration_ = var_553_23 + var_553_16
					end
				end

				arg_550_1.text_.text = var_553_20
				arg_550_1.typewritter.percent = 0

				arg_550_1.typewritter:SetDirty()
				arg_550_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161133", "story_v_out_417161.awb") ~= 0 then
					local var_553_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161133", "story_v_out_417161.awb") / 1000

					if var_553_24 + var_553_16 > arg_550_1.duration_ then
						arg_550_1.duration_ = var_553_24 + var_553_16
					end

					if var_553_19.prefab_name ~= "" and arg_550_1.actors_[var_553_19.prefab_name] ~= nil then
						local var_553_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_550_1.actors_[var_553_19.prefab_name].transform, "story_v_out_417161", "417161133", "story_v_out_417161.awb")

						arg_550_1:RecordAudio("417161133", var_553_25)
						arg_550_1:RecordAudio("417161133", var_553_25)
					else
						arg_550_1:AudioAction("play", "voice", "story_v_out_417161", "417161133", "story_v_out_417161.awb")
					end

					arg_550_1:RecordHistoryTalkVoice("story_v_out_417161", "417161133", "story_v_out_417161.awb")
				end

				arg_550_1:RecordContent(arg_550_1.text_.text)
			end

			local var_553_26 = math.max(var_553_17, arg_550_1.talkMaxDuration)

			if var_553_16 <= arg_550_1.time_ and arg_550_1.time_ < var_553_16 + var_553_26 then
				arg_550_1.typewritter.percent = (arg_550_1.time_ - var_553_16) / var_553_26

				arg_550_1.typewritter:SetDirty()
			end

			if arg_550_1.time_ >= var_553_16 + var_553_26 and arg_550_1.time_ < var_553_16 + var_553_26 + arg_553_0 then
				arg_550_1.typewritter.percent = 1

				arg_550_1.typewritter:SetDirty()
				arg_550_1:ShowNextGo(true)
			end
		end
	end,
	Play417161134 = function(arg_554_0, arg_554_1)
		arg_554_1.time_ = 0
		arg_554_1.frameCnt_ = 0
		arg_554_1.state_ = "playing"
		arg_554_1.curTalkId_ = 417161134
		arg_554_1.duration_ = 7.9

		local var_554_0 = {
			zh = 5.633,
			ja = 7.9
		}
		local var_554_1 = manager.audio:GetLocalizationFlag()

		if var_554_0[var_554_1] ~= nil then
			arg_554_1.duration_ = var_554_0[var_554_1]
		end

		SetActive(arg_554_1.tipsGo_, false)

		function arg_554_1.onSingleLineFinish_()
			arg_554_1.onSingleLineUpdate_ = nil
			arg_554_1.onSingleLineFinish_ = nil
			arg_554_1.state_ = "waiting"
		end

		function arg_554_1.playNext_(arg_556_0)
			if arg_556_0 == 1 then
				arg_554_0:Play417161135(arg_554_1)
			end
		end

		function arg_554_1.onSingleLineUpdate_(arg_557_0)
			local var_557_0 = arg_554_1.actors_["10111"]
			local var_557_1 = 0

			if var_557_1 < arg_554_1.time_ and arg_554_1.time_ <= var_557_1 + arg_557_0 and not isNil(var_557_0) and arg_554_1.var_.actorSpriteComps10111 == nil then
				arg_554_1.var_.actorSpriteComps10111 = var_557_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_557_2 = 0.2

			if var_557_1 <= arg_554_1.time_ and arg_554_1.time_ < var_557_1 + var_557_2 and not isNil(var_557_0) then
				local var_557_3 = (arg_554_1.time_ - var_557_1) / var_557_2

				if arg_554_1.var_.actorSpriteComps10111 then
					for iter_557_0, iter_557_1 in pairs(arg_554_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_557_1 then
							if arg_554_1.isInRecall_ then
								local var_557_4 = Mathf.Lerp(iter_557_1.color.r, arg_554_1.hightColor1.r, var_557_3)
								local var_557_5 = Mathf.Lerp(iter_557_1.color.g, arg_554_1.hightColor1.g, var_557_3)
								local var_557_6 = Mathf.Lerp(iter_557_1.color.b, arg_554_1.hightColor1.b, var_557_3)

								iter_557_1.color = Color.New(var_557_4, var_557_5, var_557_6)
							else
								local var_557_7 = Mathf.Lerp(iter_557_1.color.r, 1, var_557_3)

								iter_557_1.color = Color.New(var_557_7, var_557_7, var_557_7)
							end
						end
					end
				end
			end

			if arg_554_1.time_ >= var_557_1 + var_557_2 and arg_554_1.time_ < var_557_1 + var_557_2 + arg_557_0 and not isNil(var_557_0) and arg_554_1.var_.actorSpriteComps10111 then
				for iter_557_2, iter_557_3 in pairs(arg_554_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_557_3 then
						if arg_554_1.isInRecall_ then
							iter_557_3.color = arg_554_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_557_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_554_1.var_.actorSpriteComps10111 = nil
			end

			local var_557_8 = arg_554_1.actors_["10128"]
			local var_557_9 = 0

			if var_557_9 < arg_554_1.time_ and arg_554_1.time_ <= var_557_9 + arg_557_0 and not isNil(var_557_8) and arg_554_1.var_.actorSpriteComps10128 == nil then
				arg_554_1.var_.actorSpriteComps10128 = var_557_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_557_10 = 0.2

			if var_557_9 <= arg_554_1.time_ and arg_554_1.time_ < var_557_9 + var_557_10 and not isNil(var_557_8) then
				local var_557_11 = (arg_554_1.time_ - var_557_9) / var_557_10

				if arg_554_1.var_.actorSpriteComps10128 then
					for iter_557_4, iter_557_5 in pairs(arg_554_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_557_5 then
							if arg_554_1.isInRecall_ then
								local var_557_12 = Mathf.Lerp(iter_557_5.color.r, arg_554_1.hightColor2.r, var_557_11)
								local var_557_13 = Mathf.Lerp(iter_557_5.color.g, arg_554_1.hightColor2.g, var_557_11)
								local var_557_14 = Mathf.Lerp(iter_557_5.color.b, arg_554_1.hightColor2.b, var_557_11)

								iter_557_5.color = Color.New(var_557_12, var_557_13, var_557_14)
							else
								local var_557_15 = Mathf.Lerp(iter_557_5.color.r, 0.5, var_557_11)

								iter_557_5.color = Color.New(var_557_15, var_557_15, var_557_15)
							end
						end
					end
				end
			end

			if arg_554_1.time_ >= var_557_9 + var_557_10 and arg_554_1.time_ < var_557_9 + var_557_10 + arg_557_0 and not isNil(var_557_8) and arg_554_1.var_.actorSpriteComps10128 then
				for iter_557_6, iter_557_7 in pairs(arg_554_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_557_7 then
						if arg_554_1.isInRecall_ then
							iter_557_7.color = arg_554_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_557_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_554_1.var_.actorSpriteComps10128 = nil
			end

			local var_557_16 = 0
			local var_557_17 = 0.625

			if var_557_16 < arg_554_1.time_ and arg_554_1.time_ <= var_557_16 + arg_557_0 then
				arg_554_1.talkMaxDuration = 0
				arg_554_1.dialogCg_.alpha = 1

				arg_554_1.dialog_:SetActive(true)
				SetActive(arg_554_1.leftNameGo_, true)

				local var_557_18 = arg_554_1:FormatText(StoryNameCfg[1125].name)

				arg_554_1.leftNameTxt_.text = var_557_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_554_1.leftNameTxt_.transform)

				arg_554_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_554_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_554_1:RecordName(arg_554_1.leftNameTxt_.text)
				SetActive(arg_554_1.iconTrs_.gameObject, false)
				arg_554_1.callingController_:SetSelectedState("normal")

				local var_557_19 = arg_554_1:GetWordFromCfg(417161134)
				local var_557_20 = arg_554_1:FormatText(var_557_19.content)

				arg_554_1.text_.text = var_557_20

				LuaForUtil.ClearLinePrefixSymbol(arg_554_1.text_)

				local var_557_21 = 25
				local var_557_22 = utf8.len(var_557_20)
				local var_557_23 = var_557_21 <= 0 and var_557_17 or var_557_17 * (var_557_22 / var_557_21)

				if var_557_23 > 0 and var_557_17 < var_557_23 then
					arg_554_1.talkMaxDuration = var_557_23

					if var_557_23 + var_557_16 > arg_554_1.duration_ then
						arg_554_1.duration_ = var_557_23 + var_557_16
					end
				end

				arg_554_1.text_.text = var_557_20
				arg_554_1.typewritter.percent = 0

				arg_554_1.typewritter:SetDirty()
				arg_554_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161134", "story_v_out_417161.awb") ~= 0 then
					local var_557_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161134", "story_v_out_417161.awb") / 1000

					if var_557_24 + var_557_16 > arg_554_1.duration_ then
						arg_554_1.duration_ = var_557_24 + var_557_16
					end

					if var_557_19.prefab_name ~= "" and arg_554_1.actors_[var_557_19.prefab_name] ~= nil then
						local var_557_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_554_1.actors_[var_557_19.prefab_name].transform, "story_v_out_417161", "417161134", "story_v_out_417161.awb")

						arg_554_1:RecordAudio("417161134", var_557_25)
						arg_554_1:RecordAudio("417161134", var_557_25)
					else
						arg_554_1:AudioAction("play", "voice", "story_v_out_417161", "417161134", "story_v_out_417161.awb")
					end

					arg_554_1:RecordHistoryTalkVoice("story_v_out_417161", "417161134", "story_v_out_417161.awb")
				end

				arg_554_1:RecordContent(arg_554_1.text_.text)
			end

			local var_557_26 = math.max(var_557_17, arg_554_1.talkMaxDuration)

			if var_557_16 <= arg_554_1.time_ and arg_554_1.time_ < var_557_16 + var_557_26 then
				arg_554_1.typewritter.percent = (arg_554_1.time_ - var_557_16) / var_557_26

				arg_554_1.typewritter:SetDirty()
			end

			if arg_554_1.time_ >= var_557_16 + var_557_26 and arg_554_1.time_ < var_557_16 + var_557_26 + arg_557_0 then
				arg_554_1.typewritter.percent = 1

				arg_554_1.typewritter:SetDirty()
				arg_554_1:ShowNextGo(true)
			end
		end
	end,
	Play417161135 = function(arg_558_0, arg_558_1)
		arg_558_1.time_ = 0
		arg_558_1.frameCnt_ = 0
		arg_558_1.state_ = "playing"
		arg_558_1.curTalkId_ = 417161135
		arg_558_1.duration_ = 2.2

		local var_558_0 = {
			zh = 2.066,
			ja = 2.2
		}
		local var_558_1 = manager.audio:GetLocalizationFlag()

		if var_558_0[var_558_1] ~= nil then
			arg_558_1.duration_ = var_558_0[var_558_1]
		end

		SetActive(arg_558_1.tipsGo_, false)

		function arg_558_1.onSingleLineFinish_()
			arg_558_1.onSingleLineUpdate_ = nil
			arg_558_1.onSingleLineFinish_ = nil
			arg_558_1.state_ = "waiting"
		end

		function arg_558_1.playNext_(arg_560_0)
			if arg_560_0 == 1 then
				arg_558_0:Play417161136(arg_558_1)
			end
		end

		function arg_558_1.onSingleLineUpdate_(arg_561_0)
			local var_561_0 = arg_558_1.actors_["10128"]
			local var_561_1 = 0

			if var_561_1 < arg_558_1.time_ and arg_558_1.time_ <= var_561_1 + arg_561_0 and not isNil(var_561_0) and arg_558_1.var_.actorSpriteComps10128 == nil then
				arg_558_1.var_.actorSpriteComps10128 = var_561_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_561_2 = 0.2

			if var_561_1 <= arg_558_1.time_ and arg_558_1.time_ < var_561_1 + var_561_2 and not isNil(var_561_0) then
				local var_561_3 = (arg_558_1.time_ - var_561_1) / var_561_2

				if arg_558_1.var_.actorSpriteComps10128 then
					for iter_561_0, iter_561_1 in pairs(arg_558_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_561_1 then
							if arg_558_1.isInRecall_ then
								local var_561_4 = Mathf.Lerp(iter_561_1.color.r, arg_558_1.hightColor1.r, var_561_3)
								local var_561_5 = Mathf.Lerp(iter_561_1.color.g, arg_558_1.hightColor1.g, var_561_3)
								local var_561_6 = Mathf.Lerp(iter_561_1.color.b, arg_558_1.hightColor1.b, var_561_3)

								iter_561_1.color = Color.New(var_561_4, var_561_5, var_561_6)
							else
								local var_561_7 = Mathf.Lerp(iter_561_1.color.r, 1, var_561_3)

								iter_561_1.color = Color.New(var_561_7, var_561_7, var_561_7)
							end
						end
					end
				end
			end

			if arg_558_1.time_ >= var_561_1 + var_561_2 and arg_558_1.time_ < var_561_1 + var_561_2 + arg_561_0 and not isNil(var_561_0) and arg_558_1.var_.actorSpriteComps10128 then
				for iter_561_2, iter_561_3 in pairs(arg_558_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_561_3 then
						if arg_558_1.isInRecall_ then
							iter_561_3.color = arg_558_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_561_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_558_1.var_.actorSpriteComps10128 = nil
			end

			local var_561_8 = arg_558_1.actors_["10111"]
			local var_561_9 = 0

			if var_561_9 < arg_558_1.time_ and arg_558_1.time_ <= var_561_9 + arg_561_0 and not isNil(var_561_8) and arg_558_1.var_.actorSpriteComps10111 == nil then
				arg_558_1.var_.actorSpriteComps10111 = var_561_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_561_10 = 0.2

			if var_561_9 <= arg_558_1.time_ and arg_558_1.time_ < var_561_9 + var_561_10 and not isNil(var_561_8) then
				local var_561_11 = (arg_558_1.time_ - var_561_9) / var_561_10

				if arg_558_1.var_.actorSpriteComps10111 then
					for iter_561_4, iter_561_5 in pairs(arg_558_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_561_5 then
							if arg_558_1.isInRecall_ then
								local var_561_12 = Mathf.Lerp(iter_561_5.color.r, arg_558_1.hightColor2.r, var_561_11)
								local var_561_13 = Mathf.Lerp(iter_561_5.color.g, arg_558_1.hightColor2.g, var_561_11)
								local var_561_14 = Mathf.Lerp(iter_561_5.color.b, arg_558_1.hightColor2.b, var_561_11)

								iter_561_5.color = Color.New(var_561_12, var_561_13, var_561_14)
							else
								local var_561_15 = Mathf.Lerp(iter_561_5.color.r, 0.5, var_561_11)

								iter_561_5.color = Color.New(var_561_15, var_561_15, var_561_15)
							end
						end
					end
				end
			end

			if arg_558_1.time_ >= var_561_9 + var_561_10 and arg_558_1.time_ < var_561_9 + var_561_10 + arg_561_0 and not isNil(var_561_8) and arg_558_1.var_.actorSpriteComps10111 then
				for iter_561_6, iter_561_7 in pairs(arg_558_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_561_7 then
						if arg_558_1.isInRecall_ then
							iter_561_7.color = arg_558_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_561_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_558_1.var_.actorSpriteComps10111 = nil
			end

			local var_561_16 = 0
			local var_561_17 = 0.225

			if var_561_16 < arg_558_1.time_ and arg_558_1.time_ <= var_561_16 + arg_561_0 then
				arg_558_1.talkMaxDuration = 0
				arg_558_1.dialogCg_.alpha = 1

				arg_558_1.dialog_:SetActive(true)
				SetActive(arg_558_1.leftNameGo_, true)

				local var_561_18 = arg_558_1:FormatText(StoryNameCfg[595].name)

				arg_558_1.leftNameTxt_.text = var_561_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_558_1.leftNameTxt_.transform)

				arg_558_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_558_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_558_1:RecordName(arg_558_1.leftNameTxt_.text)
				SetActive(arg_558_1.iconTrs_.gameObject, false)
				arg_558_1.callingController_:SetSelectedState("normal")

				local var_561_19 = arg_558_1:GetWordFromCfg(417161135)
				local var_561_20 = arg_558_1:FormatText(var_561_19.content)

				arg_558_1.text_.text = var_561_20

				LuaForUtil.ClearLinePrefixSymbol(arg_558_1.text_)

				local var_561_21 = 9
				local var_561_22 = utf8.len(var_561_20)
				local var_561_23 = var_561_21 <= 0 and var_561_17 or var_561_17 * (var_561_22 / var_561_21)

				if var_561_23 > 0 and var_561_17 < var_561_23 then
					arg_558_1.talkMaxDuration = var_561_23

					if var_561_23 + var_561_16 > arg_558_1.duration_ then
						arg_558_1.duration_ = var_561_23 + var_561_16
					end
				end

				arg_558_1.text_.text = var_561_20
				arg_558_1.typewritter.percent = 0

				arg_558_1.typewritter:SetDirty()
				arg_558_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161135", "story_v_out_417161.awb") ~= 0 then
					local var_561_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161135", "story_v_out_417161.awb") / 1000

					if var_561_24 + var_561_16 > arg_558_1.duration_ then
						arg_558_1.duration_ = var_561_24 + var_561_16
					end

					if var_561_19.prefab_name ~= "" and arg_558_1.actors_[var_561_19.prefab_name] ~= nil then
						local var_561_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_558_1.actors_[var_561_19.prefab_name].transform, "story_v_out_417161", "417161135", "story_v_out_417161.awb")

						arg_558_1:RecordAudio("417161135", var_561_25)
						arg_558_1:RecordAudio("417161135", var_561_25)
					else
						arg_558_1:AudioAction("play", "voice", "story_v_out_417161", "417161135", "story_v_out_417161.awb")
					end

					arg_558_1:RecordHistoryTalkVoice("story_v_out_417161", "417161135", "story_v_out_417161.awb")
				end

				arg_558_1:RecordContent(arg_558_1.text_.text)
			end

			local var_561_26 = math.max(var_561_17, arg_558_1.talkMaxDuration)

			if var_561_16 <= arg_558_1.time_ and arg_558_1.time_ < var_561_16 + var_561_26 then
				arg_558_1.typewritter.percent = (arg_558_1.time_ - var_561_16) / var_561_26

				arg_558_1.typewritter:SetDirty()
			end

			if arg_558_1.time_ >= var_561_16 + var_561_26 and arg_558_1.time_ < var_561_16 + var_561_26 + arg_561_0 then
				arg_558_1.typewritter.percent = 1

				arg_558_1.typewritter:SetDirty()
				arg_558_1:ShowNextGo(true)
			end
		end
	end,
	Play417161136 = function(arg_562_0, arg_562_1)
		arg_562_1.time_ = 0
		arg_562_1.frameCnt_ = 0
		arg_562_1.state_ = "playing"
		arg_562_1.curTalkId_ = 417161136
		arg_562_1.duration_ = 7.07

		local var_562_0 = {
			zh = 4.933,
			ja = 7.066
		}
		local var_562_1 = manager.audio:GetLocalizationFlag()

		if var_562_0[var_562_1] ~= nil then
			arg_562_1.duration_ = var_562_0[var_562_1]
		end

		SetActive(arg_562_1.tipsGo_, false)

		function arg_562_1.onSingleLineFinish_()
			arg_562_1.onSingleLineUpdate_ = nil
			arg_562_1.onSingleLineFinish_ = nil
			arg_562_1.state_ = "waiting"
		end

		function arg_562_1.playNext_(arg_564_0)
			if arg_564_0 == 1 then
				arg_562_0:Play417161137(arg_562_1)
			end
		end

		function arg_562_1.onSingleLineUpdate_(arg_565_0)
			local var_565_0 = arg_562_1.actors_["10111"]
			local var_565_1 = 0

			if var_565_1 < arg_562_1.time_ and arg_562_1.time_ <= var_565_1 + arg_565_0 and not isNil(var_565_0) and arg_562_1.var_.actorSpriteComps10111 == nil then
				arg_562_1.var_.actorSpriteComps10111 = var_565_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_565_2 = 0.2

			if var_565_1 <= arg_562_1.time_ and arg_562_1.time_ < var_565_1 + var_565_2 and not isNil(var_565_0) then
				local var_565_3 = (arg_562_1.time_ - var_565_1) / var_565_2

				if arg_562_1.var_.actorSpriteComps10111 then
					for iter_565_0, iter_565_1 in pairs(arg_562_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_565_1 then
							if arg_562_1.isInRecall_ then
								local var_565_4 = Mathf.Lerp(iter_565_1.color.r, arg_562_1.hightColor1.r, var_565_3)
								local var_565_5 = Mathf.Lerp(iter_565_1.color.g, arg_562_1.hightColor1.g, var_565_3)
								local var_565_6 = Mathf.Lerp(iter_565_1.color.b, arg_562_1.hightColor1.b, var_565_3)

								iter_565_1.color = Color.New(var_565_4, var_565_5, var_565_6)
							else
								local var_565_7 = Mathf.Lerp(iter_565_1.color.r, 1, var_565_3)

								iter_565_1.color = Color.New(var_565_7, var_565_7, var_565_7)
							end
						end
					end
				end
			end

			if arg_562_1.time_ >= var_565_1 + var_565_2 and arg_562_1.time_ < var_565_1 + var_565_2 + arg_565_0 and not isNil(var_565_0) and arg_562_1.var_.actorSpriteComps10111 then
				for iter_565_2, iter_565_3 in pairs(arg_562_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_565_3 then
						if arg_562_1.isInRecall_ then
							iter_565_3.color = arg_562_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_565_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_562_1.var_.actorSpriteComps10111 = nil
			end

			local var_565_8 = arg_562_1.actors_["10128"]
			local var_565_9 = 0

			if var_565_9 < arg_562_1.time_ and arg_562_1.time_ <= var_565_9 + arg_565_0 and not isNil(var_565_8) and arg_562_1.var_.actorSpriteComps10128 == nil then
				arg_562_1.var_.actorSpriteComps10128 = var_565_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_565_10 = 0.2

			if var_565_9 <= arg_562_1.time_ and arg_562_1.time_ < var_565_9 + var_565_10 and not isNil(var_565_8) then
				local var_565_11 = (arg_562_1.time_ - var_565_9) / var_565_10

				if arg_562_1.var_.actorSpriteComps10128 then
					for iter_565_4, iter_565_5 in pairs(arg_562_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_565_5 then
							if arg_562_1.isInRecall_ then
								local var_565_12 = Mathf.Lerp(iter_565_5.color.r, arg_562_1.hightColor2.r, var_565_11)
								local var_565_13 = Mathf.Lerp(iter_565_5.color.g, arg_562_1.hightColor2.g, var_565_11)
								local var_565_14 = Mathf.Lerp(iter_565_5.color.b, arg_562_1.hightColor2.b, var_565_11)

								iter_565_5.color = Color.New(var_565_12, var_565_13, var_565_14)
							else
								local var_565_15 = Mathf.Lerp(iter_565_5.color.r, 0.5, var_565_11)

								iter_565_5.color = Color.New(var_565_15, var_565_15, var_565_15)
							end
						end
					end
				end
			end

			if arg_562_1.time_ >= var_565_9 + var_565_10 and arg_562_1.time_ < var_565_9 + var_565_10 + arg_565_0 and not isNil(var_565_8) and arg_562_1.var_.actorSpriteComps10128 then
				for iter_565_6, iter_565_7 in pairs(arg_562_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_565_7 then
						if arg_562_1.isInRecall_ then
							iter_565_7.color = arg_562_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_565_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_562_1.var_.actorSpriteComps10128 = nil
			end

			local var_565_16 = arg_562_1.actors_["10111"].transform
			local var_565_17 = 0

			if var_565_17 < arg_562_1.time_ and arg_562_1.time_ <= var_565_17 + arg_565_0 then
				arg_562_1.var_.moveOldPos10111 = var_565_16.localPosition
				var_565_16.localScale = Vector3.New(1, 1, 1)

				arg_562_1:CheckSpriteTmpPos("10111", 4)

				local var_565_18 = var_565_16.childCount

				for iter_565_8 = 0, var_565_18 - 1 do
					local var_565_19 = var_565_16:GetChild(iter_565_8)

					if var_565_19.name == "split_5" or not string.find(var_565_19.name, "split") then
						var_565_19.gameObject:SetActive(true)
					else
						var_565_19.gameObject:SetActive(false)
					end
				end
			end

			local var_565_20 = 0.001

			if var_565_17 <= arg_562_1.time_ and arg_562_1.time_ < var_565_17 + var_565_20 then
				local var_565_21 = (arg_562_1.time_ - var_565_17) / var_565_20
				local var_565_22 = Vector3.New(390, -361.1, -274.6)

				var_565_16.localPosition = Vector3.Lerp(arg_562_1.var_.moveOldPos10111, var_565_22, var_565_21)
			end

			if arg_562_1.time_ >= var_565_17 + var_565_20 and arg_562_1.time_ < var_565_17 + var_565_20 + arg_565_0 then
				var_565_16.localPosition = Vector3.New(390, -361.1, -274.6)
			end

			local var_565_23 = 0
			local var_565_24 = 0.375

			if var_565_23 < arg_562_1.time_ and arg_562_1.time_ <= var_565_23 + arg_565_0 then
				arg_562_1.talkMaxDuration = 0
				arg_562_1.dialogCg_.alpha = 1

				arg_562_1.dialog_:SetActive(true)
				SetActive(arg_562_1.leftNameGo_, true)

				local var_565_25 = arg_562_1:FormatText(StoryNameCfg[1125].name)

				arg_562_1.leftNameTxt_.text = var_565_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_562_1.leftNameTxt_.transform)

				arg_562_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_562_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_562_1:RecordName(arg_562_1.leftNameTxt_.text)
				SetActive(arg_562_1.iconTrs_.gameObject, false)
				arg_562_1.callingController_:SetSelectedState("normal")

				local var_565_26 = arg_562_1:GetWordFromCfg(417161136)
				local var_565_27 = arg_562_1:FormatText(var_565_26.content)

				arg_562_1.text_.text = var_565_27

				LuaForUtil.ClearLinePrefixSymbol(arg_562_1.text_)

				local var_565_28 = 15
				local var_565_29 = utf8.len(var_565_27)
				local var_565_30 = var_565_28 <= 0 and var_565_24 or var_565_24 * (var_565_29 / var_565_28)

				if var_565_30 > 0 and var_565_24 < var_565_30 then
					arg_562_1.talkMaxDuration = var_565_30

					if var_565_30 + var_565_23 > arg_562_1.duration_ then
						arg_562_1.duration_ = var_565_30 + var_565_23
					end
				end

				arg_562_1.text_.text = var_565_27
				arg_562_1.typewritter.percent = 0

				arg_562_1.typewritter:SetDirty()
				arg_562_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161136", "story_v_out_417161.awb") ~= 0 then
					local var_565_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161136", "story_v_out_417161.awb") / 1000

					if var_565_31 + var_565_23 > arg_562_1.duration_ then
						arg_562_1.duration_ = var_565_31 + var_565_23
					end

					if var_565_26.prefab_name ~= "" and arg_562_1.actors_[var_565_26.prefab_name] ~= nil then
						local var_565_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_562_1.actors_[var_565_26.prefab_name].transform, "story_v_out_417161", "417161136", "story_v_out_417161.awb")

						arg_562_1:RecordAudio("417161136", var_565_32)
						arg_562_1:RecordAudio("417161136", var_565_32)
					else
						arg_562_1:AudioAction("play", "voice", "story_v_out_417161", "417161136", "story_v_out_417161.awb")
					end

					arg_562_1:RecordHistoryTalkVoice("story_v_out_417161", "417161136", "story_v_out_417161.awb")
				end

				arg_562_1:RecordContent(arg_562_1.text_.text)
			end

			local var_565_33 = math.max(var_565_24, arg_562_1.talkMaxDuration)

			if var_565_23 <= arg_562_1.time_ and arg_562_1.time_ < var_565_23 + var_565_33 then
				arg_562_1.typewritter.percent = (arg_562_1.time_ - var_565_23) / var_565_33

				arg_562_1.typewritter:SetDirty()
			end

			if arg_562_1.time_ >= var_565_23 + var_565_33 and arg_562_1.time_ < var_565_23 + var_565_33 + arg_565_0 then
				arg_562_1.typewritter.percent = 1

				arg_562_1.typewritter:SetDirty()
				arg_562_1:ShowNextGo(true)
			end
		end
	end,
	Play417161137 = function(arg_566_0, arg_566_1)
		arg_566_1.time_ = 0
		arg_566_1.frameCnt_ = 0
		arg_566_1.state_ = "playing"
		arg_566_1.curTalkId_ = 417161137
		arg_566_1.duration_ = 8.63

		SetActive(arg_566_1.tipsGo_, false)

		function arg_566_1.onSingleLineFinish_()
			arg_566_1.onSingleLineUpdate_ = nil
			arg_566_1.onSingleLineFinish_ = nil
			arg_566_1.state_ = "waiting"
		end

		function arg_566_1.playNext_(arg_568_0)
			if arg_568_0 == 1 then
				arg_566_0:Play417161138(arg_566_1)
			end
		end

		function arg_566_1.onSingleLineUpdate_(arg_569_0)
			local var_569_0 = arg_566_1.actors_["10111"].transform
			local var_569_1 = 0

			if var_569_1 < arg_566_1.time_ and arg_566_1.time_ <= var_569_1 + arg_569_0 then
				arg_566_1.var_.moveOldPos10111 = var_569_0.localPosition
				var_569_0.localScale = Vector3.New(1, 1, 1)

				arg_566_1:CheckSpriteTmpPos("10111", 4)

				local var_569_2 = var_569_0.childCount

				for iter_569_0 = 0, var_569_2 - 1 do
					local var_569_3 = var_569_0:GetChild(iter_569_0)

					if var_569_3.name == "split_1" or not string.find(var_569_3.name, "split") then
						var_569_3.gameObject:SetActive(true)
					else
						var_569_3.gameObject:SetActive(false)
					end
				end
			end

			local var_569_4 = 0.001

			if var_569_1 <= arg_566_1.time_ and arg_566_1.time_ < var_569_1 + var_569_4 then
				local var_569_5 = (arg_566_1.time_ - var_569_1) / var_569_4
				local var_569_6 = Vector3.New(390, -361.1, -274.6)

				var_569_0.localPosition = Vector3.Lerp(arg_566_1.var_.moveOldPos10111, var_569_6, var_569_5)
			end

			if arg_566_1.time_ >= var_569_1 + var_569_4 and arg_566_1.time_ < var_569_1 + var_569_4 + arg_569_0 then
				var_569_0.localPosition = Vector3.New(390, -361.1, -274.6)
			end

			local var_569_7 = 0
			local var_569_8 = 0.925

			if var_569_7 < arg_566_1.time_ and arg_566_1.time_ <= var_569_7 + arg_569_0 then
				arg_566_1.talkMaxDuration = 0
				arg_566_1.dialogCg_.alpha = 1

				arg_566_1.dialog_:SetActive(true)
				SetActive(arg_566_1.leftNameGo_, true)

				local var_569_9 = arg_566_1:FormatText(StoryNameCfg[1125].name)

				arg_566_1.leftNameTxt_.text = var_569_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_566_1.leftNameTxt_.transform)

				arg_566_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_566_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_566_1:RecordName(arg_566_1.leftNameTxt_.text)
				SetActive(arg_566_1.iconTrs_.gameObject, false)
				arg_566_1.callingController_:SetSelectedState("normal")

				local var_569_10 = arg_566_1:GetWordFromCfg(417161137)
				local var_569_11 = arg_566_1:FormatText(var_569_10.content)

				arg_566_1.text_.text = var_569_11

				LuaForUtil.ClearLinePrefixSymbol(arg_566_1.text_)

				local var_569_12 = 37
				local var_569_13 = utf8.len(var_569_11)
				local var_569_14 = var_569_12 <= 0 and var_569_8 or var_569_8 * (var_569_13 / var_569_12)

				if var_569_14 > 0 and var_569_8 < var_569_14 then
					arg_566_1.talkMaxDuration = var_569_14

					if var_569_14 + var_569_7 > arg_566_1.duration_ then
						arg_566_1.duration_ = var_569_14 + var_569_7
					end
				end

				arg_566_1.text_.text = var_569_11
				arg_566_1.typewritter.percent = 0

				arg_566_1.typewritter:SetDirty()
				arg_566_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161137", "story_v_out_417161.awb") ~= 0 then
					local var_569_15 = manager.audio:GetVoiceLength("story_v_out_417161", "417161137", "story_v_out_417161.awb") / 1000

					if var_569_15 + var_569_7 > arg_566_1.duration_ then
						arg_566_1.duration_ = var_569_15 + var_569_7
					end

					if var_569_10.prefab_name ~= "" and arg_566_1.actors_[var_569_10.prefab_name] ~= nil then
						local var_569_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_566_1.actors_[var_569_10.prefab_name].transform, "story_v_out_417161", "417161137", "story_v_out_417161.awb")

						arg_566_1:RecordAudio("417161137", var_569_16)
						arg_566_1:RecordAudio("417161137", var_569_16)
					else
						arg_566_1:AudioAction("play", "voice", "story_v_out_417161", "417161137", "story_v_out_417161.awb")
					end

					arg_566_1:RecordHistoryTalkVoice("story_v_out_417161", "417161137", "story_v_out_417161.awb")
				end

				arg_566_1:RecordContent(arg_566_1.text_.text)
			end

			local var_569_17 = math.max(var_569_8, arg_566_1.talkMaxDuration)

			if var_569_7 <= arg_566_1.time_ and arg_566_1.time_ < var_569_7 + var_569_17 then
				arg_566_1.typewritter.percent = (arg_566_1.time_ - var_569_7) / var_569_17

				arg_566_1.typewritter:SetDirty()
			end

			if arg_566_1.time_ >= var_569_7 + var_569_17 and arg_566_1.time_ < var_569_7 + var_569_17 + arg_569_0 then
				arg_566_1.typewritter.percent = 1

				arg_566_1.typewritter:SetDirty()
				arg_566_1:ShowNextGo(true)
			end
		end
	end,
	Play417161138 = function(arg_570_0, arg_570_1)
		arg_570_1.time_ = 0
		arg_570_1.frameCnt_ = 0
		arg_570_1.state_ = "playing"
		arg_570_1.curTalkId_ = 417161138
		arg_570_1.duration_ = 9.53

		local var_570_0 = {
			zh = 7.666,
			ja = 9.533
		}
		local var_570_1 = manager.audio:GetLocalizationFlag()

		if var_570_0[var_570_1] ~= nil then
			arg_570_1.duration_ = var_570_0[var_570_1]
		end

		SetActive(arg_570_1.tipsGo_, false)

		function arg_570_1.onSingleLineFinish_()
			arg_570_1.onSingleLineUpdate_ = nil
			arg_570_1.onSingleLineFinish_ = nil
			arg_570_1.state_ = "waiting"
		end

		function arg_570_1.playNext_(arg_572_0)
			if arg_572_0 == 1 then
				arg_570_0:Play417161139(arg_570_1)
			end
		end

		function arg_570_1.onSingleLineUpdate_(arg_573_0)
			local var_573_0 = arg_570_1.actors_["10128"]
			local var_573_1 = 0

			if var_573_1 < arg_570_1.time_ and arg_570_1.time_ <= var_573_1 + arg_573_0 and not isNil(var_573_0) and arg_570_1.var_.actorSpriteComps10128 == nil then
				arg_570_1.var_.actorSpriteComps10128 = var_573_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_573_2 = 0.2

			if var_573_1 <= arg_570_1.time_ and arg_570_1.time_ < var_573_1 + var_573_2 and not isNil(var_573_0) then
				local var_573_3 = (arg_570_1.time_ - var_573_1) / var_573_2

				if arg_570_1.var_.actorSpriteComps10128 then
					for iter_573_0, iter_573_1 in pairs(arg_570_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_573_1 then
							if arg_570_1.isInRecall_ then
								local var_573_4 = Mathf.Lerp(iter_573_1.color.r, arg_570_1.hightColor1.r, var_573_3)
								local var_573_5 = Mathf.Lerp(iter_573_1.color.g, arg_570_1.hightColor1.g, var_573_3)
								local var_573_6 = Mathf.Lerp(iter_573_1.color.b, arg_570_1.hightColor1.b, var_573_3)

								iter_573_1.color = Color.New(var_573_4, var_573_5, var_573_6)
							else
								local var_573_7 = Mathf.Lerp(iter_573_1.color.r, 1, var_573_3)

								iter_573_1.color = Color.New(var_573_7, var_573_7, var_573_7)
							end
						end
					end
				end
			end

			if arg_570_1.time_ >= var_573_1 + var_573_2 and arg_570_1.time_ < var_573_1 + var_573_2 + arg_573_0 and not isNil(var_573_0) and arg_570_1.var_.actorSpriteComps10128 then
				for iter_573_2, iter_573_3 in pairs(arg_570_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_573_3 then
						if arg_570_1.isInRecall_ then
							iter_573_3.color = arg_570_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_573_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_570_1.var_.actorSpriteComps10128 = nil
			end

			local var_573_8 = arg_570_1.actors_["10111"]
			local var_573_9 = 0

			if var_573_9 < arg_570_1.time_ and arg_570_1.time_ <= var_573_9 + arg_573_0 and not isNil(var_573_8) and arg_570_1.var_.actorSpriteComps10111 == nil then
				arg_570_1.var_.actorSpriteComps10111 = var_573_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_573_10 = 0.2

			if var_573_9 <= arg_570_1.time_ and arg_570_1.time_ < var_573_9 + var_573_10 and not isNil(var_573_8) then
				local var_573_11 = (arg_570_1.time_ - var_573_9) / var_573_10

				if arg_570_1.var_.actorSpriteComps10111 then
					for iter_573_4, iter_573_5 in pairs(arg_570_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_573_5 then
							if arg_570_1.isInRecall_ then
								local var_573_12 = Mathf.Lerp(iter_573_5.color.r, arg_570_1.hightColor2.r, var_573_11)
								local var_573_13 = Mathf.Lerp(iter_573_5.color.g, arg_570_1.hightColor2.g, var_573_11)
								local var_573_14 = Mathf.Lerp(iter_573_5.color.b, arg_570_1.hightColor2.b, var_573_11)

								iter_573_5.color = Color.New(var_573_12, var_573_13, var_573_14)
							else
								local var_573_15 = Mathf.Lerp(iter_573_5.color.r, 0.5, var_573_11)

								iter_573_5.color = Color.New(var_573_15, var_573_15, var_573_15)
							end
						end
					end
				end
			end

			if arg_570_1.time_ >= var_573_9 + var_573_10 and arg_570_1.time_ < var_573_9 + var_573_10 + arg_573_0 and not isNil(var_573_8) and arg_570_1.var_.actorSpriteComps10111 then
				for iter_573_6, iter_573_7 in pairs(arg_570_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_573_7 then
						if arg_570_1.isInRecall_ then
							iter_573_7.color = arg_570_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_573_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_570_1.var_.actorSpriteComps10111 = nil
			end

			local var_573_16 = arg_570_1.actors_["10128"].transform
			local var_573_17 = 0

			if var_573_17 < arg_570_1.time_ and arg_570_1.time_ <= var_573_17 + arg_573_0 then
				arg_570_1.var_.moveOldPos10128 = var_573_16.localPosition
				var_573_16.localScale = Vector3.New(1, 1, 1)

				arg_570_1:CheckSpriteTmpPos("10128", 2)

				local var_573_18 = var_573_16.childCount

				for iter_573_8 = 0, var_573_18 - 1 do
					local var_573_19 = var_573_16:GetChild(iter_573_8)

					if var_573_19.name == "split_6" or not string.find(var_573_19.name, "split") then
						var_573_19.gameObject:SetActive(true)
					else
						var_573_19.gameObject:SetActive(false)
					end
				end
			end

			local var_573_20 = 0.001

			if var_573_17 <= arg_570_1.time_ and arg_570_1.time_ < var_573_17 + var_573_20 then
				local var_573_21 = (arg_570_1.time_ - var_573_17) / var_573_20
				local var_573_22 = Vector3.New(-390, -347, -300)

				var_573_16.localPosition = Vector3.Lerp(arg_570_1.var_.moveOldPos10128, var_573_22, var_573_21)
			end

			if arg_570_1.time_ >= var_573_17 + var_573_20 and arg_570_1.time_ < var_573_17 + var_573_20 + arg_573_0 then
				var_573_16.localPosition = Vector3.New(-390, -347, -300)
			end

			local var_573_23 = 0
			local var_573_24 = 0.775

			if var_573_23 < arg_570_1.time_ and arg_570_1.time_ <= var_573_23 + arg_573_0 then
				arg_570_1.talkMaxDuration = 0
				arg_570_1.dialogCg_.alpha = 1

				arg_570_1.dialog_:SetActive(true)
				SetActive(arg_570_1.leftNameGo_, true)

				local var_573_25 = arg_570_1:FormatText(StoryNameCfg[595].name)

				arg_570_1.leftNameTxt_.text = var_573_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_570_1.leftNameTxt_.transform)

				arg_570_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_570_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_570_1:RecordName(arg_570_1.leftNameTxt_.text)
				SetActive(arg_570_1.iconTrs_.gameObject, false)
				arg_570_1.callingController_:SetSelectedState("normal")

				local var_573_26 = arg_570_1:GetWordFromCfg(417161138)
				local var_573_27 = arg_570_1:FormatText(var_573_26.content)

				arg_570_1.text_.text = var_573_27

				LuaForUtil.ClearLinePrefixSymbol(arg_570_1.text_)

				local var_573_28 = 31
				local var_573_29 = utf8.len(var_573_27)
				local var_573_30 = var_573_28 <= 0 and var_573_24 or var_573_24 * (var_573_29 / var_573_28)

				if var_573_30 > 0 and var_573_24 < var_573_30 then
					arg_570_1.talkMaxDuration = var_573_30

					if var_573_30 + var_573_23 > arg_570_1.duration_ then
						arg_570_1.duration_ = var_573_30 + var_573_23
					end
				end

				arg_570_1.text_.text = var_573_27
				arg_570_1.typewritter.percent = 0

				arg_570_1.typewritter:SetDirty()
				arg_570_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161138", "story_v_out_417161.awb") ~= 0 then
					local var_573_31 = manager.audio:GetVoiceLength("story_v_out_417161", "417161138", "story_v_out_417161.awb") / 1000

					if var_573_31 + var_573_23 > arg_570_1.duration_ then
						arg_570_1.duration_ = var_573_31 + var_573_23
					end

					if var_573_26.prefab_name ~= "" and arg_570_1.actors_[var_573_26.prefab_name] ~= nil then
						local var_573_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_570_1.actors_[var_573_26.prefab_name].transform, "story_v_out_417161", "417161138", "story_v_out_417161.awb")

						arg_570_1:RecordAudio("417161138", var_573_32)
						arg_570_1:RecordAudio("417161138", var_573_32)
					else
						arg_570_1:AudioAction("play", "voice", "story_v_out_417161", "417161138", "story_v_out_417161.awb")
					end

					arg_570_1:RecordHistoryTalkVoice("story_v_out_417161", "417161138", "story_v_out_417161.awb")
				end

				arg_570_1:RecordContent(arg_570_1.text_.text)
			end

			local var_573_33 = math.max(var_573_24, arg_570_1.talkMaxDuration)

			if var_573_23 <= arg_570_1.time_ and arg_570_1.time_ < var_573_23 + var_573_33 then
				arg_570_1.typewritter.percent = (arg_570_1.time_ - var_573_23) / var_573_33

				arg_570_1.typewritter:SetDirty()
			end

			if arg_570_1.time_ >= var_573_23 + var_573_33 and arg_570_1.time_ < var_573_23 + var_573_33 + arg_573_0 then
				arg_570_1.typewritter.percent = 1

				arg_570_1.typewritter:SetDirty()
				arg_570_1:ShowNextGo(true)
			end
		end
	end,
	Play417161139 = function(arg_574_0, arg_574_1)
		arg_574_1.time_ = 0
		arg_574_1.frameCnt_ = 0
		arg_574_1.state_ = "playing"
		arg_574_1.curTalkId_ = 417161139
		arg_574_1.duration_ = 3.17

		local var_574_0 = {
			zh = 3.166,
			ja = 2.3
		}
		local var_574_1 = manager.audio:GetLocalizationFlag()

		if var_574_0[var_574_1] ~= nil then
			arg_574_1.duration_ = var_574_0[var_574_1]
		end

		SetActive(arg_574_1.tipsGo_, false)

		function arg_574_1.onSingleLineFinish_()
			arg_574_1.onSingleLineUpdate_ = nil
			arg_574_1.onSingleLineFinish_ = nil
			arg_574_1.state_ = "waiting"
		end

		function arg_574_1.playNext_(arg_576_0)
			if arg_576_0 == 1 then
				arg_574_0:Play417161140(arg_574_1)
			end
		end

		function arg_574_1.onSingleLineUpdate_(arg_577_0)
			local var_577_0 = arg_574_1.actors_["10111"]
			local var_577_1 = 0

			if var_577_1 < arg_574_1.time_ and arg_574_1.time_ <= var_577_1 + arg_577_0 and not isNil(var_577_0) and arg_574_1.var_.actorSpriteComps10111 == nil then
				arg_574_1.var_.actorSpriteComps10111 = var_577_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_577_2 = 0.2

			if var_577_1 <= arg_574_1.time_ and arg_574_1.time_ < var_577_1 + var_577_2 and not isNil(var_577_0) then
				local var_577_3 = (arg_574_1.time_ - var_577_1) / var_577_2

				if arg_574_1.var_.actorSpriteComps10111 then
					for iter_577_0, iter_577_1 in pairs(arg_574_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_577_1 then
							if arg_574_1.isInRecall_ then
								local var_577_4 = Mathf.Lerp(iter_577_1.color.r, arg_574_1.hightColor1.r, var_577_3)
								local var_577_5 = Mathf.Lerp(iter_577_1.color.g, arg_574_1.hightColor1.g, var_577_3)
								local var_577_6 = Mathf.Lerp(iter_577_1.color.b, arg_574_1.hightColor1.b, var_577_3)

								iter_577_1.color = Color.New(var_577_4, var_577_5, var_577_6)
							else
								local var_577_7 = Mathf.Lerp(iter_577_1.color.r, 1, var_577_3)

								iter_577_1.color = Color.New(var_577_7, var_577_7, var_577_7)
							end
						end
					end
				end
			end

			if arg_574_1.time_ >= var_577_1 + var_577_2 and arg_574_1.time_ < var_577_1 + var_577_2 + arg_577_0 and not isNil(var_577_0) and arg_574_1.var_.actorSpriteComps10111 then
				for iter_577_2, iter_577_3 in pairs(arg_574_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_577_3 then
						if arg_574_1.isInRecall_ then
							iter_577_3.color = arg_574_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_577_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_574_1.var_.actorSpriteComps10111 = nil
			end

			local var_577_8 = arg_574_1.actors_["10128"]
			local var_577_9 = 0

			if var_577_9 < arg_574_1.time_ and arg_574_1.time_ <= var_577_9 + arg_577_0 and not isNil(var_577_8) and arg_574_1.var_.actorSpriteComps10128 == nil then
				arg_574_1.var_.actorSpriteComps10128 = var_577_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_577_10 = 0.2

			if var_577_9 <= arg_574_1.time_ and arg_574_1.time_ < var_577_9 + var_577_10 and not isNil(var_577_8) then
				local var_577_11 = (arg_574_1.time_ - var_577_9) / var_577_10

				if arg_574_1.var_.actorSpriteComps10128 then
					for iter_577_4, iter_577_5 in pairs(arg_574_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_577_5 then
							if arg_574_1.isInRecall_ then
								local var_577_12 = Mathf.Lerp(iter_577_5.color.r, arg_574_1.hightColor2.r, var_577_11)
								local var_577_13 = Mathf.Lerp(iter_577_5.color.g, arg_574_1.hightColor2.g, var_577_11)
								local var_577_14 = Mathf.Lerp(iter_577_5.color.b, arg_574_1.hightColor2.b, var_577_11)

								iter_577_5.color = Color.New(var_577_12, var_577_13, var_577_14)
							else
								local var_577_15 = Mathf.Lerp(iter_577_5.color.r, 0.5, var_577_11)

								iter_577_5.color = Color.New(var_577_15, var_577_15, var_577_15)
							end
						end
					end
				end
			end

			if arg_574_1.time_ >= var_577_9 + var_577_10 and arg_574_1.time_ < var_577_9 + var_577_10 + arg_577_0 and not isNil(var_577_8) and arg_574_1.var_.actorSpriteComps10128 then
				for iter_577_6, iter_577_7 in pairs(arg_574_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_577_7 then
						if arg_574_1.isInRecall_ then
							iter_577_7.color = arg_574_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_577_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_574_1.var_.actorSpriteComps10128 = nil
			end

			local var_577_16 = 0
			local var_577_17 = 0.2

			if var_577_16 < arg_574_1.time_ and arg_574_1.time_ <= var_577_16 + arg_577_0 then
				arg_574_1.talkMaxDuration = 0
				arg_574_1.dialogCg_.alpha = 1

				arg_574_1.dialog_:SetActive(true)
				SetActive(arg_574_1.leftNameGo_, true)

				local var_577_18 = arg_574_1:FormatText(StoryNameCfg[1125].name)

				arg_574_1.leftNameTxt_.text = var_577_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_574_1.leftNameTxt_.transform)

				arg_574_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_574_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_574_1:RecordName(arg_574_1.leftNameTxt_.text)
				SetActive(arg_574_1.iconTrs_.gameObject, false)
				arg_574_1.callingController_:SetSelectedState("normal")

				local var_577_19 = arg_574_1:GetWordFromCfg(417161139)
				local var_577_20 = arg_574_1:FormatText(var_577_19.content)

				arg_574_1.text_.text = var_577_20

				LuaForUtil.ClearLinePrefixSymbol(arg_574_1.text_)

				local var_577_21 = 8
				local var_577_22 = utf8.len(var_577_20)
				local var_577_23 = var_577_21 <= 0 and var_577_17 or var_577_17 * (var_577_22 / var_577_21)

				if var_577_23 > 0 and var_577_17 < var_577_23 then
					arg_574_1.talkMaxDuration = var_577_23

					if var_577_23 + var_577_16 > arg_574_1.duration_ then
						arg_574_1.duration_ = var_577_23 + var_577_16
					end
				end

				arg_574_1.text_.text = var_577_20
				arg_574_1.typewritter.percent = 0

				arg_574_1.typewritter:SetDirty()
				arg_574_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161139", "story_v_out_417161.awb") ~= 0 then
					local var_577_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161139", "story_v_out_417161.awb") / 1000

					if var_577_24 + var_577_16 > arg_574_1.duration_ then
						arg_574_1.duration_ = var_577_24 + var_577_16
					end

					if var_577_19.prefab_name ~= "" and arg_574_1.actors_[var_577_19.prefab_name] ~= nil then
						local var_577_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_574_1.actors_[var_577_19.prefab_name].transform, "story_v_out_417161", "417161139", "story_v_out_417161.awb")

						arg_574_1:RecordAudio("417161139", var_577_25)
						arg_574_1:RecordAudio("417161139", var_577_25)
					else
						arg_574_1:AudioAction("play", "voice", "story_v_out_417161", "417161139", "story_v_out_417161.awb")
					end

					arg_574_1:RecordHistoryTalkVoice("story_v_out_417161", "417161139", "story_v_out_417161.awb")
				end

				arg_574_1:RecordContent(arg_574_1.text_.text)
			end

			local var_577_26 = math.max(var_577_17, arg_574_1.talkMaxDuration)

			if var_577_16 <= arg_574_1.time_ and arg_574_1.time_ < var_577_16 + var_577_26 then
				arg_574_1.typewritter.percent = (arg_574_1.time_ - var_577_16) / var_577_26

				arg_574_1.typewritter:SetDirty()
			end

			if arg_574_1.time_ >= var_577_16 + var_577_26 and arg_574_1.time_ < var_577_16 + var_577_26 + arg_577_0 then
				arg_574_1.typewritter.percent = 1

				arg_574_1.typewritter:SetDirty()
				arg_574_1:ShowNextGo(true)
			end
		end
	end,
	Play417161140 = function(arg_578_0, arg_578_1)
		arg_578_1.time_ = 0
		arg_578_1.frameCnt_ = 0
		arg_578_1.state_ = "playing"
		arg_578_1.curTalkId_ = 417161140
		arg_578_1.duration_ = 3.1

		local var_578_0 = {
			zh = 3.1,
			ja = 1.833
		}
		local var_578_1 = manager.audio:GetLocalizationFlag()

		if var_578_0[var_578_1] ~= nil then
			arg_578_1.duration_ = var_578_0[var_578_1]
		end

		SetActive(arg_578_1.tipsGo_, false)

		function arg_578_1.onSingleLineFinish_()
			arg_578_1.onSingleLineUpdate_ = nil
			arg_578_1.onSingleLineFinish_ = nil
			arg_578_1.state_ = "waiting"
		end

		function arg_578_1.playNext_(arg_580_0)
			if arg_580_0 == 1 then
				arg_578_0:Play417161141(arg_578_1)
			end
		end

		function arg_578_1.onSingleLineUpdate_(arg_581_0)
			local var_581_0 = arg_578_1.actors_["10128"]
			local var_581_1 = 0

			if var_581_1 < arg_578_1.time_ and arg_578_1.time_ <= var_581_1 + arg_581_0 and not isNil(var_581_0) and arg_578_1.var_.actorSpriteComps10128 == nil then
				arg_578_1.var_.actorSpriteComps10128 = var_581_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_581_2 = 0.2

			if var_581_1 <= arg_578_1.time_ and arg_578_1.time_ < var_581_1 + var_581_2 and not isNil(var_581_0) then
				local var_581_3 = (arg_578_1.time_ - var_581_1) / var_581_2

				if arg_578_1.var_.actorSpriteComps10128 then
					for iter_581_0, iter_581_1 in pairs(arg_578_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_581_1 then
							if arg_578_1.isInRecall_ then
								local var_581_4 = Mathf.Lerp(iter_581_1.color.r, arg_578_1.hightColor1.r, var_581_3)
								local var_581_5 = Mathf.Lerp(iter_581_1.color.g, arg_578_1.hightColor1.g, var_581_3)
								local var_581_6 = Mathf.Lerp(iter_581_1.color.b, arg_578_1.hightColor1.b, var_581_3)

								iter_581_1.color = Color.New(var_581_4, var_581_5, var_581_6)
							else
								local var_581_7 = Mathf.Lerp(iter_581_1.color.r, 1, var_581_3)

								iter_581_1.color = Color.New(var_581_7, var_581_7, var_581_7)
							end
						end
					end
				end
			end

			if arg_578_1.time_ >= var_581_1 + var_581_2 and arg_578_1.time_ < var_581_1 + var_581_2 + arg_581_0 and not isNil(var_581_0) and arg_578_1.var_.actorSpriteComps10128 then
				for iter_581_2, iter_581_3 in pairs(arg_578_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_581_3 then
						if arg_578_1.isInRecall_ then
							iter_581_3.color = arg_578_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_581_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_578_1.var_.actorSpriteComps10128 = nil
			end

			local var_581_8 = arg_578_1.actors_["10111"]
			local var_581_9 = 0

			if var_581_9 < arg_578_1.time_ and arg_578_1.time_ <= var_581_9 + arg_581_0 and not isNil(var_581_8) and arg_578_1.var_.actorSpriteComps10111 == nil then
				arg_578_1.var_.actorSpriteComps10111 = var_581_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_581_10 = 0.2

			if var_581_9 <= arg_578_1.time_ and arg_578_1.time_ < var_581_9 + var_581_10 and not isNil(var_581_8) then
				local var_581_11 = (arg_578_1.time_ - var_581_9) / var_581_10

				if arg_578_1.var_.actorSpriteComps10111 then
					for iter_581_4, iter_581_5 in pairs(arg_578_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_581_5 then
							if arg_578_1.isInRecall_ then
								local var_581_12 = Mathf.Lerp(iter_581_5.color.r, arg_578_1.hightColor2.r, var_581_11)
								local var_581_13 = Mathf.Lerp(iter_581_5.color.g, arg_578_1.hightColor2.g, var_581_11)
								local var_581_14 = Mathf.Lerp(iter_581_5.color.b, arg_578_1.hightColor2.b, var_581_11)

								iter_581_5.color = Color.New(var_581_12, var_581_13, var_581_14)
							else
								local var_581_15 = Mathf.Lerp(iter_581_5.color.r, 0.5, var_581_11)

								iter_581_5.color = Color.New(var_581_15, var_581_15, var_581_15)
							end
						end
					end
				end
			end

			if arg_578_1.time_ >= var_581_9 + var_581_10 and arg_578_1.time_ < var_581_9 + var_581_10 + arg_581_0 and not isNil(var_581_8) and arg_578_1.var_.actorSpriteComps10111 then
				for iter_581_6, iter_581_7 in pairs(arg_578_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_581_7 then
						if arg_578_1.isInRecall_ then
							iter_581_7.color = arg_578_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_581_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_578_1.var_.actorSpriteComps10111 = nil
			end

			local var_581_16 = 0
			local var_581_17 = 0.25

			if var_581_16 < arg_578_1.time_ and arg_578_1.time_ <= var_581_16 + arg_581_0 then
				arg_578_1.talkMaxDuration = 0
				arg_578_1.dialogCg_.alpha = 1

				arg_578_1.dialog_:SetActive(true)
				SetActive(arg_578_1.leftNameGo_, true)

				local var_581_18 = arg_578_1:FormatText(StoryNameCfg[595].name)

				arg_578_1.leftNameTxt_.text = var_581_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_578_1.leftNameTxt_.transform)

				arg_578_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_578_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_578_1:RecordName(arg_578_1.leftNameTxt_.text)
				SetActive(arg_578_1.iconTrs_.gameObject, false)
				arg_578_1.callingController_:SetSelectedState("normal")

				local var_581_19 = arg_578_1:GetWordFromCfg(417161140)
				local var_581_20 = arg_578_1:FormatText(var_581_19.content)

				arg_578_1.text_.text = var_581_20

				LuaForUtil.ClearLinePrefixSymbol(arg_578_1.text_)

				local var_581_21 = 10
				local var_581_22 = utf8.len(var_581_20)
				local var_581_23 = var_581_21 <= 0 and var_581_17 or var_581_17 * (var_581_22 / var_581_21)

				if var_581_23 > 0 and var_581_17 < var_581_23 then
					arg_578_1.talkMaxDuration = var_581_23

					if var_581_23 + var_581_16 > arg_578_1.duration_ then
						arg_578_1.duration_ = var_581_23 + var_581_16
					end
				end

				arg_578_1.text_.text = var_581_20
				arg_578_1.typewritter.percent = 0

				arg_578_1.typewritter:SetDirty()
				arg_578_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161140", "story_v_out_417161.awb") ~= 0 then
					local var_581_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161140", "story_v_out_417161.awb") / 1000

					if var_581_24 + var_581_16 > arg_578_1.duration_ then
						arg_578_1.duration_ = var_581_24 + var_581_16
					end

					if var_581_19.prefab_name ~= "" and arg_578_1.actors_[var_581_19.prefab_name] ~= nil then
						local var_581_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_578_1.actors_[var_581_19.prefab_name].transform, "story_v_out_417161", "417161140", "story_v_out_417161.awb")

						arg_578_1:RecordAudio("417161140", var_581_25)
						arg_578_1:RecordAudio("417161140", var_581_25)
					else
						arg_578_1:AudioAction("play", "voice", "story_v_out_417161", "417161140", "story_v_out_417161.awb")
					end

					arg_578_1:RecordHistoryTalkVoice("story_v_out_417161", "417161140", "story_v_out_417161.awb")
				end

				arg_578_1:RecordContent(arg_578_1.text_.text)
			end

			local var_581_26 = math.max(var_581_17, arg_578_1.talkMaxDuration)

			if var_581_16 <= arg_578_1.time_ and arg_578_1.time_ < var_581_16 + var_581_26 then
				arg_578_1.typewritter.percent = (arg_578_1.time_ - var_581_16) / var_581_26

				arg_578_1.typewritter:SetDirty()
			end

			if arg_578_1.time_ >= var_581_16 + var_581_26 and arg_578_1.time_ < var_581_16 + var_581_26 + arg_581_0 then
				arg_578_1.typewritter.percent = 1

				arg_578_1.typewritter:SetDirty()
				arg_578_1:ShowNextGo(true)
			end
		end
	end,
	Play417161141 = function(arg_582_0, arg_582_1)
		arg_582_1.time_ = 0
		arg_582_1.frameCnt_ = 0
		arg_582_1.state_ = "playing"
		arg_582_1.curTalkId_ = 417161141
		arg_582_1.duration_ = 8.4

		local var_582_0 = {
			zh = 8.4,
			ja = 8.1
		}
		local var_582_1 = manager.audio:GetLocalizationFlag()

		if var_582_0[var_582_1] ~= nil then
			arg_582_1.duration_ = var_582_0[var_582_1]
		end

		SetActive(arg_582_1.tipsGo_, false)

		function arg_582_1.onSingleLineFinish_()
			arg_582_1.onSingleLineUpdate_ = nil
			arg_582_1.onSingleLineFinish_ = nil
			arg_582_1.state_ = "waiting"
		end

		function arg_582_1.playNext_(arg_584_0)
			if arg_584_0 == 1 then
				arg_582_0:Play417161142(arg_582_1)
			end
		end

		function arg_582_1.onSingleLineUpdate_(arg_585_0)
			local var_585_0 = arg_582_1.actors_["10111"]
			local var_585_1 = 0

			if var_585_1 < arg_582_1.time_ and arg_582_1.time_ <= var_585_1 + arg_585_0 and not isNil(var_585_0) and arg_582_1.var_.actorSpriteComps10111 == nil then
				arg_582_1.var_.actorSpriteComps10111 = var_585_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_585_2 = 0.2

			if var_585_1 <= arg_582_1.time_ and arg_582_1.time_ < var_585_1 + var_585_2 and not isNil(var_585_0) then
				local var_585_3 = (arg_582_1.time_ - var_585_1) / var_585_2

				if arg_582_1.var_.actorSpriteComps10111 then
					for iter_585_0, iter_585_1 in pairs(arg_582_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_585_1 then
							if arg_582_1.isInRecall_ then
								local var_585_4 = Mathf.Lerp(iter_585_1.color.r, arg_582_1.hightColor1.r, var_585_3)
								local var_585_5 = Mathf.Lerp(iter_585_1.color.g, arg_582_1.hightColor1.g, var_585_3)
								local var_585_6 = Mathf.Lerp(iter_585_1.color.b, arg_582_1.hightColor1.b, var_585_3)

								iter_585_1.color = Color.New(var_585_4, var_585_5, var_585_6)
							else
								local var_585_7 = Mathf.Lerp(iter_585_1.color.r, 1, var_585_3)

								iter_585_1.color = Color.New(var_585_7, var_585_7, var_585_7)
							end
						end
					end
				end
			end

			if arg_582_1.time_ >= var_585_1 + var_585_2 and arg_582_1.time_ < var_585_1 + var_585_2 + arg_585_0 and not isNil(var_585_0) and arg_582_1.var_.actorSpriteComps10111 then
				for iter_585_2, iter_585_3 in pairs(arg_582_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_585_3 then
						if arg_582_1.isInRecall_ then
							iter_585_3.color = arg_582_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_585_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_582_1.var_.actorSpriteComps10111 = nil
			end

			local var_585_8 = arg_582_1.actors_["10128"]
			local var_585_9 = 0

			if var_585_9 < arg_582_1.time_ and arg_582_1.time_ <= var_585_9 + arg_585_0 and not isNil(var_585_8) and arg_582_1.var_.actorSpriteComps10128 == nil then
				arg_582_1.var_.actorSpriteComps10128 = var_585_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_585_10 = 0.2

			if var_585_9 <= arg_582_1.time_ and arg_582_1.time_ < var_585_9 + var_585_10 and not isNil(var_585_8) then
				local var_585_11 = (arg_582_1.time_ - var_585_9) / var_585_10

				if arg_582_1.var_.actorSpriteComps10128 then
					for iter_585_4, iter_585_5 in pairs(arg_582_1.var_.actorSpriteComps10128:ToTable()) do
						if iter_585_5 then
							if arg_582_1.isInRecall_ then
								local var_585_12 = Mathf.Lerp(iter_585_5.color.r, arg_582_1.hightColor2.r, var_585_11)
								local var_585_13 = Mathf.Lerp(iter_585_5.color.g, arg_582_1.hightColor2.g, var_585_11)
								local var_585_14 = Mathf.Lerp(iter_585_5.color.b, arg_582_1.hightColor2.b, var_585_11)

								iter_585_5.color = Color.New(var_585_12, var_585_13, var_585_14)
							else
								local var_585_15 = Mathf.Lerp(iter_585_5.color.r, 0.5, var_585_11)

								iter_585_5.color = Color.New(var_585_15, var_585_15, var_585_15)
							end
						end
					end
				end
			end

			if arg_582_1.time_ >= var_585_9 + var_585_10 and arg_582_1.time_ < var_585_9 + var_585_10 + arg_585_0 and not isNil(var_585_8) and arg_582_1.var_.actorSpriteComps10128 then
				for iter_585_6, iter_585_7 in pairs(arg_582_1.var_.actorSpriteComps10128:ToTable()) do
					if iter_585_7 then
						if arg_582_1.isInRecall_ then
							iter_585_7.color = arg_582_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_585_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_582_1.var_.actorSpriteComps10128 = nil
			end

			local var_585_16 = 0
			local var_585_17 = 0.75

			if var_585_16 < arg_582_1.time_ and arg_582_1.time_ <= var_585_16 + arg_585_0 then
				arg_582_1.talkMaxDuration = 0
				arg_582_1.dialogCg_.alpha = 1

				arg_582_1.dialog_:SetActive(true)
				SetActive(arg_582_1.leftNameGo_, true)

				local var_585_18 = arg_582_1:FormatText(StoryNameCfg[1125].name)

				arg_582_1.leftNameTxt_.text = var_585_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_582_1.leftNameTxt_.transform)

				arg_582_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_582_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_582_1:RecordName(arg_582_1.leftNameTxt_.text)
				SetActive(arg_582_1.iconTrs_.gameObject, false)
				arg_582_1.callingController_:SetSelectedState("normal")

				local var_585_19 = arg_582_1:GetWordFromCfg(417161141)
				local var_585_20 = arg_582_1:FormatText(var_585_19.content)

				arg_582_1.text_.text = var_585_20

				LuaForUtil.ClearLinePrefixSymbol(arg_582_1.text_)

				local var_585_21 = 30
				local var_585_22 = utf8.len(var_585_20)
				local var_585_23 = var_585_21 <= 0 and var_585_17 or var_585_17 * (var_585_22 / var_585_21)

				if var_585_23 > 0 and var_585_17 < var_585_23 then
					arg_582_1.talkMaxDuration = var_585_23

					if var_585_23 + var_585_16 > arg_582_1.duration_ then
						arg_582_1.duration_ = var_585_23 + var_585_16
					end
				end

				arg_582_1.text_.text = var_585_20
				arg_582_1.typewritter.percent = 0

				arg_582_1.typewritter:SetDirty()
				arg_582_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161141", "story_v_out_417161.awb") ~= 0 then
					local var_585_24 = manager.audio:GetVoiceLength("story_v_out_417161", "417161141", "story_v_out_417161.awb") / 1000

					if var_585_24 + var_585_16 > arg_582_1.duration_ then
						arg_582_1.duration_ = var_585_24 + var_585_16
					end

					if var_585_19.prefab_name ~= "" and arg_582_1.actors_[var_585_19.prefab_name] ~= nil then
						local var_585_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_582_1.actors_[var_585_19.prefab_name].transform, "story_v_out_417161", "417161141", "story_v_out_417161.awb")

						arg_582_1:RecordAudio("417161141", var_585_25)
						arg_582_1:RecordAudio("417161141", var_585_25)
					else
						arg_582_1:AudioAction("play", "voice", "story_v_out_417161", "417161141", "story_v_out_417161.awb")
					end

					arg_582_1:RecordHistoryTalkVoice("story_v_out_417161", "417161141", "story_v_out_417161.awb")
				end

				arg_582_1:RecordContent(arg_582_1.text_.text)
			end

			local var_585_26 = math.max(var_585_17, arg_582_1.talkMaxDuration)

			if var_585_16 <= arg_582_1.time_ and arg_582_1.time_ < var_585_16 + var_585_26 then
				arg_582_1.typewritter.percent = (arg_582_1.time_ - var_585_16) / var_585_26

				arg_582_1.typewritter:SetDirty()
			end

			if arg_582_1.time_ >= var_585_16 + var_585_26 and arg_582_1.time_ < var_585_16 + var_585_26 + arg_585_0 then
				arg_582_1.typewritter.percent = 1

				arg_582_1.typewritter:SetDirty()
				arg_582_1:ShowNextGo(true)
			end
		end
	end,
	Play417161142 = function(arg_586_0, arg_586_1)
		arg_586_1.time_ = 0
		arg_586_1.frameCnt_ = 0
		arg_586_1.state_ = "playing"
		arg_586_1.curTalkId_ = 417161142
		arg_586_1.duration_ = 9.97

		local var_586_0 = {
			zh = 8.166,
			ja = 9.966
		}
		local var_586_1 = manager.audio:GetLocalizationFlag()

		if var_586_0[var_586_1] ~= nil then
			arg_586_1.duration_ = var_586_0[var_586_1]
		end

		SetActive(arg_586_1.tipsGo_, false)

		function arg_586_1.onSingleLineFinish_()
			arg_586_1.onSingleLineUpdate_ = nil
			arg_586_1.onSingleLineFinish_ = nil
			arg_586_1.state_ = "waiting"
		end

		function arg_586_1.playNext_(arg_588_0)
			if arg_588_0 == 1 then
				arg_586_0:Play417161143(arg_586_1)
			end
		end

		function arg_586_1.onSingleLineUpdate_(arg_589_0)
			local var_589_0 = 0
			local var_589_1 = 1

			if var_589_0 < arg_586_1.time_ and arg_586_1.time_ <= var_589_0 + arg_589_0 then
				arg_586_1.talkMaxDuration = 0
				arg_586_1.dialogCg_.alpha = 1

				arg_586_1.dialog_:SetActive(true)
				SetActive(arg_586_1.leftNameGo_, true)

				local var_589_2 = arg_586_1:FormatText(StoryNameCfg[1125].name)

				arg_586_1.leftNameTxt_.text = var_589_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_586_1.leftNameTxt_.transform)

				arg_586_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_586_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_586_1:RecordName(arg_586_1.leftNameTxt_.text)
				SetActive(arg_586_1.iconTrs_.gameObject, false)
				arg_586_1.callingController_:SetSelectedState("normal")

				local var_589_3 = arg_586_1:GetWordFromCfg(417161142)
				local var_589_4 = arg_586_1:FormatText(var_589_3.content)

				arg_586_1.text_.text = var_589_4

				LuaForUtil.ClearLinePrefixSymbol(arg_586_1.text_)

				local var_589_5 = 40
				local var_589_6 = utf8.len(var_589_4)
				local var_589_7 = var_589_5 <= 0 and var_589_1 or var_589_1 * (var_589_6 / var_589_5)

				if var_589_7 > 0 and var_589_1 < var_589_7 then
					arg_586_1.talkMaxDuration = var_589_7

					if var_589_7 + var_589_0 > arg_586_1.duration_ then
						arg_586_1.duration_ = var_589_7 + var_589_0
					end
				end

				arg_586_1.text_.text = var_589_4
				arg_586_1.typewritter.percent = 0

				arg_586_1.typewritter:SetDirty()
				arg_586_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161142", "story_v_out_417161.awb") ~= 0 then
					local var_589_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161142", "story_v_out_417161.awb") / 1000

					if var_589_8 + var_589_0 > arg_586_1.duration_ then
						arg_586_1.duration_ = var_589_8 + var_589_0
					end

					if var_589_3.prefab_name ~= "" and arg_586_1.actors_[var_589_3.prefab_name] ~= nil then
						local var_589_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_586_1.actors_[var_589_3.prefab_name].transform, "story_v_out_417161", "417161142", "story_v_out_417161.awb")

						arg_586_1:RecordAudio("417161142", var_589_9)
						arg_586_1:RecordAudio("417161142", var_589_9)
					else
						arg_586_1:AudioAction("play", "voice", "story_v_out_417161", "417161142", "story_v_out_417161.awb")
					end

					arg_586_1:RecordHistoryTalkVoice("story_v_out_417161", "417161142", "story_v_out_417161.awb")
				end

				arg_586_1:RecordContent(arg_586_1.text_.text)
			end

			local var_589_10 = math.max(var_589_1, arg_586_1.talkMaxDuration)

			if var_589_0 <= arg_586_1.time_ and arg_586_1.time_ < var_589_0 + var_589_10 then
				arg_586_1.typewritter.percent = (arg_586_1.time_ - var_589_0) / var_589_10

				arg_586_1.typewritter:SetDirty()
			end

			if arg_586_1.time_ >= var_589_0 + var_589_10 and arg_586_1.time_ < var_589_0 + var_589_10 + arg_589_0 then
				arg_586_1.typewritter.percent = 1

				arg_586_1.typewritter:SetDirty()
				arg_586_1:ShowNextGo(true)
			end
		end
	end,
	Play417161143 = function(arg_590_0, arg_590_1)
		arg_590_1.time_ = 0
		arg_590_1.frameCnt_ = 0
		arg_590_1.state_ = "playing"
		arg_590_1.curTalkId_ = 417161143
		arg_590_1.duration_ = 5

		SetActive(arg_590_1.tipsGo_, false)

		function arg_590_1.onSingleLineFinish_()
			arg_590_1.onSingleLineUpdate_ = nil
			arg_590_1.onSingleLineFinish_ = nil
			arg_590_1.state_ = "waiting"
		end

		function arg_590_1.playNext_(arg_592_0)
			if arg_592_0 == 1 then
				arg_590_0:Play417161144(arg_590_1)
			end
		end

		function arg_590_1.onSingleLineUpdate_(arg_593_0)
			local var_593_0 = arg_590_1.actors_["10111"]
			local var_593_1 = 0

			if var_593_1 < arg_590_1.time_ and arg_590_1.time_ <= var_593_1 + arg_593_0 and not isNil(var_593_0) and arg_590_1.var_.actorSpriteComps10111 == nil then
				arg_590_1.var_.actorSpriteComps10111 = var_593_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_593_2 = 0.2

			if var_593_1 <= arg_590_1.time_ and arg_590_1.time_ < var_593_1 + var_593_2 and not isNil(var_593_0) then
				local var_593_3 = (arg_590_1.time_ - var_593_1) / var_593_2

				if arg_590_1.var_.actorSpriteComps10111 then
					for iter_593_0, iter_593_1 in pairs(arg_590_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_593_1 then
							if arg_590_1.isInRecall_ then
								local var_593_4 = Mathf.Lerp(iter_593_1.color.r, arg_590_1.hightColor2.r, var_593_3)
								local var_593_5 = Mathf.Lerp(iter_593_1.color.g, arg_590_1.hightColor2.g, var_593_3)
								local var_593_6 = Mathf.Lerp(iter_593_1.color.b, arg_590_1.hightColor2.b, var_593_3)

								iter_593_1.color = Color.New(var_593_4, var_593_5, var_593_6)
							else
								local var_593_7 = Mathf.Lerp(iter_593_1.color.r, 0.5, var_593_3)

								iter_593_1.color = Color.New(var_593_7, var_593_7, var_593_7)
							end
						end
					end
				end
			end

			if arg_590_1.time_ >= var_593_1 + var_593_2 and arg_590_1.time_ < var_593_1 + var_593_2 + arg_593_0 and not isNil(var_593_0) and arg_590_1.var_.actorSpriteComps10111 then
				for iter_593_2, iter_593_3 in pairs(arg_590_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_593_3 then
						if arg_590_1.isInRecall_ then
							iter_593_3.color = arg_590_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_593_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_590_1.var_.actorSpriteComps10111 = nil
			end

			local var_593_8 = 0
			local var_593_9 = 1

			if var_593_8 < arg_590_1.time_ and arg_590_1.time_ <= var_593_8 + arg_593_0 then
				local var_593_10 = "play"
				local var_593_11 = "effect"

				arg_590_1:AudioAction(var_593_10, var_593_11, "se_story_1311", "se_story_1311_paper", "")
			end

			local var_593_12 = 0
			local var_593_13 = 0.525

			if var_593_12 < arg_590_1.time_ and arg_590_1.time_ <= var_593_12 + arg_593_0 then
				arg_590_1.talkMaxDuration = 0
				arg_590_1.dialogCg_.alpha = 1

				arg_590_1.dialog_:SetActive(true)
				SetActive(arg_590_1.leftNameGo_, false)

				arg_590_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_590_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_590_1:RecordName(arg_590_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_590_1.iconTrs_.gameObject, false)
				arg_590_1.callingController_:SetSelectedState("normal")

				local var_593_14 = arg_590_1:GetWordFromCfg(417161143)
				local var_593_15 = arg_590_1:FormatText(var_593_14.content)

				arg_590_1.text_.text = var_593_15

				LuaForUtil.ClearLinePrefixSymbol(arg_590_1.text_)

				local var_593_16 = 21
				local var_593_17 = utf8.len(var_593_15)
				local var_593_18 = var_593_16 <= 0 and var_593_13 or var_593_13 * (var_593_17 / var_593_16)

				if var_593_18 > 0 and var_593_13 < var_593_18 then
					arg_590_1.talkMaxDuration = var_593_18

					if var_593_18 + var_593_12 > arg_590_1.duration_ then
						arg_590_1.duration_ = var_593_18 + var_593_12
					end
				end

				arg_590_1.text_.text = var_593_15
				arg_590_1.typewritter.percent = 0

				arg_590_1.typewritter:SetDirty()
				arg_590_1:ShowNextGo(false)
				arg_590_1:RecordContent(arg_590_1.text_.text)
			end

			local var_593_19 = math.max(var_593_13, arg_590_1.talkMaxDuration)

			if var_593_12 <= arg_590_1.time_ and arg_590_1.time_ < var_593_12 + var_593_19 then
				arg_590_1.typewritter.percent = (arg_590_1.time_ - var_593_12) / var_593_19

				arg_590_1.typewritter:SetDirty()
			end

			if arg_590_1.time_ >= var_593_12 + var_593_19 and arg_590_1.time_ < var_593_12 + var_593_19 + arg_593_0 then
				arg_590_1.typewritter.percent = 1

				arg_590_1.typewritter:SetDirty()
				arg_590_1:ShowNextGo(true)
			end
		end
	end,
	Play417161144 = function(arg_594_0, arg_594_1)
		arg_594_1.time_ = 0
		arg_594_1.frameCnt_ = 0
		arg_594_1.state_ = "playing"
		arg_594_1.curTalkId_ = 417161144
		arg_594_1.duration_ = 7.4

		local var_594_0 = {
			zh = 7.1,
			ja = 7.4
		}
		local var_594_1 = manager.audio:GetLocalizationFlag()

		if var_594_0[var_594_1] ~= nil then
			arg_594_1.duration_ = var_594_0[var_594_1]
		end

		SetActive(arg_594_1.tipsGo_, false)

		function arg_594_1.onSingleLineFinish_()
			arg_594_1.onSingleLineUpdate_ = nil
			arg_594_1.onSingleLineFinish_ = nil
			arg_594_1.state_ = "waiting"
		end

		function arg_594_1.playNext_(arg_596_0)
			if arg_596_0 == 1 then
				arg_594_0:Play417161145(arg_594_1)
			end
		end

		function arg_594_1.onSingleLineUpdate_(arg_597_0)
			local var_597_0 = arg_594_1.actors_["10111"]
			local var_597_1 = 0

			if var_597_1 < arg_594_1.time_ and arg_594_1.time_ <= var_597_1 + arg_597_0 and not isNil(var_597_0) and arg_594_1.var_.actorSpriteComps10111 == nil then
				arg_594_1.var_.actorSpriteComps10111 = var_597_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_597_2 = 0.2

			if var_597_1 <= arg_594_1.time_ and arg_594_1.time_ < var_597_1 + var_597_2 and not isNil(var_597_0) then
				local var_597_3 = (arg_594_1.time_ - var_597_1) / var_597_2

				if arg_594_1.var_.actorSpriteComps10111 then
					for iter_597_0, iter_597_1 in pairs(arg_594_1.var_.actorSpriteComps10111:ToTable()) do
						if iter_597_1 then
							if arg_594_1.isInRecall_ then
								local var_597_4 = Mathf.Lerp(iter_597_1.color.r, arg_594_1.hightColor1.r, var_597_3)
								local var_597_5 = Mathf.Lerp(iter_597_1.color.g, arg_594_1.hightColor1.g, var_597_3)
								local var_597_6 = Mathf.Lerp(iter_597_1.color.b, arg_594_1.hightColor1.b, var_597_3)

								iter_597_1.color = Color.New(var_597_4, var_597_5, var_597_6)
							else
								local var_597_7 = Mathf.Lerp(iter_597_1.color.r, 1, var_597_3)

								iter_597_1.color = Color.New(var_597_7, var_597_7, var_597_7)
							end
						end
					end
				end
			end

			if arg_594_1.time_ >= var_597_1 + var_597_2 and arg_594_1.time_ < var_597_1 + var_597_2 + arg_597_0 and not isNil(var_597_0) and arg_594_1.var_.actorSpriteComps10111 then
				for iter_597_2, iter_597_3 in pairs(arg_594_1.var_.actorSpriteComps10111:ToTable()) do
					if iter_597_3 then
						if arg_594_1.isInRecall_ then
							iter_597_3.color = arg_594_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_597_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_594_1.var_.actorSpriteComps10111 = nil
			end

			local var_597_8 = 0
			local var_597_9 = 0.825

			if var_597_8 < arg_594_1.time_ and arg_594_1.time_ <= var_597_8 + arg_597_0 then
				arg_594_1.talkMaxDuration = 0
				arg_594_1.dialogCg_.alpha = 1

				arg_594_1.dialog_:SetActive(true)
				SetActive(arg_594_1.leftNameGo_, true)

				local var_597_10 = arg_594_1:FormatText(StoryNameCfg[1125].name)

				arg_594_1.leftNameTxt_.text = var_597_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_594_1.leftNameTxt_.transform)

				arg_594_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_594_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_594_1:RecordName(arg_594_1.leftNameTxt_.text)
				SetActive(arg_594_1.iconTrs_.gameObject, false)
				arg_594_1.callingController_:SetSelectedState("normal")

				local var_597_11 = arg_594_1:GetWordFromCfg(417161144)
				local var_597_12 = arg_594_1:FormatText(var_597_11.content)

				arg_594_1.text_.text = var_597_12

				LuaForUtil.ClearLinePrefixSymbol(arg_594_1.text_)

				local var_597_13 = 33
				local var_597_14 = utf8.len(var_597_12)
				local var_597_15 = var_597_13 <= 0 and var_597_9 or var_597_9 * (var_597_14 / var_597_13)

				if var_597_15 > 0 and var_597_9 < var_597_15 then
					arg_594_1.talkMaxDuration = var_597_15

					if var_597_15 + var_597_8 > arg_594_1.duration_ then
						arg_594_1.duration_ = var_597_15 + var_597_8
					end
				end

				arg_594_1.text_.text = var_597_12
				arg_594_1.typewritter.percent = 0

				arg_594_1.typewritter:SetDirty()
				arg_594_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161144", "story_v_out_417161.awb") ~= 0 then
					local var_597_16 = manager.audio:GetVoiceLength("story_v_out_417161", "417161144", "story_v_out_417161.awb") / 1000

					if var_597_16 + var_597_8 > arg_594_1.duration_ then
						arg_594_1.duration_ = var_597_16 + var_597_8
					end

					if var_597_11.prefab_name ~= "" and arg_594_1.actors_[var_597_11.prefab_name] ~= nil then
						local var_597_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_594_1.actors_[var_597_11.prefab_name].transform, "story_v_out_417161", "417161144", "story_v_out_417161.awb")

						arg_594_1:RecordAudio("417161144", var_597_17)
						arg_594_1:RecordAudio("417161144", var_597_17)
					else
						arg_594_1:AudioAction("play", "voice", "story_v_out_417161", "417161144", "story_v_out_417161.awb")
					end

					arg_594_1:RecordHistoryTalkVoice("story_v_out_417161", "417161144", "story_v_out_417161.awb")
				end

				arg_594_1:RecordContent(arg_594_1.text_.text)
			end

			local var_597_18 = math.max(var_597_9, arg_594_1.talkMaxDuration)

			if var_597_8 <= arg_594_1.time_ and arg_594_1.time_ < var_597_8 + var_597_18 then
				arg_594_1.typewritter.percent = (arg_594_1.time_ - var_597_8) / var_597_18

				arg_594_1.typewritter:SetDirty()
			end

			if arg_594_1.time_ >= var_597_8 + var_597_18 and arg_594_1.time_ < var_597_8 + var_597_18 + arg_597_0 then
				arg_594_1.typewritter.percent = 1

				arg_594_1.typewritter:SetDirty()
				arg_594_1:ShowNextGo(true)
			end
		end
	end,
	Play417161145 = function(arg_598_0, arg_598_1)
		arg_598_1.time_ = 0
		arg_598_1.frameCnt_ = 0
		arg_598_1.state_ = "playing"
		arg_598_1.curTalkId_ = 417161145
		arg_598_1.duration_ = 4.53

		local var_598_0 = {
			zh = 4.133,
			ja = 4.533
		}
		local var_598_1 = manager.audio:GetLocalizationFlag()

		if var_598_0[var_598_1] ~= nil then
			arg_598_1.duration_ = var_598_0[var_598_1]
		end

		SetActive(arg_598_1.tipsGo_, false)

		function arg_598_1.onSingleLineFinish_()
			arg_598_1.onSingleLineUpdate_ = nil
			arg_598_1.onSingleLineFinish_ = nil
			arg_598_1.state_ = "waiting"
		end

		function arg_598_1.playNext_(arg_600_0)
			if arg_600_0 == 1 then
				arg_598_0:Play417161146(arg_598_1)
			end
		end

		function arg_598_1.onSingleLineUpdate_(arg_601_0)
			local var_601_0 = 0
			local var_601_1 = 0.4

			if var_601_0 < arg_598_1.time_ and arg_598_1.time_ <= var_601_0 + arg_601_0 then
				arg_598_1.talkMaxDuration = 0
				arg_598_1.dialogCg_.alpha = 1

				arg_598_1.dialog_:SetActive(true)
				SetActive(arg_598_1.leftNameGo_, true)

				local var_601_2 = arg_598_1:FormatText(StoryNameCfg[1125].name)

				arg_598_1.leftNameTxt_.text = var_601_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_598_1.leftNameTxt_.transform)

				arg_598_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_598_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_598_1:RecordName(arg_598_1.leftNameTxt_.text)
				SetActive(arg_598_1.iconTrs_.gameObject, false)
				arg_598_1.callingController_:SetSelectedState("normal")

				local var_601_3 = arg_598_1:GetWordFromCfg(417161145)
				local var_601_4 = arg_598_1:FormatText(var_601_3.content)

				arg_598_1.text_.text = var_601_4

				LuaForUtil.ClearLinePrefixSymbol(arg_598_1.text_)

				local var_601_5 = 16
				local var_601_6 = utf8.len(var_601_4)
				local var_601_7 = var_601_5 <= 0 and var_601_1 or var_601_1 * (var_601_6 / var_601_5)

				if var_601_7 > 0 and var_601_1 < var_601_7 then
					arg_598_1.talkMaxDuration = var_601_7

					if var_601_7 + var_601_0 > arg_598_1.duration_ then
						arg_598_1.duration_ = var_601_7 + var_601_0
					end
				end

				arg_598_1.text_.text = var_601_4
				arg_598_1.typewritter.percent = 0

				arg_598_1.typewritter:SetDirty()
				arg_598_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161145", "story_v_out_417161.awb") ~= 0 then
					local var_601_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161145", "story_v_out_417161.awb") / 1000

					if var_601_8 + var_601_0 > arg_598_1.duration_ then
						arg_598_1.duration_ = var_601_8 + var_601_0
					end

					if var_601_3.prefab_name ~= "" and arg_598_1.actors_[var_601_3.prefab_name] ~= nil then
						local var_601_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_598_1.actors_[var_601_3.prefab_name].transform, "story_v_out_417161", "417161145", "story_v_out_417161.awb")

						arg_598_1:RecordAudio("417161145", var_601_9)
						arg_598_1:RecordAudio("417161145", var_601_9)
					else
						arg_598_1:AudioAction("play", "voice", "story_v_out_417161", "417161145", "story_v_out_417161.awb")
					end

					arg_598_1:RecordHistoryTalkVoice("story_v_out_417161", "417161145", "story_v_out_417161.awb")
				end

				arg_598_1:RecordContent(arg_598_1.text_.text)
			end

			local var_601_10 = math.max(var_601_1, arg_598_1.talkMaxDuration)

			if var_601_0 <= arg_598_1.time_ and arg_598_1.time_ < var_601_0 + var_601_10 then
				arg_598_1.typewritter.percent = (arg_598_1.time_ - var_601_0) / var_601_10

				arg_598_1.typewritter:SetDirty()
			end

			if arg_598_1.time_ >= var_601_0 + var_601_10 and arg_598_1.time_ < var_601_0 + var_601_10 + arg_601_0 then
				arg_598_1.typewritter.percent = 1

				arg_598_1.typewritter:SetDirty()
				arg_598_1:ShowNextGo(true)
			end
		end
	end,
	Play417161146 = function(arg_602_0, arg_602_1)
		arg_602_1.time_ = 0
		arg_602_1.frameCnt_ = 0
		arg_602_1.state_ = "playing"
		arg_602_1.curTalkId_ = 417161146
		arg_602_1.duration_ = 10.1

		local var_602_0 = {
			zh = 6.966,
			ja = 10.1
		}
		local var_602_1 = manager.audio:GetLocalizationFlag()

		if var_602_0[var_602_1] ~= nil then
			arg_602_1.duration_ = var_602_0[var_602_1]
		end

		SetActive(arg_602_1.tipsGo_, false)

		function arg_602_1.onSingleLineFinish_()
			arg_602_1.onSingleLineUpdate_ = nil
			arg_602_1.onSingleLineFinish_ = nil
			arg_602_1.state_ = "waiting"
		end

		function arg_602_1.playNext_(arg_604_0)
			if arg_604_0 == 1 then
				arg_602_0:Play417161147(arg_602_1)
			end
		end

		function arg_602_1.onSingleLineUpdate_(arg_605_0)
			local var_605_0 = 4

			if var_605_0 < arg_602_1.time_ and arg_602_1.time_ <= var_605_0 + arg_605_0 then
				arg_602_1.allBtn_.enabled = false
			end

			local var_605_1 = 0.166666666666667

			if arg_602_1.time_ >= var_605_0 + var_605_1 and arg_602_1.time_ < var_605_0 + var_605_1 + arg_605_0 then
				arg_602_1.allBtn_.enabled = true
			end

			local var_605_2 = 2

			if var_605_2 < arg_602_1.time_ and arg_602_1.time_ <= var_605_2 + arg_605_0 then
				local var_605_3 = manager.ui.mainCamera.transform.localPosition
				local var_605_4 = Vector3.New(0, 0, 10) + Vector3.New(var_605_3.x, var_605_3.y, 0)
				local var_605_5 = arg_602_1.bgs_.SS1706

				var_605_5.transform.localPosition = var_605_4
				var_605_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_605_6 = var_605_5:GetComponent("SpriteRenderer")

				if var_605_6 and var_605_6.sprite then
					local var_605_7 = (var_605_5.transform.localPosition - var_605_3).z
					local var_605_8 = manager.ui.mainCameraCom_
					local var_605_9 = 2 * var_605_7 * Mathf.Tan(var_605_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_605_10 = var_605_9 * var_605_8.aspect
					local var_605_11 = var_605_6.sprite.bounds.size.x
					local var_605_12 = var_605_6.sprite.bounds.size.y
					local var_605_13 = var_605_10 / var_605_11
					local var_605_14 = var_605_9 / var_605_12
					local var_605_15 = var_605_14 < var_605_13 and var_605_13 or var_605_14

					var_605_5.transform.localScale = Vector3.New(var_605_15, var_605_15, 0)
				end

				for iter_605_0, iter_605_1 in pairs(arg_602_1.bgs_) do
					if iter_605_0 ~= "SS1706" then
						iter_605_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_605_16 = 0

			if var_605_16 < arg_602_1.time_ and arg_602_1.time_ <= var_605_16 + arg_605_0 then
				arg_602_1.mask_.enabled = true
				arg_602_1.mask_.raycastTarget = true

				arg_602_1:SetGaussion(false)
			end

			local var_605_17 = 2

			if var_605_16 <= arg_602_1.time_ and arg_602_1.time_ < var_605_16 + var_605_17 then
				local var_605_18 = (arg_602_1.time_ - var_605_16) / var_605_17
				local var_605_19 = Color.New(0, 0, 0)

				var_605_19.a = Mathf.Lerp(0, 1, var_605_18)
				arg_602_1.mask_.color = var_605_19
			end

			if arg_602_1.time_ >= var_605_16 + var_605_17 and arg_602_1.time_ < var_605_16 + var_605_17 + arg_605_0 then
				local var_605_20 = Color.New(0, 0, 0)

				var_605_20.a = 1
				arg_602_1.mask_.color = var_605_20
			end

			local var_605_21 = 2

			if var_605_21 < arg_602_1.time_ and arg_602_1.time_ <= var_605_21 + arg_605_0 then
				arg_602_1.mask_.enabled = true
				arg_602_1.mask_.raycastTarget = true

				arg_602_1:SetGaussion(false)
			end

			local var_605_22 = 2

			if var_605_21 <= arg_602_1.time_ and arg_602_1.time_ < var_605_21 + var_605_22 then
				local var_605_23 = (arg_602_1.time_ - var_605_21) / var_605_22
				local var_605_24 = Color.New(0, 0, 0)

				var_605_24.a = Mathf.Lerp(1, 0, var_605_23)
				arg_602_1.mask_.color = var_605_24
			end

			if arg_602_1.time_ >= var_605_21 + var_605_22 and arg_602_1.time_ < var_605_21 + var_605_22 + arg_605_0 then
				local var_605_25 = Color.New(0, 0, 0)
				local var_605_26 = 0

				arg_602_1.mask_.enabled = false
				var_605_25.a = var_605_26
				arg_602_1.mask_.color = var_605_25
			end

			local var_605_27 = arg_602_1.actors_["10128"].transform
			local var_605_28 = 1.966

			if var_605_28 < arg_602_1.time_ and arg_602_1.time_ <= var_605_28 + arg_605_0 then
				arg_602_1.var_.moveOldPos10128 = var_605_27.localPosition
				var_605_27.localScale = Vector3.New(1, 1, 1)

				arg_602_1:CheckSpriteTmpPos("10128", 7)

				local var_605_29 = var_605_27.childCount

				for iter_605_2 = 0, var_605_29 - 1 do
					local var_605_30 = var_605_27:GetChild(iter_605_2)

					if var_605_30.name == "" or not string.find(var_605_30.name, "split") then
						var_605_30.gameObject:SetActive(true)
					else
						var_605_30.gameObject:SetActive(false)
					end
				end
			end

			local var_605_31 = 0.001

			if var_605_28 <= arg_602_1.time_ and arg_602_1.time_ < var_605_28 + var_605_31 then
				local var_605_32 = (arg_602_1.time_ - var_605_28) / var_605_31
				local var_605_33 = Vector3.New(0, -2000, -300)

				var_605_27.localPosition = Vector3.Lerp(arg_602_1.var_.moveOldPos10128, var_605_33, var_605_32)
			end

			if arg_602_1.time_ >= var_605_28 + var_605_31 and arg_602_1.time_ < var_605_28 + var_605_31 + arg_605_0 then
				var_605_27.localPosition = Vector3.New(0, -2000, -300)
			end

			local var_605_34 = arg_602_1.actors_["10111"].transform
			local var_605_35 = 1.966

			if var_605_35 < arg_602_1.time_ and arg_602_1.time_ <= var_605_35 + arg_605_0 then
				arg_602_1.var_.moveOldPos10111 = var_605_34.localPosition
				var_605_34.localScale = Vector3.New(1, 1, 1)

				arg_602_1:CheckSpriteTmpPos("10111", 7)

				local var_605_36 = var_605_34.childCount

				for iter_605_3 = 0, var_605_36 - 1 do
					local var_605_37 = var_605_34:GetChild(iter_605_3)

					if var_605_37.name == "" or not string.find(var_605_37.name, "split") then
						var_605_37.gameObject:SetActive(true)
					else
						var_605_37.gameObject:SetActive(false)
					end
				end
			end

			local var_605_38 = 0.001

			if var_605_35 <= arg_602_1.time_ and arg_602_1.time_ < var_605_35 + var_605_38 then
				local var_605_39 = (arg_602_1.time_ - var_605_35) / var_605_38
				local var_605_40 = Vector3.New(0, -2000, 0)

				var_605_34.localPosition = Vector3.Lerp(arg_602_1.var_.moveOldPos10111, var_605_40, var_605_39)
			end

			if arg_602_1.time_ >= var_605_35 + var_605_38 and arg_602_1.time_ < var_605_35 + var_605_38 + arg_605_0 then
				var_605_34.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_605_41 = 1.93333333333333

			arg_602_1.isInRecall_ = false

			if var_605_41 < arg_602_1.time_ and arg_602_1.time_ <= var_605_41 + arg_605_0 then
				arg_602_1.screenFilterGo_:SetActive(false)

				for iter_605_4, iter_605_5 in pairs(arg_602_1.actors_) do
					local var_605_42 = iter_605_5:GetComponentsInChildren(typeof(Image), true):ToTable()

					for iter_605_6, iter_605_7 in ipairs(var_605_42) do
						if iter_605_7.color.r > 0.51 then
							iter_605_7.color = Color.New(1, 1, 1)
						else
							iter_605_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end
			end

			local var_605_43 = 0.0666666666666667

			if var_605_41 <= arg_602_1.time_ and arg_602_1.time_ < var_605_41 + var_605_43 then
				local var_605_44 = (arg_602_1.time_ - var_605_41) / var_605_43

				arg_602_1.screenFilterEffect_.weight = Mathf.Lerp(1, 0, var_605_44)
			end

			if arg_602_1.time_ >= var_605_41 + var_605_43 and arg_602_1.time_ < var_605_41 + var_605_43 + arg_605_0 then
				arg_602_1.screenFilterEffect_.weight = 0
			end

			if arg_602_1.frameCnt_ <= 1 then
				arg_602_1.dialog_:SetActive(false)
			end

			local var_605_45 = 4
			local var_605_46 = 0.3

			if var_605_45 < arg_602_1.time_ and arg_602_1.time_ <= var_605_45 + arg_605_0 then
				arg_602_1.talkMaxDuration = 0

				arg_602_1.dialog_:SetActive(true)

				local var_605_47 = LeanTween.value(arg_602_1.dialog_, 0, 1, 0.3)

				var_605_47:setOnUpdate(LuaHelper.FloatAction(function(arg_606_0)
					arg_602_1.dialogCg_.alpha = arg_606_0
				end))
				var_605_47:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_602_1.dialog_)
					var_605_47:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_602_1.duration_ = arg_602_1.duration_ + 0.3

				SetActive(arg_602_1.leftNameGo_, true)

				local var_605_48 = arg_602_1:FormatText(StoryNameCfg[1125].name)

				arg_602_1.leftNameTxt_.text = var_605_48

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_602_1.leftNameTxt_.transform)

				arg_602_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_602_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_602_1:RecordName(arg_602_1.leftNameTxt_.text)
				SetActive(arg_602_1.iconTrs_.gameObject, false)
				arg_602_1.callingController_:SetSelectedState("normal")

				local var_605_49 = arg_602_1:GetWordFromCfg(417161146)
				local var_605_50 = arg_602_1:FormatText(var_605_49.content)

				arg_602_1.text_.text = var_605_50

				LuaForUtil.ClearLinePrefixSymbol(arg_602_1.text_)

				local var_605_51 = 12
				local var_605_52 = utf8.len(var_605_50)
				local var_605_53 = var_605_51 <= 0 and var_605_46 or var_605_46 * (var_605_52 / var_605_51)

				if var_605_53 > 0 and var_605_46 < var_605_53 then
					arg_602_1.talkMaxDuration = var_605_53
					var_605_45 = var_605_45 + 0.3

					if var_605_53 + var_605_45 > arg_602_1.duration_ then
						arg_602_1.duration_ = var_605_53 + var_605_45
					end
				end

				arg_602_1.text_.text = var_605_50
				arg_602_1.typewritter.percent = 0

				arg_602_1.typewritter:SetDirty()
				arg_602_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161146", "story_v_out_417161.awb") ~= 0 then
					local var_605_54 = manager.audio:GetVoiceLength("story_v_out_417161", "417161146", "story_v_out_417161.awb") / 1000

					if var_605_54 + var_605_45 > arg_602_1.duration_ then
						arg_602_1.duration_ = var_605_54 + var_605_45
					end

					if var_605_49.prefab_name ~= "" and arg_602_1.actors_[var_605_49.prefab_name] ~= nil then
						local var_605_55 = LuaForUtil.PlayVoiceWithCriLipsync(arg_602_1.actors_[var_605_49.prefab_name].transform, "story_v_out_417161", "417161146", "story_v_out_417161.awb")

						arg_602_1:RecordAudio("417161146", var_605_55)
						arg_602_1:RecordAudio("417161146", var_605_55)
					else
						arg_602_1:AudioAction("play", "voice", "story_v_out_417161", "417161146", "story_v_out_417161.awb")
					end

					arg_602_1:RecordHistoryTalkVoice("story_v_out_417161", "417161146", "story_v_out_417161.awb")
				end

				arg_602_1:RecordContent(arg_602_1.text_.text)
			end

			local var_605_56 = var_605_45 + 0.3
			local var_605_57 = math.max(var_605_46, arg_602_1.talkMaxDuration)

			if var_605_56 <= arg_602_1.time_ and arg_602_1.time_ < var_605_56 + var_605_57 then
				arg_602_1.typewritter.percent = (arg_602_1.time_ - var_605_56) / var_605_57

				arg_602_1.typewritter:SetDirty()
			end

			if arg_602_1.time_ >= var_605_56 + var_605_57 and arg_602_1.time_ < var_605_56 + var_605_57 + arg_605_0 then
				arg_602_1.typewritter.percent = 1

				arg_602_1.typewritter:SetDirty()
				arg_602_1:ShowNextGo(true)
			end
		end
	end,
	Play417161147 = function(arg_608_0, arg_608_1)
		arg_608_1.time_ = 0
		arg_608_1.frameCnt_ = 0
		arg_608_1.state_ = "playing"
		arg_608_1.curTalkId_ = 417161147
		arg_608_1.duration_ = 8.47

		local var_608_0 = {
			zh = 5.166,
			ja = 8.466
		}
		local var_608_1 = manager.audio:GetLocalizationFlag()

		if var_608_0[var_608_1] ~= nil then
			arg_608_1.duration_ = var_608_0[var_608_1]
		end

		SetActive(arg_608_1.tipsGo_, false)

		function arg_608_1.onSingleLineFinish_()
			arg_608_1.onSingleLineUpdate_ = nil
			arg_608_1.onSingleLineFinish_ = nil
			arg_608_1.state_ = "waiting"
		end

		function arg_608_1.playNext_(arg_610_0)
			if arg_610_0 == 1 then
				arg_608_0:Play417161148(arg_608_1)
			end
		end

		function arg_608_1.onSingleLineUpdate_(arg_611_0)
			local var_611_0 = 0
			local var_611_1 = 0.7

			if var_611_0 < arg_608_1.time_ and arg_608_1.time_ <= var_611_0 + arg_611_0 then
				arg_608_1.talkMaxDuration = 0
				arg_608_1.dialogCg_.alpha = 1

				arg_608_1.dialog_:SetActive(true)
				SetActive(arg_608_1.leftNameGo_, true)

				local var_611_2 = arg_608_1:FormatText(StoryNameCfg[595].name)

				arg_608_1.leftNameTxt_.text = var_611_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_608_1.leftNameTxt_.transform)

				arg_608_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_608_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_608_1:RecordName(arg_608_1.leftNameTxt_.text)
				SetActive(arg_608_1.iconTrs_.gameObject, false)
				arg_608_1.callingController_:SetSelectedState("normal")

				local var_611_3 = arg_608_1:GetWordFromCfg(417161147)
				local var_611_4 = arg_608_1:FormatText(var_611_3.content)

				arg_608_1.text_.text = var_611_4

				LuaForUtil.ClearLinePrefixSymbol(arg_608_1.text_)

				local var_611_5 = 28
				local var_611_6 = utf8.len(var_611_4)
				local var_611_7 = var_611_5 <= 0 and var_611_1 or var_611_1 * (var_611_6 / var_611_5)

				if var_611_7 > 0 and var_611_1 < var_611_7 then
					arg_608_1.talkMaxDuration = var_611_7

					if var_611_7 + var_611_0 > arg_608_1.duration_ then
						arg_608_1.duration_ = var_611_7 + var_611_0
					end
				end

				arg_608_1.text_.text = var_611_4
				arg_608_1.typewritter.percent = 0

				arg_608_1.typewritter:SetDirty()
				arg_608_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161147", "story_v_out_417161.awb") ~= 0 then
					local var_611_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161147", "story_v_out_417161.awb") / 1000

					if var_611_8 + var_611_0 > arg_608_1.duration_ then
						arg_608_1.duration_ = var_611_8 + var_611_0
					end

					if var_611_3.prefab_name ~= "" and arg_608_1.actors_[var_611_3.prefab_name] ~= nil then
						local var_611_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_608_1.actors_[var_611_3.prefab_name].transform, "story_v_out_417161", "417161147", "story_v_out_417161.awb")

						arg_608_1:RecordAudio("417161147", var_611_9)
						arg_608_1:RecordAudio("417161147", var_611_9)
					else
						arg_608_1:AudioAction("play", "voice", "story_v_out_417161", "417161147", "story_v_out_417161.awb")
					end

					arg_608_1:RecordHistoryTalkVoice("story_v_out_417161", "417161147", "story_v_out_417161.awb")
				end

				arg_608_1:RecordContent(arg_608_1.text_.text)
			end

			local var_611_10 = math.max(var_611_1, arg_608_1.talkMaxDuration)

			if var_611_0 <= arg_608_1.time_ and arg_608_1.time_ < var_611_0 + var_611_10 then
				arg_608_1.typewritter.percent = (arg_608_1.time_ - var_611_0) / var_611_10

				arg_608_1.typewritter:SetDirty()
			end

			if arg_608_1.time_ >= var_611_0 + var_611_10 and arg_608_1.time_ < var_611_0 + var_611_10 + arg_611_0 then
				arg_608_1.typewritter.percent = 1

				arg_608_1.typewritter:SetDirty()
				arg_608_1:ShowNextGo(true)
			end
		end
	end,
	Play417161148 = function(arg_612_0, arg_612_1)
		arg_612_1.time_ = 0
		arg_612_1.frameCnt_ = 0
		arg_612_1.state_ = "playing"
		arg_612_1.curTalkId_ = 417161148
		arg_612_1.duration_ = 2.43

		local var_612_0 = {
			zh = 0.999999999999,
			ja = 2.433
		}
		local var_612_1 = manager.audio:GetLocalizationFlag()

		if var_612_0[var_612_1] ~= nil then
			arg_612_1.duration_ = var_612_0[var_612_1]
		end

		SetActive(arg_612_1.tipsGo_, false)

		function arg_612_1.onSingleLineFinish_()
			arg_612_1.onSingleLineUpdate_ = nil
			arg_612_1.onSingleLineFinish_ = nil
			arg_612_1.state_ = "waiting"
		end

		function arg_612_1.playNext_(arg_614_0)
			if arg_614_0 == 1 then
				arg_612_0:Play417161149(arg_612_1)
			end
		end

		function arg_612_1.onSingleLineUpdate_(arg_615_0)
			local var_615_0 = 0
			local var_615_1 = 0.125

			if var_615_0 < arg_612_1.time_ and arg_612_1.time_ <= var_615_0 + arg_615_0 then
				arg_612_1.talkMaxDuration = 0
				arg_612_1.dialogCg_.alpha = 1

				arg_612_1.dialog_:SetActive(true)
				SetActive(arg_612_1.leftNameGo_, true)

				local var_615_2 = arg_612_1:FormatText(StoryNameCfg[1125].name)

				arg_612_1.leftNameTxt_.text = var_615_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_612_1.leftNameTxt_.transform)

				arg_612_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_612_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_612_1:RecordName(arg_612_1.leftNameTxt_.text)
				SetActive(arg_612_1.iconTrs_.gameObject, false)
				arg_612_1.callingController_:SetSelectedState("normal")

				local var_615_3 = arg_612_1:GetWordFromCfg(417161148)
				local var_615_4 = arg_612_1:FormatText(var_615_3.content)

				arg_612_1.text_.text = var_615_4

				LuaForUtil.ClearLinePrefixSymbol(arg_612_1.text_)

				local var_615_5 = 5
				local var_615_6 = utf8.len(var_615_4)
				local var_615_7 = var_615_5 <= 0 and var_615_1 or var_615_1 * (var_615_6 / var_615_5)

				if var_615_7 > 0 and var_615_1 < var_615_7 then
					arg_612_1.talkMaxDuration = var_615_7

					if var_615_7 + var_615_0 > arg_612_1.duration_ then
						arg_612_1.duration_ = var_615_7 + var_615_0
					end
				end

				arg_612_1.text_.text = var_615_4
				arg_612_1.typewritter.percent = 0

				arg_612_1.typewritter:SetDirty()
				arg_612_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161148", "story_v_out_417161.awb") ~= 0 then
					local var_615_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161148", "story_v_out_417161.awb") / 1000

					if var_615_8 + var_615_0 > arg_612_1.duration_ then
						arg_612_1.duration_ = var_615_8 + var_615_0
					end

					if var_615_3.prefab_name ~= "" and arg_612_1.actors_[var_615_3.prefab_name] ~= nil then
						local var_615_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_612_1.actors_[var_615_3.prefab_name].transform, "story_v_out_417161", "417161148", "story_v_out_417161.awb")

						arg_612_1:RecordAudio("417161148", var_615_9)
						arg_612_1:RecordAudio("417161148", var_615_9)
					else
						arg_612_1:AudioAction("play", "voice", "story_v_out_417161", "417161148", "story_v_out_417161.awb")
					end

					arg_612_1:RecordHistoryTalkVoice("story_v_out_417161", "417161148", "story_v_out_417161.awb")
				end

				arg_612_1:RecordContent(arg_612_1.text_.text)
			end

			local var_615_10 = math.max(var_615_1, arg_612_1.talkMaxDuration)

			if var_615_0 <= arg_612_1.time_ and arg_612_1.time_ < var_615_0 + var_615_10 then
				arg_612_1.typewritter.percent = (arg_612_1.time_ - var_615_0) / var_615_10

				arg_612_1.typewritter:SetDirty()
			end

			if arg_612_1.time_ >= var_615_0 + var_615_10 and arg_612_1.time_ < var_615_0 + var_615_10 + arg_615_0 then
				arg_612_1.typewritter.percent = 1

				arg_612_1.typewritter:SetDirty()
				arg_612_1:ShowNextGo(true)
			end
		end
	end,
	Play417161149 = function(arg_616_0, arg_616_1)
		arg_616_1.time_ = 0
		arg_616_1.frameCnt_ = 0
		arg_616_1.state_ = "playing"
		arg_616_1.curTalkId_ = 417161149
		arg_616_1.duration_ = 5

		SetActive(arg_616_1.tipsGo_, false)

		function arg_616_1.onSingleLineFinish_()
			arg_616_1.onSingleLineUpdate_ = nil
			arg_616_1.onSingleLineFinish_ = nil
			arg_616_1.state_ = "waiting"
		end

		function arg_616_1.playNext_(arg_618_0)
			if arg_618_0 == 1 then
				arg_616_0:Play417161150(arg_616_1)
			end
		end

		function arg_616_1.onSingleLineUpdate_(arg_619_0)
			local var_619_0 = 0
			local var_619_1 = 0.75

			if var_619_0 < arg_616_1.time_ and arg_616_1.time_ <= var_619_0 + arg_619_0 then
				arg_616_1.talkMaxDuration = 0
				arg_616_1.dialogCg_.alpha = 1

				arg_616_1.dialog_:SetActive(true)
				SetActive(arg_616_1.leftNameGo_, false)

				arg_616_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_616_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_616_1:RecordName(arg_616_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_616_1.iconTrs_.gameObject, false)
				arg_616_1.callingController_:SetSelectedState("normal")

				local var_619_2 = arg_616_1:GetWordFromCfg(417161149)
				local var_619_3 = arg_616_1:FormatText(var_619_2.content)

				arg_616_1.text_.text = var_619_3

				LuaForUtil.ClearLinePrefixSymbol(arg_616_1.text_)

				local var_619_4 = 30
				local var_619_5 = utf8.len(var_619_3)
				local var_619_6 = var_619_4 <= 0 and var_619_1 or var_619_1 * (var_619_5 / var_619_4)

				if var_619_6 > 0 and var_619_1 < var_619_6 then
					arg_616_1.talkMaxDuration = var_619_6

					if var_619_6 + var_619_0 > arg_616_1.duration_ then
						arg_616_1.duration_ = var_619_6 + var_619_0
					end
				end

				arg_616_1.text_.text = var_619_3
				arg_616_1.typewritter.percent = 0

				arg_616_1.typewritter:SetDirty()
				arg_616_1:ShowNextGo(false)
				arg_616_1:RecordContent(arg_616_1.text_.text)
			end

			local var_619_7 = math.max(var_619_1, arg_616_1.talkMaxDuration)

			if var_619_0 <= arg_616_1.time_ and arg_616_1.time_ < var_619_0 + var_619_7 then
				arg_616_1.typewritter.percent = (arg_616_1.time_ - var_619_0) / var_619_7

				arg_616_1.typewritter:SetDirty()
			end

			if arg_616_1.time_ >= var_619_0 + var_619_7 and arg_616_1.time_ < var_619_0 + var_619_7 + arg_619_0 then
				arg_616_1.typewritter.percent = 1

				arg_616_1.typewritter:SetDirty()
				arg_616_1:ShowNextGo(true)
			end
		end
	end,
	Play417161150 = function(arg_620_0, arg_620_1)
		arg_620_1.time_ = 0
		arg_620_1.frameCnt_ = 0
		arg_620_1.state_ = "playing"
		arg_620_1.curTalkId_ = 417161150
		arg_620_1.duration_ = 2.3

		local var_620_0 = {
			zh = 1.533,
			ja = 2.3
		}
		local var_620_1 = manager.audio:GetLocalizationFlag()

		if var_620_0[var_620_1] ~= nil then
			arg_620_1.duration_ = var_620_0[var_620_1]
		end

		SetActive(arg_620_1.tipsGo_, false)

		function arg_620_1.onSingleLineFinish_()
			arg_620_1.onSingleLineUpdate_ = nil
			arg_620_1.onSingleLineFinish_ = nil
			arg_620_1.state_ = "waiting"
		end

		function arg_620_1.playNext_(arg_622_0)
			if arg_622_0 == 1 then
				arg_620_0:Play417161151(arg_620_1)
			end
		end

		function arg_620_1.onSingleLineUpdate_(arg_623_0)
			local var_623_0 = 0
			local var_623_1 = 0.175

			if var_623_0 < arg_620_1.time_ and arg_620_1.time_ <= var_623_0 + arg_623_0 then
				arg_620_1.talkMaxDuration = 0
				arg_620_1.dialogCg_.alpha = 1

				arg_620_1.dialog_:SetActive(true)
				SetActive(arg_620_1.leftNameGo_, true)

				local var_623_2 = arg_620_1:FormatText(StoryNameCfg[595].name)

				arg_620_1.leftNameTxt_.text = var_623_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_620_1.leftNameTxt_.transform)

				arg_620_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_620_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_620_1:RecordName(arg_620_1.leftNameTxt_.text)
				SetActive(arg_620_1.iconTrs_.gameObject, false)
				arg_620_1.callingController_:SetSelectedState("normal")

				local var_623_3 = arg_620_1:GetWordFromCfg(417161150)
				local var_623_4 = arg_620_1:FormatText(var_623_3.content)

				arg_620_1.text_.text = var_623_4

				LuaForUtil.ClearLinePrefixSymbol(arg_620_1.text_)

				local var_623_5 = 7
				local var_623_6 = utf8.len(var_623_4)
				local var_623_7 = var_623_5 <= 0 and var_623_1 or var_623_1 * (var_623_6 / var_623_5)

				if var_623_7 > 0 and var_623_1 < var_623_7 then
					arg_620_1.talkMaxDuration = var_623_7

					if var_623_7 + var_623_0 > arg_620_1.duration_ then
						arg_620_1.duration_ = var_623_7 + var_623_0
					end
				end

				arg_620_1.text_.text = var_623_4
				arg_620_1.typewritter.percent = 0

				arg_620_1.typewritter:SetDirty()
				arg_620_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161150", "story_v_out_417161.awb") ~= 0 then
					local var_623_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161150", "story_v_out_417161.awb") / 1000

					if var_623_8 + var_623_0 > arg_620_1.duration_ then
						arg_620_1.duration_ = var_623_8 + var_623_0
					end

					if var_623_3.prefab_name ~= "" and arg_620_1.actors_[var_623_3.prefab_name] ~= nil then
						local var_623_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_620_1.actors_[var_623_3.prefab_name].transform, "story_v_out_417161", "417161150", "story_v_out_417161.awb")

						arg_620_1:RecordAudio("417161150", var_623_9)
						arg_620_1:RecordAudio("417161150", var_623_9)
					else
						arg_620_1:AudioAction("play", "voice", "story_v_out_417161", "417161150", "story_v_out_417161.awb")
					end

					arg_620_1:RecordHistoryTalkVoice("story_v_out_417161", "417161150", "story_v_out_417161.awb")
				end

				arg_620_1:RecordContent(arg_620_1.text_.text)
			end

			local var_623_10 = math.max(var_623_1, arg_620_1.talkMaxDuration)

			if var_623_0 <= arg_620_1.time_ and arg_620_1.time_ < var_623_0 + var_623_10 then
				arg_620_1.typewritter.percent = (arg_620_1.time_ - var_623_0) / var_623_10

				arg_620_1.typewritter:SetDirty()
			end

			if arg_620_1.time_ >= var_623_0 + var_623_10 and arg_620_1.time_ < var_623_0 + var_623_10 + arg_623_0 then
				arg_620_1.typewritter.percent = 1

				arg_620_1.typewritter:SetDirty()
				arg_620_1:ShowNextGo(true)
			end
		end
	end,
	Play417161151 = function(arg_624_0, arg_624_1)
		arg_624_1.time_ = 0
		arg_624_1.frameCnt_ = 0
		arg_624_1.state_ = "playing"
		arg_624_1.curTalkId_ = 417161151
		arg_624_1.duration_ = 4

		local var_624_0 = {
			zh = 2.9,
			ja = 4
		}
		local var_624_1 = manager.audio:GetLocalizationFlag()

		if var_624_0[var_624_1] ~= nil then
			arg_624_1.duration_ = var_624_0[var_624_1]
		end

		SetActive(arg_624_1.tipsGo_, false)

		function arg_624_1.onSingleLineFinish_()
			arg_624_1.onSingleLineUpdate_ = nil
			arg_624_1.onSingleLineFinish_ = nil
			arg_624_1.state_ = "waiting"
		end

		function arg_624_1.playNext_(arg_626_0)
			if arg_626_0 == 1 then
				arg_624_0:Play417161152(arg_624_1)
			end
		end

		function arg_624_1.onSingleLineUpdate_(arg_627_0)
			local var_627_0 = 0
			local var_627_1 = 0.3

			if var_627_0 < arg_624_1.time_ and arg_624_1.time_ <= var_627_0 + arg_627_0 then
				arg_624_1.talkMaxDuration = 0
				arg_624_1.dialogCg_.alpha = 1

				arg_624_1.dialog_:SetActive(true)
				SetActive(arg_624_1.leftNameGo_, true)

				local var_627_2 = arg_624_1:FormatText(StoryNameCfg[1125].name)

				arg_624_1.leftNameTxt_.text = var_627_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_624_1.leftNameTxt_.transform)

				arg_624_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_624_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_624_1:RecordName(arg_624_1.leftNameTxt_.text)
				SetActive(arg_624_1.iconTrs_.gameObject, false)
				arg_624_1.callingController_:SetSelectedState("normal")

				local var_627_3 = arg_624_1:GetWordFromCfg(417161151)
				local var_627_4 = arg_624_1:FormatText(var_627_3.content)

				arg_624_1.text_.text = var_627_4

				LuaForUtil.ClearLinePrefixSymbol(arg_624_1.text_)

				local var_627_5 = 12
				local var_627_6 = utf8.len(var_627_4)
				local var_627_7 = var_627_5 <= 0 and var_627_1 or var_627_1 * (var_627_6 / var_627_5)

				if var_627_7 > 0 and var_627_1 < var_627_7 then
					arg_624_1.talkMaxDuration = var_627_7

					if var_627_7 + var_627_0 > arg_624_1.duration_ then
						arg_624_1.duration_ = var_627_7 + var_627_0
					end
				end

				arg_624_1.text_.text = var_627_4
				arg_624_1.typewritter.percent = 0

				arg_624_1.typewritter:SetDirty()
				arg_624_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161151", "story_v_out_417161.awb") ~= 0 then
					local var_627_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161151", "story_v_out_417161.awb") / 1000

					if var_627_8 + var_627_0 > arg_624_1.duration_ then
						arg_624_1.duration_ = var_627_8 + var_627_0
					end

					if var_627_3.prefab_name ~= "" and arg_624_1.actors_[var_627_3.prefab_name] ~= nil then
						local var_627_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_624_1.actors_[var_627_3.prefab_name].transform, "story_v_out_417161", "417161151", "story_v_out_417161.awb")

						arg_624_1:RecordAudio("417161151", var_627_9)
						arg_624_1:RecordAudio("417161151", var_627_9)
					else
						arg_624_1:AudioAction("play", "voice", "story_v_out_417161", "417161151", "story_v_out_417161.awb")
					end

					arg_624_1:RecordHistoryTalkVoice("story_v_out_417161", "417161151", "story_v_out_417161.awb")
				end

				arg_624_1:RecordContent(arg_624_1.text_.text)
			end

			local var_627_10 = math.max(var_627_1, arg_624_1.talkMaxDuration)

			if var_627_0 <= arg_624_1.time_ and arg_624_1.time_ < var_627_0 + var_627_10 then
				arg_624_1.typewritter.percent = (arg_624_1.time_ - var_627_0) / var_627_10

				arg_624_1.typewritter:SetDirty()
			end

			if arg_624_1.time_ >= var_627_0 + var_627_10 and arg_624_1.time_ < var_627_0 + var_627_10 + arg_627_0 then
				arg_624_1.typewritter.percent = 1

				arg_624_1.typewritter:SetDirty()
				arg_624_1:ShowNextGo(true)
			end
		end
	end,
	Play417161152 = function(arg_628_0, arg_628_1)
		arg_628_1.time_ = 0
		arg_628_1.frameCnt_ = 0
		arg_628_1.state_ = "playing"
		arg_628_1.curTalkId_ = 417161152
		arg_628_1.duration_ = 3.4

		local var_628_0 = {
			zh = 1.966,
			ja = 3.4
		}
		local var_628_1 = manager.audio:GetLocalizationFlag()

		if var_628_0[var_628_1] ~= nil then
			arg_628_1.duration_ = var_628_0[var_628_1]
		end

		SetActive(arg_628_1.tipsGo_, false)

		function arg_628_1.onSingleLineFinish_()
			arg_628_1.onSingleLineUpdate_ = nil
			arg_628_1.onSingleLineFinish_ = nil
			arg_628_1.state_ = "waiting"
		end

		function arg_628_1.playNext_(arg_630_0)
			if arg_630_0 == 1 then
				arg_628_0:Play417161153(arg_628_1)
			end
		end

		function arg_628_1.onSingleLineUpdate_(arg_631_0)
			local var_631_0 = 0
			local var_631_1 = 0.2

			if var_631_0 < arg_628_1.time_ and arg_628_1.time_ <= var_631_0 + arg_631_0 then
				arg_628_1.talkMaxDuration = 0
				arg_628_1.dialogCg_.alpha = 1

				arg_628_1.dialog_:SetActive(true)
				SetActive(arg_628_1.leftNameGo_, true)

				local var_631_2 = arg_628_1:FormatText(StoryNameCfg[595].name)

				arg_628_1.leftNameTxt_.text = var_631_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_628_1.leftNameTxt_.transform)

				arg_628_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_628_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_628_1:RecordName(arg_628_1.leftNameTxt_.text)
				SetActive(arg_628_1.iconTrs_.gameObject, false)
				arg_628_1.callingController_:SetSelectedState("normal")

				local var_631_3 = arg_628_1:GetWordFromCfg(417161152)
				local var_631_4 = arg_628_1:FormatText(var_631_3.content)

				arg_628_1.text_.text = var_631_4

				LuaForUtil.ClearLinePrefixSymbol(arg_628_1.text_)

				local var_631_5 = 8
				local var_631_6 = utf8.len(var_631_4)
				local var_631_7 = var_631_5 <= 0 and var_631_1 or var_631_1 * (var_631_6 / var_631_5)

				if var_631_7 > 0 and var_631_1 < var_631_7 then
					arg_628_1.talkMaxDuration = var_631_7

					if var_631_7 + var_631_0 > arg_628_1.duration_ then
						arg_628_1.duration_ = var_631_7 + var_631_0
					end
				end

				arg_628_1.text_.text = var_631_4
				arg_628_1.typewritter.percent = 0

				arg_628_1.typewritter:SetDirty()
				arg_628_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161152", "story_v_out_417161.awb") ~= 0 then
					local var_631_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161152", "story_v_out_417161.awb") / 1000

					if var_631_8 + var_631_0 > arg_628_1.duration_ then
						arg_628_1.duration_ = var_631_8 + var_631_0
					end

					if var_631_3.prefab_name ~= "" and arg_628_1.actors_[var_631_3.prefab_name] ~= nil then
						local var_631_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_628_1.actors_[var_631_3.prefab_name].transform, "story_v_out_417161", "417161152", "story_v_out_417161.awb")

						arg_628_1:RecordAudio("417161152", var_631_9)
						arg_628_1:RecordAudio("417161152", var_631_9)
					else
						arg_628_1:AudioAction("play", "voice", "story_v_out_417161", "417161152", "story_v_out_417161.awb")
					end

					arg_628_1:RecordHistoryTalkVoice("story_v_out_417161", "417161152", "story_v_out_417161.awb")
				end

				arg_628_1:RecordContent(arg_628_1.text_.text)
			end

			local var_631_10 = math.max(var_631_1, arg_628_1.talkMaxDuration)

			if var_631_0 <= arg_628_1.time_ and arg_628_1.time_ < var_631_0 + var_631_10 then
				arg_628_1.typewritter.percent = (arg_628_1.time_ - var_631_0) / var_631_10

				arg_628_1.typewritter:SetDirty()
			end

			if arg_628_1.time_ >= var_631_0 + var_631_10 and arg_628_1.time_ < var_631_0 + var_631_10 + arg_631_0 then
				arg_628_1.typewritter.percent = 1

				arg_628_1.typewritter:SetDirty()
				arg_628_1:ShowNextGo(true)
			end
		end
	end,
	Play417161153 = function(arg_632_0, arg_632_1)
		arg_632_1.time_ = 0
		arg_632_1.frameCnt_ = 0
		arg_632_1.state_ = "playing"
		arg_632_1.curTalkId_ = 417161153
		arg_632_1.duration_ = 8.13

		local var_632_0 = {
			zh = 8.133,
			ja = 6.8
		}
		local var_632_1 = manager.audio:GetLocalizationFlag()

		if var_632_0[var_632_1] ~= nil then
			arg_632_1.duration_ = var_632_0[var_632_1]
		end

		SetActive(arg_632_1.tipsGo_, false)

		function arg_632_1.onSingleLineFinish_()
			arg_632_1.onSingleLineUpdate_ = nil
			arg_632_1.onSingleLineFinish_ = nil
			arg_632_1.state_ = "waiting"
		end

		function arg_632_1.playNext_(arg_634_0)
			if arg_634_0 == 1 then
				arg_632_0:Play417161154(arg_632_1)
			end
		end

		function arg_632_1.onSingleLineUpdate_(arg_635_0)
			local var_635_0 = 0
			local var_635_1 = 0.925

			if var_635_0 < arg_632_1.time_ and arg_632_1.time_ <= var_635_0 + arg_635_0 then
				arg_632_1.talkMaxDuration = 0
				arg_632_1.dialogCg_.alpha = 1

				arg_632_1.dialog_:SetActive(true)
				SetActive(arg_632_1.leftNameGo_, true)

				local var_635_2 = arg_632_1:FormatText(StoryNameCfg[1125].name)

				arg_632_1.leftNameTxt_.text = var_635_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_632_1.leftNameTxt_.transform)

				arg_632_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_632_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_632_1:RecordName(arg_632_1.leftNameTxt_.text)
				SetActive(arg_632_1.iconTrs_.gameObject, false)
				arg_632_1.callingController_:SetSelectedState("normal")

				local var_635_3 = arg_632_1:GetWordFromCfg(417161153)
				local var_635_4 = arg_632_1:FormatText(var_635_3.content)

				arg_632_1.text_.text = var_635_4

				LuaForUtil.ClearLinePrefixSymbol(arg_632_1.text_)

				local var_635_5 = 37
				local var_635_6 = utf8.len(var_635_4)
				local var_635_7 = var_635_5 <= 0 and var_635_1 or var_635_1 * (var_635_6 / var_635_5)

				if var_635_7 > 0 and var_635_1 < var_635_7 then
					arg_632_1.talkMaxDuration = var_635_7

					if var_635_7 + var_635_0 > arg_632_1.duration_ then
						arg_632_1.duration_ = var_635_7 + var_635_0
					end
				end

				arg_632_1.text_.text = var_635_4
				arg_632_1.typewritter.percent = 0

				arg_632_1.typewritter:SetDirty()
				arg_632_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161153", "story_v_out_417161.awb") ~= 0 then
					local var_635_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161153", "story_v_out_417161.awb") / 1000

					if var_635_8 + var_635_0 > arg_632_1.duration_ then
						arg_632_1.duration_ = var_635_8 + var_635_0
					end

					if var_635_3.prefab_name ~= "" and arg_632_1.actors_[var_635_3.prefab_name] ~= nil then
						local var_635_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_632_1.actors_[var_635_3.prefab_name].transform, "story_v_out_417161", "417161153", "story_v_out_417161.awb")

						arg_632_1:RecordAudio("417161153", var_635_9)
						arg_632_1:RecordAudio("417161153", var_635_9)
					else
						arg_632_1:AudioAction("play", "voice", "story_v_out_417161", "417161153", "story_v_out_417161.awb")
					end

					arg_632_1:RecordHistoryTalkVoice("story_v_out_417161", "417161153", "story_v_out_417161.awb")
				end

				arg_632_1:RecordContent(arg_632_1.text_.text)
			end

			local var_635_10 = math.max(var_635_1, arg_632_1.talkMaxDuration)

			if var_635_0 <= arg_632_1.time_ and arg_632_1.time_ < var_635_0 + var_635_10 then
				arg_632_1.typewritter.percent = (arg_632_1.time_ - var_635_0) / var_635_10

				arg_632_1.typewritter:SetDirty()
			end

			if arg_632_1.time_ >= var_635_0 + var_635_10 and arg_632_1.time_ < var_635_0 + var_635_10 + arg_635_0 then
				arg_632_1.typewritter.percent = 1

				arg_632_1.typewritter:SetDirty()
				arg_632_1:ShowNextGo(true)
			end
		end
	end,
	Play417161154 = function(arg_636_0, arg_636_1)
		arg_636_1.time_ = 0
		arg_636_1.frameCnt_ = 0
		arg_636_1.state_ = "playing"
		arg_636_1.curTalkId_ = 417161154
		arg_636_1.duration_ = 9.43

		local var_636_0 = {
			zh = 8.866,
			ja = 9.433
		}
		local var_636_1 = manager.audio:GetLocalizationFlag()

		if var_636_0[var_636_1] ~= nil then
			arg_636_1.duration_ = var_636_0[var_636_1]
		end

		SetActive(arg_636_1.tipsGo_, false)

		function arg_636_1.onSingleLineFinish_()
			arg_636_1.onSingleLineUpdate_ = nil
			arg_636_1.onSingleLineFinish_ = nil
			arg_636_1.state_ = "waiting"
		end

		function arg_636_1.playNext_(arg_638_0)
			if arg_638_0 == 1 then
				arg_636_0:Play417161155(arg_636_1)
			end
		end

		function arg_636_1.onSingleLineUpdate_(arg_639_0)
			local var_639_0 = 0
			local var_639_1 = 1.05

			if var_639_0 < arg_636_1.time_ and arg_636_1.time_ <= var_639_0 + arg_639_0 then
				arg_636_1.talkMaxDuration = 0
				arg_636_1.dialogCg_.alpha = 1

				arg_636_1.dialog_:SetActive(true)
				SetActive(arg_636_1.leftNameGo_, true)

				local var_639_2 = arg_636_1:FormatText(StoryNameCfg[1125].name)

				arg_636_1.leftNameTxt_.text = var_639_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_636_1.leftNameTxt_.transform)

				arg_636_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_636_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_636_1:RecordName(arg_636_1.leftNameTxt_.text)
				SetActive(arg_636_1.iconTrs_.gameObject, false)
				arg_636_1.callingController_:SetSelectedState("normal")

				local var_639_3 = arg_636_1:GetWordFromCfg(417161154)
				local var_639_4 = arg_636_1:FormatText(var_639_3.content)

				arg_636_1.text_.text = var_639_4

				LuaForUtil.ClearLinePrefixSymbol(arg_636_1.text_)

				local var_639_5 = 42
				local var_639_6 = utf8.len(var_639_4)
				local var_639_7 = var_639_5 <= 0 and var_639_1 or var_639_1 * (var_639_6 / var_639_5)

				if var_639_7 > 0 and var_639_1 < var_639_7 then
					arg_636_1.talkMaxDuration = var_639_7

					if var_639_7 + var_639_0 > arg_636_1.duration_ then
						arg_636_1.duration_ = var_639_7 + var_639_0
					end
				end

				arg_636_1.text_.text = var_639_4
				arg_636_1.typewritter.percent = 0

				arg_636_1.typewritter:SetDirty()
				arg_636_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161154", "story_v_out_417161.awb") ~= 0 then
					local var_639_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161154", "story_v_out_417161.awb") / 1000

					if var_639_8 + var_639_0 > arg_636_1.duration_ then
						arg_636_1.duration_ = var_639_8 + var_639_0
					end

					if var_639_3.prefab_name ~= "" and arg_636_1.actors_[var_639_3.prefab_name] ~= nil then
						local var_639_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_636_1.actors_[var_639_3.prefab_name].transform, "story_v_out_417161", "417161154", "story_v_out_417161.awb")

						arg_636_1:RecordAudio("417161154", var_639_9)
						arg_636_1:RecordAudio("417161154", var_639_9)
					else
						arg_636_1:AudioAction("play", "voice", "story_v_out_417161", "417161154", "story_v_out_417161.awb")
					end

					arg_636_1:RecordHistoryTalkVoice("story_v_out_417161", "417161154", "story_v_out_417161.awb")
				end

				arg_636_1:RecordContent(arg_636_1.text_.text)
			end

			local var_639_10 = math.max(var_639_1, arg_636_1.talkMaxDuration)

			if var_639_0 <= arg_636_1.time_ and arg_636_1.time_ < var_639_0 + var_639_10 then
				arg_636_1.typewritter.percent = (arg_636_1.time_ - var_639_0) / var_639_10

				arg_636_1.typewritter:SetDirty()
			end

			if arg_636_1.time_ >= var_639_0 + var_639_10 and arg_636_1.time_ < var_639_0 + var_639_10 + arg_639_0 then
				arg_636_1.typewritter.percent = 1

				arg_636_1.typewritter:SetDirty()
				arg_636_1:ShowNextGo(true)
			end
		end
	end,
	Play417161155 = function(arg_640_0, arg_640_1)
		arg_640_1.time_ = 0
		arg_640_1.frameCnt_ = 0
		arg_640_1.state_ = "playing"
		arg_640_1.curTalkId_ = 417161155
		arg_640_1.duration_ = 5

		SetActive(arg_640_1.tipsGo_, false)

		function arg_640_1.onSingleLineFinish_()
			arg_640_1.onSingleLineUpdate_ = nil
			arg_640_1.onSingleLineFinish_ = nil
			arg_640_1.state_ = "waiting"
		end

		function arg_640_1.playNext_(arg_642_0)
			if arg_642_0 == 1 then
				arg_640_0:Play417161156(arg_640_1)
			end
		end

		function arg_640_1.onSingleLineUpdate_(arg_643_0)
			local var_643_0 = 0
			local var_643_1 = 0.875

			if var_643_0 < arg_640_1.time_ and arg_640_1.time_ <= var_643_0 + arg_643_0 then
				arg_640_1.talkMaxDuration = 0
				arg_640_1.dialogCg_.alpha = 1

				arg_640_1.dialog_:SetActive(true)
				SetActive(arg_640_1.leftNameGo_, false)

				arg_640_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_640_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_640_1:RecordName(arg_640_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_640_1.iconTrs_.gameObject, false)
				arg_640_1.callingController_:SetSelectedState("normal")

				local var_643_2 = arg_640_1:GetWordFromCfg(417161155)
				local var_643_3 = arg_640_1:FormatText(var_643_2.content)

				arg_640_1.text_.text = var_643_3

				LuaForUtil.ClearLinePrefixSymbol(arg_640_1.text_)

				local var_643_4 = 35
				local var_643_5 = utf8.len(var_643_3)
				local var_643_6 = var_643_4 <= 0 and var_643_1 or var_643_1 * (var_643_5 / var_643_4)

				if var_643_6 > 0 and var_643_1 < var_643_6 then
					arg_640_1.talkMaxDuration = var_643_6

					if var_643_6 + var_643_0 > arg_640_1.duration_ then
						arg_640_1.duration_ = var_643_6 + var_643_0
					end
				end

				arg_640_1.text_.text = var_643_3
				arg_640_1.typewritter.percent = 0

				arg_640_1.typewritter:SetDirty()
				arg_640_1:ShowNextGo(false)
				arg_640_1:RecordContent(arg_640_1.text_.text)
			end

			local var_643_7 = math.max(var_643_1, arg_640_1.talkMaxDuration)

			if var_643_0 <= arg_640_1.time_ and arg_640_1.time_ < var_643_0 + var_643_7 then
				arg_640_1.typewritter.percent = (arg_640_1.time_ - var_643_0) / var_643_7

				arg_640_1.typewritter:SetDirty()
			end

			if arg_640_1.time_ >= var_643_0 + var_643_7 and arg_640_1.time_ < var_643_0 + var_643_7 + arg_643_0 then
				arg_640_1.typewritter.percent = 1

				arg_640_1.typewritter:SetDirty()
				arg_640_1:ShowNextGo(true)
			end
		end
	end,
	Play417161156 = function(arg_644_0, arg_644_1)
		arg_644_1.time_ = 0
		arg_644_1.frameCnt_ = 0
		arg_644_1.state_ = "playing"
		arg_644_1.curTalkId_ = 417161156
		arg_644_1.duration_ = 5

		local var_644_0 = {
			zh = 4.433,
			ja = 5
		}
		local var_644_1 = manager.audio:GetLocalizationFlag()

		if var_644_0[var_644_1] ~= nil then
			arg_644_1.duration_ = var_644_0[var_644_1]
		end

		SetActive(arg_644_1.tipsGo_, false)

		function arg_644_1.onSingleLineFinish_()
			arg_644_1.onSingleLineUpdate_ = nil
			arg_644_1.onSingleLineFinish_ = nil
			arg_644_1.state_ = "waiting"
		end

		function arg_644_1.playNext_(arg_646_0)
			if arg_646_0 == 1 then
				arg_644_0:Play417161157(arg_644_1)
			end
		end

		function arg_644_1.onSingleLineUpdate_(arg_647_0)
			local var_647_0 = 0
			local var_647_1 = 0.625

			if var_647_0 < arg_644_1.time_ and arg_644_1.time_ <= var_647_0 + arg_647_0 then
				arg_644_1.talkMaxDuration = 0
				arg_644_1.dialogCg_.alpha = 1

				arg_644_1.dialog_:SetActive(true)
				SetActive(arg_644_1.leftNameGo_, true)

				local var_647_2 = arg_644_1:FormatText(StoryNameCfg[595].name)

				arg_644_1.leftNameTxt_.text = var_647_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_644_1.leftNameTxt_.transform)

				arg_644_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_644_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_644_1:RecordName(arg_644_1.leftNameTxt_.text)
				SetActive(arg_644_1.iconTrs_.gameObject, false)
				arg_644_1.callingController_:SetSelectedState("normal")

				local var_647_3 = arg_644_1:GetWordFromCfg(417161156)
				local var_647_4 = arg_644_1:FormatText(var_647_3.content)

				arg_644_1.text_.text = var_647_4

				LuaForUtil.ClearLinePrefixSymbol(arg_644_1.text_)

				local var_647_5 = 25
				local var_647_6 = utf8.len(var_647_4)
				local var_647_7 = var_647_5 <= 0 and var_647_1 or var_647_1 * (var_647_6 / var_647_5)

				if var_647_7 > 0 and var_647_1 < var_647_7 then
					arg_644_1.talkMaxDuration = var_647_7

					if var_647_7 + var_647_0 > arg_644_1.duration_ then
						arg_644_1.duration_ = var_647_7 + var_647_0
					end
				end

				arg_644_1.text_.text = var_647_4
				arg_644_1.typewritter.percent = 0

				arg_644_1.typewritter:SetDirty()
				arg_644_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161156", "story_v_out_417161.awb") ~= 0 then
					local var_647_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161156", "story_v_out_417161.awb") / 1000

					if var_647_8 + var_647_0 > arg_644_1.duration_ then
						arg_644_1.duration_ = var_647_8 + var_647_0
					end

					if var_647_3.prefab_name ~= "" and arg_644_1.actors_[var_647_3.prefab_name] ~= nil then
						local var_647_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_644_1.actors_[var_647_3.prefab_name].transform, "story_v_out_417161", "417161156", "story_v_out_417161.awb")

						arg_644_1:RecordAudio("417161156", var_647_9)
						arg_644_1:RecordAudio("417161156", var_647_9)
					else
						arg_644_1:AudioAction("play", "voice", "story_v_out_417161", "417161156", "story_v_out_417161.awb")
					end

					arg_644_1:RecordHistoryTalkVoice("story_v_out_417161", "417161156", "story_v_out_417161.awb")
				end

				arg_644_1:RecordContent(arg_644_1.text_.text)
			end

			local var_647_10 = math.max(var_647_1, arg_644_1.talkMaxDuration)

			if var_647_0 <= arg_644_1.time_ and arg_644_1.time_ < var_647_0 + var_647_10 then
				arg_644_1.typewritter.percent = (arg_644_1.time_ - var_647_0) / var_647_10

				arg_644_1.typewritter:SetDirty()
			end

			if arg_644_1.time_ >= var_647_0 + var_647_10 and arg_644_1.time_ < var_647_0 + var_647_10 + arg_647_0 then
				arg_644_1.typewritter.percent = 1

				arg_644_1.typewritter:SetDirty()
				arg_644_1:ShowNextGo(true)
			end
		end
	end,
	Play417161157 = function(arg_648_0, arg_648_1)
		arg_648_1.time_ = 0
		arg_648_1.frameCnt_ = 0
		arg_648_1.state_ = "playing"
		arg_648_1.curTalkId_ = 417161157
		arg_648_1.duration_ = 13.67

		local var_648_0 = {
			zh = 9.033,
			ja = 13.666
		}
		local var_648_1 = manager.audio:GetLocalizationFlag()

		if var_648_0[var_648_1] ~= nil then
			arg_648_1.duration_ = var_648_0[var_648_1]
		end

		SetActive(arg_648_1.tipsGo_, false)

		function arg_648_1.onSingleLineFinish_()
			arg_648_1.onSingleLineUpdate_ = nil
			arg_648_1.onSingleLineFinish_ = nil
			arg_648_1.state_ = "waiting"
		end

		function arg_648_1.playNext_(arg_650_0)
			if arg_650_0 == 1 then
				arg_648_0:Play417161158(arg_648_1)
			end
		end

		function arg_648_1.onSingleLineUpdate_(arg_651_0)
			local var_651_0 = 0
			local var_651_1 = 1.125

			if var_651_0 < arg_648_1.time_ and arg_648_1.time_ <= var_651_0 + arg_651_0 then
				arg_648_1.talkMaxDuration = 0
				arg_648_1.dialogCg_.alpha = 1

				arg_648_1.dialog_:SetActive(true)
				SetActive(arg_648_1.leftNameGo_, true)

				local var_651_2 = arg_648_1:FormatText(StoryNameCfg[595].name)

				arg_648_1.leftNameTxt_.text = var_651_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_648_1.leftNameTxt_.transform)

				arg_648_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_648_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_648_1:RecordName(arg_648_1.leftNameTxt_.text)
				SetActive(arg_648_1.iconTrs_.gameObject, false)
				arg_648_1.callingController_:SetSelectedState("normal")

				local var_651_3 = arg_648_1:GetWordFromCfg(417161157)
				local var_651_4 = arg_648_1:FormatText(var_651_3.content)

				arg_648_1.text_.text = var_651_4

				LuaForUtil.ClearLinePrefixSymbol(arg_648_1.text_)

				local var_651_5 = 45
				local var_651_6 = utf8.len(var_651_4)
				local var_651_7 = var_651_5 <= 0 and var_651_1 or var_651_1 * (var_651_6 / var_651_5)

				if var_651_7 > 0 and var_651_1 < var_651_7 then
					arg_648_1.talkMaxDuration = var_651_7

					if var_651_7 + var_651_0 > arg_648_1.duration_ then
						arg_648_1.duration_ = var_651_7 + var_651_0
					end
				end

				arg_648_1.text_.text = var_651_4
				arg_648_1.typewritter.percent = 0

				arg_648_1.typewritter:SetDirty()
				arg_648_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161157", "story_v_out_417161.awb") ~= 0 then
					local var_651_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161157", "story_v_out_417161.awb") / 1000

					if var_651_8 + var_651_0 > arg_648_1.duration_ then
						arg_648_1.duration_ = var_651_8 + var_651_0
					end

					if var_651_3.prefab_name ~= "" and arg_648_1.actors_[var_651_3.prefab_name] ~= nil then
						local var_651_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_648_1.actors_[var_651_3.prefab_name].transform, "story_v_out_417161", "417161157", "story_v_out_417161.awb")

						arg_648_1:RecordAudio("417161157", var_651_9)
						arg_648_1:RecordAudio("417161157", var_651_9)
					else
						arg_648_1:AudioAction("play", "voice", "story_v_out_417161", "417161157", "story_v_out_417161.awb")
					end

					arg_648_1:RecordHistoryTalkVoice("story_v_out_417161", "417161157", "story_v_out_417161.awb")
				end

				arg_648_1:RecordContent(arg_648_1.text_.text)
			end

			local var_651_10 = math.max(var_651_1, arg_648_1.talkMaxDuration)

			if var_651_0 <= arg_648_1.time_ and arg_648_1.time_ < var_651_0 + var_651_10 then
				arg_648_1.typewritter.percent = (arg_648_1.time_ - var_651_0) / var_651_10

				arg_648_1.typewritter:SetDirty()
			end

			if arg_648_1.time_ >= var_651_0 + var_651_10 and arg_648_1.time_ < var_651_0 + var_651_10 + arg_651_0 then
				arg_648_1.typewritter.percent = 1

				arg_648_1.typewritter:SetDirty()
				arg_648_1:ShowNextGo(true)
			end
		end
	end,
	Play417161158 = function(arg_652_0, arg_652_1)
		arg_652_1.time_ = 0
		arg_652_1.frameCnt_ = 0
		arg_652_1.state_ = "playing"
		arg_652_1.curTalkId_ = 417161158
		arg_652_1.duration_ = 1.33

		local var_652_0 = {
			zh = 0.999999999999,
			ja = 1.333
		}
		local var_652_1 = manager.audio:GetLocalizationFlag()

		if var_652_0[var_652_1] ~= nil then
			arg_652_1.duration_ = var_652_0[var_652_1]
		end

		SetActive(arg_652_1.tipsGo_, false)

		function arg_652_1.onSingleLineFinish_()
			arg_652_1.onSingleLineUpdate_ = nil
			arg_652_1.onSingleLineFinish_ = nil
			arg_652_1.state_ = "waiting"
		end

		function arg_652_1.playNext_(arg_654_0)
			if arg_654_0 == 1 then
				arg_652_0:Play417161159(arg_652_1)
			end
		end

		function arg_652_1.onSingleLineUpdate_(arg_655_0)
			local var_655_0 = 0
			local var_655_1 = 0.05

			if var_655_0 < arg_652_1.time_ and arg_652_1.time_ <= var_655_0 + arg_655_0 then
				arg_652_1.talkMaxDuration = 0
				arg_652_1.dialogCg_.alpha = 1

				arg_652_1.dialog_:SetActive(true)
				SetActive(arg_652_1.leftNameGo_, true)

				local var_655_2 = arg_652_1:FormatText(StoryNameCfg[1125].name)

				arg_652_1.leftNameTxt_.text = var_655_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_652_1.leftNameTxt_.transform)

				arg_652_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_652_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_652_1:RecordName(arg_652_1.leftNameTxt_.text)
				SetActive(arg_652_1.iconTrs_.gameObject, false)
				arg_652_1.callingController_:SetSelectedState("normal")

				local var_655_3 = arg_652_1:GetWordFromCfg(417161158)
				local var_655_4 = arg_652_1:FormatText(var_655_3.content)

				arg_652_1.text_.text = var_655_4

				LuaForUtil.ClearLinePrefixSymbol(arg_652_1.text_)

				local var_655_5 = 2
				local var_655_6 = utf8.len(var_655_4)
				local var_655_7 = var_655_5 <= 0 and var_655_1 or var_655_1 * (var_655_6 / var_655_5)

				if var_655_7 > 0 and var_655_1 < var_655_7 then
					arg_652_1.talkMaxDuration = var_655_7

					if var_655_7 + var_655_0 > arg_652_1.duration_ then
						arg_652_1.duration_ = var_655_7 + var_655_0
					end
				end

				arg_652_1.text_.text = var_655_4
				arg_652_1.typewritter.percent = 0

				arg_652_1.typewritter:SetDirty()
				arg_652_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161158", "story_v_out_417161.awb") ~= 0 then
					local var_655_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161158", "story_v_out_417161.awb") / 1000

					if var_655_8 + var_655_0 > arg_652_1.duration_ then
						arg_652_1.duration_ = var_655_8 + var_655_0
					end

					if var_655_3.prefab_name ~= "" and arg_652_1.actors_[var_655_3.prefab_name] ~= nil then
						local var_655_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_652_1.actors_[var_655_3.prefab_name].transform, "story_v_out_417161", "417161158", "story_v_out_417161.awb")

						arg_652_1:RecordAudio("417161158", var_655_9)
						arg_652_1:RecordAudio("417161158", var_655_9)
					else
						arg_652_1:AudioAction("play", "voice", "story_v_out_417161", "417161158", "story_v_out_417161.awb")
					end

					arg_652_1:RecordHistoryTalkVoice("story_v_out_417161", "417161158", "story_v_out_417161.awb")
				end

				arg_652_1:RecordContent(arg_652_1.text_.text)
			end

			local var_655_10 = math.max(var_655_1, arg_652_1.talkMaxDuration)

			if var_655_0 <= arg_652_1.time_ and arg_652_1.time_ < var_655_0 + var_655_10 then
				arg_652_1.typewritter.percent = (arg_652_1.time_ - var_655_0) / var_655_10

				arg_652_1.typewritter:SetDirty()
			end

			if arg_652_1.time_ >= var_655_0 + var_655_10 and arg_652_1.time_ < var_655_0 + var_655_10 + arg_655_0 then
				arg_652_1.typewritter.percent = 1

				arg_652_1.typewritter:SetDirty()
				arg_652_1:ShowNextGo(true)
			end
		end
	end,
	Play417161159 = function(arg_656_0, arg_656_1)
		arg_656_1.time_ = 0
		arg_656_1.frameCnt_ = 0
		arg_656_1.state_ = "playing"
		arg_656_1.curTalkId_ = 417161159
		arg_656_1.duration_ = 6.93

		local var_656_0 = {
			zh = 5.333,
			ja = 6.933
		}
		local var_656_1 = manager.audio:GetLocalizationFlag()

		if var_656_0[var_656_1] ~= nil then
			arg_656_1.duration_ = var_656_0[var_656_1]
		end

		SetActive(arg_656_1.tipsGo_, false)

		function arg_656_1.onSingleLineFinish_()
			arg_656_1.onSingleLineUpdate_ = nil
			arg_656_1.onSingleLineFinish_ = nil
			arg_656_1.state_ = "waiting"
		end

		function arg_656_1.playNext_(arg_658_0)
			if arg_658_0 == 1 then
				arg_656_0:Play417161160(arg_656_1)
			end
		end

		function arg_656_1.onSingleLineUpdate_(arg_659_0)
			local var_659_0 = 0
			local var_659_1 = 0.625

			if var_659_0 < arg_656_1.time_ and arg_656_1.time_ <= var_659_0 + arg_659_0 then
				arg_656_1.talkMaxDuration = 0
				arg_656_1.dialogCg_.alpha = 1

				arg_656_1.dialog_:SetActive(true)
				SetActive(arg_656_1.leftNameGo_, true)

				local var_659_2 = arg_656_1:FormatText(StoryNameCfg[595].name)

				arg_656_1.leftNameTxt_.text = var_659_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_656_1.leftNameTxt_.transform)

				arg_656_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_656_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_656_1:RecordName(arg_656_1.leftNameTxt_.text)
				SetActive(arg_656_1.iconTrs_.gameObject, false)
				arg_656_1.callingController_:SetSelectedState("normal")

				local var_659_3 = arg_656_1:GetWordFromCfg(417161159)
				local var_659_4 = arg_656_1:FormatText(var_659_3.content)

				arg_656_1.text_.text = var_659_4

				LuaForUtil.ClearLinePrefixSymbol(arg_656_1.text_)

				local var_659_5 = 25
				local var_659_6 = utf8.len(var_659_4)
				local var_659_7 = var_659_5 <= 0 and var_659_1 or var_659_1 * (var_659_6 / var_659_5)

				if var_659_7 > 0 and var_659_1 < var_659_7 then
					arg_656_1.talkMaxDuration = var_659_7

					if var_659_7 + var_659_0 > arg_656_1.duration_ then
						arg_656_1.duration_ = var_659_7 + var_659_0
					end
				end

				arg_656_1.text_.text = var_659_4
				arg_656_1.typewritter.percent = 0

				arg_656_1.typewritter:SetDirty()
				arg_656_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161159", "story_v_out_417161.awb") ~= 0 then
					local var_659_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161159", "story_v_out_417161.awb") / 1000

					if var_659_8 + var_659_0 > arg_656_1.duration_ then
						arg_656_1.duration_ = var_659_8 + var_659_0
					end

					if var_659_3.prefab_name ~= "" and arg_656_1.actors_[var_659_3.prefab_name] ~= nil then
						local var_659_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_656_1.actors_[var_659_3.prefab_name].transform, "story_v_out_417161", "417161159", "story_v_out_417161.awb")

						arg_656_1:RecordAudio("417161159", var_659_9)
						arg_656_1:RecordAudio("417161159", var_659_9)
					else
						arg_656_1:AudioAction("play", "voice", "story_v_out_417161", "417161159", "story_v_out_417161.awb")
					end

					arg_656_1:RecordHistoryTalkVoice("story_v_out_417161", "417161159", "story_v_out_417161.awb")
				end

				arg_656_1:RecordContent(arg_656_1.text_.text)
			end

			local var_659_10 = math.max(var_659_1, arg_656_1.talkMaxDuration)

			if var_659_0 <= arg_656_1.time_ and arg_656_1.time_ < var_659_0 + var_659_10 then
				arg_656_1.typewritter.percent = (arg_656_1.time_ - var_659_0) / var_659_10

				arg_656_1.typewritter:SetDirty()
			end

			if arg_656_1.time_ >= var_659_0 + var_659_10 and arg_656_1.time_ < var_659_0 + var_659_10 + arg_659_0 then
				arg_656_1.typewritter.percent = 1

				arg_656_1.typewritter:SetDirty()
				arg_656_1:ShowNextGo(true)
			end
		end
	end,
	Play417161160 = function(arg_660_0, arg_660_1)
		arg_660_1.time_ = 0
		arg_660_1.frameCnt_ = 0
		arg_660_1.state_ = "playing"
		arg_660_1.curTalkId_ = 417161160
		arg_660_1.duration_ = 2

		local var_660_0 = {
			zh = 1.8,
			ja = 2
		}
		local var_660_1 = manager.audio:GetLocalizationFlag()

		if var_660_0[var_660_1] ~= nil then
			arg_660_1.duration_ = var_660_0[var_660_1]
		end

		SetActive(arg_660_1.tipsGo_, false)

		function arg_660_1.onSingleLineFinish_()
			arg_660_1.onSingleLineUpdate_ = nil
			arg_660_1.onSingleLineFinish_ = nil
			arg_660_1.state_ = "waiting"
		end

		function arg_660_1.playNext_(arg_662_0)
			if arg_662_0 == 1 then
				arg_660_0:Play417161161(arg_660_1)
			end
		end

		function arg_660_1.onSingleLineUpdate_(arg_663_0)
			local var_663_0 = 0
			local var_663_1 = 0.125

			if var_663_0 < arg_660_1.time_ and arg_660_1.time_ <= var_663_0 + arg_663_0 then
				arg_660_1.talkMaxDuration = 0
				arg_660_1.dialogCg_.alpha = 1

				arg_660_1.dialog_:SetActive(true)
				SetActive(arg_660_1.leftNameGo_, true)

				local var_663_2 = arg_660_1:FormatText(StoryNameCfg[1125].name)

				arg_660_1.leftNameTxt_.text = var_663_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_660_1.leftNameTxt_.transform)

				arg_660_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_660_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_660_1:RecordName(arg_660_1.leftNameTxt_.text)
				SetActive(arg_660_1.iconTrs_.gameObject, false)
				arg_660_1.callingController_:SetSelectedState("normal")

				local var_663_3 = arg_660_1:GetWordFromCfg(417161160)
				local var_663_4 = arg_660_1:FormatText(var_663_3.content)

				arg_660_1.text_.text = var_663_4

				LuaForUtil.ClearLinePrefixSymbol(arg_660_1.text_)

				local var_663_5 = 5
				local var_663_6 = utf8.len(var_663_4)
				local var_663_7 = var_663_5 <= 0 and var_663_1 or var_663_1 * (var_663_6 / var_663_5)

				if var_663_7 > 0 and var_663_1 < var_663_7 then
					arg_660_1.talkMaxDuration = var_663_7

					if var_663_7 + var_663_0 > arg_660_1.duration_ then
						arg_660_1.duration_ = var_663_7 + var_663_0
					end
				end

				arg_660_1.text_.text = var_663_4
				arg_660_1.typewritter.percent = 0

				arg_660_1.typewritter:SetDirty()
				arg_660_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161160", "story_v_out_417161.awb") ~= 0 then
					local var_663_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161160", "story_v_out_417161.awb") / 1000

					if var_663_8 + var_663_0 > arg_660_1.duration_ then
						arg_660_1.duration_ = var_663_8 + var_663_0
					end

					if var_663_3.prefab_name ~= "" and arg_660_1.actors_[var_663_3.prefab_name] ~= nil then
						local var_663_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_660_1.actors_[var_663_3.prefab_name].transform, "story_v_out_417161", "417161160", "story_v_out_417161.awb")

						arg_660_1:RecordAudio("417161160", var_663_9)
						arg_660_1:RecordAudio("417161160", var_663_9)
					else
						arg_660_1:AudioAction("play", "voice", "story_v_out_417161", "417161160", "story_v_out_417161.awb")
					end

					arg_660_1:RecordHistoryTalkVoice("story_v_out_417161", "417161160", "story_v_out_417161.awb")
				end

				arg_660_1:RecordContent(arg_660_1.text_.text)
			end

			local var_663_10 = math.max(var_663_1, arg_660_1.talkMaxDuration)

			if var_663_0 <= arg_660_1.time_ and arg_660_1.time_ < var_663_0 + var_663_10 then
				arg_660_1.typewritter.percent = (arg_660_1.time_ - var_663_0) / var_663_10

				arg_660_1.typewritter:SetDirty()
			end

			if arg_660_1.time_ >= var_663_0 + var_663_10 and arg_660_1.time_ < var_663_0 + var_663_10 + arg_663_0 then
				arg_660_1.typewritter.percent = 1

				arg_660_1.typewritter:SetDirty()
				arg_660_1:ShowNextGo(true)
			end
		end
	end,
	Play417161161 = function(arg_664_0, arg_664_1)
		arg_664_1.time_ = 0
		arg_664_1.frameCnt_ = 0
		arg_664_1.state_ = "playing"
		arg_664_1.curTalkId_ = 417161161
		arg_664_1.duration_ = 7

		local var_664_0 = {
			zh = 4.566,
			ja = 7
		}
		local var_664_1 = manager.audio:GetLocalizationFlag()

		if var_664_0[var_664_1] ~= nil then
			arg_664_1.duration_ = var_664_0[var_664_1]
		end

		SetActive(arg_664_1.tipsGo_, false)

		function arg_664_1.onSingleLineFinish_()
			arg_664_1.onSingleLineUpdate_ = nil
			arg_664_1.onSingleLineFinish_ = nil
			arg_664_1.state_ = "waiting"
		end

		function arg_664_1.playNext_(arg_666_0)
			if arg_666_0 == 1 then
				arg_664_0:Play417161162(arg_664_1)
			end
		end

		function arg_664_1.onSingleLineUpdate_(arg_667_0)
			local var_667_0 = 0
			local var_667_1 = 0.475

			if var_667_0 < arg_664_1.time_ and arg_664_1.time_ <= var_667_0 + arg_667_0 then
				arg_664_1.talkMaxDuration = 0
				arg_664_1.dialogCg_.alpha = 1

				arg_664_1.dialog_:SetActive(true)
				SetActive(arg_664_1.leftNameGo_, true)

				local var_667_2 = arg_664_1:FormatText(StoryNameCfg[595].name)

				arg_664_1.leftNameTxt_.text = var_667_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_664_1.leftNameTxt_.transform)

				arg_664_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_664_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_664_1:RecordName(arg_664_1.leftNameTxt_.text)
				SetActive(arg_664_1.iconTrs_.gameObject, false)
				arg_664_1.callingController_:SetSelectedState("normal")

				local var_667_3 = arg_664_1:GetWordFromCfg(417161161)
				local var_667_4 = arg_664_1:FormatText(var_667_3.content)

				arg_664_1.text_.text = var_667_4

				LuaForUtil.ClearLinePrefixSymbol(arg_664_1.text_)

				local var_667_5 = 19
				local var_667_6 = utf8.len(var_667_4)
				local var_667_7 = var_667_5 <= 0 and var_667_1 or var_667_1 * (var_667_6 / var_667_5)

				if var_667_7 > 0 and var_667_1 < var_667_7 then
					arg_664_1.talkMaxDuration = var_667_7

					if var_667_7 + var_667_0 > arg_664_1.duration_ then
						arg_664_1.duration_ = var_667_7 + var_667_0
					end
				end

				arg_664_1.text_.text = var_667_4
				arg_664_1.typewritter.percent = 0

				arg_664_1.typewritter:SetDirty()
				arg_664_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161161", "story_v_out_417161.awb") ~= 0 then
					local var_667_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161161", "story_v_out_417161.awb") / 1000

					if var_667_8 + var_667_0 > arg_664_1.duration_ then
						arg_664_1.duration_ = var_667_8 + var_667_0
					end

					if var_667_3.prefab_name ~= "" and arg_664_1.actors_[var_667_3.prefab_name] ~= nil then
						local var_667_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_664_1.actors_[var_667_3.prefab_name].transform, "story_v_out_417161", "417161161", "story_v_out_417161.awb")

						arg_664_1:RecordAudio("417161161", var_667_9)
						arg_664_1:RecordAudio("417161161", var_667_9)
					else
						arg_664_1:AudioAction("play", "voice", "story_v_out_417161", "417161161", "story_v_out_417161.awb")
					end

					arg_664_1:RecordHistoryTalkVoice("story_v_out_417161", "417161161", "story_v_out_417161.awb")
				end

				arg_664_1:RecordContent(arg_664_1.text_.text)
			end

			local var_667_10 = math.max(var_667_1, arg_664_1.talkMaxDuration)

			if var_667_0 <= arg_664_1.time_ and arg_664_1.time_ < var_667_0 + var_667_10 then
				arg_664_1.typewritter.percent = (arg_664_1.time_ - var_667_0) / var_667_10

				arg_664_1.typewritter:SetDirty()
			end

			if arg_664_1.time_ >= var_667_0 + var_667_10 and arg_664_1.time_ < var_667_0 + var_667_10 + arg_667_0 then
				arg_664_1.typewritter.percent = 1

				arg_664_1.typewritter:SetDirty()
				arg_664_1:ShowNextGo(true)
			end
		end
	end,
	Play417161162 = function(arg_668_0, arg_668_1)
		arg_668_1.time_ = 0
		arg_668_1.frameCnt_ = 0
		arg_668_1.state_ = "playing"
		arg_668_1.curTalkId_ = 417161162
		arg_668_1.duration_ = 5

		SetActive(arg_668_1.tipsGo_, false)

		function arg_668_1.onSingleLineFinish_()
			arg_668_1.onSingleLineUpdate_ = nil
			arg_668_1.onSingleLineFinish_ = nil
			arg_668_1.state_ = "waiting"
		end

		function arg_668_1.playNext_(arg_670_0)
			if arg_670_0 == 1 then
				arg_668_0:Play417161163(arg_668_1)
			end
		end

		function arg_668_1.onSingleLineUpdate_(arg_671_0)
			local var_671_0 = 0
			local var_671_1 = 1.525

			if var_671_0 < arg_668_1.time_ and arg_668_1.time_ <= var_671_0 + arg_671_0 then
				arg_668_1.talkMaxDuration = 0
				arg_668_1.dialogCg_.alpha = 1

				arg_668_1.dialog_:SetActive(true)
				SetActive(arg_668_1.leftNameGo_, false)

				arg_668_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_668_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_668_1:RecordName(arg_668_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_668_1.iconTrs_.gameObject, false)
				arg_668_1.callingController_:SetSelectedState("normal")

				local var_671_2 = arg_668_1:GetWordFromCfg(417161162)
				local var_671_3 = arg_668_1:FormatText(var_671_2.content)

				arg_668_1.text_.text = var_671_3

				LuaForUtil.ClearLinePrefixSymbol(arg_668_1.text_)

				local var_671_4 = 61
				local var_671_5 = utf8.len(var_671_3)
				local var_671_6 = var_671_4 <= 0 and var_671_1 or var_671_1 * (var_671_5 / var_671_4)

				if var_671_6 > 0 and var_671_1 < var_671_6 then
					arg_668_1.talkMaxDuration = var_671_6

					if var_671_6 + var_671_0 > arg_668_1.duration_ then
						arg_668_1.duration_ = var_671_6 + var_671_0
					end
				end

				arg_668_1.text_.text = var_671_3
				arg_668_1.typewritter.percent = 0

				arg_668_1.typewritter:SetDirty()
				arg_668_1:ShowNextGo(false)
				arg_668_1:RecordContent(arg_668_1.text_.text)
			end

			local var_671_7 = math.max(var_671_1, arg_668_1.talkMaxDuration)

			if var_671_0 <= arg_668_1.time_ and arg_668_1.time_ < var_671_0 + var_671_7 then
				arg_668_1.typewritter.percent = (arg_668_1.time_ - var_671_0) / var_671_7

				arg_668_1.typewritter:SetDirty()
			end

			if arg_668_1.time_ >= var_671_0 + var_671_7 and arg_668_1.time_ < var_671_0 + var_671_7 + arg_671_0 then
				arg_668_1.typewritter.percent = 1

				arg_668_1.typewritter:SetDirty()
				arg_668_1:ShowNextGo(true)
			end
		end
	end,
	Play417161163 = function(arg_672_0, arg_672_1)
		arg_672_1.time_ = 0
		arg_672_1.frameCnt_ = 0
		arg_672_1.state_ = "playing"
		arg_672_1.curTalkId_ = 417161163
		arg_672_1.duration_ = 5

		SetActive(arg_672_1.tipsGo_, false)

		function arg_672_1.onSingleLineFinish_()
			arg_672_1.onSingleLineUpdate_ = nil
			arg_672_1.onSingleLineFinish_ = nil
			arg_672_1.state_ = "waiting"
		end

		function arg_672_1.playNext_(arg_674_0)
			if arg_674_0 == 1 then
				arg_672_0:Play417161164(arg_672_1)
			end
		end

		function arg_672_1.onSingleLineUpdate_(arg_675_0)
			local var_675_0 = 0
			local var_675_1 = 1.05

			if var_675_0 < arg_672_1.time_ and arg_672_1.time_ <= var_675_0 + arg_675_0 then
				arg_672_1.talkMaxDuration = 0
				arg_672_1.dialogCg_.alpha = 1

				arg_672_1.dialog_:SetActive(true)
				SetActive(arg_672_1.leftNameGo_, false)

				arg_672_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_672_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_672_1:RecordName(arg_672_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_672_1.iconTrs_.gameObject, false)
				arg_672_1.callingController_:SetSelectedState("normal")

				local var_675_2 = arg_672_1:GetWordFromCfg(417161163)
				local var_675_3 = arg_672_1:FormatText(var_675_2.content)

				arg_672_1.text_.text = var_675_3

				LuaForUtil.ClearLinePrefixSymbol(arg_672_1.text_)

				local var_675_4 = 42
				local var_675_5 = utf8.len(var_675_3)
				local var_675_6 = var_675_4 <= 0 and var_675_1 or var_675_1 * (var_675_5 / var_675_4)

				if var_675_6 > 0 and var_675_1 < var_675_6 then
					arg_672_1.talkMaxDuration = var_675_6

					if var_675_6 + var_675_0 > arg_672_1.duration_ then
						arg_672_1.duration_ = var_675_6 + var_675_0
					end
				end

				arg_672_1.text_.text = var_675_3
				arg_672_1.typewritter.percent = 0

				arg_672_1.typewritter:SetDirty()
				arg_672_1:ShowNextGo(false)
				arg_672_1:RecordContent(arg_672_1.text_.text)
			end

			local var_675_7 = math.max(var_675_1, arg_672_1.talkMaxDuration)

			if var_675_0 <= arg_672_1.time_ and arg_672_1.time_ < var_675_0 + var_675_7 then
				arg_672_1.typewritter.percent = (arg_672_1.time_ - var_675_0) / var_675_7

				arg_672_1.typewritter:SetDirty()
			end

			if arg_672_1.time_ >= var_675_0 + var_675_7 and arg_672_1.time_ < var_675_0 + var_675_7 + arg_675_0 then
				arg_672_1.typewritter.percent = 1

				arg_672_1.typewritter:SetDirty()
				arg_672_1:ShowNextGo(true)
			end
		end
	end,
	Play417161164 = function(arg_676_0, arg_676_1)
		arg_676_1.time_ = 0
		arg_676_1.frameCnt_ = 0
		arg_676_1.state_ = "playing"
		arg_676_1.curTalkId_ = 417161164
		arg_676_1.duration_ = 5.6

		local var_676_0 = {
			zh = 3.633,
			ja = 5.6
		}
		local var_676_1 = manager.audio:GetLocalizationFlag()

		if var_676_0[var_676_1] ~= nil then
			arg_676_1.duration_ = var_676_0[var_676_1]
		end

		SetActive(arg_676_1.tipsGo_, false)

		function arg_676_1.onSingleLineFinish_()
			arg_676_1.onSingleLineUpdate_ = nil
			arg_676_1.onSingleLineFinish_ = nil
			arg_676_1.state_ = "waiting"
		end

		function arg_676_1.playNext_(arg_678_0)
			if arg_678_0 == 1 then
				arg_676_0:Play417161165(arg_676_1)
			end
		end

		function arg_676_1.onSingleLineUpdate_(arg_679_0)
			local var_679_0 = 0
			local var_679_1 = 0.325

			if var_679_0 < arg_676_1.time_ and arg_676_1.time_ <= var_679_0 + arg_679_0 then
				arg_676_1.talkMaxDuration = 0
				arg_676_1.dialogCg_.alpha = 1

				arg_676_1.dialog_:SetActive(true)
				SetActive(arg_676_1.leftNameGo_, true)

				local var_679_2 = arg_676_1:FormatText(StoryNameCfg[1125].name)

				arg_676_1.leftNameTxt_.text = var_679_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_676_1.leftNameTxt_.transform)

				arg_676_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_676_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_676_1:RecordName(arg_676_1.leftNameTxt_.text)
				SetActive(arg_676_1.iconTrs_.gameObject, false)
				arg_676_1.callingController_:SetSelectedState("normal")

				local var_679_3 = arg_676_1:GetWordFromCfg(417161164)
				local var_679_4 = arg_676_1:FormatText(var_679_3.content)

				arg_676_1.text_.text = var_679_4

				LuaForUtil.ClearLinePrefixSymbol(arg_676_1.text_)

				local var_679_5 = 13
				local var_679_6 = utf8.len(var_679_4)
				local var_679_7 = var_679_5 <= 0 and var_679_1 or var_679_1 * (var_679_6 / var_679_5)

				if var_679_7 > 0 and var_679_1 < var_679_7 then
					arg_676_1.talkMaxDuration = var_679_7

					if var_679_7 + var_679_0 > arg_676_1.duration_ then
						arg_676_1.duration_ = var_679_7 + var_679_0
					end
				end

				arg_676_1.text_.text = var_679_4
				arg_676_1.typewritter.percent = 0

				arg_676_1.typewritter:SetDirty()
				arg_676_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161164", "story_v_out_417161.awb") ~= 0 then
					local var_679_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161164", "story_v_out_417161.awb") / 1000

					if var_679_8 + var_679_0 > arg_676_1.duration_ then
						arg_676_1.duration_ = var_679_8 + var_679_0
					end

					if var_679_3.prefab_name ~= "" and arg_676_1.actors_[var_679_3.prefab_name] ~= nil then
						local var_679_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_676_1.actors_[var_679_3.prefab_name].transform, "story_v_out_417161", "417161164", "story_v_out_417161.awb")

						arg_676_1:RecordAudio("417161164", var_679_9)
						arg_676_1:RecordAudio("417161164", var_679_9)
					else
						arg_676_1:AudioAction("play", "voice", "story_v_out_417161", "417161164", "story_v_out_417161.awb")
					end

					arg_676_1:RecordHistoryTalkVoice("story_v_out_417161", "417161164", "story_v_out_417161.awb")
				end

				arg_676_1:RecordContent(arg_676_1.text_.text)
			end

			local var_679_10 = math.max(var_679_1, arg_676_1.talkMaxDuration)

			if var_679_0 <= arg_676_1.time_ and arg_676_1.time_ < var_679_0 + var_679_10 then
				arg_676_1.typewritter.percent = (arg_676_1.time_ - var_679_0) / var_679_10

				arg_676_1.typewritter:SetDirty()
			end

			if arg_676_1.time_ >= var_679_0 + var_679_10 and arg_676_1.time_ < var_679_0 + var_679_10 + arg_679_0 then
				arg_676_1.typewritter.percent = 1

				arg_676_1.typewritter:SetDirty()
				arg_676_1:ShowNextGo(true)
			end
		end
	end,
	Play417161165 = function(arg_680_0, arg_680_1)
		arg_680_1.time_ = 0
		arg_680_1.frameCnt_ = 0
		arg_680_1.state_ = "playing"
		arg_680_1.curTalkId_ = 417161165
		arg_680_1.duration_ = 6.67

		local var_680_0 = {
			zh = 6.3,
			ja = 6.666
		}
		local var_680_1 = manager.audio:GetLocalizationFlag()

		if var_680_0[var_680_1] ~= nil then
			arg_680_1.duration_ = var_680_0[var_680_1]
		end

		SetActive(arg_680_1.tipsGo_, false)

		function arg_680_1.onSingleLineFinish_()
			arg_680_1.onSingleLineUpdate_ = nil
			arg_680_1.onSingleLineFinish_ = nil
			arg_680_1.state_ = "waiting"
		end

		function arg_680_1.playNext_(arg_682_0)
			if arg_682_0 == 1 then
				arg_680_0:Play417161166(arg_680_1)
			end
		end

		function arg_680_1.onSingleLineUpdate_(arg_683_0)
			local var_683_0 = 0
			local var_683_1 = 0.725

			if var_683_0 < arg_680_1.time_ and arg_680_1.time_ <= var_683_0 + arg_683_0 then
				arg_680_1.talkMaxDuration = 0
				arg_680_1.dialogCg_.alpha = 1

				arg_680_1.dialog_:SetActive(true)
				SetActive(arg_680_1.leftNameGo_, true)

				local var_683_2 = arg_680_1:FormatText(StoryNameCfg[595].name)

				arg_680_1.leftNameTxt_.text = var_683_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_680_1.leftNameTxt_.transform)

				arg_680_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_680_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_680_1:RecordName(arg_680_1.leftNameTxt_.text)
				SetActive(arg_680_1.iconTrs_.gameObject, false)
				arg_680_1.callingController_:SetSelectedState("normal")

				local var_683_3 = arg_680_1:GetWordFromCfg(417161165)
				local var_683_4 = arg_680_1:FormatText(var_683_3.content)

				arg_680_1.text_.text = var_683_4

				LuaForUtil.ClearLinePrefixSymbol(arg_680_1.text_)

				local var_683_5 = 29
				local var_683_6 = utf8.len(var_683_4)
				local var_683_7 = var_683_5 <= 0 and var_683_1 or var_683_1 * (var_683_6 / var_683_5)

				if var_683_7 > 0 and var_683_1 < var_683_7 then
					arg_680_1.talkMaxDuration = var_683_7

					if var_683_7 + var_683_0 > arg_680_1.duration_ then
						arg_680_1.duration_ = var_683_7 + var_683_0
					end
				end

				arg_680_1.text_.text = var_683_4
				arg_680_1.typewritter.percent = 0

				arg_680_1.typewritter:SetDirty()
				arg_680_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161165", "story_v_out_417161.awb") ~= 0 then
					local var_683_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161165", "story_v_out_417161.awb") / 1000

					if var_683_8 + var_683_0 > arg_680_1.duration_ then
						arg_680_1.duration_ = var_683_8 + var_683_0
					end

					if var_683_3.prefab_name ~= "" and arg_680_1.actors_[var_683_3.prefab_name] ~= nil then
						local var_683_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_680_1.actors_[var_683_3.prefab_name].transform, "story_v_out_417161", "417161165", "story_v_out_417161.awb")

						arg_680_1:RecordAudio("417161165", var_683_9)
						arg_680_1:RecordAudio("417161165", var_683_9)
					else
						arg_680_1:AudioAction("play", "voice", "story_v_out_417161", "417161165", "story_v_out_417161.awb")
					end

					arg_680_1:RecordHistoryTalkVoice("story_v_out_417161", "417161165", "story_v_out_417161.awb")
				end

				arg_680_1:RecordContent(arg_680_1.text_.text)
			end

			local var_683_10 = math.max(var_683_1, arg_680_1.talkMaxDuration)

			if var_683_0 <= arg_680_1.time_ and arg_680_1.time_ < var_683_0 + var_683_10 then
				arg_680_1.typewritter.percent = (arg_680_1.time_ - var_683_0) / var_683_10

				arg_680_1.typewritter:SetDirty()
			end

			if arg_680_1.time_ >= var_683_0 + var_683_10 and arg_680_1.time_ < var_683_0 + var_683_10 + arg_683_0 then
				arg_680_1.typewritter.percent = 1

				arg_680_1.typewritter:SetDirty()
				arg_680_1:ShowNextGo(true)
			end
		end
	end,
	Play417161166 = function(arg_684_0, arg_684_1)
		arg_684_1.time_ = 0
		arg_684_1.frameCnt_ = 0
		arg_684_1.state_ = "playing"
		arg_684_1.curTalkId_ = 417161166
		arg_684_1.duration_ = 6.87

		local var_684_0 = {
			zh = 6.366,
			ja = 6.866
		}
		local var_684_1 = manager.audio:GetLocalizationFlag()

		if var_684_0[var_684_1] ~= nil then
			arg_684_1.duration_ = var_684_0[var_684_1]
		end

		SetActive(arg_684_1.tipsGo_, false)

		function arg_684_1.onSingleLineFinish_()
			arg_684_1.onSingleLineUpdate_ = nil
			arg_684_1.onSingleLineFinish_ = nil
			arg_684_1.state_ = "waiting"
		end

		function arg_684_1.playNext_(arg_686_0)
			if arg_686_0 == 1 then
				arg_684_0:Play417161167(arg_684_1)
			end
		end

		function arg_684_1.onSingleLineUpdate_(arg_687_0)
			local var_687_0 = 0
			local var_687_1 = 0.85

			if var_687_0 < arg_684_1.time_ and arg_684_1.time_ <= var_687_0 + arg_687_0 then
				arg_684_1.talkMaxDuration = 0
				arg_684_1.dialogCg_.alpha = 1

				arg_684_1.dialog_:SetActive(true)
				SetActive(arg_684_1.leftNameGo_, true)

				local var_687_2 = arg_684_1:FormatText(StoryNameCfg[595].name)

				arg_684_1.leftNameTxt_.text = var_687_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_684_1.leftNameTxt_.transform)

				arg_684_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_684_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_684_1:RecordName(arg_684_1.leftNameTxt_.text)
				SetActive(arg_684_1.iconTrs_.gameObject, false)
				arg_684_1.callingController_:SetSelectedState("normal")

				local var_687_3 = arg_684_1:GetWordFromCfg(417161166)
				local var_687_4 = arg_684_1:FormatText(var_687_3.content)

				arg_684_1.text_.text = var_687_4

				LuaForUtil.ClearLinePrefixSymbol(arg_684_1.text_)

				local var_687_5 = 34
				local var_687_6 = utf8.len(var_687_4)
				local var_687_7 = var_687_5 <= 0 and var_687_1 or var_687_1 * (var_687_6 / var_687_5)

				if var_687_7 > 0 and var_687_1 < var_687_7 then
					arg_684_1.talkMaxDuration = var_687_7

					if var_687_7 + var_687_0 > arg_684_1.duration_ then
						arg_684_1.duration_ = var_687_7 + var_687_0
					end
				end

				arg_684_1.text_.text = var_687_4
				arg_684_1.typewritter.percent = 0

				arg_684_1.typewritter:SetDirty()
				arg_684_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161166", "story_v_out_417161.awb") ~= 0 then
					local var_687_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161166", "story_v_out_417161.awb") / 1000

					if var_687_8 + var_687_0 > arg_684_1.duration_ then
						arg_684_1.duration_ = var_687_8 + var_687_0
					end

					if var_687_3.prefab_name ~= "" and arg_684_1.actors_[var_687_3.prefab_name] ~= nil then
						local var_687_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_684_1.actors_[var_687_3.prefab_name].transform, "story_v_out_417161", "417161166", "story_v_out_417161.awb")

						arg_684_1:RecordAudio("417161166", var_687_9)
						arg_684_1:RecordAudio("417161166", var_687_9)
					else
						arg_684_1:AudioAction("play", "voice", "story_v_out_417161", "417161166", "story_v_out_417161.awb")
					end

					arg_684_1:RecordHistoryTalkVoice("story_v_out_417161", "417161166", "story_v_out_417161.awb")
				end

				arg_684_1:RecordContent(arg_684_1.text_.text)
			end

			local var_687_10 = math.max(var_687_1, arg_684_1.talkMaxDuration)

			if var_687_0 <= arg_684_1.time_ and arg_684_1.time_ < var_687_0 + var_687_10 then
				arg_684_1.typewritter.percent = (arg_684_1.time_ - var_687_0) / var_687_10

				arg_684_1.typewritter:SetDirty()
			end

			if arg_684_1.time_ >= var_687_0 + var_687_10 and arg_684_1.time_ < var_687_0 + var_687_10 + arg_687_0 then
				arg_684_1.typewritter.percent = 1

				arg_684_1.typewritter:SetDirty()
				arg_684_1:ShowNextGo(true)
			end
		end
	end,
	Play417161167 = function(arg_688_0, arg_688_1)
		arg_688_1.time_ = 0
		arg_688_1.frameCnt_ = 0
		arg_688_1.state_ = "playing"
		arg_688_1.curTalkId_ = 417161167
		arg_688_1.duration_ = 3.93

		local var_688_0 = {
			zh = 2.066,
			ja = 3.933
		}
		local var_688_1 = manager.audio:GetLocalizationFlag()

		if var_688_0[var_688_1] ~= nil then
			arg_688_1.duration_ = var_688_0[var_688_1]
		end

		SetActive(arg_688_1.tipsGo_, false)

		function arg_688_1.onSingleLineFinish_()
			arg_688_1.onSingleLineUpdate_ = nil
			arg_688_1.onSingleLineFinish_ = nil
			arg_688_1.state_ = "waiting"
		end

		function arg_688_1.playNext_(arg_690_0)
			if arg_690_0 == 1 then
				arg_688_0:Play417161168(arg_688_1)
			end
		end

		function arg_688_1.onSingleLineUpdate_(arg_691_0)
			local var_691_0 = 0
			local var_691_1 = 0.2

			if var_691_0 < arg_688_1.time_ and arg_688_1.time_ <= var_691_0 + arg_691_0 then
				arg_688_1.talkMaxDuration = 0
				arg_688_1.dialogCg_.alpha = 1

				arg_688_1.dialog_:SetActive(true)
				SetActive(arg_688_1.leftNameGo_, true)

				local var_691_2 = arg_688_1:FormatText(StoryNameCfg[1125].name)

				arg_688_1.leftNameTxt_.text = var_691_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_688_1.leftNameTxt_.transform)

				arg_688_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_688_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_688_1:RecordName(arg_688_1.leftNameTxt_.text)
				SetActive(arg_688_1.iconTrs_.gameObject, false)
				arg_688_1.callingController_:SetSelectedState("normal")

				local var_691_3 = arg_688_1:GetWordFromCfg(417161167)
				local var_691_4 = arg_688_1:FormatText(var_691_3.content)

				arg_688_1.text_.text = var_691_4

				LuaForUtil.ClearLinePrefixSymbol(arg_688_1.text_)

				local var_691_5 = 8
				local var_691_6 = utf8.len(var_691_4)
				local var_691_7 = var_691_5 <= 0 and var_691_1 or var_691_1 * (var_691_6 / var_691_5)

				if var_691_7 > 0 and var_691_1 < var_691_7 then
					arg_688_1.talkMaxDuration = var_691_7

					if var_691_7 + var_691_0 > arg_688_1.duration_ then
						arg_688_1.duration_ = var_691_7 + var_691_0
					end
				end

				arg_688_1.text_.text = var_691_4
				arg_688_1.typewritter.percent = 0

				arg_688_1.typewritter:SetDirty()
				arg_688_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161167", "story_v_out_417161.awb") ~= 0 then
					local var_691_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161167", "story_v_out_417161.awb") / 1000

					if var_691_8 + var_691_0 > arg_688_1.duration_ then
						arg_688_1.duration_ = var_691_8 + var_691_0
					end

					if var_691_3.prefab_name ~= "" and arg_688_1.actors_[var_691_3.prefab_name] ~= nil then
						local var_691_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_688_1.actors_[var_691_3.prefab_name].transform, "story_v_out_417161", "417161167", "story_v_out_417161.awb")

						arg_688_1:RecordAudio("417161167", var_691_9)
						arg_688_1:RecordAudio("417161167", var_691_9)
					else
						arg_688_1:AudioAction("play", "voice", "story_v_out_417161", "417161167", "story_v_out_417161.awb")
					end

					arg_688_1:RecordHistoryTalkVoice("story_v_out_417161", "417161167", "story_v_out_417161.awb")
				end

				arg_688_1:RecordContent(arg_688_1.text_.text)
			end

			local var_691_10 = math.max(var_691_1, arg_688_1.talkMaxDuration)

			if var_691_0 <= arg_688_1.time_ and arg_688_1.time_ < var_691_0 + var_691_10 then
				arg_688_1.typewritter.percent = (arg_688_1.time_ - var_691_0) / var_691_10

				arg_688_1.typewritter:SetDirty()
			end

			if arg_688_1.time_ >= var_691_0 + var_691_10 and arg_688_1.time_ < var_691_0 + var_691_10 + arg_691_0 then
				arg_688_1.typewritter.percent = 1

				arg_688_1.typewritter:SetDirty()
				arg_688_1:ShowNextGo(true)
			end
		end
	end,
	Play417161168 = function(arg_692_0, arg_692_1)
		arg_692_1.time_ = 0
		arg_692_1.frameCnt_ = 0
		arg_692_1.state_ = "playing"
		arg_692_1.curTalkId_ = 417161168
		arg_692_1.duration_ = 3.7

		local var_692_0 = {
			zh = 2.6,
			ja = 3.7
		}
		local var_692_1 = manager.audio:GetLocalizationFlag()

		if var_692_0[var_692_1] ~= nil then
			arg_692_1.duration_ = var_692_0[var_692_1]
		end

		SetActive(arg_692_1.tipsGo_, false)

		function arg_692_1.onSingleLineFinish_()
			arg_692_1.onSingleLineUpdate_ = nil
			arg_692_1.onSingleLineFinish_ = nil
			arg_692_1.state_ = "waiting"
		end

		function arg_692_1.playNext_(arg_694_0)
			if arg_694_0 == 1 then
				arg_692_0:Play417161169(arg_692_1)
			end
		end

		function arg_692_1.onSingleLineUpdate_(arg_695_0)
			local var_695_0 = 0
			local var_695_1 = 0.4

			if var_695_0 < arg_692_1.time_ and arg_692_1.time_ <= var_695_0 + arg_695_0 then
				arg_692_1.talkMaxDuration = 0
				arg_692_1.dialogCg_.alpha = 1

				arg_692_1.dialog_:SetActive(true)
				SetActive(arg_692_1.leftNameGo_, true)

				local var_695_2 = arg_692_1:FormatText(StoryNameCfg[595].name)

				arg_692_1.leftNameTxt_.text = var_695_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_692_1.leftNameTxt_.transform)

				arg_692_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_692_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_692_1:RecordName(arg_692_1.leftNameTxt_.text)
				SetActive(arg_692_1.iconTrs_.gameObject, false)
				arg_692_1.callingController_:SetSelectedState("normal")

				local var_695_3 = arg_692_1:GetWordFromCfg(417161168)
				local var_695_4 = arg_692_1:FormatText(var_695_3.content)

				arg_692_1.text_.text = var_695_4

				LuaForUtil.ClearLinePrefixSymbol(arg_692_1.text_)

				local var_695_5 = 16
				local var_695_6 = utf8.len(var_695_4)
				local var_695_7 = var_695_5 <= 0 and var_695_1 or var_695_1 * (var_695_6 / var_695_5)

				if var_695_7 > 0 and var_695_1 < var_695_7 then
					arg_692_1.talkMaxDuration = var_695_7

					if var_695_7 + var_695_0 > arg_692_1.duration_ then
						arg_692_1.duration_ = var_695_7 + var_695_0
					end
				end

				arg_692_1.text_.text = var_695_4
				arg_692_1.typewritter.percent = 0

				arg_692_1.typewritter:SetDirty()
				arg_692_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161168", "story_v_out_417161.awb") ~= 0 then
					local var_695_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161168", "story_v_out_417161.awb") / 1000

					if var_695_8 + var_695_0 > arg_692_1.duration_ then
						arg_692_1.duration_ = var_695_8 + var_695_0
					end

					if var_695_3.prefab_name ~= "" and arg_692_1.actors_[var_695_3.prefab_name] ~= nil then
						local var_695_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_692_1.actors_[var_695_3.prefab_name].transform, "story_v_out_417161", "417161168", "story_v_out_417161.awb")

						arg_692_1:RecordAudio("417161168", var_695_9)
						arg_692_1:RecordAudio("417161168", var_695_9)
					else
						arg_692_1:AudioAction("play", "voice", "story_v_out_417161", "417161168", "story_v_out_417161.awb")
					end

					arg_692_1:RecordHistoryTalkVoice("story_v_out_417161", "417161168", "story_v_out_417161.awb")
				end

				arg_692_1:RecordContent(arg_692_1.text_.text)
			end

			local var_695_10 = math.max(var_695_1, arg_692_1.talkMaxDuration)

			if var_695_0 <= arg_692_1.time_ and arg_692_1.time_ < var_695_0 + var_695_10 then
				arg_692_1.typewritter.percent = (arg_692_1.time_ - var_695_0) / var_695_10

				arg_692_1.typewritter:SetDirty()
			end

			if arg_692_1.time_ >= var_695_0 + var_695_10 and arg_692_1.time_ < var_695_0 + var_695_10 + arg_695_0 then
				arg_692_1.typewritter.percent = 1

				arg_692_1.typewritter:SetDirty()
				arg_692_1:ShowNextGo(true)
			end
		end
	end,
	Play417161169 = function(arg_696_0, arg_696_1)
		arg_696_1.time_ = 0
		arg_696_1.frameCnt_ = 0
		arg_696_1.state_ = "playing"
		arg_696_1.curTalkId_ = 417161169
		arg_696_1.duration_ = 8.2

		local var_696_0 = {
			zh = 8.2,
			ja = 7.4
		}
		local var_696_1 = manager.audio:GetLocalizationFlag()

		if var_696_0[var_696_1] ~= nil then
			arg_696_1.duration_ = var_696_0[var_696_1]
		end

		SetActive(arg_696_1.tipsGo_, false)

		function arg_696_1.onSingleLineFinish_()
			arg_696_1.onSingleLineUpdate_ = nil
			arg_696_1.onSingleLineFinish_ = nil
			arg_696_1.state_ = "waiting"
		end

		function arg_696_1.playNext_(arg_698_0)
			if arg_698_0 == 1 then
				arg_696_0:Play417161170(arg_696_1)
			end
		end

		function arg_696_1.onSingleLineUpdate_(arg_699_0)
			local var_699_0 = 0
			local var_699_1 = 0.8

			if var_699_0 < arg_696_1.time_ and arg_696_1.time_ <= var_699_0 + arg_699_0 then
				arg_696_1.talkMaxDuration = 0
				arg_696_1.dialogCg_.alpha = 1

				arg_696_1.dialog_:SetActive(true)
				SetActive(arg_696_1.leftNameGo_, true)

				local var_699_2 = arg_696_1:FormatText(StoryNameCfg[1125].name)

				arg_696_1.leftNameTxt_.text = var_699_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_696_1.leftNameTxt_.transform)

				arg_696_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_696_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_696_1:RecordName(arg_696_1.leftNameTxt_.text)
				SetActive(arg_696_1.iconTrs_.gameObject, false)
				arg_696_1.callingController_:SetSelectedState("normal")

				local var_699_3 = arg_696_1:GetWordFromCfg(417161169)
				local var_699_4 = arg_696_1:FormatText(var_699_3.content)

				arg_696_1.text_.text = var_699_4

				LuaForUtil.ClearLinePrefixSymbol(arg_696_1.text_)

				local var_699_5 = 32
				local var_699_6 = utf8.len(var_699_4)
				local var_699_7 = var_699_5 <= 0 and var_699_1 or var_699_1 * (var_699_6 / var_699_5)

				if var_699_7 > 0 and var_699_1 < var_699_7 then
					arg_696_1.talkMaxDuration = var_699_7

					if var_699_7 + var_699_0 > arg_696_1.duration_ then
						arg_696_1.duration_ = var_699_7 + var_699_0
					end
				end

				arg_696_1.text_.text = var_699_4
				arg_696_1.typewritter.percent = 0

				arg_696_1.typewritter:SetDirty()
				arg_696_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161169", "story_v_out_417161.awb") ~= 0 then
					local var_699_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161169", "story_v_out_417161.awb") / 1000

					if var_699_8 + var_699_0 > arg_696_1.duration_ then
						arg_696_1.duration_ = var_699_8 + var_699_0
					end

					if var_699_3.prefab_name ~= "" and arg_696_1.actors_[var_699_3.prefab_name] ~= nil then
						local var_699_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_696_1.actors_[var_699_3.prefab_name].transform, "story_v_out_417161", "417161169", "story_v_out_417161.awb")

						arg_696_1:RecordAudio("417161169", var_699_9)
						arg_696_1:RecordAudio("417161169", var_699_9)
					else
						arg_696_1:AudioAction("play", "voice", "story_v_out_417161", "417161169", "story_v_out_417161.awb")
					end

					arg_696_1:RecordHistoryTalkVoice("story_v_out_417161", "417161169", "story_v_out_417161.awb")
				end

				arg_696_1:RecordContent(arg_696_1.text_.text)
			end

			local var_699_10 = math.max(var_699_1, arg_696_1.talkMaxDuration)

			if var_699_0 <= arg_696_1.time_ and arg_696_1.time_ < var_699_0 + var_699_10 then
				arg_696_1.typewritter.percent = (arg_696_1.time_ - var_699_0) / var_699_10

				arg_696_1.typewritter:SetDirty()
			end

			if arg_696_1.time_ >= var_699_0 + var_699_10 and arg_696_1.time_ < var_699_0 + var_699_10 + arg_699_0 then
				arg_696_1.typewritter.percent = 1

				arg_696_1.typewritter:SetDirty()
				arg_696_1:ShowNextGo(true)
			end
		end
	end,
	Play417161170 = function(arg_700_0, arg_700_1)
		arg_700_1.time_ = 0
		arg_700_1.frameCnt_ = 0
		arg_700_1.state_ = "playing"
		arg_700_1.curTalkId_ = 417161170
		arg_700_1.duration_ = 13.4

		local var_700_0 = {
			zh = 8.833,
			ja = 13.4
		}
		local var_700_1 = manager.audio:GetLocalizationFlag()

		if var_700_0[var_700_1] ~= nil then
			arg_700_1.duration_ = var_700_0[var_700_1]
		end

		SetActive(arg_700_1.tipsGo_, false)

		function arg_700_1.onSingleLineFinish_()
			arg_700_1.onSingleLineUpdate_ = nil
			arg_700_1.onSingleLineFinish_ = nil
			arg_700_1.state_ = "waiting"
		end

		function arg_700_1.playNext_(arg_702_0)
			if arg_702_0 == 1 then
				arg_700_0:Play417161171(arg_700_1)
			end
		end

		function arg_700_1.onSingleLineUpdate_(arg_703_0)
			local var_703_0 = 0
			local var_703_1 = 1.2

			if var_703_0 < arg_700_1.time_ and arg_700_1.time_ <= var_703_0 + arg_703_0 then
				arg_700_1.talkMaxDuration = 0
				arg_700_1.dialogCg_.alpha = 1

				arg_700_1.dialog_:SetActive(true)
				SetActive(arg_700_1.leftNameGo_, true)

				local var_703_2 = arg_700_1:FormatText(StoryNameCfg[1125].name)

				arg_700_1.leftNameTxt_.text = var_703_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_700_1.leftNameTxt_.transform)

				arg_700_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_700_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_700_1:RecordName(arg_700_1.leftNameTxt_.text)
				SetActive(arg_700_1.iconTrs_.gameObject, false)
				arg_700_1.callingController_:SetSelectedState("normal")

				local var_703_3 = arg_700_1:GetWordFromCfg(417161170)
				local var_703_4 = arg_700_1:FormatText(var_703_3.content)

				arg_700_1.text_.text = var_703_4

				LuaForUtil.ClearLinePrefixSymbol(arg_700_1.text_)

				local var_703_5 = 48
				local var_703_6 = utf8.len(var_703_4)
				local var_703_7 = var_703_5 <= 0 and var_703_1 or var_703_1 * (var_703_6 / var_703_5)

				if var_703_7 > 0 and var_703_1 < var_703_7 then
					arg_700_1.talkMaxDuration = var_703_7

					if var_703_7 + var_703_0 > arg_700_1.duration_ then
						arg_700_1.duration_ = var_703_7 + var_703_0
					end
				end

				arg_700_1.text_.text = var_703_4
				arg_700_1.typewritter.percent = 0

				arg_700_1.typewritter:SetDirty()
				arg_700_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161170", "story_v_out_417161.awb") ~= 0 then
					local var_703_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161170", "story_v_out_417161.awb") / 1000

					if var_703_8 + var_703_0 > arg_700_1.duration_ then
						arg_700_1.duration_ = var_703_8 + var_703_0
					end

					if var_703_3.prefab_name ~= "" and arg_700_1.actors_[var_703_3.prefab_name] ~= nil then
						local var_703_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_700_1.actors_[var_703_3.prefab_name].transform, "story_v_out_417161", "417161170", "story_v_out_417161.awb")

						arg_700_1:RecordAudio("417161170", var_703_9)
						arg_700_1:RecordAudio("417161170", var_703_9)
					else
						arg_700_1:AudioAction("play", "voice", "story_v_out_417161", "417161170", "story_v_out_417161.awb")
					end

					arg_700_1:RecordHistoryTalkVoice("story_v_out_417161", "417161170", "story_v_out_417161.awb")
				end

				arg_700_1:RecordContent(arg_700_1.text_.text)
			end

			local var_703_10 = math.max(var_703_1, arg_700_1.talkMaxDuration)

			if var_703_0 <= arg_700_1.time_ and arg_700_1.time_ < var_703_0 + var_703_10 then
				arg_700_1.typewritter.percent = (arg_700_1.time_ - var_703_0) / var_703_10

				arg_700_1.typewritter:SetDirty()
			end

			if arg_700_1.time_ >= var_703_0 + var_703_10 and arg_700_1.time_ < var_703_0 + var_703_10 + arg_703_0 then
				arg_700_1.typewritter.percent = 1

				arg_700_1.typewritter:SetDirty()
				arg_700_1:ShowNextGo(true)
			end
		end
	end,
	Play417161171 = function(arg_704_0, arg_704_1)
		arg_704_1.time_ = 0
		arg_704_1.frameCnt_ = 0
		arg_704_1.state_ = "playing"
		arg_704_1.curTalkId_ = 417161171
		arg_704_1.duration_ = 14.63

		local var_704_0 = {
			zh = 10,
			ja = 14.633
		}
		local var_704_1 = manager.audio:GetLocalizationFlag()

		if var_704_0[var_704_1] ~= nil then
			arg_704_1.duration_ = var_704_0[var_704_1]
		end

		SetActive(arg_704_1.tipsGo_, false)

		function arg_704_1.onSingleLineFinish_()
			arg_704_1.onSingleLineUpdate_ = nil
			arg_704_1.onSingleLineFinish_ = nil
			arg_704_1.state_ = "waiting"
		end

		function arg_704_1.playNext_(arg_706_0)
			if arg_706_0 == 1 then
				arg_704_0:Play417161172(arg_704_1)
			end
		end

		function arg_704_1.onSingleLineUpdate_(arg_707_0)
			local var_707_0 = 0
			local var_707_1 = 1.2

			if var_707_0 < arg_704_1.time_ and arg_704_1.time_ <= var_707_0 + arg_707_0 then
				arg_704_1.talkMaxDuration = 0
				arg_704_1.dialogCg_.alpha = 1

				arg_704_1.dialog_:SetActive(true)
				SetActive(arg_704_1.leftNameGo_, true)

				local var_707_2 = arg_704_1:FormatText(StoryNameCfg[1125].name)

				arg_704_1.leftNameTxt_.text = var_707_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_704_1.leftNameTxt_.transform)

				arg_704_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_704_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_704_1:RecordName(arg_704_1.leftNameTxt_.text)
				SetActive(arg_704_1.iconTrs_.gameObject, false)
				arg_704_1.callingController_:SetSelectedState("normal")

				local var_707_3 = arg_704_1:GetWordFromCfg(417161171)
				local var_707_4 = arg_704_1:FormatText(var_707_3.content)

				arg_704_1.text_.text = var_707_4

				LuaForUtil.ClearLinePrefixSymbol(arg_704_1.text_)

				local var_707_5 = 48
				local var_707_6 = utf8.len(var_707_4)
				local var_707_7 = var_707_5 <= 0 and var_707_1 or var_707_1 * (var_707_6 / var_707_5)

				if var_707_7 > 0 and var_707_1 < var_707_7 then
					arg_704_1.talkMaxDuration = var_707_7

					if var_707_7 + var_707_0 > arg_704_1.duration_ then
						arg_704_1.duration_ = var_707_7 + var_707_0
					end
				end

				arg_704_1.text_.text = var_707_4
				arg_704_1.typewritter.percent = 0

				arg_704_1.typewritter:SetDirty()
				arg_704_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161171", "story_v_out_417161.awb") ~= 0 then
					local var_707_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161171", "story_v_out_417161.awb") / 1000

					if var_707_8 + var_707_0 > arg_704_1.duration_ then
						arg_704_1.duration_ = var_707_8 + var_707_0
					end

					if var_707_3.prefab_name ~= "" and arg_704_1.actors_[var_707_3.prefab_name] ~= nil then
						local var_707_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_704_1.actors_[var_707_3.prefab_name].transform, "story_v_out_417161", "417161171", "story_v_out_417161.awb")

						arg_704_1:RecordAudio("417161171", var_707_9)
						arg_704_1:RecordAudio("417161171", var_707_9)
					else
						arg_704_1:AudioAction("play", "voice", "story_v_out_417161", "417161171", "story_v_out_417161.awb")
					end

					arg_704_1:RecordHistoryTalkVoice("story_v_out_417161", "417161171", "story_v_out_417161.awb")
				end

				arg_704_1:RecordContent(arg_704_1.text_.text)
			end

			local var_707_10 = math.max(var_707_1, arg_704_1.talkMaxDuration)

			if var_707_0 <= arg_704_1.time_ and arg_704_1.time_ < var_707_0 + var_707_10 then
				arg_704_1.typewritter.percent = (arg_704_1.time_ - var_707_0) / var_707_10

				arg_704_1.typewritter:SetDirty()
			end

			if arg_704_1.time_ >= var_707_0 + var_707_10 and arg_704_1.time_ < var_707_0 + var_707_10 + arg_707_0 then
				arg_704_1.typewritter.percent = 1

				arg_704_1.typewritter:SetDirty()
				arg_704_1:ShowNextGo(true)
			end
		end
	end,
	Play417161172 = function(arg_708_0, arg_708_1)
		arg_708_1.time_ = 0
		arg_708_1.frameCnt_ = 0
		arg_708_1.state_ = "playing"
		arg_708_1.curTalkId_ = 417161172
		arg_708_1.duration_ = 7.2

		local var_708_0 = {
			zh = 4.3,
			ja = 7.2
		}
		local var_708_1 = manager.audio:GetLocalizationFlag()

		if var_708_0[var_708_1] ~= nil then
			arg_708_1.duration_ = var_708_0[var_708_1]
		end

		SetActive(arg_708_1.tipsGo_, false)

		function arg_708_1.onSingleLineFinish_()
			arg_708_1.onSingleLineUpdate_ = nil
			arg_708_1.onSingleLineFinish_ = nil
			arg_708_1.state_ = "waiting"
		end

		function arg_708_1.playNext_(arg_710_0)
			if arg_710_0 == 1 then
				arg_708_0:Play417161173(arg_708_1)
			end
		end

		function arg_708_1.onSingleLineUpdate_(arg_711_0)
			local var_711_0 = 0
			local var_711_1 = 0.475

			if var_711_0 < arg_708_1.time_ and arg_708_1.time_ <= var_711_0 + arg_711_0 then
				arg_708_1.talkMaxDuration = 0
				arg_708_1.dialogCg_.alpha = 1

				arg_708_1.dialog_:SetActive(true)
				SetActive(arg_708_1.leftNameGo_, true)

				local var_711_2 = arg_708_1:FormatText(StoryNameCfg[595].name)

				arg_708_1.leftNameTxt_.text = var_711_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_708_1.leftNameTxt_.transform)

				arg_708_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_708_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_708_1:RecordName(arg_708_1.leftNameTxt_.text)
				SetActive(arg_708_1.iconTrs_.gameObject, false)
				arg_708_1.callingController_:SetSelectedState("normal")

				local var_711_3 = arg_708_1:GetWordFromCfg(417161172)
				local var_711_4 = arg_708_1:FormatText(var_711_3.content)

				arg_708_1.text_.text = var_711_4

				LuaForUtil.ClearLinePrefixSymbol(arg_708_1.text_)

				local var_711_5 = 19
				local var_711_6 = utf8.len(var_711_4)
				local var_711_7 = var_711_5 <= 0 and var_711_1 or var_711_1 * (var_711_6 / var_711_5)

				if var_711_7 > 0 and var_711_1 < var_711_7 then
					arg_708_1.talkMaxDuration = var_711_7

					if var_711_7 + var_711_0 > arg_708_1.duration_ then
						arg_708_1.duration_ = var_711_7 + var_711_0
					end
				end

				arg_708_1.text_.text = var_711_4
				arg_708_1.typewritter.percent = 0

				arg_708_1.typewritter:SetDirty()
				arg_708_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161172", "story_v_out_417161.awb") ~= 0 then
					local var_711_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161172", "story_v_out_417161.awb") / 1000

					if var_711_8 + var_711_0 > arg_708_1.duration_ then
						arg_708_1.duration_ = var_711_8 + var_711_0
					end

					if var_711_3.prefab_name ~= "" and arg_708_1.actors_[var_711_3.prefab_name] ~= nil then
						local var_711_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_708_1.actors_[var_711_3.prefab_name].transform, "story_v_out_417161", "417161172", "story_v_out_417161.awb")

						arg_708_1:RecordAudio("417161172", var_711_9)
						arg_708_1:RecordAudio("417161172", var_711_9)
					else
						arg_708_1:AudioAction("play", "voice", "story_v_out_417161", "417161172", "story_v_out_417161.awb")
					end

					arg_708_1:RecordHistoryTalkVoice("story_v_out_417161", "417161172", "story_v_out_417161.awb")
				end

				arg_708_1:RecordContent(arg_708_1.text_.text)
			end

			local var_711_10 = math.max(var_711_1, arg_708_1.talkMaxDuration)

			if var_711_0 <= arg_708_1.time_ and arg_708_1.time_ < var_711_0 + var_711_10 then
				arg_708_1.typewritter.percent = (arg_708_1.time_ - var_711_0) / var_711_10

				arg_708_1.typewritter:SetDirty()
			end

			if arg_708_1.time_ >= var_711_0 + var_711_10 and arg_708_1.time_ < var_711_0 + var_711_10 + arg_711_0 then
				arg_708_1.typewritter.percent = 1

				arg_708_1.typewritter:SetDirty()
				arg_708_1:ShowNextGo(true)
			end
		end
	end,
	Play417161173 = function(arg_712_0, arg_712_1)
		arg_712_1.time_ = 0
		arg_712_1.frameCnt_ = 0
		arg_712_1.state_ = "playing"
		arg_712_1.curTalkId_ = 417161173
		arg_712_1.duration_ = 9.57

		local var_712_0 = {
			zh = 8.6,
			ja = 9.566
		}
		local var_712_1 = manager.audio:GetLocalizationFlag()

		if var_712_0[var_712_1] ~= nil then
			arg_712_1.duration_ = var_712_0[var_712_1]
		end

		SetActive(arg_712_1.tipsGo_, false)

		function arg_712_1.onSingleLineFinish_()
			arg_712_1.onSingleLineUpdate_ = nil
			arg_712_1.onSingleLineFinish_ = nil
			arg_712_1.state_ = "waiting"
		end

		function arg_712_1.playNext_(arg_714_0)
			if arg_714_0 == 1 then
				arg_712_0:Play417161174(arg_712_1)
			end
		end

		function arg_712_1.onSingleLineUpdate_(arg_715_0)
			local var_715_0 = 0
			local var_715_1 = 1.075

			if var_715_0 < arg_712_1.time_ and arg_712_1.time_ <= var_715_0 + arg_715_0 then
				arg_712_1.talkMaxDuration = 0
				arg_712_1.dialogCg_.alpha = 1

				arg_712_1.dialog_:SetActive(true)
				SetActive(arg_712_1.leftNameGo_, true)

				local var_715_2 = arg_712_1:FormatText(StoryNameCfg[595].name)

				arg_712_1.leftNameTxt_.text = var_715_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_712_1.leftNameTxt_.transform)

				arg_712_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_712_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_712_1:RecordName(arg_712_1.leftNameTxt_.text)
				SetActive(arg_712_1.iconTrs_.gameObject, false)
				arg_712_1.callingController_:SetSelectedState("normal")

				local var_715_3 = arg_712_1:GetWordFromCfg(417161173)
				local var_715_4 = arg_712_1:FormatText(var_715_3.content)

				arg_712_1.text_.text = var_715_4

				LuaForUtil.ClearLinePrefixSymbol(arg_712_1.text_)

				local var_715_5 = 43
				local var_715_6 = utf8.len(var_715_4)
				local var_715_7 = var_715_5 <= 0 and var_715_1 or var_715_1 * (var_715_6 / var_715_5)

				if var_715_7 > 0 and var_715_1 < var_715_7 then
					arg_712_1.talkMaxDuration = var_715_7

					if var_715_7 + var_715_0 > arg_712_1.duration_ then
						arg_712_1.duration_ = var_715_7 + var_715_0
					end
				end

				arg_712_1.text_.text = var_715_4
				arg_712_1.typewritter.percent = 0

				arg_712_1.typewritter:SetDirty()
				arg_712_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161173", "story_v_out_417161.awb") ~= 0 then
					local var_715_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161173", "story_v_out_417161.awb") / 1000

					if var_715_8 + var_715_0 > arg_712_1.duration_ then
						arg_712_1.duration_ = var_715_8 + var_715_0
					end

					if var_715_3.prefab_name ~= "" and arg_712_1.actors_[var_715_3.prefab_name] ~= nil then
						local var_715_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_712_1.actors_[var_715_3.prefab_name].transform, "story_v_out_417161", "417161173", "story_v_out_417161.awb")

						arg_712_1:RecordAudio("417161173", var_715_9)
						arg_712_1:RecordAudio("417161173", var_715_9)
					else
						arg_712_1:AudioAction("play", "voice", "story_v_out_417161", "417161173", "story_v_out_417161.awb")
					end

					arg_712_1:RecordHistoryTalkVoice("story_v_out_417161", "417161173", "story_v_out_417161.awb")
				end

				arg_712_1:RecordContent(arg_712_1.text_.text)
			end

			local var_715_10 = math.max(var_715_1, arg_712_1.talkMaxDuration)

			if var_715_0 <= arg_712_1.time_ and arg_712_1.time_ < var_715_0 + var_715_10 then
				arg_712_1.typewritter.percent = (arg_712_1.time_ - var_715_0) / var_715_10

				arg_712_1.typewritter:SetDirty()
			end

			if arg_712_1.time_ >= var_715_0 + var_715_10 and arg_712_1.time_ < var_715_0 + var_715_10 + arg_715_0 then
				arg_712_1.typewritter.percent = 1

				arg_712_1.typewritter:SetDirty()
				arg_712_1:ShowNextGo(true)
			end
		end
	end,
	Play417161174 = function(arg_716_0, arg_716_1)
		arg_716_1.time_ = 0
		arg_716_1.frameCnt_ = 0
		arg_716_1.state_ = "playing"
		arg_716_1.curTalkId_ = 417161174
		arg_716_1.duration_ = 2.1

		local var_716_0 = {
			zh = 2.1,
			ja = 2.066
		}
		local var_716_1 = manager.audio:GetLocalizationFlag()

		if var_716_0[var_716_1] ~= nil then
			arg_716_1.duration_ = var_716_0[var_716_1]
		end

		SetActive(arg_716_1.tipsGo_, false)

		function arg_716_1.onSingleLineFinish_()
			arg_716_1.onSingleLineUpdate_ = nil
			arg_716_1.onSingleLineFinish_ = nil
			arg_716_1.state_ = "waiting"
		end

		function arg_716_1.playNext_(arg_718_0)
			if arg_718_0 == 1 then
				arg_716_0:Play417161175(arg_716_1)
			end
		end

		function arg_716_1.onSingleLineUpdate_(arg_719_0)
			local var_719_0 = 0
			local var_719_1 = 0.275

			if var_719_0 < arg_716_1.time_ and arg_716_1.time_ <= var_719_0 + arg_719_0 then
				arg_716_1.talkMaxDuration = 0
				arg_716_1.dialogCg_.alpha = 1

				arg_716_1.dialog_:SetActive(true)
				SetActive(arg_716_1.leftNameGo_, true)

				local var_719_2 = arg_716_1:FormatText(StoryNameCfg[1125].name)

				arg_716_1.leftNameTxt_.text = var_719_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_716_1.leftNameTxt_.transform)

				arg_716_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_716_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_716_1:RecordName(arg_716_1.leftNameTxt_.text)
				SetActive(arg_716_1.iconTrs_.gameObject, false)
				arg_716_1.callingController_:SetSelectedState("normal")

				local var_719_3 = arg_716_1:GetWordFromCfg(417161174)
				local var_719_4 = arg_716_1:FormatText(var_719_3.content)

				arg_716_1.text_.text = var_719_4

				LuaForUtil.ClearLinePrefixSymbol(arg_716_1.text_)

				local var_719_5 = 11
				local var_719_6 = utf8.len(var_719_4)
				local var_719_7 = var_719_5 <= 0 and var_719_1 or var_719_1 * (var_719_6 / var_719_5)

				if var_719_7 > 0 and var_719_1 < var_719_7 then
					arg_716_1.talkMaxDuration = var_719_7

					if var_719_7 + var_719_0 > arg_716_1.duration_ then
						arg_716_1.duration_ = var_719_7 + var_719_0
					end
				end

				arg_716_1.text_.text = var_719_4
				arg_716_1.typewritter.percent = 0

				arg_716_1.typewritter:SetDirty()
				arg_716_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161174", "story_v_out_417161.awb") ~= 0 then
					local var_719_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161174", "story_v_out_417161.awb") / 1000

					if var_719_8 + var_719_0 > arg_716_1.duration_ then
						arg_716_1.duration_ = var_719_8 + var_719_0
					end

					if var_719_3.prefab_name ~= "" and arg_716_1.actors_[var_719_3.prefab_name] ~= nil then
						local var_719_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_716_1.actors_[var_719_3.prefab_name].transform, "story_v_out_417161", "417161174", "story_v_out_417161.awb")

						arg_716_1:RecordAudio("417161174", var_719_9)
						arg_716_1:RecordAudio("417161174", var_719_9)
					else
						arg_716_1:AudioAction("play", "voice", "story_v_out_417161", "417161174", "story_v_out_417161.awb")
					end

					arg_716_1:RecordHistoryTalkVoice("story_v_out_417161", "417161174", "story_v_out_417161.awb")
				end

				arg_716_1:RecordContent(arg_716_1.text_.text)
			end

			local var_719_10 = math.max(var_719_1, arg_716_1.talkMaxDuration)

			if var_719_0 <= arg_716_1.time_ and arg_716_1.time_ < var_719_0 + var_719_10 then
				arg_716_1.typewritter.percent = (arg_716_1.time_ - var_719_0) / var_719_10

				arg_716_1.typewritter:SetDirty()
			end

			if arg_716_1.time_ >= var_719_0 + var_719_10 and arg_716_1.time_ < var_719_0 + var_719_10 + arg_719_0 then
				arg_716_1.typewritter.percent = 1

				arg_716_1.typewritter:SetDirty()
				arg_716_1:ShowNextGo(true)
			end
		end
	end,
	Play417161175 = function(arg_720_0, arg_720_1)
		arg_720_1.time_ = 0
		arg_720_1.frameCnt_ = 0
		arg_720_1.state_ = "playing"
		arg_720_1.curTalkId_ = 417161175
		arg_720_1.duration_ = 2.53

		local var_720_0 = {
			zh = 1.333,
			ja = 2.533
		}
		local var_720_1 = manager.audio:GetLocalizationFlag()

		if var_720_0[var_720_1] ~= nil then
			arg_720_1.duration_ = var_720_0[var_720_1]
		end

		SetActive(arg_720_1.tipsGo_, false)

		function arg_720_1.onSingleLineFinish_()
			arg_720_1.onSingleLineUpdate_ = nil
			arg_720_1.onSingleLineFinish_ = nil
			arg_720_1.state_ = "waiting"
		end

		function arg_720_1.playNext_(arg_722_0)
			if arg_722_0 == 1 then
				arg_720_0:Play417161176(arg_720_1)
			end
		end

		function arg_720_1.onSingleLineUpdate_(arg_723_0)
			local var_723_0 = 0
			local var_723_1 = 0.125

			if var_723_0 < arg_720_1.time_ and arg_720_1.time_ <= var_723_0 + arg_723_0 then
				arg_720_1.talkMaxDuration = 0
				arg_720_1.dialogCg_.alpha = 1

				arg_720_1.dialog_:SetActive(true)
				SetActive(arg_720_1.leftNameGo_, true)

				local var_723_2 = arg_720_1:FormatText(StoryNameCfg[595].name)

				arg_720_1.leftNameTxt_.text = var_723_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_720_1.leftNameTxt_.transform)

				arg_720_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_720_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_720_1:RecordName(arg_720_1.leftNameTxt_.text)
				SetActive(arg_720_1.iconTrs_.gameObject, false)
				arg_720_1.callingController_:SetSelectedState("normal")

				local var_723_3 = arg_720_1:GetWordFromCfg(417161175)
				local var_723_4 = arg_720_1:FormatText(var_723_3.content)

				arg_720_1.text_.text = var_723_4

				LuaForUtil.ClearLinePrefixSymbol(arg_720_1.text_)

				local var_723_5 = 5
				local var_723_6 = utf8.len(var_723_4)
				local var_723_7 = var_723_5 <= 0 and var_723_1 or var_723_1 * (var_723_6 / var_723_5)

				if var_723_7 > 0 and var_723_1 < var_723_7 then
					arg_720_1.talkMaxDuration = var_723_7

					if var_723_7 + var_723_0 > arg_720_1.duration_ then
						arg_720_1.duration_ = var_723_7 + var_723_0
					end
				end

				arg_720_1.text_.text = var_723_4
				arg_720_1.typewritter.percent = 0

				arg_720_1.typewritter:SetDirty()
				arg_720_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161175", "story_v_out_417161.awb") ~= 0 then
					local var_723_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161175", "story_v_out_417161.awb") / 1000

					if var_723_8 + var_723_0 > arg_720_1.duration_ then
						arg_720_1.duration_ = var_723_8 + var_723_0
					end

					if var_723_3.prefab_name ~= "" and arg_720_1.actors_[var_723_3.prefab_name] ~= nil then
						local var_723_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_720_1.actors_[var_723_3.prefab_name].transform, "story_v_out_417161", "417161175", "story_v_out_417161.awb")

						arg_720_1:RecordAudio("417161175", var_723_9)
						arg_720_1:RecordAudio("417161175", var_723_9)
					else
						arg_720_1:AudioAction("play", "voice", "story_v_out_417161", "417161175", "story_v_out_417161.awb")
					end

					arg_720_1:RecordHistoryTalkVoice("story_v_out_417161", "417161175", "story_v_out_417161.awb")
				end

				arg_720_1:RecordContent(arg_720_1.text_.text)
			end

			local var_723_10 = math.max(var_723_1, arg_720_1.talkMaxDuration)

			if var_723_0 <= arg_720_1.time_ and arg_720_1.time_ < var_723_0 + var_723_10 then
				arg_720_1.typewritter.percent = (arg_720_1.time_ - var_723_0) / var_723_10

				arg_720_1.typewritter:SetDirty()
			end

			if arg_720_1.time_ >= var_723_0 + var_723_10 and arg_720_1.time_ < var_723_0 + var_723_10 + arg_723_0 then
				arg_720_1.typewritter.percent = 1

				arg_720_1.typewritter:SetDirty()
				arg_720_1:ShowNextGo(true)
			end
		end
	end,
	Play417161176 = function(arg_724_0, arg_724_1)
		arg_724_1.time_ = 0
		arg_724_1.frameCnt_ = 0
		arg_724_1.state_ = "playing"
		arg_724_1.curTalkId_ = 417161176
		arg_724_1.duration_ = 5

		SetActive(arg_724_1.tipsGo_, false)

		function arg_724_1.onSingleLineFinish_()
			arg_724_1.onSingleLineUpdate_ = nil
			arg_724_1.onSingleLineFinish_ = nil
			arg_724_1.state_ = "waiting"
		end

		function arg_724_1.playNext_(arg_726_0)
			if arg_726_0 == 1 then
				arg_724_0:Play417161177(arg_724_1)
			end
		end

		function arg_724_1.onSingleLineUpdate_(arg_727_0)
			local var_727_0 = 0.166666666666667
			local var_727_1 = 1

			if var_727_0 < arg_724_1.time_ and arg_724_1.time_ <= var_727_0 + arg_727_0 then
				local var_727_2 = "play"
				local var_727_3 = "effect"

				arg_724_1:AudioAction(var_727_2, var_727_3, "se_story_1311", "se_story_1311_pictures", "")
			end

			local var_727_4 = 0
			local var_727_5 = 0.9

			if var_727_4 < arg_724_1.time_ and arg_724_1.time_ <= var_727_4 + arg_727_0 then
				arg_724_1.talkMaxDuration = 0
				arg_724_1.dialogCg_.alpha = 1

				arg_724_1.dialog_:SetActive(true)
				SetActive(arg_724_1.leftNameGo_, false)

				arg_724_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_724_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_724_1:RecordName(arg_724_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_724_1.iconTrs_.gameObject, false)
				arg_724_1.callingController_:SetSelectedState("normal")

				local var_727_6 = arg_724_1:GetWordFromCfg(417161176)
				local var_727_7 = arg_724_1:FormatText(var_727_6.content)

				arg_724_1.text_.text = var_727_7

				LuaForUtil.ClearLinePrefixSymbol(arg_724_1.text_)

				local var_727_8 = 36
				local var_727_9 = utf8.len(var_727_7)
				local var_727_10 = var_727_8 <= 0 and var_727_5 or var_727_5 * (var_727_9 / var_727_8)

				if var_727_10 > 0 and var_727_5 < var_727_10 then
					arg_724_1.talkMaxDuration = var_727_10

					if var_727_10 + var_727_4 > arg_724_1.duration_ then
						arg_724_1.duration_ = var_727_10 + var_727_4
					end
				end

				arg_724_1.text_.text = var_727_7
				arg_724_1.typewritter.percent = 0

				arg_724_1.typewritter:SetDirty()
				arg_724_1:ShowNextGo(false)
				arg_724_1:RecordContent(arg_724_1.text_.text)
			end

			local var_727_11 = math.max(var_727_5, arg_724_1.talkMaxDuration)

			if var_727_4 <= arg_724_1.time_ and arg_724_1.time_ < var_727_4 + var_727_11 then
				arg_724_1.typewritter.percent = (arg_724_1.time_ - var_727_4) / var_727_11

				arg_724_1.typewritter:SetDirty()
			end

			if arg_724_1.time_ >= var_727_4 + var_727_11 and arg_724_1.time_ < var_727_4 + var_727_11 + arg_727_0 then
				arg_724_1.typewritter.percent = 1

				arg_724_1.typewritter:SetDirty()
				arg_724_1:ShowNextGo(true)
			end
		end
	end,
	Play417161177 = function(arg_728_0, arg_728_1)
		arg_728_1.time_ = 0
		arg_728_1.frameCnt_ = 0
		arg_728_1.state_ = "playing"
		arg_728_1.curTalkId_ = 417161177
		arg_728_1.duration_ = 10.23

		local var_728_0 = {
			zh = 10.233,
			ja = 8.366
		}
		local var_728_1 = manager.audio:GetLocalizationFlag()

		if var_728_0[var_728_1] ~= nil then
			arg_728_1.duration_ = var_728_0[var_728_1]
		end

		SetActive(arg_728_1.tipsGo_, false)

		function arg_728_1.onSingleLineFinish_()
			arg_728_1.onSingleLineUpdate_ = nil
			arg_728_1.onSingleLineFinish_ = nil
			arg_728_1.state_ = "waiting"
		end

		function arg_728_1.playNext_(arg_730_0)
			if arg_730_0 == 1 then
				arg_728_0:Play417161178(arg_728_1)
			end
		end

		function arg_728_1.onSingleLineUpdate_(arg_731_0)
			local var_731_0 = 0
			local var_731_1 = 1.15

			if var_731_0 < arg_728_1.time_ and arg_728_1.time_ <= var_731_0 + arg_731_0 then
				arg_728_1.talkMaxDuration = 0
				arg_728_1.dialogCg_.alpha = 1

				arg_728_1.dialog_:SetActive(true)
				SetActive(arg_728_1.leftNameGo_, true)

				local var_731_2 = arg_728_1:FormatText(StoryNameCfg[1125].name)

				arg_728_1.leftNameTxt_.text = var_731_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_728_1.leftNameTxt_.transform)

				arg_728_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_728_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_728_1:RecordName(arg_728_1.leftNameTxt_.text)
				SetActive(arg_728_1.iconTrs_.gameObject, false)
				arg_728_1.callingController_:SetSelectedState("normal")

				local var_731_3 = arg_728_1:GetWordFromCfg(417161177)
				local var_731_4 = arg_728_1:FormatText(var_731_3.content)

				arg_728_1.text_.text = var_731_4

				LuaForUtil.ClearLinePrefixSymbol(arg_728_1.text_)

				local var_731_5 = 46
				local var_731_6 = utf8.len(var_731_4)
				local var_731_7 = var_731_5 <= 0 and var_731_1 or var_731_1 * (var_731_6 / var_731_5)

				if var_731_7 > 0 and var_731_1 < var_731_7 then
					arg_728_1.talkMaxDuration = var_731_7

					if var_731_7 + var_731_0 > arg_728_1.duration_ then
						arg_728_1.duration_ = var_731_7 + var_731_0
					end
				end

				arg_728_1.text_.text = var_731_4
				arg_728_1.typewritter.percent = 0

				arg_728_1.typewritter:SetDirty()
				arg_728_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161177", "story_v_out_417161.awb") ~= 0 then
					local var_731_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161177", "story_v_out_417161.awb") / 1000

					if var_731_8 + var_731_0 > arg_728_1.duration_ then
						arg_728_1.duration_ = var_731_8 + var_731_0
					end

					if var_731_3.prefab_name ~= "" and arg_728_1.actors_[var_731_3.prefab_name] ~= nil then
						local var_731_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_728_1.actors_[var_731_3.prefab_name].transform, "story_v_out_417161", "417161177", "story_v_out_417161.awb")

						arg_728_1:RecordAudio("417161177", var_731_9)
						arg_728_1:RecordAudio("417161177", var_731_9)
					else
						arg_728_1:AudioAction("play", "voice", "story_v_out_417161", "417161177", "story_v_out_417161.awb")
					end

					arg_728_1:RecordHistoryTalkVoice("story_v_out_417161", "417161177", "story_v_out_417161.awb")
				end

				arg_728_1:RecordContent(arg_728_1.text_.text)
			end

			local var_731_10 = math.max(var_731_1, arg_728_1.talkMaxDuration)

			if var_731_0 <= arg_728_1.time_ and arg_728_1.time_ < var_731_0 + var_731_10 then
				arg_728_1.typewritter.percent = (arg_728_1.time_ - var_731_0) / var_731_10

				arg_728_1.typewritter:SetDirty()
			end

			if arg_728_1.time_ >= var_731_0 + var_731_10 and arg_728_1.time_ < var_731_0 + var_731_10 + arg_731_0 then
				arg_728_1.typewritter.percent = 1

				arg_728_1.typewritter:SetDirty()
				arg_728_1:ShowNextGo(true)
			end
		end
	end,
	Play417161178 = function(arg_732_0, arg_732_1)
		arg_732_1.time_ = 0
		arg_732_1.frameCnt_ = 0
		arg_732_1.state_ = "playing"
		arg_732_1.curTalkId_ = 417161178
		arg_732_1.duration_ = 5.83

		local var_732_0 = {
			zh = 4.2,
			ja = 5.833
		}
		local var_732_1 = manager.audio:GetLocalizationFlag()

		if var_732_0[var_732_1] ~= nil then
			arg_732_1.duration_ = var_732_0[var_732_1]
		end

		SetActive(arg_732_1.tipsGo_, false)

		function arg_732_1.onSingleLineFinish_()
			arg_732_1.onSingleLineUpdate_ = nil
			arg_732_1.onSingleLineFinish_ = nil
			arg_732_1.state_ = "waiting"
		end

		function arg_732_1.playNext_(arg_734_0)
			if arg_734_0 == 1 then
				arg_732_0:Play417161179(arg_732_1)
			end
		end

		function arg_732_1.onSingleLineUpdate_(arg_735_0)
			local var_735_0 = 0
			local var_735_1 = 0.475

			if var_735_0 < arg_732_1.time_ and arg_732_1.time_ <= var_735_0 + arg_735_0 then
				arg_732_1.talkMaxDuration = 0
				arg_732_1.dialogCg_.alpha = 1

				arg_732_1.dialog_:SetActive(true)
				SetActive(arg_732_1.leftNameGo_, true)

				local var_735_2 = arg_732_1:FormatText(StoryNameCfg[1125].name)

				arg_732_1.leftNameTxt_.text = var_735_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_732_1.leftNameTxt_.transform)

				arg_732_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_732_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_732_1:RecordName(arg_732_1.leftNameTxt_.text)
				SetActive(arg_732_1.iconTrs_.gameObject, false)
				arg_732_1.callingController_:SetSelectedState("normal")

				local var_735_3 = arg_732_1:GetWordFromCfg(417161178)
				local var_735_4 = arg_732_1:FormatText(var_735_3.content)

				arg_732_1.text_.text = var_735_4

				LuaForUtil.ClearLinePrefixSymbol(arg_732_1.text_)

				local var_735_5 = 19
				local var_735_6 = utf8.len(var_735_4)
				local var_735_7 = var_735_5 <= 0 and var_735_1 or var_735_1 * (var_735_6 / var_735_5)

				if var_735_7 > 0 and var_735_1 < var_735_7 then
					arg_732_1.talkMaxDuration = var_735_7

					if var_735_7 + var_735_0 > arg_732_1.duration_ then
						arg_732_1.duration_ = var_735_7 + var_735_0
					end
				end

				arg_732_1.text_.text = var_735_4
				arg_732_1.typewritter.percent = 0

				arg_732_1.typewritter:SetDirty()
				arg_732_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161178", "story_v_out_417161.awb") ~= 0 then
					local var_735_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161178", "story_v_out_417161.awb") / 1000

					if var_735_8 + var_735_0 > arg_732_1.duration_ then
						arg_732_1.duration_ = var_735_8 + var_735_0
					end

					if var_735_3.prefab_name ~= "" and arg_732_1.actors_[var_735_3.prefab_name] ~= nil then
						local var_735_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_732_1.actors_[var_735_3.prefab_name].transform, "story_v_out_417161", "417161178", "story_v_out_417161.awb")

						arg_732_1:RecordAudio("417161178", var_735_9)
						arg_732_1:RecordAudio("417161178", var_735_9)
					else
						arg_732_1:AudioAction("play", "voice", "story_v_out_417161", "417161178", "story_v_out_417161.awb")
					end

					arg_732_1:RecordHistoryTalkVoice("story_v_out_417161", "417161178", "story_v_out_417161.awb")
				end

				arg_732_1:RecordContent(arg_732_1.text_.text)
			end

			local var_735_10 = math.max(var_735_1, arg_732_1.talkMaxDuration)

			if var_735_0 <= arg_732_1.time_ and arg_732_1.time_ < var_735_0 + var_735_10 then
				arg_732_1.typewritter.percent = (arg_732_1.time_ - var_735_0) / var_735_10

				arg_732_1.typewritter:SetDirty()
			end

			if arg_732_1.time_ >= var_735_0 + var_735_10 and arg_732_1.time_ < var_735_0 + var_735_10 + arg_735_0 then
				arg_732_1.typewritter.percent = 1

				arg_732_1.typewritter:SetDirty()
				arg_732_1:ShowNextGo(true)
			end
		end
	end,
	Play417161179 = function(arg_736_0, arg_736_1)
		arg_736_1.time_ = 0
		arg_736_1.frameCnt_ = 0
		arg_736_1.state_ = "playing"
		arg_736_1.curTalkId_ = 417161179
		arg_736_1.duration_ = 5

		SetActive(arg_736_1.tipsGo_, false)

		function arg_736_1.onSingleLineFinish_()
			arg_736_1.onSingleLineUpdate_ = nil
			arg_736_1.onSingleLineFinish_ = nil
			arg_736_1.state_ = "waiting"
		end

		function arg_736_1.playNext_(arg_738_0)
			if arg_738_0 == 1 then
				arg_736_0:Play417161180(arg_736_1)
			end
		end

		function arg_736_1.onSingleLineUpdate_(arg_739_0)
			local var_739_0 = 0
			local var_739_1 = 0.725

			if var_739_0 < arg_736_1.time_ and arg_736_1.time_ <= var_739_0 + arg_739_0 then
				arg_736_1.talkMaxDuration = 0
				arg_736_1.dialogCg_.alpha = 1

				arg_736_1.dialog_:SetActive(true)
				SetActive(arg_736_1.leftNameGo_, false)

				arg_736_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_736_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_736_1:RecordName(arg_736_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_736_1.iconTrs_.gameObject, false)
				arg_736_1.callingController_:SetSelectedState("normal")

				local var_739_2 = arg_736_1:GetWordFromCfg(417161179)
				local var_739_3 = arg_736_1:FormatText(var_739_2.content)

				arg_736_1.text_.text = var_739_3

				LuaForUtil.ClearLinePrefixSymbol(arg_736_1.text_)

				local var_739_4 = 29
				local var_739_5 = utf8.len(var_739_3)
				local var_739_6 = var_739_4 <= 0 and var_739_1 or var_739_1 * (var_739_5 / var_739_4)

				if var_739_6 > 0 and var_739_1 < var_739_6 then
					arg_736_1.talkMaxDuration = var_739_6

					if var_739_6 + var_739_0 > arg_736_1.duration_ then
						arg_736_1.duration_ = var_739_6 + var_739_0
					end
				end

				arg_736_1.text_.text = var_739_3
				arg_736_1.typewritter.percent = 0

				arg_736_1.typewritter:SetDirty()
				arg_736_1:ShowNextGo(false)
				arg_736_1:RecordContent(arg_736_1.text_.text)
			end

			local var_739_7 = math.max(var_739_1, arg_736_1.talkMaxDuration)

			if var_739_0 <= arg_736_1.time_ and arg_736_1.time_ < var_739_0 + var_739_7 then
				arg_736_1.typewritter.percent = (arg_736_1.time_ - var_739_0) / var_739_7

				arg_736_1.typewritter:SetDirty()
			end

			if arg_736_1.time_ >= var_739_0 + var_739_7 and arg_736_1.time_ < var_739_0 + var_739_7 + arg_739_0 then
				arg_736_1.typewritter.percent = 1

				arg_736_1.typewritter:SetDirty()
				arg_736_1:ShowNextGo(true)
			end
		end
	end,
	Play417161180 = function(arg_740_0, arg_740_1)
		arg_740_1.time_ = 0
		arg_740_1.frameCnt_ = 0
		arg_740_1.state_ = "playing"
		arg_740_1.curTalkId_ = 417161180
		arg_740_1.duration_ = 2.9

		local var_740_0 = {
			zh = 1.3,
			ja = 2.9
		}
		local var_740_1 = manager.audio:GetLocalizationFlag()

		if var_740_0[var_740_1] ~= nil then
			arg_740_1.duration_ = var_740_0[var_740_1]
		end

		SetActive(arg_740_1.tipsGo_, false)

		function arg_740_1.onSingleLineFinish_()
			arg_740_1.onSingleLineUpdate_ = nil
			arg_740_1.onSingleLineFinish_ = nil
			arg_740_1.state_ = "waiting"
		end

		function arg_740_1.playNext_(arg_742_0)
			if arg_742_0 == 1 then
				arg_740_0:Play417161181(arg_740_1)
			end
		end

		function arg_740_1.onSingleLineUpdate_(arg_743_0)
			local var_743_0 = 0
			local var_743_1 = 0.125

			if var_743_0 < arg_740_1.time_ and arg_740_1.time_ <= var_743_0 + arg_743_0 then
				arg_740_1.talkMaxDuration = 0
				arg_740_1.dialogCg_.alpha = 1

				arg_740_1.dialog_:SetActive(true)
				SetActive(arg_740_1.leftNameGo_, true)

				local var_743_2 = arg_740_1:FormatText(StoryNameCfg[1125].name)

				arg_740_1.leftNameTxt_.text = var_743_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_740_1.leftNameTxt_.transform)

				arg_740_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_740_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_740_1:RecordName(arg_740_1.leftNameTxt_.text)
				SetActive(arg_740_1.iconTrs_.gameObject, false)
				arg_740_1.callingController_:SetSelectedState("normal")

				local var_743_3 = arg_740_1:GetWordFromCfg(417161180)
				local var_743_4 = arg_740_1:FormatText(var_743_3.content)

				arg_740_1.text_.text = var_743_4

				LuaForUtil.ClearLinePrefixSymbol(arg_740_1.text_)

				local var_743_5 = 5
				local var_743_6 = utf8.len(var_743_4)
				local var_743_7 = var_743_5 <= 0 and var_743_1 or var_743_1 * (var_743_6 / var_743_5)

				if var_743_7 > 0 and var_743_1 < var_743_7 then
					arg_740_1.talkMaxDuration = var_743_7

					if var_743_7 + var_743_0 > arg_740_1.duration_ then
						arg_740_1.duration_ = var_743_7 + var_743_0
					end
				end

				arg_740_1.text_.text = var_743_4
				arg_740_1.typewritter.percent = 0

				arg_740_1.typewritter:SetDirty()
				arg_740_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161180", "story_v_out_417161.awb") ~= 0 then
					local var_743_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161180", "story_v_out_417161.awb") / 1000

					if var_743_8 + var_743_0 > arg_740_1.duration_ then
						arg_740_1.duration_ = var_743_8 + var_743_0
					end

					if var_743_3.prefab_name ~= "" and arg_740_1.actors_[var_743_3.prefab_name] ~= nil then
						local var_743_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_740_1.actors_[var_743_3.prefab_name].transform, "story_v_out_417161", "417161180", "story_v_out_417161.awb")

						arg_740_1:RecordAudio("417161180", var_743_9)
						arg_740_1:RecordAudio("417161180", var_743_9)
					else
						arg_740_1:AudioAction("play", "voice", "story_v_out_417161", "417161180", "story_v_out_417161.awb")
					end

					arg_740_1:RecordHistoryTalkVoice("story_v_out_417161", "417161180", "story_v_out_417161.awb")
				end

				arg_740_1:RecordContent(arg_740_1.text_.text)
			end

			local var_743_10 = math.max(var_743_1, arg_740_1.talkMaxDuration)

			if var_743_0 <= arg_740_1.time_ and arg_740_1.time_ < var_743_0 + var_743_10 then
				arg_740_1.typewritter.percent = (arg_740_1.time_ - var_743_0) / var_743_10

				arg_740_1.typewritter:SetDirty()
			end

			if arg_740_1.time_ >= var_743_0 + var_743_10 and arg_740_1.time_ < var_743_0 + var_743_10 + arg_743_0 then
				arg_740_1.typewritter.percent = 1

				arg_740_1.typewritter:SetDirty()
				arg_740_1:ShowNextGo(true)
			end
		end
	end,
	Play417161181 = function(arg_744_0, arg_744_1)
		arg_744_1.time_ = 0
		arg_744_1.frameCnt_ = 0
		arg_744_1.state_ = "playing"
		arg_744_1.curTalkId_ = 417161181
		arg_744_1.duration_ = 7.93

		local var_744_0 = {
			zh = 3.933,
			ja = 7.933
		}
		local var_744_1 = manager.audio:GetLocalizationFlag()

		if var_744_0[var_744_1] ~= nil then
			arg_744_1.duration_ = var_744_0[var_744_1]
		end

		SetActive(arg_744_1.tipsGo_, false)

		function arg_744_1.onSingleLineFinish_()
			arg_744_1.onSingleLineUpdate_ = nil
			arg_744_1.onSingleLineFinish_ = nil
			arg_744_1.state_ = "waiting"
		end

		function arg_744_1.playNext_(arg_746_0)
			if arg_746_0 == 1 then
				arg_744_0:Play417161182(arg_744_1)
			end
		end

		function arg_744_1.onSingleLineUpdate_(arg_747_0)
			local var_747_0 = 0
			local var_747_1 = 0.425

			if var_747_0 < arg_744_1.time_ and arg_744_1.time_ <= var_747_0 + arg_747_0 then
				arg_744_1.talkMaxDuration = 0
				arg_744_1.dialogCg_.alpha = 1

				arg_744_1.dialog_:SetActive(true)
				SetActive(arg_744_1.leftNameGo_, true)

				local var_747_2 = arg_744_1:FormatText(StoryNameCfg[595].name)

				arg_744_1.leftNameTxt_.text = var_747_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_744_1.leftNameTxt_.transform)

				arg_744_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_744_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_744_1:RecordName(arg_744_1.leftNameTxt_.text)
				SetActive(arg_744_1.iconTrs_.gameObject, false)
				arg_744_1.callingController_:SetSelectedState("normal")

				local var_747_3 = arg_744_1:GetWordFromCfg(417161181)
				local var_747_4 = arg_744_1:FormatText(var_747_3.content)

				arg_744_1.text_.text = var_747_4

				LuaForUtil.ClearLinePrefixSymbol(arg_744_1.text_)

				local var_747_5 = 17
				local var_747_6 = utf8.len(var_747_4)
				local var_747_7 = var_747_5 <= 0 and var_747_1 or var_747_1 * (var_747_6 / var_747_5)

				if var_747_7 > 0 and var_747_1 < var_747_7 then
					arg_744_1.talkMaxDuration = var_747_7

					if var_747_7 + var_747_0 > arg_744_1.duration_ then
						arg_744_1.duration_ = var_747_7 + var_747_0
					end
				end

				arg_744_1.text_.text = var_747_4
				arg_744_1.typewritter.percent = 0

				arg_744_1.typewritter:SetDirty()
				arg_744_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161181", "story_v_out_417161.awb") ~= 0 then
					local var_747_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161181", "story_v_out_417161.awb") / 1000

					if var_747_8 + var_747_0 > arg_744_1.duration_ then
						arg_744_1.duration_ = var_747_8 + var_747_0
					end

					if var_747_3.prefab_name ~= "" and arg_744_1.actors_[var_747_3.prefab_name] ~= nil then
						local var_747_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_744_1.actors_[var_747_3.prefab_name].transform, "story_v_out_417161", "417161181", "story_v_out_417161.awb")

						arg_744_1:RecordAudio("417161181", var_747_9)
						arg_744_1:RecordAudio("417161181", var_747_9)
					else
						arg_744_1:AudioAction("play", "voice", "story_v_out_417161", "417161181", "story_v_out_417161.awb")
					end

					arg_744_1:RecordHistoryTalkVoice("story_v_out_417161", "417161181", "story_v_out_417161.awb")
				end

				arg_744_1:RecordContent(arg_744_1.text_.text)
			end

			local var_747_10 = math.max(var_747_1, arg_744_1.talkMaxDuration)

			if var_747_0 <= arg_744_1.time_ and arg_744_1.time_ < var_747_0 + var_747_10 then
				arg_744_1.typewritter.percent = (arg_744_1.time_ - var_747_0) / var_747_10

				arg_744_1.typewritter:SetDirty()
			end

			if arg_744_1.time_ >= var_747_0 + var_747_10 and arg_744_1.time_ < var_747_0 + var_747_10 + arg_747_0 then
				arg_744_1.typewritter.percent = 1

				arg_744_1.typewritter:SetDirty()
				arg_744_1:ShowNextGo(true)
			end
		end
	end,
	Play417161182 = function(arg_748_0, arg_748_1)
		arg_748_1.time_ = 0
		arg_748_1.frameCnt_ = 0
		arg_748_1.state_ = "playing"
		arg_748_1.curTalkId_ = 417161182
		arg_748_1.duration_ = 3.43

		local var_748_0 = {
			zh = 1.466,
			ja = 3.433
		}
		local var_748_1 = manager.audio:GetLocalizationFlag()

		if var_748_0[var_748_1] ~= nil then
			arg_748_1.duration_ = var_748_0[var_748_1]
		end

		SetActive(arg_748_1.tipsGo_, false)

		function arg_748_1.onSingleLineFinish_()
			arg_748_1.onSingleLineUpdate_ = nil
			arg_748_1.onSingleLineFinish_ = nil
			arg_748_1.state_ = "waiting"
		end

		function arg_748_1.playNext_(arg_750_0)
			if arg_750_0 == 1 then
				arg_748_0:Play417161183(arg_748_1)
			end
		end

		function arg_748_1.onSingleLineUpdate_(arg_751_0)
			local var_751_0 = 0
			local var_751_1 = 0.175

			if var_751_0 < arg_748_1.time_ and arg_748_1.time_ <= var_751_0 + arg_751_0 then
				arg_748_1.talkMaxDuration = 0
				arg_748_1.dialogCg_.alpha = 1

				arg_748_1.dialog_:SetActive(true)
				SetActive(arg_748_1.leftNameGo_, true)

				local var_751_2 = arg_748_1:FormatText(StoryNameCfg[1125].name)

				arg_748_1.leftNameTxt_.text = var_751_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_748_1.leftNameTxt_.transform)

				arg_748_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_748_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_748_1:RecordName(arg_748_1.leftNameTxt_.text)
				SetActive(arg_748_1.iconTrs_.gameObject, false)
				arg_748_1.callingController_:SetSelectedState("normal")

				local var_751_3 = arg_748_1:GetWordFromCfg(417161182)
				local var_751_4 = arg_748_1:FormatText(var_751_3.content)

				arg_748_1.text_.text = var_751_4

				LuaForUtil.ClearLinePrefixSymbol(arg_748_1.text_)

				local var_751_5 = 7
				local var_751_6 = utf8.len(var_751_4)
				local var_751_7 = var_751_5 <= 0 and var_751_1 or var_751_1 * (var_751_6 / var_751_5)

				if var_751_7 > 0 and var_751_1 < var_751_7 then
					arg_748_1.talkMaxDuration = var_751_7

					if var_751_7 + var_751_0 > arg_748_1.duration_ then
						arg_748_1.duration_ = var_751_7 + var_751_0
					end
				end

				arg_748_1.text_.text = var_751_4
				arg_748_1.typewritter.percent = 0

				arg_748_1.typewritter:SetDirty()
				arg_748_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161182", "story_v_out_417161.awb") ~= 0 then
					local var_751_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161182", "story_v_out_417161.awb") / 1000

					if var_751_8 + var_751_0 > arg_748_1.duration_ then
						arg_748_1.duration_ = var_751_8 + var_751_0
					end

					if var_751_3.prefab_name ~= "" and arg_748_1.actors_[var_751_3.prefab_name] ~= nil then
						local var_751_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_748_1.actors_[var_751_3.prefab_name].transform, "story_v_out_417161", "417161182", "story_v_out_417161.awb")

						arg_748_1:RecordAudio("417161182", var_751_9)
						arg_748_1:RecordAudio("417161182", var_751_9)
					else
						arg_748_1:AudioAction("play", "voice", "story_v_out_417161", "417161182", "story_v_out_417161.awb")
					end

					arg_748_1:RecordHistoryTalkVoice("story_v_out_417161", "417161182", "story_v_out_417161.awb")
				end

				arg_748_1:RecordContent(arg_748_1.text_.text)
			end

			local var_751_10 = math.max(var_751_1, arg_748_1.talkMaxDuration)

			if var_751_0 <= arg_748_1.time_ and arg_748_1.time_ < var_751_0 + var_751_10 then
				arg_748_1.typewritter.percent = (arg_748_1.time_ - var_751_0) / var_751_10

				arg_748_1.typewritter:SetDirty()
			end

			if arg_748_1.time_ >= var_751_0 + var_751_10 and arg_748_1.time_ < var_751_0 + var_751_10 + arg_751_0 then
				arg_748_1.typewritter.percent = 1

				arg_748_1.typewritter:SetDirty()
				arg_748_1:ShowNextGo(true)
			end
		end
	end,
	Play417161183 = function(arg_752_0, arg_752_1)
		arg_752_1.time_ = 0
		arg_752_1.frameCnt_ = 0
		arg_752_1.state_ = "playing"
		arg_752_1.curTalkId_ = 417161183
		arg_752_1.duration_ = 3.33

		local var_752_0 = {
			zh = 3.333,
			ja = 2.8
		}
		local var_752_1 = manager.audio:GetLocalizationFlag()

		if var_752_0[var_752_1] ~= nil then
			arg_752_1.duration_ = var_752_0[var_752_1]
		end

		SetActive(arg_752_1.tipsGo_, false)

		function arg_752_1.onSingleLineFinish_()
			arg_752_1.onSingleLineUpdate_ = nil
			arg_752_1.onSingleLineFinish_ = nil
			arg_752_1.state_ = "waiting"
		end

		function arg_752_1.playNext_(arg_754_0)
			if arg_754_0 == 1 then
				arg_752_0:Play417161184(arg_752_1)
			end
		end

		function arg_752_1.onSingleLineUpdate_(arg_755_0)
			local var_755_0 = 0
			local var_755_1 = 0.35

			if var_755_0 < arg_752_1.time_ and arg_752_1.time_ <= var_755_0 + arg_755_0 then
				arg_752_1.talkMaxDuration = 0
				arg_752_1.dialogCg_.alpha = 1

				arg_752_1.dialog_:SetActive(true)
				SetActive(arg_752_1.leftNameGo_, true)

				local var_755_2 = arg_752_1:FormatText(StoryNameCfg[1125].name)

				arg_752_1.leftNameTxt_.text = var_755_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_752_1.leftNameTxt_.transform)

				arg_752_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_752_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_752_1:RecordName(arg_752_1.leftNameTxt_.text)
				SetActive(arg_752_1.iconTrs_.gameObject, false)
				arg_752_1.callingController_:SetSelectedState("normal")

				local var_755_3 = arg_752_1:GetWordFromCfg(417161183)
				local var_755_4 = arg_752_1:FormatText(var_755_3.content)

				arg_752_1.text_.text = var_755_4

				LuaForUtil.ClearLinePrefixSymbol(arg_752_1.text_)

				local var_755_5 = 14
				local var_755_6 = utf8.len(var_755_4)
				local var_755_7 = var_755_5 <= 0 and var_755_1 or var_755_1 * (var_755_6 / var_755_5)

				if var_755_7 > 0 and var_755_1 < var_755_7 then
					arg_752_1.talkMaxDuration = var_755_7

					if var_755_7 + var_755_0 > arg_752_1.duration_ then
						arg_752_1.duration_ = var_755_7 + var_755_0
					end
				end

				arg_752_1.text_.text = var_755_4
				arg_752_1.typewritter.percent = 0

				arg_752_1.typewritter:SetDirty()
				arg_752_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161183", "story_v_out_417161.awb") ~= 0 then
					local var_755_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161183", "story_v_out_417161.awb") / 1000

					if var_755_8 + var_755_0 > arg_752_1.duration_ then
						arg_752_1.duration_ = var_755_8 + var_755_0
					end

					if var_755_3.prefab_name ~= "" and arg_752_1.actors_[var_755_3.prefab_name] ~= nil then
						local var_755_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_752_1.actors_[var_755_3.prefab_name].transform, "story_v_out_417161", "417161183", "story_v_out_417161.awb")

						arg_752_1:RecordAudio("417161183", var_755_9)
						arg_752_1:RecordAudio("417161183", var_755_9)
					else
						arg_752_1:AudioAction("play", "voice", "story_v_out_417161", "417161183", "story_v_out_417161.awb")
					end

					arg_752_1:RecordHistoryTalkVoice("story_v_out_417161", "417161183", "story_v_out_417161.awb")
				end

				arg_752_1:RecordContent(arg_752_1.text_.text)
			end

			local var_755_10 = math.max(var_755_1, arg_752_1.talkMaxDuration)

			if var_755_0 <= arg_752_1.time_ and arg_752_1.time_ < var_755_0 + var_755_10 then
				arg_752_1.typewritter.percent = (arg_752_1.time_ - var_755_0) / var_755_10

				arg_752_1.typewritter:SetDirty()
			end

			if arg_752_1.time_ >= var_755_0 + var_755_10 and arg_752_1.time_ < var_755_0 + var_755_10 + arg_755_0 then
				arg_752_1.typewritter.percent = 1

				arg_752_1.typewritter:SetDirty()
				arg_752_1:ShowNextGo(true)
			end
		end
	end,
	Play417161184 = function(arg_756_0, arg_756_1)
		arg_756_1.time_ = 0
		arg_756_1.frameCnt_ = 0
		arg_756_1.state_ = "playing"
		arg_756_1.curTalkId_ = 417161184
		arg_756_1.duration_ = 6.17

		local var_756_0 = {
			zh = 5.2,
			ja = 6.166
		}
		local var_756_1 = manager.audio:GetLocalizationFlag()

		if var_756_0[var_756_1] ~= nil then
			arg_756_1.duration_ = var_756_0[var_756_1]
		end

		SetActive(arg_756_1.tipsGo_, false)

		function arg_756_1.onSingleLineFinish_()
			arg_756_1.onSingleLineUpdate_ = nil
			arg_756_1.onSingleLineFinish_ = nil
			arg_756_1.state_ = "waiting"
		end

		function arg_756_1.playNext_(arg_758_0)
			if arg_758_0 == 1 then
				arg_756_0:Play417161185(arg_756_1)
			end
		end

		function arg_756_1.onSingleLineUpdate_(arg_759_0)
			local var_759_0 = 0
			local var_759_1 = 0.325

			if var_759_0 < arg_756_1.time_ and arg_756_1.time_ <= var_759_0 + arg_759_0 then
				arg_756_1.talkMaxDuration = 0
				arg_756_1.dialogCg_.alpha = 1

				arg_756_1.dialog_:SetActive(true)
				SetActive(arg_756_1.leftNameGo_, true)

				local var_759_2 = arg_756_1:FormatText(StoryNameCfg[595].name)

				arg_756_1.leftNameTxt_.text = var_759_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_756_1.leftNameTxt_.transform)

				arg_756_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_756_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_756_1:RecordName(arg_756_1.leftNameTxt_.text)
				SetActive(arg_756_1.iconTrs_.gameObject, false)
				arg_756_1.callingController_:SetSelectedState("normal")

				local var_759_3 = arg_756_1:GetWordFromCfg(417161184)
				local var_759_4 = arg_756_1:FormatText(var_759_3.content)

				arg_756_1.text_.text = var_759_4

				LuaForUtil.ClearLinePrefixSymbol(arg_756_1.text_)

				local var_759_5 = 13
				local var_759_6 = utf8.len(var_759_4)
				local var_759_7 = var_759_5 <= 0 and var_759_1 or var_759_1 * (var_759_6 / var_759_5)

				if var_759_7 > 0 and var_759_1 < var_759_7 then
					arg_756_1.talkMaxDuration = var_759_7

					if var_759_7 + var_759_0 > arg_756_1.duration_ then
						arg_756_1.duration_ = var_759_7 + var_759_0
					end
				end

				arg_756_1.text_.text = var_759_4
				arg_756_1.typewritter.percent = 0

				arg_756_1.typewritter:SetDirty()
				arg_756_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161184", "story_v_out_417161.awb") ~= 0 then
					local var_759_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161184", "story_v_out_417161.awb") / 1000

					if var_759_8 + var_759_0 > arg_756_1.duration_ then
						arg_756_1.duration_ = var_759_8 + var_759_0
					end

					if var_759_3.prefab_name ~= "" and arg_756_1.actors_[var_759_3.prefab_name] ~= nil then
						local var_759_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_756_1.actors_[var_759_3.prefab_name].transform, "story_v_out_417161", "417161184", "story_v_out_417161.awb")

						arg_756_1:RecordAudio("417161184", var_759_9)
						arg_756_1:RecordAudio("417161184", var_759_9)
					else
						arg_756_1:AudioAction("play", "voice", "story_v_out_417161", "417161184", "story_v_out_417161.awb")
					end

					arg_756_1:RecordHistoryTalkVoice("story_v_out_417161", "417161184", "story_v_out_417161.awb")
				end

				arg_756_1:RecordContent(arg_756_1.text_.text)
			end

			local var_759_10 = math.max(var_759_1, arg_756_1.talkMaxDuration)

			if var_759_0 <= arg_756_1.time_ and arg_756_1.time_ < var_759_0 + var_759_10 then
				arg_756_1.typewritter.percent = (arg_756_1.time_ - var_759_0) / var_759_10

				arg_756_1.typewritter:SetDirty()
			end

			if arg_756_1.time_ >= var_759_0 + var_759_10 and arg_756_1.time_ < var_759_0 + var_759_10 + arg_759_0 then
				arg_756_1.typewritter.percent = 1

				arg_756_1.typewritter:SetDirty()
				arg_756_1:ShowNextGo(true)
			end
		end
	end,
	Play417161185 = function(arg_760_0, arg_760_1)
		arg_760_1.time_ = 0
		arg_760_1.frameCnt_ = 0
		arg_760_1.state_ = "playing"
		arg_760_1.curTalkId_ = 417161185
		arg_760_1.duration_ = 1.97

		local var_760_0 = {
			zh = 1.966,
			ja = 1.266
		}
		local var_760_1 = manager.audio:GetLocalizationFlag()

		if var_760_0[var_760_1] ~= nil then
			arg_760_1.duration_ = var_760_0[var_760_1]
		end

		SetActive(arg_760_1.tipsGo_, false)

		function arg_760_1.onSingleLineFinish_()
			arg_760_1.onSingleLineUpdate_ = nil
			arg_760_1.onSingleLineFinish_ = nil
			arg_760_1.state_ = "waiting"
		end

		function arg_760_1.playNext_(arg_762_0)
			if arg_762_0 == 1 then
				arg_760_0:Play417161186(arg_760_1)
			end
		end

		function arg_760_1.onSingleLineUpdate_(arg_763_0)
			local var_763_0 = 0
			local var_763_1 = 0.125

			if var_763_0 < arg_760_1.time_ and arg_760_1.time_ <= var_763_0 + arg_763_0 then
				arg_760_1.talkMaxDuration = 0
				arg_760_1.dialogCg_.alpha = 1

				arg_760_1.dialog_:SetActive(true)
				SetActive(arg_760_1.leftNameGo_, true)

				local var_763_2 = arg_760_1:FormatText(StoryNameCfg[1125].name)

				arg_760_1.leftNameTxt_.text = var_763_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_760_1.leftNameTxt_.transform)

				arg_760_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_760_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_760_1:RecordName(arg_760_1.leftNameTxt_.text)
				SetActive(arg_760_1.iconTrs_.gameObject, false)
				arg_760_1.callingController_:SetSelectedState("normal")

				local var_763_3 = arg_760_1:GetWordFromCfg(417161185)
				local var_763_4 = arg_760_1:FormatText(var_763_3.content)

				arg_760_1.text_.text = var_763_4

				LuaForUtil.ClearLinePrefixSymbol(arg_760_1.text_)

				local var_763_5 = 5
				local var_763_6 = utf8.len(var_763_4)
				local var_763_7 = var_763_5 <= 0 and var_763_1 or var_763_1 * (var_763_6 / var_763_5)

				if var_763_7 > 0 and var_763_1 < var_763_7 then
					arg_760_1.talkMaxDuration = var_763_7

					if var_763_7 + var_763_0 > arg_760_1.duration_ then
						arg_760_1.duration_ = var_763_7 + var_763_0
					end
				end

				arg_760_1.text_.text = var_763_4
				arg_760_1.typewritter.percent = 0

				arg_760_1.typewritter:SetDirty()
				arg_760_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161185", "story_v_out_417161.awb") ~= 0 then
					local var_763_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161185", "story_v_out_417161.awb") / 1000

					if var_763_8 + var_763_0 > arg_760_1.duration_ then
						arg_760_1.duration_ = var_763_8 + var_763_0
					end

					if var_763_3.prefab_name ~= "" and arg_760_1.actors_[var_763_3.prefab_name] ~= nil then
						local var_763_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_760_1.actors_[var_763_3.prefab_name].transform, "story_v_out_417161", "417161185", "story_v_out_417161.awb")

						arg_760_1:RecordAudio("417161185", var_763_9)
						arg_760_1:RecordAudio("417161185", var_763_9)
					else
						arg_760_1:AudioAction("play", "voice", "story_v_out_417161", "417161185", "story_v_out_417161.awb")
					end

					arg_760_1:RecordHistoryTalkVoice("story_v_out_417161", "417161185", "story_v_out_417161.awb")
				end

				arg_760_1:RecordContent(arg_760_1.text_.text)
			end

			local var_763_10 = math.max(var_763_1, arg_760_1.talkMaxDuration)

			if var_763_0 <= arg_760_1.time_ and arg_760_1.time_ < var_763_0 + var_763_10 then
				arg_760_1.typewritter.percent = (arg_760_1.time_ - var_763_0) / var_763_10

				arg_760_1.typewritter:SetDirty()
			end

			if arg_760_1.time_ >= var_763_0 + var_763_10 and arg_760_1.time_ < var_763_0 + var_763_10 + arg_763_0 then
				arg_760_1.typewritter.percent = 1

				arg_760_1.typewritter:SetDirty()
				arg_760_1:ShowNextGo(true)
			end
		end
	end,
	Play417161186 = function(arg_764_0, arg_764_1)
		arg_764_1.time_ = 0
		arg_764_1.frameCnt_ = 0
		arg_764_1.state_ = "playing"
		arg_764_1.curTalkId_ = 417161186
		arg_764_1.duration_ = 3.7

		local var_764_0 = {
			zh = 3.7,
			ja = 3.4
		}
		local var_764_1 = manager.audio:GetLocalizationFlag()

		if var_764_0[var_764_1] ~= nil then
			arg_764_1.duration_ = var_764_0[var_764_1]
		end

		SetActive(arg_764_1.tipsGo_, false)

		function arg_764_1.onSingleLineFinish_()
			arg_764_1.onSingleLineUpdate_ = nil
			arg_764_1.onSingleLineFinish_ = nil
			arg_764_1.state_ = "waiting"
		end

		function arg_764_1.playNext_(arg_766_0)
			if arg_766_0 == 1 then
				arg_764_0:Play417161187(arg_764_1)
			end
		end

		function arg_764_1.onSingleLineUpdate_(arg_767_0)
			local var_767_0 = 0
			local var_767_1 = 0.375

			if var_767_0 < arg_764_1.time_ and arg_764_1.time_ <= var_767_0 + arg_767_0 then
				arg_764_1.talkMaxDuration = 0
				arg_764_1.dialogCg_.alpha = 1

				arg_764_1.dialog_:SetActive(true)
				SetActive(arg_764_1.leftNameGo_, true)

				local var_767_2 = arg_764_1:FormatText(StoryNameCfg[595].name)

				arg_764_1.leftNameTxt_.text = var_767_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_764_1.leftNameTxt_.transform)

				arg_764_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_764_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_764_1:RecordName(arg_764_1.leftNameTxt_.text)
				SetActive(arg_764_1.iconTrs_.gameObject, false)
				arg_764_1.callingController_:SetSelectedState("normal")

				local var_767_3 = arg_764_1:GetWordFromCfg(417161186)
				local var_767_4 = arg_764_1:FormatText(var_767_3.content)

				arg_764_1.text_.text = var_767_4

				LuaForUtil.ClearLinePrefixSymbol(arg_764_1.text_)

				local var_767_5 = 15
				local var_767_6 = utf8.len(var_767_4)
				local var_767_7 = var_767_5 <= 0 and var_767_1 or var_767_1 * (var_767_6 / var_767_5)

				if var_767_7 > 0 and var_767_1 < var_767_7 then
					arg_764_1.talkMaxDuration = var_767_7

					if var_767_7 + var_767_0 > arg_764_1.duration_ then
						arg_764_1.duration_ = var_767_7 + var_767_0
					end
				end

				arg_764_1.text_.text = var_767_4
				arg_764_1.typewritter.percent = 0

				arg_764_1.typewritter:SetDirty()
				arg_764_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161186", "story_v_out_417161.awb") ~= 0 then
					local var_767_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161186", "story_v_out_417161.awb") / 1000

					if var_767_8 + var_767_0 > arg_764_1.duration_ then
						arg_764_1.duration_ = var_767_8 + var_767_0
					end

					if var_767_3.prefab_name ~= "" and arg_764_1.actors_[var_767_3.prefab_name] ~= nil then
						local var_767_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_764_1.actors_[var_767_3.prefab_name].transform, "story_v_out_417161", "417161186", "story_v_out_417161.awb")

						arg_764_1:RecordAudio("417161186", var_767_9)
						arg_764_1:RecordAudio("417161186", var_767_9)
					else
						arg_764_1:AudioAction("play", "voice", "story_v_out_417161", "417161186", "story_v_out_417161.awb")
					end

					arg_764_1:RecordHistoryTalkVoice("story_v_out_417161", "417161186", "story_v_out_417161.awb")
				end

				arg_764_1:RecordContent(arg_764_1.text_.text)
			end

			local var_767_10 = math.max(var_767_1, arg_764_1.talkMaxDuration)

			if var_767_0 <= arg_764_1.time_ and arg_764_1.time_ < var_767_0 + var_767_10 then
				arg_764_1.typewritter.percent = (arg_764_1.time_ - var_767_0) / var_767_10

				arg_764_1.typewritter:SetDirty()
			end

			if arg_764_1.time_ >= var_767_0 + var_767_10 and arg_764_1.time_ < var_767_0 + var_767_10 + arg_767_0 then
				arg_764_1.typewritter.percent = 1

				arg_764_1.typewritter:SetDirty()
				arg_764_1:ShowNextGo(true)
			end
		end
	end,
	Play417161187 = function(arg_768_0, arg_768_1)
		arg_768_1.time_ = 0
		arg_768_1.frameCnt_ = 0
		arg_768_1.state_ = "playing"
		arg_768_1.curTalkId_ = 417161187
		arg_768_1.duration_ = 5

		SetActive(arg_768_1.tipsGo_, false)

		function arg_768_1.onSingleLineFinish_()
			arg_768_1.onSingleLineUpdate_ = nil
			arg_768_1.onSingleLineFinish_ = nil
			arg_768_1.state_ = "waiting"
		end

		function arg_768_1.playNext_(arg_770_0)
			if arg_770_0 == 1 then
				arg_768_0:Play417161188(arg_768_1)
			end
		end

		function arg_768_1.onSingleLineUpdate_(arg_771_0)
			local var_771_0 = 0.05
			local var_771_1 = 1

			if var_771_0 < arg_768_1.time_ and arg_768_1.time_ <= var_771_0 + arg_771_0 then
				local var_771_2 = "play"
				local var_771_3 = "effect"

				arg_768_1:AudioAction(var_771_2, var_771_3, "se_story_1311", "se_story_1311_taxi02", "")
			end

			local var_771_4 = 0
			local var_771_5 = 1.1

			if var_771_4 < arg_768_1.time_ and arg_768_1.time_ <= var_771_4 + arg_771_0 then
				arg_768_1.talkMaxDuration = 0
				arg_768_1.dialogCg_.alpha = 1

				arg_768_1.dialog_:SetActive(true)
				SetActive(arg_768_1.leftNameGo_, false)

				arg_768_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_768_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_768_1:RecordName(arg_768_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_768_1.iconTrs_.gameObject, false)
				arg_768_1.callingController_:SetSelectedState("normal")

				local var_771_6 = arg_768_1:GetWordFromCfg(417161187)
				local var_771_7 = arg_768_1:FormatText(var_771_6.content)

				arg_768_1.text_.text = var_771_7

				LuaForUtil.ClearLinePrefixSymbol(arg_768_1.text_)

				local var_771_8 = 44
				local var_771_9 = utf8.len(var_771_7)
				local var_771_10 = var_771_8 <= 0 and var_771_5 or var_771_5 * (var_771_9 / var_771_8)

				if var_771_10 > 0 and var_771_5 < var_771_10 then
					arg_768_1.talkMaxDuration = var_771_10

					if var_771_10 + var_771_4 > arg_768_1.duration_ then
						arg_768_1.duration_ = var_771_10 + var_771_4
					end
				end

				arg_768_1.text_.text = var_771_7
				arg_768_1.typewritter.percent = 0

				arg_768_1.typewritter:SetDirty()
				arg_768_1:ShowNextGo(false)
				arg_768_1:RecordContent(arg_768_1.text_.text)
			end

			local var_771_11 = math.max(var_771_5, arg_768_1.talkMaxDuration)

			if var_771_4 <= arg_768_1.time_ and arg_768_1.time_ < var_771_4 + var_771_11 then
				arg_768_1.typewritter.percent = (arg_768_1.time_ - var_771_4) / var_771_11

				arg_768_1.typewritter:SetDirty()
			end

			if arg_768_1.time_ >= var_771_4 + var_771_11 and arg_768_1.time_ < var_771_4 + var_771_11 + arg_771_0 then
				arg_768_1.typewritter.percent = 1

				arg_768_1.typewritter:SetDirty()
				arg_768_1:ShowNextGo(true)
			end
		end
	end,
	Play417161188 = function(arg_772_0, arg_772_1)
		arg_772_1.time_ = 0
		arg_772_1.frameCnt_ = 0
		arg_772_1.state_ = "playing"
		arg_772_1.curTalkId_ = 417161188
		arg_772_1.duration_ = 5

		SetActive(arg_772_1.tipsGo_, false)

		function arg_772_1.onSingleLineFinish_()
			arg_772_1.onSingleLineUpdate_ = nil
			arg_772_1.onSingleLineFinish_ = nil
			arg_772_1.state_ = "waiting"
		end

		function arg_772_1.playNext_(arg_774_0)
			if arg_774_0 == 1 then
				arg_772_0:Play417161189(arg_772_1)
			end
		end

		function arg_772_1.onSingleLineUpdate_(arg_775_0)
			local var_775_0 = 0
			local var_775_1 = 0.75

			if var_775_0 < arg_772_1.time_ and arg_772_1.time_ <= var_775_0 + arg_775_0 then
				arg_772_1.talkMaxDuration = 0
				arg_772_1.dialogCg_.alpha = 1

				arg_772_1.dialog_:SetActive(true)
				SetActive(arg_772_1.leftNameGo_, false)

				arg_772_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_772_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_772_1:RecordName(arg_772_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_772_1.iconTrs_.gameObject, false)
				arg_772_1.callingController_:SetSelectedState("normal")

				local var_775_2 = arg_772_1:GetWordFromCfg(417161188)
				local var_775_3 = arg_772_1:FormatText(var_775_2.content)

				arg_772_1.text_.text = var_775_3

				LuaForUtil.ClearLinePrefixSymbol(arg_772_1.text_)

				local var_775_4 = 30
				local var_775_5 = utf8.len(var_775_3)
				local var_775_6 = var_775_4 <= 0 and var_775_1 or var_775_1 * (var_775_5 / var_775_4)

				if var_775_6 > 0 and var_775_1 < var_775_6 then
					arg_772_1.talkMaxDuration = var_775_6

					if var_775_6 + var_775_0 > arg_772_1.duration_ then
						arg_772_1.duration_ = var_775_6 + var_775_0
					end
				end

				arg_772_1.text_.text = var_775_3
				arg_772_1.typewritter.percent = 0

				arg_772_1.typewritter:SetDirty()
				arg_772_1:ShowNextGo(false)
				arg_772_1:RecordContent(arg_772_1.text_.text)
			end

			local var_775_7 = math.max(var_775_1, arg_772_1.talkMaxDuration)

			if var_775_0 <= arg_772_1.time_ and arg_772_1.time_ < var_775_0 + var_775_7 then
				arg_772_1.typewritter.percent = (arg_772_1.time_ - var_775_0) / var_775_7

				arg_772_1.typewritter:SetDirty()
			end

			if arg_772_1.time_ >= var_775_0 + var_775_7 and arg_772_1.time_ < var_775_0 + var_775_7 + arg_775_0 then
				arg_772_1.typewritter.percent = 1

				arg_772_1.typewritter:SetDirty()
				arg_772_1:ShowNextGo(true)
			end
		end
	end,
	Play417161189 = function(arg_776_0, arg_776_1)
		arg_776_1.time_ = 0
		arg_776_1.frameCnt_ = 0
		arg_776_1.state_ = "playing"
		arg_776_1.curTalkId_ = 417161189
		arg_776_1.duration_ = 1.8

		local var_776_0 = {
			zh = 1.233,
			ja = 1.8
		}
		local var_776_1 = manager.audio:GetLocalizationFlag()

		if var_776_0[var_776_1] ~= nil then
			arg_776_1.duration_ = var_776_0[var_776_1]
		end

		SetActive(arg_776_1.tipsGo_, false)

		function arg_776_1.onSingleLineFinish_()
			arg_776_1.onSingleLineUpdate_ = nil
			arg_776_1.onSingleLineFinish_ = nil
			arg_776_1.state_ = "waiting"
		end

		function arg_776_1.playNext_(arg_778_0)
			if arg_778_0 == 1 then
				arg_776_0:Play417161190(arg_776_1)
			end
		end

		function arg_776_1.onSingleLineUpdate_(arg_779_0)
			local var_779_0 = 0
			local var_779_1 = 0.1

			if var_779_0 < arg_776_1.time_ and arg_776_1.time_ <= var_779_0 + arg_779_0 then
				arg_776_1.talkMaxDuration = 0
				arg_776_1.dialogCg_.alpha = 1

				arg_776_1.dialog_:SetActive(true)
				SetActive(arg_776_1.leftNameGo_, true)

				local var_779_2 = arg_776_1:FormatText(StoryNameCfg[1125].name)

				arg_776_1.leftNameTxt_.text = var_779_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_776_1.leftNameTxt_.transform)

				arg_776_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_776_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_776_1:RecordName(arg_776_1.leftNameTxt_.text)
				SetActive(arg_776_1.iconTrs_.gameObject, false)
				arg_776_1.callingController_:SetSelectedState("normal")

				local var_779_3 = arg_776_1:GetWordFromCfg(417161189)
				local var_779_4 = arg_776_1:FormatText(var_779_3.content)

				arg_776_1.text_.text = var_779_4

				LuaForUtil.ClearLinePrefixSymbol(arg_776_1.text_)

				local var_779_5 = 4
				local var_779_6 = utf8.len(var_779_4)
				local var_779_7 = var_779_5 <= 0 and var_779_1 or var_779_1 * (var_779_6 / var_779_5)

				if var_779_7 > 0 and var_779_1 < var_779_7 then
					arg_776_1.talkMaxDuration = var_779_7

					if var_779_7 + var_779_0 > arg_776_1.duration_ then
						arg_776_1.duration_ = var_779_7 + var_779_0
					end
				end

				arg_776_1.text_.text = var_779_4
				arg_776_1.typewritter.percent = 0

				arg_776_1.typewritter:SetDirty()
				arg_776_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161189", "story_v_out_417161.awb") ~= 0 then
					local var_779_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161189", "story_v_out_417161.awb") / 1000

					if var_779_8 + var_779_0 > arg_776_1.duration_ then
						arg_776_1.duration_ = var_779_8 + var_779_0
					end

					if var_779_3.prefab_name ~= "" and arg_776_1.actors_[var_779_3.prefab_name] ~= nil then
						local var_779_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_776_1.actors_[var_779_3.prefab_name].transform, "story_v_out_417161", "417161189", "story_v_out_417161.awb")

						arg_776_1:RecordAudio("417161189", var_779_9)
						arg_776_1:RecordAudio("417161189", var_779_9)
					else
						arg_776_1:AudioAction("play", "voice", "story_v_out_417161", "417161189", "story_v_out_417161.awb")
					end

					arg_776_1:RecordHistoryTalkVoice("story_v_out_417161", "417161189", "story_v_out_417161.awb")
				end

				arg_776_1:RecordContent(arg_776_1.text_.text)
			end

			local var_779_10 = math.max(var_779_1, arg_776_1.talkMaxDuration)

			if var_779_0 <= arg_776_1.time_ and arg_776_1.time_ < var_779_0 + var_779_10 then
				arg_776_1.typewritter.percent = (arg_776_1.time_ - var_779_0) / var_779_10

				arg_776_1.typewritter:SetDirty()
			end

			if arg_776_1.time_ >= var_779_0 + var_779_10 and arg_776_1.time_ < var_779_0 + var_779_10 + arg_779_0 then
				arg_776_1.typewritter.percent = 1

				arg_776_1.typewritter:SetDirty()
				arg_776_1:ShowNextGo(true)
			end
		end
	end,
	Play417161190 = function(arg_780_0, arg_780_1)
		arg_780_1.time_ = 0
		arg_780_1.frameCnt_ = 0
		arg_780_1.state_ = "playing"
		arg_780_1.curTalkId_ = 417161190
		arg_780_1.duration_ = 1.37

		local var_780_0 = {
			zh = 0.999999999999,
			ja = 1.366
		}
		local var_780_1 = manager.audio:GetLocalizationFlag()

		if var_780_0[var_780_1] ~= nil then
			arg_780_1.duration_ = var_780_0[var_780_1]
		end

		SetActive(arg_780_1.tipsGo_, false)

		function arg_780_1.onSingleLineFinish_()
			arg_780_1.onSingleLineUpdate_ = nil
			arg_780_1.onSingleLineFinish_ = nil
			arg_780_1.state_ = "waiting"
		end

		function arg_780_1.playNext_(arg_782_0)
			if arg_782_0 == 1 then
				arg_780_0:Play417161191(arg_780_1)
			end
		end

		function arg_780_1.onSingleLineUpdate_(arg_783_0)
			local var_783_0 = 0
			local var_783_1 = 0.133333333333333

			if var_783_0 < arg_780_1.time_ and arg_780_1.time_ <= var_783_0 + arg_783_0 then
				arg_780_1.talkMaxDuration = 0
				arg_780_1.dialogCg_.alpha = 1

				arg_780_1.dialog_:SetActive(true)
				SetActive(arg_780_1.leftNameGo_, true)

				local var_783_2 = arg_780_1:FormatText(StoryNameCfg[595].name)

				arg_780_1.leftNameTxt_.text = var_783_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_780_1.leftNameTxt_.transform)

				arg_780_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_780_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_780_1:RecordName(arg_780_1.leftNameTxt_.text)
				SetActive(arg_780_1.iconTrs_.gameObject, false)
				arg_780_1.callingController_:SetSelectedState("normal")

				local var_783_3 = arg_780_1:GetWordFromCfg(417161190)
				local var_783_4 = arg_780_1:FormatText(var_783_3.content)

				arg_780_1.text_.text = var_783_4

				LuaForUtil.ClearLinePrefixSymbol(arg_780_1.text_)

				local var_783_5 = 3
				local var_783_6 = utf8.len(var_783_4)
				local var_783_7 = var_783_5 <= 0 and var_783_1 or var_783_1 * (var_783_6 / var_783_5)

				if var_783_7 > 0 and var_783_1 < var_783_7 then
					arg_780_1.talkMaxDuration = var_783_7

					if var_783_7 + var_783_0 > arg_780_1.duration_ then
						arg_780_1.duration_ = var_783_7 + var_783_0
					end
				end

				arg_780_1.text_.text = var_783_4
				arg_780_1.typewritter.percent = 0

				arg_780_1.typewritter:SetDirty()
				arg_780_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161190", "story_v_out_417161.awb") ~= 0 then
					local var_783_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161190", "story_v_out_417161.awb") / 1000

					if var_783_8 + var_783_0 > arg_780_1.duration_ then
						arg_780_1.duration_ = var_783_8 + var_783_0
					end

					if var_783_3.prefab_name ~= "" and arg_780_1.actors_[var_783_3.prefab_name] ~= nil then
						local var_783_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_780_1.actors_[var_783_3.prefab_name].transform, "story_v_out_417161", "417161190", "story_v_out_417161.awb")

						arg_780_1:RecordAudio("417161190", var_783_9)
						arg_780_1:RecordAudio("417161190", var_783_9)
					else
						arg_780_1:AudioAction("play", "voice", "story_v_out_417161", "417161190", "story_v_out_417161.awb")
					end

					arg_780_1:RecordHistoryTalkVoice("story_v_out_417161", "417161190", "story_v_out_417161.awb")
				end

				arg_780_1:RecordContent(arg_780_1.text_.text)
			end

			local var_783_10 = math.max(var_783_1, arg_780_1.talkMaxDuration)

			if var_783_0 <= arg_780_1.time_ and arg_780_1.time_ < var_783_0 + var_783_10 then
				arg_780_1.typewritter.percent = (arg_780_1.time_ - var_783_0) / var_783_10

				arg_780_1.typewritter:SetDirty()
			end

			if arg_780_1.time_ >= var_783_0 + var_783_10 and arg_780_1.time_ < var_783_0 + var_783_10 + arg_783_0 then
				arg_780_1.typewritter.percent = 1

				arg_780_1.typewritter:SetDirty()
				arg_780_1:ShowNextGo(true)
			end
		end
	end,
	Play417161191 = function(arg_784_0, arg_784_1)
		arg_784_1.time_ = 0
		arg_784_1.frameCnt_ = 0
		arg_784_1.state_ = "playing"
		arg_784_1.curTalkId_ = 417161191
		arg_784_1.duration_ = 3.8

		local var_784_0 = {
			zh = 3.8,
			ja = 3.6
		}
		local var_784_1 = manager.audio:GetLocalizationFlag()

		if var_784_0[var_784_1] ~= nil then
			arg_784_1.duration_ = var_784_0[var_784_1]
		end

		SetActive(arg_784_1.tipsGo_, false)

		function arg_784_1.onSingleLineFinish_()
			arg_784_1.onSingleLineUpdate_ = nil
			arg_784_1.onSingleLineFinish_ = nil
			arg_784_1.state_ = "waiting"
		end

		function arg_784_1.playNext_(arg_786_0)
			if arg_786_0 == 1 then
				arg_784_0:Play417161192(arg_784_1)
			end
		end

		function arg_784_1.onSingleLineUpdate_(arg_787_0)
			local var_787_0 = 0
			local var_787_1 = 0.325

			if var_787_0 < arg_784_1.time_ and arg_784_1.time_ <= var_787_0 + arg_787_0 then
				arg_784_1.talkMaxDuration = 0
				arg_784_1.dialogCg_.alpha = 1

				arg_784_1.dialog_:SetActive(true)
				SetActive(arg_784_1.leftNameGo_, true)

				local var_787_2 = arg_784_1:FormatText(StoryNameCfg[1125].name)

				arg_784_1.leftNameTxt_.text = var_787_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_784_1.leftNameTxt_.transform)

				arg_784_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_784_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_784_1:RecordName(arg_784_1.leftNameTxt_.text)
				SetActive(arg_784_1.iconTrs_.gameObject, false)
				arg_784_1.callingController_:SetSelectedState("normal")

				local var_787_3 = arg_784_1:GetWordFromCfg(417161191)
				local var_787_4 = arg_784_1:FormatText(var_787_3.content)

				arg_784_1.text_.text = var_787_4

				LuaForUtil.ClearLinePrefixSymbol(arg_784_1.text_)

				local var_787_5 = 13
				local var_787_6 = utf8.len(var_787_4)
				local var_787_7 = var_787_5 <= 0 and var_787_1 or var_787_1 * (var_787_6 / var_787_5)

				if var_787_7 > 0 and var_787_1 < var_787_7 then
					arg_784_1.talkMaxDuration = var_787_7

					if var_787_7 + var_787_0 > arg_784_1.duration_ then
						arg_784_1.duration_ = var_787_7 + var_787_0
					end
				end

				arg_784_1.text_.text = var_787_4
				arg_784_1.typewritter.percent = 0

				arg_784_1.typewritter:SetDirty()
				arg_784_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161191", "story_v_out_417161.awb") ~= 0 then
					local var_787_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161191", "story_v_out_417161.awb") / 1000

					if var_787_8 + var_787_0 > arg_784_1.duration_ then
						arg_784_1.duration_ = var_787_8 + var_787_0
					end

					if var_787_3.prefab_name ~= "" and arg_784_1.actors_[var_787_3.prefab_name] ~= nil then
						local var_787_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_784_1.actors_[var_787_3.prefab_name].transform, "story_v_out_417161", "417161191", "story_v_out_417161.awb")

						arg_784_1:RecordAudio("417161191", var_787_9)
						arg_784_1:RecordAudio("417161191", var_787_9)
					else
						arg_784_1:AudioAction("play", "voice", "story_v_out_417161", "417161191", "story_v_out_417161.awb")
					end

					arg_784_1:RecordHistoryTalkVoice("story_v_out_417161", "417161191", "story_v_out_417161.awb")
				end

				arg_784_1:RecordContent(arg_784_1.text_.text)
			end

			local var_787_10 = math.max(var_787_1, arg_784_1.talkMaxDuration)

			if var_787_0 <= arg_784_1.time_ and arg_784_1.time_ < var_787_0 + var_787_10 then
				arg_784_1.typewritter.percent = (arg_784_1.time_ - var_787_0) / var_787_10

				arg_784_1.typewritter:SetDirty()
			end

			if arg_784_1.time_ >= var_787_0 + var_787_10 and arg_784_1.time_ < var_787_0 + var_787_10 + arg_787_0 then
				arg_784_1.typewritter.percent = 1

				arg_784_1.typewritter:SetDirty()
				arg_784_1:ShowNextGo(true)
			end
		end
	end,
	Play417161192 = function(arg_788_0, arg_788_1)
		arg_788_1.time_ = 0
		arg_788_1.frameCnt_ = 0
		arg_788_1.state_ = "playing"
		arg_788_1.curTalkId_ = 417161192
		arg_788_1.duration_ = 9

		local var_788_0 = {
			zh = 7.7,
			ja = 9
		}
		local var_788_1 = manager.audio:GetLocalizationFlag()

		if var_788_0[var_788_1] ~= nil then
			arg_788_1.duration_ = var_788_0[var_788_1]
		end

		SetActive(arg_788_1.tipsGo_, false)

		function arg_788_1.onSingleLineFinish_()
			arg_788_1.onSingleLineUpdate_ = nil
			arg_788_1.onSingleLineFinish_ = nil
			arg_788_1.state_ = "waiting"
			arg_788_1.auto_ = false
		end

		function arg_788_1.playNext_(arg_790_0)
			arg_788_1.onStoryFinished_()
		end

		function arg_788_1.onSingleLineUpdate_(arg_791_0)
			local var_791_0 = 0
			local var_791_1 = 0.7

			if var_791_0 < arg_788_1.time_ and arg_788_1.time_ <= var_791_0 + arg_791_0 then
				arg_788_1.talkMaxDuration = 0
				arg_788_1.dialogCg_.alpha = 1

				arg_788_1.dialog_:SetActive(true)
				SetActive(arg_788_1.leftNameGo_, true)

				local var_791_2 = arg_788_1:FormatText(StoryNameCfg[1125].name)

				arg_788_1.leftNameTxt_.text = var_791_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_788_1.leftNameTxt_.transform)

				arg_788_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_788_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_788_1:RecordName(arg_788_1.leftNameTxt_.text)
				SetActive(arg_788_1.iconTrs_.gameObject, false)
				arg_788_1.callingController_:SetSelectedState("normal")

				local var_791_3 = arg_788_1:GetWordFromCfg(417161192)
				local var_791_4 = arg_788_1:FormatText(var_791_3.content)

				arg_788_1.text_.text = var_791_4

				LuaForUtil.ClearLinePrefixSymbol(arg_788_1.text_)

				local var_791_5 = 28
				local var_791_6 = utf8.len(var_791_4)
				local var_791_7 = var_791_5 <= 0 and var_791_1 or var_791_1 * (var_791_6 / var_791_5)

				if var_791_7 > 0 and var_791_1 < var_791_7 then
					arg_788_1.talkMaxDuration = var_791_7

					if var_791_7 + var_791_0 > arg_788_1.duration_ then
						arg_788_1.duration_ = var_791_7 + var_791_0
					end
				end

				arg_788_1.text_.text = var_791_4
				arg_788_1.typewritter.percent = 0

				arg_788_1.typewritter:SetDirty()
				arg_788_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417161", "417161192", "story_v_out_417161.awb") ~= 0 then
					local var_791_8 = manager.audio:GetVoiceLength("story_v_out_417161", "417161192", "story_v_out_417161.awb") / 1000

					if var_791_8 + var_791_0 > arg_788_1.duration_ then
						arg_788_1.duration_ = var_791_8 + var_791_0
					end

					if var_791_3.prefab_name ~= "" and arg_788_1.actors_[var_791_3.prefab_name] ~= nil then
						local var_791_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_788_1.actors_[var_791_3.prefab_name].transform, "story_v_out_417161", "417161192", "story_v_out_417161.awb")

						arg_788_1:RecordAudio("417161192", var_791_9)
						arg_788_1:RecordAudio("417161192", var_791_9)
					else
						arg_788_1:AudioAction("play", "voice", "story_v_out_417161", "417161192", "story_v_out_417161.awb")
					end

					arg_788_1:RecordHistoryTalkVoice("story_v_out_417161", "417161192", "story_v_out_417161.awb")
				end

				arg_788_1:RecordContent(arg_788_1.text_.text)
			end

			local var_791_10 = math.max(var_791_1, arg_788_1.talkMaxDuration)

			if var_791_0 <= arg_788_1.time_ and arg_788_1.time_ < var_791_0 + var_791_10 then
				arg_788_1.typewritter.percent = (arg_788_1.time_ - var_791_0) / var_791_10

				arg_788_1.typewritter:SetDirty()
			end

			if arg_788_1.time_ >= var_791_0 + var_791_10 and arg_788_1.time_ < var_791_0 + var_791_10 + arg_791_0 then
				arg_788_1.typewritter.percent = 1

				arg_788_1.typewritter:SetDirty()
				arg_788_1:ShowNextGo(true)
			end
		end
	end,
	assets = {
		"Assets/UIResources/UI_AB/TextureConfig/Background/ST73",
		"Assets/UIResources/UI_AB/TextureConfig/Background/STblack",
		"Assets/UIResources/UI_AB/TextureConfig/Background/B13",
		"Assets/UIResources/UI_AB/TextureConfig/Background/ST03a",
		"Assets/UIResources/UI_AB/TextureConfig/Background/SS1706",
		"Assets/UIResources/UI_AB/TextureConfig/Background/D06b"
	},
	voices = {
		"story_v_out_417161.awb"
	}
}

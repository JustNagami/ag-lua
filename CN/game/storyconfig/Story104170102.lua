return {
	Play417012001 = function(arg_1_0, arg_1_1)
		arg_1_1.time_ = 0
		arg_1_1.frameCnt_ = 0
		arg_1_1.state_ = "playing"
		arg_1_1.curTalkId_ = 417012001
		arg_1_1.duration_ = 10.4

		SetActive(arg_1_1.tipsGo_, false)

		function arg_1_1.onSingleLineFinish_()
			arg_1_1.onSingleLineUpdate_ = nil
			arg_1_1.onSingleLineFinish_ = nil
			arg_1_1.state_ = "waiting"
		end

		function arg_1_1.playNext_(arg_3_0)
			if arg_3_0 == 1 then
				arg_1_0:Play417012002(arg_1_1)
			end
		end

		function arg_1_1.onSingleLineUpdate_(arg_4_0)
			local var_4_0 = 6

			if var_4_0 < arg_1_1.time_ and arg_1_1.time_ <= var_4_0 + arg_4_0 then
				arg_1_1.allBtn_.enabled = false
			end

			local var_4_1 = 0.3

			if arg_1_1.time_ >= var_4_0 + var_4_1 and arg_1_1.time_ < var_4_0 + var_4_1 + arg_4_0 then
				arg_1_1.allBtn_.enabled = true
			end

			local var_4_2 = 0
			local var_4_3 = 0.2

			if var_4_2 < arg_1_1.time_ and arg_1_1.time_ <= var_4_2 + arg_4_0 then
				local var_4_4 = "play"
				local var_4_5 = "music"

				arg_1_1:AudioAction(var_4_4, var_4_5, "ui_battle", "ui_battle_stopbgm", "")

				local var_4_6 = ""
				local var_4_7 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_4_7 ~= "" then
					if arg_1_1.bgmTxt_.text ~= var_4_7 and arg_1_1.bgmTxt_.text ~= "" then
						if arg_1_1.bgmTxt2_.text ~= "" then
							arg_1_1.bgmTxt_.text = arg_1_1.bgmTxt2_.text
						end

						arg_1_1.bgmTxt2_.text = var_4_7

						arg_1_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_1_1.bgmTxt_.text = var_4_7
					end

					if arg_1_1.bgmTimer then
						arg_1_1.bgmTimer:Stop()

						arg_1_1.bgmTimer = nil
					end

					if arg_1_1.settingData.show_music_name == 1 then
						arg_1_1.musicController:SetSelectedState("show")
						arg_1_1.musicAnimator_:Play("open", 0, 0)

						if arg_1_1.settingData.music_time ~= 0 then
							arg_1_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_1_1.settingData.music_time), function()
								if arg_1_1 == nil or isNil(arg_1_1.bgmTxt_) then
									return
								end

								arg_1_1.musicController:SetSelectedState("hide")
								arg_1_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_4_8 = 0.5
			local var_4_9 = 1

			if var_4_8 < arg_1_1.time_ and arg_1_1.time_ <= var_4_8 + arg_4_0 then
				local var_4_10 = "play"
				local var_4_11 = "music"

				arg_1_1:AudioAction(var_4_10, var_4_11, "bgm_activity_3_8_story_corg", "bgm_activity_3_8_story_corg", "bgm_activity_3_8_story_corg.awb")

				local var_4_12 = ""
				local var_4_13 = manager.audio:GetAudioName("bgm_activity_3_8_story_corg", "bgm_activity_3_8_story_corg")

				if var_4_13 ~= "" then
					if arg_1_1.bgmTxt_.text ~= var_4_13 and arg_1_1.bgmTxt_.text ~= "" then
						if arg_1_1.bgmTxt2_.text ~= "" then
							arg_1_1.bgmTxt_.text = arg_1_1.bgmTxt2_.text
						end

						arg_1_1.bgmTxt2_.text = var_4_13

						arg_1_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_1_1.bgmTxt_.text = var_4_13
					end

					if arg_1_1.bgmTimer then
						arg_1_1.bgmTimer:Stop()

						arg_1_1.bgmTimer = nil
					end

					if arg_1_1.settingData.show_music_name == 1 then
						arg_1_1.musicController:SetSelectedState("show")
						arg_1_1.musicAnimator_:Play("open", 0, 0)

						if arg_1_1.settingData.music_time ~= 0 then
							arg_1_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_1_1.settingData.music_time), function()
								if arg_1_1 == nil or isNil(arg_1_1.bgmTxt_) then
									return
								end

								arg_1_1.musicController:SetSelectedState("hide")
								arg_1_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_4_14 = 0
			local var_4_15 = 3
			local var_4_16 = "D06a"

			if var_4_14 < arg_1_1.time_ and arg_1_1.time_ <= var_4_14 + arg_4_0 then
				arg_1_1.timestampController_:SetSelectedState("show")
				arg_1_1.timestampAni_:Play("in")

				arg_1_1.timeTicketbgImg_.sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_4_16)

				arg_1_1.timestampColorController_:SetSelectedState("cold")

				local var_4_17 = arg_1_1:GetWordFromCfg(501003)
				local var_4_18 = arg_1_1:FormatText(var_4_17.content)

				arg_1_1.text_timeText_.text = var_4_18

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_timeText_)

				local var_4_19 = arg_1_1:GetWordFromCfg(501004)
				local var_4_20 = arg_1_1:FormatText(var_4_19.content)

				arg_1_1.text_siteText_.text = var_4_20

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_siteText_)
			end

			if arg_1_1.time_ >= var_4_14 + var_4_15 and arg_1_1.time_ < var_4_14 + var_4_15 + arg_4_0 then
				AnimatorTools.PlayAnimationWithCallback(arg_1_1.timestampAni_, "out", function()
					arg_1_1.timestampController_:SetSelectedState("hide")
				end)
			end

			local var_4_21 = 3

			if var_4_21 < arg_1_1.time_ and arg_1_1.time_ <= var_4_21 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = true

				arg_1_1:SetGaussion(false)
			end

			local var_4_22 = 1.2

			if var_4_21 <= arg_1_1.time_ and arg_1_1.time_ < var_4_21 + var_4_22 then
				local var_4_23 = (arg_1_1.time_ - var_4_21) / var_4_22
				local var_4_24 = Color.New(0, 0, 0)

				var_4_24.a = Mathf.Lerp(0, 1, var_4_23)
				arg_1_1.mask_.color = var_4_24
			end

			if arg_1_1.time_ >= var_4_21 + var_4_22 and arg_1_1.time_ < var_4_21 + var_4_22 + arg_4_0 then
				local var_4_25 = Color.New(0, 0, 0)

				var_4_25.a = 1
				arg_1_1.mask_.color = var_4_25
			end

			local var_4_26 = 4.2

			if var_4_26 < arg_1_1.time_ and arg_1_1.time_ <= var_4_26 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = true

				arg_1_1:SetGaussion(false)
			end

			local var_4_27 = 1.2

			if var_4_26 <= arg_1_1.time_ and arg_1_1.time_ < var_4_26 + var_4_27 then
				local var_4_28 = (arg_1_1.time_ - var_4_26) / var_4_27
				local var_4_29 = Color.New(0, 0, 0)

				var_4_29.a = Mathf.Lerp(1, 0, var_4_28)
				arg_1_1.mask_.color = var_4_29
			end

			if arg_1_1.time_ >= var_4_26 + var_4_27 and arg_1_1.time_ < var_4_26 + var_4_27 + arg_4_0 then
				local var_4_30 = Color.New(0, 0, 0)
				local var_4_31 = 0

				arg_1_1.mask_.enabled = false
				var_4_30.a = var_4_31
				arg_1_1.mask_.color = var_4_30
			end

			local var_4_32 = "D06a"

			if arg_1_1.bgs_[var_4_32] == nil then
				local var_4_33 = Object.Instantiate(arg_1_1.paintGo_)

				var_4_33:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_4_32)
				var_4_33.name = var_4_32
				var_4_33.transform.parent = arg_1_1.stage_.transform
				var_4_33.transform.localPosition = Vector3.New(0, 100, 0)
				arg_1_1.bgs_[var_4_32] = var_4_33
			end

			local var_4_34 = 0

			if var_4_34 < arg_1_1.time_ and arg_1_1.time_ <= var_4_34 + arg_4_0 then
				local var_4_35 = manager.ui.mainCamera.transform.localPosition
				local var_4_36 = Vector3.New(0, 0, 10) + Vector3.New(var_4_35.x, var_4_35.y, 0)
				local var_4_37 = arg_1_1.bgs_.D06a

				var_4_37.transform.localPosition = var_4_36
				var_4_37.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_4_38 = var_4_37:GetComponent("SpriteRenderer")

				if var_4_38 and var_4_38.sprite then
					local var_4_39 = (var_4_37.transform.localPosition - var_4_35).z
					local var_4_40 = manager.ui.mainCameraCom_
					local var_4_41 = 2 * var_4_39 * Mathf.Tan(var_4_40.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_4_42 = var_4_41 * var_4_40.aspect
					local var_4_43 = var_4_38.sprite.bounds.size.x
					local var_4_44 = var_4_38.sprite.bounds.size.y
					local var_4_45 = var_4_42 / var_4_43
					local var_4_46 = var_4_41 / var_4_44
					local var_4_47 = var_4_46 < var_4_45 and var_4_45 or var_4_46

					var_4_37.transform.localScale = Vector3.New(var_4_47, var_4_47, 0)
				end

				for iter_4_0, iter_4_1 in pairs(arg_1_1.bgs_) do
					if iter_4_0 ~= "D06a" then
						iter_4_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_4_48 = 0

			if var_4_48 < arg_1_1.time_ and arg_1_1.time_ <= var_4_48 + arg_4_0 then
				arg_1_1.mask_.enabled = true
				arg_1_1.mask_.raycastTarget = false

				arg_1_1:SetGaussion(false)
			end

			local var_4_49 = 1

			if var_4_48 <= arg_1_1.time_ and arg_1_1.time_ < var_4_48 + var_4_49 then
				local var_4_50 = (arg_1_1.time_ - var_4_48) / var_4_49
				local var_4_51 = Color.New(0, 0, 0)

				var_4_51.a = Mathf.Lerp(1, 0, var_4_50)
				arg_1_1.mask_.color = var_4_51
			end

			if arg_1_1.time_ >= var_4_48 + var_4_49 and arg_1_1.time_ < var_4_48 + var_4_49 + arg_4_0 then
				local var_4_52 = Color.New(0, 0, 0)
				local var_4_53 = 0

				arg_1_1.mask_.enabled = false
				var_4_52.a = var_4_53
				arg_1_1.mask_.color = var_4_52
			end

			local var_4_54 = 0

			if var_4_54 < arg_1_1.time_ and arg_1_1.time_ <= var_4_54 + arg_4_0 then
				arg_1_1.allBtn_.enabled = false
			end

			local var_4_55 = 3

			if arg_1_1.time_ >= var_4_54 + var_4_55 and arg_1_1.time_ < var_4_54 + var_4_55 + arg_4_0 then
				arg_1_1.allBtn_.enabled = true
			end

			if arg_1_1.frameCnt_ <= 1 then
				arg_1_1.dialog_:SetActive(false)
			end

			local var_4_56 = 5.4
			local var_4_57 = 1

			if var_4_56 < arg_1_1.time_ and arg_1_1.time_ <= var_4_56 + arg_4_0 then
				arg_1_1.talkMaxDuration = 0

				arg_1_1.dialog_:SetActive(true)

				local var_4_58 = LeanTween.value(arg_1_1.dialog_, 0, 1, 0.3)

				var_4_58:setOnUpdate(LuaHelper.FloatAction(function(arg_8_0)
					arg_1_1.dialogCg_.alpha = arg_8_0
				end))
				var_4_58:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_1_1.dialog_)
					var_4_58:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_1_1.duration_ = arg_1_1.duration_ + 0.3

				SetActive(arg_1_1.leftNameGo_, false)

				arg_1_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_1_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_1_1:RecordName(arg_1_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_1_1.iconTrs_.gameObject, false)
				arg_1_1.callingController_:SetSelectedState("normal")

				local var_4_59 = arg_1_1:GetWordFromCfg(417012001)
				local var_4_60 = arg_1_1:FormatText(var_4_59.content)

				arg_1_1.text_.text = var_4_60

				LuaForUtil.ClearLinePrefixSymbol(arg_1_1.text_)

				local var_4_61 = 40
				local var_4_62 = utf8.len(var_4_60)
				local var_4_63 = var_4_61 <= 0 and var_4_57 or var_4_57 * (var_4_62 / var_4_61)

				if var_4_63 > 0 and var_4_57 < var_4_63 then
					arg_1_1.talkMaxDuration = var_4_63
					var_4_56 = var_4_56 + 0.3

					if var_4_63 + var_4_56 > arg_1_1.duration_ then
						arg_1_1.duration_ = var_4_63 + var_4_56
					end
				end

				arg_1_1.text_.text = var_4_60
				arg_1_1.typewritter.percent = 0

				arg_1_1.typewritter:SetDirty()
				arg_1_1:ShowNextGo(false)
				arg_1_1:RecordContent(arg_1_1.text_.text)
			end

			local var_4_64 = var_4_56 + 0.3
			local var_4_65 = math.max(var_4_57, arg_1_1.talkMaxDuration)

			if var_4_64 <= arg_1_1.time_ and arg_1_1.time_ < var_4_64 + var_4_65 then
				arg_1_1.typewritter.percent = (arg_1_1.time_ - var_4_64) / var_4_65

				arg_1_1.typewritter:SetDirty()
			end

			if arg_1_1.time_ >= var_4_64 + var_4_65 and arg_1_1.time_ < var_4_64 + var_4_65 + arg_4_0 then
				arg_1_1.typewritter.percent = 1

				arg_1_1.typewritter:SetDirty()
				arg_1_1:ShowNextGo(true)
			end
		end
	end,
	Play417012002 = function(arg_10_0, arg_10_1)
		arg_10_1.time_ = 0
		arg_10_1.frameCnt_ = 0
		arg_10_1.state_ = "playing"
		arg_10_1.curTalkId_ = 417012002
		arg_10_1.duration_ = 2.6

		local var_10_0 = {
			zh = 1.966,
			ja = 2.6
		}
		local var_10_1 = manager.audio:GetLocalizationFlag()

		if var_10_0[var_10_1] ~= nil then
			arg_10_1.duration_ = var_10_0[var_10_1]
		end

		SetActive(arg_10_1.tipsGo_, false)

		function arg_10_1.onSingleLineFinish_()
			arg_10_1.onSingleLineUpdate_ = nil
			arg_10_1.onSingleLineFinish_ = nil
			arg_10_1.state_ = "waiting"
		end

		function arg_10_1.playNext_(arg_12_0)
			if arg_12_0 == 1 then
				arg_10_0:Play417012003(arg_10_1)
			end
		end

		function arg_10_1.onSingleLineUpdate_(arg_13_0)
			local var_13_0 = "1034"

			if arg_10_1.actors_[var_13_0] == nil then
				local var_13_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1034")

				if not isNil(var_13_1) then
					local var_13_2 = Object.Instantiate(var_13_1, arg_10_1.canvasGo_.transform)

					var_13_2.transform:SetSiblingIndex(1)

					var_13_2.name = var_13_0
					var_13_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_10_1.actors_[var_13_0] = var_13_2

					local var_13_3 = var_13_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_10_1.isInRecall_ then
						for iter_13_0, iter_13_1 in ipairs(var_13_3) do
							iter_13_1.color = arg_10_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_13_4 = arg_10_1.actors_["1034"]
			local var_13_5 = 0

			if var_13_5 < arg_10_1.time_ and arg_10_1.time_ <= var_13_5 + arg_13_0 and not isNil(var_13_4) and arg_10_1.var_.actorSpriteComps1034 == nil then
				arg_10_1.var_.actorSpriteComps1034 = var_13_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_13_6 = 0.2

			if var_13_5 <= arg_10_1.time_ and arg_10_1.time_ < var_13_5 + var_13_6 and not isNil(var_13_4) then
				local var_13_7 = (arg_10_1.time_ - var_13_5) / var_13_6

				if arg_10_1.var_.actorSpriteComps1034 then
					for iter_13_2, iter_13_3 in pairs(arg_10_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_13_3 then
							if arg_10_1.isInRecall_ then
								local var_13_8 = Mathf.Lerp(iter_13_3.color.r, arg_10_1.hightColor1.r, var_13_7)
								local var_13_9 = Mathf.Lerp(iter_13_3.color.g, arg_10_1.hightColor1.g, var_13_7)
								local var_13_10 = Mathf.Lerp(iter_13_3.color.b, arg_10_1.hightColor1.b, var_13_7)

								iter_13_3.color = Color.New(var_13_8, var_13_9, var_13_10)
							else
								local var_13_11 = Mathf.Lerp(iter_13_3.color.r, 1, var_13_7)

								iter_13_3.color = Color.New(var_13_11, var_13_11, var_13_11)
							end
						end
					end
				end
			end

			if arg_10_1.time_ >= var_13_5 + var_13_6 and arg_10_1.time_ < var_13_5 + var_13_6 + arg_13_0 and not isNil(var_13_4) and arg_10_1.var_.actorSpriteComps1034 then
				for iter_13_4, iter_13_5 in pairs(arg_10_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_13_5 then
						if arg_10_1.isInRecall_ then
							iter_13_5.color = arg_10_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_13_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_10_1.var_.actorSpriteComps1034 = nil
			end

			local var_13_12 = arg_10_1.actors_["1034"].transform
			local var_13_13 = 0

			if var_13_13 < arg_10_1.time_ and arg_10_1.time_ <= var_13_13 + arg_13_0 then
				arg_10_1.var_.moveOldPos1034 = var_13_12.localPosition
				var_13_12.localScale = Vector3.New(1, 1, 1)

				arg_10_1:CheckSpriteTmpPos("1034", 3)

				local var_13_14 = var_13_12.childCount

				for iter_13_6 = 0, var_13_14 - 1 do
					local var_13_15 = var_13_12:GetChild(iter_13_6)

					if var_13_15.name == "split_1" or not string.find(var_13_15.name, "split") then
						var_13_15.gameObject:SetActive(true)
					else
						var_13_15.gameObject:SetActive(false)
					end
				end
			end

			local var_13_16 = 0.001

			if var_13_13 <= arg_10_1.time_ and arg_10_1.time_ < var_13_13 + var_13_16 then
				local var_13_17 = (arg_10_1.time_ - var_13_13) / var_13_16
				local var_13_18 = Vector3.New(0, -331.9, -324)

				var_13_12.localPosition = Vector3.Lerp(arg_10_1.var_.moveOldPos1034, var_13_18, var_13_17)
			end

			if arg_10_1.time_ >= var_13_13 + var_13_16 and arg_10_1.time_ < var_13_13 + var_13_16 + arg_13_0 then
				var_13_12.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_13_19 = arg_10_1.actors_["1034"]
			local var_13_20 = 0

			if var_13_20 < arg_10_1.time_ and arg_10_1.time_ <= var_13_20 + arg_13_0 then
				local var_13_21 = var_13_19:GetComponentInChildren(typeof(CanvasGroup))

				if var_13_21 then
					arg_10_1.var_.alphaOldValue1034 = var_13_21.alpha
					arg_10_1.var_.characterEffect1034 = var_13_21
				end

				arg_10_1.var_.alphaOldValue1034 = 0
			end

			local var_13_22 = 0.5

			if var_13_20 <= arg_10_1.time_ and arg_10_1.time_ < var_13_20 + var_13_22 then
				local var_13_23 = (arg_10_1.time_ - var_13_20) / var_13_22
				local var_13_24 = Mathf.Lerp(arg_10_1.var_.alphaOldValue1034, 1, var_13_23)

				if arg_10_1.var_.characterEffect1034 then
					arg_10_1.var_.characterEffect1034.alpha = var_13_24
				end
			end

			if arg_10_1.time_ >= var_13_20 + var_13_22 and arg_10_1.time_ < var_13_20 + var_13_22 + arg_13_0 and arg_10_1.var_.characterEffect1034 then
				arg_10_1.var_.characterEffect1034.alpha = 1
			end

			local var_13_25 = 0

			if var_13_25 < arg_10_1.time_ and arg_10_1.time_ <= var_13_25 + arg_13_0 then
				arg_10_1.allBtn_.enabled = false
			end

			local var_13_26 = 0.5

			if arg_10_1.time_ >= var_13_25 + var_13_26 and arg_10_1.time_ < var_13_25 + var_13_26 + arg_13_0 then
				arg_10_1.allBtn_.enabled = true
			end

			if arg_10_1.frameCnt_ <= 1 then
				arg_10_1.dialog_:SetActive(false)
			end

			local var_13_27 = 0.5
			local var_13_28 = 0.15

			if var_13_27 < arg_10_1.time_ and arg_10_1.time_ <= var_13_27 + arg_13_0 then
				arg_10_1.talkMaxDuration = 0

				arg_10_1.dialog_:SetActive(true)

				local var_13_29 = LeanTween.value(arg_10_1.dialog_, 0, 1, 0.3)

				var_13_29:setOnUpdate(LuaHelper.FloatAction(function(arg_14_0)
					arg_10_1.dialogCg_.alpha = arg_14_0
				end))
				var_13_29:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_10_1.dialog_)
					var_13_29:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_10_1.duration_ = arg_10_1.duration_ + 0.3

				SetActive(arg_10_1.leftNameGo_, true)

				local var_13_30 = arg_10_1:FormatText(StoryNameCfg[1109].name)

				arg_10_1.leftNameTxt_.text = var_13_30

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_10_1.leftNameTxt_.transform)

				arg_10_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_10_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_10_1:RecordName(arg_10_1.leftNameTxt_.text)
				SetActive(arg_10_1.iconTrs_.gameObject, false)
				arg_10_1.callingController_:SetSelectedState("normal")

				local var_13_31 = arg_10_1:GetWordFromCfg(417012002)
				local var_13_32 = arg_10_1:FormatText(var_13_31.content)

				arg_10_1.text_.text = var_13_32

				LuaForUtil.ClearLinePrefixSymbol(arg_10_1.text_)

				local var_13_33 = 6
				local var_13_34 = utf8.len(var_13_32)
				local var_13_35 = var_13_33 <= 0 and var_13_28 or var_13_28 * (var_13_34 / var_13_33)

				if var_13_35 > 0 and var_13_28 < var_13_35 then
					arg_10_1.talkMaxDuration = var_13_35
					var_13_27 = var_13_27 + 0.3

					if var_13_35 + var_13_27 > arg_10_1.duration_ then
						arg_10_1.duration_ = var_13_35 + var_13_27
					end
				end

				arg_10_1.text_.text = var_13_32
				arg_10_1.typewritter.percent = 0

				arg_10_1.typewritter:SetDirty()
				arg_10_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012002", "story_v_out_417012.awb") ~= 0 then
					local var_13_36 = manager.audio:GetVoiceLength("story_v_out_417012", "417012002", "story_v_out_417012.awb") / 1000

					if var_13_36 + var_13_27 > arg_10_1.duration_ then
						arg_10_1.duration_ = var_13_36 + var_13_27
					end

					if var_13_31.prefab_name ~= "" and arg_10_1.actors_[var_13_31.prefab_name] ~= nil then
						local var_13_37 = LuaForUtil.PlayVoiceWithCriLipsync(arg_10_1.actors_[var_13_31.prefab_name].transform, "story_v_out_417012", "417012002", "story_v_out_417012.awb")

						arg_10_1:RecordAudio("417012002", var_13_37)
						arg_10_1:RecordAudio("417012002", var_13_37)
					else
						arg_10_1:AudioAction("play", "voice", "story_v_out_417012", "417012002", "story_v_out_417012.awb")
					end

					arg_10_1:RecordHistoryTalkVoice("story_v_out_417012", "417012002", "story_v_out_417012.awb")
				end

				arg_10_1:RecordContent(arg_10_1.text_.text)
			end

			local var_13_38 = var_13_27 + 0.3
			local var_13_39 = math.max(var_13_28, arg_10_1.talkMaxDuration)

			if var_13_38 <= arg_10_1.time_ and arg_10_1.time_ < var_13_38 + var_13_39 then
				arg_10_1.typewritter.percent = (arg_10_1.time_ - var_13_38) / var_13_39

				arg_10_1.typewritter:SetDirty()
			end

			if arg_10_1.time_ >= var_13_38 + var_13_39 and arg_10_1.time_ < var_13_38 + var_13_39 + arg_13_0 then
				arg_10_1.typewritter.percent = 1

				arg_10_1.typewritter:SetDirty()
				arg_10_1:ShowNextGo(true)
			end
		end
	end,
	Play417012003 = function(arg_16_0, arg_16_1)
		arg_16_1.time_ = 0
		arg_16_1.frameCnt_ = 0
		arg_16_1.state_ = "playing"
		arg_16_1.curTalkId_ = 417012003
		arg_16_1.duration_ = 2.27

		local var_16_0 = {
			zh = 1.6,
			ja = 2.266
		}
		local var_16_1 = manager.audio:GetLocalizationFlag()

		if var_16_0[var_16_1] ~= nil then
			arg_16_1.duration_ = var_16_0[var_16_1]
		end

		SetActive(arg_16_1.tipsGo_, false)

		function arg_16_1.onSingleLineFinish_()
			arg_16_1.onSingleLineUpdate_ = nil
			arg_16_1.onSingleLineFinish_ = nil
			arg_16_1.state_ = "waiting"
		end

		function arg_16_1.playNext_(arg_18_0)
			if arg_18_0 == 1 then
				arg_16_0:Play417012004(arg_16_1)
			end
		end

		function arg_16_1.onSingleLineUpdate_(arg_19_0)
			local var_19_0 = arg_16_1.actors_["1034"]
			local var_19_1 = 0

			if var_19_1 < arg_16_1.time_ and arg_16_1.time_ <= var_19_1 + arg_19_0 and not isNil(var_19_0) and arg_16_1.var_.actorSpriteComps1034 == nil then
				arg_16_1.var_.actorSpriteComps1034 = var_19_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_19_2 = 0.15

			if var_19_1 <= arg_16_1.time_ and arg_16_1.time_ < var_19_1 + var_19_2 and not isNil(var_19_0) then
				local var_19_3 = (arg_16_1.time_ - var_19_1) / var_19_2

				if arg_16_1.var_.actorSpriteComps1034 then
					for iter_19_0, iter_19_1 in pairs(arg_16_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_19_1 then
							if arg_16_1.isInRecall_ then
								local var_19_4 = Mathf.Lerp(iter_19_1.color.r, arg_16_1.hightColor2.r, var_19_3)
								local var_19_5 = Mathf.Lerp(iter_19_1.color.g, arg_16_1.hightColor2.g, var_19_3)
								local var_19_6 = Mathf.Lerp(iter_19_1.color.b, arg_16_1.hightColor2.b, var_19_3)

								iter_19_1.color = Color.New(var_19_4, var_19_5, var_19_6)
							else
								local var_19_7 = Mathf.Lerp(iter_19_1.color.r, 0.5, var_19_3)

								iter_19_1.color = Color.New(var_19_7, var_19_7, var_19_7)
							end
						end
					end
				end
			end

			if arg_16_1.time_ >= var_19_1 + var_19_2 and arg_16_1.time_ < var_19_1 + var_19_2 + arg_19_0 and not isNil(var_19_0) and arg_16_1.var_.actorSpriteComps1034 then
				for iter_19_2, iter_19_3 in pairs(arg_16_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_19_3 then
						if arg_16_1.isInRecall_ then
							iter_19_3.color = arg_16_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_19_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_16_1.var_.actorSpriteComps1034 = nil
			end

			local var_19_8 = 0
			local var_19_9 = 0.15

			if var_19_8 < arg_16_1.time_ and arg_16_1.time_ <= var_19_8 + arg_19_0 then
				arg_16_1.talkMaxDuration = 0
				arg_16_1.dialogCg_.alpha = 1

				arg_16_1.dialog_:SetActive(true)
				SetActive(arg_16_1.leftNameGo_, true)

				local var_19_10 = arg_16_1:FormatText(StoryNameCfg[1110].name)

				arg_16_1.leftNameTxt_.text = var_19_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_16_1.leftNameTxt_.transform)

				arg_16_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_16_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_16_1:RecordName(arg_16_1.leftNameTxt_.text)
				SetActive(arg_16_1.iconTrs_.gameObject, true)
				arg_16_1.iconController_:SetSelectedState("hero")

				arg_16_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_16_1.callingController_:SetSelectedState("normal")

				arg_16_1.keyicon_.color = Color.New(1, 1, 1)
				arg_16_1.icon_.color = Color.New(1, 1, 1)

				local var_19_11 = arg_16_1:GetWordFromCfg(417012003)
				local var_19_12 = arg_16_1:FormatText(var_19_11.content)

				arg_16_1.text_.text = var_19_12

				LuaForUtil.ClearLinePrefixSymbol(arg_16_1.text_)

				local var_19_13 = 6
				local var_19_14 = utf8.len(var_19_12)
				local var_19_15 = var_19_13 <= 0 and var_19_9 or var_19_9 * (var_19_14 / var_19_13)

				if var_19_15 > 0 and var_19_9 < var_19_15 then
					arg_16_1.talkMaxDuration = var_19_15

					if var_19_15 + var_19_8 > arg_16_1.duration_ then
						arg_16_1.duration_ = var_19_15 + var_19_8
					end
				end

				arg_16_1.text_.text = var_19_12
				arg_16_1.typewritter.percent = 0

				arg_16_1.typewritter:SetDirty()
				arg_16_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012003", "story_v_out_417012.awb") ~= 0 then
					local var_19_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012003", "story_v_out_417012.awb") / 1000

					if var_19_16 + var_19_8 > arg_16_1.duration_ then
						arg_16_1.duration_ = var_19_16 + var_19_8
					end

					if var_19_11.prefab_name ~= "" and arg_16_1.actors_[var_19_11.prefab_name] ~= nil then
						local var_19_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_16_1.actors_[var_19_11.prefab_name].transform, "story_v_out_417012", "417012003", "story_v_out_417012.awb")

						arg_16_1:RecordAudio("417012003", var_19_17)
						arg_16_1:RecordAudio("417012003", var_19_17)
					else
						arg_16_1:AudioAction("play", "voice", "story_v_out_417012", "417012003", "story_v_out_417012.awb")
					end

					arg_16_1:RecordHistoryTalkVoice("story_v_out_417012", "417012003", "story_v_out_417012.awb")
				end

				arg_16_1:RecordContent(arg_16_1.text_.text)
			end

			local var_19_18 = math.max(var_19_9, arg_16_1.talkMaxDuration)

			if var_19_8 <= arg_16_1.time_ and arg_16_1.time_ < var_19_8 + var_19_18 then
				arg_16_1.typewritter.percent = (arg_16_1.time_ - var_19_8) / var_19_18

				arg_16_1.typewritter:SetDirty()
			end

			if arg_16_1.time_ >= var_19_8 + var_19_18 and arg_16_1.time_ < var_19_8 + var_19_18 + arg_19_0 then
				arg_16_1.typewritter.percent = 1

				arg_16_1.typewritter:SetDirty()
				arg_16_1:ShowNextGo(true)
			end
		end
	end,
	Play417012004 = function(arg_20_0, arg_20_1)
		arg_20_1.time_ = 0
		arg_20_1.frameCnt_ = 0
		arg_20_1.state_ = "playing"
		arg_20_1.curTalkId_ = 417012004
		arg_20_1.duration_ = 7.87

		local var_20_0 = {
			zh = 4.5,
			ja = 7.866
		}
		local var_20_1 = manager.audio:GetLocalizationFlag()

		if var_20_0[var_20_1] ~= nil then
			arg_20_1.duration_ = var_20_0[var_20_1]
		end

		SetActive(arg_20_1.tipsGo_, false)

		function arg_20_1.onSingleLineFinish_()
			arg_20_1.onSingleLineUpdate_ = nil
			arg_20_1.onSingleLineFinish_ = nil
			arg_20_1.state_ = "waiting"
		end

		function arg_20_1.playNext_(arg_22_0)
			if arg_22_0 == 1 then
				arg_20_0:Play417012005(arg_20_1)
			end
		end

		function arg_20_1.onSingleLineUpdate_(arg_23_0)
			local var_23_0 = arg_20_1.actors_["1034"]
			local var_23_1 = 0

			if var_23_1 < arg_20_1.time_ and arg_20_1.time_ <= var_23_1 + arg_23_0 and not isNil(var_23_0) and arg_20_1.var_.actorSpriteComps1034 == nil then
				arg_20_1.var_.actorSpriteComps1034 = var_23_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_23_2 = 0.2

			if var_23_1 <= arg_20_1.time_ and arg_20_1.time_ < var_23_1 + var_23_2 and not isNil(var_23_0) then
				local var_23_3 = (arg_20_1.time_ - var_23_1) / var_23_2

				if arg_20_1.var_.actorSpriteComps1034 then
					for iter_23_0, iter_23_1 in pairs(arg_20_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_23_1 then
							if arg_20_1.isInRecall_ then
								local var_23_4 = Mathf.Lerp(iter_23_1.color.r, arg_20_1.hightColor1.r, var_23_3)
								local var_23_5 = Mathf.Lerp(iter_23_1.color.g, arg_20_1.hightColor1.g, var_23_3)
								local var_23_6 = Mathf.Lerp(iter_23_1.color.b, arg_20_1.hightColor1.b, var_23_3)

								iter_23_1.color = Color.New(var_23_4, var_23_5, var_23_6)
							else
								local var_23_7 = Mathf.Lerp(iter_23_1.color.r, 1, var_23_3)

								iter_23_1.color = Color.New(var_23_7, var_23_7, var_23_7)
							end
						end
					end
				end
			end

			if arg_20_1.time_ >= var_23_1 + var_23_2 and arg_20_1.time_ < var_23_1 + var_23_2 + arg_23_0 and not isNil(var_23_0) and arg_20_1.var_.actorSpriteComps1034 then
				for iter_23_2, iter_23_3 in pairs(arg_20_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_23_3 then
						if arg_20_1.isInRecall_ then
							iter_23_3.color = arg_20_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_23_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_20_1.var_.actorSpriteComps1034 = nil
			end

			local var_23_8 = 0
			local var_23_9 = 0.575

			if var_23_8 < arg_20_1.time_ and arg_20_1.time_ <= var_23_8 + arg_23_0 then
				arg_20_1.talkMaxDuration = 0
				arg_20_1.dialogCg_.alpha = 1

				arg_20_1.dialog_:SetActive(true)
				SetActive(arg_20_1.leftNameGo_, true)

				local var_23_10 = arg_20_1:FormatText(StoryNameCfg[1109].name)

				arg_20_1.leftNameTxt_.text = var_23_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_20_1.leftNameTxt_.transform)

				arg_20_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_20_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_20_1:RecordName(arg_20_1.leftNameTxt_.text)
				SetActive(arg_20_1.iconTrs_.gameObject, false)
				arg_20_1.callingController_:SetSelectedState("normal")

				local var_23_11 = arg_20_1:GetWordFromCfg(417012004)
				local var_23_12 = arg_20_1:FormatText(var_23_11.content)

				arg_20_1.text_.text = var_23_12

				LuaForUtil.ClearLinePrefixSymbol(arg_20_1.text_)

				local var_23_13 = 23
				local var_23_14 = utf8.len(var_23_12)
				local var_23_15 = var_23_13 <= 0 and var_23_9 or var_23_9 * (var_23_14 / var_23_13)

				if var_23_15 > 0 and var_23_9 < var_23_15 then
					arg_20_1.talkMaxDuration = var_23_15

					if var_23_15 + var_23_8 > arg_20_1.duration_ then
						arg_20_1.duration_ = var_23_15 + var_23_8
					end
				end

				arg_20_1.text_.text = var_23_12
				arg_20_1.typewritter.percent = 0

				arg_20_1.typewritter:SetDirty()
				arg_20_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012004", "story_v_out_417012.awb") ~= 0 then
					local var_23_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012004", "story_v_out_417012.awb") / 1000

					if var_23_16 + var_23_8 > arg_20_1.duration_ then
						arg_20_1.duration_ = var_23_16 + var_23_8
					end

					if var_23_11.prefab_name ~= "" and arg_20_1.actors_[var_23_11.prefab_name] ~= nil then
						local var_23_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_20_1.actors_[var_23_11.prefab_name].transform, "story_v_out_417012", "417012004", "story_v_out_417012.awb")

						arg_20_1:RecordAudio("417012004", var_23_17)
						arg_20_1:RecordAudio("417012004", var_23_17)
					else
						arg_20_1:AudioAction("play", "voice", "story_v_out_417012", "417012004", "story_v_out_417012.awb")
					end

					arg_20_1:RecordHistoryTalkVoice("story_v_out_417012", "417012004", "story_v_out_417012.awb")
				end

				arg_20_1:RecordContent(arg_20_1.text_.text)
			end

			local var_23_18 = math.max(var_23_9, arg_20_1.talkMaxDuration)

			if var_23_8 <= arg_20_1.time_ and arg_20_1.time_ < var_23_8 + var_23_18 then
				arg_20_1.typewritter.percent = (arg_20_1.time_ - var_23_8) / var_23_18

				arg_20_1.typewritter:SetDirty()
			end

			if arg_20_1.time_ >= var_23_8 + var_23_18 and arg_20_1.time_ < var_23_8 + var_23_18 + arg_23_0 then
				arg_20_1.typewritter.percent = 1

				arg_20_1.typewritter:SetDirty()
				arg_20_1:ShowNextGo(true)
			end
		end
	end,
	Play417012005 = function(arg_24_0, arg_24_1)
		arg_24_1.time_ = 0
		arg_24_1.frameCnt_ = 0
		arg_24_1.state_ = "playing"
		arg_24_1.curTalkId_ = 417012005
		arg_24_1.duration_ = 3.9

		local var_24_0 = {
			zh = 1.6,
			ja = 3.9
		}
		local var_24_1 = manager.audio:GetLocalizationFlag()

		if var_24_0[var_24_1] ~= nil then
			arg_24_1.duration_ = var_24_0[var_24_1]
		end

		SetActive(arg_24_1.tipsGo_, false)

		function arg_24_1.onSingleLineFinish_()
			arg_24_1.onSingleLineUpdate_ = nil
			arg_24_1.onSingleLineFinish_ = nil
			arg_24_1.state_ = "waiting"
		end

		function arg_24_1.playNext_(arg_26_0)
			if arg_26_0 == 1 then
				arg_24_0:Play417012006(arg_24_1)
			end
		end

		function arg_24_1.onSingleLineUpdate_(arg_27_0)
			local var_27_0 = 0
			local var_27_1 = 0.2

			if var_27_0 < arg_24_1.time_ and arg_24_1.time_ <= var_27_0 + arg_27_0 then
				arg_24_1.talkMaxDuration = 0
				arg_24_1.dialogCg_.alpha = 1

				arg_24_1.dialog_:SetActive(true)
				SetActive(arg_24_1.leftNameGo_, true)

				local var_27_2 = arg_24_1:FormatText(StoryNameCfg[1109].name)

				arg_24_1.leftNameTxt_.text = var_27_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_24_1.leftNameTxt_.transform)

				arg_24_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_24_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_24_1:RecordName(arg_24_1.leftNameTxt_.text)
				SetActive(arg_24_1.iconTrs_.gameObject, false)
				arg_24_1.callingController_:SetSelectedState("normal")

				local var_27_3 = arg_24_1:GetWordFromCfg(417012005)
				local var_27_4 = arg_24_1:FormatText(var_27_3.content)

				arg_24_1.text_.text = var_27_4

				LuaForUtil.ClearLinePrefixSymbol(arg_24_1.text_)

				local var_27_5 = 8
				local var_27_6 = utf8.len(var_27_4)
				local var_27_7 = var_27_5 <= 0 and var_27_1 or var_27_1 * (var_27_6 / var_27_5)

				if var_27_7 > 0 and var_27_1 < var_27_7 then
					arg_24_1.talkMaxDuration = var_27_7

					if var_27_7 + var_27_0 > arg_24_1.duration_ then
						arg_24_1.duration_ = var_27_7 + var_27_0
					end
				end

				arg_24_1.text_.text = var_27_4
				arg_24_1.typewritter.percent = 0

				arg_24_1.typewritter:SetDirty()
				arg_24_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012005", "story_v_out_417012.awb") ~= 0 then
					local var_27_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012005", "story_v_out_417012.awb") / 1000

					if var_27_8 + var_27_0 > arg_24_1.duration_ then
						arg_24_1.duration_ = var_27_8 + var_27_0
					end

					if var_27_3.prefab_name ~= "" and arg_24_1.actors_[var_27_3.prefab_name] ~= nil then
						local var_27_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_24_1.actors_[var_27_3.prefab_name].transform, "story_v_out_417012", "417012005", "story_v_out_417012.awb")

						arg_24_1:RecordAudio("417012005", var_27_9)
						arg_24_1:RecordAudio("417012005", var_27_9)
					else
						arg_24_1:AudioAction("play", "voice", "story_v_out_417012", "417012005", "story_v_out_417012.awb")
					end

					arg_24_1:RecordHistoryTalkVoice("story_v_out_417012", "417012005", "story_v_out_417012.awb")
				end

				arg_24_1:RecordContent(arg_24_1.text_.text)
			end

			local var_27_10 = math.max(var_27_1, arg_24_1.talkMaxDuration)

			if var_27_0 <= arg_24_1.time_ and arg_24_1.time_ < var_27_0 + var_27_10 then
				arg_24_1.typewritter.percent = (arg_24_1.time_ - var_27_0) / var_27_10

				arg_24_1.typewritter:SetDirty()
			end

			if arg_24_1.time_ >= var_27_0 + var_27_10 and arg_24_1.time_ < var_27_0 + var_27_10 + arg_27_0 then
				arg_24_1.typewritter.percent = 1

				arg_24_1.typewritter:SetDirty()
				arg_24_1:ShowNextGo(true)
			end
		end
	end,
	Play417012006 = function(arg_28_0, arg_28_1)
		arg_28_1.time_ = 0
		arg_28_1.frameCnt_ = 0
		arg_28_1.state_ = "playing"
		arg_28_1.curTalkId_ = 417012006
		arg_28_1.duration_ = 9.87

		local var_28_0 = {
			zh = 5.766,
			ja = 9.866
		}
		local var_28_1 = manager.audio:GetLocalizationFlag()

		if var_28_0[var_28_1] ~= nil then
			arg_28_1.duration_ = var_28_0[var_28_1]
		end

		SetActive(arg_28_1.tipsGo_, false)

		function arg_28_1.onSingleLineFinish_()
			arg_28_1.onSingleLineUpdate_ = nil
			arg_28_1.onSingleLineFinish_ = nil
			arg_28_1.state_ = "waiting"
		end

		function arg_28_1.playNext_(arg_30_0)
			if arg_30_0 == 1 then
				arg_28_0:Play417012007(arg_28_1)
			end
		end

		function arg_28_1.onSingleLineUpdate_(arg_31_0)
			local var_31_0 = arg_28_1.actors_["1034"]
			local var_31_1 = 0

			if var_31_1 < arg_28_1.time_ and arg_28_1.time_ <= var_31_1 + arg_31_0 and not isNil(var_31_0) and arg_28_1.var_.actorSpriteComps1034 == nil then
				arg_28_1.var_.actorSpriteComps1034 = var_31_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_31_2 = 0.2

			if var_31_1 <= arg_28_1.time_ and arg_28_1.time_ < var_31_1 + var_31_2 and not isNil(var_31_0) then
				local var_31_3 = (arg_28_1.time_ - var_31_1) / var_31_2

				if arg_28_1.var_.actorSpriteComps1034 then
					for iter_31_0, iter_31_1 in pairs(arg_28_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_31_1 then
							if arg_28_1.isInRecall_ then
								local var_31_4 = Mathf.Lerp(iter_31_1.color.r, arg_28_1.hightColor2.r, var_31_3)
								local var_31_5 = Mathf.Lerp(iter_31_1.color.g, arg_28_1.hightColor2.g, var_31_3)
								local var_31_6 = Mathf.Lerp(iter_31_1.color.b, arg_28_1.hightColor2.b, var_31_3)

								iter_31_1.color = Color.New(var_31_4, var_31_5, var_31_6)
							else
								local var_31_7 = Mathf.Lerp(iter_31_1.color.r, 0.5, var_31_3)

								iter_31_1.color = Color.New(var_31_7, var_31_7, var_31_7)
							end
						end
					end
				end
			end

			if arg_28_1.time_ >= var_31_1 + var_31_2 and arg_28_1.time_ < var_31_1 + var_31_2 + arg_31_0 and not isNil(var_31_0) and arg_28_1.var_.actorSpriteComps1034 then
				for iter_31_2, iter_31_3 in pairs(arg_28_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_31_3 then
						if arg_28_1.isInRecall_ then
							iter_31_3.color = arg_28_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_31_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_28_1.var_.actorSpriteComps1034 = nil
			end

			local var_31_8 = 0
			local var_31_9 = 0.75

			if var_31_8 < arg_28_1.time_ and arg_28_1.time_ <= var_31_8 + arg_31_0 then
				arg_28_1.talkMaxDuration = 0
				arg_28_1.dialogCg_.alpha = 1

				arg_28_1.dialog_:SetActive(true)
				SetActive(arg_28_1.leftNameGo_, true)

				local var_31_10 = arg_28_1:FormatText(StoryNameCfg[1110].name)

				arg_28_1.leftNameTxt_.text = var_31_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_28_1.leftNameTxt_.transform)

				arg_28_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_28_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_28_1:RecordName(arg_28_1.leftNameTxt_.text)
				SetActive(arg_28_1.iconTrs_.gameObject, true)
				arg_28_1.iconController_:SetSelectedState("hero")

				arg_28_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_28_1.callingController_:SetSelectedState("normal")

				arg_28_1.keyicon_.color = Color.New(1, 1, 1)
				arg_28_1.icon_.color = Color.New(1, 1, 1)

				local var_31_11 = arg_28_1:GetWordFromCfg(417012006)
				local var_31_12 = arg_28_1:FormatText(var_31_11.content)

				arg_28_1.text_.text = var_31_12

				LuaForUtil.ClearLinePrefixSymbol(arg_28_1.text_)

				local var_31_13 = 30
				local var_31_14 = utf8.len(var_31_12)
				local var_31_15 = var_31_13 <= 0 and var_31_9 or var_31_9 * (var_31_14 / var_31_13)

				if var_31_15 > 0 and var_31_9 < var_31_15 then
					arg_28_1.talkMaxDuration = var_31_15

					if var_31_15 + var_31_8 > arg_28_1.duration_ then
						arg_28_1.duration_ = var_31_15 + var_31_8
					end
				end

				arg_28_1.text_.text = var_31_12
				arg_28_1.typewritter.percent = 0

				arg_28_1.typewritter:SetDirty()
				arg_28_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012006", "story_v_out_417012.awb") ~= 0 then
					local var_31_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012006", "story_v_out_417012.awb") / 1000

					if var_31_16 + var_31_8 > arg_28_1.duration_ then
						arg_28_1.duration_ = var_31_16 + var_31_8
					end

					if var_31_11.prefab_name ~= "" and arg_28_1.actors_[var_31_11.prefab_name] ~= nil then
						local var_31_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_28_1.actors_[var_31_11.prefab_name].transform, "story_v_out_417012", "417012006", "story_v_out_417012.awb")

						arg_28_1:RecordAudio("417012006", var_31_17)
						arg_28_1:RecordAudio("417012006", var_31_17)
					else
						arg_28_1:AudioAction("play", "voice", "story_v_out_417012", "417012006", "story_v_out_417012.awb")
					end

					arg_28_1:RecordHistoryTalkVoice("story_v_out_417012", "417012006", "story_v_out_417012.awb")
				end

				arg_28_1:RecordContent(arg_28_1.text_.text)
			end

			local var_31_18 = math.max(var_31_9, arg_28_1.talkMaxDuration)

			if var_31_8 <= arg_28_1.time_ and arg_28_1.time_ < var_31_8 + var_31_18 then
				arg_28_1.typewritter.percent = (arg_28_1.time_ - var_31_8) / var_31_18

				arg_28_1.typewritter:SetDirty()
			end

			if arg_28_1.time_ >= var_31_8 + var_31_18 and arg_28_1.time_ < var_31_8 + var_31_18 + arg_31_0 then
				arg_28_1.typewritter.percent = 1

				arg_28_1.typewritter:SetDirty()
				arg_28_1:ShowNextGo(true)
			end
		end
	end,
	Play417012007 = function(arg_32_0, arg_32_1)
		arg_32_1.time_ = 0
		arg_32_1.frameCnt_ = 0
		arg_32_1.state_ = "playing"
		arg_32_1.curTalkId_ = 417012007
		arg_32_1.duration_ = 9.8

		local var_32_0 = {
			zh = 5.066,
			ja = 9.8
		}
		local var_32_1 = manager.audio:GetLocalizationFlag()

		if var_32_0[var_32_1] ~= nil then
			arg_32_1.duration_ = var_32_0[var_32_1]
		end

		SetActive(arg_32_1.tipsGo_, false)

		function arg_32_1.onSingleLineFinish_()
			arg_32_1.onSingleLineUpdate_ = nil
			arg_32_1.onSingleLineFinish_ = nil
			arg_32_1.state_ = "waiting"
		end

		function arg_32_1.playNext_(arg_34_0)
			if arg_34_0 == 1 then
				arg_32_0:Play417012008(arg_32_1)
			end
		end

		function arg_32_1.onSingleLineUpdate_(arg_35_0)
			local var_35_0 = 0
			local var_35_1 = 0.675

			if var_35_0 < arg_32_1.time_ and arg_32_1.time_ <= var_35_0 + arg_35_0 then
				arg_32_1.talkMaxDuration = 0
				arg_32_1.dialogCg_.alpha = 1

				arg_32_1.dialog_:SetActive(true)
				SetActive(arg_32_1.leftNameGo_, true)

				local var_35_2 = arg_32_1:FormatText(StoryNameCfg[1110].name)

				arg_32_1.leftNameTxt_.text = var_35_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_32_1.leftNameTxt_.transform)

				arg_32_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_32_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_32_1:RecordName(arg_32_1.leftNameTxt_.text)
				SetActive(arg_32_1.iconTrs_.gameObject, true)
				arg_32_1.iconController_:SetSelectedState("hero")

				arg_32_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_32_1.callingController_:SetSelectedState("normal")

				arg_32_1.keyicon_.color = Color.New(1, 1, 1)
				arg_32_1.icon_.color = Color.New(1, 1, 1)

				local var_35_3 = arg_32_1:GetWordFromCfg(417012007)
				local var_35_4 = arg_32_1:FormatText(var_35_3.content)

				arg_32_1.text_.text = var_35_4

				LuaForUtil.ClearLinePrefixSymbol(arg_32_1.text_)

				local var_35_5 = 27
				local var_35_6 = utf8.len(var_35_4)
				local var_35_7 = var_35_5 <= 0 and var_35_1 or var_35_1 * (var_35_6 / var_35_5)

				if var_35_7 > 0 and var_35_1 < var_35_7 then
					arg_32_1.talkMaxDuration = var_35_7

					if var_35_7 + var_35_0 > arg_32_1.duration_ then
						arg_32_1.duration_ = var_35_7 + var_35_0
					end
				end

				arg_32_1.text_.text = var_35_4
				arg_32_1.typewritter.percent = 0

				arg_32_1.typewritter:SetDirty()
				arg_32_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012007", "story_v_out_417012.awb") ~= 0 then
					local var_35_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012007", "story_v_out_417012.awb") / 1000

					if var_35_8 + var_35_0 > arg_32_1.duration_ then
						arg_32_1.duration_ = var_35_8 + var_35_0
					end

					if var_35_3.prefab_name ~= "" and arg_32_1.actors_[var_35_3.prefab_name] ~= nil then
						local var_35_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_32_1.actors_[var_35_3.prefab_name].transform, "story_v_out_417012", "417012007", "story_v_out_417012.awb")

						arg_32_1:RecordAudio("417012007", var_35_9)
						arg_32_1:RecordAudio("417012007", var_35_9)
					else
						arg_32_1:AudioAction("play", "voice", "story_v_out_417012", "417012007", "story_v_out_417012.awb")
					end

					arg_32_1:RecordHistoryTalkVoice("story_v_out_417012", "417012007", "story_v_out_417012.awb")
				end

				arg_32_1:RecordContent(arg_32_1.text_.text)
			end

			local var_35_10 = math.max(var_35_1, arg_32_1.talkMaxDuration)

			if var_35_0 <= arg_32_1.time_ and arg_32_1.time_ < var_35_0 + var_35_10 then
				arg_32_1.typewritter.percent = (arg_32_1.time_ - var_35_0) / var_35_10

				arg_32_1.typewritter:SetDirty()
			end

			if arg_32_1.time_ >= var_35_0 + var_35_10 and arg_32_1.time_ < var_35_0 + var_35_10 + arg_35_0 then
				arg_32_1.typewritter.percent = 1

				arg_32_1.typewritter:SetDirty()
				arg_32_1:ShowNextGo(true)
			end
		end
	end,
	Play417012008 = function(arg_36_0, arg_36_1)
		arg_36_1.time_ = 0
		arg_36_1.frameCnt_ = 0
		arg_36_1.state_ = "playing"
		arg_36_1.curTalkId_ = 417012008
		arg_36_1.duration_ = 1.9

		local var_36_0 = {
			zh = 1.9,
			ja = 1.666
		}
		local var_36_1 = manager.audio:GetLocalizationFlag()

		if var_36_0[var_36_1] ~= nil then
			arg_36_1.duration_ = var_36_0[var_36_1]
		end

		SetActive(arg_36_1.tipsGo_, false)

		function arg_36_1.onSingleLineFinish_()
			arg_36_1.onSingleLineUpdate_ = nil
			arg_36_1.onSingleLineFinish_ = nil
			arg_36_1.state_ = "waiting"
		end

		function arg_36_1.playNext_(arg_38_0)
			if arg_38_0 == 1 then
				arg_36_0:Play417012009(arg_36_1)
			end
		end

		function arg_36_1.onSingleLineUpdate_(arg_39_0)
			local var_39_0 = arg_36_1.actors_["1034"]
			local var_39_1 = 0

			if var_39_1 < arg_36_1.time_ and arg_36_1.time_ <= var_39_1 + arg_39_0 and not isNil(var_39_0) and arg_36_1.var_.actorSpriteComps1034 == nil then
				arg_36_1.var_.actorSpriteComps1034 = var_39_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_39_2 = 0.2

			if var_39_1 <= arg_36_1.time_ and arg_36_1.time_ < var_39_1 + var_39_2 and not isNil(var_39_0) then
				local var_39_3 = (arg_36_1.time_ - var_39_1) / var_39_2

				if arg_36_1.var_.actorSpriteComps1034 then
					for iter_39_0, iter_39_1 in pairs(arg_36_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_39_1 then
							if arg_36_1.isInRecall_ then
								local var_39_4 = Mathf.Lerp(iter_39_1.color.r, arg_36_1.hightColor1.r, var_39_3)
								local var_39_5 = Mathf.Lerp(iter_39_1.color.g, arg_36_1.hightColor1.g, var_39_3)
								local var_39_6 = Mathf.Lerp(iter_39_1.color.b, arg_36_1.hightColor1.b, var_39_3)

								iter_39_1.color = Color.New(var_39_4, var_39_5, var_39_6)
							else
								local var_39_7 = Mathf.Lerp(iter_39_1.color.r, 1, var_39_3)

								iter_39_1.color = Color.New(var_39_7, var_39_7, var_39_7)
							end
						end
					end
				end
			end

			if arg_36_1.time_ >= var_39_1 + var_39_2 and arg_36_1.time_ < var_39_1 + var_39_2 + arg_39_0 and not isNil(var_39_0) and arg_36_1.var_.actorSpriteComps1034 then
				for iter_39_2, iter_39_3 in pairs(arg_36_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_39_3 then
						if arg_36_1.isInRecall_ then
							iter_39_3.color = arg_36_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_39_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_36_1.var_.actorSpriteComps1034 = nil
			end

			local var_39_8 = arg_36_1.actors_["1034"].transform
			local var_39_9 = 0

			if var_39_9 < arg_36_1.time_ and arg_36_1.time_ <= var_39_9 + arg_39_0 then
				arg_36_1.var_.moveOldPos1034 = var_39_8.localPosition
				var_39_8.localScale = Vector3.New(1, 1, 1)

				arg_36_1:CheckSpriteTmpPos("1034", 3)

				local var_39_10 = var_39_8.childCount

				for iter_39_4 = 0, var_39_10 - 1 do
					local var_39_11 = var_39_8:GetChild(iter_39_4)

					if var_39_11.name == "split_4" or not string.find(var_39_11.name, "split") then
						var_39_11.gameObject:SetActive(true)
					else
						var_39_11.gameObject:SetActive(false)
					end
				end
			end

			local var_39_12 = 0.001

			if var_39_9 <= arg_36_1.time_ and arg_36_1.time_ < var_39_9 + var_39_12 then
				local var_39_13 = (arg_36_1.time_ - var_39_9) / var_39_12
				local var_39_14 = Vector3.New(0, -331.9, -324)

				var_39_8.localPosition = Vector3.Lerp(arg_36_1.var_.moveOldPos1034, var_39_14, var_39_13)
			end

			if arg_36_1.time_ >= var_39_9 + var_39_12 and arg_36_1.time_ < var_39_9 + var_39_12 + arg_39_0 then
				var_39_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_39_15 = 0
			local var_39_16 = 0.125

			if var_39_15 < arg_36_1.time_ and arg_36_1.time_ <= var_39_15 + arg_39_0 then
				arg_36_1.talkMaxDuration = 0
				arg_36_1.dialogCg_.alpha = 1

				arg_36_1.dialog_:SetActive(true)
				SetActive(arg_36_1.leftNameGo_, true)

				local var_39_17 = arg_36_1:FormatText(StoryNameCfg[1109].name)

				arg_36_1.leftNameTxt_.text = var_39_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_36_1.leftNameTxt_.transform)

				arg_36_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_36_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_36_1:RecordName(arg_36_1.leftNameTxt_.text)
				SetActive(arg_36_1.iconTrs_.gameObject, false)
				arg_36_1.callingController_:SetSelectedState("normal")

				local var_39_18 = arg_36_1:GetWordFromCfg(417012008)
				local var_39_19 = arg_36_1:FormatText(var_39_18.content)

				arg_36_1.text_.text = var_39_19

				LuaForUtil.ClearLinePrefixSymbol(arg_36_1.text_)

				local var_39_20 = 5
				local var_39_21 = utf8.len(var_39_19)
				local var_39_22 = var_39_20 <= 0 and var_39_16 or var_39_16 * (var_39_21 / var_39_20)

				if var_39_22 > 0 and var_39_16 < var_39_22 then
					arg_36_1.talkMaxDuration = var_39_22

					if var_39_22 + var_39_15 > arg_36_1.duration_ then
						arg_36_1.duration_ = var_39_22 + var_39_15
					end
				end

				arg_36_1.text_.text = var_39_19
				arg_36_1.typewritter.percent = 0

				arg_36_1.typewritter:SetDirty()
				arg_36_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012008", "story_v_out_417012.awb") ~= 0 then
					local var_39_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012008", "story_v_out_417012.awb") / 1000

					if var_39_23 + var_39_15 > arg_36_1.duration_ then
						arg_36_1.duration_ = var_39_23 + var_39_15
					end

					if var_39_18.prefab_name ~= "" and arg_36_1.actors_[var_39_18.prefab_name] ~= nil then
						local var_39_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_36_1.actors_[var_39_18.prefab_name].transform, "story_v_out_417012", "417012008", "story_v_out_417012.awb")

						arg_36_1:RecordAudio("417012008", var_39_24)
						arg_36_1:RecordAudio("417012008", var_39_24)
					else
						arg_36_1:AudioAction("play", "voice", "story_v_out_417012", "417012008", "story_v_out_417012.awb")
					end

					arg_36_1:RecordHistoryTalkVoice("story_v_out_417012", "417012008", "story_v_out_417012.awb")
				end

				arg_36_1:RecordContent(arg_36_1.text_.text)
			end

			local var_39_25 = math.max(var_39_16, arg_36_1.talkMaxDuration)

			if var_39_15 <= arg_36_1.time_ and arg_36_1.time_ < var_39_15 + var_39_25 then
				arg_36_1.typewritter.percent = (arg_36_1.time_ - var_39_15) / var_39_25

				arg_36_1.typewritter:SetDirty()
			end

			if arg_36_1.time_ >= var_39_15 + var_39_25 and arg_36_1.time_ < var_39_15 + var_39_25 + arg_39_0 then
				arg_36_1.typewritter.percent = 1

				arg_36_1.typewritter:SetDirty()
				arg_36_1:ShowNextGo(true)
			end
		end
	end,
	Play417012009 = function(arg_40_0, arg_40_1)
		arg_40_1.time_ = 0
		arg_40_1.frameCnt_ = 0
		arg_40_1.state_ = "playing"
		arg_40_1.curTalkId_ = 417012009
		arg_40_1.duration_ = 5

		SetActive(arg_40_1.tipsGo_, false)

		function arg_40_1.onSingleLineFinish_()
			arg_40_1.onSingleLineUpdate_ = nil
			arg_40_1.onSingleLineFinish_ = nil
			arg_40_1.state_ = "waiting"
		end

		function arg_40_1.playNext_(arg_42_0)
			if arg_42_0 == 1 then
				arg_40_0:Play417012010(arg_40_1)
			end
		end

		function arg_40_1.onSingleLineUpdate_(arg_43_0)
			local var_43_0 = arg_40_1.actors_["1034"]
			local var_43_1 = 0

			if var_43_1 < arg_40_1.time_ and arg_40_1.time_ <= var_43_1 + arg_43_0 and not isNil(var_43_0) and arg_40_1.var_.actorSpriteComps1034 == nil then
				arg_40_1.var_.actorSpriteComps1034 = var_43_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_43_2 = 0.2

			if var_43_1 <= arg_40_1.time_ and arg_40_1.time_ < var_43_1 + var_43_2 and not isNil(var_43_0) then
				local var_43_3 = (arg_40_1.time_ - var_43_1) / var_43_2

				if arg_40_1.var_.actorSpriteComps1034 then
					for iter_43_0, iter_43_1 in pairs(arg_40_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_43_1 then
							if arg_40_1.isInRecall_ then
								local var_43_4 = Mathf.Lerp(iter_43_1.color.r, arg_40_1.hightColor2.r, var_43_3)
								local var_43_5 = Mathf.Lerp(iter_43_1.color.g, arg_40_1.hightColor2.g, var_43_3)
								local var_43_6 = Mathf.Lerp(iter_43_1.color.b, arg_40_1.hightColor2.b, var_43_3)

								iter_43_1.color = Color.New(var_43_4, var_43_5, var_43_6)
							else
								local var_43_7 = Mathf.Lerp(iter_43_1.color.r, 0.5, var_43_3)

								iter_43_1.color = Color.New(var_43_7, var_43_7, var_43_7)
							end
						end
					end
				end
			end

			if arg_40_1.time_ >= var_43_1 + var_43_2 and arg_40_1.time_ < var_43_1 + var_43_2 + arg_43_0 and not isNil(var_43_0) and arg_40_1.var_.actorSpriteComps1034 then
				for iter_43_2, iter_43_3 in pairs(arg_40_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_43_3 then
						if arg_40_1.isInRecall_ then
							iter_43_3.color = arg_40_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_43_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_40_1.var_.actorSpriteComps1034 = nil
			end

			local var_43_8 = arg_40_1.actors_["1034"].transform
			local var_43_9 = 0

			if var_43_9 < arg_40_1.time_ and arg_40_1.time_ <= var_43_9 + arg_43_0 then
				arg_40_1.var_.moveOldPos1034 = var_43_8.localPosition
				var_43_8.localScale = Vector3.New(1, 1, 1)

				arg_40_1:CheckSpriteTmpPos("1034", 7)

				local var_43_10 = var_43_8.childCount

				for iter_43_4 = 0, var_43_10 - 1 do
					local var_43_11 = var_43_8:GetChild(iter_43_4)

					if var_43_11.name == "" or not string.find(var_43_11.name, "split") then
						var_43_11.gameObject:SetActive(true)
					else
						var_43_11.gameObject:SetActive(false)
					end
				end
			end

			local var_43_12 = 0.001

			if var_43_9 <= arg_40_1.time_ and arg_40_1.time_ < var_43_9 + var_43_12 then
				local var_43_13 = (arg_40_1.time_ - var_43_9) / var_43_12
				local var_43_14 = Vector3.New(0, -2000, 0)

				var_43_8.localPosition = Vector3.Lerp(arg_40_1.var_.moveOldPos1034, var_43_14, var_43_13)
			end

			if arg_40_1.time_ >= var_43_9 + var_43_12 and arg_40_1.time_ < var_43_9 + var_43_12 + arg_43_0 then
				var_43_8.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_43_15 = 0.766666666666667
			local var_43_16 = 1

			if var_43_15 < arg_40_1.time_ and arg_40_1.time_ <= var_43_15 + arg_43_0 then
				local var_43_17 = "play"
				local var_43_18 = "effect"

				arg_40_1:AudioAction(var_43_17, var_43_18, "se_story_1310", "se_story_1310_clap", "")
			end

			local var_43_19 = 0
			local var_43_20 = 1.15

			if var_43_19 < arg_40_1.time_ and arg_40_1.time_ <= var_43_19 + arg_43_0 then
				arg_40_1.talkMaxDuration = 0
				arg_40_1.dialogCg_.alpha = 1

				arg_40_1.dialog_:SetActive(true)
				SetActive(arg_40_1.leftNameGo_, false)

				arg_40_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_40_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_40_1:RecordName(arg_40_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_40_1.iconTrs_.gameObject, false)
				arg_40_1.callingController_:SetSelectedState("normal")

				local var_43_21 = arg_40_1:GetWordFromCfg(417012009)
				local var_43_22 = arg_40_1:FormatText(var_43_21.content)

				arg_40_1.text_.text = var_43_22

				LuaForUtil.ClearLinePrefixSymbol(arg_40_1.text_)

				local var_43_23 = 46
				local var_43_24 = utf8.len(var_43_22)
				local var_43_25 = var_43_23 <= 0 and var_43_20 or var_43_20 * (var_43_24 / var_43_23)

				if var_43_25 > 0 and var_43_20 < var_43_25 then
					arg_40_1.talkMaxDuration = var_43_25

					if var_43_25 + var_43_19 > arg_40_1.duration_ then
						arg_40_1.duration_ = var_43_25 + var_43_19
					end
				end

				arg_40_1.text_.text = var_43_22
				arg_40_1.typewritter.percent = 0

				arg_40_1.typewritter:SetDirty()
				arg_40_1:ShowNextGo(false)
				arg_40_1:RecordContent(arg_40_1.text_.text)
			end

			local var_43_26 = math.max(var_43_20, arg_40_1.talkMaxDuration)

			if var_43_19 <= arg_40_1.time_ and arg_40_1.time_ < var_43_19 + var_43_26 then
				arg_40_1.typewritter.percent = (arg_40_1.time_ - var_43_19) / var_43_26

				arg_40_1.typewritter:SetDirty()
			end

			if arg_40_1.time_ >= var_43_19 + var_43_26 and arg_40_1.time_ < var_43_19 + var_43_26 + arg_43_0 then
				arg_40_1.typewritter.percent = 1

				arg_40_1.typewritter:SetDirty()
				arg_40_1:ShowNextGo(true)
			end
		end
	end,
	Play417012010 = function(arg_44_0, arg_44_1)
		arg_44_1.time_ = 0
		arg_44_1.frameCnt_ = 0
		arg_44_1.state_ = "playing"
		arg_44_1.curTalkId_ = 417012010
		arg_44_1.duration_ = 9.7

		local var_44_0 = {
			zh = 5.2,
			ja = 9.7
		}
		local var_44_1 = manager.audio:GetLocalizationFlag()

		if var_44_0[var_44_1] ~= nil then
			arg_44_1.duration_ = var_44_0[var_44_1]
		end

		SetActive(arg_44_1.tipsGo_, false)

		function arg_44_1.onSingleLineFinish_()
			arg_44_1.onSingleLineUpdate_ = nil
			arg_44_1.onSingleLineFinish_ = nil
			arg_44_1.state_ = "waiting"
		end

		function arg_44_1.playNext_(arg_46_0)
			if arg_46_0 == 1 then
				arg_44_0:Play417012011(arg_44_1)
			end
		end

		function arg_44_1.onSingleLineUpdate_(arg_47_0)
			local var_47_0 = arg_44_1.actors_["1034"]
			local var_47_1 = 0

			if var_47_1 < arg_44_1.time_ and arg_44_1.time_ <= var_47_1 + arg_47_0 and not isNil(var_47_0) and arg_44_1.var_.actorSpriteComps1034 == nil then
				arg_44_1.var_.actorSpriteComps1034 = var_47_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_47_2 = 0.2

			if var_47_1 <= arg_44_1.time_ and arg_44_1.time_ < var_47_1 + var_47_2 and not isNil(var_47_0) then
				local var_47_3 = (arg_44_1.time_ - var_47_1) / var_47_2

				if arg_44_1.var_.actorSpriteComps1034 then
					for iter_47_0, iter_47_1 in pairs(arg_44_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_47_1 then
							if arg_44_1.isInRecall_ then
								local var_47_4 = Mathf.Lerp(iter_47_1.color.r, arg_44_1.hightColor1.r, var_47_3)
								local var_47_5 = Mathf.Lerp(iter_47_1.color.g, arg_44_1.hightColor1.g, var_47_3)
								local var_47_6 = Mathf.Lerp(iter_47_1.color.b, arg_44_1.hightColor1.b, var_47_3)

								iter_47_1.color = Color.New(var_47_4, var_47_5, var_47_6)
							else
								local var_47_7 = Mathf.Lerp(iter_47_1.color.r, 1, var_47_3)

								iter_47_1.color = Color.New(var_47_7, var_47_7, var_47_7)
							end
						end
					end
				end
			end

			if arg_44_1.time_ >= var_47_1 + var_47_2 and arg_44_1.time_ < var_47_1 + var_47_2 + arg_47_0 and not isNil(var_47_0) and arg_44_1.var_.actorSpriteComps1034 then
				for iter_47_2, iter_47_3 in pairs(arg_44_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_47_3 then
						if arg_44_1.isInRecall_ then
							iter_47_3.color = arg_44_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_47_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_44_1.var_.actorSpriteComps1034 = nil
			end

			local var_47_8 = arg_44_1.actors_["1034"].transform
			local var_47_9 = 0

			if var_47_9 < arg_44_1.time_ and arg_44_1.time_ <= var_47_9 + arg_47_0 then
				arg_44_1.var_.moveOldPos1034 = var_47_8.localPosition
				var_47_8.localScale = Vector3.New(1, 1, 1)

				arg_44_1:CheckSpriteTmpPos("1034", 3)

				local var_47_10 = var_47_8.childCount

				for iter_47_4 = 0, var_47_10 - 1 do
					local var_47_11 = var_47_8:GetChild(iter_47_4)

					if var_47_11.name == "" or not string.find(var_47_11.name, "split") then
						var_47_11.gameObject:SetActive(true)
					else
						var_47_11.gameObject:SetActive(false)
					end
				end
			end

			local var_47_12 = 0.001

			if var_47_9 <= arg_44_1.time_ and arg_44_1.time_ < var_47_9 + var_47_12 then
				local var_47_13 = (arg_44_1.time_ - var_47_9) / var_47_12
				local var_47_14 = Vector3.New(0, -331.9, -324)

				var_47_8.localPosition = Vector3.Lerp(arg_44_1.var_.moveOldPos1034, var_47_14, var_47_13)
			end

			if arg_44_1.time_ >= var_47_9 + var_47_12 and arg_44_1.time_ < var_47_9 + var_47_12 + arg_47_0 then
				var_47_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_47_15 = 0
			local var_47_16 = 0.675

			if var_47_15 < arg_44_1.time_ and arg_44_1.time_ <= var_47_15 + arg_47_0 then
				arg_44_1.talkMaxDuration = 0
				arg_44_1.dialogCg_.alpha = 1

				arg_44_1.dialog_:SetActive(true)
				SetActive(arg_44_1.leftNameGo_, true)

				local var_47_17 = arg_44_1:FormatText(StoryNameCfg[1109].name)

				arg_44_1.leftNameTxt_.text = var_47_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_44_1.leftNameTxt_.transform)

				arg_44_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_44_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_44_1:RecordName(arg_44_1.leftNameTxt_.text)
				SetActive(arg_44_1.iconTrs_.gameObject, false)
				arg_44_1.callingController_:SetSelectedState("normal")

				local var_47_18 = arg_44_1:GetWordFromCfg(417012010)
				local var_47_19 = arg_44_1:FormatText(var_47_18.content)

				arg_44_1.text_.text = var_47_19

				LuaForUtil.ClearLinePrefixSymbol(arg_44_1.text_)

				local var_47_20 = 27
				local var_47_21 = utf8.len(var_47_19)
				local var_47_22 = var_47_20 <= 0 and var_47_16 or var_47_16 * (var_47_21 / var_47_20)

				if var_47_22 > 0 and var_47_16 < var_47_22 then
					arg_44_1.talkMaxDuration = var_47_22

					if var_47_22 + var_47_15 > arg_44_1.duration_ then
						arg_44_1.duration_ = var_47_22 + var_47_15
					end
				end

				arg_44_1.text_.text = var_47_19
				arg_44_1.typewritter.percent = 0

				arg_44_1.typewritter:SetDirty()
				arg_44_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012010", "story_v_out_417012.awb") ~= 0 then
					local var_47_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012010", "story_v_out_417012.awb") / 1000

					if var_47_23 + var_47_15 > arg_44_1.duration_ then
						arg_44_1.duration_ = var_47_23 + var_47_15
					end

					if var_47_18.prefab_name ~= "" and arg_44_1.actors_[var_47_18.prefab_name] ~= nil then
						local var_47_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_44_1.actors_[var_47_18.prefab_name].transform, "story_v_out_417012", "417012010", "story_v_out_417012.awb")

						arg_44_1:RecordAudio("417012010", var_47_24)
						arg_44_1:RecordAudio("417012010", var_47_24)
					else
						arg_44_1:AudioAction("play", "voice", "story_v_out_417012", "417012010", "story_v_out_417012.awb")
					end

					arg_44_1:RecordHistoryTalkVoice("story_v_out_417012", "417012010", "story_v_out_417012.awb")
				end

				arg_44_1:RecordContent(arg_44_1.text_.text)
			end

			local var_47_25 = math.max(var_47_16, arg_44_1.talkMaxDuration)

			if var_47_15 <= arg_44_1.time_ and arg_44_1.time_ < var_47_15 + var_47_25 then
				arg_44_1.typewritter.percent = (arg_44_1.time_ - var_47_15) / var_47_25

				arg_44_1.typewritter:SetDirty()
			end

			if arg_44_1.time_ >= var_47_15 + var_47_25 and arg_44_1.time_ < var_47_15 + var_47_25 + arg_47_0 then
				arg_44_1.typewritter.percent = 1

				arg_44_1.typewritter:SetDirty()
				arg_44_1:ShowNextGo(true)
			end
		end
	end,
	Play417012011 = function(arg_48_0, arg_48_1)
		arg_48_1.time_ = 0
		arg_48_1.frameCnt_ = 0
		arg_48_1.state_ = "playing"
		arg_48_1.curTalkId_ = 417012011
		arg_48_1.duration_ = 2.3

		local var_48_0 = {
			zh = 1.8,
			ja = 2.3
		}
		local var_48_1 = manager.audio:GetLocalizationFlag()

		if var_48_0[var_48_1] ~= nil then
			arg_48_1.duration_ = var_48_0[var_48_1]
		end

		SetActive(arg_48_1.tipsGo_, false)

		function arg_48_1.onSingleLineFinish_()
			arg_48_1.onSingleLineUpdate_ = nil
			arg_48_1.onSingleLineFinish_ = nil
			arg_48_1.state_ = "waiting"
		end

		function arg_48_1.playNext_(arg_50_0)
			if arg_50_0 == 1 then
				arg_48_0:Play417012012(arg_48_1)
			end
		end

		function arg_48_1.onSingleLineUpdate_(arg_51_0)
			local var_51_0 = arg_48_1.actors_["1034"]
			local var_51_1 = 0

			if var_51_1 < arg_48_1.time_ and arg_48_1.time_ <= var_51_1 + arg_51_0 and not isNil(var_51_0) and arg_48_1.var_.actorSpriteComps1034 == nil then
				arg_48_1.var_.actorSpriteComps1034 = var_51_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_51_2 = 0.2

			if var_51_1 <= arg_48_1.time_ and arg_48_1.time_ < var_51_1 + var_51_2 and not isNil(var_51_0) then
				local var_51_3 = (arg_48_1.time_ - var_51_1) / var_51_2

				if arg_48_1.var_.actorSpriteComps1034 then
					for iter_51_0, iter_51_1 in pairs(arg_48_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_51_1 then
							if arg_48_1.isInRecall_ then
								local var_51_4 = Mathf.Lerp(iter_51_1.color.r, arg_48_1.hightColor2.r, var_51_3)
								local var_51_5 = Mathf.Lerp(iter_51_1.color.g, arg_48_1.hightColor2.g, var_51_3)
								local var_51_6 = Mathf.Lerp(iter_51_1.color.b, arg_48_1.hightColor2.b, var_51_3)

								iter_51_1.color = Color.New(var_51_4, var_51_5, var_51_6)
							else
								local var_51_7 = Mathf.Lerp(iter_51_1.color.r, 0.5, var_51_3)

								iter_51_1.color = Color.New(var_51_7, var_51_7, var_51_7)
							end
						end
					end
				end
			end

			if arg_48_1.time_ >= var_51_1 + var_51_2 and arg_48_1.time_ < var_51_1 + var_51_2 + arg_51_0 and not isNil(var_51_0) and arg_48_1.var_.actorSpriteComps1034 then
				for iter_51_2, iter_51_3 in pairs(arg_48_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_51_3 then
						if arg_48_1.isInRecall_ then
							iter_51_3.color = arg_48_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_51_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_48_1.var_.actorSpriteComps1034 = nil
			end

			local var_51_8 = 0
			local var_51_9 = 0.2

			if var_51_8 < arg_48_1.time_ and arg_48_1.time_ <= var_51_8 + arg_51_0 then
				arg_48_1.talkMaxDuration = 0
				arg_48_1.dialogCg_.alpha = 1

				arg_48_1.dialog_:SetActive(true)
				SetActive(arg_48_1.leftNameGo_, true)

				local var_51_10 = arg_48_1:FormatText(StoryNameCfg[1110].name)

				arg_48_1.leftNameTxt_.text = var_51_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_48_1.leftNameTxt_.transform)

				arg_48_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_48_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_48_1:RecordName(arg_48_1.leftNameTxt_.text)
				SetActive(arg_48_1.iconTrs_.gameObject, true)
				arg_48_1.iconController_:SetSelectedState("hero")

				arg_48_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10090")

				arg_48_1.callingController_:SetSelectedState("normal")

				arg_48_1.keyicon_.color = Color.New(1, 1, 1)
				arg_48_1.icon_.color = Color.New(1, 1, 1)

				local var_51_11 = arg_48_1:GetWordFromCfg(417012011)
				local var_51_12 = arg_48_1:FormatText(var_51_11.content)

				arg_48_1.text_.text = var_51_12

				LuaForUtil.ClearLinePrefixSymbol(arg_48_1.text_)

				local var_51_13 = 8
				local var_51_14 = utf8.len(var_51_12)
				local var_51_15 = var_51_13 <= 0 and var_51_9 or var_51_9 * (var_51_14 / var_51_13)

				if var_51_15 > 0 and var_51_9 < var_51_15 then
					arg_48_1.talkMaxDuration = var_51_15

					if var_51_15 + var_51_8 > arg_48_1.duration_ then
						arg_48_1.duration_ = var_51_15 + var_51_8
					end
				end

				arg_48_1.text_.text = var_51_12
				arg_48_1.typewritter.percent = 0

				arg_48_1.typewritter:SetDirty()
				arg_48_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012011", "story_v_out_417012.awb") ~= 0 then
					local var_51_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012011", "story_v_out_417012.awb") / 1000

					if var_51_16 + var_51_8 > arg_48_1.duration_ then
						arg_48_1.duration_ = var_51_16 + var_51_8
					end

					if var_51_11.prefab_name ~= "" and arg_48_1.actors_[var_51_11.prefab_name] ~= nil then
						local var_51_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_48_1.actors_[var_51_11.prefab_name].transform, "story_v_out_417012", "417012011", "story_v_out_417012.awb")

						arg_48_1:RecordAudio("417012011", var_51_17)
						arg_48_1:RecordAudio("417012011", var_51_17)
					else
						arg_48_1:AudioAction("play", "voice", "story_v_out_417012", "417012011", "story_v_out_417012.awb")
					end

					arg_48_1:RecordHistoryTalkVoice("story_v_out_417012", "417012011", "story_v_out_417012.awb")
				end

				arg_48_1:RecordContent(arg_48_1.text_.text)
			end

			local var_51_18 = math.max(var_51_9, arg_48_1.talkMaxDuration)

			if var_51_8 <= arg_48_1.time_ and arg_48_1.time_ < var_51_8 + var_51_18 then
				arg_48_1.typewritter.percent = (arg_48_1.time_ - var_51_8) / var_51_18

				arg_48_1.typewritter:SetDirty()
			end

			if arg_48_1.time_ >= var_51_8 + var_51_18 and arg_48_1.time_ < var_51_8 + var_51_18 + arg_51_0 then
				arg_48_1.typewritter.percent = 1

				arg_48_1.typewritter:SetDirty()
				arg_48_1:ShowNextGo(true)
			end
		end
	end,
	Play417012012 = function(arg_52_0, arg_52_1)
		arg_52_1.time_ = 0
		arg_52_1.frameCnt_ = 0
		arg_52_1.state_ = "playing"
		arg_52_1.curTalkId_ = 417012012
		arg_52_1.duration_ = 3.73

		local var_52_0 = {
			zh = 2.833,
			ja = 3.733
		}
		local var_52_1 = manager.audio:GetLocalizationFlag()

		if var_52_0[var_52_1] ~= nil then
			arg_52_1.duration_ = var_52_0[var_52_1]
		end

		SetActive(arg_52_1.tipsGo_, false)

		function arg_52_1.onSingleLineFinish_()
			arg_52_1.onSingleLineUpdate_ = nil
			arg_52_1.onSingleLineFinish_ = nil
			arg_52_1.state_ = "waiting"
		end

		function arg_52_1.playNext_(arg_54_0)
			if arg_54_0 == 1 then
				arg_52_0:Play417012013(arg_52_1)
			end
		end

		function arg_52_1.onSingleLineUpdate_(arg_55_0)
			local var_55_0 = arg_52_1.actors_["1034"]
			local var_55_1 = 0

			if var_55_1 < arg_52_1.time_ and arg_52_1.time_ <= var_55_1 + arg_55_0 and not isNil(var_55_0) and arg_52_1.var_.actorSpriteComps1034 == nil then
				arg_52_1.var_.actorSpriteComps1034 = var_55_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_55_2 = 0.2

			if var_55_1 <= arg_52_1.time_ and arg_52_1.time_ < var_55_1 + var_55_2 and not isNil(var_55_0) then
				local var_55_3 = (arg_52_1.time_ - var_55_1) / var_55_2

				if arg_52_1.var_.actorSpriteComps1034 then
					for iter_55_0, iter_55_1 in pairs(arg_52_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_55_1 then
							if arg_52_1.isInRecall_ then
								local var_55_4 = Mathf.Lerp(iter_55_1.color.r, arg_52_1.hightColor1.r, var_55_3)
								local var_55_5 = Mathf.Lerp(iter_55_1.color.g, arg_52_1.hightColor1.g, var_55_3)
								local var_55_6 = Mathf.Lerp(iter_55_1.color.b, arg_52_1.hightColor1.b, var_55_3)

								iter_55_1.color = Color.New(var_55_4, var_55_5, var_55_6)
							else
								local var_55_7 = Mathf.Lerp(iter_55_1.color.r, 1, var_55_3)

								iter_55_1.color = Color.New(var_55_7, var_55_7, var_55_7)
							end
						end
					end
				end
			end

			if arg_52_1.time_ >= var_55_1 + var_55_2 and arg_52_1.time_ < var_55_1 + var_55_2 + arg_55_0 and not isNil(var_55_0) and arg_52_1.var_.actorSpriteComps1034 then
				for iter_55_2, iter_55_3 in pairs(arg_52_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_55_3 then
						if arg_52_1.isInRecall_ then
							iter_55_3.color = arg_52_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_55_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_52_1.var_.actorSpriteComps1034 = nil
			end

			local var_55_8 = 0
			local var_55_9 = 0.3

			if var_55_8 < arg_52_1.time_ and arg_52_1.time_ <= var_55_8 + arg_55_0 then
				arg_52_1.talkMaxDuration = 0
				arg_52_1.dialogCg_.alpha = 1

				arg_52_1.dialog_:SetActive(true)
				SetActive(arg_52_1.leftNameGo_, true)

				local var_55_10 = arg_52_1:FormatText(StoryNameCfg[1109].name)

				arg_52_1.leftNameTxt_.text = var_55_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_52_1.leftNameTxt_.transform)

				arg_52_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_52_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_52_1:RecordName(arg_52_1.leftNameTxt_.text)
				SetActive(arg_52_1.iconTrs_.gameObject, false)
				arg_52_1.callingController_:SetSelectedState("normal")

				local var_55_11 = arg_52_1:GetWordFromCfg(417012012)
				local var_55_12 = arg_52_1:FormatText(var_55_11.content)

				arg_52_1.text_.text = var_55_12

				LuaForUtil.ClearLinePrefixSymbol(arg_52_1.text_)

				local var_55_13 = 12
				local var_55_14 = utf8.len(var_55_12)
				local var_55_15 = var_55_13 <= 0 and var_55_9 or var_55_9 * (var_55_14 / var_55_13)

				if var_55_15 > 0 and var_55_9 < var_55_15 then
					arg_52_1.talkMaxDuration = var_55_15

					if var_55_15 + var_55_8 > arg_52_1.duration_ then
						arg_52_1.duration_ = var_55_15 + var_55_8
					end
				end

				arg_52_1.text_.text = var_55_12
				arg_52_1.typewritter.percent = 0

				arg_52_1.typewritter:SetDirty()
				arg_52_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012012", "story_v_out_417012.awb") ~= 0 then
					local var_55_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012012", "story_v_out_417012.awb") / 1000

					if var_55_16 + var_55_8 > arg_52_1.duration_ then
						arg_52_1.duration_ = var_55_16 + var_55_8
					end

					if var_55_11.prefab_name ~= "" and arg_52_1.actors_[var_55_11.prefab_name] ~= nil then
						local var_55_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_52_1.actors_[var_55_11.prefab_name].transform, "story_v_out_417012", "417012012", "story_v_out_417012.awb")

						arg_52_1:RecordAudio("417012012", var_55_17)
						arg_52_1:RecordAudio("417012012", var_55_17)
					else
						arg_52_1:AudioAction("play", "voice", "story_v_out_417012", "417012012", "story_v_out_417012.awb")
					end

					arg_52_1:RecordHistoryTalkVoice("story_v_out_417012", "417012012", "story_v_out_417012.awb")
				end

				arg_52_1:RecordContent(arg_52_1.text_.text)
			end

			local var_55_18 = math.max(var_55_9, arg_52_1.talkMaxDuration)

			if var_55_8 <= arg_52_1.time_ and arg_52_1.time_ < var_55_8 + var_55_18 then
				arg_52_1.typewritter.percent = (arg_52_1.time_ - var_55_8) / var_55_18

				arg_52_1.typewritter:SetDirty()
			end

			if arg_52_1.time_ >= var_55_8 + var_55_18 and arg_52_1.time_ < var_55_8 + var_55_18 + arg_55_0 then
				arg_52_1.typewritter.percent = 1

				arg_52_1.typewritter:SetDirty()
				arg_52_1:ShowNextGo(true)
			end
		end
	end,
	Play417012013 = function(arg_56_0, arg_56_1)
		arg_56_1.time_ = 0
		arg_56_1.frameCnt_ = 0
		arg_56_1.state_ = "playing"
		arg_56_1.curTalkId_ = 417012013
		arg_56_1.duration_ = 2.47

		SetActive(arg_56_1.tipsGo_, false)

		function arg_56_1.onSingleLineFinish_()
			arg_56_1.onSingleLineUpdate_ = nil
			arg_56_1.onSingleLineFinish_ = nil
			arg_56_1.state_ = "waiting"
		end

		function arg_56_1.playNext_(arg_58_0)
			if arg_58_0 == 1 then
				arg_56_0:Play417012014(arg_56_1)
			end
		end

		function arg_56_1.onSingleLineUpdate_(arg_59_0)
			local var_59_0 = "STblack"

			if arg_56_1.bgs_[var_59_0] == nil then
				local var_59_1 = Object.Instantiate(arg_56_1.paintGo_)

				var_59_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_59_0)
				var_59_1.name = var_59_0
				var_59_1.transform.parent = arg_56_1.stage_.transform
				var_59_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_56_1.bgs_[var_59_0] = var_59_1
			end

			local var_59_2 = 0.466666666666667

			if var_59_2 < arg_56_1.time_ and arg_56_1.time_ <= var_59_2 + arg_59_0 then
				local var_59_3 = manager.ui.mainCamera.transform.localPosition
				local var_59_4 = Vector3.New(0, 0, 10) + Vector3.New(var_59_3.x, var_59_3.y, 0)
				local var_59_5 = arg_56_1.bgs_.STblack

				var_59_5.transform.localPosition = var_59_4
				var_59_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_59_6 = var_59_5:GetComponent("SpriteRenderer")

				if var_59_6 and var_59_6.sprite then
					local var_59_7 = (var_59_5.transform.localPosition - var_59_3).z
					local var_59_8 = manager.ui.mainCameraCom_
					local var_59_9 = 2 * var_59_7 * Mathf.Tan(var_59_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_59_10 = var_59_9 * var_59_8.aspect
					local var_59_11 = var_59_6.sprite.bounds.size.x
					local var_59_12 = var_59_6.sprite.bounds.size.y
					local var_59_13 = var_59_10 / var_59_11
					local var_59_14 = var_59_9 / var_59_12
					local var_59_15 = var_59_14 < var_59_13 and var_59_13 or var_59_14

					var_59_5.transform.localScale = Vector3.New(var_59_15, var_59_15, 0)
				end

				for iter_59_0, iter_59_1 in pairs(arg_56_1.bgs_) do
					if iter_59_0 ~= "STblack" then
						iter_59_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_59_16 = 0

			if var_59_16 < arg_56_1.time_ and arg_56_1.time_ <= var_59_16 + arg_59_0 then
				arg_56_1.allBtn_.enabled = false
			end

			local var_59_17 = 0.3

			if arg_56_1.time_ >= var_59_16 + var_59_17 and arg_56_1.time_ < var_59_16 + var_59_17 + arg_59_0 then
				arg_56_1.allBtn_.enabled = true
			end

			local var_59_18 = 0

			if var_59_18 < arg_56_1.time_ and arg_56_1.time_ <= var_59_18 + arg_59_0 then
				arg_56_1.mask_.enabled = true
				arg_56_1.mask_.raycastTarget = true

				arg_56_1:SetGaussion(false)
			end

			local var_59_19 = 0.466666666666667

			if var_59_18 <= arg_56_1.time_ and arg_56_1.time_ < var_59_18 + var_59_19 then
				local var_59_20 = (arg_56_1.time_ - var_59_18) / var_59_19
				local var_59_21 = Color.New(0, 0, 0)

				var_59_21.a = Mathf.Lerp(0, 1, var_59_20)
				arg_56_1.mask_.color = var_59_21
			end

			if arg_56_1.time_ >= var_59_18 + var_59_19 and arg_56_1.time_ < var_59_18 + var_59_19 + arg_59_0 then
				local var_59_22 = Color.New(0, 0, 0)

				var_59_22.a = 1
				arg_56_1.mask_.color = var_59_22
			end

			local var_59_23 = 0.466666666666667

			if var_59_23 < arg_56_1.time_ and arg_56_1.time_ <= var_59_23 + arg_59_0 then
				arg_56_1.mask_.enabled = true
				arg_56_1.mask_.raycastTarget = true

				arg_56_1:SetGaussion(false)
			end

			local var_59_24 = 0.7

			if var_59_23 <= arg_56_1.time_ and arg_56_1.time_ < var_59_23 + var_59_24 then
				local var_59_25 = (arg_56_1.time_ - var_59_23) / var_59_24
				local var_59_26 = Color.New(0, 0, 0)

				var_59_26.a = Mathf.Lerp(1, 0, var_59_25)
				arg_56_1.mask_.color = var_59_26
			end

			if arg_56_1.time_ >= var_59_23 + var_59_24 and arg_56_1.time_ < var_59_23 + var_59_24 + arg_59_0 then
				local var_59_27 = Color.New(0, 0, 0)
				local var_59_28 = 0

				arg_56_1.mask_.enabled = false
				var_59_27.a = var_59_28
				arg_56_1.mask_.color = var_59_27
			end

			local var_59_29 = arg_56_1.actors_["1034"].transform
			local var_59_30 = 0

			if var_59_30 < arg_56_1.time_ and arg_56_1.time_ <= var_59_30 + arg_59_0 then
				arg_56_1.var_.moveOldPos1034 = var_59_29.localPosition
				var_59_29.localScale = Vector3.New(1, 1, 1)

				arg_56_1:CheckSpriteTmpPos("1034", 7)

				local var_59_31 = var_59_29.childCount

				for iter_59_2 = 0, var_59_31 - 1 do
					local var_59_32 = var_59_29:GetChild(iter_59_2)

					if var_59_32.name == "" or not string.find(var_59_32.name, "split") then
						var_59_32.gameObject:SetActive(true)
					else
						var_59_32.gameObject:SetActive(false)
					end
				end
			end

			local var_59_33 = 0.001

			if var_59_30 <= arg_56_1.time_ and arg_56_1.time_ < var_59_30 + var_59_33 then
				local var_59_34 = (arg_56_1.time_ - var_59_30) / var_59_33
				local var_59_35 = Vector3.New(0, -2000, 0)

				var_59_29.localPosition = Vector3.Lerp(arg_56_1.var_.moveOldPos1034, var_59_35, var_59_34)
			end

			if arg_56_1.time_ >= var_59_30 + var_59_33 and arg_56_1.time_ < var_59_30 + var_59_33 + arg_59_0 then
				var_59_29.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_59_36 = manager.ui.mainCamera.transform
			local var_59_37 = 0

			if var_59_37 < arg_56_1.time_ and arg_56_1.time_ <= var_59_37 + arg_59_0 then
				local var_59_38 = arg_56_1.var_.effect777

				if not var_59_38 then
					var_59_38 = Object.Instantiate(Asset.Load("Effect/Scene/fx_uistory_error"))
					var_59_38.name = "777"
					arg_56_1.var_.effect777 = var_59_38
				end

				local var_59_39 = var_59_36:Find("")

				if var_59_39 then
					var_59_38.transform.parent = var_59_39
				else
					var_59_38.transform.parent = var_59_36
				end

				var_59_38.transform.localPosition = Vector3.New(0, 0, 0)
				var_59_38.transform.localRotation = Quaternion.Euler(0, 0, 0)

				local var_59_40 = manager.ui.mainCameraCom_
				local var_59_41 = Mathf.Tan(12.5 * Mathf.Deg2Rad) / Mathf.Tan(var_59_40.fieldOfView * 0.5 * Mathf.Deg2Rad)
				local var_59_42 = var_59_38.transform:GetComponentsInChildren(typeof(Transform), true):ToTable()
				local var_59_43 = 15
				local var_59_44 = 2 * var_59_43 * Mathf.Tan(var_59_40.fieldOfView * 0.5 * Mathf.Deg2Rad) * var_59_40.aspect
				local var_59_45 = 1
				local var_59_46 = 1.7777777777777777

				if var_59_46 < var_59_40.aspect then
					var_59_45 = var_59_44 / (2 * var_59_43 * Mathf.Tan(15 * Mathf.Deg2Rad) * var_59_46)
				end

				for iter_59_3, iter_59_4 in ipairs(var_59_42) do
					local var_59_47 = iter_59_4.transform.localScale

					iter_59_4.transform.localScale = Vector3.New(var_59_47.x / var_59_41 * var_59_45, var_59_47.y / var_59_41, var_59_47.z)
				end
			end

			local var_59_48 = manager.ui.mainCamera.transform
			local var_59_49 = 0.683333333333333

			if var_59_49 < arg_56_1.time_ and arg_56_1.time_ <= var_59_49 + arg_59_0 then
				local var_59_50 = arg_56_1.var_.effect777

				if var_59_50 then
					Object.Destroy(var_59_50)

					arg_56_1.var_.effect777 = nil
				end
			end

			local var_59_51 = 0
			local var_59_52 = 1

			if var_59_51 < arg_56_1.time_ and arg_56_1.time_ <= var_59_51 + arg_59_0 then
				local var_59_53 = "play"
				local var_59_54 = "effect"

				arg_56_1:AudioAction(var_59_53, var_59_54, "se_story_1310", "se_story_1310_flashgun", "")
			end

			local var_59_55 = 0
			local var_59_56 = 1

			if var_59_55 < arg_56_1.time_ and arg_56_1.time_ <= var_59_55 + arg_59_0 then
				local var_59_57 = "play"
				local var_59_58 = "effect"

				arg_56_1:AudioAction(var_59_57, var_59_58, "se_story_122_01", "se_story_122_01_dizzy_loop", "")
			end

			local var_59_59 = 0
			local var_59_60 = 0.2

			if var_59_59 < arg_56_1.time_ and arg_56_1.time_ <= var_59_59 + arg_59_0 then
				local var_59_61 = "play"
				local var_59_62 = "music"

				arg_56_1:AudioAction(var_59_61, var_59_62, "ui_battle", "ui_battle_stopbgm", "")

				local var_59_63 = ""
				local var_59_64 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_59_64 ~= "" then
					if arg_56_1.bgmTxt_.text ~= var_59_64 and arg_56_1.bgmTxt_.text ~= "" then
						if arg_56_1.bgmTxt2_.text ~= "" then
							arg_56_1.bgmTxt_.text = arg_56_1.bgmTxt2_.text
						end

						arg_56_1.bgmTxt2_.text = var_59_64

						arg_56_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_56_1.bgmTxt_.text = var_59_64
					end

					if arg_56_1.bgmTimer then
						arg_56_1.bgmTimer:Stop()

						arg_56_1.bgmTimer = nil
					end

					if arg_56_1.settingData.show_music_name == 1 then
						arg_56_1.musicController:SetSelectedState("show")
						arg_56_1.musicAnimator_:Play("open", 0, 0)

						if arg_56_1.settingData.music_time ~= 0 then
							arg_56_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_56_1.settingData.music_time), function()
								if arg_56_1 == nil or isNil(arg_56_1.bgmTxt_) then
									return
								end

								arg_56_1.musicController:SetSelectedState("hide")
								arg_56_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			if arg_56_1.frameCnt_ <= 1 then
				arg_56_1.dialog_:SetActive(false)
			end

			local var_59_65 = 1.16666666666667
			local var_59_66 = 0.05

			if var_59_65 < arg_56_1.time_ and arg_56_1.time_ <= var_59_65 + arg_59_0 then
				arg_56_1.talkMaxDuration = 0

				arg_56_1.dialog_:SetActive(true)

				local var_59_67 = LeanTween.value(arg_56_1.dialog_, 0, 1, 0.3)

				var_59_67:setOnUpdate(LuaHelper.FloatAction(function(arg_61_0)
					arg_56_1.dialogCg_.alpha = arg_61_0
				end))
				var_59_67:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_56_1.dialog_)
					var_59_67:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_56_1.duration_ = arg_56_1.duration_ + 0.3

				SetActive(arg_56_1.leftNameGo_, true)

				local var_59_68 = arg_56_1:FormatText(StoryNameCfg[1109].name)

				arg_56_1.leftNameTxt_.text = var_59_68

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_56_1.leftNameTxt_.transform)

				arg_56_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_56_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_56_1:RecordName(arg_56_1.leftNameTxt_.text)
				SetActive(arg_56_1.iconTrs_.gameObject, true)
				arg_56_1.iconController_:SetSelectedState("hero")

				arg_56_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1034_split_6")

				arg_56_1.callingController_:SetSelectedState("normal")

				arg_56_1.keyicon_.color = Color.New(1, 1, 1)
				arg_56_1.icon_.color = Color.New(1, 1, 1)

				local var_59_69 = arg_56_1:GetWordFromCfg(417012013)
				local var_59_70 = arg_56_1:FormatText(var_59_69.content)

				arg_56_1.text_.text = var_59_70

				LuaForUtil.ClearLinePrefixSymbol(arg_56_1.text_)

				local var_59_71 = 2
				local var_59_72 = utf8.len(var_59_70)
				local var_59_73 = var_59_71 <= 0 and var_59_66 or var_59_66 * (var_59_72 / var_59_71)

				if var_59_73 > 0 and var_59_66 < var_59_73 then
					arg_56_1.talkMaxDuration = var_59_73
					var_59_65 = var_59_65 + 0.3

					if var_59_73 + var_59_65 > arg_56_1.duration_ then
						arg_56_1.duration_ = var_59_73 + var_59_65
					end
				end

				arg_56_1.text_.text = var_59_70
				arg_56_1.typewritter.percent = 0

				arg_56_1.typewritter:SetDirty()
				arg_56_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012013", "story_v_out_417012.awb") ~= 0 then
					local var_59_74 = manager.audio:GetVoiceLength("story_v_out_417012", "417012013", "story_v_out_417012.awb") / 1000

					if var_59_74 + var_59_65 > arg_56_1.duration_ then
						arg_56_1.duration_ = var_59_74 + var_59_65
					end

					if var_59_69.prefab_name ~= "" and arg_56_1.actors_[var_59_69.prefab_name] ~= nil then
						local var_59_75 = LuaForUtil.PlayVoiceWithCriLipsync(arg_56_1.actors_[var_59_69.prefab_name].transform, "story_v_out_417012", "417012013", "story_v_out_417012.awb")

						arg_56_1:RecordAudio("417012013", var_59_75)
						arg_56_1:RecordAudio("417012013", var_59_75)
					else
						arg_56_1:AudioAction("play", "voice", "story_v_out_417012", "417012013", "story_v_out_417012.awb")
					end

					arg_56_1:RecordHistoryTalkVoice("story_v_out_417012", "417012013", "story_v_out_417012.awb")
				end

				arg_56_1:RecordContent(arg_56_1.text_.text)
			end

			local var_59_76 = var_59_65 + 0.3
			local var_59_77 = math.max(var_59_66, arg_56_1.talkMaxDuration)

			if var_59_76 <= arg_56_1.time_ and arg_56_1.time_ < var_59_76 + var_59_77 then
				arg_56_1.typewritter.percent = (arg_56_1.time_ - var_59_76) / var_59_77

				arg_56_1.typewritter:SetDirty()
			end

			if arg_56_1.time_ >= var_59_76 + var_59_77 and arg_56_1.time_ < var_59_76 + var_59_77 + arg_59_0 then
				arg_56_1.typewritter.percent = 1

				arg_56_1.typewritter:SetDirty()
				arg_56_1:ShowNextGo(true)
			end
		end
	end,
	Play417012014 = function(arg_63_0, arg_63_1)
		arg_63_1.time_ = 0
		arg_63_1.frameCnt_ = 0
		arg_63_1.state_ = "playing"
		arg_63_1.curTalkId_ = 417012014
		arg_63_1.duration_ = 7.9

		local var_63_0 = {
			zh = 7.733,
			ja = 7.9
		}
		local var_63_1 = manager.audio:GetLocalizationFlag()

		if var_63_0[var_63_1] ~= nil then
			arg_63_1.duration_ = var_63_0[var_63_1]
		end

		SetActive(arg_63_1.tipsGo_, false)

		function arg_63_1.onSingleLineFinish_()
			arg_63_1.onSingleLineUpdate_ = nil
			arg_63_1.onSingleLineFinish_ = nil
			arg_63_1.state_ = "waiting"
		end

		function arg_63_1.playNext_(arg_65_0)
			if arg_65_0 == 1 then
				arg_63_0:Play417012015(arg_63_1)
			end
		end

		function arg_63_1.onSingleLineUpdate_(arg_66_0)
			local var_66_0 = "ST77b"

			if arg_63_1.bgs_[var_66_0] == nil then
				local var_66_1 = Object.Instantiate(arg_63_1.paintGo_)

				var_66_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_66_0)
				var_66_1.name = var_66_0
				var_66_1.transform.parent = arg_63_1.stage_.transform
				var_66_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_63_1.bgs_[var_66_0] = var_66_1
			end

			local var_66_2 = 1

			if var_66_2 < arg_63_1.time_ and arg_63_1.time_ <= var_66_2 + arg_66_0 then
				local var_66_3 = manager.ui.mainCamera.transform.localPosition
				local var_66_4 = Vector3.New(0, 0, 10) + Vector3.New(var_66_3.x, var_66_3.y, 0)
				local var_66_5 = arg_63_1.bgs_.ST77b

				var_66_5.transform.localPosition = var_66_4
				var_66_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_66_6 = var_66_5:GetComponent("SpriteRenderer")

				if var_66_6 and var_66_6.sprite then
					local var_66_7 = (var_66_5.transform.localPosition - var_66_3).z
					local var_66_8 = manager.ui.mainCameraCom_
					local var_66_9 = 2 * var_66_7 * Mathf.Tan(var_66_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_66_10 = var_66_9 * var_66_8.aspect
					local var_66_11 = var_66_6.sprite.bounds.size.x
					local var_66_12 = var_66_6.sprite.bounds.size.y
					local var_66_13 = var_66_10 / var_66_11
					local var_66_14 = var_66_9 / var_66_12
					local var_66_15 = var_66_14 < var_66_13 and var_66_13 or var_66_14

					var_66_5.transform.localScale = Vector3.New(var_66_15, var_66_15, 0)
				end

				for iter_66_0, iter_66_1 in pairs(arg_63_1.bgs_) do
					if iter_66_0 ~= "ST77b" then
						iter_66_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_66_16 = 0

			if var_66_16 < arg_63_1.time_ and arg_63_1.time_ <= var_66_16 + arg_66_0 then
				arg_63_1.mask_.enabled = true
				arg_63_1.mask_.raycastTarget = true

				arg_63_1:SetGaussion(false)
			end

			local var_66_17 = 1

			if var_66_16 <= arg_63_1.time_ and arg_63_1.time_ < var_66_16 + var_66_17 then
				local var_66_18 = (arg_63_1.time_ - var_66_16) / var_66_17
				local var_66_19 = Color.New(0, 0, 0)

				var_66_19.a = Mathf.Lerp(0, 1, var_66_18)
				arg_63_1.mask_.color = var_66_19
			end

			if arg_63_1.time_ >= var_66_16 + var_66_17 and arg_63_1.time_ < var_66_16 + var_66_17 + arg_66_0 then
				local var_66_20 = Color.New(0, 0, 0)

				var_66_20.a = 1
				arg_63_1.mask_.color = var_66_20
			end

			local var_66_21 = 1

			if var_66_21 < arg_63_1.time_ and arg_63_1.time_ <= var_66_21 + arg_66_0 then
				arg_63_1.mask_.enabled = true
				arg_63_1.mask_.raycastTarget = true

				arg_63_1:SetGaussion(false)
			end

			local var_66_22 = 0.9

			if var_66_21 <= arg_63_1.time_ and arg_63_1.time_ < var_66_21 + var_66_22 then
				local var_66_23 = (arg_63_1.time_ - var_66_21) / var_66_22
				local var_66_24 = Color.New(0, 0, 0)

				var_66_24.a = Mathf.Lerp(1, 0, var_66_23)
				arg_63_1.mask_.color = var_66_24
			end

			if arg_63_1.time_ >= var_66_21 + var_66_22 and arg_63_1.time_ < var_66_21 + var_66_22 + arg_66_0 then
				local var_66_25 = Color.New(0, 0, 0)
				local var_66_26 = 0

				arg_63_1.mask_.enabled = false
				var_66_25.a = var_66_26
				arg_63_1.mask_.color = var_66_25
			end

			local var_66_27 = 0
			local var_66_28 = 0.2

			if var_66_27 < arg_63_1.time_ and arg_63_1.time_ <= var_66_27 + arg_66_0 then
				local var_66_29 = "play"
				local var_66_30 = "music"

				arg_63_1:AudioAction(var_66_29, var_66_30, "ui_battle", "ui_battle_stopbgm", "")

				local var_66_31 = ""
				local var_66_32 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_66_32 ~= "" then
					if arg_63_1.bgmTxt_.text ~= var_66_32 and arg_63_1.bgmTxt_.text ~= "" then
						if arg_63_1.bgmTxt2_.text ~= "" then
							arg_63_1.bgmTxt_.text = arg_63_1.bgmTxt2_.text
						end

						arg_63_1.bgmTxt2_.text = var_66_32

						arg_63_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_63_1.bgmTxt_.text = var_66_32
					end

					if arg_63_1.bgmTimer then
						arg_63_1.bgmTimer:Stop()

						arg_63_1.bgmTimer = nil
					end

					if arg_63_1.settingData.show_music_name == 1 then
						arg_63_1.musicController:SetSelectedState("show")
						arg_63_1.musicAnimator_:Play("open", 0, 0)

						if arg_63_1.settingData.music_time ~= 0 then
							arg_63_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_63_1.settingData.music_time), function()
								if arg_63_1 == nil or isNil(arg_63_1.bgmTxt_) then
									return
								end

								arg_63_1.musicController:SetSelectedState("hide")
								arg_63_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_66_33 = 1
			local var_66_34 = 1

			if var_66_33 < arg_63_1.time_ and arg_63_1.time_ <= var_66_33 + arg_66_0 then
				local var_66_35 = "play"
				local var_66_36 = "music"

				arg_63_1:AudioAction(var_66_35, var_66_36, "bgm_activity_3_10_story_daily_acoustic", "bgm_activity_3_10_story_daily_acoustic", "bgm_activity_3_10_story_daily_acoustic.awb")

				local var_66_37 = ""
				local var_66_38 = manager.audio:GetAudioName("bgm_activity_3_10_story_daily_acoustic", "bgm_activity_3_10_story_daily_acoustic")

				if var_66_38 ~= "" then
					if arg_63_1.bgmTxt_.text ~= var_66_38 and arg_63_1.bgmTxt_.text ~= "" then
						if arg_63_1.bgmTxt2_.text ~= "" then
							arg_63_1.bgmTxt_.text = arg_63_1.bgmTxt2_.text
						end

						arg_63_1.bgmTxt2_.text = var_66_38

						arg_63_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_63_1.bgmTxt_.text = var_66_38
					end

					if arg_63_1.bgmTimer then
						arg_63_1.bgmTimer:Stop()

						arg_63_1.bgmTimer = nil
					end

					if arg_63_1.settingData.show_music_name == 1 then
						arg_63_1.musicController:SetSelectedState("show")
						arg_63_1.musicAnimator_:Play("open", 0, 0)

						if arg_63_1.settingData.music_time ~= 0 then
							arg_63_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_63_1.settingData.music_time), function()
								if arg_63_1 == nil or isNil(arg_63_1.bgmTxt_) then
									return
								end

								arg_63_1.musicController:SetSelectedState("hide")
								arg_63_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_66_39 = 0
			local var_66_40 = 1

			if var_66_39 < arg_63_1.time_ and arg_63_1.time_ <= var_66_39 + arg_66_0 then
				local var_66_41 = "stop"
				local var_66_42 = "effect"

				arg_63_1:AudioAction(var_66_41, var_66_42, "se_story_122_01", "se_story_122_01_dizzy_loop", "")
			end

			local var_66_43 = 1
			local var_66_44 = 3
			local var_66_45 = "ST77b"

			if var_66_43 < arg_63_1.time_ and arg_63_1.time_ <= var_66_43 + arg_66_0 then
				arg_63_1.timestampController_:SetSelectedState("show")
				arg_63_1.timestampAni_:Play("in")

				arg_63_1.timeTicketbgImg_.sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_66_45)

				arg_63_1.timestampColorController_:SetSelectedState("cold")

				local var_66_46 = arg_63_1:GetWordFromCfg(501005)
				local var_66_47 = arg_63_1:FormatText(var_66_46.content)

				arg_63_1.text_timeText_.text = var_66_47

				LuaForUtil.ClearLinePrefixSymbol(arg_63_1.text_timeText_)

				local var_66_48 = arg_63_1:GetWordFromCfg(501006)
				local var_66_49 = arg_63_1:FormatText(var_66_48.content)

				arg_63_1.text_siteText_.text = var_66_49

				LuaForUtil.ClearLinePrefixSymbol(arg_63_1.text_siteText_)
			end

			if arg_63_1.time_ >= var_66_43 + var_66_44 and arg_63_1.time_ < var_66_43 + var_66_44 + arg_66_0 then
				AnimatorTools.PlayAnimationWithCallback(arg_63_1.timestampAni_, "out", function()
					arg_63_1.timestampController_:SetSelectedState("hide")
				end)
			end

			local var_66_50 = 4

			if var_66_50 < arg_63_1.time_ and arg_63_1.time_ <= var_66_50 + arg_66_0 then
				arg_63_1.mask_.enabled = true
				arg_63_1.mask_.raycastTarget = true

				arg_63_1:SetGaussion(false)
			end

			local var_66_51 = 1.2

			if var_66_50 <= arg_63_1.time_ and arg_63_1.time_ < var_66_50 + var_66_51 then
				local var_66_52 = (arg_63_1.time_ - var_66_50) / var_66_51
				local var_66_53 = Color.New(0, 0, 0)

				var_66_53.a = Mathf.Lerp(0, 1, var_66_52)
				arg_63_1.mask_.color = var_66_53
			end

			if arg_63_1.time_ >= var_66_50 + var_66_51 and arg_63_1.time_ < var_66_50 + var_66_51 + arg_66_0 then
				local var_66_54 = Color.New(0, 0, 0)

				var_66_54.a = 1
				arg_63_1.mask_.color = var_66_54
			end

			local var_66_55 = 5.2

			if var_66_55 < arg_63_1.time_ and arg_63_1.time_ <= var_66_55 + arg_66_0 then
				arg_63_1.mask_.enabled = true
				arg_63_1.mask_.raycastTarget = true

				arg_63_1:SetGaussion(false)
			end

			local var_66_56 = 1.4

			if var_66_55 <= arg_63_1.time_ and arg_63_1.time_ < var_66_55 + var_66_56 then
				local var_66_57 = (arg_63_1.time_ - var_66_55) / var_66_56
				local var_66_58 = Color.New(0, 0, 0)

				var_66_58.a = Mathf.Lerp(1, 0, var_66_57)
				arg_63_1.mask_.color = var_66_58
			end

			if arg_63_1.time_ >= var_66_55 + var_66_56 and arg_63_1.time_ < var_66_55 + var_66_56 + arg_66_0 then
				local var_66_59 = Color.New(0, 0, 0)
				local var_66_60 = 0

				arg_63_1.mask_.enabled = false
				var_66_59.a = var_66_60
				arg_63_1.mask_.color = var_66_59
			end

			local var_66_61 = 1

			if var_66_61 < arg_63_1.time_ and arg_63_1.time_ <= var_66_61 + arg_66_0 then
				arg_63_1.allBtn_.enabled = false
			end

			local var_66_62 = 3

			if arg_63_1.time_ >= var_66_61 + var_66_62 and arg_63_1.time_ < var_66_61 + var_66_62 + arg_66_0 then
				arg_63_1.allBtn_.enabled = true
			end

			if arg_63_1.frameCnt_ <= 1 then
				arg_63_1.dialog_:SetActive(false)
			end

			local var_66_63 = 6.6
			local var_66_64 = 0.075

			if var_66_63 < arg_63_1.time_ and arg_63_1.time_ <= var_66_63 + arg_66_0 then
				arg_63_1.talkMaxDuration = 0

				arg_63_1.dialog_:SetActive(true)

				local var_66_65 = LeanTween.value(arg_63_1.dialog_, 0, 1, 0.3)

				var_66_65:setOnUpdate(LuaHelper.FloatAction(function(arg_70_0)
					arg_63_1.dialogCg_.alpha = arg_70_0
				end))
				var_66_65:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_63_1.dialog_)
					var_66_65:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_63_1.duration_ = arg_63_1.duration_ + 0.3

				SetActive(arg_63_1.leftNameGo_, true)

				local var_66_66 = arg_63_1:FormatText(StoryNameCfg[479].name)

				arg_63_1.leftNameTxt_.text = var_66_66

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_63_1.leftNameTxt_.transform)

				arg_63_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_63_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_63_1:RecordName(arg_63_1.leftNameTxt_.text)
				SetActive(arg_63_1.iconTrs_.gameObject, true)
				arg_63_1.iconController_:SetSelectedState("hero")

				arg_63_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1015_split_1")

				arg_63_1.callingController_:SetSelectedState("normal")

				arg_63_1.keyicon_.color = Color.New(1, 1, 1)
				arg_63_1.icon_.color = Color.New(1, 1, 1)

				local var_66_67 = arg_63_1:GetWordFromCfg(417012014)
				local var_66_68 = arg_63_1:FormatText(var_66_67.content)

				arg_63_1.text_.text = var_66_68

				LuaForUtil.ClearLinePrefixSymbol(arg_63_1.text_)

				local var_66_69 = 3
				local var_66_70 = utf8.len(var_66_68)
				local var_66_71 = var_66_69 <= 0 and var_66_64 or var_66_64 * (var_66_70 / var_66_69)

				if var_66_71 > 0 and var_66_64 < var_66_71 then
					arg_63_1.talkMaxDuration = var_66_71
					var_66_63 = var_66_63 + 0.3

					if var_66_71 + var_66_63 > arg_63_1.duration_ then
						arg_63_1.duration_ = var_66_71 + var_66_63
					end
				end

				arg_63_1.text_.text = var_66_68
				arg_63_1.typewritter.percent = 0

				arg_63_1.typewritter:SetDirty()
				arg_63_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012014", "story_v_out_417012.awb") ~= 0 then
					local var_66_72 = manager.audio:GetVoiceLength("story_v_out_417012", "417012014", "story_v_out_417012.awb") / 1000

					if var_66_72 + var_66_63 > arg_63_1.duration_ then
						arg_63_1.duration_ = var_66_72 + var_66_63
					end

					if var_66_67.prefab_name ~= "" and arg_63_1.actors_[var_66_67.prefab_name] ~= nil then
						local var_66_73 = LuaForUtil.PlayVoiceWithCriLipsync(arg_63_1.actors_[var_66_67.prefab_name].transform, "story_v_out_417012", "417012014", "story_v_out_417012.awb")

						arg_63_1:RecordAudio("417012014", var_66_73)
						arg_63_1:RecordAudio("417012014", var_66_73)
					else
						arg_63_1:AudioAction("play", "voice", "story_v_out_417012", "417012014", "story_v_out_417012.awb")
					end

					arg_63_1:RecordHistoryTalkVoice("story_v_out_417012", "417012014", "story_v_out_417012.awb")
				end

				arg_63_1:RecordContent(arg_63_1.text_.text)
			end

			local var_66_74 = var_66_63 + 0.3
			local var_66_75 = math.max(var_66_64, arg_63_1.talkMaxDuration)

			if var_66_74 <= arg_63_1.time_ and arg_63_1.time_ < var_66_74 + var_66_75 then
				arg_63_1.typewritter.percent = (arg_63_1.time_ - var_66_74) / var_66_75

				arg_63_1.typewritter:SetDirty()
			end

			if arg_63_1.time_ >= var_66_74 + var_66_75 and arg_63_1.time_ < var_66_74 + var_66_75 + arg_66_0 then
				arg_63_1.typewritter.percent = 1

				arg_63_1.typewritter:SetDirty()
				arg_63_1:ShowNextGo(true)
			end
		end
	end,
	Play417012015 = function(arg_72_0, arg_72_1)
		arg_72_1.time_ = 0
		arg_72_1.frameCnt_ = 0
		arg_72_1.state_ = "playing"
		arg_72_1.curTalkId_ = 417012015
		arg_72_1.duration_ = 5

		SetActive(arg_72_1.tipsGo_, false)

		function arg_72_1.onSingleLineFinish_()
			arg_72_1.onSingleLineUpdate_ = nil
			arg_72_1.onSingleLineFinish_ = nil
			arg_72_1.state_ = "waiting"
		end

		function arg_72_1.playNext_(arg_74_0)
			if arg_74_0 == 1 then
				arg_72_0:Play417012016(arg_72_1)
			end
		end

		function arg_72_1.onSingleLineUpdate_(arg_75_0)
			local var_75_0 = 0
			local var_75_1 = 1.4

			if var_75_0 < arg_72_1.time_ and arg_72_1.time_ <= var_75_0 + arg_75_0 then
				arg_72_1.talkMaxDuration = 0
				arg_72_1.dialogCg_.alpha = 1

				arg_72_1.dialog_:SetActive(true)
				SetActive(arg_72_1.leftNameGo_, false)

				arg_72_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_72_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_72_1:RecordName(arg_72_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_72_1.iconTrs_.gameObject, false)
				arg_72_1.callingController_:SetSelectedState("normal")

				local var_75_2 = arg_72_1:GetWordFromCfg(417012015)
				local var_75_3 = arg_72_1:FormatText(var_75_2.content)

				arg_72_1.text_.text = var_75_3

				LuaForUtil.ClearLinePrefixSymbol(arg_72_1.text_)

				local var_75_4 = 56
				local var_75_5 = utf8.len(var_75_3)
				local var_75_6 = var_75_4 <= 0 and var_75_1 or var_75_1 * (var_75_5 / var_75_4)

				if var_75_6 > 0 and var_75_1 < var_75_6 then
					arg_72_1.talkMaxDuration = var_75_6

					if var_75_6 + var_75_0 > arg_72_1.duration_ then
						arg_72_1.duration_ = var_75_6 + var_75_0
					end
				end

				arg_72_1.text_.text = var_75_3
				arg_72_1.typewritter.percent = 0

				arg_72_1.typewritter:SetDirty()
				arg_72_1:ShowNextGo(false)
				arg_72_1:RecordContent(arg_72_1.text_.text)
			end

			local var_75_7 = math.max(var_75_1, arg_72_1.talkMaxDuration)

			if var_75_0 <= arg_72_1.time_ and arg_72_1.time_ < var_75_0 + var_75_7 then
				arg_72_1.typewritter.percent = (arg_72_1.time_ - var_75_0) / var_75_7

				arg_72_1.typewritter:SetDirty()
			end

			if arg_72_1.time_ >= var_75_0 + var_75_7 and arg_72_1.time_ < var_75_0 + var_75_7 + arg_75_0 then
				arg_72_1.typewritter.percent = 1

				arg_72_1.typewritter:SetDirty()
				arg_72_1:ShowNextGo(true)
			end
		end
	end,
	Play417012016 = function(arg_76_0, arg_76_1)
		arg_76_1.time_ = 0
		arg_76_1.frameCnt_ = 0
		arg_76_1.state_ = "playing"
		arg_76_1.curTalkId_ = 417012016
		arg_76_1.duration_ = 4.7

		local var_76_0 = {
			zh = 3,
			ja = 4.7
		}
		local var_76_1 = manager.audio:GetLocalizationFlag()

		if var_76_0[var_76_1] ~= nil then
			arg_76_1.duration_ = var_76_0[var_76_1]
		end

		SetActive(arg_76_1.tipsGo_, false)

		function arg_76_1.onSingleLineFinish_()
			arg_76_1.onSingleLineUpdate_ = nil
			arg_76_1.onSingleLineFinish_ = nil
			arg_76_1.state_ = "waiting"
		end

		function arg_76_1.playNext_(arg_78_0)
			if arg_78_0 == 1 then
				arg_76_0:Play417012017(arg_76_1)
			end
		end

		function arg_76_1.onSingleLineUpdate_(arg_79_0)
			local var_79_0 = arg_76_1.actors_["1034"]
			local var_79_1 = 0

			if var_79_1 < arg_76_1.time_ and arg_76_1.time_ <= var_79_1 + arg_79_0 and not isNil(var_79_0) and arg_76_1.var_.actorSpriteComps1034 == nil then
				arg_76_1.var_.actorSpriteComps1034 = var_79_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_79_2 = 0.2

			if var_79_1 <= arg_76_1.time_ and arg_76_1.time_ < var_79_1 + var_79_2 and not isNil(var_79_0) then
				local var_79_3 = (arg_76_1.time_ - var_79_1) / var_79_2

				if arg_76_1.var_.actorSpriteComps1034 then
					for iter_79_0, iter_79_1 in pairs(arg_76_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_79_1 then
							if arg_76_1.isInRecall_ then
								local var_79_4 = Mathf.Lerp(iter_79_1.color.r, arg_76_1.hightColor1.r, var_79_3)
								local var_79_5 = Mathf.Lerp(iter_79_1.color.g, arg_76_1.hightColor1.g, var_79_3)
								local var_79_6 = Mathf.Lerp(iter_79_1.color.b, arg_76_1.hightColor1.b, var_79_3)

								iter_79_1.color = Color.New(var_79_4, var_79_5, var_79_6)
							else
								local var_79_7 = Mathf.Lerp(iter_79_1.color.r, 1, var_79_3)

								iter_79_1.color = Color.New(var_79_7, var_79_7, var_79_7)
							end
						end
					end
				end
			end

			if arg_76_1.time_ >= var_79_1 + var_79_2 and arg_76_1.time_ < var_79_1 + var_79_2 + arg_79_0 and not isNil(var_79_0) and arg_76_1.var_.actorSpriteComps1034 then
				for iter_79_2, iter_79_3 in pairs(arg_76_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_79_3 then
						if arg_76_1.isInRecall_ then
							iter_79_3.color = arg_76_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_79_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_76_1.var_.actorSpriteComps1034 = nil
			end

			local var_79_8 = arg_76_1.actors_["1034"].transform
			local var_79_9 = 0

			if var_79_9 < arg_76_1.time_ and arg_76_1.time_ <= var_79_9 + arg_79_0 then
				arg_76_1.var_.moveOldPos1034 = var_79_8.localPosition
				var_79_8.localScale = Vector3.New(1, 1, 1)

				arg_76_1:CheckSpriteTmpPos("1034", 3)

				local var_79_10 = var_79_8.childCount

				for iter_79_4 = 0, var_79_10 - 1 do
					local var_79_11 = var_79_8:GetChild(iter_79_4)

					if var_79_11.name == "" or not string.find(var_79_11.name, "split") then
						var_79_11.gameObject:SetActive(true)
					else
						var_79_11.gameObject:SetActive(false)
					end
				end
			end

			local var_79_12 = 0.001

			if var_79_9 <= arg_76_1.time_ and arg_76_1.time_ < var_79_9 + var_79_12 then
				local var_79_13 = (arg_76_1.time_ - var_79_9) / var_79_12
				local var_79_14 = Vector3.New(0, -331.9, -324)

				var_79_8.localPosition = Vector3.Lerp(arg_76_1.var_.moveOldPos1034, var_79_14, var_79_13)
			end

			if arg_76_1.time_ >= var_79_9 + var_79_12 and arg_76_1.time_ < var_79_9 + var_79_12 + arg_79_0 then
				var_79_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_79_15 = 0
			local var_79_16 = 0.15

			if var_79_15 < arg_76_1.time_ and arg_76_1.time_ <= var_79_15 + arg_79_0 then
				arg_76_1.talkMaxDuration = 0
				arg_76_1.dialogCg_.alpha = 1

				arg_76_1.dialog_:SetActive(true)
				SetActive(arg_76_1.leftNameGo_, true)

				local var_79_17 = arg_76_1:FormatText(StoryNameCfg[1109].name)

				arg_76_1.leftNameTxt_.text = var_79_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_76_1.leftNameTxt_.transform)

				arg_76_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_76_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_76_1:RecordName(arg_76_1.leftNameTxt_.text)
				SetActive(arg_76_1.iconTrs_.gameObject, false)
				arg_76_1.callingController_:SetSelectedState("normal")

				local var_79_18 = arg_76_1:GetWordFromCfg(417012016)
				local var_79_19 = arg_76_1:FormatText(var_79_18.content)

				arg_76_1.text_.text = var_79_19

				LuaForUtil.ClearLinePrefixSymbol(arg_76_1.text_)

				local var_79_20 = 6
				local var_79_21 = utf8.len(var_79_19)
				local var_79_22 = var_79_20 <= 0 and var_79_16 or var_79_16 * (var_79_21 / var_79_20)

				if var_79_22 > 0 and var_79_16 < var_79_22 then
					arg_76_1.talkMaxDuration = var_79_22

					if var_79_22 + var_79_15 > arg_76_1.duration_ then
						arg_76_1.duration_ = var_79_22 + var_79_15
					end
				end

				arg_76_1.text_.text = var_79_19
				arg_76_1.typewritter.percent = 0

				arg_76_1.typewritter:SetDirty()
				arg_76_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012016", "story_v_out_417012.awb") ~= 0 then
					local var_79_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012016", "story_v_out_417012.awb") / 1000

					if var_79_23 + var_79_15 > arg_76_1.duration_ then
						arg_76_1.duration_ = var_79_23 + var_79_15
					end

					if var_79_18.prefab_name ~= "" and arg_76_1.actors_[var_79_18.prefab_name] ~= nil then
						local var_79_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_76_1.actors_[var_79_18.prefab_name].transform, "story_v_out_417012", "417012016", "story_v_out_417012.awb")

						arg_76_1:RecordAudio("417012016", var_79_24)
						arg_76_1:RecordAudio("417012016", var_79_24)
					else
						arg_76_1:AudioAction("play", "voice", "story_v_out_417012", "417012016", "story_v_out_417012.awb")
					end

					arg_76_1:RecordHistoryTalkVoice("story_v_out_417012", "417012016", "story_v_out_417012.awb")
				end

				arg_76_1:RecordContent(arg_76_1.text_.text)
			end

			local var_79_25 = math.max(var_79_16, arg_76_1.talkMaxDuration)

			if var_79_15 <= arg_76_1.time_ and arg_76_1.time_ < var_79_15 + var_79_25 then
				arg_76_1.typewritter.percent = (arg_76_1.time_ - var_79_15) / var_79_25

				arg_76_1.typewritter:SetDirty()
			end

			if arg_76_1.time_ >= var_79_15 + var_79_25 and arg_76_1.time_ < var_79_15 + var_79_25 + arg_79_0 then
				arg_76_1.typewritter.percent = 1

				arg_76_1.typewritter:SetDirty()
				arg_76_1:ShowNextGo(true)
			end
		end
	end,
	Play417012017 = function(arg_80_0, arg_80_1)
		arg_80_1.time_ = 0
		arg_80_1.frameCnt_ = 0
		arg_80_1.state_ = "playing"
		arg_80_1.curTalkId_ = 417012017
		arg_80_1.duration_ = 6.13

		local var_80_0 = {
			zh = 5.5,
			ja = 6.133
		}
		local var_80_1 = manager.audio:GetLocalizationFlag()

		if var_80_0[var_80_1] ~= nil then
			arg_80_1.duration_ = var_80_0[var_80_1]
		end

		SetActive(arg_80_1.tipsGo_, false)

		function arg_80_1.onSingleLineFinish_()
			arg_80_1.onSingleLineUpdate_ = nil
			arg_80_1.onSingleLineFinish_ = nil
			arg_80_1.state_ = "waiting"
		end

		function arg_80_1.playNext_(arg_82_0)
			if arg_82_0 == 1 then
				arg_80_0:Play417012018(arg_80_1)
			end
		end

		function arg_80_1.onSingleLineUpdate_(arg_83_0)
			local var_83_0 = "1060"

			if arg_80_1.actors_[var_83_0] == nil then
				local var_83_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1060")

				if not isNil(var_83_1) then
					local var_83_2 = Object.Instantiate(var_83_1, arg_80_1.canvasGo_.transform)

					var_83_2.transform:SetSiblingIndex(1)

					var_83_2.name = var_83_0
					var_83_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_80_1.actors_[var_83_0] = var_83_2

					local var_83_3 = var_83_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_80_1.isInRecall_ then
						for iter_83_0, iter_83_1 in ipairs(var_83_3) do
							iter_83_1.color = arg_80_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_83_4 = arg_80_1.actors_["1060"]
			local var_83_5 = 0

			if var_83_5 < arg_80_1.time_ and arg_80_1.time_ <= var_83_5 + arg_83_0 and not isNil(var_83_4) and arg_80_1.var_.actorSpriteComps1060 == nil then
				arg_80_1.var_.actorSpriteComps1060 = var_83_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_83_6 = 0.2

			if var_83_5 <= arg_80_1.time_ and arg_80_1.time_ < var_83_5 + var_83_6 and not isNil(var_83_4) then
				local var_83_7 = (arg_80_1.time_ - var_83_5) / var_83_6

				if arg_80_1.var_.actorSpriteComps1060 then
					for iter_83_2, iter_83_3 in pairs(arg_80_1.var_.actorSpriteComps1060:ToTable()) do
						if iter_83_3 then
							if arg_80_1.isInRecall_ then
								local var_83_8 = Mathf.Lerp(iter_83_3.color.r, arg_80_1.hightColor1.r, var_83_7)
								local var_83_9 = Mathf.Lerp(iter_83_3.color.g, arg_80_1.hightColor1.g, var_83_7)
								local var_83_10 = Mathf.Lerp(iter_83_3.color.b, arg_80_1.hightColor1.b, var_83_7)

								iter_83_3.color = Color.New(var_83_8, var_83_9, var_83_10)
							else
								local var_83_11 = Mathf.Lerp(iter_83_3.color.r, 1, var_83_7)

								iter_83_3.color = Color.New(var_83_11, var_83_11, var_83_11)
							end
						end
					end
				end
			end

			if arg_80_1.time_ >= var_83_5 + var_83_6 and arg_80_1.time_ < var_83_5 + var_83_6 + arg_83_0 and not isNil(var_83_4) and arg_80_1.var_.actorSpriteComps1060 then
				for iter_83_4, iter_83_5 in pairs(arg_80_1.var_.actorSpriteComps1060:ToTable()) do
					if iter_83_5 then
						if arg_80_1.isInRecall_ then
							iter_83_5.color = arg_80_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_83_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_80_1.var_.actorSpriteComps1060 = nil
			end

			local var_83_12 = arg_80_1.actors_["1034"]
			local var_83_13 = 0

			if var_83_13 < arg_80_1.time_ and arg_80_1.time_ <= var_83_13 + arg_83_0 and not isNil(var_83_12) and arg_80_1.var_.actorSpriteComps1034 == nil then
				arg_80_1.var_.actorSpriteComps1034 = var_83_12:GetComponentsInChildren(typeof(Image), true)
			end

			local var_83_14 = 0.2

			if var_83_13 <= arg_80_1.time_ and arg_80_1.time_ < var_83_13 + var_83_14 and not isNil(var_83_12) then
				local var_83_15 = (arg_80_1.time_ - var_83_13) / var_83_14

				if arg_80_1.var_.actorSpriteComps1034 then
					for iter_83_6, iter_83_7 in pairs(arg_80_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_83_7 then
							if arg_80_1.isInRecall_ then
								local var_83_16 = Mathf.Lerp(iter_83_7.color.r, arg_80_1.hightColor2.r, var_83_15)
								local var_83_17 = Mathf.Lerp(iter_83_7.color.g, arg_80_1.hightColor2.g, var_83_15)
								local var_83_18 = Mathf.Lerp(iter_83_7.color.b, arg_80_1.hightColor2.b, var_83_15)

								iter_83_7.color = Color.New(var_83_16, var_83_17, var_83_18)
							else
								local var_83_19 = Mathf.Lerp(iter_83_7.color.r, 0.5, var_83_15)

								iter_83_7.color = Color.New(var_83_19, var_83_19, var_83_19)
							end
						end
					end
				end
			end

			if arg_80_1.time_ >= var_83_13 + var_83_14 and arg_80_1.time_ < var_83_13 + var_83_14 + arg_83_0 and not isNil(var_83_12) and arg_80_1.var_.actorSpriteComps1034 then
				for iter_83_8, iter_83_9 in pairs(arg_80_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_83_9 then
						if arg_80_1.isInRecall_ then
							iter_83_9.color = arg_80_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_83_9.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_80_1.var_.actorSpriteComps1034 = nil
			end

			local var_83_20 = arg_80_1.actors_["1034"].transform
			local var_83_21 = 0

			if var_83_21 < arg_80_1.time_ and arg_80_1.time_ <= var_83_21 + arg_83_0 then
				arg_80_1.var_.moveOldPos1034 = var_83_20.localPosition
				var_83_20.localScale = Vector3.New(1, 1, 1)

				arg_80_1:CheckSpriteTmpPos("1034", 7)

				local var_83_22 = var_83_20.childCount

				for iter_83_10 = 0, var_83_22 - 1 do
					local var_83_23 = var_83_20:GetChild(iter_83_10)

					if var_83_23.name == "" or not string.find(var_83_23.name, "split") then
						var_83_23.gameObject:SetActive(true)
					else
						var_83_23.gameObject:SetActive(false)
					end
				end
			end

			local var_83_24 = 0.001

			if var_83_21 <= arg_80_1.time_ and arg_80_1.time_ < var_83_21 + var_83_24 then
				local var_83_25 = (arg_80_1.time_ - var_83_21) / var_83_24
				local var_83_26 = Vector3.New(0, -2000, 0)

				var_83_20.localPosition = Vector3.Lerp(arg_80_1.var_.moveOldPos1034, var_83_26, var_83_25)
			end

			if arg_80_1.time_ >= var_83_21 + var_83_24 and arg_80_1.time_ < var_83_21 + var_83_24 + arg_83_0 then
				var_83_20.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_83_27 = "1015"

			if arg_80_1.actors_[var_83_27] == nil then
				local var_83_28 = Asset.Load("Widget/System/Story/StoryExpression/" .. "1015")

				if not isNil(var_83_28) then
					local var_83_29 = Object.Instantiate(var_83_28, arg_80_1.canvasGo_.transform)

					var_83_29.transform:SetSiblingIndex(1)

					var_83_29.name = var_83_27
					var_83_29.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_80_1.actors_[var_83_27] = var_83_29

					local var_83_30 = var_83_29:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_80_1.isInRecall_ then
						for iter_83_11, iter_83_12 in ipairs(var_83_30) do
							iter_83_12.color = arg_80_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_83_31 = arg_80_1.actors_["1015"].transform
			local var_83_32 = 0

			if var_83_32 < arg_80_1.time_ and arg_80_1.time_ <= var_83_32 + arg_83_0 then
				arg_80_1.var_.moveOldPos1015 = var_83_31.localPosition
				var_83_31.localScale = Vector3.New(1, 1, 1)

				arg_80_1:CheckSpriteTmpPos("1015", 3)

				local var_83_33 = var_83_31.childCount

				for iter_83_13 = 0, var_83_33 - 1 do
					local var_83_34 = var_83_31:GetChild(iter_83_13)

					if var_83_34.name == "split_1" or not string.find(var_83_34.name, "split") then
						var_83_34.gameObject:SetActive(true)
					else
						var_83_34.gameObject:SetActive(false)
					end
				end
			end

			local var_83_35 = 0.001

			if var_83_32 <= arg_80_1.time_ and arg_80_1.time_ < var_83_32 + var_83_35 then
				local var_83_36 = (arg_80_1.time_ - var_83_32) / var_83_35
				local var_83_37 = Vector3.New(0, -315, -320)

				var_83_31.localPosition = Vector3.Lerp(arg_80_1.var_.moveOldPos1015, var_83_37, var_83_36)
			end

			if arg_80_1.time_ >= var_83_32 + var_83_35 and arg_80_1.time_ < var_83_32 + var_83_35 + arg_83_0 then
				var_83_31.localPosition = Vector3.New(0, -315, -320)
			end

			local var_83_38 = 0
			local var_83_39 = 0.475

			if var_83_38 < arg_80_1.time_ and arg_80_1.time_ <= var_83_38 + arg_83_0 then
				arg_80_1.talkMaxDuration = 0
				arg_80_1.dialogCg_.alpha = 1

				arg_80_1.dialog_:SetActive(true)
				SetActive(arg_80_1.leftNameGo_, true)

				local var_83_40 = arg_80_1:FormatText(StoryNameCfg[479].name)

				arg_80_1.leftNameTxt_.text = var_83_40

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_80_1.leftNameTxt_.transform)

				arg_80_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_80_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_80_1:RecordName(arg_80_1.leftNameTxt_.text)
				SetActive(arg_80_1.iconTrs_.gameObject, false)
				arg_80_1.callingController_:SetSelectedState("normal")

				local var_83_41 = arg_80_1:GetWordFromCfg(417012017)
				local var_83_42 = arg_80_1:FormatText(var_83_41.content)

				arg_80_1.text_.text = var_83_42

				LuaForUtil.ClearLinePrefixSymbol(arg_80_1.text_)

				local var_83_43 = 19
				local var_83_44 = utf8.len(var_83_42)
				local var_83_45 = var_83_43 <= 0 and var_83_39 or var_83_39 * (var_83_44 / var_83_43)

				if var_83_45 > 0 and var_83_39 < var_83_45 then
					arg_80_1.talkMaxDuration = var_83_45

					if var_83_45 + var_83_38 > arg_80_1.duration_ then
						arg_80_1.duration_ = var_83_45 + var_83_38
					end
				end

				arg_80_1.text_.text = var_83_42
				arg_80_1.typewritter.percent = 0

				arg_80_1.typewritter:SetDirty()
				arg_80_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012017", "story_v_out_417012.awb") ~= 0 then
					local var_83_46 = manager.audio:GetVoiceLength("story_v_out_417012", "417012017", "story_v_out_417012.awb") / 1000

					if var_83_46 + var_83_38 > arg_80_1.duration_ then
						arg_80_1.duration_ = var_83_46 + var_83_38
					end

					if var_83_41.prefab_name ~= "" and arg_80_1.actors_[var_83_41.prefab_name] ~= nil then
						local var_83_47 = LuaForUtil.PlayVoiceWithCriLipsync(arg_80_1.actors_[var_83_41.prefab_name].transform, "story_v_out_417012", "417012017", "story_v_out_417012.awb")

						arg_80_1:RecordAudio("417012017", var_83_47)
						arg_80_1:RecordAudio("417012017", var_83_47)
					else
						arg_80_1:AudioAction("play", "voice", "story_v_out_417012", "417012017", "story_v_out_417012.awb")
					end

					arg_80_1:RecordHistoryTalkVoice("story_v_out_417012", "417012017", "story_v_out_417012.awb")
				end

				arg_80_1:RecordContent(arg_80_1.text_.text)
			end

			local var_83_48 = math.max(var_83_39, arg_80_1.talkMaxDuration)

			if var_83_38 <= arg_80_1.time_ and arg_80_1.time_ < var_83_38 + var_83_48 then
				arg_80_1.typewritter.percent = (arg_80_1.time_ - var_83_38) / var_83_48

				arg_80_1.typewritter:SetDirty()
			end

			if arg_80_1.time_ >= var_83_38 + var_83_48 and arg_80_1.time_ < var_83_38 + var_83_48 + arg_83_0 then
				arg_80_1.typewritter.percent = 1

				arg_80_1.typewritter:SetDirty()
				arg_80_1:ShowNextGo(true)
			end
		end
	end,
	Play417012018 = function(arg_84_0, arg_84_1)
		arg_84_1.time_ = 0
		arg_84_1.frameCnt_ = 0
		arg_84_1.state_ = "playing"
		arg_84_1.curTalkId_ = 417012018
		arg_84_1.duration_ = 6.27

		local var_84_0 = {
			zh = 6.266,
			ja = 6.233
		}
		local var_84_1 = manager.audio:GetLocalizationFlag()

		if var_84_0[var_84_1] ~= nil then
			arg_84_1.duration_ = var_84_0[var_84_1]
		end

		SetActive(arg_84_1.tipsGo_, false)

		function arg_84_1.onSingleLineFinish_()
			arg_84_1.onSingleLineUpdate_ = nil
			arg_84_1.onSingleLineFinish_ = nil
			arg_84_1.state_ = "waiting"
		end

		function arg_84_1.playNext_(arg_86_0)
			if arg_86_0 == 1 then
				arg_84_0:Play417012019(arg_84_1)
			end
		end

		function arg_84_1.onSingleLineUpdate_(arg_87_0)
			local var_87_0 = arg_84_1.actors_["1034"]
			local var_87_1 = 0

			if var_87_1 < arg_84_1.time_ and arg_84_1.time_ <= var_87_1 + arg_87_0 and not isNil(var_87_0) and arg_84_1.var_.actorSpriteComps1034 == nil then
				arg_84_1.var_.actorSpriteComps1034 = var_87_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_87_2 = 0.2

			if var_87_1 <= arg_84_1.time_ and arg_84_1.time_ < var_87_1 + var_87_2 and not isNil(var_87_0) then
				local var_87_3 = (arg_84_1.time_ - var_87_1) / var_87_2

				if arg_84_1.var_.actorSpriteComps1034 then
					for iter_87_0, iter_87_1 in pairs(arg_84_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_87_1 then
							if arg_84_1.isInRecall_ then
								local var_87_4 = Mathf.Lerp(iter_87_1.color.r, arg_84_1.hightColor1.r, var_87_3)
								local var_87_5 = Mathf.Lerp(iter_87_1.color.g, arg_84_1.hightColor1.g, var_87_3)
								local var_87_6 = Mathf.Lerp(iter_87_1.color.b, arg_84_1.hightColor1.b, var_87_3)

								iter_87_1.color = Color.New(var_87_4, var_87_5, var_87_6)
							else
								local var_87_7 = Mathf.Lerp(iter_87_1.color.r, 1, var_87_3)

								iter_87_1.color = Color.New(var_87_7, var_87_7, var_87_7)
							end
						end
					end
				end
			end

			if arg_84_1.time_ >= var_87_1 + var_87_2 and arg_84_1.time_ < var_87_1 + var_87_2 + arg_87_0 and not isNil(var_87_0) and arg_84_1.var_.actorSpriteComps1034 then
				for iter_87_2, iter_87_3 in pairs(arg_84_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_87_3 then
						if arg_84_1.isInRecall_ then
							iter_87_3.color = arg_84_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_87_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_84_1.var_.actorSpriteComps1034 = nil
			end

			local var_87_8 = arg_84_1.actors_["1015"]
			local var_87_9 = 0

			if var_87_9 < arg_84_1.time_ and arg_84_1.time_ <= var_87_9 + arg_87_0 and not isNil(var_87_8) and arg_84_1.var_.actorSpriteComps1015 == nil then
				arg_84_1.var_.actorSpriteComps1015 = var_87_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_87_10 = 0.2

			if var_87_9 <= arg_84_1.time_ and arg_84_1.time_ < var_87_9 + var_87_10 and not isNil(var_87_8) then
				local var_87_11 = (arg_84_1.time_ - var_87_9) / var_87_10

				if arg_84_1.var_.actorSpriteComps1015 then
					for iter_87_4, iter_87_5 in pairs(arg_84_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_87_5 then
							if arg_84_1.isInRecall_ then
								local var_87_12 = Mathf.Lerp(iter_87_5.color.r, arg_84_1.hightColor2.r, var_87_11)
								local var_87_13 = Mathf.Lerp(iter_87_5.color.g, arg_84_1.hightColor2.g, var_87_11)
								local var_87_14 = Mathf.Lerp(iter_87_5.color.b, arg_84_1.hightColor2.b, var_87_11)

								iter_87_5.color = Color.New(var_87_12, var_87_13, var_87_14)
							else
								local var_87_15 = Mathf.Lerp(iter_87_5.color.r, 0.5, var_87_11)

								iter_87_5.color = Color.New(var_87_15, var_87_15, var_87_15)
							end
						end
					end
				end
			end

			if arg_84_1.time_ >= var_87_9 + var_87_10 and arg_84_1.time_ < var_87_9 + var_87_10 + arg_87_0 and not isNil(var_87_8) and arg_84_1.var_.actorSpriteComps1015 then
				for iter_87_6, iter_87_7 in pairs(arg_84_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_87_7 then
						if arg_84_1.isInRecall_ then
							iter_87_7.color = arg_84_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_87_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_84_1.var_.actorSpriteComps1015 = nil
			end

			local var_87_16 = arg_84_1.actors_["1015"].transform
			local var_87_17 = 0

			if var_87_17 < arg_84_1.time_ and arg_84_1.time_ <= var_87_17 + arg_87_0 then
				arg_84_1.var_.moveOldPos1015 = var_87_16.localPosition
				var_87_16.localScale = Vector3.New(1, 1, 1)

				arg_84_1:CheckSpriteTmpPos("1015", 4)

				local var_87_18 = var_87_16.childCount

				for iter_87_8 = 0, var_87_18 - 1 do
					local var_87_19 = var_87_16:GetChild(iter_87_8)

					if var_87_19.name == "" or not string.find(var_87_19.name, "split") then
						var_87_19.gameObject:SetActive(true)
					else
						var_87_19.gameObject:SetActive(false)
					end
				end
			end

			local var_87_20 = 0.001

			if var_87_17 <= arg_84_1.time_ and arg_84_1.time_ < var_87_17 + var_87_20 then
				local var_87_21 = (arg_84_1.time_ - var_87_17) / var_87_20
				local var_87_22 = Vector3.New(390, -349.1, -288)

				var_87_16.localPosition = Vector3.Lerp(arg_84_1.var_.moveOldPos1015, var_87_22, var_87_21)
			end

			if arg_84_1.time_ >= var_87_17 + var_87_20 and arg_84_1.time_ < var_87_17 + var_87_20 + arg_87_0 then
				var_87_16.localPosition = Vector3.New(390, -349.1, -288)
			end

			local var_87_23 = arg_84_1.actors_["1034"].transform
			local var_87_24 = 0

			if var_87_24 < arg_84_1.time_ and arg_84_1.time_ <= var_87_24 + arg_87_0 then
				arg_84_1.var_.moveOldPos1034 = var_87_23.localPosition
				var_87_23.localScale = Vector3.New(1, 1, 1)

				arg_84_1:CheckSpriteTmpPos("1034", 2)

				local var_87_25 = var_87_23.childCount

				for iter_87_9 = 0, var_87_25 - 1 do
					local var_87_26 = var_87_23:GetChild(iter_87_9)

					if var_87_26.name == "" or not string.find(var_87_26.name, "split") then
						var_87_26.gameObject:SetActive(true)
					else
						var_87_26.gameObject:SetActive(false)
					end
				end
			end

			local var_87_27 = 0.001

			if var_87_24 <= arg_84_1.time_ and arg_84_1.time_ < var_87_24 + var_87_27 then
				local var_87_28 = (arg_84_1.time_ - var_87_24) / var_87_27
				local var_87_29 = Vector3.New(-390, -331.9, -324)

				var_87_23.localPosition = Vector3.Lerp(arg_84_1.var_.moveOldPos1034, var_87_29, var_87_28)
			end

			if arg_84_1.time_ >= var_87_24 + var_87_27 and arg_84_1.time_ < var_87_24 + var_87_27 + arg_87_0 then
				var_87_23.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_87_30 = 0
			local var_87_31 = 0.675

			if var_87_30 < arg_84_1.time_ and arg_84_1.time_ <= var_87_30 + arg_87_0 then
				arg_84_1.talkMaxDuration = 0
				arg_84_1.dialogCg_.alpha = 1

				arg_84_1.dialog_:SetActive(true)
				SetActive(arg_84_1.leftNameGo_, true)

				local var_87_32 = arg_84_1:FormatText(StoryNameCfg[1109].name)

				arg_84_1.leftNameTxt_.text = var_87_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_84_1.leftNameTxt_.transform)

				arg_84_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_84_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_84_1:RecordName(arg_84_1.leftNameTxt_.text)
				SetActive(arg_84_1.iconTrs_.gameObject, false)
				arg_84_1.callingController_:SetSelectedState("normal")

				local var_87_33 = arg_84_1:GetWordFromCfg(417012018)
				local var_87_34 = arg_84_1:FormatText(var_87_33.content)

				arg_84_1.text_.text = var_87_34

				LuaForUtil.ClearLinePrefixSymbol(arg_84_1.text_)

				local var_87_35 = 27
				local var_87_36 = utf8.len(var_87_34)
				local var_87_37 = var_87_35 <= 0 and var_87_31 or var_87_31 * (var_87_36 / var_87_35)

				if var_87_37 > 0 and var_87_31 < var_87_37 then
					arg_84_1.talkMaxDuration = var_87_37

					if var_87_37 + var_87_30 > arg_84_1.duration_ then
						arg_84_1.duration_ = var_87_37 + var_87_30
					end
				end

				arg_84_1.text_.text = var_87_34
				arg_84_1.typewritter.percent = 0

				arg_84_1.typewritter:SetDirty()
				arg_84_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012018", "story_v_out_417012.awb") ~= 0 then
					local var_87_38 = manager.audio:GetVoiceLength("story_v_out_417012", "417012018", "story_v_out_417012.awb") / 1000

					if var_87_38 + var_87_30 > arg_84_1.duration_ then
						arg_84_1.duration_ = var_87_38 + var_87_30
					end

					if var_87_33.prefab_name ~= "" and arg_84_1.actors_[var_87_33.prefab_name] ~= nil then
						local var_87_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_84_1.actors_[var_87_33.prefab_name].transform, "story_v_out_417012", "417012018", "story_v_out_417012.awb")

						arg_84_1:RecordAudio("417012018", var_87_39)
						arg_84_1:RecordAudio("417012018", var_87_39)
					else
						arg_84_1:AudioAction("play", "voice", "story_v_out_417012", "417012018", "story_v_out_417012.awb")
					end

					arg_84_1:RecordHistoryTalkVoice("story_v_out_417012", "417012018", "story_v_out_417012.awb")
				end

				arg_84_1:RecordContent(arg_84_1.text_.text)
			end

			local var_87_40 = math.max(var_87_31, arg_84_1.talkMaxDuration)

			if var_87_30 <= arg_84_1.time_ and arg_84_1.time_ < var_87_30 + var_87_40 then
				arg_84_1.typewritter.percent = (arg_84_1.time_ - var_87_30) / var_87_40

				arg_84_1.typewritter:SetDirty()
			end

			if arg_84_1.time_ >= var_87_30 + var_87_40 and arg_84_1.time_ < var_87_30 + var_87_40 + arg_87_0 then
				arg_84_1.typewritter.percent = 1

				arg_84_1.typewritter:SetDirty()
				arg_84_1:ShowNextGo(true)
			end
		end
	end,
	Play417012019 = function(arg_88_0, arg_88_1)
		arg_88_1.time_ = 0
		arg_88_1.frameCnt_ = 0
		arg_88_1.state_ = "playing"
		arg_88_1.curTalkId_ = 417012019
		arg_88_1.duration_ = 12

		local var_88_0 = {
			zh = 11.733,
			ja = 12
		}
		local var_88_1 = manager.audio:GetLocalizationFlag()

		if var_88_0[var_88_1] ~= nil then
			arg_88_1.duration_ = var_88_0[var_88_1]
		end

		SetActive(arg_88_1.tipsGo_, false)

		function arg_88_1.onSingleLineFinish_()
			arg_88_1.onSingleLineUpdate_ = nil
			arg_88_1.onSingleLineFinish_ = nil
			arg_88_1.state_ = "waiting"
		end

		function arg_88_1.playNext_(arg_90_0)
			if arg_90_0 == 1 then
				arg_88_0:Play417012020(arg_88_1)
			end
		end

		function arg_88_1.onSingleLineUpdate_(arg_91_0)
			local var_91_0 = 0
			local var_91_1 = 1.475

			if var_91_0 < arg_88_1.time_ and arg_88_1.time_ <= var_91_0 + arg_91_0 then
				arg_88_1.talkMaxDuration = 0
				arg_88_1.dialogCg_.alpha = 1

				arg_88_1.dialog_:SetActive(true)
				SetActive(arg_88_1.leftNameGo_, true)

				local var_91_2 = arg_88_1:FormatText(StoryNameCfg[1109].name)

				arg_88_1.leftNameTxt_.text = var_91_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_88_1.leftNameTxt_.transform)

				arg_88_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_88_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_88_1:RecordName(arg_88_1.leftNameTxt_.text)
				SetActive(arg_88_1.iconTrs_.gameObject, false)
				arg_88_1.callingController_:SetSelectedState("normal")

				local var_91_3 = arg_88_1:GetWordFromCfg(417012019)
				local var_91_4 = arg_88_1:FormatText(var_91_3.content)

				arg_88_1.text_.text = var_91_4

				LuaForUtil.ClearLinePrefixSymbol(arg_88_1.text_)

				local var_91_5 = 59
				local var_91_6 = utf8.len(var_91_4)
				local var_91_7 = var_91_5 <= 0 and var_91_1 or var_91_1 * (var_91_6 / var_91_5)

				if var_91_7 > 0 and var_91_1 < var_91_7 then
					arg_88_1.talkMaxDuration = var_91_7

					if var_91_7 + var_91_0 > arg_88_1.duration_ then
						arg_88_1.duration_ = var_91_7 + var_91_0
					end
				end

				arg_88_1.text_.text = var_91_4
				arg_88_1.typewritter.percent = 0

				arg_88_1.typewritter:SetDirty()
				arg_88_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012019", "story_v_out_417012.awb") ~= 0 then
					local var_91_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012019", "story_v_out_417012.awb") / 1000

					if var_91_8 + var_91_0 > arg_88_1.duration_ then
						arg_88_1.duration_ = var_91_8 + var_91_0
					end

					if var_91_3.prefab_name ~= "" and arg_88_1.actors_[var_91_3.prefab_name] ~= nil then
						local var_91_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_88_1.actors_[var_91_3.prefab_name].transform, "story_v_out_417012", "417012019", "story_v_out_417012.awb")

						arg_88_1:RecordAudio("417012019", var_91_9)
						arg_88_1:RecordAudio("417012019", var_91_9)
					else
						arg_88_1:AudioAction("play", "voice", "story_v_out_417012", "417012019", "story_v_out_417012.awb")
					end

					arg_88_1:RecordHistoryTalkVoice("story_v_out_417012", "417012019", "story_v_out_417012.awb")
				end

				arg_88_1:RecordContent(arg_88_1.text_.text)
			end

			local var_91_10 = math.max(var_91_1, arg_88_1.talkMaxDuration)

			if var_91_0 <= arg_88_1.time_ and arg_88_1.time_ < var_91_0 + var_91_10 then
				arg_88_1.typewritter.percent = (arg_88_1.time_ - var_91_0) / var_91_10

				arg_88_1.typewritter:SetDirty()
			end

			if arg_88_1.time_ >= var_91_0 + var_91_10 and arg_88_1.time_ < var_91_0 + var_91_10 + arg_91_0 then
				arg_88_1.typewritter.percent = 1

				arg_88_1.typewritter:SetDirty()
				arg_88_1:ShowNextGo(true)
			end
		end
	end,
	Play417012020 = function(arg_92_0, arg_92_1)
		arg_92_1.time_ = 0
		arg_92_1.frameCnt_ = 0
		arg_92_1.state_ = "playing"
		arg_92_1.curTalkId_ = 417012020
		arg_92_1.duration_ = 8.63

		local var_92_0 = {
			zh = 6.7,
			ja = 8.633
		}
		local var_92_1 = manager.audio:GetLocalizationFlag()

		if var_92_0[var_92_1] ~= nil then
			arg_92_1.duration_ = var_92_0[var_92_1]
		end

		SetActive(arg_92_1.tipsGo_, false)

		function arg_92_1.onSingleLineFinish_()
			arg_92_1.onSingleLineUpdate_ = nil
			arg_92_1.onSingleLineFinish_ = nil
			arg_92_1.state_ = "waiting"
		end

		function arg_92_1.playNext_(arg_94_0)
			if arg_94_0 == 1 then
				arg_92_0:Play417012021(arg_92_1)
			end
		end

		function arg_92_1.onSingleLineUpdate_(arg_95_0)
			local var_95_0 = arg_92_1.actors_["1034"].transform
			local var_95_1 = 0

			if var_95_1 < arg_92_1.time_ and arg_92_1.time_ <= var_95_1 + arg_95_0 then
				arg_92_1.var_.moveOldPos1034 = var_95_0.localPosition
				var_95_0.localScale = Vector3.New(1, 1, 1)

				arg_92_1:CheckSpriteTmpPos("1034", 2)

				local var_95_2 = var_95_0.childCount

				for iter_95_0 = 0, var_95_2 - 1 do
					local var_95_3 = var_95_0:GetChild(iter_95_0)

					if var_95_3.name == "split_4" or not string.find(var_95_3.name, "split") then
						var_95_3.gameObject:SetActive(true)
					else
						var_95_3.gameObject:SetActive(false)
					end
				end
			end

			local var_95_4 = 0.001

			if var_95_1 <= arg_92_1.time_ and arg_92_1.time_ < var_95_1 + var_95_4 then
				local var_95_5 = (arg_92_1.time_ - var_95_1) / var_95_4
				local var_95_6 = Vector3.New(-390, -331.9, -324)

				var_95_0.localPosition = Vector3.Lerp(arg_92_1.var_.moveOldPos1034, var_95_6, var_95_5)
			end

			if arg_92_1.time_ >= var_95_1 + var_95_4 and arg_92_1.time_ < var_95_1 + var_95_4 + arg_95_0 then
				var_95_0.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_95_7 = 0
			local var_95_8 = 0.65

			if var_95_7 < arg_92_1.time_ and arg_92_1.time_ <= var_95_7 + arg_95_0 then
				arg_92_1.talkMaxDuration = 0
				arg_92_1.dialogCg_.alpha = 1

				arg_92_1.dialog_:SetActive(true)
				SetActive(arg_92_1.leftNameGo_, true)

				local var_95_9 = arg_92_1:FormatText(StoryNameCfg[1109].name)

				arg_92_1.leftNameTxt_.text = var_95_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_92_1.leftNameTxt_.transform)

				arg_92_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_92_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_92_1:RecordName(arg_92_1.leftNameTxt_.text)
				SetActive(arg_92_1.iconTrs_.gameObject, false)
				arg_92_1.callingController_:SetSelectedState("normal")

				local var_95_10 = arg_92_1:GetWordFromCfg(417012020)
				local var_95_11 = arg_92_1:FormatText(var_95_10.content)

				arg_92_1.text_.text = var_95_11

				LuaForUtil.ClearLinePrefixSymbol(arg_92_1.text_)

				local var_95_12 = 26
				local var_95_13 = utf8.len(var_95_11)
				local var_95_14 = var_95_12 <= 0 and var_95_8 or var_95_8 * (var_95_13 / var_95_12)

				if var_95_14 > 0 and var_95_8 < var_95_14 then
					arg_92_1.talkMaxDuration = var_95_14

					if var_95_14 + var_95_7 > arg_92_1.duration_ then
						arg_92_1.duration_ = var_95_14 + var_95_7
					end
				end

				arg_92_1.text_.text = var_95_11
				arg_92_1.typewritter.percent = 0

				arg_92_1.typewritter:SetDirty()
				arg_92_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012020", "story_v_out_417012.awb") ~= 0 then
					local var_95_15 = manager.audio:GetVoiceLength("story_v_out_417012", "417012020", "story_v_out_417012.awb") / 1000

					if var_95_15 + var_95_7 > arg_92_1.duration_ then
						arg_92_1.duration_ = var_95_15 + var_95_7
					end

					if var_95_10.prefab_name ~= "" and arg_92_1.actors_[var_95_10.prefab_name] ~= nil then
						local var_95_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_92_1.actors_[var_95_10.prefab_name].transform, "story_v_out_417012", "417012020", "story_v_out_417012.awb")

						arg_92_1:RecordAudio("417012020", var_95_16)
						arg_92_1:RecordAudio("417012020", var_95_16)
					else
						arg_92_1:AudioAction("play", "voice", "story_v_out_417012", "417012020", "story_v_out_417012.awb")
					end

					arg_92_1:RecordHistoryTalkVoice("story_v_out_417012", "417012020", "story_v_out_417012.awb")
				end

				arg_92_1:RecordContent(arg_92_1.text_.text)
			end

			local var_95_17 = math.max(var_95_8, arg_92_1.talkMaxDuration)

			if var_95_7 <= arg_92_1.time_ and arg_92_1.time_ < var_95_7 + var_95_17 then
				arg_92_1.typewritter.percent = (arg_92_1.time_ - var_95_7) / var_95_17

				arg_92_1.typewritter:SetDirty()
			end

			if arg_92_1.time_ >= var_95_7 + var_95_17 and arg_92_1.time_ < var_95_7 + var_95_17 + arg_95_0 then
				arg_92_1.typewritter.percent = 1

				arg_92_1.typewritter:SetDirty()
				arg_92_1:ShowNextGo(true)
			end
		end
	end,
	Play417012021 = function(arg_96_0, arg_96_1)
		arg_96_1.time_ = 0
		arg_96_1.frameCnt_ = 0
		arg_96_1.state_ = "playing"
		arg_96_1.curTalkId_ = 417012021
		arg_96_1.duration_ = 5.7

		local var_96_0 = {
			zh = 3.833,
			ja = 5.7
		}
		local var_96_1 = manager.audio:GetLocalizationFlag()

		if var_96_0[var_96_1] ~= nil then
			arg_96_1.duration_ = var_96_0[var_96_1]
		end

		SetActive(arg_96_1.tipsGo_, false)

		function arg_96_1.onSingleLineFinish_()
			arg_96_1.onSingleLineUpdate_ = nil
			arg_96_1.onSingleLineFinish_ = nil
			arg_96_1.state_ = "waiting"
		end

		function arg_96_1.playNext_(arg_98_0)
			if arg_98_0 == 1 then
				arg_96_0:Play417012022(arg_96_1)
			end
		end

		function arg_96_1.onSingleLineUpdate_(arg_99_0)
			local var_99_0 = arg_96_1.actors_["1015"]
			local var_99_1 = 0

			if var_99_1 < arg_96_1.time_ and arg_96_1.time_ <= var_99_1 + arg_99_0 and not isNil(var_99_0) and arg_96_1.var_.actorSpriteComps1015 == nil then
				arg_96_1.var_.actorSpriteComps1015 = var_99_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_99_2 = 0.2

			if var_99_1 <= arg_96_1.time_ and arg_96_1.time_ < var_99_1 + var_99_2 and not isNil(var_99_0) then
				local var_99_3 = (arg_96_1.time_ - var_99_1) / var_99_2

				if arg_96_1.var_.actorSpriteComps1015 then
					for iter_99_0, iter_99_1 in pairs(arg_96_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_99_1 then
							if arg_96_1.isInRecall_ then
								local var_99_4 = Mathf.Lerp(iter_99_1.color.r, arg_96_1.hightColor1.r, var_99_3)
								local var_99_5 = Mathf.Lerp(iter_99_1.color.g, arg_96_1.hightColor1.g, var_99_3)
								local var_99_6 = Mathf.Lerp(iter_99_1.color.b, arg_96_1.hightColor1.b, var_99_3)

								iter_99_1.color = Color.New(var_99_4, var_99_5, var_99_6)
							else
								local var_99_7 = Mathf.Lerp(iter_99_1.color.r, 1, var_99_3)

								iter_99_1.color = Color.New(var_99_7, var_99_7, var_99_7)
							end
						end
					end
				end
			end

			if arg_96_1.time_ >= var_99_1 + var_99_2 and arg_96_1.time_ < var_99_1 + var_99_2 + arg_99_0 and not isNil(var_99_0) and arg_96_1.var_.actorSpriteComps1015 then
				for iter_99_2, iter_99_3 in pairs(arg_96_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_99_3 then
						if arg_96_1.isInRecall_ then
							iter_99_3.color = arg_96_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_99_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_96_1.var_.actorSpriteComps1015 = nil
			end

			local var_99_8 = arg_96_1.actors_["1034"]
			local var_99_9 = 0

			if var_99_9 < arg_96_1.time_ and arg_96_1.time_ <= var_99_9 + arg_99_0 and not isNil(var_99_8) and arg_96_1.var_.actorSpriteComps1034 == nil then
				arg_96_1.var_.actorSpriteComps1034 = var_99_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_99_10 = 0.2

			if var_99_9 <= arg_96_1.time_ and arg_96_1.time_ < var_99_9 + var_99_10 and not isNil(var_99_8) then
				local var_99_11 = (arg_96_1.time_ - var_99_9) / var_99_10

				if arg_96_1.var_.actorSpriteComps1034 then
					for iter_99_4, iter_99_5 in pairs(arg_96_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_99_5 then
							if arg_96_1.isInRecall_ then
								local var_99_12 = Mathf.Lerp(iter_99_5.color.r, arg_96_1.hightColor2.r, var_99_11)
								local var_99_13 = Mathf.Lerp(iter_99_5.color.g, arg_96_1.hightColor2.g, var_99_11)
								local var_99_14 = Mathf.Lerp(iter_99_5.color.b, arg_96_1.hightColor2.b, var_99_11)

								iter_99_5.color = Color.New(var_99_12, var_99_13, var_99_14)
							else
								local var_99_15 = Mathf.Lerp(iter_99_5.color.r, 0.5, var_99_11)

								iter_99_5.color = Color.New(var_99_15, var_99_15, var_99_15)
							end
						end
					end
				end
			end

			if arg_96_1.time_ >= var_99_9 + var_99_10 and arg_96_1.time_ < var_99_9 + var_99_10 + arg_99_0 and not isNil(var_99_8) and arg_96_1.var_.actorSpriteComps1034 then
				for iter_99_6, iter_99_7 in pairs(arg_96_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_99_7 then
						if arg_96_1.isInRecall_ then
							iter_99_7.color = arg_96_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_99_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_96_1.var_.actorSpriteComps1034 = nil
			end

			local var_99_16 = 0
			local var_99_17 = 0.475

			if var_99_16 < arg_96_1.time_ and arg_96_1.time_ <= var_99_16 + arg_99_0 then
				arg_96_1.talkMaxDuration = 0
				arg_96_1.dialogCg_.alpha = 1

				arg_96_1.dialog_:SetActive(true)
				SetActive(arg_96_1.leftNameGo_, true)

				local var_99_18 = arg_96_1:FormatText(StoryNameCfg[479].name)

				arg_96_1.leftNameTxt_.text = var_99_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_96_1.leftNameTxt_.transform)

				arg_96_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_96_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_96_1:RecordName(arg_96_1.leftNameTxt_.text)
				SetActive(arg_96_1.iconTrs_.gameObject, false)
				arg_96_1.callingController_:SetSelectedState("normal")

				local var_99_19 = arg_96_1:GetWordFromCfg(417012021)
				local var_99_20 = arg_96_1:FormatText(var_99_19.content)

				arg_96_1.text_.text = var_99_20

				LuaForUtil.ClearLinePrefixSymbol(arg_96_1.text_)

				local var_99_21 = 19
				local var_99_22 = utf8.len(var_99_20)
				local var_99_23 = var_99_21 <= 0 and var_99_17 or var_99_17 * (var_99_22 / var_99_21)

				if var_99_23 > 0 and var_99_17 < var_99_23 then
					arg_96_1.talkMaxDuration = var_99_23

					if var_99_23 + var_99_16 > arg_96_1.duration_ then
						arg_96_1.duration_ = var_99_23 + var_99_16
					end
				end

				arg_96_1.text_.text = var_99_20
				arg_96_1.typewritter.percent = 0

				arg_96_1.typewritter:SetDirty()
				arg_96_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012021", "story_v_out_417012.awb") ~= 0 then
					local var_99_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012021", "story_v_out_417012.awb") / 1000

					if var_99_24 + var_99_16 > arg_96_1.duration_ then
						arg_96_1.duration_ = var_99_24 + var_99_16
					end

					if var_99_19.prefab_name ~= "" and arg_96_1.actors_[var_99_19.prefab_name] ~= nil then
						local var_99_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_96_1.actors_[var_99_19.prefab_name].transform, "story_v_out_417012", "417012021", "story_v_out_417012.awb")

						arg_96_1:RecordAudio("417012021", var_99_25)
						arg_96_1:RecordAudio("417012021", var_99_25)
					else
						arg_96_1:AudioAction("play", "voice", "story_v_out_417012", "417012021", "story_v_out_417012.awb")
					end

					arg_96_1:RecordHistoryTalkVoice("story_v_out_417012", "417012021", "story_v_out_417012.awb")
				end

				arg_96_1:RecordContent(arg_96_1.text_.text)
			end

			local var_99_26 = math.max(var_99_17, arg_96_1.talkMaxDuration)

			if var_99_16 <= arg_96_1.time_ and arg_96_1.time_ < var_99_16 + var_99_26 then
				arg_96_1.typewritter.percent = (arg_96_1.time_ - var_99_16) / var_99_26

				arg_96_1.typewritter:SetDirty()
			end

			if arg_96_1.time_ >= var_99_16 + var_99_26 and arg_96_1.time_ < var_99_16 + var_99_26 + arg_99_0 then
				arg_96_1.typewritter.percent = 1

				arg_96_1.typewritter:SetDirty()
				arg_96_1:ShowNextGo(true)
			end
		end
	end,
	Play417012022 = function(arg_100_0, arg_100_1)
		arg_100_1.time_ = 0
		arg_100_1.frameCnt_ = 0
		arg_100_1.state_ = "playing"
		arg_100_1.curTalkId_ = 417012022
		arg_100_1.duration_ = 7.23

		local var_100_0 = {
			zh = 3.633,
			ja = 7.233
		}
		local var_100_1 = manager.audio:GetLocalizationFlag()

		if var_100_0[var_100_1] ~= nil then
			arg_100_1.duration_ = var_100_0[var_100_1]
		end

		SetActive(arg_100_1.tipsGo_, false)

		function arg_100_1.onSingleLineFinish_()
			arg_100_1.onSingleLineUpdate_ = nil
			arg_100_1.onSingleLineFinish_ = nil
			arg_100_1.state_ = "waiting"
		end

		function arg_100_1.playNext_(arg_102_0)
			if arg_102_0 == 1 then
				arg_100_0:Play417012023(arg_100_1)
			end
		end

		function arg_100_1.onSingleLineUpdate_(arg_103_0)
			local var_103_0 = arg_100_1.actors_["1034"]
			local var_103_1 = 0

			if var_103_1 < arg_100_1.time_ and arg_100_1.time_ <= var_103_1 + arg_103_0 and not isNil(var_103_0) and arg_100_1.var_.actorSpriteComps1034 == nil then
				arg_100_1.var_.actorSpriteComps1034 = var_103_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_103_2 = 0.2

			if var_103_1 <= arg_100_1.time_ and arg_100_1.time_ < var_103_1 + var_103_2 and not isNil(var_103_0) then
				local var_103_3 = (arg_100_1.time_ - var_103_1) / var_103_2

				if arg_100_1.var_.actorSpriteComps1034 then
					for iter_103_0, iter_103_1 in pairs(arg_100_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_103_1 then
							if arg_100_1.isInRecall_ then
								local var_103_4 = Mathf.Lerp(iter_103_1.color.r, arg_100_1.hightColor1.r, var_103_3)
								local var_103_5 = Mathf.Lerp(iter_103_1.color.g, arg_100_1.hightColor1.g, var_103_3)
								local var_103_6 = Mathf.Lerp(iter_103_1.color.b, arg_100_1.hightColor1.b, var_103_3)

								iter_103_1.color = Color.New(var_103_4, var_103_5, var_103_6)
							else
								local var_103_7 = Mathf.Lerp(iter_103_1.color.r, 1, var_103_3)

								iter_103_1.color = Color.New(var_103_7, var_103_7, var_103_7)
							end
						end
					end
				end
			end

			if arg_100_1.time_ >= var_103_1 + var_103_2 and arg_100_1.time_ < var_103_1 + var_103_2 + arg_103_0 and not isNil(var_103_0) and arg_100_1.var_.actorSpriteComps1034 then
				for iter_103_2, iter_103_3 in pairs(arg_100_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_103_3 then
						if arg_100_1.isInRecall_ then
							iter_103_3.color = arg_100_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_103_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_100_1.var_.actorSpriteComps1034 = nil
			end

			local var_103_8 = arg_100_1.actors_["1015"]
			local var_103_9 = 0

			if var_103_9 < arg_100_1.time_ and arg_100_1.time_ <= var_103_9 + arg_103_0 and not isNil(var_103_8) and arg_100_1.var_.actorSpriteComps1015 == nil then
				arg_100_1.var_.actorSpriteComps1015 = var_103_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_103_10 = 0.2

			if var_103_9 <= arg_100_1.time_ and arg_100_1.time_ < var_103_9 + var_103_10 and not isNil(var_103_8) then
				local var_103_11 = (arg_100_1.time_ - var_103_9) / var_103_10

				if arg_100_1.var_.actorSpriteComps1015 then
					for iter_103_4, iter_103_5 in pairs(arg_100_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_103_5 then
							if arg_100_1.isInRecall_ then
								local var_103_12 = Mathf.Lerp(iter_103_5.color.r, arg_100_1.hightColor2.r, var_103_11)
								local var_103_13 = Mathf.Lerp(iter_103_5.color.g, arg_100_1.hightColor2.g, var_103_11)
								local var_103_14 = Mathf.Lerp(iter_103_5.color.b, arg_100_1.hightColor2.b, var_103_11)

								iter_103_5.color = Color.New(var_103_12, var_103_13, var_103_14)
							else
								local var_103_15 = Mathf.Lerp(iter_103_5.color.r, 0.5, var_103_11)

								iter_103_5.color = Color.New(var_103_15, var_103_15, var_103_15)
							end
						end
					end
				end
			end

			if arg_100_1.time_ >= var_103_9 + var_103_10 and arg_100_1.time_ < var_103_9 + var_103_10 + arg_103_0 and not isNil(var_103_8) and arg_100_1.var_.actorSpriteComps1015 then
				for iter_103_6, iter_103_7 in pairs(arg_100_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_103_7 then
						if arg_100_1.isInRecall_ then
							iter_103_7.color = arg_100_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_103_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_100_1.var_.actorSpriteComps1015 = nil
			end

			local var_103_16 = arg_100_1.actors_["1034"].transform
			local var_103_17 = 0

			if var_103_17 < arg_100_1.time_ and arg_100_1.time_ <= var_103_17 + arg_103_0 then
				arg_100_1.var_.moveOldPos1034 = var_103_16.localPosition
				var_103_16.localScale = Vector3.New(1, 1, 1)

				arg_100_1:CheckSpriteTmpPos("1034", 2)

				local var_103_18 = var_103_16.childCount

				for iter_103_8 = 0, var_103_18 - 1 do
					local var_103_19 = var_103_16:GetChild(iter_103_8)

					if var_103_19.name == "" or not string.find(var_103_19.name, "split") then
						var_103_19.gameObject:SetActive(true)
					else
						var_103_19.gameObject:SetActive(false)
					end
				end
			end

			local var_103_20 = 0.001

			if var_103_17 <= arg_100_1.time_ and arg_100_1.time_ < var_103_17 + var_103_20 then
				local var_103_21 = (arg_100_1.time_ - var_103_17) / var_103_20
				local var_103_22 = Vector3.New(-390, -331.9, -324)

				var_103_16.localPosition = Vector3.Lerp(arg_100_1.var_.moveOldPos1034, var_103_22, var_103_21)
			end

			if arg_100_1.time_ >= var_103_17 + var_103_20 and arg_100_1.time_ < var_103_17 + var_103_20 + arg_103_0 then
				var_103_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_103_23 = 0
			local var_103_24 = 0.425

			if var_103_23 < arg_100_1.time_ and arg_100_1.time_ <= var_103_23 + arg_103_0 then
				arg_100_1.talkMaxDuration = 0
				arg_100_1.dialogCg_.alpha = 1

				arg_100_1.dialog_:SetActive(true)
				SetActive(arg_100_1.leftNameGo_, true)

				local var_103_25 = arg_100_1:FormatText(StoryNameCfg[1109].name)

				arg_100_1.leftNameTxt_.text = var_103_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_100_1.leftNameTxt_.transform)

				arg_100_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_100_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_100_1:RecordName(arg_100_1.leftNameTxt_.text)
				SetActive(arg_100_1.iconTrs_.gameObject, false)
				arg_100_1.callingController_:SetSelectedState("normal")

				local var_103_26 = arg_100_1:GetWordFromCfg(417012022)
				local var_103_27 = arg_100_1:FormatText(var_103_26.content)

				arg_100_1.text_.text = var_103_27

				LuaForUtil.ClearLinePrefixSymbol(arg_100_1.text_)

				local var_103_28 = 17
				local var_103_29 = utf8.len(var_103_27)
				local var_103_30 = var_103_28 <= 0 and var_103_24 or var_103_24 * (var_103_29 / var_103_28)

				if var_103_30 > 0 and var_103_24 < var_103_30 then
					arg_100_1.talkMaxDuration = var_103_30

					if var_103_30 + var_103_23 > arg_100_1.duration_ then
						arg_100_1.duration_ = var_103_30 + var_103_23
					end
				end

				arg_100_1.text_.text = var_103_27
				arg_100_1.typewritter.percent = 0

				arg_100_1.typewritter:SetDirty()
				arg_100_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012022", "story_v_out_417012.awb") ~= 0 then
					local var_103_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012022", "story_v_out_417012.awb") / 1000

					if var_103_31 + var_103_23 > arg_100_1.duration_ then
						arg_100_1.duration_ = var_103_31 + var_103_23
					end

					if var_103_26.prefab_name ~= "" and arg_100_1.actors_[var_103_26.prefab_name] ~= nil then
						local var_103_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_100_1.actors_[var_103_26.prefab_name].transform, "story_v_out_417012", "417012022", "story_v_out_417012.awb")

						arg_100_1:RecordAudio("417012022", var_103_32)
						arg_100_1:RecordAudio("417012022", var_103_32)
					else
						arg_100_1:AudioAction("play", "voice", "story_v_out_417012", "417012022", "story_v_out_417012.awb")
					end

					arg_100_1:RecordHistoryTalkVoice("story_v_out_417012", "417012022", "story_v_out_417012.awb")
				end

				arg_100_1:RecordContent(arg_100_1.text_.text)
			end

			local var_103_33 = math.max(var_103_24, arg_100_1.talkMaxDuration)

			if var_103_23 <= arg_100_1.time_ and arg_100_1.time_ < var_103_23 + var_103_33 then
				arg_100_1.typewritter.percent = (arg_100_1.time_ - var_103_23) / var_103_33

				arg_100_1.typewritter:SetDirty()
			end

			if arg_100_1.time_ >= var_103_23 + var_103_33 and arg_100_1.time_ < var_103_23 + var_103_33 + arg_103_0 then
				arg_100_1.typewritter.percent = 1

				arg_100_1.typewritter:SetDirty()
				arg_100_1:ShowNextGo(true)
			end
		end
	end,
	Play417012023 = function(arg_104_0, arg_104_1)
		arg_104_1.time_ = 0
		arg_104_1.frameCnt_ = 0
		arg_104_1.state_ = "playing"
		arg_104_1.curTalkId_ = 417012023
		arg_104_1.duration_ = 5

		SetActive(arg_104_1.tipsGo_, false)

		function arg_104_1.onSingleLineFinish_()
			arg_104_1.onSingleLineUpdate_ = nil
			arg_104_1.onSingleLineFinish_ = nil
			arg_104_1.state_ = "waiting"
		end

		function arg_104_1.playNext_(arg_106_0)
			if arg_106_0 == 1 then
				arg_104_0:Play417012024(arg_104_1)
			end
		end

		function arg_104_1.onSingleLineUpdate_(arg_107_0)
			local var_107_0 = arg_104_1.actors_["1034"]
			local var_107_1 = 0

			if var_107_1 < arg_104_1.time_ and arg_104_1.time_ <= var_107_1 + arg_107_0 and not isNil(var_107_0) and arg_104_1.var_.actorSpriteComps1034 == nil then
				arg_104_1.var_.actorSpriteComps1034 = var_107_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_107_2 = 0.2

			if var_107_1 <= arg_104_1.time_ and arg_104_1.time_ < var_107_1 + var_107_2 and not isNil(var_107_0) then
				local var_107_3 = (arg_104_1.time_ - var_107_1) / var_107_2

				if arg_104_1.var_.actorSpriteComps1034 then
					for iter_107_0, iter_107_1 in pairs(arg_104_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_107_1 then
							if arg_104_1.isInRecall_ then
								local var_107_4 = Mathf.Lerp(iter_107_1.color.r, arg_104_1.hightColor2.r, var_107_3)
								local var_107_5 = Mathf.Lerp(iter_107_1.color.g, arg_104_1.hightColor2.g, var_107_3)
								local var_107_6 = Mathf.Lerp(iter_107_1.color.b, arg_104_1.hightColor2.b, var_107_3)

								iter_107_1.color = Color.New(var_107_4, var_107_5, var_107_6)
							else
								local var_107_7 = Mathf.Lerp(iter_107_1.color.r, 0.5, var_107_3)

								iter_107_1.color = Color.New(var_107_7, var_107_7, var_107_7)
							end
						end
					end
				end
			end

			if arg_104_1.time_ >= var_107_1 + var_107_2 and arg_104_1.time_ < var_107_1 + var_107_2 + arg_107_0 and not isNil(var_107_0) and arg_104_1.var_.actorSpriteComps1034 then
				for iter_107_2, iter_107_3 in pairs(arg_104_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_107_3 then
						if arg_104_1.isInRecall_ then
							iter_107_3.color = arg_104_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_107_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_104_1.var_.actorSpriteComps1034 = nil
			end

			local var_107_8 = 0
			local var_107_9 = 1.375

			if var_107_8 < arg_104_1.time_ and arg_104_1.time_ <= var_107_8 + arg_107_0 then
				arg_104_1.talkMaxDuration = 0
				arg_104_1.dialogCg_.alpha = 1

				arg_104_1.dialog_:SetActive(true)
				SetActive(arg_104_1.leftNameGo_, false)

				arg_104_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_104_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_104_1:RecordName(arg_104_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_104_1.iconTrs_.gameObject, false)
				arg_104_1.callingController_:SetSelectedState("normal")

				local var_107_10 = arg_104_1:GetWordFromCfg(417012023)
				local var_107_11 = arg_104_1:FormatText(var_107_10.content)

				arg_104_1.text_.text = var_107_11

				LuaForUtil.ClearLinePrefixSymbol(arg_104_1.text_)

				local var_107_12 = 55
				local var_107_13 = utf8.len(var_107_11)
				local var_107_14 = var_107_12 <= 0 and var_107_9 or var_107_9 * (var_107_13 / var_107_12)

				if var_107_14 > 0 and var_107_9 < var_107_14 then
					arg_104_1.talkMaxDuration = var_107_14

					if var_107_14 + var_107_8 > arg_104_1.duration_ then
						arg_104_1.duration_ = var_107_14 + var_107_8
					end
				end

				arg_104_1.text_.text = var_107_11
				arg_104_1.typewritter.percent = 0

				arg_104_1.typewritter:SetDirty()
				arg_104_1:ShowNextGo(false)
				arg_104_1:RecordContent(arg_104_1.text_.text)
			end

			local var_107_15 = math.max(var_107_9, arg_104_1.talkMaxDuration)

			if var_107_8 <= arg_104_1.time_ and arg_104_1.time_ < var_107_8 + var_107_15 then
				arg_104_1.typewritter.percent = (arg_104_1.time_ - var_107_8) / var_107_15

				arg_104_1.typewritter:SetDirty()
			end

			if arg_104_1.time_ >= var_107_8 + var_107_15 and arg_104_1.time_ < var_107_8 + var_107_15 + arg_107_0 then
				arg_104_1.typewritter.percent = 1

				arg_104_1.typewritter:SetDirty()
				arg_104_1:ShowNextGo(true)
			end
		end
	end,
	Play417012024 = function(arg_108_0, arg_108_1)
		arg_108_1.time_ = 0
		arg_108_1.frameCnt_ = 0
		arg_108_1.state_ = "playing"
		arg_108_1.curTalkId_ = 417012024
		arg_108_1.duration_ = 6.53

		local var_108_0 = {
			zh = 3.6,
			ja = 6.533
		}
		local var_108_1 = manager.audio:GetLocalizationFlag()

		if var_108_0[var_108_1] ~= nil then
			arg_108_1.duration_ = var_108_0[var_108_1]
		end

		SetActive(arg_108_1.tipsGo_, false)

		function arg_108_1.onSingleLineFinish_()
			arg_108_1.onSingleLineUpdate_ = nil
			arg_108_1.onSingleLineFinish_ = nil
			arg_108_1.state_ = "waiting"
		end

		function arg_108_1.playNext_(arg_110_0)
			if arg_110_0 == 1 then
				arg_108_0:Play417012025(arg_108_1)
			end
		end

		function arg_108_1.onSingleLineUpdate_(arg_111_0)
			local var_111_0 = arg_108_1.actors_["1034"]
			local var_111_1 = 0

			if var_111_1 < arg_108_1.time_ and arg_108_1.time_ <= var_111_1 + arg_111_0 and not isNil(var_111_0) and arg_108_1.var_.actorSpriteComps1034 == nil then
				arg_108_1.var_.actorSpriteComps1034 = var_111_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_111_2 = 0.2

			if var_111_1 <= arg_108_1.time_ and arg_108_1.time_ < var_111_1 + var_111_2 and not isNil(var_111_0) then
				local var_111_3 = (arg_108_1.time_ - var_111_1) / var_111_2

				if arg_108_1.var_.actorSpriteComps1034 then
					for iter_111_0, iter_111_1 in pairs(arg_108_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_111_1 then
							if arg_108_1.isInRecall_ then
								local var_111_4 = Mathf.Lerp(iter_111_1.color.r, arg_108_1.hightColor1.r, var_111_3)
								local var_111_5 = Mathf.Lerp(iter_111_1.color.g, arg_108_1.hightColor1.g, var_111_3)
								local var_111_6 = Mathf.Lerp(iter_111_1.color.b, arg_108_1.hightColor1.b, var_111_3)

								iter_111_1.color = Color.New(var_111_4, var_111_5, var_111_6)
							else
								local var_111_7 = Mathf.Lerp(iter_111_1.color.r, 1, var_111_3)

								iter_111_1.color = Color.New(var_111_7, var_111_7, var_111_7)
							end
						end
					end
				end
			end

			if arg_108_1.time_ >= var_111_1 + var_111_2 and arg_108_1.time_ < var_111_1 + var_111_2 + arg_111_0 and not isNil(var_111_0) and arg_108_1.var_.actorSpriteComps1034 then
				for iter_111_2, iter_111_3 in pairs(arg_108_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_111_3 then
						if arg_108_1.isInRecall_ then
							iter_111_3.color = arg_108_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_111_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_108_1.var_.actorSpriteComps1034 = nil
			end

			local var_111_8 = arg_108_1.actors_["1034"].transform
			local var_111_9 = 0

			if var_111_9 < arg_108_1.time_ and arg_108_1.time_ <= var_111_9 + arg_111_0 then
				arg_108_1.var_.moveOldPos1034 = var_111_8.localPosition
				var_111_8.localScale = Vector3.New(1, 1, 1)

				arg_108_1:CheckSpriteTmpPos("1034", 2)

				local var_111_10 = var_111_8.childCount

				for iter_111_4 = 0, var_111_10 - 1 do
					local var_111_11 = var_111_8:GetChild(iter_111_4)

					if var_111_11.name == "split_1" or not string.find(var_111_11.name, "split") then
						var_111_11.gameObject:SetActive(true)
					else
						var_111_11.gameObject:SetActive(false)
					end
				end
			end

			local var_111_12 = 0.001

			if var_111_9 <= arg_108_1.time_ and arg_108_1.time_ < var_111_9 + var_111_12 then
				local var_111_13 = (arg_108_1.time_ - var_111_9) / var_111_12
				local var_111_14 = Vector3.New(-390, -331.9, -324)

				var_111_8.localPosition = Vector3.Lerp(arg_108_1.var_.moveOldPos1034, var_111_14, var_111_13)
			end

			if arg_108_1.time_ >= var_111_9 + var_111_12 and arg_108_1.time_ < var_111_9 + var_111_12 + arg_111_0 then
				var_111_8.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_111_15 = 0
			local var_111_16 = 0.375

			if var_111_15 < arg_108_1.time_ and arg_108_1.time_ <= var_111_15 + arg_111_0 then
				arg_108_1.talkMaxDuration = 0
				arg_108_1.dialogCg_.alpha = 1

				arg_108_1.dialog_:SetActive(true)
				SetActive(arg_108_1.leftNameGo_, true)

				local var_111_17 = arg_108_1:FormatText(StoryNameCfg[1109].name)

				arg_108_1.leftNameTxt_.text = var_111_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_108_1.leftNameTxt_.transform)

				arg_108_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_108_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_108_1:RecordName(arg_108_1.leftNameTxt_.text)
				SetActive(arg_108_1.iconTrs_.gameObject, false)
				arg_108_1.callingController_:SetSelectedState("normal")

				local var_111_18 = arg_108_1:GetWordFromCfg(417012024)
				local var_111_19 = arg_108_1:FormatText(var_111_18.content)

				arg_108_1.text_.text = var_111_19

				LuaForUtil.ClearLinePrefixSymbol(arg_108_1.text_)

				local var_111_20 = 15
				local var_111_21 = utf8.len(var_111_19)
				local var_111_22 = var_111_20 <= 0 and var_111_16 or var_111_16 * (var_111_21 / var_111_20)

				if var_111_22 > 0 and var_111_16 < var_111_22 then
					arg_108_1.talkMaxDuration = var_111_22

					if var_111_22 + var_111_15 > arg_108_1.duration_ then
						arg_108_1.duration_ = var_111_22 + var_111_15
					end
				end

				arg_108_1.text_.text = var_111_19
				arg_108_1.typewritter.percent = 0

				arg_108_1.typewritter:SetDirty()
				arg_108_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012024", "story_v_out_417012.awb") ~= 0 then
					local var_111_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012024", "story_v_out_417012.awb") / 1000

					if var_111_23 + var_111_15 > arg_108_1.duration_ then
						arg_108_1.duration_ = var_111_23 + var_111_15
					end

					if var_111_18.prefab_name ~= "" and arg_108_1.actors_[var_111_18.prefab_name] ~= nil then
						local var_111_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_108_1.actors_[var_111_18.prefab_name].transform, "story_v_out_417012", "417012024", "story_v_out_417012.awb")

						arg_108_1:RecordAudio("417012024", var_111_24)
						arg_108_1:RecordAudio("417012024", var_111_24)
					else
						arg_108_1:AudioAction("play", "voice", "story_v_out_417012", "417012024", "story_v_out_417012.awb")
					end

					arg_108_1:RecordHistoryTalkVoice("story_v_out_417012", "417012024", "story_v_out_417012.awb")
				end

				arg_108_1:RecordContent(arg_108_1.text_.text)
			end

			local var_111_25 = math.max(var_111_16, arg_108_1.talkMaxDuration)

			if var_111_15 <= arg_108_1.time_ and arg_108_1.time_ < var_111_15 + var_111_25 then
				arg_108_1.typewritter.percent = (arg_108_1.time_ - var_111_15) / var_111_25

				arg_108_1.typewritter:SetDirty()
			end

			if arg_108_1.time_ >= var_111_15 + var_111_25 and arg_108_1.time_ < var_111_15 + var_111_25 + arg_111_0 then
				arg_108_1.typewritter.percent = 1

				arg_108_1.typewritter:SetDirty()
				arg_108_1:ShowNextGo(true)
			end
		end
	end,
	Play417012025 = function(arg_112_0, arg_112_1)
		arg_112_1.time_ = 0
		arg_112_1.frameCnt_ = 0
		arg_112_1.state_ = "playing"
		arg_112_1.curTalkId_ = 417012025
		arg_112_1.duration_ = 12.47

		local var_112_0 = {
			zh = 11,
			ja = 12.466
		}
		local var_112_1 = manager.audio:GetLocalizationFlag()

		if var_112_0[var_112_1] ~= nil then
			arg_112_1.duration_ = var_112_0[var_112_1]
		end

		SetActive(arg_112_1.tipsGo_, false)

		function arg_112_1.onSingleLineFinish_()
			arg_112_1.onSingleLineUpdate_ = nil
			arg_112_1.onSingleLineFinish_ = nil
			arg_112_1.state_ = "waiting"
		end

		function arg_112_1.playNext_(arg_114_0)
			if arg_114_0 == 1 then
				arg_112_0:Play417012026(arg_112_1)
			end
		end

		function arg_112_1.onSingleLineUpdate_(arg_115_0)
			local var_115_0 = arg_112_1.actors_["1015"]
			local var_115_1 = 0

			if var_115_1 < arg_112_1.time_ and arg_112_1.time_ <= var_115_1 + arg_115_0 and not isNil(var_115_0) and arg_112_1.var_.actorSpriteComps1015 == nil then
				arg_112_1.var_.actorSpriteComps1015 = var_115_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_115_2 = 0.2

			if var_115_1 <= arg_112_1.time_ and arg_112_1.time_ < var_115_1 + var_115_2 and not isNil(var_115_0) then
				local var_115_3 = (arg_112_1.time_ - var_115_1) / var_115_2

				if arg_112_1.var_.actorSpriteComps1015 then
					for iter_115_0, iter_115_1 in pairs(arg_112_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_115_1 then
							if arg_112_1.isInRecall_ then
								local var_115_4 = Mathf.Lerp(iter_115_1.color.r, arg_112_1.hightColor1.r, var_115_3)
								local var_115_5 = Mathf.Lerp(iter_115_1.color.g, arg_112_1.hightColor1.g, var_115_3)
								local var_115_6 = Mathf.Lerp(iter_115_1.color.b, arg_112_1.hightColor1.b, var_115_3)

								iter_115_1.color = Color.New(var_115_4, var_115_5, var_115_6)
							else
								local var_115_7 = Mathf.Lerp(iter_115_1.color.r, 1, var_115_3)

								iter_115_1.color = Color.New(var_115_7, var_115_7, var_115_7)
							end
						end
					end
				end
			end

			if arg_112_1.time_ >= var_115_1 + var_115_2 and arg_112_1.time_ < var_115_1 + var_115_2 + arg_115_0 and not isNil(var_115_0) and arg_112_1.var_.actorSpriteComps1015 then
				for iter_115_2, iter_115_3 in pairs(arg_112_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_115_3 then
						if arg_112_1.isInRecall_ then
							iter_115_3.color = arg_112_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_115_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_112_1.var_.actorSpriteComps1015 = nil
			end

			local var_115_8 = arg_112_1.actors_["1034"]
			local var_115_9 = 0

			if var_115_9 < arg_112_1.time_ and arg_112_1.time_ <= var_115_9 + arg_115_0 and not isNil(var_115_8) and arg_112_1.var_.actorSpriteComps1034 == nil then
				arg_112_1.var_.actorSpriteComps1034 = var_115_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_115_10 = 0.2

			if var_115_9 <= arg_112_1.time_ and arg_112_1.time_ < var_115_9 + var_115_10 and not isNil(var_115_8) then
				local var_115_11 = (arg_112_1.time_ - var_115_9) / var_115_10

				if arg_112_1.var_.actorSpriteComps1034 then
					for iter_115_4, iter_115_5 in pairs(arg_112_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_115_5 then
							if arg_112_1.isInRecall_ then
								local var_115_12 = Mathf.Lerp(iter_115_5.color.r, arg_112_1.hightColor2.r, var_115_11)
								local var_115_13 = Mathf.Lerp(iter_115_5.color.g, arg_112_1.hightColor2.g, var_115_11)
								local var_115_14 = Mathf.Lerp(iter_115_5.color.b, arg_112_1.hightColor2.b, var_115_11)

								iter_115_5.color = Color.New(var_115_12, var_115_13, var_115_14)
							else
								local var_115_15 = Mathf.Lerp(iter_115_5.color.r, 0.5, var_115_11)

								iter_115_5.color = Color.New(var_115_15, var_115_15, var_115_15)
							end
						end
					end
				end
			end

			if arg_112_1.time_ >= var_115_9 + var_115_10 and arg_112_1.time_ < var_115_9 + var_115_10 + arg_115_0 and not isNil(var_115_8) and arg_112_1.var_.actorSpriteComps1034 then
				for iter_115_6, iter_115_7 in pairs(arg_112_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_115_7 then
						if arg_112_1.isInRecall_ then
							iter_115_7.color = arg_112_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_115_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_112_1.var_.actorSpriteComps1034 = nil
			end

			local var_115_16 = arg_112_1.actors_["1015"].transform
			local var_115_17 = 0

			if var_115_17 < arg_112_1.time_ and arg_112_1.time_ <= var_115_17 + arg_115_0 then
				arg_112_1.var_.moveOldPos1015 = var_115_16.localPosition
				var_115_16.localScale = Vector3.New(1, 1, 1)

				arg_112_1:CheckSpriteTmpPos("1015", 4)

				local var_115_18 = var_115_16.childCount

				for iter_115_8 = 0, var_115_18 - 1 do
					local var_115_19 = var_115_16:GetChild(iter_115_8)

					if var_115_19.name == "split_4" or not string.find(var_115_19.name, "split") then
						var_115_19.gameObject:SetActive(true)
					else
						var_115_19.gameObject:SetActive(false)
					end
				end
			end

			local var_115_20 = 0.001

			if var_115_17 <= arg_112_1.time_ and arg_112_1.time_ < var_115_17 + var_115_20 then
				local var_115_21 = (arg_112_1.time_ - var_115_17) / var_115_20
				local var_115_22 = Vector3.New(390, -349.1, -288)

				var_115_16.localPosition = Vector3.Lerp(arg_112_1.var_.moveOldPos1015, var_115_22, var_115_21)
			end

			if arg_112_1.time_ >= var_115_17 + var_115_20 and arg_112_1.time_ < var_115_17 + var_115_20 + arg_115_0 then
				var_115_16.localPosition = Vector3.New(390, -349.1, -288)
			end

			local var_115_23 = 0
			local var_115_24 = 1.3

			if var_115_23 < arg_112_1.time_ and arg_112_1.time_ <= var_115_23 + arg_115_0 then
				arg_112_1.talkMaxDuration = 0
				arg_112_1.dialogCg_.alpha = 1

				arg_112_1.dialog_:SetActive(true)
				SetActive(arg_112_1.leftNameGo_, true)

				local var_115_25 = arg_112_1:FormatText(StoryNameCfg[479].name)

				arg_112_1.leftNameTxt_.text = var_115_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_112_1.leftNameTxt_.transform)

				arg_112_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_112_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_112_1:RecordName(arg_112_1.leftNameTxt_.text)
				SetActive(arg_112_1.iconTrs_.gameObject, false)
				arg_112_1.callingController_:SetSelectedState("normal")

				local var_115_26 = arg_112_1:GetWordFromCfg(417012025)
				local var_115_27 = arg_112_1:FormatText(var_115_26.content)

				arg_112_1.text_.text = var_115_27

				LuaForUtil.ClearLinePrefixSymbol(arg_112_1.text_)

				local var_115_28 = 52
				local var_115_29 = utf8.len(var_115_27)
				local var_115_30 = var_115_28 <= 0 and var_115_24 or var_115_24 * (var_115_29 / var_115_28)

				if var_115_30 > 0 and var_115_24 < var_115_30 then
					arg_112_1.talkMaxDuration = var_115_30

					if var_115_30 + var_115_23 > arg_112_1.duration_ then
						arg_112_1.duration_ = var_115_30 + var_115_23
					end
				end

				arg_112_1.text_.text = var_115_27
				arg_112_1.typewritter.percent = 0

				arg_112_1.typewritter:SetDirty()
				arg_112_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012025", "story_v_out_417012.awb") ~= 0 then
					local var_115_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012025", "story_v_out_417012.awb") / 1000

					if var_115_31 + var_115_23 > arg_112_1.duration_ then
						arg_112_1.duration_ = var_115_31 + var_115_23
					end

					if var_115_26.prefab_name ~= "" and arg_112_1.actors_[var_115_26.prefab_name] ~= nil then
						local var_115_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_112_1.actors_[var_115_26.prefab_name].transform, "story_v_out_417012", "417012025", "story_v_out_417012.awb")

						arg_112_1:RecordAudio("417012025", var_115_32)
						arg_112_1:RecordAudio("417012025", var_115_32)
					else
						arg_112_1:AudioAction("play", "voice", "story_v_out_417012", "417012025", "story_v_out_417012.awb")
					end

					arg_112_1:RecordHistoryTalkVoice("story_v_out_417012", "417012025", "story_v_out_417012.awb")
				end

				arg_112_1:RecordContent(arg_112_1.text_.text)
			end

			local var_115_33 = math.max(var_115_24, arg_112_1.talkMaxDuration)

			if var_115_23 <= arg_112_1.time_ and arg_112_1.time_ < var_115_23 + var_115_33 then
				arg_112_1.typewritter.percent = (arg_112_1.time_ - var_115_23) / var_115_33

				arg_112_1.typewritter:SetDirty()
			end

			if arg_112_1.time_ >= var_115_23 + var_115_33 and arg_112_1.time_ < var_115_23 + var_115_33 + arg_115_0 then
				arg_112_1.typewritter.percent = 1

				arg_112_1.typewritter:SetDirty()
				arg_112_1:ShowNextGo(true)
			end
		end
	end,
	Play417012026 = function(arg_116_0, arg_116_1)
		arg_116_1.time_ = 0
		arg_116_1.frameCnt_ = 0
		arg_116_1.state_ = "playing"
		arg_116_1.curTalkId_ = 417012026
		arg_116_1.duration_ = 3.4

		local var_116_0 = {
			zh = 1.766,
			ja = 3.4
		}
		local var_116_1 = manager.audio:GetLocalizationFlag()

		if var_116_0[var_116_1] ~= nil then
			arg_116_1.duration_ = var_116_0[var_116_1]
		end

		SetActive(arg_116_1.tipsGo_, false)

		function arg_116_1.onSingleLineFinish_()
			arg_116_1.onSingleLineUpdate_ = nil
			arg_116_1.onSingleLineFinish_ = nil
			arg_116_1.state_ = "waiting"
		end

		function arg_116_1.playNext_(arg_118_0)
			if arg_118_0 == 1 then
				arg_116_0:Play417012027(arg_116_1)
			end
		end

		function arg_116_1.onSingleLineUpdate_(arg_119_0)
			local var_119_0 = arg_116_1.actors_["1034"]
			local var_119_1 = 0

			if var_119_1 < arg_116_1.time_ and arg_116_1.time_ <= var_119_1 + arg_119_0 and not isNil(var_119_0) and arg_116_1.var_.actorSpriteComps1034 == nil then
				arg_116_1.var_.actorSpriteComps1034 = var_119_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_119_2 = 0.2

			if var_119_1 <= arg_116_1.time_ and arg_116_1.time_ < var_119_1 + var_119_2 and not isNil(var_119_0) then
				local var_119_3 = (arg_116_1.time_ - var_119_1) / var_119_2

				if arg_116_1.var_.actorSpriteComps1034 then
					for iter_119_0, iter_119_1 in pairs(arg_116_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_119_1 then
							if arg_116_1.isInRecall_ then
								local var_119_4 = Mathf.Lerp(iter_119_1.color.r, arg_116_1.hightColor1.r, var_119_3)
								local var_119_5 = Mathf.Lerp(iter_119_1.color.g, arg_116_1.hightColor1.g, var_119_3)
								local var_119_6 = Mathf.Lerp(iter_119_1.color.b, arg_116_1.hightColor1.b, var_119_3)

								iter_119_1.color = Color.New(var_119_4, var_119_5, var_119_6)
							else
								local var_119_7 = Mathf.Lerp(iter_119_1.color.r, 1, var_119_3)

								iter_119_1.color = Color.New(var_119_7, var_119_7, var_119_7)
							end
						end
					end
				end
			end

			if arg_116_1.time_ >= var_119_1 + var_119_2 and arg_116_1.time_ < var_119_1 + var_119_2 + arg_119_0 and not isNil(var_119_0) and arg_116_1.var_.actorSpriteComps1034 then
				for iter_119_2, iter_119_3 in pairs(arg_116_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_119_3 then
						if arg_116_1.isInRecall_ then
							iter_119_3.color = arg_116_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_119_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_116_1.var_.actorSpriteComps1034 = nil
			end

			local var_119_8 = arg_116_1.actors_["1015"]
			local var_119_9 = 0

			if var_119_9 < arg_116_1.time_ and arg_116_1.time_ <= var_119_9 + arg_119_0 and not isNil(var_119_8) and arg_116_1.var_.actorSpriteComps1015 == nil then
				arg_116_1.var_.actorSpriteComps1015 = var_119_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_119_10 = 0.2

			if var_119_9 <= arg_116_1.time_ and arg_116_1.time_ < var_119_9 + var_119_10 and not isNil(var_119_8) then
				local var_119_11 = (arg_116_1.time_ - var_119_9) / var_119_10

				if arg_116_1.var_.actorSpriteComps1015 then
					for iter_119_4, iter_119_5 in pairs(arg_116_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_119_5 then
							if arg_116_1.isInRecall_ then
								local var_119_12 = Mathf.Lerp(iter_119_5.color.r, arg_116_1.hightColor2.r, var_119_11)
								local var_119_13 = Mathf.Lerp(iter_119_5.color.g, arg_116_1.hightColor2.g, var_119_11)
								local var_119_14 = Mathf.Lerp(iter_119_5.color.b, arg_116_1.hightColor2.b, var_119_11)

								iter_119_5.color = Color.New(var_119_12, var_119_13, var_119_14)
							else
								local var_119_15 = Mathf.Lerp(iter_119_5.color.r, 0.5, var_119_11)

								iter_119_5.color = Color.New(var_119_15, var_119_15, var_119_15)
							end
						end
					end
				end
			end

			if arg_116_1.time_ >= var_119_9 + var_119_10 and arg_116_1.time_ < var_119_9 + var_119_10 + arg_119_0 and not isNil(var_119_8) and arg_116_1.var_.actorSpriteComps1015 then
				for iter_119_6, iter_119_7 in pairs(arg_116_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_119_7 then
						if arg_116_1.isInRecall_ then
							iter_119_7.color = arg_116_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_119_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_116_1.var_.actorSpriteComps1015 = nil
			end

			local var_119_16 = 0
			local var_119_17 = 0.2

			if var_119_16 < arg_116_1.time_ and arg_116_1.time_ <= var_119_16 + arg_119_0 then
				arg_116_1.talkMaxDuration = 0
				arg_116_1.dialogCg_.alpha = 1

				arg_116_1.dialog_:SetActive(true)
				SetActive(arg_116_1.leftNameGo_, true)

				local var_119_18 = arg_116_1:FormatText(StoryNameCfg[1109].name)

				arg_116_1.leftNameTxt_.text = var_119_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_116_1.leftNameTxt_.transform)

				arg_116_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_116_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_116_1:RecordName(arg_116_1.leftNameTxt_.text)
				SetActive(arg_116_1.iconTrs_.gameObject, false)
				arg_116_1.callingController_:SetSelectedState("normal")

				local var_119_19 = arg_116_1:GetWordFromCfg(417012026)
				local var_119_20 = arg_116_1:FormatText(var_119_19.content)

				arg_116_1.text_.text = var_119_20

				LuaForUtil.ClearLinePrefixSymbol(arg_116_1.text_)

				local var_119_21 = 8
				local var_119_22 = utf8.len(var_119_20)
				local var_119_23 = var_119_21 <= 0 and var_119_17 or var_119_17 * (var_119_22 / var_119_21)

				if var_119_23 > 0 and var_119_17 < var_119_23 then
					arg_116_1.talkMaxDuration = var_119_23

					if var_119_23 + var_119_16 > arg_116_1.duration_ then
						arg_116_1.duration_ = var_119_23 + var_119_16
					end
				end

				arg_116_1.text_.text = var_119_20
				arg_116_1.typewritter.percent = 0

				arg_116_1.typewritter:SetDirty()
				arg_116_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012026", "story_v_out_417012.awb") ~= 0 then
					local var_119_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012026", "story_v_out_417012.awb") / 1000

					if var_119_24 + var_119_16 > arg_116_1.duration_ then
						arg_116_1.duration_ = var_119_24 + var_119_16
					end

					if var_119_19.prefab_name ~= "" and arg_116_1.actors_[var_119_19.prefab_name] ~= nil then
						local var_119_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_116_1.actors_[var_119_19.prefab_name].transform, "story_v_out_417012", "417012026", "story_v_out_417012.awb")

						arg_116_1:RecordAudio("417012026", var_119_25)
						arg_116_1:RecordAudio("417012026", var_119_25)
					else
						arg_116_1:AudioAction("play", "voice", "story_v_out_417012", "417012026", "story_v_out_417012.awb")
					end

					arg_116_1:RecordHistoryTalkVoice("story_v_out_417012", "417012026", "story_v_out_417012.awb")
				end

				arg_116_1:RecordContent(arg_116_1.text_.text)
			end

			local var_119_26 = math.max(var_119_17, arg_116_1.talkMaxDuration)

			if var_119_16 <= arg_116_1.time_ and arg_116_1.time_ < var_119_16 + var_119_26 then
				arg_116_1.typewritter.percent = (arg_116_1.time_ - var_119_16) / var_119_26

				arg_116_1.typewritter:SetDirty()
			end

			if arg_116_1.time_ >= var_119_16 + var_119_26 and arg_116_1.time_ < var_119_16 + var_119_26 + arg_119_0 then
				arg_116_1.typewritter.percent = 1

				arg_116_1.typewritter:SetDirty()
				arg_116_1:ShowNextGo(true)
			end
		end
	end,
	Play417012027 = function(arg_120_0, arg_120_1)
		arg_120_1.time_ = 0
		arg_120_1.frameCnt_ = 0
		arg_120_1.state_ = "playing"
		arg_120_1.curTalkId_ = 417012027
		arg_120_1.duration_ = 5.03

		local var_120_0 = {
			zh = 5.033,
			ja = 4.133
		}
		local var_120_1 = manager.audio:GetLocalizationFlag()

		if var_120_0[var_120_1] ~= nil then
			arg_120_1.duration_ = var_120_0[var_120_1]
		end

		SetActive(arg_120_1.tipsGo_, false)

		function arg_120_1.onSingleLineFinish_()
			arg_120_1.onSingleLineUpdate_ = nil
			arg_120_1.onSingleLineFinish_ = nil
			arg_120_1.state_ = "waiting"
		end

		function arg_120_1.playNext_(arg_122_0)
			if arg_122_0 == 1 then
				arg_120_0:Play417012028(arg_120_1)
			end
		end

		function arg_120_1.onSingleLineUpdate_(arg_123_0)
			local var_123_0 = arg_120_1.actors_["1015"]
			local var_123_1 = 0

			if var_123_1 < arg_120_1.time_ and arg_120_1.time_ <= var_123_1 + arg_123_0 and not isNil(var_123_0) and arg_120_1.var_.actorSpriteComps1015 == nil then
				arg_120_1.var_.actorSpriteComps1015 = var_123_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_123_2 = 0.2

			if var_123_1 <= arg_120_1.time_ and arg_120_1.time_ < var_123_1 + var_123_2 and not isNil(var_123_0) then
				local var_123_3 = (arg_120_1.time_ - var_123_1) / var_123_2

				if arg_120_1.var_.actorSpriteComps1015 then
					for iter_123_0, iter_123_1 in pairs(arg_120_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_123_1 then
							if arg_120_1.isInRecall_ then
								local var_123_4 = Mathf.Lerp(iter_123_1.color.r, arg_120_1.hightColor1.r, var_123_3)
								local var_123_5 = Mathf.Lerp(iter_123_1.color.g, arg_120_1.hightColor1.g, var_123_3)
								local var_123_6 = Mathf.Lerp(iter_123_1.color.b, arg_120_1.hightColor1.b, var_123_3)

								iter_123_1.color = Color.New(var_123_4, var_123_5, var_123_6)
							else
								local var_123_7 = Mathf.Lerp(iter_123_1.color.r, 1, var_123_3)

								iter_123_1.color = Color.New(var_123_7, var_123_7, var_123_7)
							end
						end
					end
				end
			end

			if arg_120_1.time_ >= var_123_1 + var_123_2 and arg_120_1.time_ < var_123_1 + var_123_2 + arg_123_0 and not isNil(var_123_0) and arg_120_1.var_.actorSpriteComps1015 then
				for iter_123_2, iter_123_3 in pairs(arg_120_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_123_3 then
						if arg_120_1.isInRecall_ then
							iter_123_3.color = arg_120_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_123_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_120_1.var_.actorSpriteComps1015 = nil
			end

			local var_123_8 = arg_120_1.actors_["1034"]
			local var_123_9 = 0

			if var_123_9 < arg_120_1.time_ and arg_120_1.time_ <= var_123_9 + arg_123_0 and not isNil(var_123_8) and arg_120_1.var_.actorSpriteComps1034 == nil then
				arg_120_1.var_.actorSpriteComps1034 = var_123_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_123_10 = 0.2

			if var_123_9 <= arg_120_1.time_ and arg_120_1.time_ < var_123_9 + var_123_10 and not isNil(var_123_8) then
				local var_123_11 = (arg_120_1.time_ - var_123_9) / var_123_10

				if arg_120_1.var_.actorSpriteComps1034 then
					for iter_123_4, iter_123_5 in pairs(arg_120_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_123_5 then
							if arg_120_1.isInRecall_ then
								local var_123_12 = Mathf.Lerp(iter_123_5.color.r, arg_120_1.hightColor2.r, var_123_11)
								local var_123_13 = Mathf.Lerp(iter_123_5.color.g, arg_120_1.hightColor2.g, var_123_11)
								local var_123_14 = Mathf.Lerp(iter_123_5.color.b, arg_120_1.hightColor2.b, var_123_11)

								iter_123_5.color = Color.New(var_123_12, var_123_13, var_123_14)
							else
								local var_123_15 = Mathf.Lerp(iter_123_5.color.r, 0.5, var_123_11)

								iter_123_5.color = Color.New(var_123_15, var_123_15, var_123_15)
							end
						end
					end
				end
			end

			if arg_120_1.time_ >= var_123_9 + var_123_10 and arg_120_1.time_ < var_123_9 + var_123_10 + arg_123_0 and not isNil(var_123_8) and arg_120_1.var_.actorSpriteComps1034 then
				for iter_123_6, iter_123_7 in pairs(arg_120_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_123_7 then
						if arg_120_1.isInRecall_ then
							iter_123_7.color = arg_120_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_123_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_120_1.var_.actorSpriteComps1034 = nil
			end

			local var_123_16 = arg_120_1.actors_["1015"].transform
			local var_123_17 = 0

			if var_123_17 < arg_120_1.time_ and arg_120_1.time_ <= var_123_17 + arg_123_0 then
				arg_120_1.var_.moveOldPos1015 = var_123_16.localPosition
				var_123_16.localScale = Vector3.New(1, 1, 1)

				arg_120_1:CheckSpriteTmpPos("1015", 4)

				local var_123_18 = var_123_16.childCount

				for iter_123_8 = 0, var_123_18 - 1 do
					local var_123_19 = var_123_16:GetChild(iter_123_8)

					if var_123_19.name == "" or not string.find(var_123_19.name, "split") then
						var_123_19.gameObject:SetActive(true)
					else
						var_123_19.gameObject:SetActive(false)
					end
				end
			end

			local var_123_20 = 0.001

			if var_123_17 <= arg_120_1.time_ and arg_120_1.time_ < var_123_17 + var_123_20 then
				local var_123_21 = (arg_120_1.time_ - var_123_17) / var_123_20
				local var_123_22 = Vector3.New(390, -349.1, -288)

				var_123_16.localPosition = Vector3.Lerp(arg_120_1.var_.moveOldPos1015, var_123_22, var_123_21)
			end

			if arg_120_1.time_ >= var_123_17 + var_123_20 and arg_120_1.time_ < var_123_17 + var_123_20 + arg_123_0 then
				var_123_16.localPosition = Vector3.New(390, -349.1, -288)
			end

			local var_123_23 = 0
			local var_123_24 = 0.675

			if var_123_23 < arg_120_1.time_ and arg_120_1.time_ <= var_123_23 + arg_123_0 then
				arg_120_1.talkMaxDuration = 0
				arg_120_1.dialogCg_.alpha = 1

				arg_120_1.dialog_:SetActive(true)
				SetActive(arg_120_1.leftNameGo_, true)

				local var_123_25 = arg_120_1:FormatText(StoryNameCfg[479].name)

				arg_120_1.leftNameTxt_.text = var_123_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_120_1.leftNameTxt_.transform)

				arg_120_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_120_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_120_1:RecordName(arg_120_1.leftNameTxt_.text)
				SetActive(arg_120_1.iconTrs_.gameObject, false)
				arg_120_1.callingController_:SetSelectedState("normal")

				local var_123_26 = arg_120_1:GetWordFromCfg(417012027)
				local var_123_27 = arg_120_1:FormatText(var_123_26.content)

				arg_120_1.text_.text = var_123_27

				LuaForUtil.ClearLinePrefixSymbol(arg_120_1.text_)

				local var_123_28 = 27
				local var_123_29 = utf8.len(var_123_27)
				local var_123_30 = var_123_28 <= 0 and var_123_24 or var_123_24 * (var_123_29 / var_123_28)

				if var_123_30 > 0 and var_123_24 < var_123_30 then
					arg_120_1.talkMaxDuration = var_123_30

					if var_123_30 + var_123_23 > arg_120_1.duration_ then
						arg_120_1.duration_ = var_123_30 + var_123_23
					end
				end

				arg_120_1.text_.text = var_123_27
				arg_120_1.typewritter.percent = 0

				arg_120_1.typewritter:SetDirty()
				arg_120_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012027", "story_v_out_417012.awb") ~= 0 then
					local var_123_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012027", "story_v_out_417012.awb") / 1000

					if var_123_31 + var_123_23 > arg_120_1.duration_ then
						arg_120_1.duration_ = var_123_31 + var_123_23
					end

					if var_123_26.prefab_name ~= "" and arg_120_1.actors_[var_123_26.prefab_name] ~= nil then
						local var_123_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_120_1.actors_[var_123_26.prefab_name].transform, "story_v_out_417012", "417012027", "story_v_out_417012.awb")

						arg_120_1:RecordAudio("417012027", var_123_32)
						arg_120_1:RecordAudio("417012027", var_123_32)
					else
						arg_120_1:AudioAction("play", "voice", "story_v_out_417012", "417012027", "story_v_out_417012.awb")
					end

					arg_120_1:RecordHistoryTalkVoice("story_v_out_417012", "417012027", "story_v_out_417012.awb")
				end

				arg_120_1:RecordContent(arg_120_1.text_.text)
			end

			local var_123_33 = math.max(var_123_24, arg_120_1.talkMaxDuration)

			if var_123_23 <= arg_120_1.time_ and arg_120_1.time_ < var_123_23 + var_123_33 then
				arg_120_1.typewritter.percent = (arg_120_1.time_ - var_123_23) / var_123_33

				arg_120_1.typewritter:SetDirty()
			end

			if arg_120_1.time_ >= var_123_23 + var_123_33 and arg_120_1.time_ < var_123_23 + var_123_33 + arg_123_0 then
				arg_120_1.typewritter.percent = 1

				arg_120_1.typewritter:SetDirty()
				arg_120_1:ShowNextGo(true)
			end
		end
	end,
	Play417012028 = function(arg_124_0, arg_124_1)
		arg_124_1.time_ = 0
		arg_124_1.frameCnt_ = 0
		arg_124_1.state_ = "playing"
		arg_124_1.curTalkId_ = 417012028
		arg_124_1.duration_ = 12.63

		local var_124_0 = {
			zh = 9.866,
			ja = 12.633
		}
		local var_124_1 = manager.audio:GetLocalizationFlag()

		if var_124_0[var_124_1] ~= nil then
			arg_124_1.duration_ = var_124_0[var_124_1]
		end

		SetActive(arg_124_1.tipsGo_, false)

		function arg_124_1.onSingleLineFinish_()
			arg_124_1.onSingleLineUpdate_ = nil
			arg_124_1.onSingleLineFinish_ = nil
			arg_124_1.state_ = "waiting"
		end

		function arg_124_1.playNext_(arg_126_0)
			if arg_126_0 == 1 then
				arg_124_0:Play417012029(arg_124_1)
			end
		end

		function arg_124_1.onSingleLineUpdate_(arg_127_0)
			local var_127_0 = 0
			local var_127_1 = 1.075

			if var_127_0 < arg_124_1.time_ and arg_124_1.time_ <= var_127_0 + arg_127_0 then
				arg_124_1.talkMaxDuration = 0
				arg_124_1.dialogCg_.alpha = 1

				arg_124_1.dialog_:SetActive(true)
				SetActive(arg_124_1.leftNameGo_, true)

				local var_127_2 = arg_124_1:FormatText(StoryNameCfg[479].name)

				arg_124_1.leftNameTxt_.text = var_127_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_124_1.leftNameTxt_.transform)

				arg_124_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_124_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_124_1:RecordName(arg_124_1.leftNameTxt_.text)
				SetActive(arg_124_1.iconTrs_.gameObject, false)
				arg_124_1.callingController_:SetSelectedState("normal")

				local var_127_3 = arg_124_1:GetWordFromCfg(417012028)
				local var_127_4 = arg_124_1:FormatText(var_127_3.content)

				arg_124_1.text_.text = var_127_4

				LuaForUtil.ClearLinePrefixSymbol(arg_124_1.text_)

				local var_127_5 = 43
				local var_127_6 = utf8.len(var_127_4)
				local var_127_7 = var_127_5 <= 0 and var_127_1 or var_127_1 * (var_127_6 / var_127_5)

				if var_127_7 > 0 and var_127_1 < var_127_7 then
					arg_124_1.talkMaxDuration = var_127_7

					if var_127_7 + var_127_0 > arg_124_1.duration_ then
						arg_124_1.duration_ = var_127_7 + var_127_0
					end
				end

				arg_124_1.text_.text = var_127_4
				arg_124_1.typewritter.percent = 0

				arg_124_1.typewritter:SetDirty()
				arg_124_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012028", "story_v_out_417012.awb") ~= 0 then
					local var_127_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012028", "story_v_out_417012.awb") / 1000

					if var_127_8 + var_127_0 > arg_124_1.duration_ then
						arg_124_1.duration_ = var_127_8 + var_127_0
					end

					if var_127_3.prefab_name ~= "" and arg_124_1.actors_[var_127_3.prefab_name] ~= nil then
						local var_127_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_124_1.actors_[var_127_3.prefab_name].transform, "story_v_out_417012", "417012028", "story_v_out_417012.awb")

						arg_124_1:RecordAudio("417012028", var_127_9)
						arg_124_1:RecordAudio("417012028", var_127_9)
					else
						arg_124_1:AudioAction("play", "voice", "story_v_out_417012", "417012028", "story_v_out_417012.awb")
					end

					arg_124_1:RecordHistoryTalkVoice("story_v_out_417012", "417012028", "story_v_out_417012.awb")
				end

				arg_124_1:RecordContent(arg_124_1.text_.text)
			end

			local var_127_10 = math.max(var_127_1, arg_124_1.talkMaxDuration)

			if var_127_0 <= arg_124_1.time_ and arg_124_1.time_ < var_127_0 + var_127_10 then
				arg_124_1.typewritter.percent = (arg_124_1.time_ - var_127_0) / var_127_10

				arg_124_1.typewritter:SetDirty()
			end

			if arg_124_1.time_ >= var_127_0 + var_127_10 and arg_124_1.time_ < var_127_0 + var_127_10 + arg_127_0 then
				arg_124_1.typewritter.percent = 1

				arg_124_1.typewritter:SetDirty()
				arg_124_1:ShowNextGo(true)
			end
		end
	end,
	Play417012029 = function(arg_128_0, arg_128_1)
		arg_128_1.time_ = 0
		arg_128_1.frameCnt_ = 0
		arg_128_1.state_ = "playing"
		arg_128_1.curTalkId_ = 417012029
		arg_128_1.duration_ = 5

		SetActive(arg_128_1.tipsGo_, false)

		function arg_128_1.onSingleLineFinish_()
			arg_128_1.onSingleLineUpdate_ = nil
			arg_128_1.onSingleLineFinish_ = nil
			arg_128_1.state_ = "waiting"
		end

		function arg_128_1.playNext_(arg_130_0)
			if arg_130_0 == 1 then
				arg_128_0:Play417012030(arg_128_1)
			end
		end

		function arg_128_1.onSingleLineUpdate_(arg_131_0)
			local var_131_0 = arg_128_1.actors_["1034"]
			local var_131_1 = 0

			if var_131_1 < arg_128_1.time_ and arg_128_1.time_ <= var_131_1 + arg_131_0 and not isNil(var_131_0) and arg_128_1.var_.actorSpriteComps1034 == nil then
				arg_128_1.var_.actorSpriteComps1034 = var_131_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_131_2 = 0.2

			if var_131_1 <= arg_128_1.time_ and arg_128_1.time_ < var_131_1 + var_131_2 and not isNil(var_131_0) then
				local var_131_3 = (arg_128_1.time_ - var_131_1) / var_131_2

				if arg_128_1.var_.actorSpriteComps1034 then
					for iter_131_0, iter_131_1 in pairs(arg_128_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_131_1 then
							if arg_128_1.isInRecall_ then
								local var_131_4 = Mathf.Lerp(iter_131_1.color.r, arg_128_1.hightColor1.r, var_131_3)
								local var_131_5 = Mathf.Lerp(iter_131_1.color.g, arg_128_1.hightColor1.g, var_131_3)
								local var_131_6 = Mathf.Lerp(iter_131_1.color.b, arg_128_1.hightColor1.b, var_131_3)

								iter_131_1.color = Color.New(var_131_4, var_131_5, var_131_6)
							else
								local var_131_7 = Mathf.Lerp(iter_131_1.color.r, 1, var_131_3)

								iter_131_1.color = Color.New(var_131_7, var_131_7, var_131_7)
							end
						end
					end
				end
			end

			if arg_128_1.time_ >= var_131_1 + var_131_2 and arg_128_1.time_ < var_131_1 + var_131_2 + arg_131_0 and not isNil(var_131_0) and arg_128_1.var_.actorSpriteComps1034 then
				for iter_131_2, iter_131_3 in pairs(arg_128_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_131_3 then
						if arg_128_1.isInRecall_ then
							iter_131_3.color = arg_128_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_131_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_128_1.var_.actorSpriteComps1034 = nil
			end

			local var_131_8 = arg_128_1.actors_["1015"]
			local var_131_9 = 0

			if var_131_9 < arg_128_1.time_ and arg_128_1.time_ <= var_131_9 + arg_131_0 and not isNil(var_131_8) and arg_128_1.var_.actorSpriteComps1015 == nil then
				arg_128_1.var_.actorSpriteComps1015 = var_131_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_131_10 = 0.2

			if var_131_9 <= arg_128_1.time_ and arg_128_1.time_ < var_131_9 + var_131_10 and not isNil(var_131_8) then
				local var_131_11 = (arg_128_1.time_ - var_131_9) / var_131_10

				if arg_128_1.var_.actorSpriteComps1015 then
					for iter_131_4, iter_131_5 in pairs(arg_128_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_131_5 then
							if arg_128_1.isInRecall_ then
								local var_131_12 = Mathf.Lerp(iter_131_5.color.r, arg_128_1.hightColor2.r, var_131_11)
								local var_131_13 = Mathf.Lerp(iter_131_5.color.g, arg_128_1.hightColor2.g, var_131_11)
								local var_131_14 = Mathf.Lerp(iter_131_5.color.b, arg_128_1.hightColor2.b, var_131_11)

								iter_131_5.color = Color.New(var_131_12, var_131_13, var_131_14)
							else
								local var_131_15 = Mathf.Lerp(iter_131_5.color.r, 0.5, var_131_11)

								iter_131_5.color = Color.New(var_131_15, var_131_15, var_131_15)
							end
						end
					end
				end
			end

			if arg_128_1.time_ >= var_131_9 + var_131_10 and arg_128_1.time_ < var_131_9 + var_131_10 + arg_131_0 and not isNil(var_131_8) and arg_128_1.var_.actorSpriteComps1015 then
				for iter_131_6, iter_131_7 in pairs(arg_128_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_131_7 then
						if arg_128_1.isInRecall_ then
							iter_131_7.color = arg_128_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_131_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_128_1.var_.actorSpriteComps1015 = nil
			end

			local var_131_16 = arg_128_1.actors_["1034"].transform
			local var_131_17 = 0

			if var_131_17 < arg_128_1.time_ and arg_128_1.time_ <= var_131_17 + arg_131_0 then
				arg_128_1.var_.moveOldPos1034 = var_131_16.localPosition
				var_131_16.localScale = Vector3.New(1, 1, 1)

				arg_128_1:CheckSpriteTmpPos("1034", 2)

				local var_131_18 = var_131_16.childCount

				for iter_131_8 = 0, var_131_18 - 1 do
					local var_131_19 = var_131_16:GetChild(iter_131_8)

					if var_131_19.name == "split_6" or not string.find(var_131_19.name, "split") then
						var_131_19.gameObject:SetActive(true)
					else
						var_131_19.gameObject:SetActive(false)
					end
				end
			end

			local var_131_20 = 0.001

			if var_131_17 <= arg_128_1.time_ and arg_128_1.time_ < var_131_17 + var_131_20 then
				local var_131_21 = (arg_128_1.time_ - var_131_17) / var_131_20
				local var_131_22 = Vector3.New(-390, -331.9, -324)

				var_131_16.localPosition = Vector3.Lerp(arg_128_1.var_.moveOldPos1034, var_131_22, var_131_21)
			end

			if arg_128_1.time_ >= var_131_17 + var_131_20 and arg_128_1.time_ < var_131_17 + var_131_20 + arg_131_0 then
				var_131_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_131_23 = 0
			local var_131_24 = 0.05

			if var_131_23 < arg_128_1.time_ and arg_128_1.time_ <= var_131_23 + arg_131_0 then
				arg_128_1.talkMaxDuration = 0
				arg_128_1.dialogCg_.alpha = 1

				arg_128_1.dialog_:SetActive(true)
				SetActive(arg_128_1.leftNameGo_, true)

				local var_131_25 = arg_128_1:FormatText(StoryNameCfg[1109].name)

				arg_128_1.leftNameTxt_.text = var_131_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_128_1.leftNameTxt_.transform)

				arg_128_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_128_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_128_1:RecordName(arg_128_1.leftNameTxt_.text)
				SetActive(arg_128_1.iconTrs_.gameObject, false)
				arg_128_1.callingController_:SetSelectedState("normal")

				local var_131_26 = arg_128_1:GetWordFromCfg(417012029)
				local var_131_27 = arg_128_1:FormatText(var_131_26.content)

				arg_128_1.text_.text = var_131_27

				LuaForUtil.ClearLinePrefixSymbol(arg_128_1.text_)

				local var_131_28 = 2
				local var_131_29 = utf8.len(var_131_27)
				local var_131_30 = var_131_28 <= 0 and var_131_24 or var_131_24 * (var_131_29 / var_131_28)

				if var_131_30 > 0 and var_131_24 < var_131_30 then
					arg_128_1.talkMaxDuration = var_131_30

					if var_131_30 + var_131_23 > arg_128_1.duration_ then
						arg_128_1.duration_ = var_131_30 + var_131_23
					end
				end

				arg_128_1.text_.text = var_131_27
				arg_128_1.typewritter.percent = 0

				arg_128_1.typewritter:SetDirty()
				arg_128_1:ShowNextGo(false)
				arg_128_1:RecordContent(arg_128_1.text_.text)
			end

			local var_131_31 = math.max(var_131_24, arg_128_1.talkMaxDuration)

			if var_131_23 <= arg_128_1.time_ and arg_128_1.time_ < var_131_23 + var_131_31 then
				arg_128_1.typewritter.percent = (arg_128_1.time_ - var_131_23) / var_131_31

				arg_128_1.typewritter:SetDirty()
			end

			if arg_128_1.time_ >= var_131_23 + var_131_31 and arg_128_1.time_ < var_131_23 + var_131_31 + arg_131_0 then
				arg_128_1.typewritter.percent = 1

				arg_128_1.typewritter:SetDirty()
				arg_128_1:ShowNextGo(true)
			end
		end
	end,
	Play417012030 = function(arg_132_0, arg_132_1)
		arg_132_1.time_ = 0
		arg_132_1.frameCnt_ = 0
		arg_132_1.state_ = "playing"
		arg_132_1.curTalkId_ = 417012030
		arg_132_1.duration_ = 5

		SetActive(arg_132_1.tipsGo_, false)

		function arg_132_1.onSingleLineFinish_()
			arg_132_1.onSingleLineUpdate_ = nil
			arg_132_1.onSingleLineFinish_ = nil
			arg_132_1.state_ = "waiting"
		end

		function arg_132_1.playNext_(arg_134_0)
			if arg_134_0 == 1 then
				arg_132_0:Play417012031(arg_132_1)
			end
		end

		function arg_132_1.onSingleLineUpdate_(arg_135_0)
			local var_135_0 = arg_132_1.actors_["1034"]
			local var_135_1 = 0

			if var_135_1 < arg_132_1.time_ and arg_132_1.time_ <= var_135_1 + arg_135_0 and not isNil(var_135_0) and arg_132_1.var_.actorSpriteComps1034 == nil then
				arg_132_1.var_.actorSpriteComps1034 = var_135_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_135_2 = 0.2

			if var_135_1 <= arg_132_1.time_ and arg_132_1.time_ < var_135_1 + var_135_2 and not isNil(var_135_0) then
				local var_135_3 = (arg_132_1.time_ - var_135_1) / var_135_2

				if arg_132_1.var_.actorSpriteComps1034 then
					for iter_135_0, iter_135_1 in pairs(arg_132_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_135_1 then
							if arg_132_1.isInRecall_ then
								local var_135_4 = Mathf.Lerp(iter_135_1.color.r, arg_132_1.hightColor2.r, var_135_3)
								local var_135_5 = Mathf.Lerp(iter_135_1.color.g, arg_132_1.hightColor2.g, var_135_3)
								local var_135_6 = Mathf.Lerp(iter_135_1.color.b, arg_132_1.hightColor2.b, var_135_3)

								iter_135_1.color = Color.New(var_135_4, var_135_5, var_135_6)
							else
								local var_135_7 = Mathf.Lerp(iter_135_1.color.r, 0.5, var_135_3)

								iter_135_1.color = Color.New(var_135_7, var_135_7, var_135_7)
							end
						end
					end
				end
			end

			if arg_132_1.time_ >= var_135_1 + var_135_2 and arg_132_1.time_ < var_135_1 + var_135_2 + arg_135_0 and not isNil(var_135_0) and arg_132_1.var_.actorSpriteComps1034 then
				for iter_135_2, iter_135_3 in pairs(arg_132_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_135_3 then
						if arg_132_1.isInRecall_ then
							iter_135_3.color = arg_132_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_135_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_132_1.var_.actorSpriteComps1034 = nil
			end

			local var_135_8 = 0
			local var_135_9 = 1.775

			if var_135_8 < arg_132_1.time_ and arg_132_1.time_ <= var_135_8 + arg_135_0 then
				arg_132_1.talkMaxDuration = 0
				arg_132_1.dialogCg_.alpha = 1

				arg_132_1.dialog_:SetActive(true)
				SetActive(arg_132_1.leftNameGo_, false)

				arg_132_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_132_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_132_1:RecordName(arg_132_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_132_1.iconTrs_.gameObject, false)
				arg_132_1.callingController_:SetSelectedState("normal")

				local var_135_10 = arg_132_1:GetWordFromCfg(417012030)
				local var_135_11 = arg_132_1:FormatText(var_135_10.content)

				arg_132_1.text_.text = var_135_11

				LuaForUtil.ClearLinePrefixSymbol(arg_132_1.text_)

				local var_135_12 = 71
				local var_135_13 = utf8.len(var_135_11)
				local var_135_14 = var_135_12 <= 0 and var_135_9 or var_135_9 * (var_135_13 / var_135_12)

				if var_135_14 > 0 and var_135_9 < var_135_14 then
					arg_132_1.talkMaxDuration = var_135_14

					if var_135_14 + var_135_8 > arg_132_1.duration_ then
						arg_132_1.duration_ = var_135_14 + var_135_8
					end
				end

				arg_132_1.text_.text = var_135_11
				arg_132_1.typewritter.percent = 0

				arg_132_1.typewritter:SetDirty()
				arg_132_1:ShowNextGo(false)
				arg_132_1:RecordContent(arg_132_1.text_.text)
			end

			local var_135_15 = math.max(var_135_9, arg_132_1.talkMaxDuration)

			if var_135_8 <= arg_132_1.time_ and arg_132_1.time_ < var_135_8 + var_135_15 then
				arg_132_1.typewritter.percent = (arg_132_1.time_ - var_135_8) / var_135_15

				arg_132_1.typewritter:SetDirty()
			end

			if arg_132_1.time_ >= var_135_8 + var_135_15 and arg_132_1.time_ < var_135_8 + var_135_15 + arg_135_0 then
				arg_132_1.typewritter.percent = 1

				arg_132_1.typewritter:SetDirty()
				arg_132_1:ShowNextGo(true)
			end
		end
	end,
	Play417012031 = function(arg_136_0, arg_136_1)
		arg_136_1.time_ = 0
		arg_136_1.frameCnt_ = 0
		arg_136_1.state_ = "playing"
		arg_136_1.curTalkId_ = 417012031
		arg_136_1.duration_ = 2.63

		local var_136_0 = {
			zh = 2.633,
			ja = 2.566
		}
		local var_136_1 = manager.audio:GetLocalizationFlag()

		if var_136_0[var_136_1] ~= nil then
			arg_136_1.duration_ = var_136_0[var_136_1]
		end

		SetActive(arg_136_1.tipsGo_, false)

		function arg_136_1.onSingleLineFinish_()
			arg_136_1.onSingleLineUpdate_ = nil
			arg_136_1.onSingleLineFinish_ = nil
			arg_136_1.state_ = "waiting"
		end

		function arg_136_1.playNext_(arg_138_0)
			if arg_138_0 == 1 then
				arg_136_0:Play417012032(arg_136_1)
			end
		end

		function arg_136_1.onSingleLineUpdate_(arg_139_0)
			local var_139_0 = arg_136_1.actors_["1034"]
			local var_139_1 = 0

			if var_139_1 < arg_136_1.time_ and arg_136_1.time_ <= var_139_1 + arg_139_0 and not isNil(var_139_0) and arg_136_1.var_.actorSpriteComps1034 == nil then
				arg_136_1.var_.actorSpriteComps1034 = var_139_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_139_2 = 0.2

			if var_139_1 <= arg_136_1.time_ and arg_136_1.time_ < var_139_1 + var_139_2 and not isNil(var_139_0) then
				local var_139_3 = (arg_136_1.time_ - var_139_1) / var_139_2

				if arg_136_1.var_.actorSpriteComps1034 then
					for iter_139_0, iter_139_1 in pairs(arg_136_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_139_1 then
							if arg_136_1.isInRecall_ then
								local var_139_4 = Mathf.Lerp(iter_139_1.color.r, arg_136_1.hightColor1.r, var_139_3)
								local var_139_5 = Mathf.Lerp(iter_139_1.color.g, arg_136_1.hightColor1.g, var_139_3)
								local var_139_6 = Mathf.Lerp(iter_139_1.color.b, arg_136_1.hightColor1.b, var_139_3)

								iter_139_1.color = Color.New(var_139_4, var_139_5, var_139_6)
							else
								local var_139_7 = Mathf.Lerp(iter_139_1.color.r, 1, var_139_3)

								iter_139_1.color = Color.New(var_139_7, var_139_7, var_139_7)
							end
						end
					end
				end
			end

			if arg_136_1.time_ >= var_139_1 + var_139_2 and arg_136_1.time_ < var_139_1 + var_139_2 + arg_139_0 and not isNil(var_139_0) and arg_136_1.var_.actorSpriteComps1034 then
				for iter_139_2, iter_139_3 in pairs(arg_136_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_139_3 then
						if arg_136_1.isInRecall_ then
							iter_139_3.color = arg_136_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_139_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_136_1.var_.actorSpriteComps1034 = nil
			end

			local var_139_8 = 0
			local var_139_9 = 0.275

			if var_139_8 < arg_136_1.time_ and arg_136_1.time_ <= var_139_8 + arg_139_0 then
				arg_136_1.talkMaxDuration = 0
				arg_136_1.dialogCg_.alpha = 1

				arg_136_1.dialog_:SetActive(true)
				SetActive(arg_136_1.leftNameGo_, true)

				local var_139_10 = arg_136_1:FormatText(StoryNameCfg[1109].name)

				arg_136_1.leftNameTxt_.text = var_139_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_136_1.leftNameTxt_.transform)

				arg_136_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_136_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_136_1:RecordName(arg_136_1.leftNameTxt_.text)
				SetActive(arg_136_1.iconTrs_.gameObject, false)
				arg_136_1.callingController_:SetSelectedState("normal")

				local var_139_11 = arg_136_1:GetWordFromCfg(417012031)
				local var_139_12 = arg_136_1:FormatText(var_139_11.content)

				arg_136_1.text_.text = var_139_12

				LuaForUtil.ClearLinePrefixSymbol(arg_136_1.text_)

				local var_139_13 = 11
				local var_139_14 = utf8.len(var_139_12)
				local var_139_15 = var_139_13 <= 0 and var_139_9 or var_139_9 * (var_139_14 / var_139_13)

				if var_139_15 > 0 and var_139_9 < var_139_15 then
					arg_136_1.talkMaxDuration = var_139_15

					if var_139_15 + var_139_8 > arg_136_1.duration_ then
						arg_136_1.duration_ = var_139_15 + var_139_8
					end
				end

				arg_136_1.text_.text = var_139_12
				arg_136_1.typewritter.percent = 0

				arg_136_1.typewritter:SetDirty()
				arg_136_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012031", "story_v_out_417012.awb") ~= 0 then
					local var_139_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012031", "story_v_out_417012.awb") / 1000

					if var_139_16 + var_139_8 > arg_136_1.duration_ then
						arg_136_1.duration_ = var_139_16 + var_139_8
					end

					if var_139_11.prefab_name ~= "" and arg_136_1.actors_[var_139_11.prefab_name] ~= nil then
						local var_139_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_136_1.actors_[var_139_11.prefab_name].transform, "story_v_out_417012", "417012031", "story_v_out_417012.awb")

						arg_136_1:RecordAudio("417012031", var_139_17)
						arg_136_1:RecordAudio("417012031", var_139_17)
					else
						arg_136_1:AudioAction("play", "voice", "story_v_out_417012", "417012031", "story_v_out_417012.awb")
					end

					arg_136_1:RecordHistoryTalkVoice("story_v_out_417012", "417012031", "story_v_out_417012.awb")
				end

				arg_136_1:RecordContent(arg_136_1.text_.text)
			end

			local var_139_18 = math.max(var_139_9, arg_136_1.talkMaxDuration)

			if var_139_8 <= arg_136_1.time_ and arg_136_1.time_ < var_139_8 + var_139_18 then
				arg_136_1.typewritter.percent = (arg_136_1.time_ - var_139_8) / var_139_18

				arg_136_1.typewritter:SetDirty()
			end

			if arg_136_1.time_ >= var_139_8 + var_139_18 and arg_136_1.time_ < var_139_8 + var_139_18 + arg_139_0 then
				arg_136_1.typewritter.percent = 1

				arg_136_1.typewritter:SetDirty()
				arg_136_1:ShowNextGo(true)
			end
		end
	end,
	Play417012032 = function(arg_140_0, arg_140_1)
		arg_140_1.time_ = 0
		arg_140_1.frameCnt_ = 0
		arg_140_1.state_ = "playing"
		arg_140_1.curTalkId_ = 417012032
		arg_140_1.duration_ = 13.53

		local var_140_0 = {
			zh = 13.533,
			ja = 10.033
		}
		local var_140_1 = manager.audio:GetLocalizationFlag()

		if var_140_0[var_140_1] ~= nil then
			arg_140_1.duration_ = var_140_0[var_140_1]
		end

		SetActive(arg_140_1.tipsGo_, false)

		function arg_140_1.onSingleLineFinish_()
			arg_140_1.onSingleLineUpdate_ = nil
			arg_140_1.onSingleLineFinish_ = nil
			arg_140_1.state_ = "waiting"
		end

		function arg_140_1.playNext_(arg_142_0)
			if arg_142_0 == 1 then
				arg_140_0:Play417012033(arg_140_1)
			end
		end

		function arg_140_1.onSingleLineUpdate_(arg_143_0)
			local var_143_0 = arg_140_1.actors_["1015"]
			local var_143_1 = 0

			if var_143_1 < arg_140_1.time_ and arg_140_1.time_ <= var_143_1 + arg_143_0 and not isNil(var_143_0) and arg_140_1.var_.actorSpriteComps1015 == nil then
				arg_140_1.var_.actorSpriteComps1015 = var_143_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_143_2 = 0.2

			if var_143_1 <= arg_140_1.time_ and arg_140_1.time_ < var_143_1 + var_143_2 and not isNil(var_143_0) then
				local var_143_3 = (arg_140_1.time_ - var_143_1) / var_143_2

				if arg_140_1.var_.actorSpriteComps1015 then
					for iter_143_0, iter_143_1 in pairs(arg_140_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_143_1 then
							if arg_140_1.isInRecall_ then
								local var_143_4 = Mathf.Lerp(iter_143_1.color.r, arg_140_1.hightColor1.r, var_143_3)
								local var_143_5 = Mathf.Lerp(iter_143_1.color.g, arg_140_1.hightColor1.g, var_143_3)
								local var_143_6 = Mathf.Lerp(iter_143_1.color.b, arg_140_1.hightColor1.b, var_143_3)

								iter_143_1.color = Color.New(var_143_4, var_143_5, var_143_6)
							else
								local var_143_7 = Mathf.Lerp(iter_143_1.color.r, 1, var_143_3)

								iter_143_1.color = Color.New(var_143_7, var_143_7, var_143_7)
							end
						end
					end
				end
			end

			if arg_140_1.time_ >= var_143_1 + var_143_2 and arg_140_1.time_ < var_143_1 + var_143_2 + arg_143_0 and not isNil(var_143_0) and arg_140_1.var_.actorSpriteComps1015 then
				for iter_143_2, iter_143_3 in pairs(arg_140_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_143_3 then
						if arg_140_1.isInRecall_ then
							iter_143_3.color = arg_140_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_143_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_140_1.var_.actorSpriteComps1015 = nil
			end

			local var_143_8 = arg_140_1.actors_["1034"]
			local var_143_9 = 0

			if var_143_9 < arg_140_1.time_ and arg_140_1.time_ <= var_143_9 + arg_143_0 and not isNil(var_143_8) and arg_140_1.var_.actorSpriteComps1034 == nil then
				arg_140_1.var_.actorSpriteComps1034 = var_143_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_143_10 = 0.2

			if var_143_9 <= arg_140_1.time_ and arg_140_1.time_ < var_143_9 + var_143_10 and not isNil(var_143_8) then
				local var_143_11 = (arg_140_1.time_ - var_143_9) / var_143_10

				if arg_140_1.var_.actorSpriteComps1034 then
					for iter_143_4, iter_143_5 in pairs(arg_140_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_143_5 then
							if arg_140_1.isInRecall_ then
								local var_143_12 = Mathf.Lerp(iter_143_5.color.r, arg_140_1.hightColor2.r, var_143_11)
								local var_143_13 = Mathf.Lerp(iter_143_5.color.g, arg_140_1.hightColor2.g, var_143_11)
								local var_143_14 = Mathf.Lerp(iter_143_5.color.b, arg_140_1.hightColor2.b, var_143_11)

								iter_143_5.color = Color.New(var_143_12, var_143_13, var_143_14)
							else
								local var_143_15 = Mathf.Lerp(iter_143_5.color.r, 0.5, var_143_11)

								iter_143_5.color = Color.New(var_143_15, var_143_15, var_143_15)
							end
						end
					end
				end
			end

			if arg_140_1.time_ >= var_143_9 + var_143_10 and arg_140_1.time_ < var_143_9 + var_143_10 + arg_143_0 and not isNil(var_143_8) and arg_140_1.var_.actorSpriteComps1034 then
				for iter_143_6, iter_143_7 in pairs(arg_140_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_143_7 then
						if arg_140_1.isInRecall_ then
							iter_143_7.color = arg_140_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_143_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_140_1.var_.actorSpriteComps1034 = nil
			end

			local var_143_16 = arg_140_1.actors_["1015"].transform
			local var_143_17 = 0

			if var_143_17 < arg_140_1.time_ and arg_140_1.time_ <= var_143_17 + arg_143_0 then
				arg_140_1.var_.moveOldPos1015 = var_143_16.localPosition
				var_143_16.localScale = Vector3.New(1, 1, 1)

				arg_140_1:CheckSpriteTmpPos("1015", 4)

				local var_143_18 = var_143_16.childCount

				for iter_143_8 = 0, var_143_18 - 1 do
					local var_143_19 = var_143_16:GetChild(iter_143_8)

					if var_143_19.name == "split_2" or not string.find(var_143_19.name, "split") then
						var_143_19.gameObject:SetActive(true)
					else
						var_143_19.gameObject:SetActive(false)
					end
				end
			end

			local var_143_20 = 0.001

			if var_143_17 <= arg_140_1.time_ and arg_140_1.time_ < var_143_17 + var_143_20 then
				local var_143_21 = (arg_140_1.time_ - var_143_17) / var_143_20
				local var_143_22 = Vector3.New(390, -349.1, -288)

				var_143_16.localPosition = Vector3.Lerp(arg_140_1.var_.moveOldPos1015, var_143_22, var_143_21)
			end

			if arg_140_1.time_ >= var_143_17 + var_143_20 and arg_140_1.time_ < var_143_17 + var_143_20 + arg_143_0 then
				var_143_16.localPosition = Vector3.New(390, -349.1, -288)
			end

			local var_143_23 = 0
			local var_143_24 = 1.45

			if var_143_23 < arg_140_1.time_ and arg_140_1.time_ <= var_143_23 + arg_143_0 then
				arg_140_1.talkMaxDuration = 0
				arg_140_1.dialogCg_.alpha = 1

				arg_140_1.dialog_:SetActive(true)
				SetActive(arg_140_1.leftNameGo_, true)

				local var_143_25 = arg_140_1:FormatText(StoryNameCfg[479].name)

				arg_140_1.leftNameTxt_.text = var_143_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_140_1.leftNameTxt_.transform)

				arg_140_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_140_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_140_1:RecordName(arg_140_1.leftNameTxt_.text)
				SetActive(arg_140_1.iconTrs_.gameObject, false)
				arg_140_1.callingController_:SetSelectedState("normal")

				local var_143_26 = arg_140_1:GetWordFromCfg(417012032)
				local var_143_27 = arg_140_1:FormatText(var_143_26.content)

				arg_140_1.text_.text = var_143_27

				LuaForUtil.ClearLinePrefixSymbol(arg_140_1.text_)

				local var_143_28 = 58
				local var_143_29 = utf8.len(var_143_27)
				local var_143_30 = var_143_28 <= 0 and var_143_24 or var_143_24 * (var_143_29 / var_143_28)

				if var_143_30 > 0 and var_143_24 < var_143_30 then
					arg_140_1.talkMaxDuration = var_143_30

					if var_143_30 + var_143_23 > arg_140_1.duration_ then
						arg_140_1.duration_ = var_143_30 + var_143_23
					end
				end

				arg_140_1.text_.text = var_143_27
				arg_140_1.typewritter.percent = 0

				arg_140_1.typewritter:SetDirty()
				arg_140_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012032", "story_v_out_417012.awb") ~= 0 then
					local var_143_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012032", "story_v_out_417012.awb") / 1000

					if var_143_31 + var_143_23 > arg_140_1.duration_ then
						arg_140_1.duration_ = var_143_31 + var_143_23
					end

					if var_143_26.prefab_name ~= "" and arg_140_1.actors_[var_143_26.prefab_name] ~= nil then
						local var_143_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_140_1.actors_[var_143_26.prefab_name].transform, "story_v_out_417012", "417012032", "story_v_out_417012.awb")

						arg_140_1:RecordAudio("417012032", var_143_32)
						arg_140_1:RecordAudio("417012032", var_143_32)
					else
						arg_140_1:AudioAction("play", "voice", "story_v_out_417012", "417012032", "story_v_out_417012.awb")
					end

					arg_140_1:RecordHistoryTalkVoice("story_v_out_417012", "417012032", "story_v_out_417012.awb")
				end

				arg_140_1:RecordContent(arg_140_1.text_.text)
			end

			local var_143_33 = math.max(var_143_24, arg_140_1.talkMaxDuration)

			if var_143_23 <= arg_140_1.time_ and arg_140_1.time_ < var_143_23 + var_143_33 then
				arg_140_1.typewritter.percent = (arg_140_1.time_ - var_143_23) / var_143_33

				arg_140_1.typewritter:SetDirty()
			end

			if arg_140_1.time_ >= var_143_23 + var_143_33 and arg_140_1.time_ < var_143_23 + var_143_33 + arg_143_0 then
				arg_140_1.typewritter.percent = 1

				arg_140_1.typewritter:SetDirty()
				arg_140_1:ShowNextGo(true)
			end
		end
	end,
	Play417012033 = function(arg_144_0, arg_144_1)
		arg_144_1.time_ = 0
		arg_144_1.frameCnt_ = 0
		arg_144_1.state_ = "playing"
		arg_144_1.curTalkId_ = 417012033
		arg_144_1.duration_ = 3.8

		local var_144_0 = {
			zh = 3.8,
			ja = 3.6
		}
		local var_144_1 = manager.audio:GetLocalizationFlag()

		if var_144_0[var_144_1] ~= nil then
			arg_144_1.duration_ = var_144_0[var_144_1]
		end

		SetActive(arg_144_1.tipsGo_, false)

		function arg_144_1.onSingleLineFinish_()
			arg_144_1.onSingleLineUpdate_ = nil
			arg_144_1.onSingleLineFinish_ = nil
			arg_144_1.state_ = "waiting"
		end

		function arg_144_1.playNext_(arg_146_0)
			if arg_146_0 == 1 then
				arg_144_0:Play417012034(arg_144_1)
			end
		end

		function arg_144_1.onSingleLineUpdate_(arg_147_0)
			local var_147_0 = arg_144_1.actors_["1034"]
			local var_147_1 = 0

			if var_147_1 < arg_144_1.time_ and arg_144_1.time_ <= var_147_1 + arg_147_0 and not isNil(var_147_0) and arg_144_1.var_.actorSpriteComps1034 == nil then
				arg_144_1.var_.actorSpriteComps1034 = var_147_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_147_2 = 0.2

			if var_147_1 <= arg_144_1.time_ and arg_144_1.time_ < var_147_1 + var_147_2 and not isNil(var_147_0) then
				local var_147_3 = (arg_144_1.time_ - var_147_1) / var_147_2

				if arg_144_1.var_.actorSpriteComps1034 then
					for iter_147_0, iter_147_1 in pairs(arg_144_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_147_1 then
							if arg_144_1.isInRecall_ then
								local var_147_4 = Mathf.Lerp(iter_147_1.color.r, arg_144_1.hightColor1.r, var_147_3)
								local var_147_5 = Mathf.Lerp(iter_147_1.color.g, arg_144_1.hightColor1.g, var_147_3)
								local var_147_6 = Mathf.Lerp(iter_147_1.color.b, arg_144_1.hightColor1.b, var_147_3)

								iter_147_1.color = Color.New(var_147_4, var_147_5, var_147_6)
							else
								local var_147_7 = Mathf.Lerp(iter_147_1.color.r, 1, var_147_3)

								iter_147_1.color = Color.New(var_147_7, var_147_7, var_147_7)
							end
						end
					end
				end
			end

			if arg_144_1.time_ >= var_147_1 + var_147_2 and arg_144_1.time_ < var_147_1 + var_147_2 + arg_147_0 and not isNil(var_147_0) and arg_144_1.var_.actorSpriteComps1034 then
				for iter_147_2, iter_147_3 in pairs(arg_144_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_147_3 then
						if arg_144_1.isInRecall_ then
							iter_147_3.color = arg_144_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_147_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_144_1.var_.actorSpriteComps1034 = nil
			end

			local var_147_8 = arg_144_1.actors_["1015"]
			local var_147_9 = 0

			if var_147_9 < arg_144_1.time_ and arg_144_1.time_ <= var_147_9 + arg_147_0 and not isNil(var_147_8) and arg_144_1.var_.actorSpriteComps1015 == nil then
				arg_144_1.var_.actorSpriteComps1015 = var_147_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_147_10 = 0.2

			if var_147_9 <= arg_144_1.time_ and arg_144_1.time_ < var_147_9 + var_147_10 and not isNil(var_147_8) then
				local var_147_11 = (arg_144_1.time_ - var_147_9) / var_147_10

				if arg_144_1.var_.actorSpriteComps1015 then
					for iter_147_4, iter_147_5 in pairs(arg_144_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_147_5 then
							if arg_144_1.isInRecall_ then
								local var_147_12 = Mathf.Lerp(iter_147_5.color.r, arg_144_1.hightColor2.r, var_147_11)
								local var_147_13 = Mathf.Lerp(iter_147_5.color.g, arg_144_1.hightColor2.g, var_147_11)
								local var_147_14 = Mathf.Lerp(iter_147_5.color.b, arg_144_1.hightColor2.b, var_147_11)

								iter_147_5.color = Color.New(var_147_12, var_147_13, var_147_14)
							else
								local var_147_15 = Mathf.Lerp(iter_147_5.color.r, 0.5, var_147_11)

								iter_147_5.color = Color.New(var_147_15, var_147_15, var_147_15)
							end
						end
					end
				end
			end

			if arg_144_1.time_ >= var_147_9 + var_147_10 and arg_144_1.time_ < var_147_9 + var_147_10 + arg_147_0 and not isNil(var_147_8) and arg_144_1.var_.actorSpriteComps1015 then
				for iter_147_6, iter_147_7 in pairs(arg_144_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_147_7 then
						if arg_144_1.isInRecall_ then
							iter_147_7.color = arg_144_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_147_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_144_1.var_.actorSpriteComps1015 = nil
			end

			local var_147_16 = arg_144_1.actors_["1034"].transform
			local var_147_17 = 0

			if var_147_17 < arg_144_1.time_ and arg_144_1.time_ <= var_147_17 + arg_147_0 then
				arg_144_1.var_.moveOldPos1034 = var_147_16.localPosition
				var_147_16.localScale = Vector3.New(1, 1, 1)

				arg_144_1:CheckSpriteTmpPos("1034", 2)

				local var_147_18 = var_147_16.childCount

				for iter_147_8 = 0, var_147_18 - 1 do
					local var_147_19 = var_147_16:GetChild(iter_147_8)

					if var_147_19.name == "split_1" or not string.find(var_147_19.name, "split") then
						var_147_19.gameObject:SetActive(true)
					else
						var_147_19.gameObject:SetActive(false)
					end
				end
			end

			local var_147_20 = 0.001

			if var_147_17 <= arg_144_1.time_ and arg_144_1.time_ < var_147_17 + var_147_20 then
				local var_147_21 = (arg_144_1.time_ - var_147_17) / var_147_20
				local var_147_22 = Vector3.New(-390, -331.9, -324)

				var_147_16.localPosition = Vector3.Lerp(arg_144_1.var_.moveOldPos1034, var_147_22, var_147_21)
			end

			if arg_144_1.time_ >= var_147_17 + var_147_20 and arg_144_1.time_ < var_147_17 + var_147_20 + arg_147_0 then
				var_147_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_147_23 = 0
			local var_147_24 = 0.375

			if var_147_23 < arg_144_1.time_ and arg_144_1.time_ <= var_147_23 + arg_147_0 then
				arg_144_1.talkMaxDuration = 0
				arg_144_1.dialogCg_.alpha = 1

				arg_144_1.dialog_:SetActive(true)
				SetActive(arg_144_1.leftNameGo_, true)

				local var_147_25 = arg_144_1:FormatText(StoryNameCfg[1109].name)

				arg_144_1.leftNameTxt_.text = var_147_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_144_1.leftNameTxt_.transform)

				arg_144_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_144_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_144_1:RecordName(arg_144_1.leftNameTxt_.text)
				SetActive(arg_144_1.iconTrs_.gameObject, false)
				arg_144_1.callingController_:SetSelectedState("normal")

				local var_147_26 = arg_144_1:GetWordFromCfg(417012033)
				local var_147_27 = arg_144_1:FormatText(var_147_26.content)

				arg_144_1.text_.text = var_147_27

				LuaForUtil.ClearLinePrefixSymbol(arg_144_1.text_)

				local var_147_28 = 15
				local var_147_29 = utf8.len(var_147_27)
				local var_147_30 = var_147_28 <= 0 and var_147_24 or var_147_24 * (var_147_29 / var_147_28)

				if var_147_30 > 0 and var_147_24 < var_147_30 then
					arg_144_1.talkMaxDuration = var_147_30

					if var_147_30 + var_147_23 > arg_144_1.duration_ then
						arg_144_1.duration_ = var_147_30 + var_147_23
					end
				end

				arg_144_1.text_.text = var_147_27
				arg_144_1.typewritter.percent = 0

				arg_144_1.typewritter:SetDirty()
				arg_144_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012033", "story_v_out_417012.awb") ~= 0 then
					local var_147_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012033", "story_v_out_417012.awb") / 1000

					if var_147_31 + var_147_23 > arg_144_1.duration_ then
						arg_144_1.duration_ = var_147_31 + var_147_23
					end

					if var_147_26.prefab_name ~= "" and arg_144_1.actors_[var_147_26.prefab_name] ~= nil then
						local var_147_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_144_1.actors_[var_147_26.prefab_name].transform, "story_v_out_417012", "417012033", "story_v_out_417012.awb")

						arg_144_1:RecordAudio("417012033", var_147_32)
						arg_144_1:RecordAudio("417012033", var_147_32)
					else
						arg_144_1:AudioAction("play", "voice", "story_v_out_417012", "417012033", "story_v_out_417012.awb")
					end

					arg_144_1:RecordHistoryTalkVoice("story_v_out_417012", "417012033", "story_v_out_417012.awb")
				end

				arg_144_1:RecordContent(arg_144_1.text_.text)
			end

			local var_147_33 = math.max(var_147_24, arg_144_1.talkMaxDuration)

			if var_147_23 <= arg_144_1.time_ and arg_144_1.time_ < var_147_23 + var_147_33 then
				arg_144_1.typewritter.percent = (arg_144_1.time_ - var_147_23) / var_147_33

				arg_144_1.typewritter:SetDirty()
			end

			if arg_144_1.time_ >= var_147_23 + var_147_33 and arg_144_1.time_ < var_147_23 + var_147_33 + arg_147_0 then
				arg_144_1.typewritter.percent = 1

				arg_144_1.typewritter:SetDirty()
				arg_144_1:ShowNextGo(true)
			end
		end
	end,
	Play417012034 = function(arg_148_0, arg_148_1)
		arg_148_1.time_ = 0
		arg_148_1.frameCnt_ = 0
		arg_148_1.state_ = "playing"
		arg_148_1.curTalkId_ = 417012034
		arg_148_1.duration_ = 7.93

		local var_148_0 = {
			zh = 5.4,
			ja = 7.933
		}
		local var_148_1 = manager.audio:GetLocalizationFlag()

		if var_148_0[var_148_1] ~= nil then
			arg_148_1.duration_ = var_148_0[var_148_1]
		end

		SetActive(arg_148_1.tipsGo_, false)

		function arg_148_1.onSingleLineFinish_()
			arg_148_1.onSingleLineUpdate_ = nil
			arg_148_1.onSingleLineFinish_ = nil
			arg_148_1.state_ = "waiting"
		end

		function arg_148_1.playNext_(arg_150_0)
			if arg_150_0 == 1 then
				arg_148_0:Play417012035(arg_148_1)
			end
		end

		function arg_148_1.onSingleLineUpdate_(arg_151_0)
			local var_151_0 = 0
			local var_151_1 = 0.625

			if var_151_0 < arg_148_1.time_ and arg_148_1.time_ <= var_151_0 + arg_151_0 then
				arg_148_1.talkMaxDuration = 0
				arg_148_1.dialogCg_.alpha = 1

				arg_148_1.dialog_:SetActive(true)
				SetActive(arg_148_1.leftNameGo_, true)

				local var_151_2 = arg_148_1:FormatText(StoryNameCfg[1109].name)

				arg_148_1.leftNameTxt_.text = var_151_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_148_1.leftNameTxt_.transform)

				arg_148_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_148_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_148_1:RecordName(arg_148_1.leftNameTxt_.text)
				SetActive(arg_148_1.iconTrs_.gameObject, false)
				arg_148_1.callingController_:SetSelectedState("normal")

				local var_151_3 = arg_148_1:GetWordFromCfg(417012034)
				local var_151_4 = arg_148_1:FormatText(var_151_3.content)

				arg_148_1.text_.text = var_151_4

				LuaForUtil.ClearLinePrefixSymbol(arg_148_1.text_)

				local var_151_5 = 25
				local var_151_6 = utf8.len(var_151_4)
				local var_151_7 = var_151_5 <= 0 and var_151_1 or var_151_1 * (var_151_6 / var_151_5)

				if var_151_7 > 0 and var_151_1 < var_151_7 then
					arg_148_1.talkMaxDuration = var_151_7

					if var_151_7 + var_151_0 > arg_148_1.duration_ then
						arg_148_1.duration_ = var_151_7 + var_151_0
					end
				end

				arg_148_1.text_.text = var_151_4
				arg_148_1.typewritter.percent = 0

				arg_148_1.typewritter:SetDirty()
				arg_148_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012034", "story_v_out_417012.awb") ~= 0 then
					local var_151_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012034", "story_v_out_417012.awb") / 1000

					if var_151_8 + var_151_0 > arg_148_1.duration_ then
						arg_148_1.duration_ = var_151_8 + var_151_0
					end

					if var_151_3.prefab_name ~= "" and arg_148_1.actors_[var_151_3.prefab_name] ~= nil then
						local var_151_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_148_1.actors_[var_151_3.prefab_name].transform, "story_v_out_417012", "417012034", "story_v_out_417012.awb")

						arg_148_1:RecordAudio("417012034", var_151_9)
						arg_148_1:RecordAudio("417012034", var_151_9)
					else
						arg_148_1:AudioAction("play", "voice", "story_v_out_417012", "417012034", "story_v_out_417012.awb")
					end

					arg_148_1:RecordHistoryTalkVoice("story_v_out_417012", "417012034", "story_v_out_417012.awb")
				end

				arg_148_1:RecordContent(arg_148_1.text_.text)
			end

			local var_151_10 = math.max(var_151_1, arg_148_1.talkMaxDuration)

			if var_151_0 <= arg_148_1.time_ and arg_148_1.time_ < var_151_0 + var_151_10 then
				arg_148_1.typewritter.percent = (arg_148_1.time_ - var_151_0) / var_151_10

				arg_148_1.typewritter:SetDirty()
			end

			if arg_148_1.time_ >= var_151_0 + var_151_10 and arg_148_1.time_ < var_151_0 + var_151_10 + arg_151_0 then
				arg_148_1.typewritter.percent = 1

				arg_148_1.typewritter:SetDirty()
				arg_148_1:ShowNextGo(true)
			end
		end
	end,
	Play417012035 = function(arg_152_0, arg_152_1)
		arg_152_1.time_ = 0
		arg_152_1.frameCnt_ = 0
		arg_152_1.state_ = "playing"
		arg_152_1.curTalkId_ = 417012035
		arg_152_1.duration_ = 5.1

		local var_152_0 = {
			zh = 3.3,
			ja = 5.1
		}
		local var_152_1 = manager.audio:GetLocalizationFlag()

		if var_152_0[var_152_1] ~= nil then
			arg_152_1.duration_ = var_152_0[var_152_1]
		end

		SetActive(arg_152_1.tipsGo_, false)

		function arg_152_1.onSingleLineFinish_()
			arg_152_1.onSingleLineUpdate_ = nil
			arg_152_1.onSingleLineFinish_ = nil
			arg_152_1.state_ = "waiting"
		end

		function arg_152_1.playNext_(arg_154_0)
			if arg_154_0 == 1 then
				arg_152_0:Play417012036(arg_152_1)
			end
		end

		function arg_152_1.onSingleLineUpdate_(arg_155_0)
			local var_155_0 = arg_152_1.actors_["1015"]
			local var_155_1 = 0

			if var_155_1 < arg_152_1.time_ and arg_152_1.time_ <= var_155_1 + arg_155_0 and not isNil(var_155_0) and arg_152_1.var_.actorSpriteComps1015 == nil then
				arg_152_1.var_.actorSpriteComps1015 = var_155_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_155_2 = 0.2

			if var_155_1 <= arg_152_1.time_ and arg_152_1.time_ < var_155_1 + var_155_2 and not isNil(var_155_0) then
				local var_155_3 = (arg_152_1.time_ - var_155_1) / var_155_2

				if arg_152_1.var_.actorSpriteComps1015 then
					for iter_155_0, iter_155_1 in pairs(arg_152_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_155_1 then
							if arg_152_1.isInRecall_ then
								local var_155_4 = Mathf.Lerp(iter_155_1.color.r, arg_152_1.hightColor1.r, var_155_3)
								local var_155_5 = Mathf.Lerp(iter_155_1.color.g, arg_152_1.hightColor1.g, var_155_3)
								local var_155_6 = Mathf.Lerp(iter_155_1.color.b, arg_152_1.hightColor1.b, var_155_3)

								iter_155_1.color = Color.New(var_155_4, var_155_5, var_155_6)
							else
								local var_155_7 = Mathf.Lerp(iter_155_1.color.r, 1, var_155_3)

								iter_155_1.color = Color.New(var_155_7, var_155_7, var_155_7)
							end
						end
					end
				end
			end

			if arg_152_1.time_ >= var_155_1 + var_155_2 and arg_152_1.time_ < var_155_1 + var_155_2 + arg_155_0 and not isNil(var_155_0) and arg_152_1.var_.actorSpriteComps1015 then
				for iter_155_2, iter_155_3 in pairs(arg_152_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_155_3 then
						if arg_152_1.isInRecall_ then
							iter_155_3.color = arg_152_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_155_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_152_1.var_.actorSpriteComps1015 = nil
			end

			local var_155_8 = arg_152_1.actors_["1034"]
			local var_155_9 = 0

			if var_155_9 < arg_152_1.time_ and arg_152_1.time_ <= var_155_9 + arg_155_0 and not isNil(var_155_8) and arg_152_1.var_.actorSpriteComps1034 == nil then
				arg_152_1.var_.actorSpriteComps1034 = var_155_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_155_10 = 0.2

			if var_155_9 <= arg_152_1.time_ and arg_152_1.time_ < var_155_9 + var_155_10 and not isNil(var_155_8) then
				local var_155_11 = (arg_152_1.time_ - var_155_9) / var_155_10

				if arg_152_1.var_.actorSpriteComps1034 then
					for iter_155_4, iter_155_5 in pairs(arg_152_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_155_5 then
							if arg_152_1.isInRecall_ then
								local var_155_12 = Mathf.Lerp(iter_155_5.color.r, arg_152_1.hightColor2.r, var_155_11)
								local var_155_13 = Mathf.Lerp(iter_155_5.color.g, arg_152_1.hightColor2.g, var_155_11)
								local var_155_14 = Mathf.Lerp(iter_155_5.color.b, arg_152_1.hightColor2.b, var_155_11)

								iter_155_5.color = Color.New(var_155_12, var_155_13, var_155_14)
							else
								local var_155_15 = Mathf.Lerp(iter_155_5.color.r, 0.5, var_155_11)

								iter_155_5.color = Color.New(var_155_15, var_155_15, var_155_15)
							end
						end
					end
				end
			end

			if arg_152_1.time_ >= var_155_9 + var_155_10 and arg_152_1.time_ < var_155_9 + var_155_10 + arg_155_0 and not isNil(var_155_8) and arg_152_1.var_.actorSpriteComps1034 then
				for iter_155_6, iter_155_7 in pairs(arg_152_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_155_7 then
						if arg_152_1.isInRecall_ then
							iter_155_7.color = arg_152_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_155_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_152_1.var_.actorSpriteComps1034 = nil
			end

			local var_155_16 = arg_152_1.actors_["1015"].transform
			local var_155_17 = 0

			if var_155_17 < arg_152_1.time_ and arg_152_1.time_ <= var_155_17 + arg_155_0 then
				arg_152_1.var_.moveOldPos1015 = var_155_16.localPosition
				var_155_16.localScale = Vector3.New(1, 1, 1)

				arg_152_1:CheckSpriteTmpPos("1015", 4)

				local var_155_18 = var_155_16.childCount

				for iter_155_8 = 0, var_155_18 - 1 do
					local var_155_19 = var_155_16:GetChild(iter_155_8)

					if var_155_19.name == "" or not string.find(var_155_19.name, "split") then
						var_155_19.gameObject:SetActive(true)
					else
						var_155_19.gameObject:SetActive(false)
					end
				end
			end

			local var_155_20 = 0.001

			if var_155_17 <= arg_152_1.time_ and arg_152_1.time_ < var_155_17 + var_155_20 then
				local var_155_21 = (arg_152_1.time_ - var_155_17) / var_155_20
				local var_155_22 = Vector3.New(390, -349.1, -288)

				var_155_16.localPosition = Vector3.Lerp(arg_152_1.var_.moveOldPos1015, var_155_22, var_155_21)
			end

			if arg_152_1.time_ >= var_155_17 + var_155_20 and arg_152_1.time_ < var_155_17 + var_155_20 + arg_155_0 then
				var_155_16.localPosition = Vector3.New(390, -349.1, -288)
			end

			local var_155_23 = 0
			local var_155_24 = 0.425

			if var_155_23 < arg_152_1.time_ and arg_152_1.time_ <= var_155_23 + arg_155_0 then
				arg_152_1.talkMaxDuration = 0
				arg_152_1.dialogCg_.alpha = 1

				arg_152_1.dialog_:SetActive(true)
				SetActive(arg_152_1.leftNameGo_, true)

				local var_155_25 = arg_152_1:FormatText(StoryNameCfg[479].name)

				arg_152_1.leftNameTxt_.text = var_155_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_152_1.leftNameTxt_.transform)

				arg_152_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_152_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_152_1:RecordName(arg_152_1.leftNameTxt_.text)
				SetActive(arg_152_1.iconTrs_.gameObject, false)
				arg_152_1.callingController_:SetSelectedState("normal")

				local var_155_26 = arg_152_1:GetWordFromCfg(417012035)
				local var_155_27 = arg_152_1:FormatText(var_155_26.content)

				arg_152_1.text_.text = var_155_27

				LuaForUtil.ClearLinePrefixSymbol(arg_152_1.text_)

				local var_155_28 = 17
				local var_155_29 = utf8.len(var_155_27)
				local var_155_30 = var_155_28 <= 0 and var_155_24 or var_155_24 * (var_155_29 / var_155_28)

				if var_155_30 > 0 and var_155_24 < var_155_30 then
					arg_152_1.talkMaxDuration = var_155_30

					if var_155_30 + var_155_23 > arg_152_1.duration_ then
						arg_152_1.duration_ = var_155_30 + var_155_23
					end
				end

				arg_152_1.text_.text = var_155_27
				arg_152_1.typewritter.percent = 0

				arg_152_1.typewritter:SetDirty()
				arg_152_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012035", "story_v_out_417012.awb") ~= 0 then
					local var_155_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012035", "story_v_out_417012.awb") / 1000

					if var_155_31 + var_155_23 > arg_152_1.duration_ then
						arg_152_1.duration_ = var_155_31 + var_155_23
					end

					if var_155_26.prefab_name ~= "" and arg_152_1.actors_[var_155_26.prefab_name] ~= nil then
						local var_155_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_152_1.actors_[var_155_26.prefab_name].transform, "story_v_out_417012", "417012035", "story_v_out_417012.awb")

						arg_152_1:RecordAudio("417012035", var_155_32)
						arg_152_1:RecordAudio("417012035", var_155_32)
					else
						arg_152_1:AudioAction("play", "voice", "story_v_out_417012", "417012035", "story_v_out_417012.awb")
					end

					arg_152_1:RecordHistoryTalkVoice("story_v_out_417012", "417012035", "story_v_out_417012.awb")
				end

				arg_152_1:RecordContent(arg_152_1.text_.text)
			end

			local var_155_33 = math.max(var_155_24, arg_152_1.talkMaxDuration)

			if var_155_23 <= arg_152_1.time_ and arg_152_1.time_ < var_155_23 + var_155_33 then
				arg_152_1.typewritter.percent = (arg_152_1.time_ - var_155_23) / var_155_33

				arg_152_1.typewritter:SetDirty()
			end

			if arg_152_1.time_ >= var_155_23 + var_155_33 and arg_152_1.time_ < var_155_23 + var_155_33 + arg_155_0 then
				arg_152_1.typewritter.percent = 1

				arg_152_1.typewritter:SetDirty()
				arg_152_1:ShowNextGo(true)
			end
		end
	end,
	Play417012036 = function(arg_156_0, arg_156_1)
		arg_156_1.time_ = 0
		arg_156_1.frameCnt_ = 0
		arg_156_1.state_ = "playing"
		arg_156_1.curTalkId_ = 417012036
		arg_156_1.duration_ = 7.47

		local var_156_0 = {
			zh = 5.466,
			ja = 7.466
		}
		local var_156_1 = manager.audio:GetLocalizationFlag()

		if var_156_0[var_156_1] ~= nil then
			arg_156_1.duration_ = var_156_0[var_156_1]
		end

		SetActive(arg_156_1.tipsGo_, false)

		function arg_156_1.onSingleLineFinish_()
			arg_156_1.onSingleLineUpdate_ = nil
			arg_156_1.onSingleLineFinish_ = nil
			arg_156_1.state_ = "waiting"
		end

		function arg_156_1.playNext_(arg_158_0)
			if arg_158_0 == 1 then
				arg_156_0:Play417012037(arg_156_1)
			end
		end

		function arg_156_1.onSingleLineUpdate_(arg_159_0)
			local var_159_0 = arg_156_1.actors_["1034"]
			local var_159_1 = 0

			if var_159_1 < arg_156_1.time_ and arg_156_1.time_ <= var_159_1 + arg_159_0 and not isNil(var_159_0) and arg_156_1.var_.actorSpriteComps1034 == nil then
				arg_156_1.var_.actorSpriteComps1034 = var_159_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_159_2 = 0.2

			if var_159_1 <= arg_156_1.time_ and arg_156_1.time_ < var_159_1 + var_159_2 and not isNil(var_159_0) then
				local var_159_3 = (arg_156_1.time_ - var_159_1) / var_159_2

				if arg_156_1.var_.actorSpriteComps1034 then
					for iter_159_0, iter_159_1 in pairs(arg_156_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_159_1 then
							if arg_156_1.isInRecall_ then
								local var_159_4 = Mathf.Lerp(iter_159_1.color.r, arg_156_1.hightColor1.r, var_159_3)
								local var_159_5 = Mathf.Lerp(iter_159_1.color.g, arg_156_1.hightColor1.g, var_159_3)
								local var_159_6 = Mathf.Lerp(iter_159_1.color.b, arg_156_1.hightColor1.b, var_159_3)

								iter_159_1.color = Color.New(var_159_4, var_159_5, var_159_6)
							else
								local var_159_7 = Mathf.Lerp(iter_159_1.color.r, 1, var_159_3)

								iter_159_1.color = Color.New(var_159_7, var_159_7, var_159_7)
							end
						end
					end
				end
			end

			if arg_156_1.time_ >= var_159_1 + var_159_2 and arg_156_1.time_ < var_159_1 + var_159_2 + arg_159_0 and not isNil(var_159_0) and arg_156_1.var_.actorSpriteComps1034 then
				for iter_159_2, iter_159_3 in pairs(arg_156_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_159_3 then
						if arg_156_1.isInRecall_ then
							iter_159_3.color = arg_156_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_159_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_156_1.var_.actorSpriteComps1034 = nil
			end

			local var_159_8 = arg_156_1.actors_["1015"]
			local var_159_9 = 0

			if var_159_9 < arg_156_1.time_ and arg_156_1.time_ <= var_159_9 + arg_159_0 and not isNil(var_159_8) and arg_156_1.var_.actorSpriteComps1015 == nil then
				arg_156_1.var_.actorSpriteComps1015 = var_159_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_159_10 = 0.2

			if var_159_9 <= arg_156_1.time_ and arg_156_1.time_ < var_159_9 + var_159_10 and not isNil(var_159_8) then
				local var_159_11 = (arg_156_1.time_ - var_159_9) / var_159_10

				if arg_156_1.var_.actorSpriteComps1015 then
					for iter_159_4, iter_159_5 in pairs(arg_156_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_159_5 then
							if arg_156_1.isInRecall_ then
								local var_159_12 = Mathf.Lerp(iter_159_5.color.r, arg_156_1.hightColor2.r, var_159_11)
								local var_159_13 = Mathf.Lerp(iter_159_5.color.g, arg_156_1.hightColor2.g, var_159_11)
								local var_159_14 = Mathf.Lerp(iter_159_5.color.b, arg_156_1.hightColor2.b, var_159_11)

								iter_159_5.color = Color.New(var_159_12, var_159_13, var_159_14)
							else
								local var_159_15 = Mathf.Lerp(iter_159_5.color.r, 0.5, var_159_11)

								iter_159_5.color = Color.New(var_159_15, var_159_15, var_159_15)
							end
						end
					end
				end
			end

			if arg_156_1.time_ >= var_159_9 + var_159_10 and arg_156_1.time_ < var_159_9 + var_159_10 + arg_159_0 and not isNil(var_159_8) and arg_156_1.var_.actorSpriteComps1015 then
				for iter_159_6, iter_159_7 in pairs(arg_156_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_159_7 then
						if arg_156_1.isInRecall_ then
							iter_159_7.color = arg_156_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_159_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_156_1.var_.actorSpriteComps1015 = nil
			end

			local var_159_16 = arg_156_1.actors_["1034"].transform
			local var_159_17 = 0

			if var_159_17 < arg_156_1.time_ and arg_156_1.time_ <= var_159_17 + arg_159_0 then
				arg_156_1.var_.moveOldPos1034 = var_159_16.localPosition
				var_159_16.localScale = Vector3.New(1, 1, 1)

				arg_156_1:CheckSpriteTmpPos("1034", 2)

				local var_159_18 = var_159_16.childCount

				for iter_159_8 = 0, var_159_18 - 1 do
					local var_159_19 = var_159_16:GetChild(iter_159_8)

					if var_159_19.name == "split_4" or not string.find(var_159_19.name, "split") then
						var_159_19.gameObject:SetActive(true)
					else
						var_159_19.gameObject:SetActive(false)
					end
				end
			end

			local var_159_20 = 0.001

			if var_159_17 <= arg_156_1.time_ and arg_156_1.time_ < var_159_17 + var_159_20 then
				local var_159_21 = (arg_156_1.time_ - var_159_17) / var_159_20
				local var_159_22 = Vector3.New(-390, -331.9, -324)

				var_159_16.localPosition = Vector3.Lerp(arg_156_1.var_.moveOldPos1034, var_159_22, var_159_21)
			end

			if arg_156_1.time_ >= var_159_17 + var_159_20 and arg_156_1.time_ < var_159_17 + var_159_20 + arg_159_0 then
				var_159_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_159_23 = 0
			local var_159_24 = 0.625

			if var_159_23 < arg_156_1.time_ and arg_156_1.time_ <= var_159_23 + arg_159_0 then
				arg_156_1.talkMaxDuration = 0
				arg_156_1.dialogCg_.alpha = 1

				arg_156_1.dialog_:SetActive(true)
				SetActive(arg_156_1.leftNameGo_, true)

				local var_159_25 = arg_156_1:FormatText(StoryNameCfg[1109].name)

				arg_156_1.leftNameTxt_.text = var_159_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_156_1.leftNameTxt_.transform)

				arg_156_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_156_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_156_1:RecordName(arg_156_1.leftNameTxt_.text)
				SetActive(arg_156_1.iconTrs_.gameObject, false)
				arg_156_1.callingController_:SetSelectedState("normal")

				local var_159_26 = arg_156_1:GetWordFromCfg(417012036)
				local var_159_27 = arg_156_1:FormatText(var_159_26.content)

				arg_156_1.text_.text = var_159_27

				LuaForUtil.ClearLinePrefixSymbol(arg_156_1.text_)

				local var_159_28 = 25
				local var_159_29 = utf8.len(var_159_27)
				local var_159_30 = var_159_28 <= 0 and var_159_24 or var_159_24 * (var_159_29 / var_159_28)

				if var_159_30 > 0 and var_159_24 < var_159_30 then
					arg_156_1.talkMaxDuration = var_159_30

					if var_159_30 + var_159_23 > arg_156_1.duration_ then
						arg_156_1.duration_ = var_159_30 + var_159_23
					end
				end

				arg_156_1.text_.text = var_159_27
				arg_156_1.typewritter.percent = 0

				arg_156_1.typewritter:SetDirty()
				arg_156_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012036", "story_v_out_417012.awb") ~= 0 then
					local var_159_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012036", "story_v_out_417012.awb") / 1000

					if var_159_31 + var_159_23 > arg_156_1.duration_ then
						arg_156_1.duration_ = var_159_31 + var_159_23
					end

					if var_159_26.prefab_name ~= "" and arg_156_1.actors_[var_159_26.prefab_name] ~= nil then
						local var_159_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_156_1.actors_[var_159_26.prefab_name].transform, "story_v_out_417012", "417012036", "story_v_out_417012.awb")

						arg_156_1:RecordAudio("417012036", var_159_32)
						arg_156_1:RecordAudio("417012036", var_159_32)
					else
						arg_156_1:AudioAction("play", "voice", "story_v_out_417012", "417012036", "story_v_out_417012.awb")
					end

					arg_156_1:RecordHistoryTalkVoice("story_v_out_417012", "417012036", "story_v_out_417012.awb")
				end

				arg_156_1:RecordContent(arg_156_1.text_.text)
			end

			local var_159_33 = math.max(var_159_24, arg_156_1.talkMaxDuration)

			if var_159_23 <= arg_156_1.time_ and arg_156_1.time_ < var_159_23 + var_159_33 then
				arg_156_1.typewritter.percent = (arg_156_1.time_ - var_159_23) / var_159_33

				arg_156_1.typewritter:SetDirty()
			end

			if arg_156_1.time_ >= var_159_23 + var_159_33 and arg_156_1.time_ < var_159_23 + var_159_33 + arg_159_0 then
				arg_156_1.typewritter.percent = 1

				arg_156_1.typewritter:SetDirty()
				arg_156_1:ShowNextGo(true)
			end
		end
	end,
	Play417012037 = function(arg_160_0, arg_160_1)
		arg_160_1.time_ = 0
		arg_160_1.frameCnt_ = 0
		arg_160_1.state_ = "playing"
		arg_160_1.curTalkId_ = 417012037
		arg_160_1.duration_ = 8.13

		local var_160_0 = {
			zh = 6.9,
			ja = 8.133
		}
		local var_160_1 = manager.audio:GetLocalizationFlag()

		if var_160_0[var_160_1] ~= nil then
			arg_160_1.duration_ = var_160_0[var_160_1]
		end

		SetActive(arg_160_1.tipsGo_, false)

		function arg_160_1.onSingleLineFinish_()
			arg_160_1.onSingleLineUpdate_ = nil
			arg_160_1.onSingleLineFinish_ = nil
			arg_160_1.state_ = "waiting"
		end

		function arg_160_1.playNext_(arg_162_0)
			if arg_162_0 == 1 then
				arg_160_0:Play417012038(arg_160_1)
			end
		end

		function arg_160_1.onSingleLineUpdate_(arg_163_0)
			local var_163_0 = arg_160_1.actors_["1034"].transform
			local var_163_1 = 0

			if var_163_1 < arg_160_1.time_ and arg_160_1.time_ <= var_163_1 + arg_163_0 then
				arg_160_1.var_.moveOldPos1034 = var_163_0.localPosition
				var_163_0.localScale = Vector3.New(1, 1, 1)

				arg_160_1:CheckSpriteTmpPos("1034", 2)

				local var_163_2 = var_163_0.childCount

				for iter_163_0 = 0, var_163_2 - 1 do
					local var_163_3 = var_163_0:GetChild(iter_163_0)

					if var_163_3.name == "" or not string.find(var_163_3.name, "split") then
						var_163_3.gameObject:SetActive(true)
					else
						var_163_3.gameObject:SetActive(false)
					end
				end
			end

			local var_163_4 = 0.001

			if var_163_1 <= arg_160_1.time_ and arg_160_1.time_ < var_163_1 + var_163_4 then
				local var_163_5 = (arg_160_1.time_ - var_163_1) / var_163_4
				local var_163_6 = Vector3.New(-390, -331.9, -324)

				var_163_0.localPosition = Vector3.Lerp(arg_160_1.var_.moveOldPos1034, var_163_6, var_163_5)
			end

			if arg_160_1.time_ >= var_163_1 + var_163_4 and arg_160_1.time_ < var_163_1 + var_163_4 + arg_163_0 then
				var_163_0.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_163_7 = 0
			local var_163_8 = 0.75

			if var_163_7 < arg_160_1.time_ and arg_160_1.time_ <= var_163_7 + arg_163_0 then
				arg_160_1.talkMaxDuration = 0
				arg_160_1.dialogCg_.alpha = 1

				arg_160_1.dialog_:SetActive(true)
				SetActive(arg_160_1.leftNameGo_, true)

				local var_163_9 = arg_160_1:FormatText(StoryNameCfg[1109].name)

				arg_160_1.leftNameTxt_.text = var_163_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_160_1.leftNameTxt_.transform)

				arg_160_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_160_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_160_1:RecordName(arg_160_1.leftNameTxt_.text)
				SetActive(arg_160_1.iconTrs_.gameObject, false)
				arg_160_1.callingController_:SetSelectedState("normal")

				local var_163_10 = arg_160_1:GetWordFromCfg(417012037)
				local var_163_11 = arg_160_1:FormatText(var_163_10.content)

				arg_160_1.text_.text = var_163_11

				LuaForUtil.ClearLinePrefixSymbol(arg_160_1.text_)

				local var_163_12 = 30
				local var_163_13 = utf8.len(var_163_11)
				local var_163_14 = var_163_12 <= 0 and var_163_8 or var_163_8 * (var_163_13 / var_163_12)

				if var_163_14 > 0 and var_163_8 < var_163_14 then
					arg_160_1.talkMaxDuration = var_163_14

					if var_163_14 + var_163_7 > arg_160_1.duration_ then
						arg_160_1.duration_ = var_163_14 + var_163_7
					end
				end

				arg_160_1.text_.text = var_163_11
				arg_160_1.typewritter.percent = 0

				arg_160_1.typewritter:SetDirty()
				arg_160_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012037", "story_v_out_417012.awb") ~= 0 then
					local var_163_15 = manager.audio:GetVoiceLength("story_v_out_417012", "417012037", "story_v_out_417012.awb") / 1000

					if var_163_15 + var_163_7 > arg_160_1.duration_ then
						arg_160_1.duration_ = var_163_15 + var_163_7
					end

					if var_163_10.prefab_name ~= "" and arg_160_1.actors_[var_163_10.prefab_name] ~= nil then
						local var_163_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_160_1.actors_[var_163_10.prefab_name].transform, "story_v_out_417012", "417012037", "story_v_out_417012.awb")

						arg_160_1:RecordAudio("417012037", var_163_16)
						arg_160_1:RecordAudio("417012037", var_163_16)
					else
						arg_160_1:AudioAction("play", "voice", "story_v_out_417012", "417012037", "story_v_out_417012.awb")
					end

					arg_160_1:RecordHistoryTalkVoice("story_v_out_417012", "417012037", "story_v_out_417012.awb")
				end

				arg_160_1:RecordContent(arg_160_1.text_.text)
			end

			local var_163_17 = math.max(var_163_8, arg_160_1.talkMaxDuration)

			if var_163_7 <= arg_160_1.time_ and arg_160_1.time_ < var_163_7 + var_163_17 then
				arg_160_1.typewritter.percent = (arg_160_1.time_ - var_163_7) / var_163_17

				arg_160_1.typewritter:SetDirty()
			end

			if arg_160_1.time_ >= var_163_7 + var_163_17 and arg_160_1.time_ < var_163_7 + var_163_17 + arg_163_0 then
				arg_160_1.typewritter.percent = 1

				arg_160_1.typewritter:SetDirty()
				arg_160_1:ShowNextGo(true)
			end
		end
	end,
	Play417012038 = function(arg_164_0, arg_164_1)
		arg_164_1.time_ = 0
		arg_164_1.frameCnt_ = 0
		arg_164_1.state_ = "playing"
		arg_164_1.curTalkId_ = 417012038
		arg_164_1.duration_ = 5

		SetActive(arg_164_1.tipsGo_, false)

		function arg_164_1.onSingleLineFinish_()
			arg_164_1.onSingleLineUpdate_ = nil
			arg_164_1.onSingleLineFinish_ = nil
			arg_164_1.state_ = "waiting"
		end

		function arg_164_1.playNext_(arg_166_0)
			if arg_166_0 == 1 then
				arg_164_0:Play417012039(arg_164_1)
			end
		end

		function arg_164_1.onSingleLineUpdate_(arg_167_0)
			local var_167_0 = arg_164_1.actors_["1034"]
			local var_167_1 = 0

			if var_167_1 < arg_164_1.time_ and arg_164_1.time_ <= var_167_1 + arg_167_0 and not isNil(var_167_0) and arg_164_1.var_.actorSpriteComps1034 == nil then
				arg_164_1.var_.actorSpriteComps1034 = var_167_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_167_2 = 0.2

			if var_167_1 <= arg_164_1.time_ and arg_164_1.time_ < var_167_1 + var_167_2 and not isNil(var_167_0) then
				local var_167_3 = (arg_164_1.time_ - var_167_1) / var_167_2

				if arg_164_1.var_.actorSpriteComps1034 then
					for iter_167_0, iter_167_1 in pairs(arg_164_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_167_1 then
							if arg_164_1.isInRecall_ then
								local var_167_4 = Mathf.Lerp(iter_167_1.color.r, arg_164_1.hightColor2.r, var_167_3)
								local var_167_5 = Mathf.Lerp(iter_167_1.color.g, arg_164_1.hightColor2.g, var_167_3)
								local var_167_6 = Mathf.Lerp(iter_167_1.color.b, arg_164_1.hightColor2.b, var_167_3)

								iter_167_1.color = Color.New(var_167_4, var_167_5, var_167_6)
							else
								local var_167_7 = Mathf.Lerp(iter_167_1.color.r, 0.5, var_167_3)

								iter_167_1.color = Color.New(var_167_7, var_167_7, var_167_7)
							end
						end
					end
				end
			end

			if arg_164_1.time_ >= var_167_1 + var_167_2 and arg_164_1.time_ < var_167_1 + var_167_2 + arg_167_0 and not isNil(var_167_0) and arg_164_1.var_.actorSpriteComps1034 then
				for iter_167_2, iter_167_3 in pairs(arg_164_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_167_3 then
						if arg_164_1.isInRecall_ then
							iter_167_3.color = arg_164_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_167_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_164_1.var_.actorSpriteComps1034 = nil
			end

			local var_167_8 = 0
			local var_167_9 = 1.35

			if var_167_8 < arg_164_1.time_ and arg_164_1.time_ <= var_167_8 + arg_167_0 then
				arg_164_1.talkMaxDuration = 0
				arg_164_1.dialogCg_.alpha = 1

				arg_164_1.dialog_:SetActive(true)
				SetActive(arg_164_1.leftNameGo_, false)

				arg_164_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_164_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_164_1:RecordName(arg_164_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_164_1.iconTrs_.gameObject, false)
				arg_164_1.callingController_:SetSelectedState("normal")

				local var_167_10 = arg_164_1:GetWordFromCfg(417012038)
				local var_167_11 = arg_164_1:FormatText(var_167_10.content)

				arg_164_1.text_.text = var_167_11

				LuaForUtil.ClearLinePrefixSymbol(arg_164_1.text_)

				local var_167_12 = 54
				local var_167_13 = utf8.len(var_167_11)
				local var_167_14 = var_167_12 <= 0 and var_167_9 or var_167_9 * (var_167_13 / var_167_12)

				if var_167_14 > 0 and var_167_9 < var_167_14 then
					arg_164_1.talkMaxDuration = var_167_14

					if var_167_14 + var_167_8 > arg_164_1.duration_ then
						arg_164_1.duration_ = var_167_14 + var_167_8
					end
				end

				arg_164_1.text_.text = var_167_11
				arg_164_1.typewritter.percent = 0

				arg_164_1.typewritter:SetDirty()
				arg_164_1:ShowNextGo(false)
				arg_164_1:RecordContent(arg_164_1.text_.text)
			end

			local var_167_15 = math.max(var_167_9, arg_164_1.talkMaxDuration)

			if var_167_8 <= arg_164_1.time_ and arg_164_1.time_ < var_167_8 + var_167_15 then
				arg_164_1.typewritter.percent = (arg_164_1.time_ - var_167_8) / var_167_15

				arg_164_1.typewritter:SetDirty()
			end

			if arg_164_1.time_ >= var_167_8 + var_167_15 and arg_164_1.time_ < var_167_8 + var_167_15 + arg_167_0 then
				arg_164_1.typewritter.percent = 1

				arg_164_1.typewritter:SetDirty()
				arg_164_1:ShowNextGo(true)
			end
		end
	end,
	Play417012039 = function(arg_168_0, arg_168_1)
		arg_168_1.time_ = 0
		arg_168_1.frameCnt_ = 0
		arg_168_1.state_ = "playing"
		arg_168_1.curTalkId_ = 417012039
		arg_168_1.duration_ = 3.37

		local var_168_0 = {
			zh = 2.066,
			ja = 3.366
		}
		local var_168_1 = manager.audio:GetLocalizationFlag()

		if var_168_0[var_168_1] ~= nil then
			arg_168_1.duration_ = var_168_0[var_168_1]
		end

		SetActive(arg_168_1.tipsGo_, false)

		function arg_168_1.onSingleLineFinish_()
			arg_168_1.onSingleLineUpdate_ = nil
			arg_168_1.onSingleLineFinish_ = nil
			arg_168_1.state_ = "waiting"
		end

		function arg_168_1.playNext_(arg_170_0)
			if arg_170_0 == 1 then
				arg_168_0:Play417012040(arg_168_1)
			end
		end

		function arg_168_1.onSingleLineUpdate_(arg_171_0)
			local var_171_0 = arg_168_1.actors_["1015"]
			local var_171_1 = 0

			if var_171_1 < arg_168_1.time_ and arg_168_1.time_ <= var_171_1 + arg_171_0 and not isNil(var_171_0) and arg_168_1.var_.actorSpriteComps1015 == nil then
				arg_168_1.var_.actorSpriteComps1015 = var_171_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_171_2 = 0.2

			if var_171_1 <= arg_168_1.time_ and arg_168_1.time_ < var_171_1 + var_171_2 and not isNil(var_171_0) then
				local var_171_3 = (arg_168_1.time_ - var_171_1) / var_171_2

				if arg_168_1.var_.actorSpriteComps1015 then
					for iter_171_0, iter_171_1 in pairs(arg_168_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_171_1 then
							if arg_168_1.isInRecall_ then
								local var_171_4 = Mathf.Lerp(iter_171_1.color.r, arg_168_1.hightColor1.r, var_171_3)
								local var_171_5 = Mathf.Lerp(iter_171_1.color.g, arg_168_1.hightColor1.g, var_171_3)
								local var_171_6 = Mathf.Lerp(iter_171_1.color.b, arg_168_1.hightColor1.b, var_171_3)

								iter_171_1.color = Color.New(var_171_4, var_171_5, var_171_6)
							else
								local var_171_7 = Mathf.Lerp(iter_171_1.color.r, 1, var_171_3)

								iter_171_1.color = Color.New(var_171_7, var_171_7, var_171_7)
							end
						end
					end
				end
			end

			if arg_168_1.time_ >= var_171_1 + var_171_2 and arg_168_1.time_ < var_171_1 + var_171_2 + arg_171_0 and not isNil(var_171_0) and arg_168_1.var_.actorSpriteComps1015 then
				for iter_171_2, iter_171_3 in pairs(arg_168_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_171_3 then
						if arg_168_1.isInRecall_ then
							iter_171_3.color = arg_168_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_171_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_168_1.var_.actorSpriteComps1015 = nil
			end

			local var_171_8 = arg_168_1.actors_["1015"].transform
			local var_171_9 = 0

			if var_171_9 < arg_168_1.time_ and arg_168_1.time_ <= var_171_9 + arg_171_0 then
				arg_168_1.var_.moveOldPos1015 = var_171_8.localPosition
				var_171_8.localScale = Vector3.New(1, 1, 1)

				arg_168_1:CheckSpriteTmpPos("1015", 4)

				local var_171_10 = var_171_8.childCount

				for iter_171_4 = 0, var_171_10 - 1 do
					local var_171_11 = var_171_8:GetChild(iter_171_4)

					if var_171_11.name == "" or not string.find(var_171_11.name, "split") then
						var_171_11.gameObject:SetActive(true)
					else
						var_171_11.gameObject:SetActive(false)
					end
				end
			end

			local var_171_12 = 0.001

			if var_171_9 <= arg_168_1.time_ and arg_168_1.time_ < var_171_9 + var_171_12 then
				local var_171_13 = (arg_168_1.time_ - var_171_9) / var_171_12
				local var_171_14 = Vector3.New(390, -349.1, -288)

				var_171_8.localPosition = Vector3.Lerp(arg_168_1.var_.moveOldPos1015, var_171_14, var_171_13)
			end

			if arg_168_1.time_ >= var_171_9 + var_171_12 and arg_168_1.time_ < var_171_9 + var_171_12 + arg_171_0 then
				var_171_8.localPosition = Vector3.New(390, -349.1, -288)
			end

			local var_171_15 = 0
			local var_171_16 = 0.25

			if var_171_15 < arg_168_1.time_ and arg_168_1.time_ <= var_171_15 + arg_171_0 then
				arg_168_1.talkMaxDuration = 0
				arg_168_1.dialogCg_.alpha = 1

				arg_168_1.dialog_:SetActive(true)
				SetActive(arg_168_1.leftNameGo_, true)

				local var_171_17 = arg_168_1:FormatText(StoryNameCfg[479].name)

				arg_168_1.leftNameTxt_.text = var_171_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_168_1.leftNameTxt_.transform)

				arg_168_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_168_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_168_1:RecordName(arg_168_1.leftNameTxt_.text)
				SetActive(arg_168_1.iconTrs_.gameObject, false)
				arg_168_1.callingController_:SetSelectedState("normal")

				local var_171_18 = arg_168_1:GetWordFromCfg(417012039)
				local var_171_19 = arg_168_1:FormatText(var_171_18.content)

				arg_168_1.text_.text = var_171_19

				LuaForUtil.ClearLinePrefixSymbol(arg_168_1.text_)

				local var_171_20 = 10
				local var_171_21 = utf8.len(var_171_19)
				local var_171_22 = var_171_20 <= 0 and var_171_16 or var_171_16 * (var_171_21 / var_171_20)

				if var_171_22 > 0 and var_171_16 < var_171_22 then
					arg_168_1.talkMaxDuration = var_171_22

					if var_171_22 + var_171_15 > arg_168_1.duration_ then
						arg_168_1.duration_ = var_171_22 + var_171_15
					end
				end

				arg_168_1.text_.text = var_171_19
				arg_168_1.typewritter.percent = 0

				arg_168_1.typewritter:SetDirty()
				arg_168_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012039", "story_v_out_417012.awb") ~= 0 then
					local var_171_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012039", "story_v_out_417012.awb") / 1000

					if var_171_23 + var_171_15 > arg_168_1.duration_ then
						arg_168_1.duration_ = var_171_23 + var_171_15
					end

					if var_171_18.prefab_name ~= "" and arg_168_1.actors_[var_171_18.prefab_name] ~= nil then
						local var_171_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_168_1.actors_[var_171_18.prefab_name].transform, "story_v_out_417012", "417012039", "story_v_out_417012.awb")

						arg_168_1:RecordAudio("417012039", var_171_24)
						arg_168_1:RecordAudio("417012039", var_171_24)
					else
						arg_168_1:AudioAction("play", "voice", "story_v_out_417012", "417012039", "story_v_out_417012.awb")
					end

					arg_168_1:RecordHistoryTalkVoice("story_v_out_417012", "417012039", "story_v_out_417012.awb")
				end

				arg_168_1:RecordContent(arg_168_1.text_.text)
			end

			local var_171_25 = math.max(var_171_16, arg_168_1.talkMaxDuration)

			if var_171_15 <= arg_168_1.time_ and arg_168_1.time_ < var_171_15 + var_171_25 then
				arg_168_1.typewritter.percent = (arg_168_1.time_ - var_171_15) / var_171_25

				arg_168_1.typewritter:SetDirty()
			end

			if arg_168_1.time_ >= var_171_15 + var_171_25 and arg_168_1.time_ < var_171_15 + var_171_25 + arg_171_0 then
				arg_168_1.typewritter.percent = 1

				arg_168_1.typewritter:SetDirty()
				arg_168_1:ShowNextGo(true)
			end
		end
	end,
	Play417012040 = function(arg_172_0, arg_172_1)
		arg_172_1.time_ = 0
		arg_172_1.frameCnt_ = 0
		arg_172_1.state_ = "playing"
		arg_172_1.curTalkId_ = 417012040
		arg_172_1.duration_ = 9.77

		local var_172_0 = {
			zh = 9.766,
			ja = 8.966
		}
		local var_172_1 = manager.audio:GetLocalizationFlag()

		if var_172_0[var_172_1] ~= nil then
			arg_172_1.duration_ = var_172_0[var_172_1]
		end

		SetActive(arg_172_1.tipsGo_, false)

		function arg_172_1.onSingleLineFinish_()
			arg_172_1.onSingleLineUpdate_ = nil
			arg_172_1.onSingleLineFinish_ = nil
			arg_172_1.state_ = "waiting"
		end

		function arg_172_1.playNext_(arg_174_0)
			if arg_174_0 == 1 then
				arg_172_0:Play417012041(arg_172_1)
			end
		end

		function arg_172_1.onSingleLineUpdate_(arg_175_0)
			local var_175_0 = arg_172_1.actors_["1034"]
			local var_175_1 = 0

			if var_175_1 < arg_172_1.time_ and arg_172_1.time_ <= var_175_1 + arg_175_0 and not isNil(var_175_0) and arg_172_1.var_.actorSpriteComps1034 == nil then
				arg_172_1.var_.actorSpriteComps1034 = var_175_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_175_2 = 0.2

			if var_175_1 <= arg_172_1.time_ and arg_172_1.time_ < var_175_1 + var_175_2 and not isNil(var_175_0) then
				local var_175_3 = (arg_172_1.time_ - var_175_1) / var_175_2

				if arg_172_1.var_.actorSpriteComps1034 then
					for iter_175_0, iter_175_1 in pairs(arg_172_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_175_1 then
							if arg_172_1.isInRecall_ then
								local var_175_4 = Mathf.Lerp(iter_175_1.color.r, arg_172_1.hightColor1.r, var_175_3)
								local var_175_5 = Mathf.Lerp(iter_175_1.color.g, arg_172_1.hightColor1.g, var_175_3)
								local var_175_6 = Mathf.Lerp(iter_175_1.color.b, arg_172_1.hightColor1.b, var_175_3)

								iter_175_1.color = Color.New(var_175_4, var_175_5, var_175_6)
							else
								local var_175_7 = Mathf.Lerp(iter_175_1.color.r, 1, var_175_3)

								iter_175_1.color = Color.New(var_175_7, var_175_7, var_175_7)
							end
						end
					end
				end
			end

			if arg_172_1.time_ >= var_175_1 + var_175_2 and arg_172_1.time_ < var_175_1 + var_175_2 + arg_175_0 and not isNil(var_175_0) and arg_172_1.var_.actorSpriteComps1034 then
				for iter_175_2, iter_175_3 in pairs(arg_172_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_175_3 then
						if arg_172_1.isInRecall_ then
							iter_175_3.color = arg_172_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_175_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_172_1.var_.actorSpriteComps1034 = nil
			end

			local var_175_8 = arg_172_1.actors_["1015"]
			local var_175_9 = 0

			if var_175_9 < arg_172_1.time_ and arg_172_1.time_ <= var_175_9 + arg_175_0 and not isNil(var_175_8) and arg_172_1.var_.actorSpriteComps1015 == nil then
				arg_172_1.var_.actorSpriteComps1015 = var_175_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_175_10 = 0.2

			if var_175_9 <= arg_172_1.time_ and arg_172_1.time_ < var_175_9 + var_175_10 and not isNil(var_175_8) then
				local var_175_11 = (arg_172_1.time_ - var_175_9) / var_175_10

				if arg_172_1.var_.actorSpriteComps1015 then
					for iter_175_4, iter_175_5 in pairs(arg_172_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_175_5 then
							if arg_172_1.isInRecall_ then
								local var_175_12 = Mathf.Lerp(iter_175_5.color.r, arg_172_1.hightColor2.r, var_175_11)
								local var_175_13 = Mathf.Lerp(iter_175_5.color.g, arg_172_1.hightColor2.g, var_175_11)
								local var_175_14 = Mathf.Lerp(iter_175_5.color.b, arg_172_1.hightColor2.b, var_175_11)

								iter_175_5.color = Color.New(var_175_12, var_175_13, var_175_14)
							else
								local var_175_15 = Mathf.Lerp(iter_175_5.color.r, 0.5, var_175_11)

								iter_175_5.color = Color.New(var_175_15, var_175_15, var_175_15)
							end
						end
					end
				end
			end

			if arg_172_1.time_ >= var_175_9 + var_175_10 and arg_172_1.time_ < var_175_9 + var_175_10 + arg_175_0 and not isNil(var_175_8) and arg_172_1.var_.actorSpriteComps1015 then
				for iter_175_6, iter_175_7 in pairs(arg_172_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_175_7 then
						if arg_172_1.isInRecall_ then
							iter_175_7.color = arg_172_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_175_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_172_1.var_.actorSpriteComps1015 = nil
			end

			local var_175_16 = 0
			local var_175_17 = 1.05

			if var_175_16 < arg_172_1.time_ and arg_172_1.time_ <= var_175_16 + arg_175_0 then
				arg_172_1.talkMaxDuration = 0
				arg_172_1.dialogCg_.alpha = 1

				arg_172_1.dialog_:SetActive(true)
				SetActive(arg_172_1.leftNameGo_, true)

				local var_175_18 = arg_172_1:FormatText(StoryNameCfg[1109].name)

				arg_172_1.leftNameTxt_.text = var_175_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_172_1.leftNameTxt_.transform)

				arg_172_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_172_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_172_1:RecordName(arg_172_1.leftNameTxt_.text)
				SetActive(arg_172_1.iconTrs_.gameObject, false)
				arg_172_1.callingController_:SetSelectedState("normal")

				local var_175_19 = arg_172_1:GetWordFromCfg(417012040)
				local var_175_20 = arg_172_1:FormatText(var_175_19.content)

				arg_172_1.text_.text = var_175_20

				LuaForUtil.ClearLinePrefixSymbol(arg_172_1.text_)

				local var_175_21 = 42
				local var_175_22 = utf8.len(var_175_20)
				local var_175_23 = var_175_21 <= 0 and var_175_17 or var_175_17 * (var_175_22 / var_175_21)

				if var_175_23 > 0 and var_175_17 < var_175_23 then
					arg_172_1.talkMaxDuration = var_175_23

					if var_175_23 + var_175_16 > arg_172_1.duration_ then
						arg_172_1.duration_ = var_175_23 + var_175_16
					end
				end

				arg_172_1.text_.text = var_175_20
				arg_172_1.typewritter.percent = 0

				arg_172_1.typewritter:SetDirty()
				arg_172_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012040", "story_v_out_417012.awb") ~= 0 then
					local var_175_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012040", "story_v_out_417012.awb") / 1000

					if var_175_24 + var_175_16 > arg_172_1.duration_ then
						arg_172_1.duration_ = var_175_24 + var_175_16
					end

					if var_175_19.prefab_name ~= "" and arg_172_1.actors_[var_175_19.prefab_name] ~= nil then
						local var_175_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_172_1.actors_[var_175_19.prefab_name].transform, "story_v_out_417012", "417012040", "story_v_out_417012.awb")

						arg_172_1:RecordAudio("417012040", var_175_25)
						arg_172_1:RecordAudio("417012040", var_175_25)
					else
						arg_172_1:AudioAction("play", "voice", "story_v_out_417012", "417012040", "story_v_out_417012.awb")
					end

					arg_172_1:RecordHistoryTalkVoice("story_v_out_417012", "417012040", "story_v_out_417012.awb")
				end

				arg_172_1:RecordContent(arg_172_1.text_.text)
			end

			local var_175_26 = math.max(var_175_17, arg_172_1.talkMaxDuration)

			if var_175_16 <= arg_172_1.time_ and arg_172_1.time_ < var_175_16 + var_175_26 then
				arg_172_1.typewritter.percent = (arg_172_1.time_ - var_175_16) / var_175_26

				arg_172_1.typewritter:SetDirty()
			end

			if arg_172_1.time_ >= var_175_16 + var_175_26 and arg_172_1.time_ < var_175_16 + var_175_26 + arg_175_0 then
				arg_172_1.typewritter.percent = 1

				arg_172_1.typewritter:SetDirty()
				arg_172_1:ShowNextGo(true)
			end
		end
	end,
	Play417012041 = function(arg_176_0, arg_176_1)
		arg_176_1.time_ = 0
		arg_176_1.frameCnt_ = 0
		arg_176_1.state_ = "playing"
		arg_176_1.curTalkId_ = 417012041
		arg_176_1.duration_ = 5.83

		local var_176_0 = {
			zh = 5.833,
			ja = 5.466
		}
		local var_176_1 = manager.audio:GetLocalizationFlag()

		if var_176_0[var_176_1] ~= nil then
			arg_176_1.duration_ = var_176_0[var_176_1]
		end

		SetActive(arg_176_1.tipsGo_, false)

		function arg_176_1.onSingleLineFinish_()
			arg_176_1.onSingleLineUpdate_ = nil
			arg_176_1.onSingleLineFinish_ = nil
			arg_176_1.state_ = "waiting"
		end

		function arg_176_1.playNext_(arg_178_0)
			if arg_178_0 == 1 then
				arg_176_0:Play417012042(arg_176_1)
			end
		end

		function arg_176_1.onSingleLineUpdate_(arg_179_0)
			local var_179_0 = arg_176_1.actors_["1034"].transform
			local var_179_1 = 0

			if var_179_1 < arg_176_1.time_ and arg_176_1.time_ <= var_179_1 + arg_179_0 then
				arg_176_1.var_.moveOldPos1034 = var_179_0.localPosition
				var_179_0.localScale = Vector3.New(1, 1, 1)

				arg_176_1:CheckSpriteTmpPos("1034", 2)

				local var_179_2 = var_179_0.childCount

				for iter_179_0 = 0, var_179_2 - 1 do
					local var_179_3 = var_179_0:GetChild(iter_179_0)

					if var_179_3.name == "" or not string.find(var_179_3.name, "split") then
						var_179_3.gameObject:SetActive(true)
					else
						var_179_3.gameObject:SetActive(false)
					end
				end
			end

			local var_179_4 = 0.001

			if var_179_1 <= arg_176_1.time_ and arg_176_1.time_ < var_179_1 + var_179_4 then
				local var_179_5 = (arg_176_1.time_ - var_179_1) / var_179_4
				local var_179_6 = Vector3.New(-390, -331.9, -324)

				var_179_0.localPosition = Vector3.Lerp(arg_176_1.var_.moveOldPos1034, var_179_6, var_179_5)
			end

			if arg_176_1.time_ >= var_179_1 + var_179_4 and arg_176_1.time_ < var_179_1 + var_179_4 + arg_179_0 then
				var_179_0.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_179_7 = 0
			local var_179_8 = 0.875

			if var_179_7 < arg_176_1.time_ and arg_176_1.time_ <= var_179_7 + arg_179_0 then
				arg_176_1.talkMaxDuration = 0
				arg_176_1.dialogCg_.alpha = 1

				arg_176_1.dialog_:SetActive(true)
				SetActive(arg_176_1.leftNameGo_, true)

				local var_179_9 = arg_176_1:FormatText(StoryNameCfg[1109].name)

				arg_176_1.leftNameTxt_.text = var_179_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_176_1.leftNameTxt_.transform)

				arg_176_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_176_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_176_1:RecordName(arg_176_1.leftNameTxt_.text)
				SetActive(arg_176_1.iconTrs_.gameObject, false)
				arg_176_1.callingController_:SetSelectedState("normal")

				local var_179_10 = arg_176_1:GetWordFromCfg(417012041)
				local var_179_11 = arg_176_1:FormatText(var_179_10.content)

				arg_176_1.text_.text = var_179_11

				LuaForUtil.ClearLinePrefixSymbol(arg_176_1.text_)

				local var_179_12 = 35
				local var_179_13 = utf8.len(var_179_11)
				local var_179_14 = var_179_12 <= 0 and var_179_8 or var_179_8 * (var_179_13 / var_179_12)

				if var_179_14 > 0 and var_179_8 < var_179_14 then
					arg_176_1.talkMaxDuration = var_179_14

					if var_179_14 + var_179_7 > arg_176_1.duration_ then
						arg_176_1.duration_ = var_179_14 + var_179_7
					end
				end

				arg_176_1.text_.text = var_179_11
				arg_176_1.typewritter.percent = 0

				arg_176_1.typewritter:SetDirty()
				arg_176_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012041", "story_v_out_417012.awb") ~= 0 then
					local var_179_15 = manager.audio:GetVoiceLength("story_v_out_417012", "417012041", "story_v_out_417012.awb") / 1000

					if var_179_15 + var_179_7 > arg_176_1.duration_ then
						arg_176_1.duration_ = var_179_15 + var_179_7
					end

					if var_179_10.prefab_name ~= "" and arg_176_1.actors_[var_179_10.prefab_name] ~= nil then
						local var_179_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_176_1.actors_[var_179_10.prefab_name].transform, "story_v_out_417012", "417012041", "story_v_out_417012.awb")

						arg_176_1:RecordAudio("417012041", var_179_16)
						arg_176_1:RecordAudio("417012041", var_179_16)
					else
						arg_176_1:AudioAction("play", "voice", "story_v_out_417012", "417012041", "story_v_out_417012.awb")
					end

					arg_176_1:RecordHistoryTalkVoice("story_v_out_417012", "417012041", "story_v_out_417012.awb")
				end

				arg_176_1:RecordContent(arg_176_1.text_.text)
			end

			local var_179_17 = math.max(var_179_8, arg_176_1.talkMaxDuration)

			if var_179_7 <= arg_176_1.time_ and arg_176_1.time_ < var_179_7 + var_179_17 then
				arg_176_1.typewritter.percent = (arg_176_1.time_ - var_179_7) / var_179_17

				arg_176_1.typewritter:SetDirty()
			end

			if arg_176_1.time_ >= var_179_7 + var_179_17 and arg_176_1.time_ < var_179_7 + var_179_17 + arg_179_0 then
				arg_176_1.typewritter.percent = 1

				arg_176_1.typewritter:SetDirty()
				arg_176_1:ShowNextGo(true)
			end
		end
	end,
	Play417012042 = function(arg_180_0, arg_180_1)
		arg_180_1.time_ = 0
		arg_180_1.frameCnt_ = 0
		arg_180_1.state_ = "playing"
		arg_180_1.curTalkId_ = 417012042
		arg_180_1.duration_ = 8.67

		local var_180_0 = {
			zh = 8.666,
			ja = 8.5
		}
		local var_180_1 = manager.audio:GetLocalizationFlag()

		if var_180_0[var_180_1] ~= nil then
			arg_180_1.duration_ = var_180_0[var_180_1]
		end

		SetActive(arg_180_1.tipsGo_, false)

		function arg_180_1.onSingleLineFinish_()
			arg_180_1.onSingleLineUpdate_ = nil
			arg_180_1.onSingleLineFinish_ = nil
			arg_180_1.state_ = "waiting"
		end

		function arg_180_1.playNext_(arg_182_0)
			if arg_182_0 == 1 then
				arg_180_0:Play417012043(arg_180_1)
			end
		end

		function arg_180_1.onSingleLineUpdate_(arg_183_0)
			local var_183_0 = arg_180_1.actors_["1015"]
			local var_183_1 = 0

			if var_183_1 < arg_180_1.time_ and arg_180_1.time_ <= var_183_1 + arg_183_0 and not isNil(var_183_0) and arg_180_1.var_.actorSpriteComps1015 == nil then
				arg_180_1.var_.actorSpriteComps1015 = var_183_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_183_2 = 0.2

			if var_183_1 <= arg_180_1.time_ and arg_180_1.time_ < var_183_1 + var_183_2 and not isNil(var_183_0) then
				local var_183_3 = (arg_180_1.time_ - var_183_1) / var_183_2

				if arg_180_1.var_.actorSpriteComps1015 then
					for iter_183_0, iter_183_1 in pairs(arg_180_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_183_1 then
							if arg_180_1.isInRecall_ then
								local var_183_4 = Mathf.Lerp(iter_183_1.color.r, arg_180_1.hightColor1.r, var_183_3)
								local var_183_5 = Mathf.Lerp(iter_183_1.color.g, arg_180_1.hightColor1.g, var_183_3)
								local var_183_6 = Mathf.Lerp(iter_183_1.color.b, arg_180_1.hightColor1.b, var_183_3)

								iter_183_1.color = Color.New(var_183_4, var_183_5, var_183_6)
							else
								local var_183_7 = Mathf.Lerp(iter_183_1.color.r, 1, var_183_3)

								iter_183_1.color = Color.New(var_183_7, var_183_7, var_183_7)
							end
						end
					end
				end
			end

			if arg_180_1.time_ >= var_183_1 + var_183_2 and arg_180_1.time_ < var_183_1 + var_183_2 + arg_183_0 and not isNil(var_183_0) and arg_180_1.var_.actorSpriteComps1015 then
				for iter_183_2, iter_183_3 in pairs(arg_180_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_183_3 then
						if arg_180_1.isInRecall_ then
							iter_183_3.color = arg_180_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_183_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_180_1.var_.actorSpriteComps1015 = nil
			end

			local var_183_8 = arg_180_1.actors_["1034"]
			local var_183_9 = 0

			if var_183_9 < arg_180_1.time_ and arg_180_1.time_ <= var_183_9 + arg_183_0 and not isNil(var_183_8) and arg_180_1.var_.actorSpriteComps1034 == nil then
				arg_180_1.var_.actorSpriteComps1034 = var_183_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_183_10 = 0.2

			if var_183_9 <= arg_180_1.time_ and arg_180_1.time_ < var_183_9 + var_183_10 and not isNil(var_183_8) then
				local var_183_11 = (arg_180_1.time_ - var_183_9) / var_183_10

				if arg_180_1.var_.actorSpriteComps1034 then
					for iter_183_4, iter_183_5 in pairs(arg_180_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_183_5 then
							if arg_180_1.isInRecall_ then
								local var_183_12 = Mathf.Lerp(iter_183_5.color.r, arg_180_1.hightColor2.r, var_183_11)
								local var_183_13 = Mathf.Lerp(iter_183_5.color.g, arg_180_1.hightColor2.g, var_183_11)
								local var_183_14 = Mathf.Lerp(iter_183_5.color.b, arg_180_1.hightColor2.b, var_183_11)

								iter_183_5.color = Color.New(var_183_12, var_183_13, var_183_14)
							else
								local var_183_15 = Mathf.Lerp(iter_183_5.color.r, 0.5, var_183_11)

								iter_183_5.color = Color.New(var_183_15, var_183_15, var_183_15)
							end
						end
					end
				end
			end

			if arg_180_1.time_ >= var_183_9 + var_183_10 and arg_180_1.time_ < var_183_9 + var_183_10 + arg_183_0 and not isNil(var_183_8) and arg_180_1.var_.actorSpriteComps1034 then
				for iter_183_6, iter_183_7 in pairs(arg_180_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_183_7 then
						if arg_180_1.isInRecall_ then
							iter_183_7.color = arg_180_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_183_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_180_1.var_.actorSpriteComps1034 = nil
			end

			local var_183_16 = 0
			local var_183_17 = 1.075

			if var_183_16 < arg_180_1.time_ and arg_180_1.time_ <= var_183_16 + arg_183_0 then
				arg_180_1.talkMaxDuration = 0
				arg_180_1.dialogCg_.alpha = 1

				arg_180_1.dialog_:SetActive(true)
				SetActive(arg_180_1.leftNameGo_, true)

				local var_183_18 = arg_180_1:FormatText(StoryNameCfg[479].name)

				arg_180_1.leftNameTxt_.text = var_183_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_180_1.leftNameTxt_.transform)

				arg_180_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_180_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_180_1:RecordName(arg_180_1.leftNameTxt_.text)
				SetActive(arg_180_1.iconTrs_.gameObject, false)
				arg_180_1.callingController_:SetSelectedState("normal")

				local var_183_19 = arg_180_1:GetWordFromCfg(417012042)
				local var_183_20 = arg_180_1:FormatText(var_183_19.content)

				arg_180_1.text_.text = var_183_20

				LuaForUtil.ClearLinePrefixSymbol(arg_180_1.text_)

				local var_183_21 = 43
				local var_183_22 = utf8.len(var_183_20)
				local var_183_23 = var_183_21 <= 0 and var_183_17 or var_183_17 * (var_183_22 / var_183_21)

				if var_183_23 > 0 and var_183_17 < var_183_23 then
					arg_180_1.talkMaxDuration = var_183_23

					if var_183_23 + var_183_16 > arg_180_1.duration_ then
						arg_180_1.duration_ = var_183_23 + var_183_16
					end
				end

				arg_180_1.text_.text = var_183_20
				arg_180_1.typewritter.percent = 0

				arg_180_1.typewritter:SetDirty()
				arg_180_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012042", "story_v_out_417012.awb") ~= 0 then
					local var_183_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012042", "story_v_out_417012.awb") / 1000

					if var_183_24 + var_183_16 > arg_180_1.duration_ then
						arg_180_1.duration_ = var_183_24 + var_183_16
					end

					if var_183_19.prefab_name ~= "" and arg_180_1.actors_[var_183_19.prefab_name] ~= nil then
						local var_183_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_180_1.actors_[var_183_19.prefab_name].transform, "story_v_out_417012", "417012042", "story_v_out_417012.awb")

						arg_180_1:RecordAudio("417012042", var_183_25)
						arg_180_1:RecordAudio("417012042", var_183_25)
					else
						arg_180_1:AudioAction("play", "voice", "story_v_out_417012", "417012042", "story_v_out_417012.awb")
					end

					arg_180_1:RecordHistoryTalkVoice("story_v_out_417012", "417012042", "story_v_out_417012.awb")
				end

				arg_180_1:RecordContent(arg_180_1.text_.text)
			end

			local var_183_26 = math.max(var_183_17, arg_180_1.talkMaxDuration)

			if var_183_16 <= arg_180_1.time_ and arg_180_1.time_ < var_183_16 + var_183_26 then
				arg_180_1.typewritter.percent = (arg_180_1.time_ - var_183_16) / var_183_26

				arg_180_1.typewritter:SetDirty()
			end

			if arg_180_1.time_ >= var_183_16 + var_183_26 and arg_180_1.time_ < var_183_16 + var_183_26 + arg_183_0 then
				arg_180_1.typewritter.percent = 1

				arg_180_1.typewritter:SetDirty()
				arg_180_1:ShowNextGo(true)
			end
		end
	end,
	Play417012043 = function(arg_184_0, arg_184_1)
		arg_184_1.time_ = 0
		arg_184_1.frameCnt_ = 0
		arg_184_1.state_ = "playing"
		arg_184_1.curTalkId_ = 417012043
		arg_184_1.duration_ = 4.2

		local var_184_0 = {
			zh = 1.966,
			ja = 4.2
		}
		local var_184_1 = manager.audio:GetLocalizationFlag()

		if var_184_0[var_184_1] ~= nil then
			arg_184_1.duration_ = var_184_0[var_184_1]
		end

		SetActive(arg_184_1.tipsGo_, false)

		function arg_184_1.onSingleLineFinish_()
			arg_184_1.onSingleLineUpdate_ = nil
			arg_184_1.onSingleLineFinish_ = nil
			arg_184_1.state_ = "waiting"
		end

		function arg_184_1.playNext_(arg_186_0)
			if arg_186_0 == 1 then
				arg_184_0:Play417012044(arg_184_1)
			end
		end

		function arg_184_1.onSingleLineUpdate_(arg_187_0)
			local var_187_0 = arg_184_1.actors_["1034"]
			local var_187_1 = 0

			if var_187_1 < arg_184_1.time_ and arg_184_1.time_ <= var_187_1 + arg_187_0 and not isNil(var_187_0) and arg_184_1.var_.actorSpriteComps1034 == nil then
				arg_184_1.var_.actorSpriteComps1034 = var_187_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_187_2 = 0.2

			if var_187_1 <= arg_184_1.time_ and arg_184_1.time_ < var_187_1 + var_187_2 and not isNil(var_187_0) then
				local var_187_3 = (arg_184_1.time_ - var_187_1) / var_187_2

				if arg_184_1.var_.actorSpriteComps1034 then
					for iter_187_0, iter_187_1 in pairs(arg_184_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_187_1 then
							if arg_184_1.isInRecall_ then
								local var_187_4 = Mathf.Lerp(iter_187_1.color.r, arg_184_1.hightColor1.r, var_187_3)
								local var_187_5 = Mathf.Lerp(iter_187_1.color.g, arg_184_1.hightColor1.g, var_187_3)
								local var_187_6 = Mathf.Lerp(iter_187_1.color.b, arg_184_1.hightColor1.b, var_187_3)

								iter_187_1.color = Color.New(var_187_4, var_187_5, var_187_6)
							else
								local var_187_7 = Mathf.Lerp(iter_187_1.color.r, 1, var_187_3)

								iter_187_1.color = Color.New(var_187_7, var_187_7, var_187_7)
							end
						end
					end
				end
			end

			if arg_184_1.time_ >= var_187_1 + var_187_2 and arg_184_1.time_ < var_187_1 + var_187_2 + arg_187_0 and not isNil(var_187_0) and arg_184_1.var_.actorSpriteComps1034 then
				for iter_187_2, iter_187_3 in pairs(arg_184_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_187_3 then
						if arg_184_1.isInRecall_ then
							iter_187_3.color = arg_184_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_187_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_184_1.var_.actorSpriteComps1034 = nil
			end

			local var_187_8 = arg_184_1.actors_["1015"]
			local var_187_9 = 0

			if var_187_9 < arg_184_1.time_ and arg_184_1.time_ <= var_187_9 + arg_187_0 and not isNil(var_187_8) and arg_184_1.var_.actorSpriteComps1015 == nil then
				arg_184_1.var_.actorSpriteComps1015 = var_187_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_187_10 = 0.2

			if var_187_9 <= arg_184_1.time_ and arg_184_1.time_ < var_187_9 + var_187_10 and not isNil(var_187_8) then
				local var_187_11 = (arg_184_1.time_ - var_187_9) / var_187_10

				if arg_184_1.var_.actorSpriteComps1015 then
					for iter_187_4, iter_187_5 in pairs(arg_184_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_187_5 then
							if arg_184_1.isInRecall_ then
								local var_187_12 = Mathf.Lerp(iter_187_5.color.r, arg_184_1.hightColor2.r, var_187_11)
								local var_187_13 = Mathf.Lerp(iter_187_5.color.g, arg_184_1.hightColor2.g, var_187_11)
								local var_187_14 = Mathf.Lerp(iter_187_5.color.b, arg_184_1.hightColor2.b, var_187_11)

								iter_187_5.color = Color.New(var_187_12, var_187_13, var_187_14)
							else
								local var_187_15 = Mathf.Lerp(iter_187_5.color.r, 0.5, var_187_11)

								iter_187_5.color = Color.New(var_187_15, var_187_15, var_187_15)
							end
						end
					end
				end
			end

			if arg_184_1.time_ >= var_187_9 + var_187_10 and arg_184_1.time_ < var_187_9 + var_187_10 + arg_187_0 and not isNil(var_187_8) and arg_184_1.var_.actorSpriteComps1015 then
				for iter_187_6, iter_187_7 in pairs(arg_184_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_187_7 then
						if arg_184_1.isInRecall_ then
							iter_187_7.color = arg_184_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_187_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_184_1.var_.actorSpriteComps1015 = nil
			end

			local var_187_16 = 0
			local var_187_17 = 0.275

			if var_187_16 < arg_184_1.time_ and arg_184_1.time_ <= var_187_16 + arg_187_0 then
				arg_184_1.talkMaxDuration = 0
				arg_184_1.dialogCg_.alpha = 1

				arg_184_1.dialog_:SetActive(true)
				SetActive(arg_184_1.leftNameGo_, true)

				local var_187_18 = arg_184_1:FormatText(StoryNameCfg[1109].name)

				arg_184_1.leftNameTxt_.text = var_187_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_184_1.leftNameTxt_.transform)

				arg_184_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_184_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_184_1:RecordName(arg_184_1.leftNameTxt_.text)
				SetActive(arg_184_1.iconTrs_.gameObject, false)
				arg_184_1.callingController_:SetSelectedState("normal")

				local var_187_19 = arg_184_1:GetWordFromCfg(417012043)
				local var_187_20 = arg_184_1:FormatText(var_187_19.content)

				arg_184_1.text_.text = var_187_20

				LuaForUtil.ClearLinePrefixSymbol(arg_184_1.text_)

				local var_187_21 = 11
				local var_187_22 = utf8.len(var_187_20)
				local var_187_23 = var_187_21 <= 0 and var_187_17 or var_187_17 * (var_187_22 / var_187_21)

				if var_187_23 > 0 and var_187_17 < var_187_23 then
					arg_184_1.talkMaxDuration = var_187_23

					if var_187_23 + var_187_16 > arg_184_1.duration_ then
						arg_184_1.duration_ = var_187_23 + var_187_16
					end
				end

				arg_184_1.text_.text = var_187_20
				arg_184_1.typewritter.percent = 0

				arg_184_1.typewritter:SetDirty()
				arg_184_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012043", "story_v_out_417012.awb") ~= 0 then
					local var_187_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012043", "story_v_out_417012.awb") / 1000

					if var_187_24 + var_187_16 > arg_184_1.duration_ then
						arg_184_1.duration_ = var_187_24 + var_187_16
					end

					if var_187_19.prefab_name ~= "" and arg_184_1.actors_[var_187_19.prefab_name] ~= nil then
						local var_187_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_184_1.actors_[var_187_19.prefab_name].transform, "story_v_out_417012", "417012043", "story_v_out_417012.awb")

						arg_184_1:RecordAudio("417012043", var_187_25)
						arg_184_1:RecordAudio("417012043", var_187_25)
					else
						arg_184_1:AudioAction("play", "voice", "story_v_out_417012", "417012043", "story_v_out_417012.awb")
					end

					arg_184_1:RecordHistoryTalkVoice("story_v_out_417012", "417012043", "story_v_out_417012.awb")
				end

				arg_184_1:RecordContent(arg_184_1.text_.text)
			end

			local var_187_26 = math.max(var_187_17, arg_184_1.talkMaxDuration)

			if var_187_16 <= arg_184_1.time_ and arg_184_1.time_ < var_187_16 + var_187_26 then
				arg_184_1.typewritter.percent = (arg_184_1.time_ - var_187_16) / var_187_26

				arg_184_1.typewritter:SetDirty()
			end

			if arg_184_1.time_ >= var_187_16 + var_187_26 and arg_184_1.time_ < var_187_16 + var_187_26 + arg_187_0 then
				arg_184_1.typewritter.percent = 1

				arg_184_1.typewritter:SetDirty()
				arg_184_1:ShowNextGo(true)
			end
		end
	end,
	Play417012044 = function(arg_188_0, arg_188_1)
		arg_188_1.time_ = 0
		arg_188_1.frameCnt_ = 0
		arg_188_1.state_ = "playing"
		arg_188_1.curTalkId_ = 417012044
		arg_188_1.duration_ = 5.03

		local var_188_0 = {
			zh = 3.166,
			ja = 5.033
		}
		local var_188_1 = manager.audio:GetLocalizationFlag()

		if var_188_0[var_188_1] ~= nil then
			arg_188_1.duration_ = var_188_0[var_188_1]
		end

		SetActive(arg_188_1.tipsGo_, false)

		function arg_188_1.onSingleLineFinish_()
			arg_188_1.onSingleLineUpdate_ = nil
			arg_188_1.onSingleLineFinish_ = nil
			arg_188_1.state_ = "waiting"
		end

		function arg_188_1.playNext_(arg_190_0)
			if arg_190_0 == 1 then
				arg_188_0:Play417012045(arg_188_1)
			end
		end

		function arg_188_1.onSingleLineUpdate_(arg_191_0)
			local var_191_0 = arg_188_1.actors_["1015"]
			local var_191_1 = 0

			if var_191_1 < arg_188_1.time_ and arg_188_1.time_ <= var_191_1 + arg_191_0 and not isNil(var_191_0) and arg_188_1.var_.actorSpriteComps1015 == nil then
				arg_188_1.var_.actorSpriteComps1015 = var_191_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_191_2 = 0.2

			if var_191_1 <= arg_188_1.time_ and arg_188_1.time_ < var_191_1 + var_191_2 and not isNil(var_191_0) then
				local var_191_3 = (arg_188_1.time_ - var_191_1) / var_191_2

				if arg_188_1.var_.actorSpriteComps1015 then
					for iter_191_0, iter_191_1 in pairs(arg_188_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_191_1 then
							if arg_188_1.isInRecall_ then
								local var_191_4 = Mathf.Lerp(iter_191_1.color.r, arg_188_1.hightColor1.r, var_191_3)
								local var_191_5 = Mathf.Lerp(iter_191_1.color.g, arg_188_1.hightColor1.g, var_191_3)
								local var_191_6 = Mathf.Lerp(iter_191_1.color.b, arg_188_1.hightColor1.b, var_191_3)

								iter_191_1.color = Color.New(var_191_4, var_191_5, var_191_6)
							else
								local var_191_7 = Mathf.Lerp(iter_191_1.color.r, 1, var_191_3)

								iter_191_1.color = Color.New(var_191_7, var_191_7, var_191_7)
							end
						end
					end
				end
			end

			if arg_188_1.time_ >= var_191_1 + var_191_2 and arg_188_1.time_ < var_191_1 + var_191_2 + arg_191_0 and not isNil(var_191_0) and arg_188_1.var_.actorSpriteComps1015 then
				for iter_191_2, iter_191_3 in pairs(arg_188_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_191_3 then
						if arg_188_1.isInRecall_ then
							iter_191_3.color = arg_188_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_191_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_188_1.var_.actorSpriteComps1015 = nil
			end

			local var_191_8 = arg_188_1.actors_["1034"]
			local var_191_9 = 0

			if var_191_9 < arg_188_1.time_ and arg_188_1.time_ <= var_191_9 + arg_191_0 and not isNil(var_191_8) and arg_188_1.var_.actorSpriteComps1034 == nil then
				arg_188_1.var_.actorSpriteComps1034 = var_191_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_191_10 = 0.2

			if var_191_9 <= arg_188_1.time_ and arg_188_1.time_ < var_191_9 + var_191_10 and not isNil(var_191_8) then
				local var_191_11 = (arg_188_1.time_ - var_191_9) / var_191_10

				if arg_188_1.var_.actorSpriteComps1034 then
					for iter_191_4, iter_191_5 in pairs(arg_188_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_191_5 then
							if arg_188_1.isInRecall_ then
								local var_191_12 = Mathf.Lerp(iter_191_5.color.r, arg_188_1.hightColor2.r, var_191_11)
								local var_191_13 = Mathf.Lerp(iter_191_5.color.g, arg_188_1.hightColor2.g, var_191_11)
								local var_191_14 = Mathf.Lerp(iter_191_5.color.b, arg_188_1.hightColor2.b, var_191_11)

								iter_191_5.color = Color.New(var_191_12, var_191_13, var_191_14)
							else
								local var_191_15 = Mathf.Lerp(iter_191_5.color.r, 0.5, var_191_11)

								iter_191_5.color = Color.New(var_191_15, var_191_15, var_191_15)
							end
						end
					end
				end
			end

			if arg_188_1.time_ >= var_191_9 + var_191_10 and arg_188_1.time_ < var_191_9 + var_191_10 + arg_191_0 and not isNil(var_191_8) and arg_188_1.var_.actorSpriteComps1034 then
				for iter_191_6, iter_191_7 in pairs(arg_188_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_191_7 then
						if arg_188_1.isInRecall_ then
							iter_191_7.color = arg_188_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_191_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_188_1.var_.actorSpriteComps1034 = nil
			end

			local var_191_16 = 0
			local var_191_17 = 0.4

			if var_191_16 < arg_188_1.time_ and arg_188_1.time_ <= var_191_16 + arg_191_0 then
				arg_188_1.talkMaxDuration = 0
				arg_188_1.dialogCg_.alpha = 1

				arg_188_1.dialog_:SetActive(true)
				SetActive(arg_188_1.leftNameGo_, true)

				local var_191_18 = arg_188_1:FormatText(StoryNameCfg[479].name)

				arg_188_1.leftNameTxt_.text = var_191_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_188_1.leftNameTxt_.transform)

				arg_188_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_188_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_188_1:RecordName(arg_188_1.leftNameTxt_.text)
				SetActive(arg_188_1.iconTrs_.gameObject, false)
				arg_188_1.callingController_:SetSelectedState("normal")

				local var_191_19 = arg_188_1:GetWordFromCfg(417012044)
				local var_191_20 = arg_188_1:FormatText(var_191_19.content)

				arg_188_1.text_.text = var_191_20

				LuaForUtil.ClearLinePrefixSymbol(arg_188_1.text_)

				local var_191_21 = 16
				local var_191_22 = utf8.len(var_191_20)
				local var_191_23 = var_191_21 <= 0 and var_191_17 or var_191_17 * (var_191_22 / var_191_21)

				if var_191_23 > 0 and var_191_17 < var_191_23 then
					arg_188_1.talkMaxDuration = var_191_23

					if var_191_23 + var_191_16 > arg_188_1.duration_ then
						arg_188_1.duration_ = var_191_23 + var_191_16
					end
				end

				arg_188_1.text_.text = var_191_20
				arg_188_1.typewritter.percent = 0

				arg_188_1.typewritter:SetDirty()
				arg_188_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012044", "story_v_out_417012.awb") ~= 0 then
					local var_191_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012044", "story_v_out_417012.awb") / 1000

					if var_191_24 + var_191_16 > arg_188_1.duration_ then
						arg_188_1.duration_ = var_191_24 + var_191_16
					end

					if var_191_19.prefab_name ~= "" and arg_188_1.actors_[var_191_19.prefab_name] ~= nil then
						local var_191_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_188_1.actors_[var_191_19.prefab_name].transform, "story_v_out_417012", "417012044", "story_v_out_417012.awb")

						arg_188_1:RecordAudio("417012044", var_191_25)
						arg_188_1:RecordAudio("417012044", var_191_25)
					else
						arg_188_1:AudioAction("play", "voice", "story_v_out_417012", "417012044", "story_v_out_417012.awb")
					end

					arg_188_1:RecordHistoryTalkVoice("story_v_out_417012", "417012044", "story_v_out_417012.awb")
				end

				arg_188_1:RecordContent(arg_188_1.text_.text)
			end

			local var_191_26 = math.max(var_191_17, arg_188_1.talkMaxDuration)

			if var_191_16 <= arg_188_1.time_ and arg_188_1.time_ < var_191_16 + var_191_26 then
				arg_188_1.typewritter.percent = (arg_188_1.time_ - var_191_16) / var_191_26

				arg_188_1.typewritter:SetDirty()
			end

			if arg_188_1.time_ >= var_191_16 + var_191_26 and arg_188_1.time_ < var_191_16 + var_191_26 + arg_191_0 then
				arg_188_1.typewritter.percent = 1

				arg_188_1.typewritter:SetDirty()
				arg_188_1:ShowNextGo(true)
			end
		end
	end,
	Play417012045 = function(arg_192_0, arg_192_1)
		arg_192_1.time_ = 0
		arg_192_1.frameCnt_ = 0
		arg_192_1.state_ = "playing"
		arg_192_1.curTalkId_ = 417012045
		arg_192_1.duration_ = 10.17

		local var_192_0 = {
			zh = 5.9,
			ja = 10.166
		}
		local var_192_1 = manager.audio:GetLocalizationFlag()

		if var_192_0[var_192_1] ~= nil then
			arg_192_1.duration_ = var_192_0[var_192_1]
		end

		SetActive(arg_192_1.tipsGo_, false)

		function arg_192_1.onSingleLineFinish_()
			arg_192_1.onSingleLineUpdate_ = nil
			arg_192_1.onSingleLineFinish_ = nil
			arg_192_1.state_ = "waiting"
		end

		function arg_192_1.playNext_(arg_194_0)
			if arg_194_0 == 1 then
				arg_192_0:Play417012046(arg_192_1)
			end
		end

		function arg_192_1.onSingleLineUpdate_(arg_195_0)
			local var_195_0 = 0
			local var_195_1 = 0.675

			if var_195_0 < arg_192_1.time_ and arg_192_1.time_ <= var_195_0 + arg_195_0 then
				arg_192_1.talkMaxDuration = 0
				arg_192_1.dialogCg_.alpha = 1

				arg_192_1.dialog_:SetActive(true)
				SetActive(arg_192_1.leftNameGo_, true)

				local var_195_2 = arg_192_1:FormatText(StoryNameCfg[479].name)

				arg_192_1.leftNameTxt_.text = var_195_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_192_1.leftNameTxt_.transform)

				arg_192_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_192_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_192_1:RecordName(arg_192_1.leftNameTxt_.text)
				SetActive(arg_192_1.iconTrs_.gameObject, false)
				arg_192_1.callingController_:SetSelectedState("normal")

				local var_195_3 = arg_192_1:GetWordFromCfg(417012045)
				local var_195_4 = arg_192_1:FormatText(var_195_3.content)

				arg_192_1.text_.text = var_195_4

				LuaForUtil.ClearLinePrefixSymbol(arg_192_1.text_)

				local var_195_5 = 27
				local var_195_6 = utf8.len(var_195_4)
				local var_195_7 = var_195_5 <= 0 and var_195_1 or var_195_1 * (var_195_6 / var_195_5)

				if var_195_7 > 0 and var_195_1 < var_195_7 then
					arg_192_1.talkMaxDuration = var_195_7

					if var_195_7 + var_195_0 > arg_192_1.duration_ then
						arg_192_1.duration_ = var_195_7 + var_195_0
					end
				end

				arg_192_1.text_.text = var_195_4
				arg_192_1.typewritter.percent = 0

				arg_192_1.typewritter:SetDirty()
				arg_192_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012045", "story_v_out_417012.awb") ~= 0 then
					local var_195_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012045", "story_v_out_417012.awb") / 1000

					if var_195_8 + var_195_0 > arg_192_1.duration_ then
						arg_192_1.duration_ = var_195_8 + var_195_0
					end

					if var_195_3.prefab_name ~= "" and arg_192_1.actors_[var_195_3.prefab_name] ~= nil then
						local var_195_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_192_1.actors_[var_195_3.prefab_name].transform, "story_v_out_417012", "417012045", "story_v_out_417012.awb")

						arg_192_1:RecordAudio("417012045", var_195_9)
						arg_192_1:RecordAudio("417012045", var_195_9)
					else
						arg_192_1:AudioAction("play", "voice", "story_v_out_417012", "417012045", "story_v_out_417012.awb")
					end

					arg_192_1:RecordHistoryTalkVoice("story_v_out_417012", "417012045", "story_v_out_417012.awb")
				end

				arg_192_1:RecordContent(arg_192_1.text_.text)
			end

			local var_195_10 = math.max(var_195_1, arg_192_1.talkMaxDuration)

			if var_195_0 <= arg_192_1.time_ and arg_192_1.time_ < var_195_0 + var_195_10 then
				arg_192_1.typewritter.percent = (arg_192_1.time_ - var_195_0) / var_195_10

				arg_192_1.typewritter:SetDirty()
			end

			if arg_192_1.time_ >= var_195_0 + var_195_10 and arg_192_1.time_ < var_195_0 + var_195_10 + arg_195_0 then
				arg_192_1.typewritter.percent = 1

				arg_192_1.typewritter:SetDirty()
				arg_192_1:ShowNextGo(true)
			end
		end
	end,
	Play417012046 = function(arg_196_0, arg_196_1)
		arg_196_1.time_ = 0
		arg_196_1.frameCnt_ = 0
		arg_196_1.state_ = "playing"
		arg_196_1.curTalkId_ = 417012046
		arg_196_1.duration_ = 10.2

		local var_196_0 = {
			zh = 7.2,
			ja = 10.2
		}
		local var_196_1 = manager.audio:GetLocalizationFlag()

		if var_196_0[var_196_1] ~= nil then
			arg_196_1.duration_ = var_196_0[var_196_1]
		end

		SetActive(arg_196_1.tipsGo_, false)

		function arg_196_1.onSingleLineFinish_()
			arg_196_1.onSingleLineUpdate_ = nil
			arg_196_1.onSingleLineFinish_ = nil
			arg_196_1.state_ = "waiting"
		end

		function arg_196_1.playNext_(arg_198_0)
			if arg_198_0 == 1 then
				arg_196_0:Play417012047(arg_196_1)
			end
		end

		function arg_196_1.onSingleLineUpdate_(arg_199_0)
			local var_199_0 = arg_196_1.actors_["1015"].transform
			local var_199_1 = 0

			if var_199_1 < arg_196_1.time_ and arg_196_1.time_ <= var_199_1 + arg_199_0 then
				arg_196_1.var_.moveOldPos1015 = var_199_0.localPosition
				var_199_0.localScale = Vector3.New(1, 1, 1)

				arg_196_1:CheckSpriteTmpPos("1015", 4)

				local var_199_2 = var_199_0.childCount

				for iter_199_0 = 0, var_199_2 - 1 do
					local var_199_3 = var_199_0:GetChild(iter_199_0)

					if var_199_3.name == "" or not string.find(var_199_3.name, "split") then
						var_199_3.gameObject:SetActive(true)
					else
						var_199_3.gameObject:SetActive(false)
					end
				end
			end

			local var_199_4 = 0.001

			if var_199_1 <= arg_196_1.time_ and arg_196_1.time_ < var_199_1 + var_199_4 then
				local var_199_5 = (arg_196_1.time_ - var_199_1) / var_199_4
				local var_199_6 = Vector3.New(390, -349.1, -288)

				var_199_0.localPosition = Vector3.Lerp(arg_196_1.var_.moveOldPos1015, var_199_6, var_199_5)
			end

			if arg_196_1.time_ >= var_199_1 + var_199_4 and arg_196_1.time_ < var_199_1 + var_199_4 + arg_199_0 then
				var_199_0.localPosition = Vector3.New(390, -349.1, -288)
			end

			local var_199_7 = 0
			local var_199_8 = 0.9

			if var_199_7 < arg_196_1.time_ and arg_196_1.time_ <= var_199_7 + arg_199_0 then
				arg_196_1.talkMaxDuration = 0
				arg_196_1.dialogCg_.alpha = 1

				arg_196_1.dialog_:SetActive(true)
				SetActive(arg_196_1.leftNameGo_, true)

				local var_199_9 = arg_196_1:FormatText(StoryNameCfg[479].name)

				arg_196_1.leftNameTxt_.text = var_199_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_196_1.leftNameTxt_.transform)

				arg_196_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_196_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_196_1:RecordName(arg_196_1.leftNameTxt_.text)
				SetActive(arg_196_1.iconTrs_.gameObject, false)
				arg_196_1.callingController_:SetSelectedState("normal")

				local var_199_10 = arg_196_1:GetWordFromCfg(417012046)
				local var_199_11 = arg_196_1:FormatText(var_199_10.content)

				arg_196_1.text_.text = var_199_11

				LuaForUtil.ClearLinePrefixSymbol(arg_196_1.text_)

				local var_199_12 = 36
				local var_199_13 = utf8.len(var_199_11)
				local var_199_14 = var_199_12 <= 0 and var_199_8 or var_199_8 * (var_199_13 / var_199_12)

				if var_199_14 > 0 and var_199_8 < var_199_14 then
					arg_196_1.talkMaxDuration = var_199_14

					if var_199_14 + var_199_7 > arg_196_1.duration_ then
						arg_196_1.duration_ = var_199_14 + var_199_7
					end
				end

				arg_196_1.text_.text = var_199_11
				arg_196_1.typewritter.percent = 0

				arg_196_1.typewritter:SetDirty()
				arg_196_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012046", "story_v_out_417012.awb") ~= 0 then
					local var_199_15 = manager.audio:GetVoiceLength("story_v_out_417012", "417012046", "story_v_out_417012.awb") / 1000

					if var_199_15 + var_199_7 > arg_196_1.duration_ then
						arg_196_1.duration_ = var_199_15 + var_199_7
					end

					if var_199_10.prefab_name ~= "" and arg_196_1.actors_[var_199_10.prefab_name] ~= nil then
						local var_199_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_196_1.actors_[var_199_10.prefab_name].transform, "story_v_out_417012", "417012046", "story_v_out_417012.awb")

						arg_196_1:RecordAudio("417012046", var_199_16)
						arg_196_1:RecordAudio("417012046", var_199_16)
					else
						arg_196_1:AudioAction("play", "voice", "story_v_out_417012", "417012046", "story_v_out_417012.awb")
					end

					arg_196_1:RecordHistoryTalkVoice("story_v_out_417012", "417012046", "story_v_out_417012.awb")
				end

				arg_196_1:RecordContent(arg_196_1.text_.text)
			end

			local var_199_17 = math.max(var_199_8, arg_196_1.talkMaxDuration)

			if var_199_7 <= arg_196_1.time_ and arg_196_1.time_ < var_199_7 + var_199_17 then
				arg_196_1.typewritter.percent = (arg_196_1.time_ - var_199_7) / var_199_17

				arg_196_1.typewritter:SetDirty()
			end

			if arg_196_1.time_ >= var_199_7 + var_199_17 and arg_196_1.time_ < var_199_7 + var_199_17 + arg_199_0 then
				arg_196_1.typewritter.percent = 1

				arg_196_1.typewritter:SetDirty()
				arg_196_1:ShowNextGo(true)
			end
		end
	end,
	Play417012047 = function(arg_200_0, arg_200_1)
		arg_200_1.time_ = 0
		arg_200_1.frameCnt_ = 0
		arg_200_1.state_ = "playing"
		arg_200_1.curTalkId_ = 417012047
		arg_200_1.duration_ = 4.8

		local var_200_0 = {
			zh = 0.999999999999,
			ja = 4.8
		}
		local var_200_1 = manager.audio:GetLocalizationFlag()

		if var_200_0[var_200_1] ~= nil then
			arg_200_1.duration_ = var_200_0[var_200_1]
		end

		SetActive(arg_200_1.tipsGo_, false)

		function arg_200_1.onSingleLineFinish_()
			arg_200_1.onSingleLineUpdate_ = nil
			arg_200_1.onSingleLineFinish_ = nil
			arg_200_1.state_ = "waiting"
		end

		function arg_200_1.playNext_(arg_202_0)
			if arg_202_0 == 1 then
				arg_200_0:Play417012048(arg_200_1)
			end
		end

		function arg_200_1.onSingleLineUpdate_(arg_203_0)
			local var_203_0 = arg_200_1.actors_["1034"]
			local var_203_1 = 0

			if var_203_1 < arg_200_1.time_ and arg_200_1.time_ <= var_203_1 + arg_203_0 and not isNil(var_203_0) and arg_200_1.var_.actorSpriteComps1034 == nil then
				arg_200_1.var_.actorSpriteComps1034 = var_203_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_203_2 = 0.2

			if var_203_1 <= arg_200_1.time_ and arg_200_1.time_ < var_203_1 + var_203_2 and not isNil(var_203_0) then
				local var_203_3 = (arg_200_1.time_ - var_203_1) / var_203_2

				if arg_200_1.var_.actorSpriteComps1034 then
					for iter_203_0, iter_203_1 in pairs(arg_200_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_203_1 then
							if arg_200_1.isInRecall_ then
								local var_203_4 = Mathf.Lerp(iter_203_1.color.r, arg_200_1.hightColor1.r, var_203_3)
								local var_203_5 = Mathf.Lerp(iter_203_1.color.g, arg_200_1.hightColor1.g, var_203_3)
								local var_203_6 = Mathf.Lerp(iter_203_1.color.b, arg_200_1.hightColor1.b, var_203_3)

								iter_203_1.color = Color.New(var_203_4, var_203_5, var_203_6)
							else
								local var_203_7 = Mathf.Lerp(iter_203_1.color.r, 1, var_203_3)

								iter_203_1.color = Color.New(var_203_7, var_203_7, var_203_7)
							end
						end
					end
				end
			end

			if arg_200_1.time_ >= var_203_1 + var_203_2 and arg_200_1.time_ < var_203_1 + var_203_2 + arg_203_0 and not isNil(var_203_0) and arg_200_1.var_.actorSpriteComps1034 then
				for iter_203_2, iter_203_3 in pairs(arg_200_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_203_3 then
						if arg_200_1.isInRecall_ then
							iter_203_3.color = arg_200_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_203_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_200_1.var_.actorSpriteComps1034 = nil
			end

			local var_203_8 = arg_200_1.actors_["1015"]
			local var_203_9 = 0

			if var_203_9 < arg_200_1.time_ and arg_200_1.time_ <= var_203_9 + arg_203_0 and not isNil(var_203_8) and arg_200_1.var_.actorSpriteComps1015 == nil then
				arg_200_1.var_.actorSpriteComps1015 = var_203_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_203_10 = 0.2

			if var_203_9 <= arg_200_1.time_ and arg_200_1.time_ < var_203_9 + var_203_10 and not isNil(var_203_8) then
				local var_203_11 = (arg_200_1.time_ - var_203_9) / var_203_10

				if arg_200_1.var_.actorSpriteComps1015 then
					for iter_203_4, iter_203_5 in pairs(arg_200_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_203_5 then
							if arg_200_1.isInRecall_ then
								local var_203_12 = Mathf.Lerp(iter_203_5.color.r, arg_200_1.hightColor2.r, var_203_11)
								local var_203_13 = Mathf.Lerp(iter_203_5.color.g, arg_200_1.hightColor2.g, var_203_11)
								local var_203_14 = Mathf.Lerp(iter_203_5.color.b, arg_200_1.hightColor2.b, var_203_11)

								iter_203_5.color = Color.New(var_203_12, var_203_13, var_203_14)
							else
								local var_203_15 = Mathf.Lerp(iter_203_5.color.r, 0.5, var_203_11)

								iter_203_5.color = Color.New(var_203_15, var_203_15, var_203_15)
							end
						end
					end
				end
			end

			if arg_200_1.time_ >= var_203_9 + var_203_10 and arg_200_1.time_ < var_203_9 + var_203_10 + arg_203_0 and not isNil(var_203_8) and arg_200_1.var_.actorSpriteComps1015 then
				for iter_203_6, iter_203_7 in pairs(arg_200_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_203_7 then
						if arg_200_1.isInRecall_ then
							iter_203_7.color = arg_200_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_203_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_200_1.var_.actorSpriteComps1015 = nil
			end

			local var_203_16 = 0
			local var_203_17 = 0.075

			if var_203_16 < arg_200_1.time_ and arg_200_1.time_ <= var_203_16 + arg_203_0 then
				arg_200_1.talkMaxDuration = 0
				arg_200_1.dialogCg_.alpha = 1

				arg_200_1.dialog_:SetActive(true)
				SetActive(arg_200_1.leftNameGo_, true)

				local var_203_18 = arg_200_1:FormatText(StoryNameCfg[1109].name)

				arg_200_1.leftNameTxt_.text = var_203_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_200_1.leftNameTxt_.transform)

				arg_200_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_200_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_200_1:RecordName(arg_200_1.leftNameTxt_.text)
				SetActive(arg_200_1.iconTrs_.gameObject, false)
				arg_200_1.callingController_:SetSelectedState("normal")

				local var_203_19 = arg_200_1:GetWordFromCfg(417012047)
				local var_203_20 = arg_200_1:FormatText(var_203_19.content)

				arg_200_1.text_.text = var_203_20

				LuaForUtil.ClearLinePrefixSymbol(arg_200_1.text_)

				local var_203_21 = 3
				local var_203_22 = utf8.len(var_203_20)
				local var_203_23 = var_203_21 <= 0 and var_203_17 or var_203_17 * (var_203_22 / var_203_21)

				if var_203_23 > 0 and var_203_17 < var_203_23 then
					arg_200_1.talkMaxDuration = var_203_23

					if var_203_23 + var_203_16 > arg_200_1.duration_ then
						arg_200_1.duration_ = var_203_23 + var_203_16
					end
				end

				arg_200_1.text_.text = var_203_20
				arg_200_1.typewritter.percent = 0

				arg_200_1.typewritter:SetDirty()
				arg_200_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012047", "story_v_out_417012.awb") ~= 0 then
					local var_203_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012047", "story_v_out_417012.awb") / 1000

					if var_203_24 + var_203_16 > arg_200_1.duration_ then
						arg_200_1.duration_ = var_203_24 + var_203_16
					end

					if var_203_19.prefab_name ~= "" and arg_200_1.actors_[var_203_19.prefab_name] ~= nil then
						local var_203_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_200_1.actors_[var_203_19.prefab_name].transform, "story_v_out_417012", "417012047", "story_v_out_417012.awb")

						arg_200_1:RecordAudio("417012047", var_203_25)
						arg_200_1:RecordAudio("417012047", var_203_25)
					else
						arg_200_1:AudioAction("play", "voice", "story_v_out_417012", "417012047", "story_v_out_417012.awb")
					end

					arg_200_1:RecordHistoryTalkVoice("story_v_out_417012", "417012047", "story_v_out_417012.awb")
				end

				arg_200_1:RecordContent(arg_200_1.text_.text)
			end

			local var_203_26 = math.max(var_203_17, arg_200_1.talkMaxDuration)

			if var_203_16 <= arg_200_1.time_ and arg_200_1.time_ < var_203_16 + var_203_26 then
				arg_200_1.typewritter.percent = (arg_200_1.time_ - var_203_16) / var_203_26

				arg_200_1.typewritter:SetDirty()
			end

			if arg_200_1.time_ >= var_203_16 + var_203_26 and arg_200_1.time_ < var_203_16 + var_203_26 + arg_203_0 then
				arg_200_1.typewritter.percent = 1

				arg_200_1.typewritter:SetDirty()
				arg_200_1:ShowNextGo(true)
			end
		end
	end,
	Play417012048 = function(arg_204_0, arg_204_1)
		arg_204_1.time_ = 0
		arg_204_1.frameCnt_ = 0
		arg_204_1.state_ = "playing"
		arg_204_1.curTalkId_ = 417012048
		arg_204_1.duration_ = 5

		SetActive(arg_204_1.tipsGo_, false)

		function arg_204_1.onSingleLineFinish_()
			arg_204_1.onSingleLineUpdate_ = nil
			arg_204_1.onSingleLineFinish_ = nil
			arg_204_1.state_ = "waiting"
		end

		function arg_204_1.playNext_(arg_206_0)
			if arg_206_0 == 1 then
				arg_204_0:Play417012049(arg_204_1)
			end
		end

		function arg_204_1.onSingleLineUpdate_(arg_207_0)
			local var_207_0 = arg_204_1.actors_["1034"]
			local var_207_1 = 0

			if var_207_1 < arg_204_1.time_ and arg_204_1.time_ <= var_207_1 + arg_207_0 and not isNil(var_207_0) and arg_204_1.var_.actorSpriteComps1034 == nil then
				arg_204_1.var_.actorSpriteComps1034 = var_207_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_207_2 = 0.2

			if var_207_1 <= arg_204_1.time_ and arg_204_1.time_ < var_207_1 + var_207_2 and not isNil(var_207_0) then
				local var_207_3 = (arg_204_1.time_ - var_207_1) / var_207_2

				if arg_204_1.var_.actorSpriteComps1034 then
					for iter_207_0, iter_207_1 in pairs(arg_204_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_207_1 then
							if arg_204_1.isInRecall_ then
								local var_207_4 = Mathf.Lerp(iter_207_1.color.r, arg_204_1.hightColor2.r, var_207_3)
								local var_207_5 = Mathf.Lerp(iter_207_1.color.g, arg_204_1.hightColor2.g, var_207_3)
								local var_207_6 = Mathf.Lerp(iter_207_1.color.b, arg_204_1.hightColor2.b, var_207_3)

								iter_207_1.color = Color.New(var_207_4, var_207_5, var_207_6)
							else
								local var_207_7 = Mathf.Lerp(iter_207_1.color.r, 0.5, var_207_3)

								iter_207_1.color = Color.New(var_207_7, var_207_7, var_207_7)
							end
						end
					end
				end
			end

			if arg_204_1.time_ >= var_207_1 + var_207_2 and arg_204_1.time_ < var_207_1 + var_207_2 + arg_207_0 and not isNil(var_207_0) and arg_204_1.var_.actorSpriteComps1034 then
				for iter_207_2, iter_207_3 in pairs(arg_204_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_207_3 then
						if arg_204_1.isInRecall_ then
							iter_207_3.color = arg_204_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_207_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_204_1.var_.actorSpriteComps1034 = nil
			end

			local var_207_8 = arg_204_1.actors_["1034"].transform
			local var_207_9 = 0

			if var_207_9 < arg_204_1.time_ and arg_204_1.time_ <= var_207_9 + arg_207_0 then
				arg_204_1.var_.moveOldPos1034 = var_207_8.localPosition
				var_207_8.localScale = Vector3.New(1, 1, 1)

				arg_204_1:CheckSpriteTmpPos("1034", 7)

				local var_207_10 = var_207_8.childCount

				for iter_207_4 = 0, var_207_10 - 1 do
					local var_207_11 = var_207_8:GetChild(iter_207_4)

					if var_207_11.name == "" or not string.find(var_207_11.name, "split") then
						var_207_11.gameObject:SetActive(true)
					else
						var_207_11.gameObject:SetActive(false)
					end
				end
			end

			local var_207_12 = 0.001

			if var_207_9 <= arg_204_1.time_ and arg_204_1.time_ < var_207_9 + var_207_12 then
				local var_207_13 = (arg_204_1.time_ - var_207_9) / var_207_12
				local var_207_14 = Vector3.New(0, -2000, 0)

				var_207_8.localPosition = Vector3.Lerp(arg_204_1.var_.moveOldPos1034, var_207_14, var_207_13)
			end

			if arg_204_1.time_ >= var_207_9 + var_207_12 and arg_204_1.time_ < var_207_9 + var_207_12 + arg_207_0 then
				var_207_8.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_207_15 = arg_204_1.actors_["1015"].transform
			local var_207_16 = 0

			if var_207_16 < arg_204_1.time_ and arg_204_1.time_ <= var_207_16 + arg_207_0 then
				arg_204_1.var_.moveOldPos1015 = var_207_15.localPosition
				var_207_15.localScale = Vector3.New(1, 1, 1)

				arg_204_1:CheckSpriteTmpPos("1015", 7)

				local var_207_17 = var_207_15.childCount

				for iter_207_5 = 0, var_207_17 - 1 do
					local var_207_18 = var_207_15:GetChild(iter_207_5)

					if var_207_18.name == "" or not string.find(var_207_18.name, "split") then
						var_207_18.gameObject:SetActive(true)
					else
						var_207_18.gameObject:SetActive(false)
					end
				end
			end

			local var_207_19 = 0.001

			if var_207_16 <= arg_204_1.time_ and arg_204_1.time_ < var_207_16 + var_207_19 then
				local var_207_20 = (arg_204_1.time_ - var_207_16) / var_207_19
				local var_207_21 = Vector3.New(0, -2000, 0)

				var_207_15.localPosition = Vector3.Lerp(arg_204_1.var_.moveOldPos1015, var_207_21, var_207_20)
			end

			if arg_204_1.time_ >= var_207_16 + var_207_19 and arg_204_1.time_ < var_207_16 + var_207_19 + arg_207_0 then
				var_207_15.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_207_22 = 0
			local var_207_23 = 1.35

			if var_207_22 < arg_204_1.time_ and arg_204_1.time_ <= var_207_22 + arg_207_0 then
				arg_204_1.talkMaxDuration = 0
				arg_204_1.dialogCg_.alpha = 1

				arg_204_1.dialog_:SetActive(true)
				SetActive(arg_204_1.leftNameGo_, false)

				arg_204_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_204_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_204_1:RecordName(arg_204_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_204_1.iconTrs_.gameObject, false)
				arg_204_1.callingController_:SetSelectedState("normal")

				local var_207_24 = arg_204_1:GetWordFromCfg(417012048)
				local var_207_25 = arg_204_1:FormatText(var_207_24.content)

				arg_204_1.text_.text = var_207_25

				LuaForUtil.ClearLinePrefixSymbol(arg_204_1.text_)

				local var_207_26 = 54
				local var_207_27 = utf8.len(var_207_25)
				local var_207_28 = var_207_26 <= 0 and var_207_23 or var_207_23 * (var_207_27 / var_207_26)

				if var_207_28 > 0 and var_207_23 < var_207_28 then
					arg_204_1.talkMaxDuration = var_207_28

					if var_207_28 + var_207_22 > arg_204_1.duration_ then
						arg_204_1.duration_ = var_207_28 + var_207_22
					end
				end

				arg_204_1.text_.text = var_207_25
				arg_204_1.typewritter.percent = 0

				arg_204_1.typewritter:SetDirty()
				arg_204_1:ShowNextGo(false)
				arg_204_1:RecordContent(arg_204_1.text_.text)
			end

			local var_207_29 = math.max(var_207_23, arg_204_1.talkMaxDuration)

			if var_207_22 <= arg_204_1.time_ and arg_204_1.time_ < var_207_22 + var_207_29 then
				arg_204_1.typewritter.percent = (arg_204_1.time_ - var_207_22) / var_207_29

				arg_204_1.typewritter:SetDirty()
			end

			if arg_204_1.time_ >= var_207_22 + var_207_29 and arg_204_1.time_ < var_207_22 + var_207_29 + arg_207_0 then
				arg_204_1.typewritter.percent = 1

				arg_204_1.typewritter:SetDirty()
				arg_204_1:ShowNextGo(true)
			end
		end
	end,
	Play417012049 = function(arg_208_0, arg_208_1)
		arg_208_1.time_ = 0
		arg_208_1.frameCnt_ = 0
		arg_208_1.state_ = "playing"
		arg_208_1.curTalkId_ = 417012049
		arg_208_1.duration_ = 6.17

		local var_208_0 = {
			zh = 3.933,
			ja = 6.166
		}
		local var_208_1 = manager.audio:GetLocalizationFlag()

		if var_208_0[var_208_1] ~= nil then
			arg_208_1.duration_ = var_208_0[var_208_1]
		end

		SetActive(arg_208_1.tipsGo_, false)

		function arg_208_1.onSingleLineFinish_()
			arg_208_1.onSingleLineUpdate_ = nil
			arg_208_1.onSingleLineFinish_ = nil
			arg_208_1.state_ = "waiting"
		end

		function arg_208_1.playNext_(arg_210_0)
			if arg_210_0 == 1 then
				arg_208_0:Play417012050(arg_208_1)
			end
		end

		function arg_208_1.onSingleLineUpdate_(arg_211_0)
			local var_211_0 = arg_208_1.actors_["1034"]
			local var_211_1 = 0

			if var_211_1 < arg_208_1.time_ and arg_208_1.time_ <= var_211_1 + arg_211_0 and not isNil(var_211_0) and arg_208_1.var_.actorSpriteComps1034 == nil then
				arg_208_1.var_.actorSpriteComps1034 = var_211_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_211_2 = 0.2

			if var_211_1 <= arg_208_1.time_ and arg_208_1.time_ < var_211_1 + var_211_2 and not isNil(var_211_0) then
				local var_211_3 = (arg_208_1.time_ - var_211_1) / var_211_2

				if arg_208_1.var_.actorSpriteComps1034 then
					for iter_211_0, iter_211_1 in pairs(arg_208_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_211_1 then
							if arg_208_1.isInRecall_ then
								local var_211_4 = Mathf.Lerp(iter_211_1.color.r, arg_208_1.hightColor1.r, var_211_3)
								local var_211_5 = Mathf.Lerp(iter_211_1.color.g, arg_208_1.hightColor1.g, var_211_3)
								local var_211_6 = Mathf.Lerp(iter_211_1.color.b, arg_208_1.hightColor1.b, var_211_3)

								iter_211_1.color = Color.New(var_211_4, var_211_5, var_211_6)
							else
								local var_211_7 = Mathf.Lerp(iter_211_1.color.r, 1, var_211_3)

								iter_211_1.color = Color.New(var_211_7, var_211_7, var_211_7)
							end
						end
					end
				end
			end

			if arg_208_1.time_ >= var_211_1 + var_211_2 and arg_208_1.time_ < var_211_1 + var_211_2 + arg_211_0 and not isNil(var_211_0) and arg_208_1.var_.actorSpriteComps1034 then
				for iter_211_2, iter_211_3 in pairs(arg_208_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_211_3 then
						if arg_208_1.isInRecall_ then
							iter_211_3.color = arg_208_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_211_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_208_1.var_.actorSpriteComps1034 = nil
			end

			local var_211_8 = arg_208_1.actors_["1034"].transform
			local var_211_9 = 0

			if var_211_9 < arg_208_1.time_ and arg_208_1.time_ <= var_211_9 + arg_211_0 then
				arg_208_1.var_.moveOldPos1034 = var_211_8.localPosition
				var_211_8.localScale = Vector3.New(1, 1, 1)

				arg_208_1:CheckSpriteTmpPos("1034", 2)

				local var_211_10 = var_211_8.childCount

				for iter_211_4 = 0, var_211_10 - 1 do
					local var_211_11 = var_211_8:GetChild(iter_211_4)

					if var_211_11.name == "" or not string.find(var_211_11.name, "split") then
						var_211_11.gameObject:SetActive(true)
					else
						var_211_11.gameObject:SetActive(false)
					end
				end
			end

			local var_211_12 = 0.001

			if var_211_9 <= arg_208_1.time_ and arg_208_1.time_ < var_211_9 + var_211_12 then
				local var_211_13 = (arg_208_1.time_ - var_211_9) / var_211_12
				local var_211_14 = Vector3.New(-390, -331.9, -324)

				var_211_8.localPosition = Vector3.Lerp(arg_208_1.var_.moveOldPos1034, var_211_14, var_211_13)
			end

			if arg_208_1.time_ >= var_211_9 + var_211_12 and arg_208_1.time_ < var_211_9 + var_211_12 + arg_211_0 then
				var_211_8.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_211_15 = 0
			local var_211_16 = 0.3

			if var_211_15 < arg_208_1.time_ and arg_208_1.time_ <= var_211_15 + arg_211_0 then
				arg_208_1.talkMaxDuration = 0
				arg_208_1.dialogCg_.alpha = 1

				arg_208_1.dialog_:SetActive(true)
				SetActive(arg_208_1.leftNameGo_, true)

				local var_211_17 = arg_208_1:FormatText(StoryNameCfg[1109].name)

				arg_208_1.leftNameTxt_.text = var_211_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_208_1.leftNameTxt_.transform)

				arg_208_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_208_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_208_1:RecordName(arg_208_1.leftNameTxt_.text)
				SetActive(arg_208_1.iconTrs_.gameObject, false)
				arg_208_1.callingController_:SetSelectedState("normal")

				local var_211_18 = arg_208_1:GetWordFromCfg(417012049)
				local var_211_19 = arg_208_1:FormatText(var_211_18.content)

				arg_208_1.text_.text = var_211_19

				LuaForUtil.ClearLinePrefixSymbol(arg_208_1.text_)

				local var_211_20 = 12
				local var_211_21 = utf8.len(var_211_19)
				local var_211_22 = var_211_20 <= 0 and var_211_16 or var_211_16 * (var_211_21 / var_211_20)

				if var_211_22 > 0 and var_211_16 < var_211_22 then
					arg_208_1.talkMaxDuration = var_211_22

					if var_211_22 + var_211_15 > arg_208_1.duration_ then
						arg_208_1.duration_ = var_211_22 + var_211_15
					end
				end

				arg_208_1.text_.text = var_211_19
				arg_208_1.typewritter.percent = 0

				arg_208_1.typewritter:SetDirty()
				arg_208_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012049", "story_v_out_417012.awb") ~= 0 then
					local var_211_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012049", "story_v_out_417012.awb") / 1000

					if var_211_23 + var_211_15 > arg_208_1.duration_ then
						arg_208_1.duration_ = var_211_23 + var_211_15
					end

					if var_211_18.prefab_name ~= "" and arg_208_1.actors_[var_211_18.prefab_name] ~= nil then
						local var_211_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_208_1.actors_[var_211_18.prefab_name].transform, "story_v_out_417012", "417012049", "story_v_out_417012.awb")

						arg_208_1:RecordAudio("417012049", var_211_24)
						arg_208_1:RecordAudio("417012049", var_211_24)
					else
						arg_208_1:AudioAction("play", "voice", "story_v_out_417012", "417012049", "story_v_out_417012.awb")
					end

					arg_208_1:RecordHistoryTalkVoice("story_v_out_417012", "417012049", "story_v_out_417012.awb")
				end

				arg_208_1:RecordContent(arg_208_1.text_.text)
			end

			local var_211_25 = math.max(var_211_16, arg_208_1.talkMaxDuration)

			if var_211_15 <= arg_208_1.time_ and arg_208_1.time_ < var_211_15 + var_211_25 then
				arg_208_1.typewritter.percent = (arg_208_1.time_ - var_211_15) / var_211_25

				arg_208_1.typewritter:SetDirty()
			end

			if arg_208_1.time_ >= var_211_15 + var_211_25 and arg_208_1.time_ < var_211_15 + var_211_25 + arg_211_0 then
				arg_208_1.typewritter.percent = 1

				arg_208_1.typewritter:SetDirty()
				arg_208_1:ShowNextGo(true)
			end
		end
	end,
	Play417012050 = function(arg_212_0, arg_212_1)
		arg_212_1.time_ = 0
		arg_212_1.frameCnt_ = 0
		arg_212_1.state_ = "playing"
		arg_212_1.curTalkId_ = 417012050
		arg_212_1.duration_ = 4.2

		local var_212_0 = {
			zh = 4.2,
			ja = 3.8
		}
		local var_212_1 = manager.audio:GetLocalizationFlag()

		if var_212_0[var_212_1] ~= nil then
			arg_212_1.duration_ = var_212_0[var_212_1]
		end

		SetActive(arg_212_1.tipsGo_, false)

		function arg_212_1.onSingleLineFinish_()
			arg_212_1.onSingleLineUpdate_ = nil
			arg_212_1.onSingleLineFinish_ = nil
			arg_212_1.state_ = "waiting"
		end

		function arg_212_1.playNext_(arg_214_0)
			if arg_214_0 == 1 then
				arg_212_0:Play417012051(arg_212_1)
			end
		end

		function arg_212_1.onSingleLineUpdate_(arg_215_0)
			local var_215_0 = arg_212_1.actors_["1015"]
			local var_215_1 = 0

			if var_215_1 < arg_212_1.time_ and arg_212_1.time_ <= var_215_1 + arg_215_0 and not isNil(var_215_0) and arg_212_1.var_.actorSpriteComps1015 == nil then
				arg_212_1.var_.actorSpriteComps1015 = var_215_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_215_2 = 0.2

			if var_215_1 <= arg_212_1.time_ and arg_212_1.time_ < var_215_1 + var_215_2 and not isNil(var_215_0) then
				local var_215_3 = (arg_212_1.time_ - var_215_1) / var_215_2

				if arg_212_1.var_.actorSpriteComps1015 then
					for iter_215_0, iter_215_1 in pairs(arg_212_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_215_1 then
							if arg_212_1.isInRecall_ then
								local var_215_4 = Mathf.Lerp(iter_215_1.color.r, arg_212_1.hightColor1.r, var_215_3)
								local var_215_5 = Mathf.Lerp(iter_215_1.color.g, arg_212_1.hightColor1.g, var_215_3)
								local var_215_6 = Mathf.Lerp(iter_215_1.color.b, arg_212_1.hightColor1.b, var_215_3)

								iter_215_1.color = Color.New(var_215_4, var_215_5, var_215_6)
							else
								local var_215_7 = Mathf.Lerp(iter_215_1.color.r, 1, var_215_3)

								iter_215_1.color = Color.New(var_215_7, var_215_7, var_215_7)
							end
						end
					end
				end
			end

			if arg_212_1.time_ >= var_215_1 + var_215_2 and arg_212_1.time_ < var_215_1 + var_215_2 + arg_215_0 and not isNil(var_215_0) and arg_212_1.var_.actorSpriteComps1015 then
				for iter_215_2, iter_215_3 in pairs(arg_212_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_215_3 then
						if arg_212_1.isInRecall_ then
							iter_215_3.color = arg_212_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_215_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_212_1.var_.actorSpriteComps1015 = nil
			end

			local var_215_8 = arg_212_1.actors_["1034"]
			local var_215_9 = 0

			if var_215_9 < arg_212_1.time_ and arg_212_1.time_ <= var_215_9 + arg_215_0 and not isNil(var_215_8) and arg_212_1.var_.actorSpriteComps1034 == nil then
				arg_212_1.var_.actorSpriteComps1034 = var_215_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_215_10 = 0.2

			if var_215_9 <= arg_212_1.time_ and arg_212_1.time_ < var_215_9 + var_215_10 and not isNil(var_215_8) then
				local var_215_11 = (arg_212_1.time_ - var_215_9) / var_215_10

				if arg_212_1.var_.actorSpriteComps1034 then
					for iter_215_4, iter_215_5 in pairs(arg_212_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_215_5 then
							if arg_212_1.isInRecall_ then
								local var_215_12 = Mathf.Lerp(iter_215_5.color.r, arg_212_1.hightColor2.r, var_215_11)
								local var_215_13 = Mathf.Lerp(iter_215_5.color.g, arg_212_1.hightColor2.g, var_215_11)
								local var_215_14 = Mathf.Lerp(iter_215_5.color.b, arg_212_1.hightColor2.b, var_215_11)

								iter_215_5.color = Color.New(var_215_12, var_215_13, var_215_14)
							else
								local var_215_15 = Mathf.Lerp(iter_215_5.color.r, 0.5, var_215_11)

								iter_215_5.color = Color.New(var_215_15, var_215_15, var_215_15)
							end
						end
					end
				end
			end

			if arg_212_1.time_ >= var_215_9 + var_215_10 and arg_212_1.time_ < var_215_9 + var_215_10 + arg_215_0 and not isNil(var_215_8) and arg_212_1.var_.actorSpriteComps1034 then
				for iter_215_6, iter_215_7 in pairs(arg_212_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_215_7 then
						if arg_212_1.isInRecall_ then
							iter_215_7.color = arg_212_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_215_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_212_1.var_.actorSpriteComps1034 = nil
			end

			local var_215_16 = arg_212_1.actors_["1015"].transform
			local var_215_17 = 0

			if var_215_17 < arg_212_1.time_ and arg_212_1.time_ <= var_215_17 + arg_215_0 then
				arg_212_1.var_.moveOldPos1015 = var_215_16.localPosition
				var_215_16.localScale = Vector3.New(1, 1, 1)

				arg_212_1:CheckSpriteTmpPos("1015", 4)

				local var_215_18 = var_215_16.childCount

				for iter_215_8 = 0, var_215_18 - 1 do
					local var_215_19 = var_215_16:GetChild(iter_215_8)

					if var_215_19.name == "split_1" or not string.find(var_215_19.name, "split") then
						var_215_19.gameObject:SetActive(true)
					else
						var_215_19.gameObject:SetActive(false)
					end
				end
			end

			local var_215_20 = 0.001

			if var_215_17 <= arg_212_1.time_ and arg_212_1.time_ < var_215_17 + var_215_20 then
				local var_215_21 = (arg_212_1.time_ - var_215_17) / var_215_20
				local var_215_22 = Vector3.New(390, -349.1, -288)

				var_215_16.localPosition = Vector3.Lerp(arg_212_1.var_.moveOldPos1015, var_215_22, var_215_21)
			end

			if arg_212_1.time_ >= var_215_17 + var_215_20 and arg_212_1.time_ < var_215_17 + var_215_20 + arg_215_0 then
				var_215_16.localPosition = Vector3.New(390, -349.1, -288)
			end

			local var_215_23 = 0
			local var_215_24 = 0.2

			if var_215_23 < arg_212_1.time_ and arg_212_1.time_ <= var_215_23 + arg_215_0 then
				arg_212_1.talkMaxDuration = 0
				arg_212_1.dialogCg_.alpha = 1

				arg_212_1.dialog_:SetActive(true)
				SetActive(arg_212_1.leftNameGo_, true)

				local var_215_25 = arg_212_1:FormatText(StoryNameCfg[479].name)

				arg_212_1.leftNameTxt_.text = var_215_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_212_1.leftNameTxt_.transform)

				arg_212_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_212_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_212_1:RecordName(arg_212_1.leftNameTxt_.text)
				SetActive(arg_212_1.iconTrs_.gameObject, false)
				arg_212_1.callingController_:SetSelectedState("normal")

				local var_215_26 = arg_212_1:GetWordFromCfg(417012050)
				local var_215_27 = arg_212_1:FormatText(var_215_26.content)

				arg_212_1.text_.text = var_215_27

				LuaForUtil.ClearLinePrefixSymbol(arg_212_1.text_)

				local var_215_28 = 8
				local var_215_29 = utf8.len(var_215_27)
				local var_215_30 = var_215_28 <= 0 and var_215_24 or var_215_24 * (var_215_29 / var_215_28)

				if var_215_30 > 0 and var_215_24 < var_215_30 then
					arg_212_1.talkMaxDuration = var_215_30

					if var_215_30 + var_215_23 > arg_212_1.duration_ then
						arg_212_1.duration_ = var_215_30 + var_215_23
					end
				end

				arg_212_1.text_.text = var_215_27
				arg_212_1.typewritter.percent = 0

				arg_212_1.typewritter:SetDirty()
				arg_212_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012050", "story_v_out_417012.awb") ~= 0 then
					local var_215_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012050", "story_v_out_417012.awb") / 1000

					if var_215_31 + var_215_23 > arg_212_1.duration_ then
						arg_212_1.duration_ = var_215_31 + var_215_23
					end

					if var_215_26.prefab_name ~= "" and arg_212_1.actors_[var_215_26.prefab_name] ~= nil then
						local var_215_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_212_1.actors_[var_215_26.prefab_name].transform, "story_v_out_417012", "417012050", "story_v_out_417012.awb")

						arg_212_1:RecordAudio("417012050", var_215_32)
						arg_212_1:RecordAudio("417012050", var_215_32)
					else
						arg_212_1:AudioAction("play", "voice", "story_v_out_417012", "417012050", "story_v_out_417012.awb")
					end

					arg_212_1:RecordHistoryTalkVoice("story_v_out_417012", "417012050", "story_v_out_417012.awb")
				end

				arg_212_1:RecordContent(arg_212_1.text_.text)
			end

			local var_215_33 = math.max(var_215_24, arg_212_1.talkMaxDuration)

			if var_215_23 <= arg_212_1.time_ and arg_212_1.time_ < var_215_23 + var_215_33 then
				arg_212_1.typewritter.percent = (arg_212_1.time_ - var_215_23) / var_215_33

				arg_212_1.typewritter:SetDirty()
			end

			if arg_212_1.time_ >= var_215_23 + var_215_33 and arg_212_1.time_ < var_215_23 + var_215_33 + arg_215_0 then
				arg_212_1.typewritter.percent = 1

				arg_212_1.typewritter:SetDirty()
				arg_212_1:ShowNextGo(true)
			end
		end
	end,
	Play417012051 = function(arg_216_0, arg_216_1)
		arg_216_1.time_ = 0
		arg_216_1.frameCnt_ = 0
		arg_216_1.state_ = "playing"
		arg_216_1.curTalkId_ = 417012051
		arg_216_1.duration_ = 6.67

		local var_216_0 = {
			zh = 5.133,
			ja = 6.666
		}
		local var_216_1 = manager.audio:GetLocalizationFlag()

		if var_216_0[var_216_1] ~= nil then
			arg_216_1.duration_ = var_216_0[var_216_1]
		end

		SetActive(arg_216_1.tipsGo_, false)

		function arg_216_1.onSingleLineFinish_()
			arg_216_1.onSingleLineUpdate_ = nil
			arg_216_1.onSingleLineFinish_ = nil
			arg_216_1.state_ = "waiting"
		end

		function arg_216_1.playNext_(arg_218_0)
			if arg_218_0 == 1 then
				arg_216_0:Play417012052(arg_216_1)
			end
		end

		function arg_216_1.onSingleLineUpdate_(arg_219_0)
			local var_219_0 = arg_216_1.actors_["1034"]
			local var_219_1 = 0

			if var_219_1 < arg_216_1.time_ and arg_216_1.time_ <= var_219_1 + arg_219_0 and not isNil(var_219_0) and arg_216_1.var_.actorSpriteComps1034 == nil then
				arg_216_1.var_.actorSpriteComps1034 = var_219_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_219_2 = 0.2

			if var_219_1 <= arg_216_1.time_ and arg_216_1.time_ < var_219_1 + var_219_2 and not isNil(var_219_0) then
				local var_219_3 = (arg_216_1.time_ - var_219_1) / var_219_2

				if arg_216_1.var_.actorSpriteComps1034 then
					for iter_219_0, iter_219_1 in pairs(arg_216_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_219_1 then
							if arg_216_1.isInRecall_ then
								local var_219_4 = Mathf.Lerp(iter_219_1.color.r, arg_216_1.hightColor1.r, var_219_3)
								local var_219_5 = Mathf.Lerp(iter_219_1.color.g, arg_216_1.hightColor1.g, var_219_3)
								local var_219_6 = Mathf.Lerp(iter_219_1.color.b, arg_216_1.hightColor1.b, var_219_3)

								iter_219_1.color = Color.New(var_219_4, var_219_5, var_219_6)
							else
								local var_219_7 = Mathf.Lerp(iter_219_1.color.r, 1, var_219_3)

								iter_219_1.color = Color.New(var_219_7, var_219_7, var_219_7)
							end
						end
					end
				end
			end

			if arg_216_1.time_ >= var_219_1 + var_219_2 and arg_216_1.time_ < var_219_1 + var_219_2 + arg_219_0 and not isNil(var_219_0) and arg_216_1.var_.actorSpriteComps1034 then
				for iter_219_2, iter_219_3 in pairs(arg_216_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_219_3 then
						if arg_216_1.isInRecall_ then
							iter_219_3.color = arg_216_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_219_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_216_1.var_.actorSpriteComps1034 = nil
			end

			local var_219_8 = arg_216_1.actors_["1015"]
			local var_219_9 = 0

			if var_219_9 < arg_216_1.time_ and arg_216_1.time_ <= var_219_9 + arg_219_0 and not isNil(var_219_8) and arg_216_1.var_.actorSpriteComps1015 == nil then
				arg_216_1.var_.actorSpriteComps1015 = var_219_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_219_10 = 0.2

			if var_219_9 <= arg_216_1.time_ and arg_216_1.time_ < var_219_9 + var_219_10 and not isNil(var_219_8) then
				local var_219_11 = (arg_216_1.time_ - var_219_9) / var_219_10

				if arg_216_1.var_.actorSpriteComps1015 then
					for iter_219_4, iter_219_5 in pairs(arg_216_1.var_.actorSpriteComps1015:ToTable()) do
						if iter_219_5 then
							if arg_216_1.isInRecall_ then
								local var_219_12 = Mathf.Lerp(iter_219_5.color.r, arg_216_1.hightColor2.r, var_219_11)
								local var_219_13 = Mathf.Lerp(iter_219_5.color.g, arg_216_1.hightColor2.g, var_219_11)
								local var_219_14 = Mathf.Lerp(iter_219_5.color.b, arg_216_1.hightColor2.b, var_219_11)

								iter_219_5.color = Color.New(var_219_12, var_219_13, var_219_14)
							else
								local var_219_15 = Mathf.Lerp(iter_219_5.color.r, 0.5, var_219_11)

								iter_219_5.color = Color.New(var_219_15, var_219_15, var_219_15)
							end
						end
					end
				end
			end

			if arg_216_1.time_ >= var_219_9 + var_219_10 and arg_216_1.time_ < var_219_9 + var_219_10 + arg_219_0 and not isNil(var_219_8) and arg_216_1.var_.actorSpriteComps1015 then
				for iter_219_6, iter_219_7 in pairs(arg_216_1.var_.actorSpriteComps1015:ToTable()) do
					if iter_219_7 then
						if arg_216_1.isInRecall_ then
							iter_219_7.color = arg_216_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_219_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_216_1.var_.actorSpriteComps1015 = nil
			end

			local var_219_16 = arg_216_1.actors_["1034"].transform
			local var_219_17 = 0

			if var_219_17 < arg_216_1.time_ and arg_216_1.time_ <= var_219_17 + arg_219_0 then
				arg_216_1.var_.moveOldPos1034 = var_219_16.localPosition
				var_219_16.localScale = Vector3.New(1, 1, 1)

				arg_216_1:CheckSpriteTmpPos("1034", 2)

				local var_219_18 = var_219_16.childCount

				for iter_219_8 = 0, var_219_18 - 1 do
					local var_219_19 = var_219_16:GetChild(iter_219_8)

					if var_219_19.name == "split_7" or not string.find(var_219_19.name, "split") then
						var_219_19.gameObject:SetActive(true)
					else
						var_219_19.gameObject:SetActive(false)
					end
				end
			end

			local var_219_20 = 0.001

			if var_219_17 <= arg_216_1.time_ and arg_216_1.time_ < var_219_17 + var_219_20 then
				local var_219_21 = (arg_216_1.time_ - var_219_17) / var_219_20
				local var_219_22 = Vector3.New(-390, -331.9, -324)

				var_219_16.localPosition = Vector3.Lerp(arg_216_1.var_.moveOldPos1034, var_219_22, var_219_21)
			end

			if arg_216_1.time_ >= var_219_17 + var_219_20 and arg_216_1.time_ < var_219_17 + var_219_20 + arg_219_0 then
				var_219_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_219_23 = 0
			local var_219_24 = 0.475

			if var_219_23 < arg_216_1.time_ and arg_216_1.time_ <= var_219_23 + arg_219_0 then
				arg_216_1.talkMaxDuration = 0
				arg_216_1.dialogCg_.alpha = 1

				arg_216_1.dialog_:SetActive(true)
				SetActive(arg_216_1.leftNameGo_, true)

				local var_219_25 = arg_216_1:FormatText(StoryNameCfg[1109].name)

				arg_216_1.leftNameTxt_.text = var_219_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_216_1.leftNameTxt_.transform)

				arg_216_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_216_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_216_1:RecordName(arg_216_1.leftNameTxt_.text)
				SetActive(arg_216_1.iconTrs_.gameObject, false)
				arg_216_1.callingController_:SetSelectedState("normal")

				local var_219_26 = arg_216_1:GetWordFromCfg(417012051)
				local var_219_27 = arg_216_1:FormatText(var_219_26.content)

				arg_216_1.text_.text = var_219_27

				LuaForUtil.ClearLinePrefixSymbol(arg_216_1.text_)

				local var_219_28 = 19
				local var_219_29 = utf8.len(var_219_27)
				local var_219_30 = var_219_28 <= 0 and var_219_24 or var_219_24 * (var_219_29 / var_219_28)

				if var_219_30 > 0 and var_219_24 < var_219_30 then
					arg_216_1.talkMaxDuration = var_219_30

					if var_219_30 + var_219_23 > arg_216_1.duration_ then
						arg_216_1.duration_ = var_219_30 + var_219_23
					end
				end

				arg_216_1.text_.text = var_219_27
				arg_216_1.typewritter.percent = 0

				arg_216_1.typewritter:SetDirty()
				arg_216_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012051", "story_v_out_417012.awb") ~= 0 then
					local var_219_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012051", "story_v_out_417012.awb") / 1000

					if var_219_31 + var_219_23 > arg_216_1.duration_ then
						arg_216_1.duration_ = var_219_31 + var_219_23
					end

					if var_219_26.prefab_name ~= "" and arg_216_1.actors_[var_219_26.prefab_name] ~= nil then
						local var_219_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_216_1.actors_[var_219_26.prefab_name].transform, "story_v_out_417012", "417012051", "story_v_out_417012.awb")

						arg_216_1:RecordAudio("417012051", var_219_32)
						arg_216_1:RecordAudio("417012051", var_219_32)
					else
						arg_216_1:AudioAction("play", "voice", "story_v_out_417012", "417012051", "story_v_out_417012.awb")
					end

					arg_216_1:RecordHistoryTalkVoice("story_v_out_417012", "417012051", "story_v_out_417012.awb")
				end

				arg_216_1:RecordContent(arg_216_1.text_.text)
			end

			local var_219_33 = math.max(var_219_24, arg_216_1.talkMaxDuration)

			if var_219_23 <= arg_216_1.time_ and arg_216_1.time_ < var_219_23 + var_219_33 then
				arg_216_1.typewritter.percent = (arg_216_1.time_ - var_219_23) / var_219_33

				arg_216_1.typewritter:SetDirty()
			end

			if arg_216_1.time_ >= var_219_23 + var_219_33 and arg_216_1.time_ < var_219_23 + var_219_33 + arg_219_0 then
				arg_216_1.typewritter.percent = 1

				arg_216_1.typewritter:SetDirty()
				arg_216_1:ShowNextGo(true)
			end
		end
	end,
	Play417012052 = function(arg_220_0, arg_220_1)
		arg_220_1.time_ = 0
		arg_220_1.frameCnt_ = 0
		arg_220_1.state_ = "playing"
		arg_220_1.curTalkId_ = 417012052
		arg_220_1.duration_ = 5

		SetActive(arg_220_1.tipsGo_, false)

		function arg_220_1.onSingleLineFinish_()
			arg_220_1.onSingleLineUpdate_ = nil
			arg_220_1.onSingleLineFinish_ = nil
			arg_220_1.state_ = "waiting"
		end

		function arg_220_1.playNext_(arg_222_0)
			if arg_222_0 == 1 then
				arg_220_0:Play417012053(arg_220_1)
			end
		end

		function arg_220_1.onSingleLineUpdate_(arg_223_0)
			local var_223_0 = arg_220_1.actors_["1034"]
			local var_223_1 = 0

			if var_223_1 < arg_220_1.time_ and arg_220_1.time_ <= var_223_1 + arg_223_0 and not isNil(var_223_0) and arg_220_1.var_.actorSpriteComps1034 == nil then
				arg_220_1.var_.actorSpriteComps1034 = var_223_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_223_2 = 0.2

			if var_223_1 <= arg_220_1.time_ and arg_220_1.time_ < var_223_1 + var_223_2 and not isNil(var_223_0) then
				local var_223_3 = (arg_220_1.time_ - var_223_1) / var_223_2

				if arg_220_1.var_.actorSpriteComps1034 then
					for iter_223_0, iter_223_1 in pairs(arg_220_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_223_1 then
							if arg_220_1.isInRecall_ then
								local var_223_4 = Mathf.Lerp(iter_223_1.color.r, arg_220_1.hightColor2.r, var_223_3)
								local var_223_5 = Mathf.Lerp(iter_223_1.color.g, arg_220_1.hightColor2.g, var_223_3)
								local var_223_6 = Mathf.Lerp(iter_223_1.color.b, arg_220_1.hightColor2.b, var_223_3)

								iter_223_1.color = Color.New(var_223_4, var_223_5, var_223_6)
							else
								local var_223_7 = Mathf.Lerp(iter_223_1.color.r, 0.5, var_223_3)

								iter_223_1.color = Color.New(var_223_7, var_223_7, var_223_7)
							end
						end
					end
				end
			end

			if arg_220_1.time_ >= var_223_1 + var_223_2 and arg_220_1.time_ < var_223_1 + var_223_2 + arg_223_0 and not isNil(var_223_0) and arg_220_1.var_.actorSpriteComps1034 then
				for iter_223_2, iter_223_3 in pairs(arg_220_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_223_3 then
						if arg_220_1.isInRecall_ then
							iter_223_3.color = arg_220_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_223_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_220_1.var_.actorSpriteComps1034 = nil
			end

			local var_223_8 = arg_220_1.actors_["1015"].transform
			local var_223_9 = 0

			if var_223_9 < arg_220_1.time_ and arg_220_1.time_ <= var_223_9 + arg_223_0 then
				arg_220_1.var_.moveOldPos1015 = var_223_8.localPosition
				var_223_8.localScale = Vector3.New(1, 1, 1)

				arg_220_1:CheckSpriteTmpPos("1015", 7)

				local var_223_10 = var_223_8.childCount

				for iter_223_4 = 0, var_223_10 - 1 do
					local var_223_11 = var_223_8:GetChild(iter_223_4)

					if var_223_11.name == "" or not string.find(var_223_11.name, "split") then
						var_223_11.gameObject:SetActive(true)
					else
						var_223_11.gameObject:SetActive(false)
					end
				end
			end

			local var_223_12 = 0.001

			if var_223_9 <= arg_220_1.time_ and arg_220_1.time_ < var_223_9 + var_223_12 then
				local var_223_13 = (arg_220_1.time_ - var_223_9) / var_223_12
				local var_223_14 = Vector3.New(0, -2000, 0)

				var_223_8.localPosition = Vector3.Lerp(arg_220_1.var_.moveOldPos1015, var_223_14, var_223_13)
			end

			if arg_220_1.time_ >= var_223_9 + var_223_12 and arg_220_1.time_ < var_223_9 + var_223_12 + arg_223_0 then
				var_223_8.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_223_15 = arg_220_1.actors_["1034"].transform
			local var_223_16 = 0

			if var_223_16 < arg_220_1.time_ and arg_220_1.time_ <= var_223_16 + arg_223_0 then
				arg_220_1.var_.moveOldPos1034 = var_223_15.localPosition
				var_223_15.localScale = Vector3.New(1, 1, 1)

				arg_220_1:CheckSpriteTmpPos("1034", 7)

				local var_223_17 = var_223_15.childCount

				for iter_223_5 = 0, var_223_17 - 1 do
					local var_223_18 = var_223_15:GetChild(iter_223_5)

					if var_223_18.name == "" or not string.find(var_223_18.name, "split") then
						var_223_18.gameObject:SetActive(true)
					else
						var_223_18.gameObject:SetActive(false)
					end
				end
			end

			local var_223_19 = 0.001

			if var_223_16 <= arg_220_1.time_ and arg_220_1.time_ < var_223_16 + var_223_19 then
				local var_223_20 = (arg_220_1.time_ - var_223_16) / var_223_19
				local var_223_21 = Vector3.New(0, -2000, 0)

				var_223_15.localPosition = Vector3.Lerp(arg_220_1.var_.moveOldPos1034, var_223_21, var_223_20)
			end

			if arg_220_1.time_ >= var_223_16 + var_223_19 and arg_220_1.time_ < var_223_16 + var_223_19 + arg_223_0 then
				var_223_15.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_223_22 = 0.666666666666667
			local var_223_23 = 1

			if var_223_22 < arg_220_1.time_ and arg_220_1.time_ <= var_223_22 + arg_223_0 then
				local var_223_24 = "play"
				local var_223_25 = "effect"

				arg_220_1:AudioAction(var_223_24, var_223_25, "se_story_1310", "se_story_1310_clock", "")
			end

			local var_223_26 = 0

			if var_223_26 < arg_220_1.time_ and arg_220_1.time_ <= var_223_26 + arg_223_0 then
				arg_220_1.allBtn_.enabled = false
			end

			local var_223_27 = 1.1

			if arg_220_1.time_ >= var_223_26 + var_223_27 and arg_220_1.time_ < var_223_26 + var_223_27 + arg_223_0 then
				arg_220_1.allBtn_.enabled = true
			end

			local var_223_28 = 0
			local var_223_29 = 1.1

			if var_223_28 < arg_220_1.time_ and arg_220_1.time_ <= var_223_28 + arg_223_0 then
				arg_220_1.talkMaxDuration = 0
				arg_220_1.dialogCg_.alpha = 1

				arg_220_1.dialog_:SetActive(true)
				SetActive(arg_220_1.leftNameGo_, false)

				arg_220_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_220_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_220_1:RecordName(arg_220_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_220_1.iconTrs_.gameObject, false)
				arg_220_1.callingController_:SetSelectedState("normal")

				local var_223_30 = arg_220_1:GetWordFromCfg(417012052)
				local var_223_31 = arg_220_1:FormatText(var_223_30.content)

				arg_220_1.text_.text = var_223_31

				LuaForUtil.ClearLinePrefixSymbol(arg_220_1.text_)

				local var_223_32 = 44
				local var_223_33 = utf8.len(var_223_31)
				local var_223_34 = var_223_32 <= 0 and var_223_29 or var_223_29 * (var_223_33 / var_223_32)

				if var_223_34 > 0 and var_223_29 < var_223_34 then
					arg_220_1.talkMaxDuration = var_223_34

					if var_223_34 + var_223_28 > arg_220_1.duration_ then
						arg_220_1.duration_ = var_223_34 + var_223_28
					end
				end

				arg_220_1.text_.text = var_223_31
				arg_220_1.typewritter.percent = 0

				arg_220_1.typewritter:SetDirty()
				arg_220_1:ShowNextGo(false)
				arg_220_1:RecordContent(arg_220_1.text_.text)
			end

			local var_223_35 = math.max(var_223_29, arg_220_1.talkMaxDuration)

			if var_223_28 <= arg_220_1.time_ and arg_220_1.time_ < var_223_28 + var_223_35 then
				arg_220_1.typewritter.percent = (arg_220_1.time_ - var_223_28) / var_223_35

				arg_220_1.typewritter:SetDirty()
			end

			if arg_220_1.time_ >= var_223_28 + var_223_35 and arg_220_1.time_ < var_223_28 + var_223_35 + arg_223_0 then
				arg_220_1.typewritter.percent = 1

				arg_220_1.typewritter:SetDirty()
				arg_220_1:ShowNextGo(true)
			end
		end
	end,
	Play417012053 = function(arg_224_0, arg_224_1)
		arg_224_1.time_ = 0
		arg_224_1.frameCnt_ = 0
		arg_224_1.state_ = "playing"
		arg_224_1.curTalkId_ = 417012053
		arg_224_1.duration_ = 5

		SetActive(arg_224_1.tipsGo_, false)

		function arg_224_1.onSingleLineFinish_()
			arg_224_1.onSingleLineUpdate_ = nil
			arg_224_1.onSingleLineFinish_ = nil
			arg_224_1.state_ = "waiting"
		end

		function arg_224_1.playNext_(arg_226_0)
			if arg_226_0 == 1 then
				arg_224_0:Play417012054(arg_224_1)
			end
		end

		function arg_224_1.onSingleLineUpdate_(arg_227_0)
			local var_227_0 = 1.1
			local var_227_1 = 1

			if var_227_0 < arg_224_1.time_ and arg_224_1.time_ <= var_227_0 + arg_227_0 then
				local var_227_2 = "play"
				local var_227_3 = "effect"

				arg_224_1:AudioAction(var_227_2, var_227_3, "se_story_1310", "se_story_1310_footstep09", "")
			end

			local var_227_4 = 0
			local var_227_5 = 1.6

			if var_227_4 < arg_224_1.time_ and arg_224_1.time_ <= var_227_4 + arg_227_0 then
				arg_224_1.talkMaxDuration = 0
				arg_224_1.dialogCg_.alpha = 1

				arg_224_1.dialog_:SetActive(true)
				SetActive(arg_224_1.leftNameGo_, false)

				arg_224_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_224_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_224_1:RecordName(arg_224_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_224_1.iconTrs_.gameObject, false)
				arg_224_1.callingController_:SetSelectedState("normal")

				local var_227_6 = arg_224_1:GetWordFromCfg(417012053)
				local var_227_7 = arg_224_1:FormatText(var_227_6.content)

				arg_224_1.text_.text = var_227_7

				LuaForUtil.ClearLinePrefixSymbol(arg_224_1.text_)

				local var_227_8 = 64
				local var_227_9 = utf8.len(var_227_7)
				local var_227_10 = var_227_8 <= 0 and var_227_5 or var_227_5 * (var_227_9 / var_227_8)

				if var_227_10 > 0 and var_227_5 < var_227_10 then
					arg_224_1.talkMaxDuration = var_227_10

					if var_227_10 + var_227_4 > arg_224_1.duration_ then
						arg_224_1.duration_ = var_227_10 + var_227_4
					end
				end

				arg_224_1.text_.text = var_227_7
				arg_224_1.typewritter.percent = 0

				arg_224_1.typewritter:SetDirty()
				arg_224_1:ShowNextGo(false)
				arg_224_1:RecordContent(arg_224_1.text_.text)
			end

			local var_227_11 = math.max(var_227_5, arg_224_1.talkMaxDuration)

			if var_227_4 <= arg_224_1.time_ and arg_224_1.time_ < var_227_4 + var_227_11 then
				arg_224_1.typewritter.percent = (arg_224_1.time_ - var_227_4) / var_227_11

				arg_224_1.typewritter:SetDirty()
			end

			if arg_224_1.time_ >= var_227_4 + var_227_11 and arg_224_1.time_ < var_227_4 + var_227_11 + arg_227_0 then
				arg_224_1.typewritter.percent = 1

				arg_224_1.typewritter:SetDirty()
				arg_224_1:ShowNextGo(true)
			end
		end
	end,
	Play417012054 = function(arg_228_0, arg_228_1)
		arg_228_1.time_ = 0
		arg_228_1.frameCnt_ = 0
		arg_228_1.state_ = "playing"
		arg_228_1.curTalkId_ = 417012054
		arg_228_1.duration_ = 6.2

		local var_228_0 = {
			zh = 3.733,
			ja = 6.2
		}
		local var_228_1 = manager.audio:GetLocalizationFlag()

		if var_228_0[var_228_1] ~= nil then
			arg_228_1.duration_ = var_228_0[var_228_1]
		end

		SetActive(arg_228_1.tipsGo_, false)

		function arg_228_1.onSingleLineFinish_()
			arg_228_1.onSingleLineUpdate_ = nil
			arg_228_1.onSingleLineFinish_ = nil
			arg_228_1.state_ = "waiting"
		end

		function arg_228_1.playNext_(arg_230_0)
			if arg_230_0 == 1 then
				arg_228_0:Play417012055(arg_228_1)
			end
		end

		function arg_228_1.onSingleLineUpdate_(arg_231_0)
			local var_231_0 = arg_228_1.actors_["1034"]
			local var_231_1 = 0

			if var_231_1 < arg_228_1.time_ and arg_228_1.time_ <= var_231_1 + arg_231_0 and not isNil(var_231_0) and arg_228_1.var_.actorSpriteComps1034 == nil then
				arg_228_1.var_.actorSpriteComps1034 = var_231_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_231_2 = 0.2

			if var_231_1 <= arg_228_1.time_ and arg_228_1.time_ < var_231_1 + var_231_2 and not isNil(var_231_0) then
				local var_231_3 = (arg_228_1.time_ - var_231_1) / var_231_2

				if arg_228_1.var_.actorSpriteComps1034 then
					for iter_231_0, iter_231_1 in pairs(arg_228_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_231_1 then
							if arg_228_1.isInRecall_ then
								local var_231_4 = Mathf.Lerp(iter_231_1.color.r, arg_228_1.hightColor1.r, var_231_3)
								local var_231_5 = Mathf.Lerp(iter_231_1.color.g, arg_228_1.hightColor1.g, var_231_3)
								local var_231_6 = Mathf.Lerp(iter_231_1.color.b, arg_228_1.hightColor1.b, var_231_3)

								iter_231_1.color = Color.New(var_231_4, var_231_5, var_231_6)
							else
								local var_231_7 = Mathf.Lerp(iter_231_1.color.r, 1, var_231_3)

								iter_231_1.color = Color.New(var_231_7, var_231_7, var_231_7)
							end
						end
					end
				end
			end

			if arg_228_1.time_ >= var_231_1 + var_231_2 and arg_228_1.time_ < var_231_1 + var_231_2 + arg_231_0 and not isNil(var_231_0) and arg_228_1.var_.actorSpriteComps1034 then
				for iter_231_2, iter_231_3 in pairs(arg_228_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_231_3 then
						if arg_228_1.isInRecall_ then
							iter_231_3.color = arg_228_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_231_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_228_1.var_.actorSpriteComps1034 = nil
			end

			local var_231_8 = arg_228_1.actors_["1034"].transform
			local var_231_9 = 0

			if var_231_9 < arg_228_1.time_ and arg_228_1.time_ <= var_231_9 + arg_231_0 then
				arg_228_1.var_.moveOldPos1034 = var_231_8.localPosition
				var_231_8.localScale = Vector3.New(1, 1, 1)

				arg_228_1:CheckSpriteTmpPos("1034", 3)

				local var_231_10 = var_231_8.childCount

				for iter_231_4 = 0, var_231_10 - 1 do
					local var_231_11 = var_231_8:GetChild(iter_231_4)

					if var_231_11.name == "split_1" or not string.find(var_231_11.name, "split") then
						var_231_11.gameObject:SetActive(true)
					else
						var_231_11.gameObject:SetActive(false)
					end
				end
			end

			local var_231_12 = 0.001

			if var_231_9 <= arg_228_1.time_ and arg_228_1.time_ < var_231_9 + var_231_12 then
				local var_231_13 = (arg_228_1.time_ - var_231_9) / var_231_12
				local var_231_14 = Vector3.New(0, -331.9, -324)

				var_231_8.localPosition = Vector3.Lerp(arg_228_1.var_.moveOldPos1034, var_231_14, var_231_13)
			end

			if arg_228_1.time_ >= var_231_9 + var_231_12 and arg_228_1.time_ < var_231_9 + var_231_12 + arg_231_0 then
				var_231_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_231_15 = 0
			local var_231_16 = 0.475

			if var_231_15 < arg_228_1.time_ and arg_228_1.time_ <= var_231_15 + arg_231_0 then
				arg_228_1.talkMaxDuration = 0
				arg_228_1.dialogCg_.alpha = 1

				arg_228_1.dialog_:SetActive(true)
				SetActive(arg_228_1.leftNameGo_, true)

				local var_231_17 = arg_228_1:FormatText(StoryNameCfg[1109].name)

				arg_228_1.leftNameTxt_.text = var_231_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_228_1.leftNameTxt_.transform)

				arg_228_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_228_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_228_1:RecordName(arg_228_1.leftNameTxt_.text)
				SetActive(arg_228_1.iconTrs_.gameObject, false)
				arg_228_1.callingController_:SetSelectedState("normal")

				local var_231_18 = arg_228_1:GetWordFromCfg(417012054)
				local var_231_19 = arg_228_1:FormatText(var_231_18.content)

				arg_228_1.text_.text = var_231_19

				LuaForUtil.ClearLinePrefixSymbol(arg_228_1.text_)

				local var_231_20 = 19
				local var_231_21 = utf8.len(var_231_19)
				local var_231_22 = var_231_20 <= 0 and var_231_16 or var_231_16 * (var_231_21 / var_231_20)

				if var_231_22 > 0 and var_231_16 < var_231_22 then
					arg_228_1.talkMaxDuration = var_231_22

					if var_231_22 + var_231_15 > arg_228_1.duration_ then
						arg_228_1.duration_ = var_231_22 + var_231_15
					end
				end

				arg_228_1.text_.text = var_231_19
				arg_228_1.typewritter.percent = 0

				arg_228_1.typewritter:SetDirty()
				arg_228_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012054", "story_v_out_417012.awb") ~= 0 then
					local var_231_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012054", "story_v_out_417012.awb") / 1000

					if var_231_23 + var_231_15 > arg_228_1.duration_ then
						arg_228_1.duration_ = var_231_23 + var_231_15
					end

					if var_231_18.prefab_name ~= "" and arg_228_1.actors_[var_231_18.prefab_name] ~= nil then
						local var_231_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_228_1.actors_[var_231_18.prefab_name].transform, "story_v_out_417012", "417012054", "story_v_out_417012.awb")

						arg_228_1:RecordAudio("417012054", var_231_24)
						arg_228_1:RecordAudio("417012054", var_231_24)
					else
						arg_228_1:AudioAction("play", "voice", "story_v_out_417012", "417012054", "story_v_out_417012.awb")
					end

					arg_228_1:RecordHistoryTalkVoice("story_v_out_417012", "417012054", "story_v_out_417012.awb")
				end

				arg_228_1:RecordContent(arg_228_1.text_.text)
			end

			local var_231_25 = math.max(var_231_16, arg_228_1.talkMaxDuration)

			if var_231_15 <= arg_228_1.time_ and arg_228_1.time_ < var_231_15 + var_231_25 then
				arg_228_1.typewritter.percent = (arg_228_1.time_ - var_231_15) / var_231_25

				arg_228_1.typewritter:SetDirty()
			end

			if arg_228_1.time_ >= var_231_15 + var_231_25 and arg_228_1.time_ < var_231_15 + var_231_25 + arg_231_0 then
				arg_228_1.typewritter.percent = 1

				arg_228_1.typewritter:SetDirty()
				arg_228_1:ShowNextGo(true)
			end
		end
	end,
	Play417012055 = function(arg_232_0, arg_232_1)
		arg_232_1.time_ = 0
		arg_232_1.frameCnt_ = 0
		arg_232_1.state_ = "playing"
		arg_232_1.curTalkId_ = 417012055
		arg_232_1.duration_ = 10.13

		local var_232_0 = {
			zh = 5.1,
			ja = 10.133
		}
		local var_232_1 = manager.audio:GetLocalizationFlag()

		if var_232_0[var_232_1] ~= nil then
			arg_232_1.duration_ = var_232_0[var_232_1]
		end

		SetActive(arg_232_1.tipsGo_, false)

		function arg_232_1.onSingleLineFinish_()
			arg_232_1.onSingleLineUpdate_ = nil
			arg_232_1.onSingleLineFinish_ = nil
			arg_232_1.state_ = "waiting"
		end

		function arg_232_1.playNext_(arg_234_0)
			if arg_234_0 == 1 then
				arg_232_0:Play417012056(arg_232_1)
			end
		end

		function arg_232_1.onSingleLineUpdate_(arg_235_0)
			local var_235_0 = arg_232_1.actors_["1034"].transform
			local var_235_1 = 0

			if var_235_1 < arg_232_1.time_ and arg_232_1.time_ <= var_235_1 + arg_235_0 then
				arg_232_1.var_.moveOldPos1034 = var_235_0.localPosition
				var_235_0.localScale = Vector3.New(1, 1, 1)

				arg_232_1:CheckSpriteTmpPos("1034", 3)

				local var_235_2 = var_235_0.childCount

				for iter_235_0 = 0, var_235_2 - 1 do
					local var_235_3 = var_235_0:GetChild(iter_235_0)

					if var_235_3.name == "split_7" or not string.find(var_235_3.name, "split") then
						var_235_3.gameObject:SetActive(true)
					else
						var_235_3.gameObject:SetActive(false)
					end
				end
			end

			local var_235_4 = 0.001

			if var_235_1 <= arg_232_1.time_ and arg_232_1.time_ < var_235_1 + var_235_4 then
				local var_235_5 = (arg_232_1.time_ - var_235_1) / var_235_4
				local var_235_6 = Vector3.New(0, -331.9, -324)

				var_235_0.localPosition = Vector3.Lerp(arg_232_1.var_.moveOldPos1034, var_235_6, var_235_5)
			end

			if arg_232_1.time_ >= var_235_1 + var_235_4 and arg_232_1.time_ < var_235_1 + var_235_4 + arg_235_0 then
				var_235_0.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_235_7 = 0
			local var_235_8 = 0.55

			if var_235_7 < arg_232_1.time_ and arg_232_1.time_ <= var_235_7 + arg_235_0 then
				arg_232_1.talkMaxDuration = 0
				arg_232_1.dialogCg_.alpha = 1

				arg_232_1.dialog_:SetActive(true)
				SetActive(arg_232_1.leftNameGo_, true)

				local var_235_9 = arg_232_1:FormatText(StoryNameCfg[1109].name)

				arg_232_1.leftNameTxt_.text = var_235_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_232_1.leftNameTxt_.transform)

				arg_232_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_232_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_232_1:RecordName(arg_232_1.leftNameTxt_.text)
				SetActive(arg_232_1.iconTrs_.gameObject, false)
				arg_232_1.callingController_:SetSelectedState("normal")

				local var_235_10 = arg_232_1:GetWordFromCfg(417012055)
				local var_235_11 = arg_232_1:FormatText(var_235_10.content)

				arg_232_1.text_.text = var_235_11

				LuaForUtil.ClearLinePrefixSymbol(arg_232_1.text_)

				local var_235_12 = 22
				local var_235_13 = utf8.len(var_235_11)
				local var_235_14 = var_235_12 <= 0 and var_235_8 or var_235_8 * (var_235_13 / var_235_12)

				if var_235_14 > 0 and var_235_8 < var_235_14 then
					arg_232_1.talkMaxDuration = var_235_14

					if var_235_14 + var_235_7 > arg_232_1.duration_ then
						arg_232_1.duration_ = var_235_14 + var_235_7
					end
				end

				arg_232_1.text_.text = var_235_11
				arg_232_1.typewritter.percent = 0

				arg_232_1.typewritter:SetDirty()
				arg_232_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012055", "story_v_out_417012.awb") ~= 0 then
					local var_235_15 = manager.audio:GetVoiceLength("story_v_out_417012", "417012055", "story_v_out_417012.awb") / 1000

					if var_235_15 + var_235_7 > arg_232_1.duration_ then
						arg_232_1.duration_ = var_235_15 + var_235_7
					end

					if var_235_10.prefab_name ~= "" and arg_232_1.actors_[var_235_10.prefab_name] ~= nil then
						local var_235_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_232_1.actors_[var_235_10.prefab_name].transform, "story_v_out_417012", "417012055", "story_v_out_417012.awb")

						arg_232_1:RecordAudio("417012055", var_235_16)
						arg_232_1:RecordAudio("417012055", var_235_16)
					else
						arg_232_1:AudioAction("play", "voice", "story_v_out_417012", "417012055", "story_v_out_417012.awb")
					end

					arg_232_1:RecordHistoryTalkVoice("story_v_out_417012", "417012055", "story_v_out_417012.awb")
				end

				arg_232_1:RecordContent(arg_232_1.text_.text)
			end

			local var_235_17 = math.max(var_235_8, arg_232_1.talkMaxDuration)

			if var_235_7 <= arg_232_1.time_ and arg_232_1.time_ < var_235_7 + var_235_17 then
				arg_232_1.typewritter.percent = (arg_232_1.time_ - var_235_7) / var_235_17

				arg_232_1.typewritter:SetDirty()
			end

			if arg_232_1.time_ >= var_235_7 + var_235_17 and arg_232_1.time_ < var_235_7 + var_235_17 + arg_235_0 then
				arg_232_1.typewritter.percent = 1

				arg_232_1.typewritter:SetDirty()
				arg_232_1:ShowNextGo(true)
			end
		end
	end,
	Play417012056 = function(arg_236_0, arg_236_1)
		arg_236_1.time_ = 0
		arg_236_1.frameCnt_ = 0
		arg_236_1.state_ = "playing"
		arg_236_1.curTalkId_ = 417012056
		arg_236_1.duration_ = 8.17

		local var_236_0 = {
			zh = 8.16666666666667,
			ja = 7.56666666666667
		}
		local var_236_1 = manager.audio:GetLocalizationFlag()

		if var_236_0[var_236_1] ~= nil then
			arg_236_1.duration_ = var_236_0[var_236_1]
		end

		SetActive(arg_236_1.tipsGo_, false)

		function arg_236_1.onSingleLineFinish_()
			arg_236_1.onSingleLineUpdate_ = nil
			arg_236_1.onSingleLineFinish_ = nil
			arg_236_1.state_ = "waiting"
		end

		function arg_236_1.playNext_(arg_238_0)
			if arg_238_0 == 1 then
				arg_236_0:Play417012057(arg_236_1)
			end
		end

		function arg_236_1.onSingleLineUpdate_(arg_239_0)
			local var_239_0 = "I16f"

			if arg_236_1.bgs_[var_239_0] == nil then
				local var_239_1 = Object.Instantiate(arg_236_1.paintGo_)

				var_239_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_239_0)
				var_239_1.name = var_239_0
				var_239_1.transform.parent = arg_236_1.stage_.transform
				var_239_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_236_1.bgs_[var_239_0] = var_239_1
			end

			local var_239_2 = 1.32433333333333

			if var_239_2 < arg_236_1.time_ and arg_236_1.time_ <= var_239_2 + arg_239_0 then
				local var_239_3 = manager.ui.mainCamera.transform.localPosition
				local var_239_4 = Vector3.New(0, 0, 10) + Vector3.New(var_239_3.x, var_239_3.y, 0)
				local var_239_5 = arg_236_1.bgs_.I16f

				var_239_5.transform.localPosition = var_239_4
				var_239_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_239_6 = var_239_5:GetComponent("SpriteRenderer")

				if var_239_6 and var_239_6.sprite then
					local var_239_7 = (var_239_5.transform.localPosition - var_239_3).z
					local var_239_8 = manager.ui.mainCameraCom_
					local var_239_9 = 2 * var_239_7 * Mathf.Tan(var_239_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_239_10 = var_239_9 * var_239_8.aspect
					local var_239_11 = var_239_6.sprite.bounds.size.x
					local var_239_12 = var_239_6.sprite.bounds.size.y
					local var_239_13 = var_239_10 / var_239_11
					local var_239_14 = var_239_9 / var_239_12
					local var_239_15 = var_239_14 < var_239_13 and var_239_13 or var_239_14

					var_239_5.transform.localScale = Vector3.New(var_239_15, var_239_15, 0)
				end

				for iter_239_0, iter_239_1 in pairs(arg_236_1.bgs_) do
					if iter_239_0 ~= "I16f" then
						iter_239_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_239_16 = 1.32433333333333

			if var_239_16 < arg_236_1.time_ and arg_236_1.time_ <= var_239_16 + arg_239_0 then
				arg_236_1.allBtn_.enabled = false
			end

			local var_239_17 = 0.3

			if arg_236_1.time_ >= var_239_16 + var_239_17 and arg_236_1.time_ < var_239_16 + var_239_17 + arg_239_0 then
				arg_236_1.allBtn_.enabled = true
			end

			local var_239_18 = 0

			if var_239_18 < arg_236_1.time_ and arg_236_1.time_ <= var_239_18 + arg_239_0 then
				arg_236_1.mask_.enabled = true
				arg_236_1.mask_.raycastTarget = true

				arg_236_1:SetGaussion(false)
			end

			local var_239_19 = 1.35766666666667

			if var_239_18 <= arg_236_1.time_ and arg_236_1.time_ < var_239_18 + var_239_19 then
				local var_239_20 = (arg_236_1.time_ - var_239_18) / var_239_19
				local var_239_21 = Color.New(0, 0, 0)

				var_239_21.a = Mathf.Lerp(0, 1, var_239_20)
				arg_236_1.mask_.color = var_239_21
			end

			if arg_236_1.time_ >= var_239_18 + var_239_19 and arg_236_1.time_ < var_239_18 + var_239_19 + arg_239_0 then
				local var_239_22 = Color.New(0, 0, 0)

				var_239_22.a = 1
				arg_236_1.mask_.color = var_239_22
			end

			local var_239_23 = 1.35833333333333

			if var_239_23 < arg_236_1.time_ and arg_236_1.time_ <= var_239_23 + arg_239_0 then
				arg_236_1.mask_.enabled = true
				arg_236_1.mask_.raycastTarget = true

				arg_236_1:SetGaussion(false)
			end

			local var_239_24 = 2

			if var_239_23 <= arg_236_1.time_ and arg_236_1.time_ < var_239_23 + var_239_24 then
				local var_239_25 = (arg_236_1.time_ - var_239_23) / var_239_24
				local var_239_26 = Color.New(0, 0, 0)

				var_239_26.a = Mathf.Lerp(1, 0, var_239_25)
				arg_236_1.mask_.color = var_239_26
			end

			if arg_236_1.time_ >= var_239_23 + var_239_24 and arg_236_1.time_ < var_239_23 + var_239_24 + arg_239_0 then
				local var_239_27 = Color.New(0, 0, 0)
				local var_239_28 = 0

				arg_236_1.mask_.enabled = false
				var_239_27.a = var_239_28
				arg_236_1.mask_.color = var_239_27
			end

			local var_239_29 = arg_236_1.actors_["1034"]
			local var_239_30 = 1.32433333333333

			if var_239_30 < arg_236_1.time_ and arg_236_1.time_ <= var_239_30 + arg_239_0 and not isNil(var_239_29) and arg_236_1.var_.actorSpriteComps1034 == nil then
				arg_236_1.var_.actorSpriteComps1034 = var_239_29:GetComponentsInChildren(typeof(Image), true)
			end

			local var_239_31 = 0.2

			if var_239_30 <= arg_236_1.time_ and arg_236_1.time_ < var_239_30 + var_239_31 and not isNil(var_239_29) then
				local var_239_32 = (arg_236_1.time_ - var_239_30) / var_239_31

				if arg_236_1.var_.actorSpriteComps1034 then
					for iter_239_2, iter_239_3 in pairs(arg_236_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_239_3 then
							if arg_236_1.isInRecall_ then
								local var_239_33 = Mathf.Lerp(iter_239_3.color.r, arg_236_1.hightColor2.r, var_239_32)
								local var_239_34 = Mathf.Lerp(iter_239_3.color.g, arg_236_1.hightColor2.g, var_239_32)
								local var_239_35 = Mathf.Lerp(iter_239_3.color.b, arg_236_1.hightColor2.b, var_239_32)

								iter_239_3.color = Color.New(var_239_33, var_239_34, var_239_35)
							else
								local var_239_36 = Mathf.Lerp(iter_239_3.color.r, 0.5, var_239_32)

								iter_239_3.color = Color.New(var_239_36, var_239_36, var_239_36)
							end
						end
					end
				end
			end

			if arg_236_1.time_ >= var_239_30 + var_239_31 and arg_236_1.time_ < var_239_30 + var_239_31 + arg_239_0 and not isNil(var_239_29) and arg_236_1.var_.actorSpriteComps1034 then
				for iter_239_4, iter_239_5 in pairs(arg_236_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_239_5 then
						if arg_236_1.isInRecall_ then
							iter_239_5.color = arg_236_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_239_5.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_236_1.var_.actorSpriteComps1034 = nil
			end

			local var_239_37 = arg_236_1.actors_["1034"].transform
			local var_239_38 = 1.32433333333333

			if var_239_38 < arg_236_1.time_ and arg_236_1.time_ <= var_239_38 + arg_239_0 then
				arg_236_1.var_.moveOldPos1034 = var_239_37.localPosition
				var_239_37.localScale = Vector3.New(1, 1, 1)

				arg_236_1:CheckSpriteTmpPos("1034", 7)

				local var_239_39 = var_239_37.childCount

				for iter_239_6 = 0, var_239_39 - 1 do
					local var_239_40 = var_239_37:GetChild(iter_239_6)

					if var_239_40.name == "" or not string.find(var_239_40.name, "split") then
						var_239_40.gameObject:SetActive(true)
					else
						var_239_40.gameObject:SetActive(false)
					end
				end
			end

			local var_239_41 = 0.001

			if var_239_38 <= arg_236_1.time_ and arg_236_1.time_ < var_239_38 + var_239_41 then
				local var_239_42 = (arg_236_1.time_ - var_239_38) / var_239_41
				local var_239_43 = Vector3.New(0, -2000, 0)

				var_239_37.localPosition = Vector3.Lerp(arg_236_1.var_.moveOldPos1034, var_239_43, var_239_42)
			end

			if arg_236_1.time_ >= var_239_38 + var_239_41 and arg_236_1.time_ < var_239_38 + var_239_41 + arg_239_0 then
				var_239_37.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_239_44 = 0
			local var_239_45 = 0.2

			if var_239_44 < arg_236_1.time_ and arg_236_1.time_ <= var_239_44 + arg_239_0 then
				local var_239_46 = "play"
				local var_239_47 = "music"

				arg_236_1:AudioAction(var_239_46, var_239_47, "ui_battle", "ui_battle_stopbgm", "")

				local var_239_48 = ""
				local var_239_49 = manager.audio:GetAudioName("ui_battle", "ui_battle_stopbgm")

				if var_239_49 ~= "" then
					if arg_236_1.bgmTxt_.text ~= var_239_49 and arg_236_1.bgmTxt_.text ~= "" then
						if arg_236_1.bgmTxt2_.text ~= "" then
							arg_236_1.bgmTxt_.text = arg_236_1.bgmTxt2_.text
						end

						arg_236_1.bgmTxt2_.text = var_239_49

						arg_236_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_236_1.bgmTxt_.text = var_239_49
					end

					if arg_236_1.bgmTimer then
						arg_236_1.bgmTimer:Stop()

						arg_236_1.bgmTimer = nil
					end

					if arg_236_1.settingData.show_music_name == 1 then
						arg_236_1.musicController:SetSelectedState("show")
						arg_236_1.musicAnimator_:Play("open", 0, 0)

						if arg_236_1.settingData.music_time ~= 0 then
							arg_236_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_236_1.settingData.music_time), function()
								if arg_236_1 == nil or isNil(arg_236_1.bgmTxt_) then
									return
								end

								arg_236_1.musicController:SetSelectedState("hide")
								arg_236_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			local var_239_50 = 1.2
			local var_239_51 = 1

			if var_239_50 < arg_236_1.time_ and arg_236_1.time_ <= var_239_50 + arg_239_0 then
				local var_239_52 = "play"
				local var_239_53 = "music"

				arg_236_1:AudioAction(var_239_52, var_239_53, "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base.awb")

				local var_239_54 = ""
				local var_239_55 = manager.audio:GetAudioName("bgm_activity_3_10_story_corg_base", "bgm_activity_3_10_story_corg_base")

				if var_239_55 ~= "" then
					if arg_236_1.bgmTxt_.text ~= var_239_55 and arg_236_1.bgmTxt_.text ~= "" then
						if arg_236_1.bgmTxt2_.text ~= "" then
							arg_236_1.bgmTxt_.text = arg_236_1.bgmTxt2_.text
						end

						arg_236_1.bgmTxt2_.text = var_239_55

						arg_236_1.musicChangeAnimator_:Play("music_change", 0, 0)
					else
						arg_236_1.bgmTxt_.text = var_239_55
					end

					if arg_236_1.bgmTimer then
						arg_236_1.bgmTimer:Stop()

						arg_236_1.bgmTimer = nil
					end

					if arg_236_1.settingData.show_music_name == 1 then
						arg_236_1.musicController:SetSelectedState("show")
						arg_236_1.musicAnimator_:Play("open", 0, 0)

						if arg_236_1.settingData.music_time ~= 0 then
							arg_236_1.bgmTimer = TimeTools.StartAfterSeconds(tonumber(arg_236_1.settingData.music_time), function()
								if arg_236_1 == nil or isNil(arg_236_1.bgmTxt_) then
									return
								end

								arg_236_1.musicController:SetSelectedState("hide")
								arg_236_1.musicAnimator_:Play("back", 0, 0)
							end, {})
						end
					end
				end
			end

			if arg_236_1.frameCnt_ <= 1 then
				arg_236_1.dialog_:SetActive(false)
			end

			local var_239_56 = 3.06666666666667
			local var_239_57 = 0.625

			if var_239_56 < arg_236_1.time_ and arg_236_1.time_ <= var_239_56 + arg_239_0 then
				arg_236_1.talkMaxDuration = 0

				arg_236_1.dialog_:SetActive(true)

				local var_239_58 = LeanTween.value(arg_236_1.dialog_, 0, 1, 0.3)

				var_239_58:setOnUpdate(LuaHelper.FloatAction(function(arg_242_0)
					arg_236_1.dialogCg_.alpha = arg_242_0
				end))
				var_239_58:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_236_1.dialog_)
					var_239_58:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_236_1.duration_ = arg_236_1.duration_ + 0.3

				SetActive(arg_236_1.leftNameGo_, true)

				local var_239_59 = arg_236_1:FormatText(StoryNameCfg[585].name)

				arg_236_1.leftNameTxt_.text = var_239_59

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_236_1.leftNameTxt_.transform)

				arg_236_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_236_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_236_1:RecordName(arg_236_1.leftNameTxt_.text)
				SetActive(arg_236_1.iconTrs_.gameObject, true)
				arg_236_1.iconController_:SetSelectedState("hero")

				arg_236_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_citizenmb")

				arg_236_1.callingController_:SetSelectedState("normal")

				arg_236_1.keyicon_.color = Color.New(1, 1, 1)
				arg_236_1.icon_.color = Color.New(1, 1, 1)

				local var_239_60 = arg_236_1:GetWordFromCfg(417012056)
				local var_239_61 = arg_236_1:FormatText(var_239_60.content)

				arg_236_1.text_.text = var_239_61

				LuaForUtil.ClearLinePrefixSymbol(arg_236_1.text_)

				local var_239_62 = 25
				local var_239_63 = utf8.len(var_239_61)
				local var_239_64 = var_239_62 <= 0 and var_239_57 or var_239_57 * (var_239_63 / var_239_62)

				if var_239_64 > 0 and var_239_57 < var_239_64 then
					arg_236_1.talkMaxDuration = var_239_64
					var_239_56 = var_239_56 + 0.3

					if var_239_64 + var_239_56 > arg_236_1.duration_ then
						arg_236_1.duration_ = var_239_64 + var_239_56
					end
				end

				arg_236_1.text_.text = var_239_61
				arg_236_1.typewritter.percent = 0

				arg_236_1.typewritter:SetDirty()
				arg_236_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012056", "story_v_out_417012.awb") ~= 0 then
					local var_239_65 = manager.audio:GetVoiceLength("story_v_out_417012", "417012056", "story_v_out_417012.awb") / 1000

					if var_239_65 + var_239_56 > arg_236_1.duration_ then
						arg_236_1.duration_ = var_239_65 + var_239_56
					end

					if var_239_60.prefab_name ~= "" and arg_236_1.actors_[var_239_60.prefab_name] ~= nil then
						local var_239_66 = LuaForUtil.PlayVoiceWithCriLipsync(arg_236_1.actors_[var_239_60.prefab_name].transform, "story_v_out_417012", "417012056", "story_v_out_417012.awb")

						arg_236_1:RecordAudio("417012056", var_239_66)
						arg_236_1:RecordAudio("417012056", var_239_66)
					else
						arg_236_1:AudioAction("play", "voice", "story_v_out_417012", "417012056", "story_v_out_417012.awb")
					end

					arg_236_1:RecordHistoryTalkVoice("story_v_out_417012", "417012056", "story_v_out_417012.awb")
				end

				arg_236_1:RecordContent(arg_236_1.text_.text)
			end

			local var_239_67 = var_239_56 + 0.3
			local var_239_68 = math.max(var_239_57, arg_236_1.talkMaxDuration)

			if var_239_67 <= arg_236_1.time_ and arg_236_1.time_ < var_239_67 + var_239_68 then
				arg_236_1.typewritter.percent = (arg_236_1.time_ - var_239_67) / var_239_68

				arg_236_1.typewritter:SetDirty()
			end

			if arg_236_1.time_ >= var_239_67 + var_239_68 and arg_236_1.time_ < var_239_67 + var_239_68 + arg_239_0 then
				arg_236_1.typewritter.percent = 1

				arg_236_1.typewritter:SetDirty()
				arg_236_1:ShowNextGo(true)
			end
		end
	end,
	Play417012057 = function(arg_244_0, arg_244_1)
		arg_244_1.time_ = 0
		arg_244_1.frameCnt_ = 0
		arg_244_1.state_ = "playing"
		arg_244_1.curTalkId_ = 417012057
		arg_244_1.duration_ = 14.77

		local var_244_0 = {
			zh = 9.066,
			ja = 14.766
		}
		local var_244_1 = manager.audio:GetLocalizationFlag()

		if var_244_0[var_244_1] ~= nil then
			arg_244_1.duration_ = var_244_0[var_244_1]
		end

		SetActive(arg_244_1.tipsGo_, false)

		function arg_244_1.onSingleLineFinish_()
			arg_244_1.onSingleLineUpdate_ = nil
			arg_244_1.onSingleLineFinish_ = nil
			arg_244_1.state_ = "waiting"
		end

		function arg_244_1.playNext_(arg_246_0)
			if arg_246_0 == 1 then
				arg_244_0:Play417012058(arg_244_1)
			end
		end

		function arg_244_1.onSingleLineUpdate_(arg_247_0)
			local var_247_0 = arg_244_1.actors_["1034"]
			local var_247_1 = 0

			if var_247_1 < arg_244_1.time_ and arg_244_1.time_ <= var_247_1 + arg_247_0 and not isNil(var_247_0) and arg_244_1.var_.actorSpriteComps1034 == nil then
				arg_244_1.var_.actorSpriteComps1034 = var_247_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_247_2 = 0.2

			if var_247_1 <= arg_244_1.time_ and arg_244_1.time_ < var_247_1 + var_247_2 and not isNil(var_247_0) then
				local var_247_3 = (arg_244_1.time_ - var_247_1) / var_247_2

				if arg_244_1.var_.actorSpriteComps1034 then
					for iter_247_0, iter_247_1 in pairs(arg_244_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_247_1 then
							if arg_244_1.isInRecall_ then
								local var_247_4 = Mathf.Lerp(iter_247_1.color.r, arg_244_1.hightColor1.r, var_247_3)
								local var_247_5 = Mathf.Lerp(iter_247_1.color.g, arg_244_1.hightColor1.g, var_247_3)
								local var_247_6 = Mathf.Lerp(iter_247_1.color.b, arg_244_1.hightColor1.b, var_247_3)

								iter_247_1.color = Color.New(var_247_4, var_247_5, var_247_6)
							else
								local var_247_7 = Mathf.Lerp(iter_247_1.color.r, 1, var_247_3)

								iter_247_1.color = Color.New(var_247_7, var_247_7, var_247_7)
							end
						end
					end
				end
			end

			if arg_244_1.time_ >= var_247_1 + var_247_2 and arg_244_1.time_ < var_247_1 + var_247_2 + arg_247_0 and not isNil(var_247_0) and arg_244_1.var_.actorSpriteComps1034 then
				for iter_247_2, iter_247_3 in pairs(arg_244_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_247_3 then
						if arg_244_1.isInRecall_ then
							iter_247_3.color = arg_244_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_247_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_244_1.var_.actorSpriteComps1034 = nil
			end

			local var_247_8 = arg_244_1.actors_["1034"].transform
			local var_247_9 = 0

			if var_247_9 < arg_244_1.time_ and arg_244_1.time_ <= var_247_9 + arg_247_0 then
				arg_244_1.var_.moveOldPos1034 = var_247_8.localPosition
				var_247_8.localScale = Vector3.New(1, 1, 1)

				arg_244_1:CheckSpriteTmpPos("1034", 3)

				local var_247_10 = var_247_8.childCount

				for iter_247_4 = 0, var_247_10 - 1 do
					local var_247_11 = var_247_8:GetChild(iter_247_4)

					if var_247_11.name == "" or not string.find(var_247_11.name, "split") then
						var_247_11.gameObject:SetActive(true)
					else
						var_247_11.gameObject:SetActive(false)
					end
				end
			end

			local var_247_12 = 0.001

			if var_247_9 <= arg_244_1.time_ and arg_244_1.time_ < var_247_9 + var_247_12 then
				local var_247_13 = (arg_244_1.time_ - var_247_9) / var_247_12
				local var_247_14 = Vector3.New(0, -331.9, -324)

				var_247_8.localPosition = Vector3.Lerp(arg_244_1.var_.moveOldPos1034, var_247_14, var_247_13)
			end

			if arg_244_1.time_ >= var_247_9 + var_247_12 and arg_244_1.time_ < var_247_9 + var_247_12 + arg_247_0 then
				var_247_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_247_15 = 0
			local var_247_16 = 1.1

			if var_247_15 < arg_244_1.time_ and arg_244_1.time_ <= var_247_15 + arg_247_0 then
				arg_244_1.talkMaxDuration = 0
				arg_244_1.dialogCg_.alpha = 1

				arg_244_1.dialog_:SetActive(true)
				SetActive(arg_244_1.leftNameGo_, true)

				local var_247_17 = arg_244_1:FormatText(StoryNameCfg[1109].name)

				arg_244_1.leftNameTxt_.text = var_247_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_244_1.leftNameTxt_.transform)

				arg_244_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_244_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_244_1:RecordName(arg_244_1.leftNameTxt_.text)
				SetActive(arg_244_1.iconTrs_.gameObject, false)
				arg_244_1.callingController_:SetSelectedState("normal")

				local var_247_18 = arg_244_1:GetWordFromCfg(417012057)
				local var_247_19 = arg_244_1:FormatText(var_247_18.content)

				arg_244_1.text_.text = var_247_19

				LuaForUtil.ClearLinePrefixSymbol(arg_244_1.text_)

				local var_247_20 = 44
				local var_247_21 = utf8.len(var_247_19)
				local var_247_22 = var_247_20 <= 0 and var_247_16 or var_247_16 * (var_247_21 / var_247_20)

				if var_247_22 > 0 and var_247_16 < var_247_22 then
					arg_244_1.talkMaxDuration = var_247_22

					if var_247_22 + var_247_15 > arg_244_1.duration_ then
						arg_244_1.duration_ = var_247_22 + var_247_15
					end
				end

				arg_244_1.text_.text = var_247_19
				arg_244_1.typewritter.percent = 0

				arg_244_1.typewritter:SetDirty()
				arg_244_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012057", "story_v_out_417012.awb") ~= 0 then
					local var_247_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012057", "story_v_out_417012.awb") / 1000

					if var_247_23 + var_247_15 > arg_244_1.duration_ then
						arg_244_1.duration_ = var_247_23 + var_247_15
					end

					if var_247_18.prefab_name ~= "" and arg_244_1.actors_[var_247_18.prefab_name] ~= nil then
						local var_247_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_244_1.actors_[var_247_18.prefab_name].transform, "story_v_out_417012", "417012057", "story_v_out_417012.awb")

						arg_244_1:RecordAudio("417012057", var_247_24)
						arg_244_1:RecordAudio("417012057", var_247_24)
					else
						arg_244_1:AudioAction("play", "voice", "story_v_out_417012", "417012057", "story_v_out_417012.awb")
					end

					arg_244_1:RecordHistoryTalkVoice("story_v_out_417012", "417012057", "story_v_out_417012.awb")
				end

				arg_244_1:RecordContent(arg_244_1.text_.text)
			end

			local var_247_25 = math.max(var_247_16, arg_244_1.talkMaxDuration)

			if var_247_15 <= arg_244_1.time_ and arg_244_1.time_ < var_247_15 + var_247_25 then
				arg_244_1.typewritter.percent = (arg_244_1.time_ - var_247_15) / var_247_25

				arg_244_1.typewritter:SetDirty()
			end

			if arg_244_1.time_ >= var_247_15 + var_247_25 and arg_244_1.time_ < var_247_15 + var_247_25 + arg_247_0 then
				arg_244_1.typewritter.percent = 1

				arg_244_1.typewritter:SetDirty()
				arg_244_1:ShowNextGo(true)
			end
		end
	end,
	Play417012058 = function(arg_248_0, arg_248_1)
		arg_248_1.time_ = 0
		arg_248_1.frameCnt_ = 0
		arg_248_1.state_ = "playing"
		arg_248_1.curTalkId_ = 417012058
		arg_248_1.duration_ = 18.37

		local var_248_0 = {
			zh = 10.466,
			ja = 18.366
		}
		local var_248_1 = manager.audio:GetLocalizationFlag()

		if var_248_0[var_248_1] ~= nil then
			arg_248_1.duration_ = var_248_0[var_248_1]
		end

		SetActive(arg_248_1.tipsGo_, false)

		function arg_248_1.onSingleLineFinish_()
			arg_248_1.onSingleLineUpdate_ = nil
			arg_248_1.onSingleLineFinish_ = nil
			arg_248_1.state_ = "waiting"
		end

		function arg_248_1.playNext_(arg_250_0)
			if arg_250_0 == 1 then
				arg_248_0:Play417012059(arg_248_1)
			end
		end

		function arg_248_1.onSingleLineUpdate_(arg_251_0)
			local var_251_0 = arg_248_1.actors_["1034"]
			local var_251_1 = 0

			if var_251_1 < arg_248_1.time_ and arg_248_1.time_ <= var_251_1 + arg_251_0 and not isNil(var_251_0) and arg_248_1.var_.actorSpriteComps1034 == nil then
				arg_248_1.var_.actorSpriteComps1034 = var_251_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_251_2 = 0.2

			if var_251_1 <= arg_248_1.time_ and arg_248_1.time_ < var_251_1 + var_251_2 and not isNil(var_251_0) then
				local var_251_3 = (arg_248_1.time_ - var_251_1) / var_251_2

				if arg_248_1.var_.actorSpriteComps1034 then
					for iter_251_0, iter_251_1 in pairs(arg_248_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_251_1 then
							if arg_248_1.isInRecall_ then
								local var_251_4 = Mathf.Lerp(iter_251_1.color.r, arg_248_1.hightColor2.r, var_251_3)
								local var_251_5 = Mathf.Lerp(iter_251_1.color.g, arg_248_1.hightColor2.g, var_251_3)
								local var_251_6 = Mathf.Lerp(iter_251_1.color.b, arg_248_1.hightColor2.b, var_251_3)

								iter_251_1.color = Color.New(var_251_4, var_251_5, var_251_6)
							else
								local var_251_7 = Mathf.Lerp(iter_251_1.color.r, 0.5, var_251_3)

								iter_251_1.color = Color.New(var_251_7, var_251_7, var_251_7)
							end
						end
					end
				end
			end

			if arg_248_1.time_ >= var_251_1 + var_251_2 and arg_248_1.time_ < var_251_1 + var_251_2 + arg_251_0 and not isNil(var_251_0) and arg_248_1.var_.actorSpriteComps1034 then
				for iter_251_2, iter_251_3 in pairs(arg_248_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_251_3 then
						if arg_248_1.isInRecall_ then
							iter_251_3.color = arg_248_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_251_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_248_1.var_.actorSpriteComps1034 = nil
			end

			local var_251_8 = 0
			local var_251_9 = 1.15

			if var_251_8 < arg_248_1.time_ and arg_248_1.time_ <= var_251_8 + arg_251_0 then
				arg_248_1.talkMaxDuration = 0
				arg_248_1.dialogCg_.alpha = 1

				arg_248_1.dialog_:SetActive(true)
				SetActive(arg_248_1.leftNameGo_, true)

				local var_251_10 = arg_248_1:FormatText(StoryNameCfg[585].name)

				arg_248_1.leftNameTxt_.text = var_251_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_248_1.leftNameTxt_.transform)

				arg_248_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_248_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_248_1:RecordName(arg_248_1.leftNameTxt_.text)
				SetActive(arg_248_1.iconTrs_.gameObject, true)
				arg_248_1.iconController_:SetSelectedState("hero")

				arg_248_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_citizenmb")

				arg_248_1.callingController_:SetSelectedState("normal")

				arg_248_1.keyicon_.color = Color.New(1, 1, 1)
				arg_248_1.icon_.color = Color.New(1, 1, 1)

				local var_251_11 = arg_248_1:GetWordFromCfg(417012058)
				local var_251_12 = arg_248_1:FormatText(var_251_11.content)

				arg_248_1.text_.text = var_251_12

				LuaForUtil.ClearLinePrefixSymbol(arg_248_1.text_)

				local var_251_13 = 46
				local var_251_14 = utf8.len(var_251_12)
				local var_251_15 = var_251_13 <= 0 and var_251_9 or var_251_9 * (var_251_14 / var_251_13)

				if var_251_15 > 0 and var_251_9 < var_251_15 then
					arg_248_1.talkMaxDuration = var_251_15

					if var_251_15 + var_251_8 > arg_248_1.duration_ then
						arg_248_1.duration_ = var_251_15 + var_251_8
					end
				end

				arg_248_1.text_.text = var_251_12
				arg_248_1.typewritter.percent = 0

				arg_248_1.typewritter:SetDirty()
				arg_248_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012058", "story_v_out_417012.awb") ~= 0 then
					local var_251_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012058", "story_v_out_417012.awb") / 1000

					if var_251_16 + var_251_8 > arg_248_1.duration_ then
						arg_248_1.duration_ = var_251_16 + var_251_8
					end

					if var_251_11.prefab_name ~= "" and arg_248_1.actors_[var_251_11.prefab_name] ~= nil then
						local var_251_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_248_1.actors_[var_251_11.prefab_name].transform, "story_v_out_417012", "417012058", "story_v_out_417012.awb")

						arg_248_1:RecordAudio("417012058", var_251_17)
						arg_248_1:RecordAudio("417012058", var_251_17)
					else
						arg_248_1:AudioAction("play", "voice", "story_v_out_417012", "417012058", "story_v_out_417012.awb")
					end

					arg_248_1:RecordHistoryTalkVoice("story_v_out_417012", "417012058", "story_v_out_417012.awb")
				end

				arg_248_1:RecordContent(arg_248_1.text_.text)
			end

			local var_251_18 = math.max(var_251_9, arg_248_1.talkMaxDuration)

			if var_251_8 <= arg_248_1.time_ and arg_248_1.time_ < var_251_8 + var_251_18 then
				arg_248_1.typewritter.percent = (arg_248_1.time_ - var_251_8) / var_251_18

				arg_248_1.typewritter:SetDirty()
			end

			if arg_248_1.time_ >= var_251_8 + var_251_18 and arg_248_1.time_ < var_251_8 + var_251_18 + arg_251_0 then
				arg_248_1.typewritter.percent = 1

				arg_248_1.typewritter:SetDirty()
				arg_248_1:ShowNextGo(true)
			end
		end
	end,
	Play417012059 = function(arg_252_0, arg_252_1)
		arg_252_1.time_ = 0
		arg_252_1.frameCnt_ = 0
		arg_252_1.state_ = "playing"
		arg_252_1.curTalkId_ = 417012059
		arg_252_1.duration_ = 5.3

		local var_252_0 = {
			zh = 4.133,
			ja = 5.3
		}
		local var_252_1 = manager.audio:GetLocalizationFlag()

		if var_252_0[var_252_1] ~= nil then
			arg_252_1.duration_ = var_252_0[var_252_1]
		end

		SetActive(arg_252_1.tipsGo_, false)

		function arg_252_1.onSingleLineFinish_()
			arg_252_1.onSingleLineUpdate_ = nil
			arg_252_1.onSingleLineFinish_ = nil
			arg_252_1.state_ = "waiting"
		end

		function arg_252_1.playNext_(arg_254_0)
			if arg_254_0 == 1 then
				arg_252_0:Play417012060(arg_252_1)
			end
		end

		function arg_252_1.onSingleLineUpdate_(arg_255_0)
			local var_255_0 = arg_252_1.actors_["1034"]
			local var_255_1 = 0

			if var_255_1 < arg_252_1.time_ and arg_252_1.time_ <= var_255_1 + arg_255_0 and not isNil(var_255_0) and arg_252_1.var_.actorSpriteComps1034 == nil then
				arg_252_1.var_.actorSpriteComps1034 = var_255_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_255_2 = 0.2

			if var_255_1 <= arg_252_1.time_ and arg_252_1.time_ < var_255_1 + var_255_2 and not isNil(var_255_0) then
				local var_255_3 = (arg_252_1.time_ - var_255_1) / var_255_2

				if arg_252_1.var_.actorSpriteComps1034 then
					for iter_255_0, iter_255_1 in pairs(arg_252_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_255_1 then
							if arg_252_1.isInRecall_ then
								local var_255_4 = Mathf.Lerp(iter_255_1.color.r, arg_252_1.hightColor1.r, var_255_3)
								local var_255_5 = Mathf.Lerp(iter_255_1.color.g, arg_252_1.hightColor1.g, var_255_3)
								local var_255_6 = Mathf.Lerp(iter_255_1.color.b, arg_252_1.hightColor1.b, var_255_3)

								iter_255_1.color = Color.New(var_255_4, var_255_5, var_255_6)
							else
								local var_255_7 = Mathf.Lerp(iter_255_1.color.r, 1, var_255_3)

								iter_255_1.color = Color.New(var_255_7, var_255_7, var_255_7)
							end
						end
					end
				end
			end

			if arg_252_1.time_ >= var_255_1 + var_255_2 and arg_252_1.time_ < var_255_1 + var_255_2 + arg_255_0 and not isNil(var_255_0) and arg_252_1.var_.actorSpriteComps1034 then
				for iter_255_2, iter_255_3 in pairs(arg_252_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_255_3 then
						if arg_252_1.isInRecall_ then
							iter_255_3.color = arg_252_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_255_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_252_1.var_.actorSpriteComps1034 = nil
			end

			local var_255_8 = arg_252_1.actors_["1034"].transform
			local var_255_9 = 0

			if var_255_9 < arg_252_1.time_ and arg_252_1.time_ <= var_255_9 + arg_255_0 then
				arg_252_1.var_.moveOldPos1034 = var_255_8.localPosition
				var_255_8.localScale = Vector3.New(1, 1, 1)

				arg_252_1:CheckSpriteTmpPos("1034", 3)

				local var_255_10 = var_255_8.childCount

				for iter_255_4 = 0, var_255_10 - 1 do
					local var_255_11 = var_255_8:GetChild(iter_255_4)

					if var_255_11.name == "split_4" or not string.find(var_255_11.name, "split") then
						var_255_11.gameObject:SetActive(true)
					else
						var_255_11.gameObject:SetActive(false)
					end
				end
			end

			local var_255_12 = 0.001

			if var_255_9 <= arg_252_1.time_ and arg_252_1.time_ < var_255_9 + var_255_12 then
				local var_255_13 = (arg_252_1.time_ - var_255_9) / var_255_12
				local var_255_14 = Vector3.New(0, -331.9, -324)

				var_255_8.localPosition = Vector3.Lerp(arg_252_1.var_.moveOldPos1034, var_255_14, var_255_13)
			end

			if arg_252_1.time_ >= var_255_9 + var_255_12 and arg_252_1.time_ < var_255_9 + var_255_12 + arg_255_0 then
				var_255_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_255_15 = 0
			local var_255_16 = 0.525

			if var_255_15 < arg_252_1.time_ and arg_252_1.time_ <= var_255_15 + arg_255_0 then
				arg_252_1.talkMaxDuration = 0
				arg_252_1.dialogCg_.alpha = 1

				arg_252_1.dialog_:SetActive(true)
				SetActive(arg_252_1.leftNameGo_, true)

				local var_255_17 = arg_252_1:FormatText(StoryNameCfg[1109].name)

				arg_252_1.leftNameTxt_.text = var_255_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_252_1.leftNameTxt_.transform)

				arg_252_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_252_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_252_1:RecordName(arg_252_1.leftNameTxt_.text)
				SetActive(arg_252_1.iconTrs_.gameObject, false)
				arg_252_1.callingController_:SetSelectedState("normal")

				local var_255_18 = arg_252_1:GetWordFromCfg(417012059)
				local var_255_19 = arg_252_1:FormatText(var_255_18.content)

				arg_252_1.text_.text = var_255_19

				LuaForUtil.ClearLinePrefixSymbol(arg_252_1.text_)

				local var_255_20 = 21
				local var_255_21 = utf8.len(var_255_19)
				local var_255_22 = var_255_20 <= 0 and var_255_16 or var_255_16 * (var_255_21 / var_255_20)

				if var_255_22 > 0 and var_255_16 < var_255_22 then
					arg_252_1.talkMaxDuration = var_255_22

					if var_255_22 + var_255_15 > arg_252_1.duration_ then
						arg_252_1.duration_ = var_255_22 + var_255_15
					end
				end

				arg_252_1.text_.text = var_255_19
				arg_252_1.typewritter.percent = 0

				arg_252_1.typewritter:SetDirty()
				arg_252_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012059", "story_v_out_417012.awb") ~= 0 then
					local var_255_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012059", "story_v_out_417012.awb") / 1000

					if var_255_23 + var_255_15 > arg_252_1.duration_ then
						arg_252_1.duration_ = var_255_23 + var_255_15
					end

					if var_255_18.prefab_name ~= "" and arg_252_1.actors_[var_255_18.prefab_name] ~= nil then
						local var_255_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_252_1.actors_[var_255_18.prefab_name].transform, "story_v_out_417012", "417012059", "story_v_out_417012.awb")

						arg_252_1:RecordAudio("417012059", var_255_24)
						arg_252_1:RecordAudio("417012059", var_255_24)
					else
						arg_252_1:AudioAction("play", "voice", "story_v_out_417012", "417012059", "story_v_out_417012.awb")
					end

					arg_252_1:RecordHistoryTalkVoice("story_v_out_417012", "417012059", "story_v_out_417012.awb")
				end

				arg_252_1:RecordContent(arg_252_1.text_.text)
			end

			local var_255_25 = math.max(var_255_16, arg_252_1.talkMaxDuration)

			if var_255_15 <= arg_252_1.time_ and arg_252_1.time_ < var_255_15 + var_255_25 then
				arg_252_1.typewritter.percent = (arg_252_1.time_ - var_255_15) / var_255_25

				arg_252_1.typewritter:SetDirty()
			end

			if arg_252_1.time_ >= var_255_15 + var_255_25 and arg_252_1.time_ < var_255_15 + var_255_25 + arg_255_0 then
				arg_252_1.typewritter.percent = 1

				arg_252_1.typewritter:SetDirty()
				arg_252_1:ShowNextGo(true)
			end
		end
	end,
	Play417012060 = function(arg_256_0, arg_256_1)
		arg_256_1.time_ = 0
		arg_256_1.frameCnt_ = 0
		arg_256_1.state_ = "playing"
		arg_256_1.curTalkId_ = 417012060
		arg_256_1.duration_ = 5

		SetActive(arg_256_1.tipsGo_, false)

		function arg_256_1.onSingleLineFinish_()
			arg_256_1.onSingleLineUpdate_ = nil
			arg_256_1.onSingleLineFinish_ = nil
			arg_256_1.state_ = "waiting"
		end

		function arg_256_1.playNext_(arg_258_0)
			if arg_258_0 == 1 then
				arg_256_0:Play417012061(arg_256_1)
			end
		end

		function arg_256_1.onSingleLineUpdate_(arg_259_0)
			local var_259_0 = arg_256_1.actors_["1034"].transform
			local var_259_1 = 0

			if var_259_1 < arg_256_1.time_ and arg_256_1.time_ <= var_259_1 + arg_259_0 then
				arg_256_1.var_.moveOldPos1034 = var_259_0.localPosition
				var_259_0.localScale = Vector3.New(1, 1, 1)

				arg_256_1:CheckSpriteTmpPos("1034", 7)

				local var_259_2 = var_259_0.childCount

				for iter_259_0 = 0, var_259_2 - 1 do
					local var_259_3 = var_259_0:GetChild(iter_259_0)

					if var_259_3.name == "" or not string.find(var_259_3.name, "split") then
						var_259_3.gameObject:SetActive(true)
					else
						var_259_3.gameObject:SetActive(false)
					end
				end
			end

			local var_259_4 = 0.001

			if var_259_1 <= arg_256_1.time_ and arg_256_1.time_ < var_259_1 + var_259_4 then
				local var_259_5 = (arg_256_1.time_ - var_259_1) / var_259_4
				local var_259_6 = Vector3.New(0, -2000, 0)

				var_259_0.localPosition = Vector3.Lerp(arg_256_1.var_.moveOldPos1034, var_259_6, var_259_5)
			end

			if arg_256_1.time_ >= var_259_1 + var_259_4 and arg_256_1.time_ < var_259_1 + var_259_4 + arg_259_0 then
				var_259_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_259_7 = 0.233333333333333
			local var_259_8 = 1

			if var_259_7 < arg_256_1.time_ and arg_256_1.time_ <= var_259_7 + arg_259_0 then
				local var_259_9 = "play"
				local var_259_10 = "effect"

				arg_256_1:AudioAction(var_259_9, var_259_10, "se_story_136", "se_story_136_carengine", "")
			end

			local var_259_11 = 0
			local var_259_12 = 1.4

			if var_259_11 < arg_256_1.time_ and arg_256_1.time_ <= var_259_11 + arg_259_0 then
				arg_256_1.talkMaxDuration = 0
				arg_256_1.dialogCg_.alpha = 1

				arg_256_1.dialog_:SetActive(true)
				SetActive(arg_256_1.leftNameGo_, false)

				arg_256_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_256_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_256_1:RecordName(arg_256_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_256_1.iconTrs_.gameObject, false)
				arg_256_1.callingController_:SetSelectedState("normal")

				local var_259_13 = arg_256_1:GetWordFromCfg(417012060)
				local var_259_14 = arg_256_1:FormatText(var_259_13.content)

				arg_256_1.text_.text = var_259_14

				LuaForUtil.ClearLinePrefixSymbol(arg_256_1.text_)

				local var_259_15 = 56
				local var_259_16 = utf8.len(var_259_14)
				local var_259_17 = var_259_15 <= 0 and var_259_12 or var_259_12 * (var_259_16 / var_259_15)

				if var_259_17 > 0 and var_259_12 < var_259_17 then
					arg_256_1.talkMaxDuration = var_259_17

					if var_259_17 + var_259_11 > arg_256_1.duration_ then
						arg_256_1.duration_ = var_259_17 + var_259_11
					end
				end

				arg_256_1.text_.text = var_259_14
				arg_256_1.typewritter.percent = 0

				arg_256_1.typewritter:SetDirty()
				arg_256_1:ShowNextGo(false)
				arg_256_1:RecordContent(arg_256_1.text_.text)
			end

			local var_259_18 = math.max(var_259_12, arg_256_1.talkMaxDuration)

			if var_259_11 <= arg_256_1.time_ and arg_256_1.time_ < var_259_11 + var_259_18 then
				arg_256_1.typewritter.percent = (arg_256_1.time_ - var_259_11) / var_259_18

				arg_256_1.typewritter:SetDirty()
			end

			if arg_256_1.time_ >= var_259_11 + var_259_18 and arg_256_1.time_ < var_259_11 + var_259_18 + arg_259_0 then
				arg_256_1.typewritter.percent = 1

				arg_256_1.typewritter:SetDirty()
				arg_256_1:ShowNextGo(true)
			end
		end
	end,
	Play417012061 = function(arg_260_0, arg_260_1)
		arg_260_1.time_ = 0
		arg_260_1.frameCnt_ = 0
		arg_260_1.state_ = "playing"
		arg_260_1.curTalkId_ = 417012061
		arg_260_1.duration_ = 5.03

		local var_260_0 = {
			zh = 3.1,
			ja = 5.033
		}
		local var_260_1 = manager.audio:GetLocalizationFlag()

		if var_260_0[var_260_1] ~= nil then
			arg_260_1.duration_ = var_260_0[var_260_1]
		end

		SetActive(arg_260_1.tipsGo_, false)

		function arg_260_1.onSingleLineFinish_()
			arg_260_1.onSingleLineUpdate_ = nil
			arg_260_1.onSingleLineFinish_ = nil
			arg_260_1.state_ = "waiting"
		end

		function arg_260_1.playNext_(arg_262_0)
			if arg_262_0 == 1 then
				arg_260_0:Play417012062(arg_260_1)
			end
		end

		function arg_260_1.onSingleLineUpdate_(arg_263_0)
			local var_263_0 = 0
			local var_263_1 = 0.4

			if var_263_0 < arg_260_1.time_ and arg_260_1.time_ <= var_263_0 + arg_263_0 then
				arg_260_1.talkMaxDuration = 0
				arg_260_1.dialogCg_.alpha = 1

				arg_260_1.dialog_:SetActive(true)
				SetActive(arg_260_1.leftNameGo_, true)

				local var_263_2 = arg_260_1:FormatText(StoryNameCfg[1109].name)

				arg_260_1.leftNameTxt_.text = var_263_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_260_1.leftNameTxt_.transform)

				arg_260_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_260_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_260_1:RecordName(arg_260_1.leftNameTxt_.text)
				SetActive(arg_260_1.iconTrs_.gameObject, true)
				arg_260_1.iconController_:SetSelectedState("hero")

				arg_260_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1034_split_4")

				arg_260_1.callingController_:SetSelectedState("normal")

				arg_260_1.keyicon_.color = Color.New(1, 1, 1)
				arg_260_1.icon_.color = Color.New(1, 1, 1)

				local var_263_3 = arg_260_1:GetWordFromCfg(417012061)
				local var_263_4 = arg_260_1:FormatText(var_263_3.content)

				arg_260_1.text_.text = var_263_4

				LuaForUtil.ClearLinePrefixSymbol(arg_260_1.text_)

				local var_263_5 = 16
				local var_263_6 = utf8.len(var_263_4)
				local var_263_7 = var_263_5 <= 0 and var_263_1 or var_263_1 * (var_263_6 / var_263_5)

				if var_263_7 > 0 and var_263_1 < var_263_7 then
					arg_260_1.talkMaxDuration = var_263_7

					if var_263_7 + var_263_0 > arg_260_1.duration_ then
						arg_260_1.duration_ = var_263_7 + var_263_0
					end
				end

				arg_260_1.text_.text = var_263_4
				arg_260_1.typewritter.percent = 0

				arg_260_1.typewritter:SetDirty()
				arg_260_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012061", "story_v_out_417012.awb") ~= 0 then
					local var_263_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012061", "story_v_out_417012.awb") / 1000

					if var_263_8 + var_263_0 > arg_260_1.duration_ then
						arg_260_1.duration_ = var_263_8 + var_263_0
					end

					if var_263_3.prefab_name ~= "" and arg_260_1.actors_[var_263_3.prefab_name] ~= nil then
						local var_263_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_260_1.actors_[var_263_3.prefab_name].transform, "story_v_out_417012", "417012061", "story_v_out_417012.awb")

						arg_260_1:RecordAudio("417012061", var_263_9)
						arg_260_1:RecordAudio("417012061", var_263_9)
					else
						arg_260_1:AudioAction("play", "voice", "story_v_out_417012", "417012061", "story_v_out_417012.awb")
					end

					arg_260_1:RecordHistoryTalkVoice("story_v_out_417012", "417012061", "story_v_out_417012.awb")
				end

				arg_260_1:RecordContent(arg_260_1.text_.text)
			end

			local var_263_10 = math.max(var_263_1, arg_260_1.talkMaxDuration)

			if var_263_0 <= arg_260_1.time_ and arg_260_1.time_ < var_263_0 + var_263_10 then
				arg_260_1.typewritter.percent = (arg_260_1.time_ - var_263_0) / var_263_10

				arg_260_1.typewritter:SetDirty()
			end

			if arg_260_1.time_ >= var_263_0 + var_263_10 and arg_260_1.time_ < var_263_0 + var_263_10 + arg_263_0 then
				arg_260_1.typewritter.percent = 1

				arg_260_1.typewritter:SetDirty()
				arg_260_1:ShowNextGo(true)
			end
		end
	end,
	Play417012062 = function(arg_264_0, arg_264_1)
		arg_264_1.time_ = 0
		arg_264_1.frameCnt_ = 0
		arg_264_1.state_ = "playing"
		arg_264_1.curTalkId_ = 417012062
		arg_264_1.duration_ = 5

		SetActive(arg_264_1.tipsGo_, false)

		function arg_264_1.onSingleLineFinish_()
			arg_264_1.onSingleLineUpdate_ = nil
			arg_264_1.onSingleLineFinish_ = nil
			arg_264_1.state_ = "waiting"
		end

		function arg_264_1.playNext_(arg_266_0)
			if arg_266_0 == 1 then
				arg_264_0:Play417012063(arg_264_1)
			end
		end

		function arg_264_1.onSingleLineUpdate_(arg_267_0)
			local var_267_0 = 0
			local var_267_1 = 1.625

			if var_267_0 < arg_264_1.time_ and arg_264_1.time_ <= var_267_0 + arg_267_0 then
				arg_264_1.talkMaxDuration = 0
				arg_264_1.dialogCg_.alpha = 1

				arg_264_1.dialog_:SetActive(true)
				SetActive(arg_264_1.leftNameGo_, false)

				arg_264_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_264_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_264_1:RecordName(arg_264_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_264_1.iconTrs_.gameObject, false)
				arg_264_1.callingController_:SetSelectedState("normal")

				local var_267_2 = arg_264_1:GetWordFromCfg(417012062)
				local var_267_3 = arg_264_1:FormatText(var_267_2.content)

				arg_264_1.text_.text = var_267_3

				LuaForUtil.ClearLinePrefixSymbol(arg_264_1.text_)

				local var_267_4 = 65
				local var_267_5 = utf8.len(var_267_3)
				local var_267_6 = var_267_4 <= 0 and var_267_1 or var_267_1 * (var_267_5 / var_267_4)

				if var_267_6 > 0 and var_267_1 < var_267_6 then
					arg_264_1.talkMaxDuration = var_267_6

					if var_267_6 + var_267_0 > arg_264_1.duration_ then
						arg_264_1.duration_ = var_267_6 + var_267_0
					end
				end

				arg_264_1.text_.text = var_267_3
				arg_264_1.typewritter.percent = 0

				arg_264_1.typewritter:SetDirty()
				arg_264_1:ShowNextGo(false)
				arg_264_1:RecordContent(arg_264_1.text_.text)
			end

			local var_267_7 = math.max(var_267_1, arg_264_1.talkMaxDuration)

			if var_267_0 <= arg_264_1.time_ and arg_264_1.time_ < var_267_0 + var_267_7 then
				arg_264_1.typewritter.percent = (arg_264_1.time_ - var_267_0) / var_267_7

				arg_264_1.typewritter:SetDirty()
			end

			if arg_264_1.time_ >= var_267_0 + var_267_7 and arg_264_1.time_ < var_267_0 + var_267_7 + arg_267_0 then
				arg_264_1.typewritter.percent = 1

				arg_264_1.typewritter:SetDirty()
				arg_264_1:ShowNextGo(true)
			end
		end
	end,
	Play417012063 = function(arg_268_0, arg_268_1)
		arg_268_1.time_ = 0
		arg_268_1.frameCnt_ = 0
		arg_268_1.state_ = "playing"
		arg_268_1.curTalkId_ = 417012063
		arg_268_1.duration_ = 5

		SetActive(arg_268_1.tipsGo_, false)

		function arg_268_1.onSingleLineFinish_()
			arg_268_1.onSingleLineUpdate_ = nil
			arg_268_1.onSingleLineFinish_ = nil
			arg_268_1.state_ = "waiting"
		end

		function arg_268_1.playNext_(arg_270_0)
			if arg_270_0 == 1 then
				arg_268_0:Play417012064(arg_268_1)
			end
		end

		function arg_268_1.onSingleLineUpdate_(arg_271_0)
			local var_271_0 = 0
			local var_271_1 = 1.375

			if var_271_0 < arg_268_1.time_ and arg_268_1.time_ <= var_271_0 + arg_271_0 then
				arg_268_1.talkMaxDuration = 0
				arg_268_1.dialogCg_.alpha = 1

				arg_268_1.dialog_:SetActive(true)
				SetActive(arg_268_1.leftNameGo_, false)

				arg_268_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_268_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_268_1:RecordName(arg_268_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_268_1.iconTrs_.gameObject, false)
				arg_268_1.callingController_:SetSelectedState("normal")

				local var_271_2 = arg_268_1:GetWordFromCfg(417012063)
				local var_271_3 = arg_268_1:FormatText(var_271_2.content)

				arg_268_1.text_.text = var_271_3

				LuaForUtil.ClearLinePrefixSymbol(arg_268_1.text_)

				local var_271_4 = 55
				local var_271_5 = utf8.len(var_271_3)
				local var_271_6 = var_271_4 <= 0 and var_271_1 or var_271_1 * (var_271_5 / var_271_4)

				if var_271_6 > 0 and var_271_1 < var_271_6 then
					arg_268_1.talkMaxDuration = var_271_6

					if var_271_6 + var_271_0 > arg_268_1.duration_ then
						arg_268_1.duration_ = var_271_6 + var_271_0
					end
				end

				arg_268_1.text_.text = var_271_3
				arg_268_1.typewritter.percent = 0

				arg_268_1.typewritter:SetDirty()
				arg_268_1:ShowNextGo(false)
				arg_268_1:RecordContent(arg_268_1.text_.text)
			end

			local var_271_7 = math.max(var_271_1, arg_268_1.talkMaxDuration)

			if var_271_0 <= arg_268_1.time_ and arg_268_1.time_ < var_271_0 + var_271_7 then
				arg_268_1.typewritter.percent = (arg_268_1.time_ - var_271_0) / var_271_7

				arg_268_1.typewritter:SetDirty()
			end

			if arg_268_1.time_ >= var_271_0 + var_271_7 and arg_268_1.time_ < var_271_0 + var_271_7 + arg_271_0 then
				arg_268_1.typewritter.percent = 1

				arg_268_1.typewritter:SetDirty()
				arg_268_1:ShowNextGo(true)
			end
		end
	end,
	Play417012064 = function(arg_272_0, arg_272_1)
		arg_272_1.time_ = 0
		arg_272_1.frameCnt_ = 0
		arg_272_1.state_ = "playing"
		arg_272_1.curTalkId_ = 417012064
		arg_272_1.duration_ = 5

		SetActive(arg_272_1.tipsGo_, false)

		function arg_272_1.onSingleLineFinish_()
			arg_272_1.onSingleLineUpdate_ = nil
			arg_272_1.onSingleLineFinish_ = nil
			arg_272_1.state_ = "waiting"
		end

		function arg_272_1.playNext_(arg_274_0)
			if arg_274_0 == 1 then
				arg_272_0:Play417012065(arg_272_1)
			end
		end

		function arg_272_1.onSingleLineUpdate_(arg_275_0)
			local var_275_0 = 1.46666666666667
			local var_275_1 = 1

			if var_275_0 < arg_272_1.time_ and arg_272_1.time_ <= var_275_0 + arg_275_0 then
				local var_275_2 = "play"
				local var_275_3 = "effect"

				arg_272_1:AudioAction(var_275_2, var_275_3, "se_story_1310", "se_story_1310_hitmachine", "")
			end

			local var_275_4 = 0
			local var_275_5 = 1.825

			if var_275_4 < arg_272_1.time_ and arg_272_1.time_ <= var_275_4 + arg_275_0 then
				arg_272_1.talkMaxDuration = 0
				arg_272_1.dialogCg_.alpha = 1

				arg_272_1.dialog_:SetActive(true)
				SetActive(arg_272_1.leftNameGo_, false)

				arg_272_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_272_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_272_1:RecordName(arg_272_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_272_1.iconTrs_.gameObject, false)
				arg_272_1.callingController_:SetSelectedState("normal")

				local var_275_6 = arg_272_1:GetWordFromCfg(417012064)
				local var_275_7 = arg_272_1:FormatText(var_275_6.content)

				arg_272_1.text_.text = var_275_7

				LuaForUtil.ClearLinePrefixSymbol(arg_272_1.text_)

				local var_275_8 = 73
				local var_275_9 = utf8.len(var_275_7)
				local var_275_10 = var_275_8 <= 0 and var_275_5 or var_275_5 * (var_275_9 / var_275_8)

				if var_275_10 > 0 and var_275_5 < var_275_10 then
					arg_272_1.talkMaxDuration = var_275_10

					if var_275_10 + var_275_4 > arg_272_1.duration_ then
						arg_272_1.duration_ = var_275_10 + var_275_4
					end
				end

				arg_272_1.text_.text = var_275_7
				arg_272_1.typewritter.percent = 0

				arg_272_1.typewritter:SetDirty()
				arg_272_1:ShowNextGo(false)
				arg_272_1:RecordContent(arg_272_1.text_.text)
			end

			local var_275_11 = math.max(var_275_5, arg_272_1.talkMaxDuration)

			if var_275_4 <= arg_272_1.time_ and arg_272_1.time_ < var_275_4 + var_275_11 then
				arg_272_1.typewritter.percent = (arg_272_1.time_ - var_275_4) / var_275_11

				arg_272_1.typewritter:SetDirty()
			end

			if arg_272_1.time_ >= var_275_4 + var_275_11 and arg_272_1.time_ < var_275_4 + var_275_11 + arg_275_0 then
				arg_272_1.typewritter.percent = 1

				arg_272_1.typewritter:SetDirty()
				arg_272_1:ShowNextGo(true)
			end
		end
	end,
	Play417012065 = function(arg_276_0, arg_276_1)
		arg_276_1.time_ = 0
		arg_276_1.frameCnt_ = 0
		arg_276_1.state_ = "playing"
		arg_276_1.curTalkId_ = 417012065
		arg_276_1.duration_ = 6.7

		local var_276_0 = {
			zh = 4.933,
			ja = 6.7
		}
		local var_276_1 = manager.audio:GetLocalizationFlag()

		if var_276_0[var_276_1] ~= nil then
			arg_276_1.duration_ = var_276_0[var_276_1]
		end

		SetActive(arg_276_1.tipsGo_, false)

		function arg_276_1.onSingleLineFinish_()
			arg_276_1.onSingleLineUpdate_ = nil
			arg_276_1.onSingleLineFinish_ = nil
			arg_276_1.state_ = "waiting"
		end

		function arg_276_1.playNext_(arg_278_0)
			if arg_278_0 == 1 then
				arg_276_0:Play417012066(arg_276_1)
			end
		end

		function arg_276_1.onSingleLineUpdate_(arg_279_0)
			local var_279_0 = 0
			local var_279_1 = 0.5

			if var_279_0 < arg_276_1.time_ and arg_276_1.time_ <= var_279_0 + arg_279_0 then
				arg_276_1.talkMaxDuration = 0
				arg_276_1.dialogCg_.alpha = 1

				arg_276_1.dialog_:SetActive(true)
				SetActive(arg_276_1.leftNameGo_, true)

				local var_279_2 = arg_276_1:FormatText(StoryNameCfg[1111].name)

				arg_276_1.leftNameTxt_.text = var_279_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_276_1.leftNameTxt_.transform)

				arg_276_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_276_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_276_1:RecordName(arg_276_1.leftNameTxt_.text)
				SetActive(arg_276_1.iconTrs_.gameObject, true)
				arg_276_1.iconController_:SetSelectedState("hero")

				arg_276_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_soundonly")

				arg_276_1.callingController_:SetSelectedState("normal")

				arg_276_1.keyicon_.color = Color.New(1, 1, 1)
				arg_276_1.icon_.color = Color.New(1, 1, 1)

				local var_279_3 = arg_276_1:GetWordFromCfg(417012065)
				local var_279_4 = arg_276_1:FormatText(var_279_3.content)

				arg_276_1.text_.text = var_279_4

				LuaForUtil.ClearLinePrefixSymbol(arg_276_1.text_)

				local var_279_5 = 20
				local var_279_6 = utf8.len(var_279_4)
				local var_279_7 = var_279_5 <= 0 and var_279_1 or var_279_1 * (var_279_6 / var_279_5)

				if var_279_7 > 0 and var_279_1 < var_279_7 then
					arg_276_1.talkMaxDuration = var_279_7

					if var_279_7 + var_279_0 > arg_276_1.duration_ then
						arg_276_1.duration_ = var_279_7 + var_279_0
					end
				end

				arg_276_1.text_.text = var_279_4
				arg_276_1.typewritter.percent = 0

				arg_276_1.typewritter:SetDirty()
				arg_276_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012065", "story_v_out_417012.awb") ~= 0 then
					local var_279_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012065", "story_v_out_417012.awb") / 1000

					if var_279_8 + var_279_0 > arg_276_1.duration_ then
						arg_276_1.duration_ = var_279_8 + var_279_0
					end

					if var_279_3.prefab_name ~= "" and arg_276_1.actors_[var_279_3.prefab_name] ~= nil then
						local var_279_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_276_1.actors_[var_279_3.prefab_name].transform, "story_v_out_417012", "417012065", "story_v_out_417012.awb")

						arg_276_1:RecordAudio("417012065", var_279_9)
						arg_276_1:RecordAudio("417012065", var_279_9)
					else
						arg_276_1:AudioAction("play", "voice", "story_v_out_417012", "417012065", "story_v_out_417012.awb")
					end

					arg_276_1:RecordHistoryTalkVoice("story_v_out_417012", "417012065", "story_v_out_417012.awb")
				end

				arg_276_1:RecordContent(arg_276_1.text_.text)
			end

			local var_279_10 = math.max(var_279_1, arg_276_1.talkMaxDuration)

			if var_279_0 <= arg_276_1.time_ and arg_276_1.time_ < var_279_0 + var_279_10 then
				arg_276_1.typewritter.percent = (arg_276_1.time_ - var_279_0) / var_279_10

				arg_276_1.typewritter:SetDirty()
			end

			if arg_276_1.time_ >= var_279_0 + var_279_10 and arg_276_1.time_ < var_279_0 + var_279_10 + arg_279_0 then
				arg_276_1.typewritter.percent = 1

				arg_276_1.typewritter:SetDirty()
				arg_276_1:ShowNextGo(true)
			end
		end
	end,
	Play417012066 = function(arg_280_0, arg_280_1)
		arg_280_1.time_ = 0
		arg_280_1.frameCnt_ = 0
		arg_280_1.state_ = "playing"
		arg_280_1.curTalkId_ = 417012066
		arg_280_1.duration_ = 3.83

		local var_280_0 = {
			zh = 2.966,
			ja = 3.833
		}
		local var_280_1 = manager.audio:GetLocalizationFlag()

		if var_280_0[var_280_1] ~= nil then
			arg_280_1.duration_ = var_280_0[var_280_1]
		end

		SetActive(arg_280_1.tipsGo_, false)

		function arg_280_1.onSingleLineFinish_()
			arg_280_1.onSingleLineUpdate_ = nil
			arg_280_1.onSingleLineFinish_ = nil
			arg_280_1.state_ = "waiting"
		end

		function arg_280_1.playNext_(arg_282_0)
			if arg_282_0 == 1 then
				arg_280_0:Play417012067(arg_280_1)
			end
		end

		function arg_280_1.onSingleLineUpdate_(arg_283_0)
			local var_283_0 = arg_280_1.actors_["1034"]
			local var_283_1 = 0

			if var_283_1 < arg_280_1.time_ and arg_280_1.time_ <= var_283_1 + arg_283_0 and not isNil(var_283_0) and arg_280_1.var_.actorSpriteComps1034 == nil then
				arg_280_1.var_.actorSpriteComps1034 = var_283_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_283_2 = 0.2

			if var_283_1 <= arg_280_1.time_ and arg_280_1.time_ < var_283_1 + var_283_2 and not isNil(var_283_0) then
				local var_283_3 = (arg_280_1.time_ - var_283_1) / var_283_2

				if arg_280_1.var_.actorSpriteComps1034 then
					for iter_283_0, iter_283_1 in pairs(arg_280_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_283_1 then
							if arg_280_1.isInRecall_ then
								local var_283_4 = Mathf.Lerp(iter_283_1.color.r, arg_280_1.hightColor1.r, var_283_3)
								local var_283_5 = Mathf.Lerp(iter_283_1.color.g, arg_280_1.hightColor1.g, var_283_3)
								local var_283_6 = Mathf.Lerp(iter_283_1.color.b, arg_280_1.hightColor1.b, var_283_3)

								iter_283_1.color = Color.New(var_283_4, var_283_5, var_283_6)
							else
								local var_283_7 = Mathf.Lerp(iter_283_1.color.r, 1, var_283_3)

								iter_283_1.color = Color.New(var_283_7, var_283_7, var_283_7)
							end
						end
					end
				end
			end

			if arg_280_1.time_ >= var_283_1 + var_283_2 and arg_280_1.time_ < var_283_1 + var_283_2 + arg_283_0 and not isNil(var_283_0) and arg_280_1.var_.actorSpriteComps1034 then
				for iter_283_2, iter_283_3 in pairs(arg_280_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_283_3 then
						if arg_280_1.isInRecall_ then
							iter_283_3.color = arg_280_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_283_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_280_1.var_.actorSpriteComps1034 = nil
			end

			local var_283_8 = arg_280_1.actors_["1034"].transform
			local var_283_9 = 0

			if var_283_9 < arg_280_1.time_ and arg_280_1.time_ <= var_283_9 + arg_283_0 then
				arg_280_1.var_.moveOldPos1034 = var_283_8.localPosition
				var_283_8.localScale = Vector3.New(1, 1, 1)

				arg_280_1:CheckSpriteTmpPos("1034", 3)

				local var_283_10 = var_283_8.childCount

				for iter_283_4 = 0, var_283_10 - 1 do
					local var_283_11 = var_283_8:GetChild(iter_283_4)

					if var_283_11.name == "split_4" or not string.find(var_283_11.name, "split") then
						var_283_11.gameObject:SetActive(true)
					else
						var_283_11.gameObject:SetActive(false)
					end
				end
			end

			local var_283_12 = 0.001

			if var_283_9 <= arg_280_1.time_ and arg_280_1.time_ < var_283_9 + var_283_12 then
				local var_283_13 = (arg_280_1.time_ - var_283_9) / var_283_12
				local var_283_14 = Vector3.New(0, -331.9, -324)

				var_283_8.localPosition = Vector3.Lerp(arg_280_1.var_.moveOldPos1034, var_283_14, var_283_13)
			end

			if arg_280_1.time_ >= var_283_9 + var_283_12 and arg_280_1.time_ < var_283_9 + var_283_12 + arg_283_0 then
				var_283_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_283_15 = 0
			local var_283_16 = 0.175

			if var_283_15 < arg_280_1.time_ and arg_280_1.time_ <= var_283_15 + arg_283_0 then
				arg_280_1.talkMaxDuration = 0
				arg_280_1.dialogCg_.alpha = 1

				arg_280_1.dialog_:SetActive(true)
				SetActive(arg_280_1.leftNameGo_, true)

				local var_283_17 = arg_280_1:FormatText(StoryNameCfg[1109].name)

				arg_280_1.leftNameTxt_.text = var_283_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_280_1.leftNameTxt_.transform)

				arg_280_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_280_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_280_1:RecordName(arg_280_1.leftNameTxt_.text)
				SetActive(arg_280_1.iconTrs_.gameObject, false)
				arg_280_1.callingController_:SetSelectedState("normal")

				local var_283_18 = arg_280_1:GetWordFromCfg(417012066)
				local var_283_19 = arg_280_1:FormatText(var_283_18.content)

				arg_280_1.text_.text = var_283_19

				LuaForUtil.ClearLinePrefixSymbol(arg_280_1.text_)

				local var_283_20 = 7
				local var_283_21 = utf8.len(var_283_19)
				local var_283_22 = var_283_20 <= 0 and var_283_16 or var_283_16 * (var_283_21 / var_283_20)

				if var_283_22 > 0 and var_283_16 < var_283_22 then
					arg_280_1.talkMaxDuration = var_283_22

					if var_283_22 + var_283_15 > arg_280_1.duration_ then
						arg_280_1.duration_ = var_283_22 + var_283_15
					end
				end

				arg_280_1.text_.text = var_283_19
				arg_280_1.typewritter.percent = 0

				arg_280_1.typewritter:SetDirty()
				arg_280_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012066", "story_v_out_417012.awb") ~= 0 then
					local var_283_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012066", "story_v_out_417012.awb") / 1000

					if var_283_23 + var_283_15 > arg_280_1.duration_ then
						arg_280_1.duration_ = var_283_23 + var_283_15
					end

					if var_283_18.prefab_name ~= "" and arg_280_1.actors_[var_283_18.prefab_name] ~= nil then
						local var_283_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_280_1.actors_[var_283_18.prefab_name].transform, "story_v_out_417012", "417012066", "story_v_out_417012.awb")

						arg_280_1:RecordAudio("417012066", var_283_24)
						arg_280_1:RecordAudio("417012066", var_283_24)
					else
						arg_280_1:AudioAction("play", "voice", "story_v_out_417012", "417012066", "story_v_out_417012.awb")
					end

					arg_280_1:RecordHistoryTalkVoice("story_v_out_417012", "417012066", "story_v_out_417012.awb")
				end

				arg_280_1:RecordContent(arg_280_1.text_.text)
			end

			local var_283_25 = math.max(var_283_16, arg_280_1.talkMaxDuration)

			if var_283_15 <= arg_280_1.time_ and arg_280_1.time_ < var_283_15 + var_283_25 then
				arg_280_1.typewritter.percent = (arg_280_1.time_ - var_283_15) / var_283_25

				arg_280_1.typewritter:SetDirty()
			end

			if arg_280_1.time_ >= var_283_15 + var_283_25 and arg_280_1.time_ < var_283_15 + var_283_25 + arg_283_0 then
				arg_280_1.typewritter.percent = 1

				arg_280_1.typewritter:SetDirty()
				arg_280_1:ShowNextGo(true)
			end
		end
	end,
	Play417012067 = function(arg_284_0, arg_284_1)
		arg_284_1.time_ = 0
		arg_284_1.frameCnt_ = 0
		arg_284_1.state_ = "playing"
		arg_284_1.curTalkId_ = 417012067
		arg_284_1.duration_ = 5

		SetActive(arg_284_1.tipsGo_, false)

		function arg_284_1.onSingleLineFinish_()
			arg_284_1.onSingleLineUpdate_ = nil
			arg_284_1.onSingleLineFinish_ = nil
			arg_284_1.state_ = "waiting"
		end

		function arg_284_1.playNext_(arg_286_0)
			if arg_286_0 == 1 then
				arg_284_0:Play417012068(arg_284_1)
			end
		end

		function arg_284_1.onSingleLineUpdate_(arg_287_0)
			local var_287_0 = arg_284_1.actors_["1034"]
			local var_287_1 = 0

			if var_287_1 < arg_284_1.time_ and arg_284_1.time_ <= var_287_1 + arg_287_0 and not isNil(var_287_0) and arg_284_1.var_.actorSpriteComps1034 == nil then
				arg_284_1.var_.actorSpriteComps1034 = var_287_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_287_2 = 0.2

			if var_287_1 <= arg_284_1.time_ and arg_284_1.time_ < var_287_1 + var_287_2 and not isNil(var_287_0) then
				local var_287_3 = (arg_284_1.time_ - var_287_1) / var_287_2

				if arg_284_1.var_.actorSpriteComps1034 then
					for iter_287_0, iter_287_1 in pairs(arg_284_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_287_1 then
							if arg_284_1.isInRecall_ then
								local var_287_4 = Mathf.Lerp(iter_287_1.color.r, arg_284_1.hightColor2.r, var_287_3)
								local var_287_5 = Mathf.Lerp(iter_287_1.color.g, arg_284_1.hightColor2.g, var_287_3)
								local var_287_6 = Mathf.Lerp(iter_287_1.color.b, arg_284_1.hightColor2.b, var_287_3)

								iter_287_1.color = Color.New(var_287_4, var_287_5, var_287_6)
							else
								local var_287_7 = Mathf.Lerp(iter_287_1.color.r, 0.5, var_287_3)

								iter_287_1.color = Color.New(var_287_7, var_287_7, var_287_7)
							end
						end
					end
				end
			end

			if arg_284_1.time_ >= var_287_1 + var_287_2 and arg_284_1.time_ < var_287_1 + var_287_2 + arg_287_0 and not isNil(var_287_0) and arg_284_1.var_.actorSpriteComps1034 then
				for iter_287_2, iter_287_3 in pairs(arg_284_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_287_3 then
						if arg_284_1.isInRecall_ then
							iter_287_3.color = arg_284_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_287_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_284_1.var_.actorSpriteComps1034 = nil
			end

			local var_287_8 = 1
			local var_287_9 = 1

			if var_287_8 < arg_284_1.time_ and arg_284_1.time_ <= var_287_8 + arg_287_0 then
				local var_287_10 = "play"
				local var_287_11 = "effect"

				arg_284_1:AudioAction(var_287_10, var_287_11, "ui_system", "sign_in", "")
			end

			local var_287_12 = 1.1
			local var_287_13 = 1

			if var_287_12 < arg_284_1.time_ and arg_284_1.time_ <= var_287_12 + arg_287_0 then
				local var_287_14 = "play"
				local var_287_15 = "effect"

				arg_284_1:AudioAction(var_287_14, var_287_15, "ui_system", "popupui_confirm", "")
			end

			local var_287_16 = 0
			local var_287_17 = 1.425

			if var_287_16 < arg_284_1.time_ and arg_284_1.time_ <= var_287_16 + arg_287_0 then
				arg_284_1.talkMaxDuration = 0
				arg_284_1.dialogCg_.alpha = 1

				arg_284_1.dialog_:SetActive(true)
				SetActive(arg_284_1.leftNameGo_, false)

				arg_284_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_284_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_284_1:RecordName(arg_284_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_284_1.iconTrs_.gameObject, false)
				arg_284_1.callingController_:SetSelectedState("normal")

				local var_287_18 = arg_284_1:GetWordFromCfg(417012067)
				local var_287_19 = arg_284_1:FormatText(var_287_18.content)

				arg_284_1.text_.text = var_287_19

				LuaForUtil.ClearLinePrefixSymbol(arg_284_1.text_)

				local var_287_20 = 57
				local var_287_21 = utf8.len(var_287_19)
				local var_287_22 = var_287_20 <= 0 and var_287_17 or var_287_17 * (var_287_21 / var_287_20)

				if var_287_22 > 0 and var_287_17 < var_287_22 then
					arg_284_1.talkMaxDuration = var_287_22

					if var_287_22 + var_287_16 > arg_284_1.duration_ then
						arg_284_1.duration_ = var_287_22 + var_287_16
					end
				end

				arg_284_1.text_.text = var_287_19
				arg_284_1.typewritter.percent = 0

				arg_284_1.typewritter:SetDirty()
				arg_284_1:ShowNextGo(false)
				arg_284_1:RecordContent(arg_284_1.text_.text)
			end

			local var_287_23 = math.max(var_287_17, arg_284_1.talkMaxDuration)

			if var_287_16 <= arg_284_1.time_ and arg_284_1.time_ < var_287_16 + var_287_23 then
				arg_284_1.typewritter.percent = (arg_284_1.time_ - var_287_16) / var_287_23

				arg_284_1.typewritter:SetDirty()
			end

			if arg_284_1.time_ >= var_287_16 + var_287_23 and arg_284_1.time_ < var_287_16 + var_287_23 + arg_287_0 then
				arg_284_1.typewritter.percent = 1

				arg_284_1.typewritter:SetDirty()
				arg_284_1:ShowNextGo(true)
			end
		end
	end,
	Play417012068 = function(arg_288_0, arg_288_1)
		arg_288_1.time_ = 0
		arg_288_1.frameCnt_ = 0
		arg_288_1.state_ = "playing"
		arg_288_1.curTalkId_ = 417012068
		arg_288_1.duration_ = 6.13

		local var_288_0 = {
			zh = 4.066,
			ja = 6.133
		}
		local var_288_1 = manager.audio:GetLocalizationFlag()

		if var_288_0[var_288_1] ~= nil then
			arg_288_1.duration_ = var_288_0[var_288_1]
		end

		SetActive(arg_288_1.tipsGo_, false)

		function arg_288_1.onSingleLineFinish_()
			arg_288_1.onSingleLineUpdate_ = nil
			arg_288_1.onSingleLineFinish_ = nil
			arg_288_1.state_ = "waiting"
		end

		function arg_288_1.playNext_(arg_290_0)
			if arg_290_0 == 1 then
				arg_288_0:Play417012069(arg_288_1)
			end
		end

		function arg_288_1.onSingleLineUpdate_(arg_291_0)
			local var_291_0 = arg_288_1.actors_["1034"].transform
			local var_291_1 = 0

			if var_291_1 < arg_288_1.time_ and arg_288_1.time_ <= var_291_1 + arg_291_0 then
				arg_288_1.var_.moveOldPos1034 = var_291_0.localPosition
				var_291_0.localScale = Vector3.New(1, 1, 1)

				arg_288_1:CheckSpriteTmpPos("1034", 7)

				local var_291_2 = var_291_0.childCount

				for iter_291_0 = 0, var_291_2 - 1 do
					local var_291_3 = var_291_0:GetChild(iter_291_0)

					if var_291_3.name == "" or not string.find(var_291_3.name, "split") then
						var_291_3.gameObject:SetActive(true)
					else
						var_291_3.gameObject:SetActive(false)
					end
				end
			end

			local var_291_4 = 0.001

			if var_291_1 <= arg_288_1.time_ and arg_288_1.time_ < var_291_1 + var_291_4 then
				local var_291_5 = (arg_288_1.time_ - var_291_1) / var_291_4
				local var_291_6 = Vector3.New(0, -2000, 0)

				var_291_0.localPosition = Vector3.Lerp(arg_288_1.var_.moveOldPos1034, var_291_6, var_291_5)
			end

			if arg_288_1.time_ >= var_291_1 + var_291_4 and arg_288_1.time_ < var_291_1 + var_291_4 + arg_291_0 then
				var_291_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_291_7 = 0
			local var_291_8 = 0.45

			if var_291_7 < arg_288_1.time_ and arg_288_1.time_ <= var_291_7 + arg_291_0 then
				arg_288_1.talkMaxDuration = 0
				arg_288_1.dialogCg_.alpha = 1

				arg_288_1.dialog_:SetActive(true)
				SetActive(arg_288_1.leftNameGo_, true)

				local var_291_9 = arg_288_1:FormatText(StoryNameCfg[1111].name)

				arg_288_1.leftNameTxt_.text = var_291_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_288_1.leftNameTxt_.transform)

				arg_288_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_288_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_288_1:RecordName(arg_288_1.leftNameTxt_.text)
				SetActive(arg_288_1.iconTrs_.gameObject, true)
				arg_288_1.iconController_:SetSelectedState("hero")

				arg_288_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_soundonly")

				arg_288_1.callingController_:SetSelectedState("normal")

				arg_288_1.keyicon_.color = Color.New(1, 1, 1)
				arg_288_1.icon_.color = Color.New(1, 1, 1)

				local var_291_10 = arg_288_1:GetWordFromCfg(417012068)
				local var_291_11 = arg_288_1:FormatText(var_291_10.content)

				arg_288_1.text_.text = var_291_11

				LuaForUtil.ClearLinePrefixSymbol(arg_288_1.text_)

				local var_291_12 = 18
				local var_291_13 = utf8.len(var_291_11)
				local var_291_14 = var_291_12 <= 0 and var_291_8 or var_291_8 * (var_291_13 / var_291_12)

				if var_291_14 > 0 and var_291_8 < var_291_14 then
					arg_288_1.talkMaxDuration = var_291_14

					if var_291_14 + var_291_7 > arg_288_1.duration_ then
						arg_288_1.duration_ = var_291_14 + var_291_7
					end
				end

				arg_288_1.text_.text = var_291_11
				arg_288_1.typewritter.percent = 0

				arg_288_1.typewritter:SetDirty()
				arg_288_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012068", "story_v_out_417012.awb") ~= 0 then
					local var_291_15 = manager.audio:GetVoiceLength("story_v_out_417012", "417012068", "story_v_out_417012.awb") / 1000

					if var_291_15 + var_291_7 > arg_288_1.duration_ then
						arg_288_1.duration_ = var_291_15 + var_291_7
					end

					if var_291_10.prefab_name ~= "" and arg_288_1.actors_[var_291_10.prefab_name] ~= nil then
						local var_291_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_288_1.actors_[var_291_10.prefab_name].transform, "story_v_out_417012", "417012068", "story_v_out_417012.awb")

						arg_288_1:RecordAudio("417012068", var_291_16)
						arg_288_1:RecordAudio("417012068", var_291_16)
					else
						arg_288_1:AudioAction("play", "voice", "story_v_out_417012", "417012068", "story_v_out_417012.awb")
					end

					arg_288_1:RecordHistoryTalkVoice("story_v_out_417012", "417012068", "story_v_out_417012.awb")
				end

				arg_288_1:RecordContent(arg_288_1.text_.text)
			end

			local var_291_17 = math.max(var_291_8, arg_288_1.talkMaxDuration)

			if var_291_7 <= arg_288_1.time_ and arg_288_1.time_ < var_291_7 + var_291_17 then
				arg_288_1.typewritter.percent = (arg_288_1.time_ - var_291_7) / var_291_17

				arg_288_1.typewritter:SetDirty()
			end

			if arg_288_1.time_ >= var_291_7 + var_291_17 and arg_288_1.time_ < var_291_7 + var_291_17 + arg_291_0 then
				arg_288_1.typewritter.percent = 1

				arg_288_1.typewritter:SetDirty()
				arg_288_1:ShowNextGo(true)
			end
		end
	end,
	Play417012069 = function(arg_292_0, arg_292_1)
		arg_292_1.time_ = 0
		arg_292_1.frameCnt_ = 0
		arg_292_1.state_ = "playing"
		arg_292_1.curTalkId_ = 417012069
		arg_292_1.duration_ = 3.5

		local var_292_0 = {
			zh = 1.4,
			ja = 3.5
		}
		local var_292_1 = manager.audio:GetLocalizationFlag()

		if var_292_0[var_292_1] ~= nil then
			arg_292_1.duration_ = var_292_0[var_292_1]
		end

		SetActive(arg_292_1.tipsGo_, false)

		function arg_292_1.onSingleLineFinish_()
			arg_292_1.onSingleLineUpdate_ = nil
			arg_292_1.onSingleLineFinish_ = nil
			arg_292_1.state_ = "waiting"
		end

		function arg_292_1.playNext_(arg_294_0)
			if arg_294_0 == 1 then
				arg_292_0:Play417012070(arg_292_1)
			end
		end

		function arg_292_1.onSingleLineUpdate_(arg_295_0)
			local var_295_0 = "10110"

			if arg_292_1.actors_[var_295_0] == nil then
				local var_295_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10110")

				if not isNil(var_295_1) then
					local var_295_2 = Object.Instantiate(var_295_1, arg_292_1.canvasGo_.transform)

					var_295_2.transform:SetSiblingIndex(1)

					var_295_2.name = var_295_0
					var_295_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_292_1.actors_[var_295_0] = var_295_2

					local var_295_3 = var_295_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_292_1.isInRecall_ then
						for iter_295_0, iter_295_1 in ipairs(var_295_3) do
							iter_295_1.color = arg_292_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_295_4 = arg_292_1.actors_["10110"]
			local var_295_5 = 0

			if var_295_5 < arg_292_1.time_ and arg_292_1.time_ <= var_295_5 + arg_295_0 and not isNil(var_295_4) and arg_292_1.var_.actorSpriteComps10110 == nil then
				arg_292_1.var_.actorSpriteComps10110 = var_295_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_295_6 = 0.2

			if var_295_5 <= arg_292_1.time_ and arg_292_1.time_ < var_295_5 + var_295_6 and not isNil(var_295_4) then
				local var_295_7 = (arg_292_1.time_ - var_295_5) / var_295_6

				if arg_292_1.var_.actorSpriteComps10110 then
					for iter_295_2, iter_295_3 in pairs(arg_292_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_295_3 then
							if arg_292_1.isInRecall_ then
								local var_295_8 = Mathf.Lerp(iter_295_3.color.r, arg_292_1.hightColor1.r, var_295_7)
								local var_295_9 = Mathf.Lerp(iter_295_3.color.g, arg_292_1.hightColor1.g, var_295_7)
								local var_295_10 = Mathf.Lerp(iter_295_3.color.b, arg_292_1.hightColor1.b, var_295_7)

								iter_295_3.color = Color.New(var_295_8, var_295_9, var_295_10)
							else
								local var_295_11 = Mathf.Lerp(iter_295_3.color.r, 1, var_295_7)

								iter_295_3.color = Color.New(var_295_11, var_295_11, var_295_11)
							end
						end
					end
				end
			end

			if arg_292_1.time_ >= var_295_5 + var_295_6 and arg_292_1.time_ < var_295_5 + var_295_6 + arg_295_0 and not isNil(var_295_4) and arg_292_1.var_.actorSpriteComps10110 then
				for iter_295_4, iter_295_5 in pairs(arg_292_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_295_5 then
						if arg_292_1.isInRecall_ then
							iter_295_5.color = arg_292_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_295_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_292_1.var_.actorSpriteComps10110 = nil
			end

			local var_295_12 = arg_292_1.actors_["10110"].transform
			local var_295_13 = 0

			if var_295_13 < arg_292_1.time_ and arg_292_1.time_ <= var_295_13 + arg_295_0 then
				arg_292_1.var_.moveOldPos10110 = var_295_12.localPosition
				var_295_12.localScale = Vector3.New(1, 1, 1)

				arg_292_1:CheckSpriteTmpPos("10110", 3)

				local var_295_14 = var_295_12.childCount

				for iter_295_6 = 0, var_295_14 - 1 do
					local var_295_15 = var_295_12:GetChild(iter_295_6)

					if var_295_15.name == "" or not string.find(var_295_15.name, "split") then
						var_295_15.gameObject:SetActive(true)
					else
						var_295_15.gameObject:SetActive(false)
					end
				end
			end

			local var_295_16 = 0.001

			if var_295_13 <= arg_292_1.time_ and arg_292_1.time_ < var_295_13 + var_295_16 then
				local var_295_17 = (arg_292_1.time_ - var_295_13) / var_295_16
				local var_295_18 = Vector3.New(0, -413.3, -241.3)

				var_295_12.localPosition = Vector3.Lerp(arg_292_1.var_.moveOldPos10110, var_295_18, var_295_17)
			end

			if arg_292_1.time_ >= var_295_13 + var_295_16 and arg_292_1.time_ < var_295_13 + var_295_16 + arg_295_0 then
				var_295_12.localPosition = Vector3.New(0, -413.3, -241.3)
			end

			local var_295_19 = arg_292_1.actors_["10110"]
			local var_295_20 = 0

			if var_295_20 < arg_292_1.time_ and arg_292_1.time_ <= var_295_20 + arg_295_0 then
				local var_295_21 = var_295_19:GetComponentInChildren(typeof(CanvasGroup))

				if var_295_21 then
					arg_292_1.var_.alphaOldValue10110 = var_295_21.alpha
					arg_292_1.var_.characterEffect10110 = var_295_21
				end

				arg_292_1.var_.alphaOldValue10110 = 0
			end

			local var_295_22 = 0.2

			if var_295_20 <= arg_292_1.time_ and arg_292_1.time_ < var_295_20 + var_295_22 then
				local var_295_23 = (arg_292_1.time_ - var_295_20) / var_295_22
				local var_295_24 = Mathf.Lerp(arg_292_1.var_.alphaOldValue10110, 1, var_295_23)

				if arg_292_1.var_.characterEffect10110 then
					arg_292_1.var_.characterEffect10110.alpha = var_295_24
				end
			end

			if arg_292_1.time_ >= var_295_20 + var_295_22 and arg_292_1.time_ < var_295_20 + var_295_22 + arg_295_0 and arg_292_1.var_.characterEffect10110 then
				arg_292_1.var_.characterEffect10110.alpha = 1
			end

			local var_295_25 = 0

			if var_295_25 < arg_292_1.time_ and arg_292_1.time_ <= var_295_25 + arg_295_0 then
				arg_292_1.allBtn_.enabled = false
			end

			local var_295_26 = 0.466666666666667

			if arg_292_1.time_ >= var_295_25 + var_295_26 and arg_292_1.time_ < var_295_25 + var_295_26 + arg_295_0 then
				arg_292_1.allBtn_.enabled = true
			end

			if arg_292_1.frameCnt_ <= 1 then
				arg_292_1.dialog_:SetActive(false)
			end

			local var_295_27 = 0.2
			local var_295_28 = 0.1

			if var_295_27 < arg_292_1.time_ and arg_292_1.time_ <= var_295_27 + arg_295_0 then
				arg_292_1.talkMaxDuration = 0

				arg_292_1.dialog_:SetActive(true)

				local var_295_29 = LeanTween.value(arg_292_1.dialog_, 0, 1, 0.3)

				var_295_29:setOnUpdate(LuaHelper.FloatAction(function(arg_296_0)
					arg_292_1.dialogCg_.alpha = arg_296_0
				end))
				var_295_29:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_292_1.dialog_)
					var_295_29:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_292_1.duration_ = arg_292_1.duration_ + 0.3

				SetActive(arg_292_1.leftNameGo_, true)

				local var_295_30 = arg_292_1:FormatText(StoryNameCfg[699].name)

				arg_292_1.leftNameTxt_.text = var_295_30

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_292_1.leftNameTxt_.transform)

				arg_292_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_292_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_292_1:RecordName(arg_292_1.leftNameTxt_.text)
				SetActive(arg_292_1.iconTrs_.gameObject, false)
				arg_292_1.callingController_:SetSelectedState("normal")

				local var_295_31 = arg_292_1:GetWordFromCfg(417012069)
				local var_295_32 = arg_292_1:FormatText(var_295_31.content)

				arg_292_1.text_.text = var_295_32

				LuaForUtil.ClearLinePrefixSymbol(arg_292_1.text_)

				local var_295_33 = 4
				local var_295_34 = utf8.len(var_295_32)
				local var_295_35 = var_295_33 <= 0 and var_295_28 or var_295_28 * (var_295_34 / var_295_33)

				if var_295_35 > 0 and var_295_28 < var_295_35 then
					arg_292_1.talkMaxDuration = var_295_35
					var_295_27 = var_295_27 + 0.3

					if var_295_35 + var_295_27 > arg_292_1.duration_ then
						arg_292_1.duration_ = var_295_35 + var_295_27
					end
				end

				arg_292_1.text_.text = var_295_32
				arg_292_1.typewritter.percent = 0

				arg_292_1.typewritter:SetDirty()
				arg_292_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012069", "story_v_out_417012.awb") ~= 0 then
					local var_295_36 = manager.audio:GetVoiceLength("story_v_out_417012", "417012069", "story_v_out_417012.awb") / 1000

					if var_295_36 + var_295_27 > arg_292_1.duration_ then
						arg_292_1.duration_ = var_295_36 + var_295_27
					end

					if var_295_31.prefab_name ~= "" and arg_292_1.actors_[var_295_31.prefab_name] ~= nil then
						local var_295_37 = LuaForUtil.PlayVoiceWithCriLipsync(arg_292_1.actors_[var_295_31.prefab_name].transform, "story_v_out_417012", "417012069", "story_v_out_417012.awb")

						arg_292_1:RecordAudio("417012069", var_295_37)
						arg_292_1:RecordAudio("417012069", var_295_37)
					else
						arg_292_1:AudioAction("play", "voice", "story_v_out_417012", "417012069", "story_v_out_417012.awb")
					end

					arg_292_1:RecordHistoryTalkVoice("story_v_out_417012", "417012069", "story_v_out_417012.awb")
				end

				arg_292_1:RecordContent(arg_292_1.text_.text)
			end

			local var_295_38 = var_295_27 + 0.3
			local var_295_39 = math.max(var_295_28, arg_292_1.talkMaxDuration)

			if var_295_38 <= arg_292_1.time_ and arg_292_1.time_ < var_295_38 + var_295_39 then
				arg_292_1.typewritter.percent = (arg_292_1.time_ - var_295_38) / var_295_39

				arg_292_1.typewritter:SetDirty()
			end

			if arg_292_1.time_ >= var_295_38 + var_295_39 and arg_292_1.time_ < var_295_38 + var_295_39 + arg_295_0 then
				arg_292_1.typewritter.percent = 1

				arg_292_1.typewritter:SetDirty()
				arg_292_1:ShowNextGo(true)
			end
		end
	end,
	Play417012070 = function(arg_298_0, arg_298_1)
		arg_298_1.time_ = 0
		arg_298_1.frameCnt_ = 0
		arg_298_1.state_ = "playing"
		arg_298_1.curTalkId_ = 417012070
		arg_298_1.duration_ = 4.27

		local var_298_0 = {
			zh = 2.3,
			ja = 4.266
		}
		local var_298_1 = manager.audio:GetLocalizationFlag()

		if var_298_0[var_298_1] ~= nil then
			arg_298_1.duration_ = var_298_0[var_298_1]
		end

		SetActive(arg_298_1.tipsGo_, false)

		function arg_298_1.onSingleLineFinish_()
			arg_298_1.onSingleLineUpdate_ = nil
			arg_298_1.onSingleLineFinish_ = nil
			arg_298_1.state_ = "waiting"
		end

		function arg_298_1.playNext_(arg_300_0)
			if arg_300_0 == 1 then
				arg_298_0:Play417012071(arg_298_1)
			end
		end

		function arg_298_1.onSingleLineUpdate_(arg_301_0)
			local var_301_0 = arg_298_1.actors_["1034"]
			local var_301_1 = 0

			if var_301_1 < arg_298_1.time_ and arg_298_1.time_ <= var_301_1 + arg_301_0 and not isNil(var_301_0) and arg_298_1.var_.actorSpriteComps1034 == nil then
				arg_298_1.var_.actorSpriteComps1034 = var_301_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_301_2 = 0.2

			if var_301_1 <= arg_298_1.time_ and arg_298_1.time_ < var_301_1 + var_301_2 and not isNil(var_301_0) then
				local var_301_3 = (arg_298_1.time_ - var_301_1) / var_301_2

				if arg_298_1.var_.actorSpriteComps1034 then
					for iter_301_0, iter_301_1 in pairs(arg_298_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_301_1 then
							if arg_298_1.isInRecall_ then
								local var_301_4 = Mathf.Lerp(iter_301_1.color.r, arg_298_1.hightColor1.r, var_301_3)
								local var_301_5 = Mathf.Lerp(iter_301_1.color.g, arg_298_1.hightColor1.g, var_301_3)
								local var_301_6 = Mathf.Lerp(iter_301_1.color.b, arg_298_1.hightColor1.b, var_301_3)

								iter_301_1.color = Color.New(var_301_4, var_301_5, var_301_6)
							else
								local var_301_7 = Mathf.Lerp(iter_301_1.color.r, 1, var_301_3)

								iter_301_1.color = Color.New(var_301_7, var_301_7, var_301_7)
							end
						end
					end
				end
			end

			if arg_298_1.time_ >= var_301_1 + var_301_2 and arg_298_1.time_ < var_301_1 + var_301_2 + arg_301_0 and not isNil(var_301_0) and arg_298_1.var_.actorSpriteComps1034 then
				for iter_301_2, iter_301_3 in pairs(arg_298_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_301_3 then
						if arg_298_1.isInRecall_ then
							iter_301_3.color = arg_298_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_301_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_298_1.var_.actorSpriteComps1034 = nil
			end

			local var_301_8 = arg_298_1.actors_["10110"]
			local var_301_9 = 0

			if var_301_9 < arg_298_1.time_ and arg_298_1.time_ <= var_301_9 + arg_301_0 and not isNil(var_301_8) and arg_298_1.var_.actorSpriteComps10110 == nil then
				arg_298_1.var_.actorSpriteComps10110 = var_301_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_301_10 = 0.2

			if var_301_9 <= arg_298_1.time_ and arg_298_1.time_ < var_301_9 + var_301_10 and not isNil(var_301_8) then
				local var_301_11 = (arg_298_1.time_ - var_301_9) / var_301_10

				if arg_298_1.var_.actorSpriteComps10110 then
					for iter_301_4, iter_301_5 in pairs(arg_298_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_301_5 then
							if arg_298_1.isInRecall_ then
								local var_301_12 = Mathf.Lerp(iter_301_5.color.r, arg_298_1.hightColor2.r, var_301_11)
								local var_301_13 = Mathf.Lerp(iter_301_5.color.g, arg_298_1.hightColor2.g, var_301_11)
								local var_301_14 = Mathf.Lerp(iter_301_5.color.b, arg_298_1.hightColor2.b, var_301_11)

								iter_301_5.color = Color.New(var_301_12, var_301_13, var_301_14)
							else
								local var_301_15 = Mathf.Lerp(iter_301_5.color.r, 0.5, var_301_11)

								iter_301_5.color = Color.New(var_301_15, var_301_15, var_301_15)
							end
						end
					end
				end
			end

			if arg_298_1.time_ >= var_301_9 + var_301_10 and arg_298_1.time_ < var_301_9 + var_301_10 + arg_301_0 and not isNil(var_301_8) and arg_298_1.var_.actorSpriteComps10110 then
				for iter_301_6, iter_301_7 in pairs(arg_298_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_301_7 then
						if arg_298_1.isInRecall_ then
							iter_301_7.color = arg_298_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_301_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_298_1.var_.actorSpriteComps10110 = nil
			end

			local var_301_16 = arg_298_1.actors_["10110"].transform
			local var_301_17 = 0

			if var_301_17 < arg_298_1.time_ and arg_298_1.time_ <= var_301_17 + arg_301_0 then
				arg_298_1.var_.moveOldPos10110 = var_301_16.localPosition
				var_301_16.localScale = Vector3.New(1, 1, 1)

				arg_298_1:CheckSpriteTmpPos("10110", 4)

				local var_301_18 = var_301_16.childCount

				for iter_301_8 = 0, var_301_18 - 1 do
					local var_301_19 = var_301_16:GetChild(iter_301_8)

					if var_301_19.name == "" or not string.find(var_301_19.name, "split") then
						var_301_19.gameObject:SetActive(true)
					else
						var_301_19.gameObject:SetActive(false)
					end
				end
			end

			local var_301_20 = 0.001

			if var_301_17 <= arg_298_1.time_ and arg_298_1.time_ < var_301_17 + var_301_20 then
				local var_301_21 = (arg_298_1.time_ - var_301_17) / var_301_20
				local var_301_22 = Vector3.New(390, -425.7, -223.7)

				var_301_16.localPosition = Vector3.Lerp(arg_298_1.var_.moveOldPos10110, var_301_22, var_301_21)
			end

			if arg_298_1.time_ >= var_301_17 + var_301_20 and arg_298_1.time_ < var_301_17 + var_301_20 + arg_301_0 then
				var_301_16.localPosition = Vector3.New(390, -425.7, -223.7)
			end

			local var_301_23 = arg_298_1.actors_["1034"].transform
			local var_301_24 = 0

			if var_301_24 < arg_298_1.time_ and arg_298_1.time_ <= var_301_24 + arg_301_0 then
				arg_298_1.var_.moveOldPos1034 = var_301_23.localPosition
				var_301_23.localScale = Vector3.New(1, 1, 1)

				arg_298_1:CheckSpriteTmpPos("1034", 2)

				local var_301_25 = var_301_23.childCount

				for iter_301_9 = 0, var_301_25 - 1 do
					local var_301_26 = var_301_23:GetChild(iter_301_9)

					if var_301_26.name == "split_6" or not string.find(var_301_26.name, "split") then
						var_301_26.gameObject:SetActive(true)
					else
						var_301_26.gameObject:SetActive(false)
					end
				end
			end

			local var_301_27 = 0.001

			if var_301_24 <= arg_298_1.time_ and arg_298_1.time_ < var_301_24 + var_301_27 then
				local var_301_28 = (arg_298_1.time_ - var_301_24) / var_301_27
				local var_301_29 = Vector3.New(-390, -331.9, -324)

				var_301_23.localPosition = Vector3.Lerp(arg_298_1.var_.moveOldPos1034, var_301_29, var_301_28)
			end

			if arg_298_1.time_ >= var_301_24 + var_301_27 and arg_298_1.time_ < var_301_24 + var_301_27 + arg_301_0 then
				var_301_23.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_301_30 = 0
			local var_301_31 = 0.15

			if var_301_30 < arg_298_1.time_ and arg_298_1.time_ <= var_301_30 + arg_301_0 then
				arg_298_1.talkMaxDuration = 0
				arg_298_1.dialogCg_.alpha = 1

				arg_298_1.dialog_:SetActive(true)
				SetActive(arg_298_1.leftNameGo_, true)

				local var_301_32 = arg_298_1:FormatText(StoryNameCfg[1109].name)

				arg_298_1.leftNameTxt_.text = var_301_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_298_1.leftNameTxt_.transform)

				arg_298_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_298_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_298_1:RecordName(arg_298_1.leftNameTxt_.text)
				SetActive(arg_298_1.iconTrs_.gameObject, false)
				arg_298_1.callingController_:SetSelectedState("normal")

				local var_301_33 = arg_298_1:GetWordFromCfg(417012070)
				local var_301_34 = arg_298_1:FormatText(var_301_33.content)

				arg_298_1.text_.text = var_301_34

				LuaForUtil.ClearLinePrefixSymbol(arg_298_1.text_)

				local var_301_35 = 6
				local var_301_36 = utf8.len(var_301_34)
				local var_301_37 = var_301_35 <= 0 and var_301_31 or var_301_31 * (var_301_36 / var_301_35)

				if var_301_37 > 0 and var_301_31 < var_301_37 then
					arg_298_1.talkMaxDuration = var_301_37

					if var_301_37 + var_301_30 > arg_298_1.duration_ then
						arg_298_1.duration_ = var_301_37 + var_301_30
					end
				end

				arg_298_1.text_.text = var_301_34
				arg_298_1.typewritter.percent = 0

				arg_298_1.typewritter:SetDirty()
				arg_298_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012070", "story_v_out_417012.awb") ~= 0 then
					local var_301_38 = manager.audio:GetVoiceLength("story_v_out_417012", "417012070", "story_v_out_417012.awb") / 1000

					if var_301_38 + var_301_30 > arg_298_1.duration_ then
						arg_298_1.duration_ = var_301_38 + var_301_30
					end

					if var_301_33.prefab_name ~= "" and arg_298_1.actors_[var_301_33.prefab_name] ~= nil then
						local var_301_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_298_1.actors_[var_301_33.prefab_name].transform, "story_v_out_417012", "417012070", "story_v_out_417012.awb")

						arg_298_1:RecordAudio("417012070", var_301_39)
						arg_298_1:RecordAudio("417012070", var_301_39)
					else
						arg_298_1:AudioAction("play", "voice", "story_v_out_417012", "417012070", "story_v_out_417012.awb")
					end

					arg_298_1:RecordHistoryTalkVoice("story_v_out_417012", "417012070", "story_v_out_417012.awb")
				end

				arg_298_1:RecordContent(arg_298_1.text_.text)
			end

			local var_301_40 = math.max(var_301_31, arg_298_1.talkMaxDuration)

			if var_301_30 <= arg_298_1.time_ and arg_298_1.time_ < var_301_30 + var_301_40 then
				arg_298_1.typewritter.percent = (arg_298_1.time_ - var_301_30) / var_301_40

				arg_298_1.typewritter:SetDirty()
			end

			if arg_298_1.time_ >= var_301_30 + var_301_40 and arg_298_1.time_ < var_301_30 + var_301_40 + arg_301_0 then
				arg_298_1.typewritter.percent = 1

				arg_298_1.typewritter:SetDirty()
				arg_298_1:ShowNextGo(true)
			end
		end
	end,
	Play417012071 = function(arg_302_0, arg_302_1)
		arg_302_1.time_ = 0
		arg_302_1.frameCnt_ = 0
		arg_302_1.state_ = "playing"
		arg_302_1.curTalkId_ = 417012071
		arg_302_1.duration_ = 10.4

		local var_302_0 = {
			zh = 10.4,
			ja = 9.4
		}
		local var_302_1 = manager.audio:GetLocalizationFlag()

		if var_302_0[var_302_1] ~= nil then
			arg_302_1.duration_ = var_302_0[var_302_1]
		end

		SetActive(arg_302_1.tipsGo_, false)

		function arg_302_1.onSingleLineFinish_()
			arg_302_1.onSingleLineUpdate_ = nil
			arg_302_1.onSingleLineFinish_ = nil
			arg_302_1.state_ = "waiting"
		end

		function arg_302_1.playNext_(arg_304_0)
			if arg_304_0 == 1 then
				arg_302_0:Play417012072(arg_302_1)
			end
		end

		function arg_302_1.onSingleLineUpdate_(arg_305_0)
			local var_305_0 = arg_302_1.actors_["10110"]
			local var_305_1 = 0

			if var_305_1 < arg_302_1.time_ and arg_302_1.time_ <= var_305_1 + arg_305_0 and not isNil(var_305_0) and arg_302_1.var_.actorSpriteComps10110 == nil then
				arg_302_1.var_.actorSpriteComps10110 = var_305_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_305_2 = 0.2

			if var_305_1 <= arg_302_1.time_ and arg_302_1.time_ < var_305_1 + var_305_2 and not isNil(var_305_0) then
				local var_305_3 = (arg_302_1.time_ - var_305_1) / var_305_2

				if arg_302_1.var_.actorSpriteComps10110 then
					for iter_305_0, iter_305_1 in pairs(arg_302_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_305_1 then
							if arg_302_1.isInRecall_ then
								local var_305_4 = Mathf.Lerp(iter_305_1.color.r, arg_302_1.hightColor1.r, var_305_3)
								local var_305_5 = Mathf.Lerp(iter_305_1.color.g, arg_302_1.hightColor1.g, var_305_3)
								local var_305_6 = Mathf.Lerp(iter_305_1.color.b, arg_302_1.hightColor1.b, var_305_3)

								iter_305_1.color = Color.New(var_305_4, var_305_5, var_305_6)
							else
								local var_305_7 = Mathf.Lerp(iter_305_1.color.r, 1, var_305_3)

								iter_305_1.color = Color.New(var_305_7, var_305_7, var_305_7)
							end
						end
					end
				end
			end

			if arg_302_1.time_ >= var_305_1 + var_305_2 and arg_302_1.time_ < var_305_1 + var_305_2 + arg_305_0 and not isNil(var_305_0) and arg_302_1.var_.actorSpriteComps10110 then
				for iter_305_2, iter_305_3 in pairs(arg_302_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_305_3 then
						if arg_302_1.isInRecall_ then
							iter_305_3.color = arg_302_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_305_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_302_1.var_.actorSpriteComps10110 = nil
			end

			local var_305_8 = arg_302_1.actors_["1034"]
			local var_305_9 = 0

			if var_305_9 < arg_302_1.time_ and arg_302_1.time_ <= var_305_9 + arg_305_0 and not isNil(var_305_8) and arg_302_1.var_.actorSpriteComps1034 == nil then
				arg_302_1.var_.actorSpriteComps1034 = var_305_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_305_10 = 0.2

			if var_305_9 <= arg_302_1.time_ and arg_302_1.time_ < var_305_9 + var_305_10 and not isNil(var_305_8) then
				local var_305_11 = (arg_302_1.time_ - var_305_9) / var_305_10

				if arg_302_1.var_.actorSpriteComps1034 then
					for iter_305_4, iter_305_5 in pairs(arg_302_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_305_5 then
							if arg_302_1.isInRecall_ then
								local var_305_12 = Mathf.Lerp(iter_305_5.color.r, arg_302_1.hightColor2.r, var_305_11)
								local var_305_13 = Mathf.Lerp(iter_305_5.color.g, arg_302_1.hightColor2.g, var_305_11)
								local var_305_14 = Mathf.Lerp(iter_305_5.color.b, arg_302_1.hightColor2.b, var_305_11)

								iter_305_5.color = Color.New(var_305_12, var_305_13, var_305_14)
							else
								local var_305_15 = Mathf.Lerp(iter_305_5.color.r, 0.5, var_305_11)

								iter_305_5.color = Color.New(var_305_15, var_305_15, var_305_15)
							end
						end
					end
				end
			end

			if arg_302_1.time_ >= var_305_9 + var_305_10 and arg_302_1.time_ < var_305_9 + var_305_10 + arg_305_0 and not isNil(var_305_8) and arg_302_1.var_.actorSpriteComps1034 then
				for iter_305_6, iter_305_7 in pairs(arg_302_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_305_7 then
						if arg_302_1.isInRecall_ then
							iter_305_7.color = arg_302_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_305_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_302_1.var_.actorSpriteComps1034 = nil
			end

			local var_305_16 = arg_302_1.actors_["10110"].transform
			local var_305_17 = 0

			if var_305_17 < arg_302_1.time_ and arg_302_1.time_ <= var_305_17 + arg_305_0 then
				arg_302_1.var_.moveOldPos10110 = var_305_16.localPosition
				var_305_16.localScale = Vector3.New(1, 1, 1)

				arg_302_1:CheckSpriteTmpPos("10110", 4)

				local var_305_18 = var_305_16.childCount

				for iter_305_8 = 0, var_305_18 - 1 do
					local var_305_19 = var_305_16:GetChild(iter_305_8)

					if var_305_19.name == "split_2" or not string.find(var_305_19.name, "split") then
						var_305_19.gameObject:SetActive(true)
					else
						var_305_19.gameObject:SetActive(false)
					end
				end
			end

			local var_305_20 = 0.001

			if var_305_17 <= arg_302_1.time_ and arg_302_1.time_ < var_305_17 + var_305_20 then
				local var_305_21 = (arg_302_1.time_ - var_305_17) / var_305_20
				local var_305_22 = Vector3.New(390, -425.7, -223.7)

				var_305_16.localPosition = Vector3.Lerp(arg_302_1.var_.moveOldPos10110, var_305_22, var_305_21)
			end

			if arg_302_1.time_ >= var_305_17 + var_305_20 and arg_302_1.time_ < var_305_17 + var_305_20 + arg_305_0 then
				var_305_16.localPosition = Vector3.New(390, -425.7, -223.7)
			end

			local var_305_23 = 0
			local var_305_24 = 0.975

			if var_305_23 < arg_302_1.time_ and arg_302_1.time_ <= var_305_23 + arg_305_0 then
				arg_302_1.talkMaxDuration = 0
				arg_302_1.dialogCg_.alpha = 1

				arg_302_1.dialog_:SetActive(true)
				SetActive(arg_302_1.leftNameGo_, true)

				local var_305_25 = arg_302_1:FormatText(StoryNameCfg[699].name)

				arg_302_1.leftNameTxt_.text = var_305_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_302_1.leftNameTxt_.transform)

				arg_302_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_302_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_302_1:RecordName(arg_302_1.leftNameTxt_.text)
				SetActive(arg_302_1.iconTrs_.gameObject, false)
				arg_302_1.callingController_:SetSelectedState("normal")

				local var_305_26 = arg_302_1:GetWordFromCfg(417012071)
				local var_305_27 = arg_302_1:FormatText(var_305_26.content)

				arg_302_1.text_.text = var_305_27

				LuaForUtil.ClearLinePrefixSymbol(arg_302_1.text_)

				local var_305_28 = 39
				local var_305_29 = utf8.len(var_305_27)
				local var_305_30 = var_305_28 <= 0 and var_305_24 or var_305_24 * (var_305_29 / var_305_28)

				if var_305_30 > 0 and var_305_24 < var_305_30 then
					arg_302_1.talkMaxDuration = var_305_30

					if var_305_30 + var_305_23 > arg_302_1.duration_ then
						arg_302_1.duration_ = var_305_30 + var_305_23
					end
				end

				arg_302_1.text_.text = var_305_27
				arg_302_1.typewritter.percent = 0

				arg_302_1.typewritter:SetDirty()
				arg_302_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012071", "story_v_out_417012.awb") ~= 0 then
					local var_305_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012071", "story_v_out_417012.awb") / 1000

					if var_305_31 + var_305_23 > arg_302_1.duration_ then
						arg_302_1.duration_ = var_305_31 + var_305_23
					end

					if var_305_26.prefab_name ~= "" and arg_302_1.actors_[var_305_26.prefab_name] ~= nil then
						local var_305_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_302_1.actors_[var_305_26.prefab_name].transform, "story_v_out_417012", "417012071", "story_v_out_417012.awb")

						arg_302_1:RecordAudio("417012071", var_305_32)
						arg_302_1:RecordAudio("417012071", var_305_32)
					else
						arg_302_1:AudioAction("play", "voice", "story_v_out_417012", "417012071", "story_v_out_417012.awb")
					end

					arg_302_1:RecordHistoryTalkVoice("story_v_out_417012", "417012071", "story_v_out_417012.awb")
				end

				arg_302_1:RecordContent(arg_302_1.text_.text)
			end

			local var_305_33 = math.max(var_305_24, arg_302_1.talkMaxDuration)

			if var_305_23 <= arg_302_1.time_ and arg_302_1.time_ < var_305_23 + var_305_33 then
				arg_302_1.typewritter.percent = (arg_302_1.time_ - var_305_23) / var_305_33

				arg_302_1.typewritter:SetDirty()
			end

			if arg_302_1.time_ >= var_305_23 + var_305_33 and arg_302_1.time_ < var_305_23 + var_305_33 + arg_305_0 then
				arg_302_1.typewritter.percent = 1

				arg_302_1.typewritter:SetDirty()
				arg_302_1:ShowNextGo(true)
			end
		end
	end,
	Play417012072 = function(arg_306_0, arg_306_1)
		arg_306_1.time_ = 0
		arg_306_1.frameCnt_ = 0
		arg_306_1.state_ = "playing"
		arg_306_1.curTalkId_ = 417012072
		arg_306_1.duration_ = 9.43

		local var_306_0 = {
			zh = 4,
			ja = 9.433
		}
		local var_306_1 = manager.audio:GetLocalizationFlag()

		if var_306_0[var_306_1] ~= nil then
			arg_306_1.duration_ = var_306_0[var_306_1]
		end

		SetActive(arg_306_1.tipsGo_, false)

		function arg_306_1.onSingleLineFinish_()
			arg_306_1.onSingleLineUpdate_ = nil
			arg_306_1.onSingleLineFinish_ = nil
			arg_306_1.state_ = "waiting"
		end

		function arg_306_1.playNext_(arg_308_0)
			if arg_308_0 == 1 then
				arg_306_0:Play417012073(arg_306_1)
			end
		end

		function arg_306_1.onSingleLineUpdate_(arg_309_0)
			local var_309_0 = arg_306_1.actors_["1034"]
			local var_309_1 = 0

			if var_309_1 < arg_306_1.time_ and arg_306_1.time_ <= var_309_1 + arg_309_0 and not isNil(var_309_0) and arg_306_1.var_.actorSpriteComps1034 == nil then
				arg_306_1.var_.actorSpriteComps1034 = var_309_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_309_2 = 0.2

			if var_309_1 <= arg_306_1.time_ and arg_306_1.time_ < var_309_1 + var_309_2 and not isNil(var_309_0) then
				local var_309_3 = (arg_306_1.time_ - var_309_1) / var_309_2

				if arg_306_1.var_.actorSpriteComps1034 then
					for iter_309_0, iter_309_1 in pairs(arg_306_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_309_1 then
							if arg_306_1.isInRecall_ then
								local var_309_4 = Mathf.Lerp(iter_309_1.color.r, arg_306_1.hightColor1.r, var_309_3)
								local var_309_5 = Mathf.Lerp(iter_309_1.color.g, arg_306_1.hightColor1.g, var_309_3)
								local var_309_6 = Mathf.Lerp(iter_309_1.color.b, arg_306_1.hightColor1.b, var_309_3)

								iter_309_1.color = Color.New(var_309_4, var_309_5, var_309_6)
							else
								local var_309_7 = Mathf.Lerp(iter_309_1.color.r, 1, var_309_3)

								iter_309_1.color = Color.New(var_309_7, var_309_7, var_309_7)
							end
						end
					end
				end
			end

			if arg_306_1.time_ >= var_309_1 + var_309_2 and arg_306_1.time_ < var_309_1 + var_309_2 + arg_309_0 and not isNil(var_309_0) and arg_306_1.var_.actorSpriteComps1034 then
				for iter_309_2, iter_309_3 in pairs(arg_306_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_309_3 then
						if arg_306_1.isInRecall_ then
							iter_309_3.color = arg_306_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_309_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_306_1.var_.actorSpriteComps1034 = nil
			end

			local var_309_8 = arg_306_1.actors_["10110"]
			local var_309_9 = 0

			if var_309_9 < arg_306_1.time_ and arg_306_1.time_ <= var_309_9 + arg_309_0 and not isNil(var_309_8) and arg_306_1.var_.actorSpriteComps10110 == nil then
				arg_306_1.var_.actorSpriteComps10110 = var_309_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_309_10 = 0.2

			if var_309_9 <= arg_306_1.time_ and arg_306_1.time_ < var_309_9 + var_309_10 and not isNil(var_309_8) then
				local var_309_11 = (arg_306_1.time_ - var_309_9) / var_309_10

				if arg_306_1.var_.actorSpriteComps10110 then
					for iter_309_4, iter_309_5 in pairs(arg_306_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_309_5 then
							if arg_306_1.isInRecall_ then
								local var_309_12 = Mathf.Lerp(iter_309_5.color.r, arg_306_1.hightColor2.r, var_309_11)
								local var_309_13 = Mathf.Lerp(iter_309_5.color.g, arg_306_1.hightColor2.g, var_309_11)
								local var_309_14 = Mathf.Lerp(iter_309_5.color.b, arg_306_1.hightColor2.b, var_309_11)

								iter_309_5.color = Color.New(var_309_12, var_309_13, var_309_14)
							else
								local var_309_15 = Mathf.Lerp(iter_309_5.color.r, 0.5, var_309_11)

								iter_309_5.color = Color.New(var_309_15, var_309_15, var_309_15)
							end
						end
					end
				end
			end

			if arg_306_1.time_ >= var_309_9 + var_309_10 and arg_306_1.time_ < var_309_9 + var_309_10 + arg_309_0 and not isNil(var_309_8) and arg_306_1.var_.actorSpriteComps10110 then
				for iter_309_6, iter_309_7 in pairs(arg_306_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_309_7 then
						if arg_306_1.isInRecall_ then
							iter_309_7.color = arg_306_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_309_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_306_1.var_.actorSpriteComps10110 = nil
			end

			local var_309_16 = 0
			local var_309_17 = 0.475

			if var_309_16 < arg_306_1.time_ and arg_306_1.time_ <= var_309_16 + arg_309_0 then
				arg_306_1.talkMaxDuration = 0
				arg_306_1.dialogCg_.alpha = 1

				arg_306_1.dialog_:SetActive(true)
				SetActive(arg_306_1.leftNameGo_, true)

				local var_309_18 = arg_306_1:FormatText(StoryNameCfg[1109].name)

				arg_306_1.leftNameTxt_.text = var_309_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_306_1.leftNameTxt_.transform)

				arg_306_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_306_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_306_1:RecordName(arg_306_1.leftNameTxt_.text)
				SetActive(arg_306_1.iconTrs_.gameObject, false)
				arg_306_1.callingController_:SetSelectedState("normal")

				local var_309_19 = arg_306_1:GetWordFromCfg(417012072)
				local var_309_20 = arg_306_1:FormatText(var_309_19.content)

				arg_306_1.text_.text = var_309_20

				LuaForUtil.ClearLinePrefixSymbol(arg_306_1.text_)

				local var_309_21 = 19
				local var_309_22 = utf8.len(var_309_20)
				local var_309_23 = var_309_21 <= 0 and var_309_17 or var_309_17 * (var_309_22 / var_309_21)

				if var_309_23 > 0 and var_309_17 < var_309_23 then
					arg_306_1.talkMaxDuration = var_309_23

					if var_309_23 + var_309_16 > arg_306_1.duration_ then
						arg_306_1.duration_ = var_309_23 + var_309_16
					end
				end

				arg_306_1.text_.text = var_309_20
				arg_306_1.typewritter.percent = 0

				arg_306_1.typewritter:SetDirty()
				arg_306_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012072", "story_v_out_417012.awb") ~= 0 then
					local var_309_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012072", "story_v_out_417012.awb") / 1000

					if var_309_24 + var_309_16 > arg_306_1.duration_ then
						arg_306_1.duration_ = var_309_24 + var_309_16
					end

					if var_309_19.prefab_name ~= "" and arg_306_1.actors_[var_309_19.prefab_name] ~= nil then
						local var_309_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_306_1.actors_[var_309_19.prefab_name].transform, "story_v_out_417012", "417012072", "story_v_out_417012.awb")

						arg_306_1:RecordAudio("417012072", var_309_25)
						arg_306_1:RecordAudio("417012072", var_309_25)
					else
						arg_306_1:AudioAction("play", "voice", "story_v_out_417012", "417012072", "story_v_out_417012.awb")
					end

					arg_306_1:RecordHistoryTalkVoice("story_v_out_417012", "417012072", "story_v_out_417012.awb")
				end

				arg_306_1:RecordContent(arg_306_1.text_.text)
			end

			local var_309_26 = math.max(var_309_17, arg_306_1.talkMaxDuration)

			if var_309_16 <= arg_306_1.time_ and arg_306_1.time_ < var_309_16 + var_309_26 then
				arg_306_1.typewritter.percent = (arg_306_1.time_ - var_309_16) / var_309_26

				arg_306_1.typewritter:SetDirty()
			end

			if arg_306_1.time_ >= var_309_16 + var_309_26 and arg_306_1.time_ < var_309_16 + var_309_26 + arg_309_0 then
				arg_306_1.typewritter.percent = 1

				arg_306_1.typewritter:SetDirty()
				arg_306_1:ShowNextGo(true)
			end
		end
	end,
	Play417012073 = function(arg_310_0, arg_310_1)
		arg_310_1.time_ = 0
		arg_310_1.frameCnt_ = 0
		arg_310_1.state_ = "playing"
		arg_310_1.curTalkId_ = 417012073
		arg_310_1.duration_ = 11.4

		local var_310_0 = {
			zh = 6.3,
			ja = 11.4
		}
		local var_310_1 = manager.audio:GetLocalizationFlag()

		if var_310_0[var_310_1] ~= nil then
			arg_310_1.duration_ = var_310_0[var_310_1]
		end

		SetActive(arg_310_1.tipsGo_, false)

		function arg_310_1.onSingleLineFinish_()
			arg_310_1.onSingleLineUpdate_ = nil
			arg_310_1.onSingleLineFinish_ = nil
			arg_310_1.state_ = "waiting"
		end

		function arg_310_1.playNext_(arg_312_0)
			if arg_312_0 == 1 then
				arg_310_0:Play417012074(arg_310_1)
			end
		end

		function arg_310_1.onSingleLineUpdate_(arg_313_0)
			local var_313_0 = arg_310_1.actors_["10110"]
			local var_313_1 = 0

			if var_313_1 < arg_310_1.time_ and arg_310_1.time_ <= var_313_1 + arg_313_0 and not isNil(var_313_0) and arg_310_1.var_.actorSpriteComps10110 == nil then
				arg_310_1.var_.actorSpriteComps10110 = var_313_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_313_2 = 0.2

			if var_313_1 <= arg_310_1.time_ and arg_310_1.time_ < var_313_1 + var_313_2 and not isNil(var_313_0) then
				local var_313_3 = (arg_310_1.time_ - var_313_1) / var_313_2

				if arg_310_1.var_.actorSpriteComps10110 then
					for iter_313_0, iter_313_1 in pairs(arg_310_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_313_1 then
							if arg_310_1.isInRecall_ then
								local var_313_4 = Mathf.Lerp(iter_313_1.color.r, arg_310_1.hightColor1.r, var_313_3)
								local var_313_5 = Mathf.Lerp(iter_313_1.color.g, arg_310_1.hightColor1.g, var_313_3)
								local var_313_6 = Mathf.Lerp(iter_313_1.color.b, arg_310_1.hightColor1.b, var_313_3)

								iter_313_1.color = Color.New(var_313_4, var_313_5, var_313_6)
							else
								local var_313_7 = Mathf.Lerp(iter_313_1.color.r, 1, var_313_3)

								iter_313_1.color = Color.New(var_313_7, var_313_7, var_313_7)
							end
						end
					end
				end
			end

			if arg_310_1.time_ >= var_313_1 + var_313_2 and arg_310_1.time_ < var_313_1 + var_313_2 + arg_313_0 and not isNil(var_313_0) and arg_310_1.var_.actorSpriteComps10110 then
				for iter_313_2, iter_313_3 in pairs(arg_310_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_313_3 then
						if arg_310_1.isInRecall_ then
							iter_313_3.color = arg_310_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_313_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_310_1.var_.actorSpriteComps10110 = nil
			end

			local var_313_8 = arg_310_1.actors_["1034"]
			local var_313_9 = 0

			if var_313_9 < arg_310_1.time_ and arg_310_1.time_ <= var_313_9 + arg_313_0 and not isNil(var_313_8) and arg_310_1.var_.actorSpriteComps1034 == nil then
				arg_310_1.var_.actorSpriteComps1034 = var_313_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_313_10 = 0.2

			if var_313_9 <= arg_310_1.time_ and arg_310_1.time_ < var_313_9 + var_313_10 and not isNil(var_313_8) then
				local var_313_11 = (arg_310_1.time_ - var_313_9) / var_313_10

				if arg_310_1.var_.actorSpriteComps1034 then
					for iter_313_4, iter_313_5 in pairs(arg_310_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_313_5 then
							if arg_310_1.isInRecall_ then
								local var_313_12 = Mathf.Lerp(iter_313_5.color.r, arg_310_1.hightColor2.r, var_313_11)
								local var_313_13 = Mathf.Lerp(iter_313_5.color.g, arg_310_1.hightColor2.g, var_313_11)
								local var_313_14 = Mathf.Lerp(iter_313_5.color.b, arg_310_1.hightColor2.b, var_313_11)

								iter_313_5.color = Color.New(var_313_12, var_313_13, var_313_14)
							else
								local var_313_15 = Mathf.Lerp(iter_313_5.color.r, 0.5, var_313_11)

								iter_313_5.color = Color.New(var_313_15, var_313_15, var_313_15)
							end
						end
					end
				end
			end

			if arg_310_1.time_ >= var_313_9 + var_313_10 and arg_310_1.time_ < var_313_9 + var_313_10 + arg_313_0 and not isNil(var_313_8) and arg_310_1.var_.actorSpriteComps1034 then
				for iter_313_6, iter_313_7 in pairs(arg_310_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_313_7 then
						if arg_310_1.isInRecall_ then
							iter_313_7.color = arg_310_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_313_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_310_1.var_.actorSpriteComps1034 = nil
			end

			local var_313_16 = 0
			local var_313_17 = 0.525

			if var_313_16 < arg_310_1.time_ and arg_310_1.time_ <= var_313_16 + arg_313_0 then
				arg_310_1.talkMaxDuration = 0
				arg_310_1.dialogCg_.alpha = 1

				arg_310_1.dialog_:SetActive(true)
				SetActive(arg_310_1.leftNameGo_, true)

				local var_313_18 = arg_310_1:FormatText(StoryNameCfg[699].name)

				arg_310_1.leftNameTxt_.text = var_313_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_310_1.leftNameTxt_.transform)

				arg_310_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_310_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_310_1:RecordName(arg_310_1.leftNameTxt_.text)
				SetActive(arg_310_1.iconTrs_.gameObject, false)
				arg_310_1.callingController_:SetSelectedState("normal")

				local var_313_19 = arg_310_1:GetWordFromCfg(417012073)
				local var_313_20 = arg_310_1:FormatText(var_313_19.content)

				arg_310_1.text_.text = var_313_20

				LuaForUtil.ClearLinePrefixSymbol(arg_310_1.text_)

				local var_313_21 = 21
				local var_313_22 = utf8.len(var_313_20)
				local var_313_23 = var_313_21 <= 0 and var_313_17 or var_313_17 * (var_313_22 / var_313_21)

				if var_313_23 > 0 and var_313_17 < var_313_23 then
					arg_310_1.talkMaxDuration = var_313_23

					if var_313_23 + var_313_16 > arg_310_1.duration_ then
						arg_310_1.duration_ = var_313_23 + var_313_16
					end
				end

				arg_310_1.text_.text = var_313_20
				arg_310_1.typewritter.percent = 0

				arg_310_1.typewritter:SetDirty()
				arg_310_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012073", "story_v_out_417012.awb") ~= 0 then
					local var_313_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012073", "story_v_out_417012.awb") / 1000

					if var_313_24 + var_313_16 > arg_310_1.duration_ then
						arg_310_1.duration_ = var_313_24 + var_313_16
					end

					if var_313_19.prefab_name ~= "" and arg_310_1.actors_[var_313_19.prefab_name] ~= nil then
						local var_313_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_310_1.actors_[var_313_19.prefab_name].transform, "story_v_out_417012", "417012073", "story_v_out_417012.awb")

						arg_310_1:RecordAudio("417012073", var_313_25)
						arg_310_1:RecordAudio("417012073", var_313_25)
					else
						arg_310_1:AudioAction("play", "voice", "story_v_out_417012", "417012073", "story_v_out_417012.awb")
					end

					arg_310_1:RecordHistoryTalkVoice("story_v_out_417012", "417012073", "story_v_out_417012.awb")
				end

				arg_310_1:RecordContent(arg_310_1.text_.text)
			end

			local var_313_26 = math.max(var_313_17, arg_310_1.talkMaxDuration)

			if var_313_16 <= arg_310_1.time_ and arg_310_1.time_ < var_313_16 + var_313_26 then
				arg_310_1.typewritter.percent = (arg_310_1.time_ - var_313_16) / var_313_26

				arg_310_1.typewritter:SetDirty()
			end

			if arg_310_1.time_ >= var_313_16 + var_313_26 and arg_310_1.time_ < var_313_16 + var_313_26 + arg_313_0 then
				arg_310_1.typewritter.percent = 1

				arg_310_1.typewritter:SetDirty()
				arg_310_1:ShowNextGo(true)
			end
		end
	end,
	Play417012074 = function(arg_314_0, arg_314_1)
		arg_314_1.time_ = 0
		arg_314_1.frameCnt_ = 0
		arg_314_1.state_ = "playing"
		arg_314_1.curTalkId_ = 417012074
		arg_314_1.duration_ = 11.27

		local var_314_0 = {
			zh = 8,
			ja = 11.266
		}
		local var_314_1 = manager.audio:GetLocalizationFlag()

		if var_314_0[var_314_1] ~= nil then
			arg_314_1.duration_ = var_314_0[var_314_1]
		end

		SetActive(arg_314_1.tipsGo_, false)

		function arg_314_1.onSingleLineFinish_()
			arg_314_1.onSingleLineUpdate_ = nil
			arg_314_1.onSingleLineFinish_ = nil
			arg_314_1.state_ = "waiting"
		end

		function arg_314_1.playNext_(arg_316_0)
			if arg_316_0 == 1 then
				arg_314_0:Play417012075(arg_314_1)
			end
		end

		function arg_314_1.onSingleLineUpdate_(arg_317_0)
			local var_317_0 = 0
			local var_317_1 = 0.9

			if var_317_0 < arg_314_1.time_ and arg_314_1.time_ <= var_317_0 + arg_317_0 then
				arg_314_1.talkMaxDuration = 0
				arg_314_1.dialogCg_.alpha = 1

				arg_314_1.dialog_:SetActive(true)
				SetActive(arg_314_1.leftNameGo_, true)

				local var_317_2 = arg_314_1:FormatText(StoryNameCfg[699].name)

				arg_314_1.leftNameTxt_.text = var_317_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_314_1.leftNameTxt_.transform)

				arg_314_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_314_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_314_1:RecordName(arg_314_1.leftNameTxt_.text)
				SetActive(arg_314_1.iconTrs_.gameObject, false)
				arg_314_1.callingController_:SetSelectedState("normal")

				local var_317_3 = arg_314_1:GetWordFromCfg(417012074)
				local var_317_4 = arg_314_1:FormatText(var_317_3.content)

				arg_314_1.text_.text = var_317_4

				LuaForUtil.ClearLinePrefixSymbol(arg_314_1.text_)

				local var_317_5 = 36
				local var_317_6 = utf8.len(var_317_4)
				local var_317_7 = var_317_5 <= 0 and var_317_1 or var_317_1 * (var_317_6 / var_317_5)

				if var_317_7 > 0 and var_317_1 < var_317_7 then
					arg_314_1.talkMaxDuration = var_317_7

					if var_317_7 + var_317_0 > arg_314_1.duration_ then
						arg_314_1.duration_ = var_317_7 + var_317_0
					end
				end

				arg_314_1.text_.text = var_317_4
				arg_314_1.typewritter.percent = 0

				arg_314_1.typewritter:SetDirty()
				arg_314_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012074", "story_v_out_417012.awb") ~= 0 then
					local var_317_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012074", "story_v_out_417012.awb") / 1000

					if var_317_8 + var_317_0 > arg_314_1.duration_ then
						arg_314_1.duration_ = var_317_8 + var_317_0
					end

					if var_317_3.prefab_name ~= "" and arg_314_1.actors_[var_317_3.prefab_name] ~= nil then
						local var_317_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_314_1.actors_[var_317_3.prefab_name].transform, "story_v_out_417012", "417012074", "story_v_out_417012.awb")

						arg_314_1:RecordAudio("417012074", var_317_9)
						arg_314_1:RecordAudio("417012074", var_317_9)
					else
						arg_314_1:AudioAction("play", "voice", "story_v_out_417012", "417012074", "story_v_out_417012.awb")
					end

					arg_314_1:RecordHistoryTalkVoice("story_v_out_417012", "417012074", "story_v_out_417012.awb")
				end

				arg_314_1:RecordContent(arg_314_1.text_.text)
			end

			local var_317_10 = math.max(var_317_1, arg_314_1.talkMaxDuration)

			if var_317_0 <= arg_314_1.time_ and arg_314_1.time_ < var_317_0 + var_317_10 then
				arg_314_1.typewritter.percent = (arg_314_1.time_ - var_317_0) / var_317_10

				arg_314_1.typewritter:SetDirty()
			end

			if arg_314_1.time_ >= var_317_0 + var_317_10 and arg_314_1.time_ < var_317_0 + var_317_10 + arg_317_0 then
				arg_314_1.typewritter.percent = 1

				arg_314_1.typewritter:SetDirty()
				arg_314_1:ShowNextGo(true)
			end
		end
	end,
	Play417012075 = function(arg_318_0, arg_318_1)
		arg_318_1.time_ = 0
		arg_318_1.frameCnt_ = 0
		arg_318_1.state_ = "playing"
		arg_318_1.curTalkId_ = 417012075
		arg_318_1.duration_ = 10.17

		local var_318_0 = {
			zh = 7.3,
			ja = 10.166
		}
		local var_318_1 = manager.audio:GetLocalizationFlag()

		if var_318_0[var_318_1] ~= nil then
			arg_318_1.duration_ = var_318_0[var_318_1]
		end

		SetActive(arg_318_1.tipsGo_, false)

		function arg_318_1.onSingleLineFinish_()
			arg_318_1.onSingleLineUpdate_ = nil
			arg_318_1.onSingleLineFinish_ = nil
			arg_318_1.state_ = "waiting"
		end

		function arg_318_1.playNext_(arg_320_0)
			if arg_320_0 == 1 then
				arg_318_0:Play417012076(arg_318_1)
			end
		end

		function arg_318_1.onSingleLineUpdate_(arg_321_0)
			local var_321_0 = arg_318_1.actors_["1034"]
			local var_321_1 = 0

			if var_321_1 < arg_318_1.time_ and arg_318_1.time_ <= var_321_1 + arg_321_0 and not isNil(var_321_0) and arg_318_1.var_.actorSpriteComps1034 == nil then
				arg_318_1.var_.actorSpriteComps1034 = var_321_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_321_2 = 0.2

			if var_321_1 <= arg_318_1.time_ and arg_318_1.time_ < var_321_1 + var_321_2 and not isNil(var_321_0) then
				local var_321_3 = (arg_318_1.time_ - var_321_1) / var_321_2

				if arg_318_1.var_.actorSpriteComps1034 then
					for iter_321_0, iter_321_1 in pairs(arg_318_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_321_1 then
							if arg_318_1.isInRecall_ then
								local var_321_4 = Mathf.Lerp(iter_321_1.color.r, arg_318_1.hightColor1.r, var_321_3)
								local var_321_5 = Mathf.Lerp(iter_321_1.color.g, arg_318_1.hightColor1.g, var_321_3)
								local var_321_6 = Mathf.Lerp(iter_321_1.color.b, arg_318_1.hightColor1.b, var_321_3)

								iter_321_1.color = Color.New(var_321_4, var_321_5, var_321_6)
							else
								local var_321_7 = Mathf.Lerp(iter_321_1.color.r, 1, var_321_3)

								iter_321_1.color = Color.New(var_321_7, var_321_7, var_321_7)
							end
						end
					end
				end
			end

			if arg_318_1.time_ >= var_321_1 + var_321_2 and arg_318_1.time_ < var_321_1 + var_321_2 + arg_321_0 and not isNil(var_321_0) and arg_318_1.var_.actorSpriteComps1034 then
				for iter_321_2, iter_321_3 in pairs(arg_318_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_321_3 then
						if arg_318_1.isInRecall_ then
							iter_321_3.color = arg_318_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_321_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_318_1.var_.actorSpriteComps1034 = nil
			end

			local var_321_8 = arg_318_1.actors_["10110"]
			local var_321_9 = 0

			if var_321_9 < arg_318_1.time_ and arg_318_1.time_ <= var_321_9 + arg_321_0 and not isNil(var_321_8) and arg_318_1.var_.actorSpriteComps10110 == nil then
				arg_318_1.var_.actorSpriteComps10110 = var_321_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_321_10 = 0.2

			if var_321_9 <= arg_318_1.time_ and arg_318_1.time_ < var_321_9 + var_321_10 and not isNil(var_321_8) then
				local var_321_11 = (arg_318_1.time_ - var_321_9) / var_321_10

				if arg_318_1.var_.actorSpriteComps10110 then
					for iter_321_4, iter_321_5 in pairs(arg_318_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_321_5 then
							if arg_318_1.isInRecall_ then
								local var_321_12 = Mathf.Lerp(iter_321_5.color.r, arg_318_1.hightColor2.r, var_321_11)
								local var_321_13 = Mathf.Lerp(iter_321_5.color.g, arg_318_1.hightColor2.g, var_321_11)
								local var_321_14 = Mathf.Lerp(iter_321_5.color.b, arg_318_1.hightColor2.b, var_321_11)

								iter_321_5.color = Color.New(var_321_12, var_321_13, var_321_14)
							else
								local var_321_15 = Mathf.Lerp(iter_321_5.color.r, 0.5, var_321_11)

								iter_321_5.color = Color.New(var_321_15, var_321_15, var_321_15)
							end
						end
					end
				end
			end

			if arg_318_1.time_ >= var_321_9 + var_321_10 and arg_318_1.time_ < var_321_9 + var_321_10 + arg_321_0 and not isNil(var_321_8) and arg_318_1.var_.actorSpriteComps10110 then
				for iter_321_6, iter_321_7 in pairs(arg_318_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_321_7 then
						if arg_318_1.isInRecall_ then
							iter_321_7.color = arg_318_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_321_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_318_1.var_.actorSpriteComps10110 = nil
			end

			local var_321_16 = arg_318_1.actors_["1034"].transform
			local var_321_17 = 0

			if var_321_17 < arg_318_1.time_ and arg_318_1.time_ <= var_321_17 + arg_321_0 then
				arg_318_1.var_.moveOldPos1034 = var_321_16.localPosition
				var_321_16.localScale = Vector3.New(1, 1, 1)

				arg_318_1:CheckSpriteTmpPos("1034", 2)

				local var_321_18 = var_321_16.childCount

				for iter_321_8 = 0, var_321_18 - 1 do
					local var_321_19 = var_321_16:GetChild(iter_321_8)

					if var_321_19.name == "split_4" or not string.find(var_321_19.name, "split") then
						var_321_19.gameObject:SetActive(true)
					else
						var_321_19.gameObject:SetActive(false)
					end
				end
			end

			local var_321_20 = 0.001

			if var_321_17 <= arg_318_1.time_ and arg_318_1.time_ < var_321_17 + var_321_20 then
				local var_321_21 = (arg_318_1.time_ - var_321_17) / var_321_20
				local var_321_22 = Vector3.New(-390, -331.9, -324)

				var_321_16.localPosition = Vector3.Lerp(arg_318_1.var_.moveOldPos1034, var_321_22, var_321_21)
			end

			if arg_318_1.time_ >= var_321_17 + var_321_20 and arg_318_1.time_ < var_321_17 + var_321_20 + arg_321_0 then
				var_321_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_321_23 = 0
			local var_321_24 = 0.725

			if var_321_23 < arg_318_1.time_ and arg_318_1.time_ <= var_321_23 + arg_321_0 then
				arg_318_1.talkMaxDuration = 0
				arg_318_1.dialogCg_.alpha = 1

				arg_318_1.dialog_:SetActive(true)
				SetActive(arg_318_1.leftNameGo_, true)

				local var_321_25 = arg_318_1:FormatText(StoryNameCfg[1109].name)

				arg_318_1.leftNameTxt_.text = var_321_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_318_1.leftNameTxt_.transform)

				arg_318_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_318_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_318_1:RecordName(arg_318_1.leftNameTxt_.text)
				SetActive(arg_318_1.iconTrs_.gameObject, false)
				arg_318_1.callingController_:SetSelectedState("normal")

				local var_321_26 = arg_318_1:GetWordFromCfg(417012075)
				local var_321_27 = arg_318_1:FormatText(var_321_26.content)

				arg_318_1.text_.text = var_321_27

				LuaForUtil.ClearLinePrefixSymbol(arg_318_1.text_)

				local var_321_28 = 29
				local var_321_29 = utf8.len(var_321_27)
				local var_321_30 = var_321_28 <= 0 and var_321_24 or var_321_24 * (var_321_29 / var_321_28)

				if var_321_30 > 0 and var_321_24 < var_321_30 then
					arg_318_1.talkMaxDuration = var_321_30

					if var_321_30 + var_321_23 > arg_318_1.duration_ then
						arg_318_1.duration_ = var_321_30 + var_321_23
					end
				end

				arg_318_1.text_.text = var_321_27
				arg_318_1.typewritter.percent = 0

				arg_318_1.typewritter:SetDirty()
				arg_318_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012075", "story_v_out_417012.awb") ~= 0 then
					local var_321_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012075", "story_v_out_417012.awb") / 1000

					if var_321_31 + var_321_23 > arg_318_1.duration_ then
						arg_318_1.duration_ = var_321_31 + var_321_23
					end

					if var_321_26.prefab_name ~= "" and arg_318_1.actors_[var_321_26.prefab_name] ~= nil then
						local var_321_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_318_1.actors_[var_321_26.prefab_name].transform, "story_v_out_417012", "417012075", "story_v_out_417012.awb")

						arg_318_1:RecordAudio("417012075", var_321_32)
						arg_318_1:RecordAudio("417012075", var_321_32)
					else
						arg_318_1:AudioAction("play", "voice", "story_v_out_417012", "417012075", "story_v_out_417012.awb")
					end

					arg_318_1:RecordHistoryTalkVoice("story_v_out_417012", "417012075", "story_v_out_417012.awb")
				end

				arg_318_1:RecordContent(arg_318_1.text_.text)
			end

			local var_321_33 = math.max(var_321_24, arg_318_1.talkMaxDuration)

			if var_321_23 <= arg_318_1.time_ and arg_318_1.time_ < var_321_23 + var_321_33 then
				arg_318_1.typewritter.percent = (arg_318_1.time_ - var_321_23) / var_321_33

				arg_318_1.typewritter:SetDirty()
			end

			if arg_318_1.time_ >= var_321_23 + var_321_33 and arg_318_1.time_ < var_321_23 + var_321_33 + arg_321_0 then
				arg_318_1.typewritter.percent = 1

				arg_318_1.typewritter:SetDirty()
				arg_318_1:ShowNextGo(true)
			end
		end
	end,
	Play417012076 = function(arg_322_0, arg_322_1)
		arg_322_1.time_ = 0
		arg_322_1.frameCnt_ = 0
		arg_322_1.state_ = "playing"
		arg_322_1.curTalkId_ = 417012076
		arg_322_1.duration_ = 8.77

		local var_322_0 = {
			zh = 8,
			ja = 8.766
		}
		local var_322_1 = manager.audio:GetLocalizationFlag()

		if var_322_0[var_322_1] ~= nil then
			arg_322_1.duration_ = var_322_0[var_322_1]
		end

		SetActive(arg_322_1.tipsGo_, false)

		function arg_322_1.onSingleLineFinish_()
			arg_322_1.onSingleLineUpdate_ = nil
			arg_322_1.onSingleLineFinish_ = nil
			arg_322_1.state_ = "waiting"
		end

		function arg_322_1.playNext_(arg_324_0)
			if arg_324_0 == 1 then
				arg_322_0:Play417012077(arg_322_1)
			end
		end

		function arg_322_1.onSingleLineUpdate_(arg_325_0)
			local var_325_0 = arg_322_1.actors_["10110"]
			local var_325_1 = 0

			if var_325_1 < arg_322_1.time_ and arg_322_1.time_ <= var_325_1 + arg_325_0 and not isNil(var_325_0) and arg_322_1.var_.actorSpriteComps10110 == nil then
				arg_322_1.var_.actorSpriteComps10110 = var_325_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_325_2 = 0.2

			if var_325_1 <= arg_322_1.time_ and arg_322_1.time_ < var_325_1 + var_325_2 and not isNil(var_325_0) then
				local var_325_3 = (arg_322_1.time_ - var_325_1) / var_325_2

				if arg_322_1.var_.actorSpriteComps10110 then
					for iter_325_0, iter_325_1 in pairs(arg_322_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_325_1 then
							if arg_322_1.isInRecall_ then
								local var_325_4 = Mathf.Lerp(iter_325_1.color.r, arg_322_1.hightColor1.r, var_325_3)
								local var_325_5 = Mathf.Lerp(iter_325_1.color.g, arg_322_1.hightColor1.g, var_325_3)
								local var_325_6 = Mathf.Lerp(iter_325_1.color.b, arg_322_1.hightColor1.b, var_325_3)

								iter_325_1.color = Color.New(var_325_4, var_325_5, var_325_6)
							else
								local var_325_7 = Mathf.Lerp(iter_325_1.color.r, 1, var_325_3)

								iter_325_1.color = Color.New(var_325_7, var_325_7, var_325_7)
							end
						end
					end
				end
			end

			if arg_322_1.time_ >= var_325_1 + var_325_2 and arg_322_1.time_ < var_325_1 + var_325_2 + arg_325_0 and not isNil(var_325_0) and arg_322_1.var_.actorSpriteComps10110 then
				for iter_325_2, iter_325_3 in pairs(arg_322_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_325_3 then
						if arg_322_1.isInRecall_ then
							iter_325_3.color = arg_322_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_325_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_322_1.var_.actorSpriteComps10110 = nil
			end

			local var_325_8 = arg_322_1.actors_["1034"]
			local var_325_9 = 0

			if var_325_9 < arg_322_1.time_ and arg_322_1.time_ <= var_325_9 + arg_325_0 and not isNil(var_325_8) and arg_322_1.var_.actorSpriteComps1034 == nil then
				arg_322_1.var_.actorSpriteComps1034 = var_325_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_325_10 = 0.2

			if var_325_9 <= arg_322_1.time_ and arg_322_1.time_ < var_325_9 + var_325_10 and not isNil(var_325_8) then
				local var_325_11 = (arg_322_1.time_ - var_325_9) / var_325_10

				if arg_322_1.var_.actorSpriteComps1034 then
					for iter_325_4, iter_325_5 in pairs(arg_322_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_325_5 then
							if arg_322_1.isInRecall_ then
								local var_325_12 = Mathf.Lerp(iter_325_5.color.r, arg_322_1.hightColor2.r, var_325_11)
								local var_325_13 = Mathf.Lerp(iter_325_5.color.g, arg_322_1.hightColor2.g, var_325_11)
								local var_325_14 = Mathf.Lerp(iter_325_5.color.b, arg_322_1.hightColor2.b, var_325_11)

								iter_325_5.color = Color.New(var_325_12, var_325_13, var_325_14)
							else
								local var_325_15 = Mathf.Lerp(iter_325_5.color.r, 0.5, var_325_11)

								iter_325_5.color = Color.New(var_325_15, var_325_15, var_325_15)
							end
						end
					end
				end
			end

			if arg_322_1.time_ >= var_325_9 + var_325_10 and arg_322_1.time_ < var_325_9 + var_325_10 + arg_325_0 and not isNil(var_325_8) and arg_322_1.var_.actorSpriteComps1034 then
				for iter_325_6, iter_325_7 in pairs(arg_322_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_325_7 then
						if arg_322_1.isInRecall_ then
							iter_325_7.color = arg_322_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_325_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_322_1.var_.actorSpriteComps1034 = nil
			end

			local var_325_16 = arg_322_1.actors_["10110"].transform
			local var_325_17 = 0

			if var_325_17 < arg_322_1.time_ and arg_322_1.time_ <= var_325_17 + arg_325_0 then
				arg_322_1.var_.moveOldPos10110 = var_325_16.localPosition
				var_325_16.localScale = Vector3.New(1, 1, 1)

				arg_322_1:CheckSpriteTmpPos("10110", 4)

				local var_325_18 = var_325_16.childCount

				for iter_325_8 = 0, var_325_18 - 1 do
					local var_325_19 = var_325_16:GetChild(iter_325_8)

					if var_325_19.name == "split_1" or not string.find(var_325_19.name, "split") then
						var_325_19.gameObject:SetActive(true)
					else
						var_325_19.gameObject:SetActive(false)
					end
				end
			end

			local var_325_20 = 0.001

			if var_325_17 <= arg_322_1.time_ and arg_322_1.time_ < var_325_17 + var_325_20 then
				local var_325_21 = (arg_322_1.time_ - var_325_17) / var_325_20
				local var_325_22 = Vector3.New(390, -425.7, -223.7)

				var_325_16.localPosition = Vector3.Lerp(arg_322_1.var_.moveOldPos10110, var_325_22, var_325_21)
			end

			if arg_322_1.time_ >= var_325_17 + var_325_20 and arg_322_1.time_ < var_325_17 + var_325_20 + arg_325_0 then
				var_325_16.localPosition = Vector3.New(390, -425.7, -223.7)
			end

			local var_325_23 = 0
			local var_325_24 = 1

			if var_325_23 < arg_322_1.time_ and arg_322_1.time_ <= var_325_23 + arg_325_0 then
				arg_322_1.talkMaxDuration = 0
				arg_322_1.dialogCg_.alpha = 1

				arg_322_1.dialog_:SetActive(true)
				SetActive(arg_322_1.leftNameGo_, true)

				local var_325_25 = arg_322_1:FormatText(StoryNameCfg[699].name)

				arg_322_1.leftNameTxt_.text = var_325_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_322_1.leftNameTxt_.transform)

				arg_322_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_322_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_322_1:RecordName(arg_322_1.leftNameTxt_.text)
				SetActive(arg_322_1.iconTrs_.gameObject, false)
				arg_322_1.callingController_:SetSelectedState("normal")

				local var_325_26 = arg_322_1:GetWordFromCfg(417012076)
				local var_325_27 = arg_322_1:FormatText(var_325_26.content)

				arg_322_1.text_.text = var_325_27

				LuaForUtil.ClearLinePrefixSymbol(arg_322_1.text_)

				local var_325_28 = 40
				local var_325_29 = utf8.len(var_325_27)
				local var_325_30 = var_325_28 <= 0 and var_325_24 or var_325_24 * (var_325_29 / var_325_28)

				if var_325_30 > 0 and var_325_24 < var_325_30 then
					arg_322_1.talkMaxDuration = var_325_30

					if var_325_30 + var_325_23 > arg_322_1.duration_ then
						arg_322_1.duration_ = var_325_30 + var_325_23
					end
				end

				arg_322_1.text_.text = var_325_27
				arg_322_1.typewritter.percent = 0

				arg_322_1.typewritter:SetDirty()
				arg_322_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012076", "story_v_out_417012.awb") ~= 0 then
					local var_325_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012076", "story_v_out_417012.awb") / 1000

					if var_325_31 + var_325_23 > arg_322_1.duration_ then
						arg_322_1.duration_ = var_325_31 + var_325_23
					end

					if var_325_26.prefab_name ~= "" and arg_322_1.actors_[var_325_26.prefab_name] ~= nil then
						local var_325_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_322_1.actors_[var_325_26.prefab_name].transform, "story_v_out_417012", "417012076", "story_v_out_417012.awb")

						arg_322_1:RecordAudio("417012076", var_325_32)
						arg_322_1:RecordAudio("417012076", var_325_32)
					else
						arg_322_1:AudioAction("play", "voice", "story_v_out_417012", "417012076", "story_v_out_417012.awb")
					end

					arg_322_1:RecordHistoryTalkVoice("story_v_out_417012", "417012076", "story_v_out_417012.awb")
				end

				arg_322_1:RecordContent(arg_322_1.text_.text)
			end

			local var_325_33 = math.max(var_325_24, arg_322_1.talkMaxDuration)

			if var_325_23 <= arg_322_1.time_ and arg_322_1.time_ < var_325_23 + var_325_33 then
				arg_322_1.typewritter.percent = (arg_322_1.time_ - var_325_23) / var_325_33

				arg_322_1.typewritter:SetDirty()
			end

			if arg_322_1.time_ >= var_325_23 + var_325_33 and arg_322_1.time_ < var_325_23 + var_325_33 + arg_325_0 then
				arg_322_1.typewritter.percent = 1

				arg_322_1.typewritter:SetDirty()
				arg_322_1:ShowNextGo(true)
			end
		end
	end,
	Play417012077 = function(arg_326_0, arg_326_1)
		arg_326_1.time_ = 0
		arg_326_1.frameCnt_ = 0
		arg_326_1.state_ = "playing"
		arg_326_1.curTalkId_ = 417012077
		arg_326_1.duration_ = 11.8

		local var_326_0 = {
			zh = 7.466,
			ja = 11.8
		}
		local var_326_1 = manager.audio:GetLocalizationFlag()

		if var_326_0[var_326_1] ~= nil then
			arg_326_1.duration_ = var_326_0[var_326_1]
		end

		SetActive(arg_326_1.tipsGo_, false)

		function arg_326_1.onSingleLineFinish_()
			arg_326_1.onSingleLineUpdate_ = nil
			arg_326_1.onSingleLineFinish_ = nil
			arg_326_1.state_ = "waiting"
		end

		function arg_326_1.playNext_(arg_328_0)
			if arg_328_0 == 1 then
				arg_326_0:Play417012078(arg_326_1)
			end
		end

		function arg_326_1.onSingleLineUpdate_(arg_329_0)
			local var_329_0 = arg_326_1.actors_["10110"].transform
			local var_329_1 = 0

			if var_329_1 < arg_326_1.time_ and arg_326_1.time_ <= var_329_1 + arg_329_0 then
				arg_326_1.var_.moveOldPos10110 = var_329_0.localPosition
				var_329_0.localScale = Vector3.New(1, 1, 1)

				arg_326_1:CheckSpriteTmpPos("10110", 4)

				local var_329_2 = var_329_0.childCount

				for iter_329_0 = 0, var_329_2 - 1 do
					local var_329_3 = var_329_0:GetChild(iter_329_0)

					if var_329_3.name == "split_4" or not string.find(var_329_3.name, "split") then
						var_329_3.gameObject:SetActive(true)
					else
						var_329_3.gameObject:SetActive(false)
					end
				end
			end

			local var_329_4 = 0.001

			if var_329_1 <= arg_326_1.time_ and arg_326_1.time_ < var_329_1 + var_329_4 then
				local var_329_5 = (arg_326_1.time_ - var_329_1) / var_329_4
				local var_329_6 = Vector3.New(390, -425.7, -223.7)

				var_329_0.localPosition = Vector3.Lerp(arg_326_1.var_.moveOldPos10110, var_329_6, var_329_5)
			end

			if arg_326_1.time_ >= var_329_1 + var_329_4 and arg_326_1.time_ < var_329_1 + var_329_4 + arg_329_0 then
				var_329_0.localPosition = Vector3.New(390, -425.7, -223.7)
			end

			local var_329_7 = 0
			local var_329_8 = 1

			if var_329_7 < arg_326_1.time_ and arg_326_1.time_ <= var_329_7 + arg_329_0 then
				local var_329_9 = "play"
				local var_329_10 = "effect"

				arg_326_1:AudioAction(var_329_9, var_329_10, "se_story_1310", "se_story_1310_car01", "")
			end

			local var_329_11 = 0
			local var_329_12 = 0.7

			if var_329_11 < arg_326_1.time_ and arg_326_1.time_ <= var_329_11 + arg_329_0 then
				arg_326_1.talkMaxDuration = 0
				arg_326_1.dialogCg_.alpha = 1

				arg_326_1.dialog_:SetActive(true)
				SetActive(arg_326_1.leftNameGo_, true)

				local var_329_13 = arg_326_1:FormatText(StoryNameCfg[699].name)

				arg_326_1.leftNameTxt_.text = var_329_13

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_326_1.leftNameTxt_.transform)

				arg_326_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_326_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_326_1:RecordName(arg_326_1.leftNameTxt_.text)
				SetActive(arg_326_1.iconTrs_.gameObject, false)
				arg_326_1.callingController_:SetSelectedState("normal")

				local var_329_14 = arg_326_1:GetWordFromCfg(417012077)
				local var_329_15 = arg_326_1:FormatText(var_329_14.content)

				arg_326_1.text_.text = var_329_15

				LuaForUtil.ClearLinePrefixSymbol(arg_326_1.text_)

				local var_329_16 = 28
				local var_329_17 = utf8.len(var_329_15)
				local var_329_18 = var_329_16 <= 0 and var_329_12 or var_329_12 * (var_329_17 / var_329_16)

				if var_329_18 > 0 and var_329_12 < var_329_18 then
					arg_326_1.talkMaxDuration = var_329_18

					if var_329_18 + var_329_11 > arg_326_1.duration_ then
						arg_326_1.duration_ = var_329_18 + var_329_11
					end
				end

				arg_326_1.text_.text = var_329_15
				arg_326_1.typewritter.percent = 0

				arg_326_1.typewritter:SetDirty()
				arg_326_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012077", "story_v_out_417012.awb") ~= 0 then
					local var_329_19 = manager.audio:GetVoiceLength("story_v_out_417012", "417012077", "story_v_out_417012.awb") / 1000

					if var_329_19 + var_329_11 > arg_326_1.duration_ then
						arg_326_1.duration_ = var_329_19 + var_329_11
					end

					if var_329_14.prefab_name ~= "" and arg_326_1.actors_[var_329_14.prefab_name] ~= nil then
						local var_329_20 = LuaForUtil.PlayVoiceWithCriLipsync(arg_326_1.actors_[var_329_14.prefab_name].transform, "story_v_out_417012", "417012077", "story_v_out_417012.awb")

						arg_326_1:RecordAudio("417012077", var_329_20)
						arg_326_1:RecordAudio("417012077", var_329_20)
					else
						arg_326_1:AudioAction("play", "voice", "story_v_out_417012", "417012077", "story_v_out_417012.awb")
					end

					arg_326_1:RecordHistoryTalkVoice("story_v_out_417012", "417012077", "story_v_out_417012.awb")
				end

				arg_326_1:RecordContent(arg_326_1.text_.text)
			end

			local var_329_21 = math.max(var_329_12, arg_326_1.talkMaxDuration)

			if var_329_11 <= arg_326_1.time_ and arg_326_1.time_ < var_329_11 + var_329_21 then
				arg_326_1.typewritter.percent = (arg_326_1.time_ - var_329_11) / var_329_21

				arg_326_1.typewritter:SetDirty()
			end

			if arg_326_1.time_ >= var_329_11 + var_329_21 and arg_326_1.time_ < var_329_11 + var_329_21 + arg_329_0 then
				arg_326_1.typewritter.percent = 1

				arg_326_1.typewritter:SetDirty()
				arg_326_1:ShowNextGo(true)
			end
		end
	end,
	Play417012078 = function(arg_330_0, arg_330_1)
		arg_330_1.time_ = 0
		arg_330_1.frameCnt_ = 0
		arg_330_1.state_ = "playing"
		arg_330_1.curTalkId_ = 417012078
		arg_330_1.duration_ = 5

		SetActive(arg_330_1.tipsGo_, false)

		function arg_330_1.onSingleLineFinish_()
			arg_330_1.onSingleLineUpdate_ = nil
			arg_330_1.onSingleLineFinish_ = nil
			arg_330_1.state_ = "waiting"
		end

		function arg_330_1.playNext_(arg_332_0)
			if arg_332_0 == 1 then
				arg_330_0:Play417012079(arg_330_1)
			end
		end

		function arg_330_1.onSingleLineUpdate_(arg_333_0)
			local var_333_0 = arg_330_1.actors_["10110"]
			local var_333_1 = 0

			if var_333_1 < arg_330_1.time_ and arg_330_1.time_ <= var_333_1 + arg_333_0 and not isNil(var_333_0) and arg_330_1.var_.actorSpriteComps10110 == nil then
				arg_330_1.var_.actorSpriteComps10110 = var_333_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_333_2 = 0.2

			if var_333_1 <= arg_330_1.time_ and arg_330_1.time_ < var_333_1 + var_333_2 and not isNil(var_333_0) then
				local var_333_3 = (arg_330_1.time_ - var_333_1) / var_333_2

				if arg_330_1.var_.actorSpriteComps10110 then
					for iter_333_0, iter_333_1 in pairs(arg_330_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_333_1 then
							if arg_330_1.isInRecall_ then
								local var_333_4 = Mathf.Lerp(iter_333_1.color.r, arg_330_1.hightColor2.r, var_333_3)
								local var_333_5 = Mathf.Lerp(iter_333_1.color.g, arg_330_1.hightColor2.g, var_333_3)
								local var_333_6 = Mathf.Lerp(iter_333_1.color.b, arg_330_1.hightColor2.b, var_333_3)

								iter_333_1.color = Color.New(var_333_4, var_333_5, var_333_6)
							else
								local var_333_7 = Mathf.Lerp(iter_333_1.color.r, 0.5, var_333_3)

								iter_333_1.color = Color.New(var_333_7, var_333_7, var_333_7)
							end
						end
					end
				end
			end

			if arg_330_1.time_ >= var_333_1 + var_333_2 and arg_330_1.time_ < var_333_1 + var_333_2 + arg_333_0 and not isNil(var_333_0) and arg_330_1.var_.actorSpriteComps10110 then
				for iter_333_2, iter_333_3 in pairs(arg_330_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_333_3 then
						if arg_330_1.isInRecall_ then
							iter_333_3.color = arg_330_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_333_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_330_1.var_.actorSpriteComps10110 = nil
			end

			local var_333_8 = arg_330_1.actors_["10110"].transform
			local var_333_9 = 0

			if var_333_9 < arg_330_1.time_ and arg_330_1.time_ <= var_333_9 + arg_333_0 then
				arg_330_1.var_.moveOldPos10110 = var_333_8.localPosition
				var_333_8.localScale = Vector3.New(1, 1, 1)

				arg_330_1:CheckSpriteTmpPos("10110", 7)

				local var_333_10 = var_333_8.childCount

				for iter_333_4 = 0, var_333_10 - 1 do
					local var_333_11 = var_333_8:GetChild(iter_333_4)

					if var_333_11.name == "" or not string.find(var_333_11.name, "split") then
						var_333_11.gameObject:SetActive(true)
					else
						var_333_11.gameObject:SetActive(false)
					end
				end
			end

			local var_333_12 = 0.001

			if var_333_9 <= arg_330_1.time_ and arg_330_1.time_ < var_333_9 + var_333_12 then
				local var_333_13 = (arg_330_1.time_ - var_333_9) / var_333_12
				local var_333_14 = Vector3.New(0, -2000, -200)

				var_333_8.localPosition = Vector3.Lerp(arg_330_1.var_.moveOldPos10110, var_333_14, var_333_13)
			end

			if arg_330_1.time_ >= var_333_9 + var_333_12 and arg_330_1.time_ < var_333_9 + var_333_12 + arg_333_0 then
				var_333_8.localPosition = Vector3.New(0, -2000, -200)
			end

			local var_333_15 = arg_330_1.actors_["1034"].transform
			local var_333_16 = 0

			if var_333_16 < arg_330_1.time_ and arg_330_1.time_ <= var_333_16 + arg_333_0 then
				arg_330_1.var_.moveOldPos1034 = var_333_15.localPosition
				var_333_15.localScale = Vector3.New(1, 1, 1)

				arg_330_1:CheckSpriteTmpPos("1034", 7)

				local var_333_17 = var_333_15.childCount

				for iter_333_5 = 0, var_333_17 - 1 do
					local var_333_18 = var_333_15:GetChild(iter_333_5)

					if var_333_18.name == "" or not string.find(var_333_18.name, "split") then
						var_333_18.gameObject:SetActive(true)
					else
						var_333_18.gameObject:SetActive(false)
					end
				end
			end

			local var_333_19 = 0.001

			if var_333_16 <= arg_330_1.time_ and arg_330_1.time_ < var_333_16 + var_333_19 then
				local var_333_20 = (arg_330_1.time_ - var_333_16) / var_333_19
				local var_333_21 = Vector3.New(0, -2000, 0)

				var_333_15.localPosition = Vector3.Lerp(arg_330_1.var_.moveOldPos1034, var_333_21, var_333_20)
			end

			if arg_330_1.time_ >= var_333_16 + var_333_19 and arg_330_1.time_ < var_333_16 + var_333_19 + arg_333_0 then
				var_333_15.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_333_22 = 0.2
			local var_333_23 = 1

			if var_333_22 < arg_330_1.time_ and arg_330_1.time_ <= var_333_22 + arg_333_0 then
				local var_333_24 = "play"
				local var_333_25 = "effect"

				arg_330_1:AudioAction(var_333_24, var_333_25, "se_story_1310", "se_story_1310_cardoor01", "")
			end

			local var_333_26 = 0
			local var_333_27 = 1.125

			if var_333_26 < arg_330_1.time_ and arg_330_1.time_ <= var_333_26 + arg_333_0 then
				arg_330_1.talkMaxDuration = 0
				arg_330_1.dialogCg_.alpha = 1

				arg_330_1.dialog_:SetActive(true)
				SetActive(arg_330_1.leftNameGo_, false)

				arg_330_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_330_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_330_1:RecordName(arg_330_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_330_1.iconTrs_.gameObject, false)
				arg_330_1.callingController_:SetSelectedState("normal")

				local var_333_28 = arg_330_1:GetWordFromCfg(417012078)
				local var_333_29 = arg_330_1:FormatText(var_333_28.content)

				arg_330_1.text_.text = var_333_29

				LuaForUtil.ClearLinePrefixSymbol(arg_330_1.text_)

				local var_333_30 = 45
				local var_333_31 = utf8.len(var_333_29)
				local var_333_32 = var_333_30 <= 0 and var_333_27 or var_333_27 * (var_333_31 / var_333_30)

				if var_333_32 > 0 and var_333_27 < var_333_32 then
					arg_330_1.talkMaxDuration = var_333_32

					if var_333_32 + var_333_26 > arg_330_1.duration_ then
						arg_330_1.duration_ = var_333_32 + var_333_26
					end
				end

				arg_330_1.text_.text = var_333_29
				arg_330_1.typewritter.percent = 0

				arg_330_1.typewritter:SetDirty()
				arg_330_1:ShowNextGo(false)
				arg_330_1:RecordContent(arg_330_1.text_.text)
			end

			local var_333_33 = math.max(var_333_27, arg_330_1.talkMaxDuration)

			if var_333_26 <= arg_330_1.time_ and arg_330_1.time_ < var_333_26 + var_333_33 then
				arg_330_1.typewritter.percent = (arg_330_1.time_ - var_333_26) / var_333_33

				arg_330_1.typewritter:SetDirty()
			end

			if arg_330_1.time_ >= var_333_26 + var_333_33 and arg_330_1.time_ < var_333_26 + var_333_33 + arg_333_0 then
				arg_330_1.typewritter.percent = 1

				arg_330_1.typewritter:SetDirty()
				arg_330_1:ShowNextGo(true)
			end
		end
	end,
	Play417012079 = function(arg_334_0, arg_334_1)
		arg_334_1.time_ = 0
		arg_334_1.frameCnt_ = 0
		arg_334_1.state_ = "playing"
		arg_334_1.curTalkId_ = 417012079
		arg_334_1.duration_ = 5.77

		local var_334_0 = {
			zh = 2.733,
			ja = 5.766
		}
		local var_334_1 = manager.audio:GetLocalizationFlag()

		if var_334_0[var_334_1] ~= nil then
			arg_334_1.duration_ = var_334_0[var_334_1]
		end

		SetActive(arg_334_1.tipsGo_, false)

		function arg_334_1.onSingleLineFinish_()
			arg_334_1.onSingleLineUpdate_ = nil
			arg_334_1.onSingleLineFinish_ = nil
			arg_334_1.state_ = "waiting"
		end

		function arg_334_1.playNext_(arg_336_0)
			if arg_336_0 == 1 then
				arg_334_0:Play417012080(arg_334_1)
			end
		end

		function arg_334_1.onSingleLineUpdate_(arg_337_0)
			local var_337_0 = arg_334_1.actors_["10110"]
			local var_337_1 = 0

			if var_337_1 < arg_334_1.time_ and arg_334_1.time_ <= var_337_1 + arg_337_0 and not isNil(var_337_0) and arg_334_1.var_.actorSpriteComps10110 == nil then
				arg_334_1.var_.actorSpriteComps10110 = var_337_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_337_2 = 0.2

			if var_337_1 <= arg_334_1.time_ and arg_334_1.time_ < var_337_1 + var_337_2 and not isNil(var_337_0) then
				local var_337_3 = (arg_334_1.time_ - var_337_1) / var_337_2

				if arg_334_1.var_.actorSpriteComps10110 then
					for iter_337_0, iter_337_1 in pairs(arg_334_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_337_1 then
							if arg_334_1.isInRecall_ then
								local var_337_4 = Mathf.Lerp(iter_337_1.color.r, arg_334_1.hightColor1.r, var_337_3)
								local var_337_5 = Mathf.Lerp(iter_337_1.color.g, arg_334_1.hightColor1.g, var_337_3)
								local var_337_6 = Mathf.Lerp(iter_337_1.color.b, arg_334_1.hightColor1.b, var_337_3)

								iter_337_1.color = Color.New(var_337_4, var_337_5, var_337_6)
							else
								local var_337_7 = Mathf.Lerp(iter_337_1.color.r, 1, var_337_3)

								iter_337_1.color = Color.New(var_337_7, var_337_7, var_337_7)
							end
						end
					end
				end
			end

			if arg_334_1.time_ >= var_337_1 + var_337_2 and arg_334_1.time_ < var_337_1 + var_337_2 + arg_337_0 and not isNil(var_337_0) and arg_334_1.var_.actorSpriteComps10110 then
				for iter_337_2, iter_337_3 in pairs(arg_334_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_337_3 then
						if arg_334_1.isInRecall_ then
							iter_337_3.color = arg_334_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_337_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_334_1.var_.actorSpriteComps10110 = nil
			end

			local var_337_8 = 0
			local var_337_9 = 0.275

			if var_337_8 < arg_334_1.time_ and arg_334_1.time_ <= var_337_8 + arg_337_0 then
				arg_334_1.talkMaxDuration = 0
				arg_334_1.dialogCg_.alpha = 1

				arg_334_1.dialog_:SetActive(true)
				SetActive(arg_334_1.leftNameGo_, true)

				local var_337_10 = arg_334_1:FormatText(StoryNameCfg[699].name)

				arg_334_1.leftNameTxt_.text = var_337_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_334_1.leftNameTxt_.transform)

				arg_334_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_334_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_334_1:RecordName(arg_334_1.leftNameTxt_.text)
				SetActive(arg_334_1.iconTrs_.gameObject, true)
				arg_334_1.iconController_:SetSelectedState("hero")

				arg_334_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10110_split_1")

				arg_334_1.callingController_:SetSelectedState("normal")

				arg_334_1.keyicon_.color = Color.New(1, 1, 1)
				arg_334_1.icon_.color = Color.New(1, 1, 1)

				local var_337_11 = arg_334_1:GetWordFromCfg(417012079)
				local var_337_12 = arg_334_1:FormatText(var_337_11.content)

				arg_334_1.text_.text = var_337_12

				LuaForUtil.ClearLinePrefixSymbol(arg_334_1.text_)

				local var_337_13 = 11
				local var_337_14 = utf8.len(var_337_12)
				local var_337_15 = var_337_13 <= 0 and var_337_9 or var_337_9 * (var_337_14 / var_337_13)

				if var_337_15 > 0 and var_337_9 < var_337_15 then
					arg_334_1.talkMaxDuration = var_337_15

					if var_337_15 + var_337_8 > arg_334_1.duration_ then
						arg_334_1.duration_ = var_337_15 + var_337_8
					end
				end

				arg_334_1.text_.text = var_337_12
				arg_334_1.typewritter.percent = 0

				arg_334_1.typewritter:SetDirty()
				arg_334_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012079", "story_v_out_417012.awb") ~= 0 then
					local var_337_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012079", "story_v_out_417012.awb") / 1000

					if var_337_16 + var_337_8 > arg_334_1.duration_ then
						arg_334_1.duration_ = var_337_16 + var_337_8
					end

					if var_337_11.prefab_name ~= "" and arg_334_1.actors_[var_337_11.prefab_name] ~= nil then
						local var_337_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_334_1.actors_[var_337_11.prefab_name].transform, "story_v_out_417012", "417012079", "story_v_out_417012.awb")

						arg_334_1:RecordAudio("417012079", var_337_17)
						arg_334_1:RecordAudio("417012079", var_337_17)
					else
						arg_334_1:AudioAction("play", "voice", "story_v_out_417012", "417012079", "story_v_out_417012.awb")
					end

					arg_334_1:RecordHistoryTalkVoice("story_v_out_417012", "417012079", "story_v_out_417012.awb")
				end

				arg_334_1:RecordContent(arg_334_1.text_.text)
			end

			local var_337_18 = math.max(var_337_9, arg_334_1.talkMaxDuration)

			if var_337_8 <= arg_334_1.time_ and arg_334_1.time_ < var_337_8 + var_337_18 then
				arg_334_1.typewritter.percent = (arg_334_1.time_ - var_337_8) / var_337_18

				arg_334_1.typewritter:SetDirty()
			end

			if arg_334_1.time_ >= var_337_8 + var_337_18 and arg_334_1.time_ < var_337_8 + var_337_18 + arg_337_0 then
				arg_334_1.typewritter.percent = 1

				arg_334_1.typewritter:SetDirty()
				arg_334_1:ShowNextGo(true)
			end
		end
	end,
	Play417012080 = function(arg_338_0, arg_338_1)
		arg_338_1.time_ = 0
		arg_338_1.frameCnt_ = 0
		arg_338_1.state_ = "playing"
		arg_338_1.curTalkId_ = 417012080
		arg_338_1.duration_ = 3.5

		local var_338_0 = {
			zh = 0.999999999999,
			ja = 3.5
		}
		local var_338_1 = manager.audio:GetLocalizationFlag()

		if var_338_0[var_338_1] ~= nil then
			arg_338_1.duration_ = var_338_0[var_338_1]
		end

		SetActive(arg_338_1.tipsGo_, false)

		function arg_338_1.onSingleLineFinish_()
			arg_338_1.onSingleLineUpdate_ = nil
			arg_338_1.onSingleLineFinish_ = nil
			arg_338_1.state_ = "waiting"
		end

		function arg_338_1.playNext_(arg_340_0)
			if arg_340_0 == 1 then
				arg_338_0:Play417012081(arg_338_1)
			end
		end

		function arg_338_1.onSingleLineUpdate_(arg_341_0)
			local var_341_0 = arg_338_1.actors_["1034"]
			local var_341_1 = 0

			if var_341_1 < arg_338_1.time_ and arg_338_1.time_ <= var_341_1 + arg_341_0 and not isNil(var_341_0) and arg_338_1.var_.actorSpriteComps1034 == nil then
				arg_338_1.var_.actorSpriteComps1034 = var_341_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_341_2 = 0.2

			if var_341_1 <= arg_338_1.time_ and arg_338_1.time_ < var_341_1 + var_341_2 and not isNil(var_341_0) then
				local var_341_3 = (arg_338_1.time_ - var_341_1) / var_341_2

				if arg_338_1.var_.actorSpriteComps1034 then
					for iter_341_0, iter_341_1 in pairs(arg_338_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_341_1 then
							if arg_338_1.isInRecall_ then
								local var_341_4 = Mathf.Lerp(iter_341_1.color.r, arg_338_1.hightColor1.r, var_341_3)
								local var_341_5 = Mathf.Lerp(iter_341_1.color.g, arg_338_1.hightColor1.g, var_341_3)
								local var_341_6 = Mathf.Lerp(iter_341_1.color.b, arg_338_1.hightColor1.b, var_341_3)

								iter_341_1.color = Color.New(var_341_4, var_341_5, var_341_6)
							else
								local var_341_7 = Mathf.Lerp(iter_341_1.color.r, 1, var_341_3)

								iter_341_1.color = Color.New(var_341_7, var_341_7, var_341_7)
							end
						end
					end
				end
			end

			if arg_338_1.time_ >= var_341_1 + var_341_2 and arg_338_1.time_ < var_341_1 + var_341_2 + arg_341_0 and not isNil(var_341_0) and arg_338_1.var_.actorSpriteComps1034 then
				for iter_341_2, iter_341_3 in pairs(arg_338_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_341_3 then
						if arg_338_1.isInRecall_ then
							iter_341_3.color = arg_338_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_341_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_338_1.var_.actorSpriteComps1034 = nil
			end

			local var_341_8 = arg_338_1.actors_["10110"]
			local var_341_9 = 0

			if var_341_9 < arg_338_1.time_ and arg_338_1.time_ <= var_341_9 + arg_341_0 and not isNil(var_341_8) and arg_338_1.var_.actorSpriteComps10110 == nil then
				arg_338_1.var_.actorSpriteComps10110 = var_341_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_341_10 = 0.2

			if var_341_9 <= arg_338_1.time_ and arg_338_1.time_ < var_341_9 + var_341_10 and not isNil(var_341_8) then
				local var_341_11 = (arg_338_1.time_ - var_341_9) / var_341_10

				if arg_338_1.var_.actorSpriteComps10110 then
					for iter_341_4, iter_341_5 in pairs(arg_338_1.var_.actorSpriteComps10110:ToTable()) do
						if iter_341_5 then
							if arg_338_1.isInRecall_ then
								local var_341_12 = Mathf.Lerp(iter_341_5.color.r, arg_338_1.hightColor2.r, var_341_11)
								local var_341_13 = Mathf.Lerp(iter_341_5.color.g, arg_338_1.hightColor2.g, var_341_11)
								local var_341_14 = Mathf.Lerp(iter_341_5.color.b, arg_338_1.hightColor2.b, var_341_11)

								iter_341_5.color = Color.New(var_341_12, var_341_13, var_341_14)
							else
								local var_341_15 = Mathf.Lerp(iter_341_5.color.r, 0.5, var_341_11)

								iter_341_5.color = Color.New(var_341_15, var_341_15, var_341_15)
							end
						end
					end
				end
			end

			if arg_338_1.time_ >= var_341_9 + var_341_10 and arg_338_1.time_ < var_341_9 + var_341_10 + arg_341_0 and not isNil(var_341_8) and arg_338_1.var_.actorSpriteComps10110 then
				for iter_341_6, iter_341_7 in pairs(arg_338_1.var_.actorSpriteComps10110:ToTable()) do
					if iter_341_7 then
						if arg_338_1.isInRecall_ then
							iter_341_7.color = arg_338_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_341_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_338_1.var_.actorSpriteComps10110 = nil
			end

			local var_341_16 = 0
			local var_341_17 = 0.075

			if var_341_16 < arg_338_1.time_ and arg_338_1.time_ <= var_341_16 + arg_341_0 then
				arg_338_1.talkMaxDuration = 0
				arg_338_1.dialogCg_.alpha = 1

				arg_338_1.dialog_:SetActive(true)
				SetActive(arg_338_1.leftNameGo_, true)

				local var_341_18 = arg_338_1:FormatText(StoryNameCfg[1109].name)

				arg_338_1.leftNameTxt_.text = var_341_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_338_1.leftNameTxt_.transform)

				arg_338_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_338_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_338_1:RecordName(arg_338_1.leftNameTxt_.text)
				SetActive(arg_338_1.iconTrs_.gameObject, true)
				arg_338_1.iconController_:SetSelectedState("hero")

				arg_338_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_1034_split_1")

				arg_338_1.callingController_:SetSelectedState("normal")

				arg_338_1.keyicon_.color = Color.New(1, 1, 1)
				arg_338_1.icon_.color = Color.New(1, 1, 1)

				local var_341_19 = arg_338_1:GetWordFromCfg(417012080)
				local var_341_20 = arg_338_1:FormatText(var_341_19.content)

				arg_338_1.text_.text = var_341_20

				LuaForUtil.ClearLinePrefixSymbol(arg_338_1.text_)

				local var_341_21 = 3
				local var_341_22 = utf8.len(var_341_20)
				local var_341_23 = var_341_21 <= 0 and var_341_17 or var_341_17 * (var_341_22 / var_341_21)

				if var_341_23 > 0 and var_341_17 < var_341_23 then
					arg_338_1.talkMaxDuration = var_341_23

					if var_341_23 + var_341_16 > arg_338_1.duration_ then
						arg_338_1.duration_ = var_341_23 + var_341_16
					end
				end

				arg_338_1.text_.text = var_341_20
				arg_338_1.typewritter.percent = 0

				arg_338_1.typewritter:SetDirty()
				arg_338_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012080", "story_v_out_417012.awb") ~= 0 then
					local var_341_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012080", "story_v_out_417012.awb") / 1000

					if var_341_24 + var_341_16 > arg_338_1.duration_ then
						arg_338_1.duration_ = var_341_24 + var_341_16
					end

					if var_341_19.prefab_name ~= "" and arg_338_1.actors_[var_341_19.prefab_name] ~= nil then
						local var_341_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_338_1.actors_[var_341_19.prefab_name].transform, "story_v_out_417012", "417012080", "story_v_out_417012.awb")

						arg_338_1:RecordAudio("417012080", var_341_25)
						arg_338_1:RecordAudio("417012080", var_341_25)
					else
						arg_338_1:AudioAction("play", "voice", "story_v_out_417012", "417012080", "story_v_out_417012.awb")
					end

					arg_338_1:RecordHistoryTalkVoice("story_v_out_417012", "417012080", "story_v_out_417012.awb")
				end

				arg_338_1:RecordContent(arg_338_1.text_.text)
			end

			local var_341_26 = math.max(var_341_17, arg_338_1.talkMaxDuration)

			if var_341_16 <= arg_338_1.time_ and arg_338_1.time_ < var_341_16 + var_341_26 then
				arg_338_1.typewritter.percent = (arg_338_1.time_ - var_341_16) / var_341_26

				arg_338_1.typewritter:SetDirty()
			end

			if arg_338_1.time_ >= var_341_16 + var_341_26 and arg_338_1.time_ < var_341_16 + var_341_26 + arg_341_0 then
				arg_338_1.typewritter.percent = 1

				arg_338_1.typewritter:SetDirty()
				arg_338_1:ShowNextGo(true)
			end
		end
	end,
	Play417012081 = function(arg_342_0, arg_342_1)
		arg_342_1.time_ = 0
		arg_342_1.frameCnt_ = 0
		arg_342_1.state_ = "playing"
		arg_342_1.curTalkId_ = 417012081
		arg_342_1.duration_ = 5

		SetActive(arg_342_1.tipsGo_, false)

		function arg_342_1.onSingleLineFinish_()
			arg_342_1.onSingleLineUpdate_ = nil
			arg_342_1.onSingleLineFinish_ = nil
			arg_342_1.state_ = "waiting"
		end

		function arg_342_1.playNext_(arg_344_0)
			if arg_344_0 == 1 then
				arg_342_0:Play417012082(arg_342_1)
			end
		end

		function arg_342_1.onSingleLineUpdate_(arg_345_0)
			local var_345_0 = arg_342_1.actors_["1034"]
			local var_345_1 = 0

			if var_345_1 < arg_342_1.time_ and arg_342_1.time_ <= var_345_1 + arg_345_0 and not isNil(var_345_0) and arg_342_1.var_.actorSpriteComps1034 == nil then
				arg_342_1.var_.actorSpriteComps1034 = var_345_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_345_2 = 0.2

			if var_345_1 <= arg_342_1.time_ and arg_342_1.time_ < var_345_1 + var_345_2 and not isNil(var_345_0) then
				local var_345_3 = (arg_342_1.time_ - var_345_1) / var_345_2

				if arg_342_1.var_.actorSpriteComps1034 then
					for iter_345_0, iter_345_1 in pairs(arg_342_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_345_1 then
							if arg_342_1.isInRecall_ then
								local var_345_4 = Mathf.Lerp(iter_345_1.color.r, arg_342_1.hightColor2.r, var_345_3)
								local var_345_5 = Mathf.Lerp(iter_345_1.color.g, arg_342_1.hightColor2.g, var_345_3)
								local var_345_6 = Mathf.Lerp(iter_345_1.color.b, arg_342_1.hightColor2.b, var_345_3)

								iter_345_1.color = Color.New(var_345_4, var_345_5, var_345_6)
							else
								local var_345_7 = Mathf.Lerp(iter_345_1.color.r, 0.5, var_345_3)

								iter_345_1.color = Color.New(var_345_7, var_345_7, var_345_7)
							end
						end
					end
				end
			end

			if arg_342_1.time_ >= var_345_1 + var_345_2 and arg_342_1.time_ < var_345_1 + var_345_2 + arg_345_0 and not isNil(var_345_0) and arg_342_1.var_.actorSpriteComps1034 then
				for iter_345_2, iter_345_3 in pairs(arg_342_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_345_3 then
						if arg_342_1.isInRecall_ then
							iter_345_3.color = arg_342_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_345_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_342_1.var_.actorSpriteComps1034 = nil
			end

			local var_345_8 = 0
			local var_345_9 = 1.25

			if var_345_8 < arg_342_1.time_ and arg_342_1.time_ <= var_345_8 + arg_345_0 then
				arg_342_1.talkMaxDuration = 0
				arg_342_1.dialogCg_.alpha = 1

				arg_342_1.dialog_:SetActive(true)
				SetActive(arg_342_1.leftNameGo_, false)

				arg_342_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_342_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_342_1:RecordName(arg_342_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_342_1.iconTrs_.gameObject, false)
				arg_342_1.callingController_:SetSelectedState("normal")

				local var_345_10 = arg_342_1:GetWordFromCfg(417012081)
				local var_345_11 = arg_342_1:FormatText(var_345_10.content)

				arg_342_1.text_.text = var_345_11

				LuaForUtil.ClearLinePrefixSymbol(arg_342_1.text_)

				local var_345_12 = 50
				local var_345_13 = utf8.len(var_345_11)
				local var_345_14 = var_345_12 <= 0 and var_345_9 or var_345_9 * (var_345_13 / var_345_12)

				if var_345_14 > 0 and var_345_9 < var_345_14 then
					arg_342_1.talkMaxDuration = var_345_14

					if var_345_14 + var_345_8 > arg_342_1.duration_ then
						arg_342_1.duration_ = var_345_14 + var_345_8
					end
				end

				arg_342_1.text_.text = var_345_11
				arg_342_1.typewritter.percent = 0

				arg_342_1.typewritter:SetDirty()
				arg_342_1:ShowNextGo(false)
				arg_342_1:RecordContent(arg_342_1.text_.text)
			end

			local var_345_15 = math.max(var_345_9, arg_342_1.talkMaxDuration)

			if var_345_8 <= arg_342_1.time_ and arg_342_1.time_ < var_345_8 + var_345_15 then
				arg_342_1.typewritter.percent = (arg_342_1.time_ - var_345_8) / var_345_15

				arg_342_1.typewritter:SetDirty()
			end

			if arg_342_1.time_ >= var_345_8 + var_345_15 and arg_342_1.time_ < var_345_8 + var_345_15 + arg_345_0 then
				arg_342_1.typewritter.percent = 1

				arg_342_1.typewritter:SetDirty()
				arg_342_1:ShowNextGo(true)
			end
		end
	end,
	Play417012082 = function(arg_346_0, arg_346_1)
		arg_346_1.time_ = 0
		arg_346_1.frameCnt_ = 0
		arg_346_1.state_ = "playing"
		arg_346_1.curTalkId_ = 417012082
		arg_346_1.duration_ = 5

		SetActive(arg_346_1.tipsGo_, false)

		function arg_346_1.onSingleLineFinish_()
			arg_346_1.onSingleLineUpdate_ = nil
			arg_346_1.onSingleLineFinish_ = nil
			arg_346_1.state_ = "waiting"
		end

		function arg_346_1.playNext_(arg_348_0)
			if arg_348_0 == 1 then
				arg_346_0:Play417012083(arg_346_1)
			end
		end

		function arg_346_1.onSingleLineUpdate_(arg_349_0)
			local var_349_0 = 0.5
			local var_349_1 = 1

			if var_349_0 < arg_346_1.time_ and arg_346_1.time_ <= var_349_0 + arg_349_0 then
				local var_349_2 = "play"
				local var_349_3 = "effect"

				arg_346_1:AudioAction(var_349_2, var_349_3, "se_story_136", "se_story_136_car", "")
			end

			local var_349_4 = 0
			local var_349_5 = 1.675

			if var_349_4 < arg_346_1.time_ and arg_346_1.time_ <= var_349_4 + arg_349_0 then
				arg_346_1.talkMaxDuration = 0
				arg_346_1.dialogCg_.alpha = 1

				arg_346_1.dialog_:SetActive(true)
				SetActive(arg_346_1.leftNameGo_, false)

				arg_346_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_346_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_346_1:RecordName(arg_346_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_346_1.iconTrs_.gameObject, false)
				arg_346_1.callingController_:SetSelectedState("normal")

				local var_349_6 = arg_346_1:GetWordFromCfg(417012082)
				local var_349_7 = arg_346_1:FormatText(var_349_6.content)

				arg_346_1.text_.text = var_349_7

				LuaForUtil.ClearLinePrefixSymbol(arg_346_1.text_)

				local var_349_8 = 67
				local var_349_9 = utf8.len(var_349_7)
				local var_349_10 = var_349_8 <= 0 and var_349_5 or var_349_5 * (var_349_9 / var_349_8)

				if var_349_10 > 0 and var_349_5 < var_349_10 then
					arg_346_1.talkMaxDuration = var_349_10

					if var_349_10 + var_349_4 > arg_346_1.duration_ then
						arg_346_1.duration_ = var_349_10 + var_349_4
					end
				end

				arg_346_1.text_.text = var_349_7
				arg_346_1.typewritter.percent = 0

				arg_346_1.typewritter:SetDirty()
				arg_346_1:ShowNextGo(false)
				arg_346_1:RecordContent(arg_346_1.text_.text)
			end

			local var_349_11 = math.max(var_349_5, arg_346_1.talkMaxDuration)

			if var_349_4 <= arg_346_1.time_ and arg_346_1.time_ < var_349_4 + var_349_11 then
				arg_346_1.typewritter.percent = (arg_346_1.time_ - var_349_4) / var_349_11

				arg_346_1.typewritter:SetDirty()
			end

			if arg_346_1.time_ >= var_349_4 + var_349_11 and arg_346_1.time_ < var_349_4 + var_349_11 + arg_349_0 then
				arg_346_1.typewritter.percent = 1

				arg_346_1.typewritter:SetDirty()
				arg_346_1:ShowNextGo(true)
			end
		end
	end,
	Play417012083 = function(arg_350_0, arg_350_1)
		arg_350_1.time_ = 0
		arg_350_1.frameCnt_ = 0
		arg_350_1.state_ = "playing"
		arg_350_1.curTalkId_ = 417012083
		arg_350_1.duration_ = 7.97

		SetActive(arg_350_1.tipsGo_, false)

		function arg_350_1.onSingleLineFinish_()
			arg_350_1.onSingleLineUpdate_ = nil
			arg_350_1.onSingleLineFinish_ = nil
			arg_350_1.state_ = "waiting"
		end

		function arg_350_1.playNext_(arg_352_0)
			if arg_352_0 == 1 then
				arg_350_0:Play417012084(arg_350_1)
			end
		end

		function arg_350_1.onSingleLineUpdate_(arg_353_0)
			local var_353_0 = "ST2106"

			if arg_350_1.bgs_[var_353_0] == nil then
				local var_353_1 = Object.Instantiate(arg_350_1.paintGo_)

				var_353_1:GetComponent("SpriteRenderer").sprite = getSpriteWithoutAtlas("TextureConfig/Background/" .. var_353_0)
				var_353_1.name = var_353_0
				var_353_1.transform.parent = arg_350_1.stage_.transform
				var_353_1.transform.localPosition = Vector3.New(0, 100, 0)
				arg_350_1.bgs_[var_353_0] = var_353_1
			end

			local var_353_2 = 1.36666666666667

			if var_353_2 < arg_350_1.time_ and arg_350_1.time_ <= var_353_2 + arg_353_0 then
				local var_353_3 = manager.ui.mainCamera.transform.localPosition
				local var_353_4 = Vector3.New(0, 0, 10) + Vector3.New(var_353_3.x, var_353_3.y, 0)
				local var_353_5 = arg_350_1.bgs_.ST2106

				var_353_5.transform.localPosition = var_353_4
				var_353_5.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_353_6 = var_353_5:GetComponent("SpriteRenderer")

				if var_353_6 and var_353_6.sprite then
					local var_353_7 = (var_353_5.transform.localPosition - var_353_3).z
					local var_353_8 = manager.ui.mainCameraCom_
					local var_353_9 = 2 * var_353_7 * Mathf.Tan(var_353_8.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_353_10 = var_353_9 * var_353_8.aspect
					local var_353_11 = var_353_6.sprite.bounds.size.x
					local var_353_12 = var_353_6.sprite.bounds.size.y
					local var_353_13 = var_353_10 / var_353_11
					local var_353_14 = var_353_9 / var_353_12
					local var_353_15 = var_353_14 < var_353_13 and var_353_13 or var_353_14

					var_353_5.transform.localScale = Vector3.New(var_353_15, var_353_15, 0)
				end

				for iter_353_0, iter_353_1 in pairs(arg_350_1.bgs_) do
					if iter_353_0 ~= "ST2106" then
						iter_353_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_353_16 = 1.36666666666667

			if var_353_16 < arg_350_1.time_ and arg_350_1.time_ <= var_353_16 + arg_353_0 then
				arg_350_1.allBtn_.enabled = false
			end

			local var_353_17 = 0.3

			if arg_350_1.time_ >= var_353_16 + var_353_17 and arg_350_1.time_ < var_353_16 + var_353_17 + arg_353_0 then
				arg_350_1.allBtn_.enabled = true
			end

			local var_353_18 = 0

			if var_353_18 < arg_350_1.time_ and arg_350_1.time_ <= var_353_18 + arg_353_0 then
				arg_350_1.mask_.enabled = true
				arg_350_1.mask_.raycastTarget = true

				arg_350_1:SetGaussion(false)
			end

			local var_353_19 = 1.36666666666667

			if var_353_18 <= arg_350_1.time_ and arg_350_1.time_ < var_353_18 + var_353_19 then
				local var_353_20 = (arg_350_1.time_ - var_353_18) / var_353_19
				local var_353_21 = Color.New(0, 0, 0)

				var_353_21.a = Mathf.Lerp(0, 1, var_353_20)
				arg_350_1.mask_.color = var_353_21
			end

			if arg_350_1.time_ >= var_353_18 + var_353_19 and arg_350_1.time_ < var_353_18 + var_353_19 + arg_353_0 then
				local var_353_22 = Color.New(0, 0, 0)

				var_353_22.a = 1
				arg_350_1.mask_.color = var_353_22
			end

			local var_353_23 = 1.36666666666667

			if var_353_23 < arg_350_1.time_ and arg_350_1.time_ <= var_353_23 + arg_353_0 then
				arg_350_1.mask_.enabled = true
				arg_350_1.mask_.raycastTarget = true

				arg_350_1:SetGaussion(false)
			end

			local var_353_24 = 2

			if var_353_23 <= arg_350_1.time_ and arg_350_1.time_ < var_353_23 + var_353_24 then
				local var_353_25 = (arg_350_1.time_ - var_353_23) / var_353_24
				local var_353_26 = Color.New(0, 0, 0)

				var_353_26.a = Mathf.Lerp(1, 0, var_353_25)
				arg_350_1.mask_.color = var_353_26
			end

			if arg_350_1.time_ >= var_353_23 + var_353_24 and arg_350_1.time_ < var_353_23 + var_353_24 + arg_353_0 then
				local var_353_27 = Color.New(0, 0, 0)
				local var_353_28 = 0

				arg_350_1.mask_.enabled = false
				var_353_27.a = var_353_28
				arg_350_1.mask_.color = var_353_27
			end

			if arg_350_1.frameCnt_ <= 1 then
				arg_350_1.dialog_:SetActive(false)
			end

			local var_353_29 = 2.96666666666667
			local var_353_30 = 1.675

			if var_353_29 < arg_350_1.time_ and arg_350_1.time_ <= var_353_29 + arg_353_0 then
				arg_350_1.talkMaxDuration = 0

				arg_350_1.dialog_:SetActive(true)

				local var_353_31 = LeanTween.value(arg_350_1.dialog_, 0, 1, 0.3)

				var_353_31:setOnUpdate(LuaHelper.FloatAction(function(arg_354_0)
					arg_350_1.dialogCg_.alpha = arg_354_0
				end))
				var_353_31:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_350_1.dialog_)
					var_353_31:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_350_1.duration_ = arg_350_1.duration_ + 0.3

				SetActive(arg_350_1.leftNameGo_, false)

				arg_350_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_350_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_350_1:RecordName(arg_350_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_350_1.iconTrs_.gameObject, false)
				arg_350_1.callingController_:SetSelectedState("normal")

				local var_353_32 = arg_350_1:GetWordFromCfg(417012083)
				local var_353_33 = arg_350_1:FormatText(var_353_32.content)

				arg_350_1.text_.text = var_353_33

				LuaForUtil.ClearLinePrefixSymbol(arg_350_1.text_)

				local var_353_34 = 67
				local var_353_35 = utf8.len(var_353_33)
				local var_353_36 = var_353_34 <= 0 and var_353_30 or var_353_30 * (var_353_35 / var_353_34)

				if var_353_36 > 0 and var_353_30 < var_353_36 then
					arg_350_1.talkMaxDuration = var_353_36
					var_353_29 = var_353_29 + 0.3

					if var_353_36 + var_353_29 > arg_350_1.duration_ then
						arg_350_1.duration_ = var_353_36 + var_353_29
					end
				end

				arg_350_1.text_.text = var_353_33
				arg_350_1.typewritter.percent = 0

				arg_350_1.typewritter:SetDirty()
				arg_350_1:ShowNextGo(false)
				arg_350_1:RecordContent(arg_350_1.text_.text)
			end

			local var_353_37 = var_353_29 + 0.3
			local var_353_38 = math.max(var_353_30, arg_350_1.talkMaxDuration)

			if var_353_37 <= arg_350_1.time_ and arg_350_1.time_ < var_353_37 + var_353_38 then
				arg_350_1.typewritter.percent = (arg_350_1.time_ - var_353_37) / var_353_38

				arg_350_1.typewritter:SetDirty()
			end

			if arg_350_1.time_ >= var_353_37 + var_353_38 and arg_350_1.time_ < var_353_37 + var_353_38 + arg_353_0 then
				arg_350_1.typewritter.percent = 1

				arg_350_1.typewritter:SetDirty()
				arg_350_1:ShowNextGo(true)
			end
		end
	end,
	Play417012084 = function(arg_356_0, arg_356_1)
		arg_356_1.time_ = 0
		arg_356_1.frameCnt_ = 0
		arg_356_1.state_ = "playing"
		arg_356_1.curTalkId_ = 417012084
		arg_356_1.duration_ = 3.03

		local var_356_0 = {
			zh = 2.633,
			ja = 3.033
		}
		local var_356_1 = manager.audio:GetLocalizationFlag()

		if var_356_0[var_356_1] ~= nil then
			arg_356_1.duration_ = var_356_0[var_356_1]
		end

		SetActive(arg_356_1.tipsGo_, false)

		function arg_356_1.onSingleLineFinish_()
			arg_356_1.onSingleLineUpdate_ = nil
			arg_356_1.onSingleLineFinish_ = nil
			arg_356_1.state_ = "waiting"
		end

		function arg_356_1.playNext_(arg_358_0)
			if arg_358_0 == 1 then
				arg_356_0:Play417012085(arg_356_1)
			end
		end

		function arg_356_1.onSingleLineUpdate_(arg_359_0)
			local var_359_0 = arg_356_1.actors_["1034"]
			local var_359_1 = 0

			if var_359_1 < arg_356_1.time_ and arg_356_1.time_ <= var_359_1 + arg_359_0 and not isNil(var_359_0) and arg_356_1.var_.actorSpriteComps1034 == nil then
				arg_356_1.var_.actorSpriteComps1034 = var_359_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_359_2 = 0.2

			if var_359_1 <= arg_356_1.time_ and arg_356_1.time_ < var_359_1 + var_359_2 and not isNil(var_359_0) then
				local var_359_3 = (arg_356_1.time_ - var_359_1) / var_359_2

				if arg_356_1.var_.actorSpriteComps1034 then
					for iter_359_0, iter_359_1 in pairs(arg_356_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_359_1 then
							if arg_356_1.isInRecall_ then
								local var_359_4 = Mathf.Lerp(iter_359_1.color.r, arg_356_1.hightColor1.r, var_359_3)
								local var_359_5 = Mathf.Lerp(iter_359_1.color.g, arg_356_1.hightColor1.g, var_359_3)
								local var_359_6 = Mathf.Lerp(iter_359_1.color.b, arg_356_1.hightColor1.b, var_359_3)

								iter_359_1.color = Color.New(var_359_4, var_359_5, var_359_6)
							else
								local var_359_7 = Mathf.Lerp(iter_359_1.color.r, 1, var_359_3)

								iter_359_1.color = Color.New(var_359_7, var_359_7, var_359_7)
							end
						end
					end
				end
			end

			if arg_356_1.time_ >= var_359_1 + var_359_2 and arg_356_1.time_ < var_359_1 + var_359_2 + arg_359_0 and not isNil(var_359_0) and arg_356_1.var_.actorSpriteComps1034 then
				for iter_359_2, iter_359_3 in pairs(arg_356_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_359_3 then
						if arg_356_1.isInRecall_ then
							iter_359_3.color = arg_356_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_359_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_356_1.var_.actorSpriteComps1034 = nil
			end

			local var_359_8 = arg_356_1.actors_["1034"].transform
			local var_359_9 = 0

			if var_359_9 < arg_356_1.time_ and arg_356_1.time_ <= var_359_9 + arg_359_0 then
				arg_356_1.var_.moveOldPos1034 = var_359_8.localPosition
				var_359_8.localScale = Vector3.New(1, 1, 1)

				arg_356_1:CheckSpriteTmpPos("1034", 3)

				local var_359_10 = var_359_8.childCount

				for iter_359_4 = 0, var_359_10 - 1 do
					local var_359_11 = var_359_8:GetChild(iter_359_4)

					if var_359_11.name == "" or not string.find(var_359_11.name, "split") then
						var_359_11.gameObject:SetActive(true)
					else
						var_359_11.gameObject:SetActive(false)
					end
				end
			end

			local var_359_12 = 0.001

			if var_359_9 <= arg_356_1.time_ and arg_356_1.time_ < var_359_9 + var_359_12 then
				local var_359_13 = (arg_356_1.time_ - var_359_9) / var_359_12
				local var_359_14 = Vector3.New(0, -331.9, -324)

				var_359_8.localPosition = Vector3.Lerp(arg_356_1.var_.moveOldPos1034, var_359_14, var_359_13)
			end

			if arg_356_1.time_ >= var_359_9 + var_359_12 and arg_356_1.time_ < var_359_9 + var_359_12 + arg_359_0 then
				var_359_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_359_15 = 0
			local var_359_16 = 0.275

			if var_359_15 < arg_356_1.time_ and arg_356_1.time_ <= var_359_15 + arg_359_0 then
				arg_356_1.talkMaxDuration = 0
				arg_356_1.dialogCg_.alpha = 1

				arg_356_1.dialog_:SetActive(true)
				SetActive(arg_356_1.leftNameGo_, true)

				local var_359_17 = arg_356_1:FormatText(StoryNameCfg[1109].name)

				arg_356_1.leftNameTxt_.text = var_359_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_356_1.leftNameTxt_.transform)

				arg_356_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_356_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_356_1:RecordName(arg_356_1.leftNameTxt_.text)
				SetActive(arg_356_1.iconTrs_.gameObject, false)
				arg_356_1.callingController_:SetSelectedState("normal")

				local var_359_18 = arg_356_1:GetWordFromCfg(417012084)
				local var_359_19 = arg_356_1:FormatText(var_359_18.content)

				arg_356_1.text_.text = var_359_19

				LuaForUtil.ClearLinePrefixSymbol(arg_356_1.text_)

				local var_359_20 = 11
				local var_359_21 = utf8.len(var_359_19)
				local var_359_22 = var_359_20 <= 0 and var_359_16 or var_359_16 * (var_359_21 / var_359_20)

				if var_359_22 > 0 and var_359_16 < var_359_22 then
					arg_356_1.talkMaxDuration = var_359_22

					if var_359_22 + var_359_15 > arg_356_1.duration_ then
						arg_356_1.duration_ = var_359_22 + var_359_15
					end
				end

				arg_356_1.text_.text = var_359_19
				arg_356_1.typewritter.percent = 0

				arg_356_1.typewritter:SetDirty()
				arg_356_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012084", "story_v_out_417012.awb") ~= 0 then
					local var_359_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012084", "story_v_out_417012.awb") / 1000

					if var_359_23 + var_359_15 > arg_356_1.duration_ then
						arg_356_1.duration_ = var_359_23 + var_359_15
					end

					if var_359_18.prefab_name ~= "" and arg_356_1.actors_[var_359_18.prefab_name] ~= nil then
						local var_359_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_356_1.actors_[var_359_18.prefab_name].transform, "story_v_out_417012", "417012084", "story_v_out_417012.awb")

						arg_356_1:RecordAudio("417012084", var_359_24)
						arg_356_1:RecordAudio("417012084", var_359_24)
					else
						arg_356_1:AudioAction("play", "voice", "story_v_out_417012", "417012084", "story_v_out_417012.awb")
					end

					arg_356_1:RecordHistoryTalkVoice("story_v_out_417012", "417012084", "story_v_out_417012.awb")
				end

				arg_356_1:RecordContent(arg_356_1.text_.text)
			end

			local var_359_25 = math.max(var_359_16, arg_356_1.talkMaxDuration)

			if var_359_15 <= arg_356_1.time_ and arg_356_1.time_ < var_359_15 + var_359_25 then
				arg_356_1.typewritter.percent = (arg_356_1.time_ - var_359_15) / var_359_25

				arg_356_1.typewritter:SetDirty()
			end

			if arg_356_1.time_ >= var_359_15 + var_359_25 and arg_356_1.time_ < var_359_15 + var_359_25 + arg_359_0 then
				arg_356_1.typewritter.percent = 1

				arg_356_1.typewritter:SetDirty()
				arg_356_1:ShowNextGo(true)
			end
		end
	end,
	Play417012085 = function(arg_360_0, arg_360_1)
		arg_360_1.time_ = 0
		arg_360_1.frameCnt_ = 0
		arg_360_1.state_ = "playing"
		arg_360_1.curTalkId_ = 417012085
		arg_360_1.duration_ = 5.2

		local var_360_0 = {
			zh = 3.6,
			ja = 5.2
		}
		local var_360_1 = manager.audio:GetLocalizationFlag()

		if var_360_0[var_360_1] ~= nil then
			arg_360_1.duration_ = var_360_0[var_360_1]
		end

		SetActive(arg_360_1.tipsGo_, false)

		function arg_360_1.onSingleLineFinish_()
			arg_360_1.onSingleLineUpdate_ = nil
			arg_360_1.onSingleLineFinish_ = nil
			arg_360_1.state_ = "waiting"
		end

		function arg_360_1.playNext_(arg_362_0)
			if arg_362_0 == 1 then
				arg_360_0:Play417012086(arg_360_1)
			end
		end

		function arg_360_1.onSingleLineUpdate_(arg_363_0)
			local var_363_0 = arg_360_1.actors_["1034"]
			local var_363_1 = 0

			if var_363_1 < arg_360_1.time_ and arg_360_1.time_ <= var_363_1 + arg_363_0 and not isNil(var_363_0) and arg_360_1.var_.actorSpriteComps1034 == nil then
				arg_360_1.var_.actorSpriteComps1034 = var_363_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_363_2 = 0.2

			if var_363_1 <= arg_360_1.time_ and arg_360_1.time_ < var_363_1 + var_363_2 and not isNil(var_363_0) then
				local var_363_3 = (arg_360_1.time_ - var_363_1) / var_363_2

				if arg_360_1.var_.actorSpriteComps1034 then
					for iter_363_0, iter_363_1 in pairs(arg_360_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_363_1 then
							if arg_360_1.isInRecall_ then
								local var_363_4 = Mathf.Lerp(iter_363_1.color.r, arg_360_1.hightColor2.r, var_363_3)
								local var_363_5 = Mathf.Lerp(iter_363_1.color.g, arg_360_1.hightColor2.g, var_363_3)
								local var_363_6 = Mathf.Lerp(iter_363_1.color.b, arg_360_1.hightColor2.b, var_363_3)

								iter_363_1.color = Color.New(var_363_4, var_363_5, var_363_6)
							else
								local var_363_7 = Mathf.Lerp(iter_363_1.color.r, 0.5, var_363_3)

								iter_363_1.color = Color.New(var_363_7, var_363_7, var_363_7)
							end
						end
					end
				end
			end

			if arg_360_1.time_ >= var_363_1 + var_363_2 and arg_360_1.time_ < var_363_1 + var_363_2 + arg_363_0 and not isNil(var_363_0) and arg_360_1.var_.actorSpriteComps1034 then
				for iter_363_2, iter_363_3 in pairs(arg_360_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_363_3 then
						if arg_360_1.isInRecall_ then
							iter_363_3.color = arg_360_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_363_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_360_1.var_.actorSpriteComps1034 = nil
			end

			local var_363_8 = 0
			local var_363_9 = 0.5

			if var_363_8 < arg_360_1.time_ and arg_360_1.time_ <= var_363_8 + arg_363_0 then
				arg_360_1.talkMaxDuration = 0
				arg_360_1.dialogCg_.alpha = 1

				arg_360_1.dialog_:SetActive(true)
				SetActive(arg_360_1.leftNameGo_, true)

				local var_363_10 = arg_360_1:FormatText(StoryNameCfg[1112].name)

				arg_360_1.leftNameTxt_.text = var_363_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_360_1.leftNameTxt_.transform)

				arg_360_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_360_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_360_1:RecordName(arg_360_1.leftNameTxt_.text)
				SetActive(arg_360_1.iconTrs_.gameObject, true)
				arg_360_1.iconController_:SetSelectedState("hero")

				arg_360_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_360_1.callingController_:SetSelectedState("normal")

				arg_360_1.keyicon_.color = Color.New(1, 1, 1)
				arg_360_1.icon_.color = Color.New(1, 1, 1)

				local var_363_11 = arg_360_1:GetWordFromCfg(417012085)
				local var_363_12 = arg_360_1:FormatText(var_363_11.content)

				arg_360_1.text_.text = var_363_12

				LuaForUtil.ClearLinePrefixSymbol(arg_360_1.text_)

				local var_363_13 = 20
				local var_363_14 = utf8.len(var_363_12)
				local var_363_15 = var_363_13 <= 0 and var_363_9 or var_363_9 * (var_363_14 / var_363_13)

				if var_363_15 > 0 and var_363_9 < var_363_15 then
					arg_360_1.talkMaxDuration = var_363_15

					if var_363_15 + var_363_8 > arg_360_1.duration_ then
						arg_360_1.duration_ = var_363_15 + var_363_8
					end
				end

				arg_360_1.text_.text = var_363_12
				arg_360_1.typewritter.percent = 0

				arg_360_1.typewritter:SetDirty()
				arg_360_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012085", "story_v_out_417012.awb") ~= 0 then
					local var_363_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012085", "story_v_out_417012.awb") / 1000

					if var_363_16 + var_363_8 > arg_360_1.duration_ then
						arg_360_1.duration_ = var_363_16 + var_363_8
					end

					if var_363_11.prefab_name ~= "" and arg_360_1.actors_[var_363_11.prefab_name] ~= nil then
						local var_363_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_360_1.actors_[var_363_11.prefab_name].transform, "story_v_out_417012", "417012085", "story_v_out_417012.awb")

						arg_360_1:RecordAudio("417012085", var_363_17)
						arg_360_1:RecordAudio("417012085", var_363_17)
					else
						arg_360_1:AudioAction("play", "voice", "story_v_out_417012", "417012085", "story_v_out_417012.awb")
					end

					arg_360_1:RecordHistoryTalkVoice("story_v_out_417012", "417012085", "story_v_out_417012.awb")
				end

				arg_360_1:RecordContent(arg_360_1.text_.text)
			end

			local var_363_18 = math.max(var_363_9, arg_360_1.talkMaxDuration)

			if var_363_8 <= arg_360_1.time_ and arg_360_1.time_ < var_363_8 + var_363_18 then
				arg_360_1.typewritter.percent = (arg_360_1.time_ - var_363_8) / var_363_18

				arg_360_1.typewritter:SetDirty()
			end

			if arg_360_1.time_ >= var_363_8 + var_363_18 and arg_360_1.time_ < var_363_8 + var_363_18 + arg_363_0 then
				arg_360_1.typewritter.percent = 1

				arg_360_1.typewritter:SetDirty()
				arg_360_1:ShowNextGo(true)
			end
		end
	end,
	Play417012086 = function(arg_364_0, arg_364_1)
		arg_364_1.time_ = 0
		arg_364_1.frameCnt_ = 0
		arg_364_1.state_ = "playing"
		arg_364_1.curTalkId_ = 417012086
		arg_364_1.duration_ = 5

		SetActive(arg_364_1.tipsGo_, false)

		function arg_364_1.onSingleLineFinish_()
			arg_364_1.onSingleLineUpdate_ = nil
			arg_364_1.onSingleLineFinish_ = nil
			arg_364_1.state_ = "waiting"
		end

		function arg_364_1.playNext_(arg_366_0)
			if arg_366_0 == 1 then
				arg_364_0:Play417012087(arg_364_1)
			end
		end

		function arg_364_1.onSingleLineUpdate_(arg_367_0)
			local var_367_0 = 0
			local var_367_1 = 1

			if var_367_0 < arg_364_1.time_ and arg_364_1.time_ <= var_367_0 + arg_367_0 then
				local var_367_2 = "play"
				local var_367_3 = "effect"

				arg_364_1:AudioAction(var_367_2, var_367_3, "se_story_1310", "se_story_1310_logout", "")
			end

			local var_367_4 = 0
			local var_367_5 = 1.1

			if var_367_4 < arg_364_1.time_ and arg_364_1.time_ <= var_367_4 + arg_367_0 then
				arg_364_1.talkMaxDuration = 0
				arg_364_1.dialogCg_.alpha = 1

				arg_364_1.dialog_:SetActive(true)
				SetActive(arg_364_1.leftNameGo_, false)

				arg_364_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_364_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_364_1:RecordName(arg_364_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_364_1.iconTrs_.gameObject, false)
				arg_364_1.callingController_:SetSelectedState("normal")

				local var_367_6 = arg_364_1:GetWordFromCfg(417012086)
				local var_367_7 = arg_364_1:FormatText(var_367_6.content)

				arg_364_1.text_.text = var_367_7

				LuaForUtil.ClearLinePrefixSymbol(arg_364_1.text_)

				local var_367_8 = 44
				local var_367_9 = utf8.len(var_367_7)
				local var_367_10 = var_367_8 <= 0 and var_367_5 or var_367_5 * (var_367_9 / var_367_8)

				if var_367_10 > 0 and var_367_5 < var_367_10 then
					arg_364_1.talkMaxDuration = var_367_10

					if var_367_10 + var_367_4 > arg_364_1.duration_ then
						arg_364_1.duration_ = var_367_10 + var_367_4
					end
				end

				arg_364_1.text_.text = var_367_7
				arg_364_1.typewritter.percent = 0

				arg_364_1.typewritter:SetDirty()
				arg_364_1:ShowNextGo(false)
				arg_364_1:RecordContent(arg_364_1.text_.text)
			end

			local var_367_11 = math.max(var_367_5, arg_364_1.talkMaxDuration)

			if var_367_4 <= arg_364_1.time_ and arg_364_1.time_ < var_367_4 + var_367_11 then
				arg_364_1.typewritter.percent = (arg_364_1.time_ - var_367_4) / var_367_11

				arg_364_1.typewritter:SetDirty()
			end

			if arg_364_1.time_ >= var_367_4 + var_367_11 and arg_364_1.time_ < var_367_4 + var_367_11 + arg_367_0 then
				arg_364_1.typewritter.percent = 1

				arg_364_1.typewritter:SetDirty()
				arg_364_1:ShowNextGo(true)
			end
		end
	end,
	Play417012087 = function(arg_368_0, arg_368_1)
		arg_368_1.time_ = 0
		arg_368_1.frameCnt_ = 0
		arg_368_1.state_ = "playing"
		arg_368_1.curTalkId_ = 417012087
		arg_368_1.duration_ = 6.93

		local var_368_0 = {
			zh = 5.933,
			ja = 6.933
		}
		local var_368_1 = manager.audio:GetLocalizationFlag()

		if var_368_0[var_368_1] ~= nil then
			arg_368_1.duration_ = var_368_0[var_368_1]
		end

		SetActive(arg_368_1.tipsGo_, false)

		function arg_368_1.onSingleLineFinish_()
			arg_368_1.onSingleLineUpdate_ = nil
			arg_368_1.onSingleLineFinish_ = nil
			arg_368_1.state_ = "waiting"
		end

		function arg_368_1.playNext_(arg_370_0)
			if arg_370_0 == 1 then
				arg_368_0:Play417012088(arg_368_1)
			end
		end

		function arg_368_1.onSingleLineUpdate_(arg_371_0)
			local var_371_0 = 0
			local var_371_1 = 0.6

			if var_371_0 < arg_368_1.time_ and arg_368_1.time_ <= var_371_0 + arg_371_0 then
				arg_368_1.talkMaxDuration = 0
				arg_368_1.dialogCg_.alpha = 1

				arg_368_1.dialog_:SetActive(true)
				SetActive(arg_368_1.leftNameGo_, true)

				local var_371_2 = arg_368_1:FormatText(StoryNameCfg[1112].name)

				arg_368_1.leftNameTxt_.text = var_371_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_368_1.leftNameTxt_.transform)

				arg_368_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_368_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_368_1:RecordName(arg_368_1.leftNameTxt_.text)
				SetActive(arg_368_1.iconTrs_.gameObject, true)
				arg_368_1.iconController_:SetSelectedState("hero")

				arg_368_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_368_1.callingController_:SetSelectedState("normal")

				arg_368_1.keyicon_.color = Color.New(1, 1, 1)
				arg_368_1.icon_.color = Color.New(1, 1, 1)

				local var_371_3 = arg_368_1:GetWordFromCfg(417012087)
				local var_371_4 = arg_368_1:FormatText(var_371_3.content)

				arg_368_1.text_.text = var_371_4

				LuaForUtil.ClearLinePrefixSymbol(arg_368_1.text_)

				local var_371_5 = 24
				local var_371_6 = utf8.len(var_371_4)
				local var_371_7 = var_371_5 <= 0 and var_371_1 or var_371_1 * (var_371_6 / var_371_5)

				if var_371_7 > 0 and var_371_1 < var_371_7 then
					arg_368_1.talkMaxDuration = var_371_7

					if var_371_7 + var_371_0 > arg_368_1.duration_ then
						arg_368_1.duration_ = var_371_7 + var_371_0
					end
				end

				arg_368_1.text_.text = var_371_4
				arg_368_1.typewritter.percent = 0

				arg_368_1.typewritter:SetDirty()
				arg_368_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012087", "story_v_out_417012.awb") ~= 0 then
					local var_371_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012087", "story_v_out_417012.awb") / 1000

					if var_371_8 + var_371_0 > arg_368_1.duration_ then
						arg_368_1.duration_ = var_371_8 + var_371_0
					end

					if var_371_3.prefab_name ~= "" and arg_368_1.actors_[var_371_3.prefab_name] ~= nil then
						local var_371_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_368_1.actors_[var_371_3.prefab_name].transform, "story_v_out_417012", "417012087", "story_v_out_417012.awb")

						arg_368_1:RecordAudio("417012087", var_371_9)
						arg_368_1:RecordAudio("417012087", var_371_9)
					else
						arg_368_1:AudioAction("play", "voice", "story_v_out_417012", "417012087", "story_v_out_417012.awb")
					end

					arg_368_1:RecordHistoryTalkVoice("story_v_out_417012", "417012087", "story_v_out_417012.awb")
				end

				arg_368_1:RecordContent(arg_368_1.text_.text)
			end

			local var_371_10 = math.max(var_371_1, arg_368_1.talkMaxDuration)

			if var_371_0 <= arg_368_1.time_ and arg_368_1.time_ < var_371_0 + var_371_10 then
				arg_368_1.typewritter.percent = (arg_368_1.time_ - var_371_0) / var_371_10

				arg_368_1.typewritter:SetDirty()
			end

			if arg_368_1.time_ >= var_371_0 + var_371_10 and arg_368_1.time_ < var_371_0 + var_371_10 + arg_371_0 then
				arg_368_1.typewritter.percent = 1

				arg_368_1.typewritter:SetDirty()
				arg_368_1:ShowNextGo(true)
			end
		end
	end,
	Play417012088 = function(arg_372_0, arg_372_1)
		arg_372_1.time_ = 0
		arg_372_1.frameCnt_ = 0
		arg_372_1.state_ = "playing"
		arg_372_1.curTalkId_ = 417012088
		arg_372_1.duration_ = 3.7

		local var_372_0 = {
			zh = 3.7,
			ja = 3.6
		}
		local var_372_1 = manager.audio:GetLocalizationFlag()

		if var_372_0[var_372_1] ~= nil then
			arg_372_1.duration_ = var_372_0[var_372_1]
		end

		SetActive(arg_372_1.tipsGo_, false)

		function arg_372_1.onSingleLineFinish_()
			arg_372_1.onSingleLineUpdate_ = nil
			arg_372_1.onSingleLineFinish_ = nil
			arg_372_1.state_ = "waiting"
		end

		function arg_372_1.playNext_(arg_374_0)
			if arg_374_0 == 1 then
				arg_372_0:Play417012089(arg_372_1)
			end
		end

		function arg_372_1.onSingleLineUpdate_(arg_375_0)
			local var_375_0 = arg_372_1.actors_["1034"]
			local var_375_1 = 0

			if var_375_1 < arg_372_1.time_ and arg_372_1.time_ <= var_375_1 + arg_375_0 and not isNil(var_375_0) and arg_372_1.var_.actorSpriteComps1034 == nil then
				arg_372_1.var_.actorSpriteComps1034 = var_375_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_375_2 = 0.2

			if var_375_1 <= arg_372_1.time_ and arg_372_1.time_ < var_375_1 + var_375_2 and not isNil(var_375_0) then
				local var_375_3 = (arg_372_1.time_ - var_375_1) / var_375_2

				if arg_372_1.var_.actorSpriteComps1034 then
					for iter_375_0, iter_375_1 in pairs(arg_372_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_375_1 then
							if arg_372_1.isInRecall_ then
								local var_375_4 = Mathf.Lerp(iter_375_1.color.r, arg_372_1.hightColor1.r, var_375_3)
								local var_375_5 = Mathf.Lerp(iter_375_1.color.g, arg_372_1.hightColor1.g, var_375_3)
								local var_375_6 = Mathf.Lerp(iter_375_1.color.b, arg_372_1.hightColor1.b, var_375_3)

								iter_375_1.color = Color.New(var_375_4, var_375_5, var_375_6)
							else
								local var_375_7 = Mathf.Lerp(iter_375_1.color.r, 1, var_375_3)

								iter_375_1.color = Color.New(var_375_7, var_375_7, var_375_7)
							end
						end
					end
				end
			end

			if arg_372_1.time_ >= var_375_1 + var_375_2 and arg_372_1.time_ < var_375_1 + var_375_2 + arg_375_0 and not isNil(var_375_0) and arg_372_1.var_.actorSpriteComps1034 then
				for iter_375_2, iter_375_3 in pairs(arg_372_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_375_3 then
						if arg_372_1.isInRecall_ then
							iter_375_3.color = arg_372_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_375_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_372_1.var_.actorSpriteComps1034 = nil
			end

			local var_375_8 = arg_372_1.actors_["1034"].transform
			local var_375_9 = 0

			if var_375_9 < arg_372_1.time_ and arg_372_1.time_ <= var_375_9 + arg_375_0 then
				arg_372_1.var_.moveOldPos1034 = var_375_8.localPosition
				var_375_8.localScale = Vector3.New(1, 1, 1)

				arg_372_1:CheckSpriteTmpPos("1034", 3)

				local var_375_10 = var_375_8.childCount

				for iter_375_4 = 0, var_375_10 - 1 do
					local var_375_11 = var_375_8:GetChild(iter_375_4)

					if var_375_11.name == "split_7" or not string.find(var_375_11.name, "split") then
						var_375_11.gameObject:SetActive(true)
					else
						var_375_11.gameObject:SetActive(false)
					end
				end
			end

			local var_375_12 = 0.001

			if var_375_9 <= arg_372_1.time_ and arg_372_1.time_ < var_375_9 + var_375_12 then
				local var_375_13 = (arg_372_1.time_ - var_375_9) / var_375_12
				local var_375_14 = Vector3.New(0, -331.9, -324)

				var_375_8.localPosition = Vector3.Lerp(arg_372_1.var_.moveOldPos1034, var_375_14, var_375_13)
			end

			if arg_372_1.time_ >= var_375_9 + var_375_12 and arg_372_1.time_ < var_375_9 + var_375_12 + arg_375_0 then
				var_375_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_375_15 = 0
			local var_375_16 = 0.45

			if var_375_15 < arg_372_1.time_ and arg_372_1.time_ <= var_375_15 + arg_375_0 then
				arg_372_1.talkMaxDuration = 0
				arg_372_1.dialogCg_.alpha = 1

				arg_372_1.dialog_:SetActive(true)
				SetActive(arg_372_1.leftNameGo_, true)

				local var_375_17 = arg_372_1:FormatText(StoryNameCfg[1109].name)

				arg_372_1.leftNameTxt_.text = var_375_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_372_1.leftNameTxt_.transform)

				arg_372_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_372_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_372_1:RecordName(arg_372_1.leftNameTxt_.text)
				SetActive(arg_372_1.iconTrs_.gameObject, false)
				arg_372_1.callingController_:SetSelectedState("normal")

				local var_375_18 = arg_372_1:GetWordFromCfg(417012088)
				local var_375_19 = arg_372_1:FormatText(var_375_18.content)

				arg_372_1.text_.text = var_375_19

				LuaForUtil.ClearLinePrefixSymbol(arg_372_1.text_)

				local var_375_20 = 18
				local var_375_21 = utf8.len(var_375_19)
				local var_375_22 = var_375_20 <= 0 and var_375_16 or var_375_16 * (var_375_21 / var_375_20)

				if var_375_22 > 0 and var_375_16 < var_375_22 then
					arg_372_1.talkMaxDuration = var_375_22

					if var_375_22 + var_375_15 > arg_372_1.duration_ then
						arg_372_1.duration_ = var_375_22 + var_375_15
					end
				end

				arg_372_1.text_.text = var_375_19
				arg_372_1.typewritter.percent = 0

				arg_372_1.typewritter:SetDirty()
				arg_372_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012088", "story_v_out_417012.awb") ~= 0 then
					local var_375_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012088", "story_v_out_417012.awb") / 1000

					if var_375_23 + var_375_15 > arg_372_1.duration_ then
						arg_372_1.duration_ = var_375_23 + var_375_15
					end

					if var_375_18.prefab_name ~= "" and arg_372_1.actors_[var_375_18.prefab_name] ~= nil then
						local var_375_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_372_1.actors_[var_375_18.prefab_name].transform, "story_v_out_417012", "417012088", "story_v_out_417012.awb")

						arg_372_1:RecordAudio("417012088", var_375_24)
						arg_372_1:RecordAudio("417012088", var_375_24)
					else
						arg_372_1:AudioAction("play", "voice", "story_v_out_417012", "417012088", "story_v_out_417012.awb")
					end

					arg_372_1:RecordHistoryTalkVoice("story_v_out_417012", "417012088", "story_v_out_417012.awb")
				end

				arg_372_1:RecordContent(arg_372_1.text_.text)
			end

			local var_375_25 = math.max(var_375_16, arg_372_1.talkMaxDuration)

			if var_375_15 <= arg_372_1.time_ and arg_372_1.time_ < var_375_15 + var_375_25 then
				arg_372_1.typewritter.percent = (arg_372_1.time_ - var_375_15) / var_375_25

				arg_372_1.typewritter:SetDirty()
			end

			if arg_372_1.time_ >= var_375_15 + var_375_25 and arg_372_1.time_ < var_375_15 + var_375_25 + arg_375_0 then
				arg_372_1.typewritter.percent = 1

				arg_372_1.typewritter:SetDirty()
				arg_372_1:ShowNextGo(true)
			end
		end
	end,
	Play417012089 = function(arg_376_0, arg_376_1)
		arg_376_1.time_ = 0
		arg_376_1.frameCnt_ = 0
		arg_376_1.state_ = "playing"
		arg_376_1.curTalkId_ = 417012089
		arg_376_1.duration_ = 9.07

		local var_376_0 = {
			zh = 6.066,
			ja = 9.066
		}
		local var_376_1 = manager.audio:GetLocalizationFlag()

		if var_376_0[var_376_1] ~= nil then
			arg_376_1.duration_ = var_376_0[var_376_1]
		end

		SetActive(arg_376_1.tipsGo_, false)

		function arg_376_1.onSingleLineFinish_()
			arg_376_1.onSingleLineUpdate_ = nil
			arg_376_1.onSingleLineFinish_ = nil
			arg_376_1.state_ = "waiting"
		end

		function arg_376_1.playNext_(arg_378_0)
			if arg_378_0 == 1 then
				arg_376_0:Play417012090(arg_376_1)
			end
		end

		function arg_376_1.onSingleLineUpdate_(arg_379_0)
			local var_379_0 = arg_376_1.actors_["1034"]
			local var_379_1 = 0

			if var_379_1 < arg_376_1.time_ and arg_376_1.time_ <= var_379_1 + arg_379_0 and not isNil(var_379_0) and arg_376_1.var_.actorSpriteComps1034 == nil then
				arg_376_1.var_.actorSpriteComps1034 = var_379_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_379_2 = 0.2

			if var_379_1 <= arg_376_1.time_ and arg_376_1.time_ < var_379_1 + var_379_2 and not isNil(var_379_0) then
				local var_379_3 = (arg_376_1.time_ - var_379_1) / var_379_2

				if arg_376_1.var_.actorSpriteComps1034 then
					for iter_379_0, iter_379_1 in pairs(arg_376_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_379_1 then
							if arg_376_1.isInRecall_ then
								local var_379_4 = Mathf.Lerp(iter_379_1.color.r, arg_376_1.hightColor2.r, var_379_3)
								local var_379_5 = Mathf.Lerp(iter_379_1.color.g, arg_376_1.hightColor2.g, var_379_3)
								local var_379_6 = Mathf.Lerp(iter_379_1.color.b, arg_376_1.hightColor2.b, var_379_3)

								iter_379_1.color = Color.New(var_379_4, var_379_5, var_379_6)
							else
								local var_379_7 = Mathf.Lerp(iter_379_1.color.r, 0.5, var_379_3)

								iter_379_1.color = Color.New(var_379_7, var_379_7, var_379_7)
							end
						end
					end
				end
			end

			if arg_376_1.time_ >= var_379_1 + var_379_2 and arg_376_1.time_ < var_379_1 + var_379_2 + arg_379_0 and not isNil(var_379_0) and arg_376_1.var_.actorSpriteComps1034 then
				for iter_379_2, iter_379_3 in pairs(arg_376_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_379_3 then
						if arg_376_1.isInRecall_ then
							iter_379_3.color = arg_376_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_379_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_376_1.var_.actorSpriteComps1034 = nil
			end

			local var_379_8 = 0
			local var_379_9 = 0.675

			if var_379_8 < arg_376_1.time_ and arg_376_1.time_ <= var_379_8 + arg_379_0 then
				arg_376_1.talkMaxDuration = 0
				arg_376_1.dialogCg_.alpha = 1

				arg_376_1.dialog_:SetActive(true)
				SetActive(arg_376_1.leftNameGo_, true)

				local var_379_10 = arg_376_1:FormatText(StoryNameCfg[1112].name)

				arg_376_1.leftNameTxt_.text = var_379_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_376_1.leftNameTxt_.transform)

				arg_376_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_376_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_376_1:RecordName(arg_376_1.leftNameTxt_.text)
				SetActive(arg_376_1.iconTrs_.gameObject, true)
				arg_376_1.iconController_:SetSelectedState("hero")

				arg_376_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_376_1.callingController_:SetSelectedState("normal")

				arg_376_1.keyicon_.color = Color.New(1, 1, 1)
				arg_376_1.icon_.color = Color.New(1, 1, 1)

				local var_379_11 = arg_376_1:GetWordFromCfg(417012089)
				local var_379_12 = arg_376_1:FormatText(var_379_11.content)

				arg_376_1.text_.text = var_379_12

				LuaForUtil.ClearLinePrefixSymbol(arg_376_1.text_)

				local var_379_13 = 27
				local var_379_14 = utf8.len(var_379_12)
				local var_379_15 = var_379_13 <= 0 and var_379_9 or var_379_9 * (var_379_14 / var_379_13)

				if var_379_15 > 0 and var_379_9 < var_379_15 then
					arg_376_1.talkMaxDuration = var_379_15

					if var_379_15 + var_379_8 > arg_376_1.duration_ then
						arg_376_1.duration_ = var_379_15 + var_379_8
					end
				end

				arg_376_1.text_.text = var_379_12
				arg_376_1.typewritter.percent = 0

				arg_376_1.typewritter:SetDirty()
				arg_376_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012089", "story_v_out_417012.awb") ~= 0 then
					local var_379_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012089", "story_v_out_417012.awb") / 1000

					if var_379_16 + var_379_8 > arg_376_1.duration_ then
						arg_376_1.duration_ = var_379_16 + var_379_8
					end

					if var_379_11.prefab_name ~= "" and arg_376_1.actors_[var_379_11.prefab_name] ~= nil then
						local var_379_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_376_1.actors_[var_379_11.prefab_name].transform, "story_v_out_417012", "417012089", "story_v_out_417012.awb")

						arg_376_1:RecordAudio("417012089", var_379_17)
						arg_376_1:RecordAudio("417012089", var_379_17)
					else
						arg_376_1:AudioAction("play", "voice", "story_v_out_417012", "417012089", "story_v_out_417012.awb")
					end

					arg_376_1:RecordHistoryTalkVoice("story_v_out_417012", "417012089", "story_v_out_417012.awb")
				end

				arg_376_1:RecordContent(arg_376_1.text_.text)
			end

			local var_379_18 = math.max(var_379_9, arg_376_1.talkMaxDuration)

			if var_379_8 <= arg_376_1.time_ and arg_376_1.time_ < var_379_8 + var_379_18 then
				arg_376_1.typewritter.percent = (arg_376_1.time_ - var_379_8) / var_379_18

				arg_376_1.typewritter:SetDirty()
			end

			if arg_376_1.time_ >= var_379_8 + var_379_18 and arg_376_1.time_ < var_379_8 + var_379_18 + arg_379_0 then
				arg_376_1.typewritter.percent = 1

				arg_376_1.typewritter:SetDirty()
				arg_376_1:ShowNextGo(true)
			end
		end
	end,
	Play417012090 = function(arg_380_0, arg_380_1)
		arg_380_1.time_ = 0
		arg_380_1.frameCnt_ = 0
		arg_380_1.state_ = "playing"
		arg_380_1.curTalkId_ = 417012090
		arg_380_1.duration_ = 6.7

		local var_380_0 = {
			zh = 6.7,
			ja = 6.4
		}
		local var_380_1 = manager.audio:GetLocalizationFlag()

		if var_380_0[var_380_1] ~= nil then
			arg_380_1.duration_ = var_380_0[var_380_1]
		end

		SetActive(arg_380_1.tipsGo_, false)

		function arg_380_1.onSingleLineFinish_()
			arg_380_1.onSingleLineUpdate_ = nil
			arg_380_1.onSingleLineFinish_ = nil
			arg_380_1.state_ = "waiting"
		end

		function arg_380_1.playNext_(arg_382_0)
			if arg_382_0 == 1 then
				arg_380_0:Play417012091(arg_380_1)
			end
		end

		function arg_380_1.onSingleLineUpdate_(arg_383_0)
			local var_383_0 = arg_380_1.actors_["1034"]
			local var_383_1 = 0

			if var_383_1 < arg_380_1.time_ and arg_380_1.time_ <= var_383_1 + arg_383_0 and not isNil(var_383_0) and arg_380_1.var_.actorSpriteComps1034 == nil then
				arg_380_1.var_.actorSpriteComps1034 = var_383_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_383_2 = 0.2

			if var_383_1 <= arg_380_1.time_ and arg_380_1.time_ < var_383_1 + var_383_2 and not isNil(var_383_0) then
				local var_383_3 = (arg_380_1.time_ - var_383_1) / var_383_2

				if arg_380_1.var_.actorSpriteComps1034 then
					for iter_383_0, iter_383_1 in pairs(arg_380_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_383_1 then
							if arg_380_1.isInRecall_ then
								local var_383_4 = Mathf.Lerp(iter_383_1.color.r, arg_380_1.hightColor1.r, var_383_3)
								local var_383_5 = Mathf.Lerp(iter_383_1.color.g, arg_380_1.hightColor1.g, var_383_3)
								local var_383_6 = Mathf.Lerp(iter_383_1.color.b, arg_380_1.hightColor1.b, var_383_3)

								iter_383_1.color = Color.New(var_383_4, var_383_5, var_383_6)
							else
								local var_383_7 = Mathf.Lerp(iter_383_1.color.r, 1, var_383_3)

								iter_383_1.color = Color.New(var_383_7, var_383_7, var_383_7)
							end
						end
					end
				end
			end

			if arg_380_1.time_ >= var_383_1 + var_383_2 and arg_380_1.time_ < var_383_1 + var_383_2 + arg_383_0 and not isNil(var_383_0) and arg_380_1.var_.actorSpriteComps1034 then
				for iter_383_2, iter_383_3 in pairs(arg_380_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_383_3 then
						if arg_380_1.isInRecall_ then
							iter_383_3.color = arg_380_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_383_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_380_1.var_.actorSpriteComps1034 = nil
			end

			local var_383_8 = arg_380_1.actors_["1034"].transform
			local var_383_9 = 0

			if var_383_9 < arg_380_1.time_ and arg_380_1.time_ <= var_383_9 + arg_383_0 then
				arg_380_1.var_.moveOldPos1034 = var_383_8.localPosition
				var_383_8.localScale = Vector3.New(1, 1, 1)

				arg_380_1:CheckSpriteTmpPos("1034", 3)

				local var_383_10 = var_383_8.childCount

				for iter_383_4 = 0, var_383_10 - 1 do
					local var_383_11 = var_383_8:GetChild(iter_383_4)

					if var_383_11.name == "split_3" or not string.find(var_383_11.name, "split") then
						var_383_11.gameObject:SetActive(true)
					else
						var_383_11.gameObject:SetActive(false)
					end
				end
			end

			local var_383_12 = 0.001

			if var_383_9 <= arg_380_1.time_ and arg_380_1.time_ < var_383_9 + var_383_12 then
				local var_383_13 = (arg_380_1.time_ - var_383_9) / var_383_12
				local var_383_14 = Vector3.New(0, -331.9, -324)

				var_383_8.localPosition = Vector3.Lerp(arg_380_1.var_.moveOldPos1034, var_383_14, var_383_13)
			end

			if arg_380_1.time_ >= var_383_9 + var_383_12 and arg_380_1.time_ < var_383_9 + var_383_12 + arg_383_0 then
				var_383_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_383_15 = 0
			local var_383_16 = 0.7

			if var_383_15 < arg_380_1.time_ and arg_380_1.time_ <= var_383_15 + arg_383_0 then
				arg_380_1.talkMaxDuration = 0
				arg_380_1.dialogCg_.alpha = 1

				arg_380_1.dialog_:SetActive(true)
				SetActive(arg_380_1.leftNameGo_, true)

				local var_383_17 = arg_380_1:FormatText(StoryNameCfg[1109].name)

				arg_380_1.leftNameTxt_.text = var_383_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_380_1.leftNameTxt_.transform)

				arg_380_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_380_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_380_1:RecordName(arg_380_1.leftNameTxt_.text)
				SetActive(arg_380_1.iconTrs_.gameObject, false)
				arg_380_1.callingController_:SetSelectedState("normal")

				local var_383_18 = arg_380_1:GetWordFromCfg(417012090)
				local var_383_19 = arg_380_1:FormatText(var_383_18.content)

				arg_380_1.text_.text = var_383_19

				LuaForUtil.ClearLinePrefixSymbol(arg_380_1.text_)

				local var_383_20 = 28
				local var_383_21 = utf8.len(var_383_19)
				local var_383_22 = var_383_20 <= 0 and var_383_16 or var_383_16 * (var_383_21 / var_383_20)

				if var_383_22 > 0 and var_383_16 < var_383_22 then
					arg_380_1.talkMaxDuration = var_383_22

					if var_383_22 + var_383_15 > arg_380_1.duration_ then
						arg_380_1.duration_ = var_383_22 + var_383_15
					end
				end

				arg_380_1.text_.text = var_383_19
				arg_380_1.typewritter.percent = 0

				arg_380_1.typewritter:SetDirty()
				arg_380_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012090", "story_v_out_417012.awb") ~= 0 then
					local var_383_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012090", "story_v_out_417012.awb") / 1000

					if var_383_23 + var_383_15 > arg_380_1.duration_ then
						arg_380_1.duration_ = var_383_23 + var_383_15
					end

					if var_383_18.prefab_name ~= "" and arg_380_1.actors_[var_383_18.prefab_name] ~= nil then
						local var_383_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_380_1.actors_[var_383_18.prefab_name].transform, "story_v_out_417012", "417012090", "story_v_out_417012.awb")

						arg_380_1:RecordAudio("417012090", var_383_24)
						arg_380_1:RecordAudio("417012090", var_383_24)
					else
						arg_380_1:AudioAction("play", "voice", "story_v_out_417012", "417012090", "story_v_out_417012.awb")
					end

					arg_380_1:RecordHistoryTalkVoice("story_v_out_417012", "417012090", "story_v_out_417012.awb")
				end

				arg_380_1:RecordContent(arg_380_1.text_.text)
			end

			local var_383_25 = math.max(var_383_16, arg_380_1.talkMaxDuration)

			if var_383_15 <= arg_380_1.time_ and arg_380_1.time_ < var_383_15 + var_383_25 then
				arg_380_1.typewritter.percent = (arg_380_1.time_ - var_383_15) / var_383_25

				arg_380_1.typewritter:SetDirty()
			end

			if arg_380_1.time_ >= var_383_15 + var_383_25 and arg_380_1.time_ < var_383_15 + var_383_25 + arg_383_0 then
				arg_380_1.typewritter.percent = 1

				arg_380_1.typewritter:SetDirty()
				arg_380_1:ShowNextGo(true)
			end
		end
	end,
	Play417012091 = function(arg_384_0, arg_384_1)
		arg_384_1.time_ = 0
		arg_384_1.frameCnt_ = 0
		arg_384_1.state_ = "playing"
		arg_384_1.curTalkId_ = 417012091
		arg_384_1.duration_ = 6.5

		local var_384_0 = {
			zh = 6.5,
			ja = 4.6
		}
		local var_384_1 = manager.audio:GetLocalizationFlag()

		if var_384_0[var_384_1] ~= nil then
			arg_384_1.duration_ = var_384_0[var_384_1]
		end

		SetActive(arg_384_1.tipsGo_, false)

		function arg_384_1.onSingleLineFinish_()
			arg_384_1.onSingleLineUpdate_ = nil
			arg_384_1.onSingleLineFinish_ = nil
			arg_384_1.state_ = "waiting"
		end

		function arg_384_1.playNext_(arg_386_0)
			if arg_386_0 == 1 then
				arg_384_0:Play417012092(arg_384_1)
			end
		end

		function arg_384_1.onSingleLineUpdate_(arg_387_0)
			local var_387_0 = arg_384_1.actors_["1034"]
			local var_387_1 = 0

			if var_387_1 < arg_384_1.time_ and arg_384_1.time_ <= var_387_1 + arg_387_0 and not isNil(var_387_0) and arg_384_1.var_.actorSpriteComps1034 == nil then
				arg_384_1.var_.actorSpriteComps1034 = var_387_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_387_2 = 0.2

			if var_387_1 <= arg_384_1.time_ and arg_384_1.time_ < var_387_1 + var_387_2 and not isNil(var_387_0) then
				local var_387_3 = (arg_384_1.time_ - var_387_1) / var_387_2

				if arg_384_1.var_.actorSpriteComps1034 then
					for iter_387_0, iter_387_1 in pairs(arg_384_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_387_1 then
							if arg_384_1.isInRecall_ then
								local var_387_4 = Mathf.Lerp(iter_387_1.color.r, arg_384_1.hightColor2.r, var_387_3)
								local var_387_5 = Mathf.Lerp(iter_387_1.color.g, arg_384_1.hightColor2.g, var_387_3)
								local var_387_6 = Mathf.Lerp(iter_387_1.color.b, arg_384_1.hightColor2.b, var_387_3)

								iter_387_1.color = Color.New(var_387_4, var_387_5, var_387_6)
							else
								local var_387_7 = Mathf.Lerp(iter_387_1.color.r, 0.5, var_387_3)

								iter_387_1.color = Color.New(var_387_7, var_387_7, var_387_7)
							end
						end
					end
				end
			end

			if arg_384_1.time_ >= var_387_1 + var_387_2 and arg_384_1.time_ < var_387_1 + var_387_2 + arg_387_0 and not isNil(var_387_0) and arg_384_1.var_.actorSpriteComps1034 then
				for iter_387_2, iter_387_3 in pairs(arg_384_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_387_3 then
						if arg_384_1.isInRecall_ then
							iter_387_3.color = arg_384_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_387_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_384_1.var_.actorSpriteComps1034 = nil
			end

			local var_387_8 = 0
			local var_387_9 = 0.7

			if var_387_8 < arg_384_1.time_ and arg_384_1.time_ <= var_387_8 + arg_387_0 then
				arg_384_1.talkMaxDuration = 0
				arg_384_1.dialogCg_.alpha = 1

				arg_384_1.dialog_:SetActive(true)
				SetActive(arg_384_1.leftNameGo_, true)

				local var_387_10 = arg_384_1:FormatText(StoryNameCfg[1112].name)

				arg_384_1.leftNameTxt_.text = var_387_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_384_1.leftNameTxt_.transform)

				arg_384_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_384_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_384_1:RecordName(arg_384_1.leftNameTxt_.text)
				SetActive(arg_384_1.iconTrs_.gameObject, true)
				arg_384_1.iconController_:SetSelectedState("hero")

				arg_384_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_384_1.callingController_:SetSelectedState("normal")

				arg_384_1.keyicon_.color = Color.New(1, 1, 1)
				arg_384_1.icon_.color = Color.New(1, 1, 1)

				local var_387_11 = arg_384_1:GetWordFromCfg(417012091)
				local var_387_12 = arg_384_1:FormatText(var_387_11.content)

				arg_384_1.text_.text = var_387_12

				LuaForUtil.ClearLinePrefixSymbol(arg_384_1.text_)

				local var_387_13 = 28
				local var_387_14 = utf8.len(var_387_12)
				local var_387_15 = var_387_13 <= 0 and var_387_9 or var_387_9 * (var_387_14 / var_387_13)

				if var_387_15 > 0 and var_387_9 < var_387_15 then
					arg_384_1.talkMaxDuration = var_387_15

					if var_387_15 + var_387_8 > arg_384_1.duration_ then
						arg_384_1.duration_ = var_387_15 + var_387_8
					end
				end

				arg_384_1.text_.text = var_387_12
				arg_384_1.typewritter.percent = 0

				arg_384_1.typewritter:SetDirty()
				arg_384_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012091", "story_v_out_417012.awb") ~= 0 then
					local var_387_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012091", "story_v_out_417012.awb") / 1000

					if var_387_16 + var_387_8 > arg_384_1.duration_ then
						arg_384_1.duration_ = var_387_16 + var_387_8
					end

					if var_387_11.prefab_name ~= "" and arg_384_1.actors_[var_387_11.prefab_name] ~= nil then
						local var_387_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_384_1.actors_[var_387_11.prefab_name].transform, "story_v_out_417012", "417012091", "story_v_out_417012.awb")

						arg_384_1:RecordAudio("417012091", var_387_17)
						arg_384_1:RecordAudio("417012091", var_387_17)
					else
						arg_384_1:AudioAction("play", "voice", "story_v_out_417012", "417012091", "story_v_out_417012.awb")
					end

					arg_384_1:RecordHistoryTalkVoice("story_v_out_417012", "417012091", "story_v_out_417012.awb")
				end

				arg_384_1:RecordContent(arg_384_1.text_.text)
			end

			local var_387_18 = math.max(var_387_9, arg_384_1.talkMaxDuration)

			if var_387_8 <= arg_384_1.time_ and arg_384_1.time_ < var_387_8 + var_387_18 then
				arg_384_1.typewritter.percent = (arg_384_1.time_ - var_387_8) / var_387_18

				arg_384_1.typewritter:SetDirty()
			end

			if arg_384_1.time_ >= var_387_8 + var_387_18 and arg_384_1.time_ < var_387_8 + var_387_18 + arg_387_0 then
				arg_384_1.typewritter.percent = 1

				arg_384_1.typewritter:SetDirty()
				arg_384_1:ShowNextGo(true)
			end
		end
	end,
	Play417012092 = function(arg_388_0, arg_388_1)
		arg_388_1.time_ = 0
		arg_388_1.frameCnt_ = 0
		arg_388_1.state_ = "playing"
		arg_388_1.curTalkId_ = 417012092
		arg_388_1.duration_ = 5

		SetActive(arg_388_1.tipsGo_, false)

		function arg_388_1.onSingleLineFinish_()
			arg_388_1.onSingleLineUpdate_ = nil
			arg_388_1.onSingleLineFinish_ = nil
			arg_388_1.state_ = "waiting"
		end

		function arg_388_1.playNext_(arg_390_0)
			if arg_390_0 == 1 then
				arg_388_0:Play417012093(arg_388_1)
			end
		end

		function arg_388_1.onSingleLineUpdate_(arg_391_0)
			local var_391_0 = arg_388_1.actors_["1034"].transform
			local var_391_1 = 0

			if var_391_1 < arg_388_1.time_ and arg_388_1.time_ <= var_391_1 + arg_391_0 then
				arg_388_1.var_.moveOldPos1034 = var_391_0.localPosition
				var_391_0.localScale = Vector3.New(1, 1, 1)

				arg_388_1:CheckSpriteTmpPos("1034", 7)

				local var_391_2 = var_391_0.childCount

				for iter_391_0 = 0, var_391_2 - 1 do
					local var_391_3 = var_391_0:GetChild(iter_391_0)

					if var_391_3.name == "" or not string.find(var_391_3.name, "split") then
						var_391_3.gameObject:SetActive(true)
					else
						var_391_3.gameObject:SetActive(false)
					end
				end
			end

			local var_391_4 = 0.001

			if var_391_1 <= arg_388_1.time_ and arg_388_1.time_ < var_391_1 + var_391_4 then
				local var_391_5 = (arg_388_1.time_ - var_391_1) / var_391_4
				local var_391_6 = Vector3.New(0, -2000, 0)

				var_391_0.localPosition = Vector3.Lerp(arg_388_1.var_.moveOldPos1034, var_391_6, var_391_5)
			end

			if arg_388_1.time_ >= var_391_1 + var_391_4 and arg_388_1.time_ < var_391_1 + var_391_4 + arg_391_0 then
				var_391_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_391_7 = 0
			local var_391_8 = 1.15

			if var_391_7 < arg_388_1.time_ and arg_388_1.time_ <= var_391_7 + arg_391_0 then
				arg_388_1.talkMaxDuration = 0
				arg_388_1.dialogCg_.alpha = 1

				arg_388_1.dialog_:SetActive(true)
				SetActive(arg_388_1.leftNameGo_, false)

				arg_388_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_388_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_388_1:RecordName(arg_388_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_388_1.iconTrs_.gameObject, false)
				arg_388_1.callingController_:SetSelectedState("normal")

				local var_391_9 = arg_388_1:GetWordFromCfg(417012092)
				local var_391_10 = arg_388_1:FormatText(var_391_9.content)

				arg_388_1.text_.text = var_391_10

				LuaForUtil.ClearLinePrefixSymbol(arg_388_1.text_)

				local var_391_11 = 46
				local var_391_12 = utf8.len(var_391_10)
				local var_391_13 = var_391_11 <= 0 and var_391_8 or var_391_8 * (var_391_12 / var_391_11)

				if var_391_13 > 0 and var_391_8 < var_391_13 then
					arg_388_1.talkMaxDuration = var_391_13

					if var_391_13 + var_391_7 > arg_388_1.duration_ then
						arg_388_1.duration_ = var_391_13 + var_391_7
					end
				end

				arg_388_1.text_.text = var_391_10
				arg_388_1.typewritter.percent = 0

				arg_388_1.typewritter:SetDirty()
				arg_388_1:ShowNextGo(false)
				arg_388_1:RecordContent(arg_388_1.text_.text)
			end

			local var_391_14 = math.max(var_391_8, arg_388_1.talkMaxDuration)

			if var_391_7 <= arg_388_1.time_ and arg_388_1.time_ < var_391_7 + var_391_14 then
				arg_388_1.typewritter.percent = (arg_388_1.time_ - var_391_7) / var_391_14

				arg_388_1.typewritter:SetDirty()
			end

			if arg_388_1.time_ >= var_391_7 + var_391_14 and arg_388_1.time_ < var_391_7 + var_391_14 + arg_391_0 then
				arg_388_1.typewritter.percent = 1

				arg_388_1.typewritter:SetDirty()
				arg_388_1:ShowNextGo(true)
			end
		end
	end,
	Play417012093 = function(arg_392_0, arg_392_1)
		arg_392_1.time_ = 0
		arg_392_1.frameCnt_ = 0
		arg_392_1.state_ = "playing"
		arg_392_1.curTalkId_ = 417012093
		arg_392_1.duration_ = 4.43

		local var_392_0 = {
			zh = 3.6,
			ja = 4.433
		}
		local var_392_1 = manager.audio:GetLocalizationFlag()

		if var_392_0[var_392_1] ~= nil then
			arg_392_1.duration_ = var_392_0[var_392_1]
		end

		SetActive(arg_392_1.tipsGo_, false)

		function arg_392_1.onSingleLineFinish_()
			arg_392_1.onSingleLineUpdate_ = nil
			arg_392_1.onSingleLineFinish_ = nil
			arg_392_1.state_ = "waiting"
		end

		function arg_392_1.playNext_(arg_394_0)
			if arg_394_0 == 1 then
				arg_392_0:Play417012094(arg_392_1)
			end
		end

		function arg_392_1.onSingleLineUpdate_(arg_395_0)
			local var_395_0 = arg_392_1.actors_["1034"]
			local var_395_1 = 0

			if var_395_1 < arg_392_1.time_ and arg_392_1.time_ <= var_395_1 + arg_395_0 and not isNil(var_395_0) and arg_392_1.var_.actorSpriteComps1034 == nil then
				arg_392_1.var_.actorSpriteComps1034 = var_395_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_395_2 = 0.2

			if var_395_1 <= arg_392_1.time_ and arg_392_1.time_ < var_395_1 + var_395_2 and not isNil(var_395_0) then
				local var_395_3 = (arg_392_1.time_ - var_395_1) / var_395_2

				if arg_392_1.var_.actorSpriteComps1034 then
					for iter_395_0, iter_395_1 in pairs(arg_392_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_395_1 then
							if arg_392_1.isInRecall_ then
								local var_395_4 = Mathf.Lerp(iter_395_1.color.r, arg_392_1.hightColor1.r, var_395_3)
								local var_395_5 = Mathf.Lerp(iter_395_1.color.g, arg_392_1.hightColor1.g, var_395_3)
								local var_395_6 = Mathf.Lerp(iter_395_1.color.b, arg_392_1.hightColor1.b, var_395_3)

								iter_395_1.color = Color.New(var_395_4, var_395_5, var_395_6)
							else
								local var_395_7 = Mathf.Lerp(iter_395_1.color.r, 1, var_395_3)

								iter_395_1.color = Color.New(var_395_7, var_395_7, var_395_7)
							end
						end
					end
				end
			end

			if arg_392_1.time_ >= var_395_1 + var_395_2 and arg_392_1.time_ < var_395_1 + var_395_2 + arg_395_0 and not isNil(var_395_0) and arg_392_1.var_.actorSpriteComps1034 then
				for iter_395_2, iter_395_3 in pairs(arg_392_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_395_3 then
						if arg_392_1.isInRecall_ then
							iter_395_3.color = arg_392_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_395_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_392_1.var_.actorSpriteComps1034 = nil
			end

			local var_395_8 = arg_392_1.actors_["1034"].transform
			local var_395_9 = 0

			if var_395_9 < arg_392_1.time_ and arg_392_1.time_ <= var_395_9 + arg_395_0 then
				arg_392_1.var_.moveOldPos1034 = var_395_8.localPosition
				var_395_8.localScale = Vector3.New(1, 1, 1)

				arg_392_1:CheckSpriteTmpPos("1034", 3)

				local var_395_10 = var_395_8.childCount

				for iter_395_4 = 0, var_395_10 - 1 do
					local var_395_11 = var_395_8:GetChild(iter_395_4)

					if var_395_11.name == "" or not string.find(var_395_11.name, "split") then
						var_395_11.gameObject:SetActive(true)
					else
						var_395_11.gameObject:SetActive(false)
					end
				end
			end

			local var_395_12 = 0.001

			if var_395_9 <= arg_392_1.time_ and arg_392_1.time_ < var_395_9 + var_395_12 then
				local var_395_13 = (arg_392_1.time_ - var_395_9) / var_395_12
				local var_395_14 = Vector3.New(0, -331.9, -324)

				var_395_8.localPosition = Vector3.Lerp(arg_392_1.var_.moveOldPos1034, var_395_14, var_395_13)
			end

			if arg_392_1.time_ >= var_395_9 + var_395_12 and arg_392_1.time_ < var_395_9 + var_395_12 + arg_395_0 then
				var_395_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_395_15 = 0
			local var_395_16 = 0.375

			if var_395_15 < arg_392_1.time_ and arg_392_1.time_ <= var_395_15 + arg_395_0 then
				arg_392_1.talkMaxDuration = 0
				arg_392_1.dialogCg_.alpha = 1

				arg_392_1.dialog_:SetActive(true)
				SetActive(arg_392_1.leftNameGo_, true)

				local var_395_17 = arg_392_1:FormatText(StoryNameCfg[1109].name)

				arg_392_1.leftNameTxt_.text = var_395_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_392_1.leftNameTxt_.transform)

				arg_392_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_392_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_392_1:RecordName(arg_392_1.leftNameTxt_.text)
				SetActive(arg_392_1.iconTrs_.gameObject, false)
				arg_392_1.callingController_:SetSelectedState("normal")

				local var_395_18 = arg_392_1:GetWordFromCfg(417012093)
				local var_395_19 = arg_392_1:FormatText(var_395_18.content)

				arg_392_1.text_.text = var_395_19

				LuaForUtil.ClearLinePrefixSymbol(arg_392_1.text_)

				local var_395_20 = 15
				local var_395_21 = utf8.len(var_395_19)
				local var_395_22 = var_395_20 <= 0 and var_395_16 or var_395_16 * (var_395_21 / var_395_20)

				if var_395_22 > 0 and var_395_16 < var_395_22 then
					arg_392_1.talkMaxDuration = var_395_22

					if var_395_22 + var_395_15 > arg_392_1.duration_ then
						arg_392_1.duration_ = var_395_22 + var_395_15
					end
				end

				arg_392_1.text_.text = var_395_19
				arg_392_1.typewritter.percent = 0

				arg_392_1.typewritter:SetDirty()
				arg_392_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012093", "story_v_out_417012.awb") ~= 0 then
					local var_395_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012093", "story_v_out_417012.awb") / 1000

					if var_395_23 + var_395_15 > arg_392_1.duration_ then
						arg_392_1.duration_ = var_395_23 + var_395_15
					end

					if var_395_18.prefab_name ~= "" and arg_392_1.actors_[var_395_18.prefab_name] ~= nil then
						local var_395_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_392_1.actors_[var_395_18.prefab_name].transform, "story_v_out_417012", "417012093", "story_v_out_417012.awb")

						arg_392_1:RecordAudio("417012093", var_395_24)
						arg_392_1:RecordAudio("417012093", var_395_24)
					else
						arg_392_1:AudioAction("play", "voice", "story_v_out_417012", "417012093", "story_v_out_417012.awb")
					end

					arg_392_1:RecordHistoryTalkVoice("story_v_out_417012", "417012093", "story_v_out_417012.awb")
				end

				arg_392_1:RecordContent(arg_392_1.text_.text)
			end

			local var_395_25 = math.max(var_395_16, arg_392_1.talkMaxDuration)

			if var_395_15 <= arg_392_1.time_ and arg_392_1.time_ < var_395_15 + var_395_25 then
				arg_392_1.typewritter.percent = (arg_392_1.time_ - var_395_15) / var_395_25

				arg_392_1.typewritter:SetDirty()
			end

			if arg_392_1.time_ >= var_395_15 + var_395_25 and arg_392_1.time_ < var_395_15 + var_395_25 + arg_395_0 then
				arg_392_1.typewritter.percent = 1

				arg_392_1.typewritter:SetDirty()
				arg_392_1:ShowNextGo(true)
			end
		end
	end,
	Play417012094 = function(arg_396_0, arg_396_1)
		arg_396_1.time_ = 0
		arg_396_1.frameCnt_ = 0
		arg_396_1.state_ = "playing"
		arg_396_1.curTalkId_ = 417012094
		arg_396_1.duration_ = 9.2

		local var_396_0 = {
			zh = 9.2,
			ja = 8.4
		}
		local var_396_1 = manager.audio:GetLocalizationFlag()

		if var_396_0[var_396_1] ~= nil then
			arg_396_1.duration_ = var_396_0[var_396_1]
		end

		SetActive(arg_396_1.tipsGo_, false)

		function arg_396_1.onSingleLineFinish_()
			arg_396_1.onSingleLineUpdate_ = nil
			arg_396_1.onSingleLineFinish_ = nil
			arg_396_1.state_ = "waiting"
		end

		function arg_396_1.playNext_(arg_398_0)
			if arg_398_0 == 1 then
				arg_396_0:Play417012095(arg_396_1)
			end
		end

		function arg_396_1.onSingleLineUpdate_(arg_399_0)
			local var_399_0 = arg_396_1.actors_["1034"]
			local var_399_1 = 0

			if var_399_1 < arg_396_1.time_ and arg_396_1.time_ <= var_399_1 + arg_399_0 and not isNil(var_399_0) and arg_396_1.var_.actorSpriteComps1034 == nil then
				arg_396_1.var_.actorSpriteComps1034 = var_399_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_399_2 = 0.2

			if var_399_1 <= arg_396_1.time_ and arg_396_1.time_ < var_399_1 + var_399_2 and not isNil(var_399_0) then
				local var_399_3 = (arg_396_1.time_ - var_399_1) / var_399_2

				if arg_396_1.var_.actorSpriteComps1034 then
					for iter_399_0, iter_399_1 in pairs(arg_396_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_399_1 then
							if arg_396_1.isInRecall_ then
								local var_399_4 = Mathf.Lerp(iter_399_1.color.r, arg_396_1.hightColor2.r, var_399_3)
								local var_399_5 = Mathf.Lerp(iter_399_1.color.g, arg_396_1.hightColor2.g, var_399_3)
								local var_399_6 = Mathf.Lerp(iter_399_1.color.b, arg_396_1.hightColor2.b, var_399_3)

								iter_399_1.color = Color.New(var_399_4, var_399_5, var_399_6)
							else
								local var_399_7 = Mathf.Lerp(iter_399_1.color.r, 0.5, var_399_3)

								iter_399_1.color = Color.New(var_399_7, var_399_7, var_399_7)
							end
						end
					end
				end
			end

			if arg_396_1.time_ >= var_399_1 + var_399_2 and arg_396_1.time_ < var_399_1 + var_399_2 + arg_399_0 and not isNil(var_399_0) and arg_396_1.var_.actorSpriteComps1034 then
				for iter_399_2, iter_399_3 in pairs(arg_396_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_399_3 then
						if arg_396_1.isInRecall_ then
							iter_399_3.color = arg_396_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_399_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_396_1.var_.actorSpriteComps1034 = nil
			end

			local var_399_8 = 0
			local var_399_9 = 1.1

			if var_399_8 < arg_396_1.time_ and arg_396_1.time_ <= var_399_8 + arg_399_0 then
				arg_396_1.talkMaxDuration = 0
				arg_396_1.dialogCg_.alpha = 1

				arg_396_1.dialog_:SetActive(true)
				SetActive(arg_396_1.leftNameGo_, true)

				local var_399_10 = arg_396_1:FormatText(StoryNameCfg[1112].name)

				arg_396_1.leftNameTxt_.text = var_399_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_396_1.leftNameTxt_.transform)

				arg_396_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_396_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_396_1:RecordName(arg_396_1.leftNameTxt_.text)
				SetActive(arg_396_1.iconTrs_.gameObject, true)
				arg_396_1.iconController_:SetSelectedState("hero")

				arg_396_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_396_1.callingController_:SetSelectedState("normal")

				arg_396_1.keyicon_.color = Color.New(1, 1, 1)
				arg_396_1.icon_.color = Color.New(1, 1, 1)

				local var_399_11 = arg_396_1:GetWordFromCfg(417012094)
				local var_399_12 = arg_396_1:FormatText(var_399_11.content)

				arg_396_1.text_.text = var_399_12

				LuaForUtil.ClearLinePrefixSymbol(arg_396_1.text_)

				local var_399_13 = 44
				local var_399_14 = utf8.len(var_399_12)
				local var_399_15 = var_399_13 <= 0 and var_399_9 or var_399_9 * (var_399_14 / var_399_13)

				if var_399_15 > 0 and var_399_9 < var_399_15 then
					arg_396_1.talkMaxDuration = var_399_15

					if var_399_15 + var_399_8 > arg_396_1.duration_ then
						arg_396_1.duration_ = var_399_15 + var_399_8
					end
				end

				arg_396_1.text_.text = var_399_12
				arg_396_1.typewritter.percent = 0

				arg_396_1.typewritter:SetDirty()
				arg_396_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012094", "story_v_out_417012.awb") ~= 0 then
					local var_399_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012094", "story_v_out_417012.awb") / 1000

					if var_399_16 + var_399_8 > arg_396_1.duration_ then
						arg_396_1.duration_ = var_399_16 + var_399_8
					end

					if var_399_11.prefab_name ~= "" and arg_396_1.actors_[var_399_11.prefab_name] ~= nil then
						local var_399_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_396_1.actors_[var_399_11.prefab_name].transform, "story_v_out_417012", "417012094", "story_v_out_417012.awb")

						arg_396_1:RecordAudio("417012094", var_399_17)
						arg_396_1:RecordAudio("417012094", var_399_17)
					else
						arg_396_1:AudioAction("play", "voice", "story_v_out_417012", "417012094", "story_v_out_417012.awb")
					end

					arg_396_1:RecordHistoryTalkVoice("story_v_out_417012", "417012094", "story_v_out_417012.awb")
				end

				arg_396_1:RecordContent(arg_396_1.text_.text)
			end

			local var_399_18 = math.max(var_399_9, arg_396_1.talkMaxDuration)

			if var_399_8 <= arg_396_1.time_ and arg_396_1.time_ < var_399_8 + var_399_18 then
				arg_396_1.typewritter.percent = (arg_396_1.time_ - var_399_8) / var_399_18

				arg_396_1.typewritter:SetDirty()
			end

			if arg_396_1.time_ >= var_399_8 + var_399_18 and arg_396_1.time_ < var_399_8 + var_399_18 + arg_399_0 then
				arg_396_1.typewritter.percent = 1

				arg_396_1.typewritter:SetDirty()
				arg_396_1:ShowNextGo(true)
			end
		end
	end,
	Play417012095 = function(arg_400_0, arg_400_1)
		arg_400_1.time_ = 0
		arg_400_1.frameCnt_ = 0
		arg_400_1.state_ = "playing"
		arg_400_1.curTalkId_ = 417012095
		arg_400_1.duration_ = 10.67

		local var_400_0 = {
			zh = 7.4,
			ja = 10.666
		}
		local var_400_1 = manager.audio:GetLocalizationFlag()

		if var_400_0[var_400_1] ~= nil then
			arg_400_1.duration_ = var_400_0[var_400_1]
		end

		SetActive(arg_400_1.tipsGo_, false)

		function arg_400_1.onSingleLineFinish_()
			arg_400_1.onSingleLineUpdate_ = nil
			arg_400_1.onSingleLineFinish_ = nil
			arg_400_1.state_ = "waiting"
		end

		function arg_400_1.playNext_(arg_402_0)
			if arg_402_0 == 1 then
				arg_400_0:Play417012096(arg_400_1)
			end
		end

		function arg_400_1.onSingleLineUpdate_(arg_403_0)
			local var_403_0 = arg_400_1.actors_["1034"]
			local var_403_1 = 0

			if var_403_1 < arg_400_1.time_ and arg_400_1.time_ <= var_403_1 + arg_403_0 and not isNil(var_403_0) and arg_400_1.var_.actorSpriteComps1034 == nil then
				arg_400_1.var_.actorSpriteComps1034 = var_403_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_403_2 = 0.2

			if var_403_1 <= arg_400_1.time_ and arg_400_1.time_ < var_403_1 + var_403_2 and not isNil(var_403_0) then
				local var_403_3 = (arg_400_1.time_ - var_403_1) / var_403_2

				if arg_400_1.var_.actorSpriteComps1034 then
					for iter_403_0, iter_403_1 in pairs(arg_400_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_403_1 then
							if arg_400_1.isInRecall_ then
								local var_403_4 = Mathf.Lerp(iter_403_1.color.r, arg_400_1.hightColor1.r, var_403_3)
								local var_403_5 = Mathf.Lerp(iter_403_1.color.g, arg_400_1.hightColor1.g, var_403_3)
								local var_403_6 = Mathf.Lerp(iter_403_1.color.b, arg_400_1.hightColor1.b, var_403_3)

								iter_403_1.color = Color.New(var_403_4, var_403_5, var_403_6)
							else
								local var_403_7 = Mathf.Lerp(iter_403_1.color.r, 1, var_403_3)

								iter_403_1.color = Color.New(var_403_7, var_403_7, var_403_7)
							end
						end
					end
				end
			end

			if arg_400_1.time_ >= var_403_1 + var_403_2 and arg_400_1.time_ < var_403_1 + var_403_2 + arg_403_0 and not isNil(var_403_0) and arg_400_1.var_.actorSpriteComps1034 then
				for iter_403_2, iter_403_3 in pairs(arg_400_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_403_3 then
						if arg_400_1.isInRecall_ then
							iter_403_3.color = arg_400_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_403_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_400_1.var_.actorSpriteComps1034 = nil
			end

			local var_403_8 = 0
			local var_403_9 = 0.925

			if var_403_8 < arg_400_1.time_ and arg_400_1.time_ <= var_403_8 + arg_403_0 then
				arg_400_1.talkMaxDuration = 0
				arg_400_1.dialogCg_.alpha = 1

				arg_400_1.dialog_:SetActive(true)
				SetActive(arg_400_1.leftNameGo_, true)

				local var_403_10 = arg_400_1:FormatText(StoryNameCfg[1109].name)

				arg_400_1.leftNameTxt_.text = var_403_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_400_1.leftNameTxt_.transform)

				arg_400_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_400_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_400_1:RecordName(arg_400_1.leftNameTxt_.text)
				SetActive(arg_400_1.iconTrs_.gameObject, false)
				arg_400_1.callingController_:SetSelectedState("normal")

				local var_403_11 = arg_400_1:GetWordFromCfg(417012095)
				local var_403_12 = arg_400_1:FormatText(var_403_11.content)

				arg_400_1.text_.text = var_403_12

				LuaForUtil.ClearLinePrefixSymbol(arg_400_1.text_)

				local var_403_13 = 37
				local var_403_14 = utf8.len(var_403_12)
				local var_403_15 = var_403_13 <= 0 and var_403_9 or var_403_9 * (var_403_14 / var_403_13)

				if var_403_15 > 0 and var_403_9 < var_403_15 then
					arg_400_1.talkMaxDuration = var_403_15

					if var_403_15 + var_403_8 > arg_400_1.duration_ then
						arg_400_1.duration_ = var_403_15 + var_403_8
					end
				end

				arg_400_1.text_.text = var_403_12
				arg_400_1.typewritter.percent = 0

				arg_400_1.typewritter:SetDirty()
				arg_400_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012095", "story_v_out_417012.awb") ~= 0 then
					local var_403_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012095", "story_v_out_417012.awb") / 1000

					if var_403_16 + var_403_8 > arg_400_1.duration_ then
						arg_400_1.duration_ = var_403_16 + var_403_8
					end

					if var_403_11.prefab_name ~= "" and arg_400_1.actors_[var_403_11.prefab_name] ~= nil then
						local var_403_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_400_1.actors_[var_403_11.prefab_name].transform, "story_v_out_417012", "417012095", "story_v_out_417012.awb")

						arg_400_1:RecordAudio("417012095", var_403_17)
						arg_400_1:RecordAudio("417012095", var_403_17)
					else
						arg_400_1:AudioAction("play", "voice", "story_v_out_417012", "417012095", "story_v_out_417012.awb")
					end

					arg_400_1:RecordHistoryTalkVoice("story_v_out_417012", "417012095", "story_v_out_417012.awb")
				end

				arg_400_1:RecordContent(arg_400_1.text_.text)
			end

			local var_403_18 = math.max(var_403_9, arg_400_1.talkMaxDuration)

			if var_403_8 <= arg_400_1.time_ and arg_400_1.time_ < var_403_8 + var_403_18 then
				arg_400_1.typewritter.percent = (arg_400_1.time_ - var_403_8) / var_403_18

				arg_400_1.typewritter:SetDirty()
			end

			if arg_400_1.time_ >= var_403_8 + var_403_18 and arg_400_1.time_ < var_403_8 + var_403_18 + arg_403_0 then
				arg_400_1.typewritter.percent = 1

				arg_400_1.typewritter:SetDirty()
				arg_400_1:ShowNextGo(true)
			end
		end
	end,
	Play417012096 = function(arg_404_0, arg_404_1)
		arg_404_1.time_ = 0
		arg_404_1.frameCnt_ = 0
		arg_404_1.state_ = "playing"
		arg_404_1.curTalkId_ = 417012096
		arg_404_1.duration_ = 6.7

		local var_404_0 = {
			zh = 6.2,
			ja = 6.7
		}
		local var_404_1 = manager.audio:GetLocalizationFlag()

		if var_404_0[var_404_1] ~= nil then
			arg_404_1.duration_ = var_404_0[var_404_1]
		end

		SetActive(arg_404_1.tipsGo_, false)

		function arg_404_1.onSingleLineFinish_()
			arg_404_1.onSingleLineUpdate_ = nil
			arg_404_1.onSingleLineFinish_ = nil
			arg_404_1.state_ = "waiting"
		end

		function arg_404_1.playNext_(arg_406_0)
			if arg_406_0 == 1 then
				arg_404_0:Play417012097(arg_404_1)
			end
		end

		function arg_404_1.onSingleLineUpdate_(arg_407_0)
			local var_407_0 = 0
			local var_407_1 = 0.675

			if var_407_0 < arg_404_1.time_ and arg_404_1.time_ <= var_407_0 + arg_407_0 then
				arg_404_1.talkMaxDuration = 0
				arg_404_1.dialogCg_.alpha = 1

				arg_404_1.dialog_:SetActive(true)
				SetActive(arg_404_1.leftNameGo_, true)

				local var_407_2 = arg_404_1:FormatText(StoryNameCfg[1109].name)

				arg_404_1.leftNameTxt_.text = var_407_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_404_1.leftNameTxt_.transform)

				arg_404_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_404_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_404_1:RecordName(arg_404_1.leftNameTxt_.text)
				SetActive(arg_404_1.iconTrs_.gameObject, false)
				arg_404_1.callingController_:SetSelectedState("normal")

				local var_407_3 = arg_404_1:GetWordFromCfg(417012096)
				local var_407_4 = arg_404_1:FormatText(var_407_3.content)

				arg_404_1.text_.text = var_407_4

				LuaForUtil.ClearLinePrefixSymbol(arg_404_1.text_)

				local var_407_5 = 27
				local var_407_6 = utf8.len(var_407_4)
				local var_407_7 = var_407_5 <= 0 and var_407_1 or var_407_1 * (var_407_6 / var_407_5)

				if var_407_7 > 0 and var_407_1 < var_407_7 then
					arg_404_1.talkMaxDuration = var_407_7

					if var_407_7 + var_407_0 > arg_404_1.duration_ then
						arg_404_1.duration_ = var_407_7 + var_407_0
					end
				end

				arg_404_1.text_.text = var_407_4
				arg_404_1.typewritter.percent = 0

				arg_404_1.typewritter:SetDirty()
				arg_404_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012096", "story_v_out_417012.awb") ~= 0 then
					local var_407_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012096", "story_v_out_417012.awb") / 1000

					if var_407_8 + var_407_0 > arg_404_1.duration_ then
						arg_404_1.duration_ = var_407_8 + var_407_0
					end

					if var_407_3.prefab_name ~= "" and arg_404_1.actors_[var_407_3.prefab_name] ~= nil then
						local var_407_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_404_1.actors_[var_407_3.prefab_name].transform, "story_v_out_417012", "417012096", "story_v_out_417012.awb")

						arg_404_1:RecordAudio("417012096", var_407_9)
						arg_404_1:RecordAudio("417012096", var_407_9)
					else
						arg_404_1:AudioAction("play", "voice", "story_v_out_417012", "417012096", "story_v_out_417012.awb")
					end

					arg_404_1:RecordHistoryTalkVoice("story_v_out_417012", "417012096", "story_v_out_417012.awb")
				end

				arg_404_1:RecordContent(arg_404_1.text_.text)
			end

			local var_407_10 = math.max(var_407_1, arg_404_1.talkMaxDuration)

			if var_407_0 <= arg_404_1.time_ and arg_404_1.time_ < var_407_0 + var_407_10 then
				arg_404_1.typewritter.percent = (arg_404_1.time_ - var_407_0) / var_407_10

				arg_404_1.typewritter:SetDirty()
			end

			if arg_404_1.time_ >= var_407_0 + var_407_10 and arg_404_1.time_ < var_407_0 + var_407_10 + arg_407_0 then
				arg_404_1.typewritter.percent = 1

				arg_404_1.typewritter:SetDirty()
				arg_404_1:ShowNextGo(true)
			end
		end
	end,
	Play417012097 = function(arg_408_0, arg_408_1)
		arg_408_1.time_ = 0
		arg_408_1.frameCnt_ = 0
		arg_408_1.state_ = "playing"
		arg_408_1.curTalkId_ = 417012097
		arg_408_1.duration_ = 3.37

		local var_408_0 = {
			zh = 2.9,
			ja = 3.366
		}
		local var_408_1 = manager.audio:GetLocalizationFlag()

		if var_408_0[var_408_1] ~= nil then
			arg_408_1.duration_ = var_408_0[var_408_1]
		end

		SetActive(arg_408_1.tipsGo_, false)

		function arg_408_1.onSingleLineFinish_()
			arg_408_1.onSingleLineUpdate_ = nil
			arg_408_1.onSingleLineFinish_ = nil
			arg_408_1.state_ = "waiting"
		end

		function arg_408_1.playNext_(arg_410_0)
			if arg_410_0 == 1 then
				arg_408_0:Play417012098(arg_408_1)
			end
		end

		function arg_408_1.onSingleLineUpdate_(arg_411_0)
			local var_411_0 = arg_408_1.actors_["1034"]
			local var_411_1 = 0

			if var_411_1 < arg_408_1.time_ and arg_408_1.time_ <= var_411_1 + arg_411_0 and not isNil(var_411_0) and arg_408_1.var_.actorSpriteComps1034 == nil then
				arg_408_1.var_.actorSpriteComps1034 = var_411_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_411_2 = 0.2

			if var_411_1 <= arg_408_1.time_ and arg_408_1.time_ < var_411_1 + var_411_2 and not isNil(var_411_0) then
				local var_411_3 = (arg_408_1.time_ - var_411_1) / var_411_2

				if arg_408_1.var_.actorSpriteComps1034 then
					for iter_411_0, iter_411_1 in pairs(arg_408_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_411_1 then
							if arg_408_1.isInRecall_ then
								local var_411_4 = Mathf.Lerp(iter_411_1.color.r, arg_408_1.hightColor2.r, var_411_3)
								local var_411_5 = Mathf.Lerp(iter_411_1.color.g, arg_408_1.hightColor2.g, var_411_3)
								local var_411_6 = Mathf.Lerp(iter_411_1.color.b, arg_408_1.hightColor2.b, var_411_3)

								iter_411_1.color = Color.New(var_411_4, var_411_5, var_411_6)
							else
								local var_411_7 = Mathf.Lerp(iter_411_1.color.r, 0.5, var_411_3)

								iter_411_1.color = Color.New(var_411_7, var_411_7, var_411_7)
							end
						end
					end
				end
			end

			if arg_408_1.time_ >= var_411_1 + var_411_2 and arg_408_1.time_ < var_411_1 + var_411_2 + arg_411_0 and not isNil(var_411_0) and arg_408_1.var_.actorSpriteComps1034 then
				for iter_411_2, iter_411_3 in pairs(arg_408_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_411_3 then
						if arg_408_1.isInRecall_ then
							iter_411_3.color = arg_408_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_411_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_408_1.var_.actorSpriteComps1034 = nil
			end

			local var_411_8 = 0
			local var_411_9 = 0.25

			if var_411_8 < arg_408_1.time_ and arg_408_1.time_ <= var_411_8 + arg_411_0 then
				arg_408_1.talkMaxDuration = 0
				arg_408_1.dialogCg_.alpha = 1

				arg_408_1.dialog_:SetActive(true)
				SetActive(arg_408_1.leftNameGo_, true)

				local var_411_10 = arg_408_1:FormatText(StoryNameCfg[1112].name)

				arg_408_1.leftNameTxt_.text = var_411_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_408_1.leftNameTxt_.transform)

				arg_408_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_408_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_408_1:RecordName(arg_408_1.leftNameTxt_.text)
				SetActive(arg_408_1.iconTrs_.gameObject, true)
				arg_408_1.iconController_:SetSelectedState("hero")

				arg_408_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_408_1.callingController_:SetSelectedState("normal")

				arg_408_1.keyicon_.color = Color.New(1, 1, 1)
				arg_408_1.icon_.color = Color.New(1, 1, 1)

				local var_411_11 = arg_408_1:GetWordFromCfg(417012097)
				local var_411_12 = arg_408_1:FormatText(var_411_11.content)

				arg_408_1.text_.text = var_411_12

				LuaForUtil.ClearLinePrefixSymbol(arg_408_1.text_)

				local var_411_13 = 9
				local var_411_14 = utf8.len(var_411_12)
				local var_411_15 = var_411_13 <= 0 and var_411_9 or var_411_9 * (var_411_14 / var_411_13)

				if var_411_15 > 0 and var_411_9 < var_411_15 then
					arg_408_1.talkMaxDuration = var_411_15

					if var_411_15 + var_411_8 > arg_408_1.duration_ then
						arg_408_1.duration_ = var_411_15 + var_411_8
					end
				end

				arg_408_1.text_.text = var_411_12
				arg_408_1.typewritter.percent = 0

				arg_408_1.typewritter:SetDirty()
				arg_408_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012097", "story_v_out_417012.awb") ~= 0 then
					local var_411_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012097", "story_v_out_417012.awb") / 1000

					if var_411_16 + var_411_8 > arg_408_1.duration_ then
						arg_408_1.duration_ = var_411_16 + var_411_8
					end

					if var_411_11.prefab_name ~= "" and arg_408_1.actors_[var_411_11.prefab_name] ~= nil then
						local var_411_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_408_1.actors_[var_411_11.prefab_name].transform, "story_v_out_417012", "417012097", "story_v_out_417012.awb")

						arg_408_1:RecordAudio("417012097", var_411_17)
						arg_408_1:RecordAudio("417012097", var_411_17)
					else
						arg_408_1:AudioAction("play", "voice", "story_v_out_417012", "417012097", "story_v_out_417012.awb")
					end

					arg_408_1:RecordHistoryTalkVoice("story_v_out_417012", "417012097", "story_v_out_417012.awb")
				end

				arg_408_1:RecordContent(arg_408_1.text_.text)
			end

			local var_411_18 = math.max(var_411_9, arg_408_1.talkMaxDuration)

			if var_411_8 <= arg_408_1.time_ and arg_408_1.time_ < var_411_8 + var_411_18 then
				arg_408_1.typewritter.percent = (arg_408_1.time_ - var_411_8) / var_411_18

				arg_408_1.typewritter:SetDirty()
			end

			if arg_408_1.time_ >= var_411_8 + var_411_18 and arg_408_1.time_ < var_411_8 + var_411_18 + arg_411_0 then
				arg_408_1.typewritter.percent = 1

				arg_408_1.typewritter:SetDirty()
				arg_408_1:ShowNextGo(true)
			end
		end
	end,
	Play417012098 = function(arg_412_0, arg_412_1)
		arg_412_1.time_ = 0
		arg_412_1.frameCnt_ = 0
		arg_412_1.state_ = "playing"
		arg_412_1.curTalkId_ = 417012098
		arg_412_1.duration_ = 5.6

		local var_412_0 = {
			zh = 5,
			ja = 5.6
		}
		local var_412_1 = manager.audio:GetLocalizationFlag()

		if var_412_0[var_412_1] ~= nil then
			arg_412_1.duration_ = var_412_0[var_412_1]
		end

		SetActive(arg_412_1.tipsGo_, false)

		function arg_412_1.onSingleLineFinish_()
			arg_412_1.onSingleLineUpdate_ = nil
			arg_412_1.onSingleLineFinish_ = nil
			arg_412_1.state_ = "waiting"
		end

		function arg_412_1.playNext_(arg_414_0)
			if arg_414_0 == 1 then
				arg_412_0:Play417012099(arg_412_1)
			end
		end

		function arg_412_1.onSingleLineUpdate_(arg_415_0)
			local var_415_0 = 0
			local var_415_1 = 0.55

			if var_415_0 < arg_412_1.time_ and arg_412_1.time_ <= var_415_0 + arg_415_0 then
				arg_412_1.talkMaxDuration = 0
				arg_412_1.dialogCg_.alpha = 1

				arg_412_1.dialog_:SetActive(true)
				SetActive(arg_412_1.leftNameGo_, true)

				local var_415_2 = arg_412_1:FormatText(StoryNameCfg[1112].name)

				arg_412_1.leftNameTxt_.text = var_415_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_412_1.leftNameTxt_.transform)

				arg_412_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_412_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_412_1:RecordName(arg_412_1.leftNameTxt_.text)
				SetActive(arg_412_1.iconTrs_.gameObject, true)
				arg_412_1.iconController_:SetSelectedState("hero")

				arg_412_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_412_1.callingController_:SetSelectedState("normal")

				arg_412_1.keyicon_.color = Color.New(1, 1, 1)
				arg_412_1.icon_.color = Color.New(1, 1, 1)

				local var_415_3 = arg_412_1:GetWordFromCfg(417012098)
				local var_415_4 = arg_412_1:FormatText(var_415_3.content)

				arg_412_1.text_.text = var_415_4

				LuaForUtil.ClearLinePrefixSymbol(arg_412_1.text_)

				local var_415_5 = 22
				local var_415_6 = utf8.len(var_415_4)
				local var_415_7 = var_415_5 <= 0 and var_415_1 or var_415_1 * (var_415_6 / var_415_5)

				if var_415_7 > 0 and var_415_1 < var_415_7 then
					arg_412_1.talkMaxDuration = var_415_7

					if var_415_7 + var_415_0 > arg_412_1.duration_ then
						arg_412_1.duration_ = var_415_7 + var_415_0
					end
				end

				arg_412_1.text_.text = var_415_4
				arg_412_1.typewritter.percent = 0

				arg_412_1.typewritter:SetDirty()
				arg_412_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012098", "story_v_out_417012.awb") ~= 0 then
					local var_415_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012098", "story_v_out_417012.awb") / 1000

					if var_415_8 + var_415_0 > arg_412_1.duration_ then
						arg_412_1.duration_ = var_415_8 + var_415_0
					end

					if var_415_3.prefab_name ~= "" and arg_412_1.actors_[var_415_3.prefab_name] ~= nil then
						local var_415_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_412_1.actors_[var_415_3.prefab_name].transform, "story_v_out_417012", "417012098", "story_v_out_417012.awb")

						arg_412_1:RecordAudio("417012098", var_415_9)
						arg_412_1:RecordAudio("417012098", var_415_9)
					else
						arg_412_1:AudioAction("play", "voice", "story_v_out_417012", "417012098", "story_v_out_417012.awb")
					end

					arg_412_1:RecordHistoryTalkVoice("story_v_out_417012", "417012098", "story_v_out_417012.awb")
				end

				arg_412_1:RecordContent(arg_412_1.text_.text)
			end

			local var_415_10 = math.max(var_415_1, arg_412_1.talkMaxDuration)

			if var_415_0 <= arg_412_1.time_ and arg_412_1.time_ < var_415_0 + var_415_10 then
				arg_412_1.typewritter.percent = (arg_412_1.time_ - var_415_0) / var_415_10

				arg_412_1.typewritter:SetDirty()
			end

			if arg_412_1.time_ >= var_415_0 + var_415_10 and arg_412_1.time_ < var_415_0 + var_415_10 + arg_415_0 then
				arg_412_1.typewritter.percent = 1

				arg_412_1.typewritter:SetDirty()
				arg_412_1:ShowNextGo(true)
			end
		end
	end,
	Play417012099 = function(arg_416_0, arg_416_1)
		arg_416_1.time_ = 0
		arg_416_1.frameCnt_ = 0
		arg_416_1.state_ = "playing"
		arg_416_1.curTalkId_ = 417012099
		arg_416_1.duration_ = 7.1

		local var_416_0 = {
			zh = 6.3,
			ja = 7.1
		}
		local var_416_1 = manager.audio:GetLocalizationFlag()

		if var_416_0[var_416_1] ~= nil then
			arg_416_1.duration_ = var_416_0[var_416_1]
		end

		SetActive(arg_416_1.tipsGo_, false)

		function arg_416_1.onSingleLineFinish_()
			arg_416_1.onSingleLineUpdate_ = nil
			arg_416_1.onSingleLineFinish_ = nil
			arg_416_1.state_ = "waiting"
		end

		function arg_416_1.playNext_(arg_418_0)
			if arg_418_0 == 1 then
				arg_416_0:Play417012100(arg_416_1)
			end
		end

		function arg_416_1.onSingleLineUpdate_(arg_419_0)
			local var_419_0 = arg_416_1.actors_["1034"]
			local var_419_1 = 0

			if var_419_1 < arg_416_1.time_ and arg_416_1.time_ <= var_419_1 + arg_419_0 and not isNil(var_419_0) and arg_416_1.var_.actorSpriteComps1034 == nil then
				arg_416_1.var_.actorSpriteComps1034 = var_419_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_419_2 = 0.2

			if var_419_1 <= arg_416_1.time_ and arg_416_1.time_ < var_419_1 + var_419_2 and not isNil(var_419_0) then
				local var_419_3 = (arg_416_1.time_ - var_419_1) / var_419_2

				if arg_416_1.var_.actorSpriteComps1034 then
					for iter_419_0, iter_419_1 in pairs(arg_416_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_419_1 then
							if arg_416_1.isInRecall_ then
								local var_419_4 = Mathf.Lerp(iter_419_1.color.r, arg_416_1.hightColor1.r, var_419_3)
								local var_419_5 = Mathf.Lerp(iter_419_1.color.g, arg_416_1.hightColor1.g, var_419_3)
								local var_419_6 = Mathf.Lerp(iter_419_1.color.b, arg_416_1.hightColor1.b, var_419_3)

								iter_419_1.color = Color.New(var_419_4, var_419_5, var_419_6)
							else
								local var_419_7 = Mathf.Lerp(iter_419_1.color.r, 1, var_419_3)

								iter_419_1.color = Color.New(var_419_7, var_419_7, var_419_7)
							end
						end
					end
				end
			end

			if arg_416_1.time_ >= var_419_1 + var_419_2 and arg_416_1.time_ < var_419_1 + var_419_2 + arg_419_0 and not isNil(var_419_0) and arg_416_1.var_.actorSpriteComps1034 then
				for iter_419_2, iter_419_3 in pairs(arg_416_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_419_3 then
						if arg_416_1.isInRecall_ then
							iter_419_3.color = arg_416_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_419_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_416_1.var_.actorSpriteComps1034 = nil
			end

			local var_419_8 = arg_416_1.actors_["1034"].transform
			local var_419_9 = 0

			if var_419_9 < arg_416_1.time_ and arg_416_1.time_ <= var_419_9 + arg_419_0 then
				arg_416_1.var_.moveOldPos1034 = var_419_8.localPosition
				var_419_8.localScale = Vector3.New(1, 1, 1)

				arg_416_1:CheckSpriteTmpPos("1034", 3)

				local var_419_10 = var_419_8.childCount

				for iter_419_4 = 0, var_419_10 - 1 do
					local var_419_11 = var_419_8:GetChild(iter_419_4)

					if var_419_11.name == "" or not string.find(var_419_11.name, "split") then
						var_419_11.gameObject:SetActive(true)
					else
						var_419_11.gameObject:SetActive(false)
					end
				end
			end

			local var_419_12 = 0.001

			if var_419_9 <= arg_416_1.time_ and arg_416_1.time_ < var_419_9 + var_419_12 then
				local var_419_13 = (arg_416_1.time_ - var_419_9) / var_419_12
				local var_419_14 = Vector3.New(0, -331.9, -324)

				var_419_8.localPosition = Vector3.Lerp(arg_416_1.var_.moveOldPos1034, var_419_14, var_419_13)
			end

			if arg_416_1.time_ >= var_419_9 + var_419_12 and arg_416_1.time_ < var_419_9 + var_419_12 + arg_419_0 then
				var_419_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_419_15 = 0
			local var_419_16 = 0.8

			if var_419_15 < arg_416_1.time_ and arg_416_1.time_ <= var_419_15 + arg_419_0 then
				arg_416_1.talkMaxDuration = 0
				arg_416_1.dialogCg_.alpha = 1

				arg_416_1.dialog_:SetActive(true)
				SetActive(arg_416_1.leftNameGo_, true)

				local var_419_17 = arg_416_1:FormatText(StoryNameCfg[1109].name)

				arg_416_1.leftNameTxt_.text = var_419_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_416_1.leftNameTxt_.transform)

				arg_416_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_416_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_416_1:RecordName(arg_416_1.leftNameTxt_.text)
				SetActive(arg_416_1.iconTrs_.gameObject, false)
				arg_416_1.callingController_:SetSelectedState("normal")

				local var_419_18 = arg_416_1:GetWordFromCfg(417012099)
				local var_419_19 = arg_416_1:FormatText(var_419_18.content)

				arg_416_1.text_.text = var_419_19

				LuaForUtil.ClearLinePrefixSymbol(arg_416_1.text_)

				local var_419_20 = 32
				local var_419_21 = utf8.len(var_419_19)
				local var_419_22 = var_419_20 <= 0 and var_419_16 or var_419_16 * (var_419_21 / var_419_20)

				if var_419_22 > 0 and var_419_16 < var_419_22 then
					arg_416_1.talkMaxDuration = var_419_22

					if var_419_22 + var_419_15 > arg_416_1.duration_ then
						arg_416_1.duration_ = var_419_22 + var_419_15
					end
				end

				arg_416_1.text_.text = var_419_19
				arg_416_1.typewritter.percent = 0

				arg_416_1.typewritter:SetDirty()
				arg_416_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012099", "story_v_out_417012.awb") ~= 0 then
					local var_419_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012099", "story_v_out_417012.awb") / 1000

					if var_419_23 + var_419_15 > arg_416_1.duration_ then
						arg_416_1.duration_ = var_419_23 + var_419_15
					end

					if var_419_18.prefab_name ~= "" and arg_416_1.actors_[var_419_18.prefab_name] ~= nil then
						local var_419_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_416_1.actors_[var_419_18.prefab_name].transform, "story_v_out_417012", "417012099", "story_v_out_417012.awb")

						arg_416_1:RecordAudio("417012099", var_419_24)
						arg_416_1:RecordAudio("417012099", var_419_24)
					else
						arg_416_1:AudioAction("play", "voice", "story_v_out_417012", "417012099", "story_v_out_417012.awb")
					end

					arg_416_1:RecordHistoryTalkVoice("story_v_out_417012", "417012099", "story_v_out_417012.awb")
				end

				arg_416_1:RecordContent(arg_416_1.text_.text)
			end

			local var_419_25 = math.max(var_419_16, arg_416_1.talkMaxDuration)

			if var_419_15 <= arg_416_1.time_ and arg_416_1.time_ < var_419_15 + var_419_25 then
				arg_416_1.typewritter.percent = (arg_416_1.time_ - var_419_15) / var_419_25

				arg_416_1.typewritter:SetDirty()
			end

			if arg_416_1.time_ >= var_419_15 + var_419_25 and arg_416_1.time_ < var_419_15 + var_419_25 + arg_419_0 then
				arg_416_1.typewritter.percent = 1

				arg_416_1.typewritter:SetDirty()
				arg_416_1:ShowNextGo(true)
			end
		end
	end,
	Play417012100 = function(arg_420_0, arg_420_1)
		arg_420_1.time_ = 0
		arg_420_1.frameCnt_ = 0
		arg_420_1.state_ = "playing"
		arg_420_1.curTalkId_ = 417012100
		arg_420_1.duration_ = 1.83

		local var_420_0 = {
			zh = 1.466,
			ja = 1.833
		}
		local var_420_1 = manager.audio:GetLocalizationFlag()

		if var_420_0[var_420_1] ~= nil then
			arg_420_1.duration_ = var_420_0[var_420_1]
		end

		SetActive(arg_420_1.tipsGo_, false)

		function arg_420_1.onSingleLineFinish_()
			arg_420_1.onSingleLineUpdate_ = nil
			arg_420_1.onSingleLineFinish_ = nil
			arg_420_1.state_ = "waiting"
		end

		function arg_420_1.playNext_(arg_422_0)
			if arg_422_0 == 1 then
				arg_420_0:Play417012101(arg_420_1)
			end
		end

		function arg_420_1.onSingleLineUpdate_(arg_423_0)
			local var_423_0 = arg_420_1.actors_["1034"]
			local var_423_1 = 0

			if var_423_1 < arg_420_1.time_ and arg_420_1.time_ <= var_423_1 + arg_423_0 and not isNil(var_423_0) and arg_420_1.var_.actorSpriteComps1034 == nil then
				arg_420_1.var_.actorSpriteComps1034 = var_423_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_423_2 = 0.2

			if var_423_1 <= arg_420_1.time_ and arg_420_1.time_ < var_423_1 + var_423_2 and not isNil(var_423_0) then
				local var_423_3 = (arg_420_1.time_ - var_423_1) / var_423_2

				if arg_420_1.var_.actorSpriteComps1034 then
					for iter_423_0, iter_423_1 in pairs(arg_420_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_423_1 then
							if arg_420_1.isInRecall_ then
								local var_423_4 = Mathf.Lerp(iter_423_1.color.r, arg_420_1.hightColor2.r, var_423_3)
								local var_423_5 = Mathf.Lerp(iter_423_1.color.g, arg_420_1.hightColor2.g, var_423_3)
								local var_423_6 = Mathf.Lerp(iter_423_1.color.b, arg_420_1.hightColor2.b, var_423_3)

								iter_423_1.color = Color.New(var_423_4, var_423_5, var_423_6)
							else
								local var_423_7 = Mathf.Lerp(iter_423_1.color.r, 0.5, var_423_3)

								iter_423_1.color = Color.New(var_423_7, var_423_7, var_423_7)
							end
						end
					end
				end
			end

			if arg_420_1.time_ >= var_423_1 + var_423_2 and arg_420_1.time_ < var_423_1 + var_423_2 + arg_423_0 and not isNil(var_423_0) and arg_420_1.var_.actorSpriteComps1034 then
				for iter_423_2, iter_423_3 in pairs(arg_420_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_423_3 then
						if arg_420_1.isInRecall_ then
							iter_423_3.color = arg_420_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_423_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_420_1.var_.actorSpriteComps1034 = nil
			end

			local var_423_8 = 0
			local var_423_9 = 0.075

			if var_423_8 < arg_420_1.time_ and arg_420_1.time_ <= var_423_8 + arg_423_0 then
				arg_420_1.talkMaxDuration = 0
				arg_420_1.dialogCg_.alpha = 1

				arg_420_1.dialog_:SetActive(true)
				SetActive(arg_420_1.leftNameGo_, true)

				local var_423_10 = arg_420_1:FormatText(StoryNameCfg[1112].name)

				arg_420_1.leftNameTxt_.text = var_423_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_420_1.leftNameTxt_.transform)

				arg_420_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_420_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_420_1:RecordName(arg_420_1.leftNameTxt_.text)
				SetActive(arg_420_1.iconTrs_.gameObject, true)
				arg_420_1.iconController_:SetSelectedState("hero")

				arg_420_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_420_1.callingController_:SetSelectedState("normal")

				arg_420_1.keyicon_.color = Color.New(1, 1, 1)
				arg_420_1.icon_.color = Color.New(1, 1, 1)

				local var_423_11 = arg_420_1:GetWordFromCfg(417012100)
				local var_423_12 = arg_420_1:FormatText(var_423_11.content)

				arg_420_1.text_.text = var_423_12

				LuaForUtil.ClearLinePrefixSymbol(arg_420_1.text_)

				local var_423_13 = 3
				local var_423_14 = utf8.len(var_423_12)
				local var_423_15 = var_423_13 <= 0 and var_423_9 or var_423_9 * (var_423_14 / var_423_13)

				if var_423_15 > 0 and var_423_9 < var_423_15 then
					arg_420_1.talkMaxDuration = var_423_15

					if var_423_15 + var_423_8 > arg_420_1.duration_ then
						arg_420_1.duration_ = var_423_15 + var_423_8
					end
				end

				arg_420_1.text_.text = var_423_12
				arg_420_1.typewritter.percent = 0

				arg_420_1.typewritter:SetDirty()
				arg_420_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012100", "story_v_out_417012.awb") ~= 0 then
					local var_423_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012100", "story_v_out_417012.awb") / 1000

					if var_423_16 + var_423_8 > arg_420_1.duration_ then
						arg_420_1.duration_ = var_423_16 + var_423_8
					end

					if var_423_11.prefab_name ~= "" and arg_420_1.actors_[var_423_11.prefab_name] ~= nil then
						local var_423_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_420_1.actors_[var_423_11.prefab_name].transform, "story_v_out_417012", "417012100", "story_v_out_417012.awb")

						arg_420_1:RecordAudio("417012100", var_423_17)
						arg_420_1:RecordAudio("417012100", var_423_17)
					else
						arg_420_1:AudioAction("play", "voice", "story_v_out_417012", "417012100", "story_v_out_417012.awb")
					end

					arg_420_1:RecordHistoryTalkVoice("story_v_out_417012", "417012100", "story_v_out_417012.awb")
				end

				arg_420_1:RecordContent(arg_420_1.text_.text)
			end

			local var_423_18 = math.max(var_423_9, arg_420_1.talkMaxDuration)

			if var_423_8 <= arg_420_1.time_ and arg_420_1.time_ < var_423_8 + var_423_18 then
				arg_420_1.typewritter.percent = (arg_420_1.time_ - var_423_8) / var_423_18

				arg_420_1.typewritter:SetDirty()
			end

			if arg_420_1.time_ >= var_423_8 + var_423_18 and arg_420_1.time_ < var_423_8 + var_423_18 + arg_423_0 then
				arg_420_1.typewritter.percent = 1

				arg_420_1.typewritter:SetDirty()
				arg_420_1:ShowNextGo(true)
			end
		end
	end,
	Play417012101 = function(arg_424_0, arg_424_1)
		arg_424_1.time_ = 0
		arg_424_1.frameCnt_ = 0
		arg_424_1.state_ = "playing"
		arg_424_1.curTalkId_ = 417012101
		arg_424_1.duration_ = 3.7

		local var_424_0 = {
			zh = 1.4,
			ja = 3.7
		}
		local var_424_1 = manager.audio:GetLocalizationFlag()

		if var_424_0[var_424_1] ~= nil then
			arg_424_1.duration_ = var_424_0[var_424_1]
		end

		SetActive(arg_424_1.tipsGo_, false)

		function arg_424_1.onSingleLineFinish_()
			arg_424_1.onSingleLineUpdate_ = nil
			arg_424_1.onSingleLineFinish_ = nil
			arg_424_1.state_ = "waiting"
		end

		function arg_424_1.playNext_(arg_426_0)
			if arg_426_0 == 1 then
				arg_424_0:Play417012102(arg_424_1)
			end
		end

		function arg_424_1.onSingleLineUpdate_(arg_427_0)
			local var_427_0 = arg_424_1.actors_["1034"]
			local var_427_1 = 0

			if var_427_1 < arg_424_1.time_ and arg_424_1.time_ <= var_427_1 + arg_427_0 and not isNil(var_427_0) and arg_424_1.var_.actorSpriteComps1034 == nil then
				arg_424_1.var_.actorSpriteComps1034 = var_427_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_427_2 = 0.2

			if var_427_1 <= arg_424_1.time_ and arg_424_1.time_ < var_427_1 + var_427_2 and not isNil(var_427_0) then
				local var_427_3 = (arg_424_1.time_ - var_427_1) / var_427_2

				if arg_424_1.var_.actorSpriteComps1034 then
					for iter_427_0, iter_427_1 in pairs(arg_424_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_427_1 then
							if arg_424_1.isInRecall_ then
								local var_427_4 = Mathf.Lerp(iter_427_1.color.r, arg_424_1.hightColor1.r, var_427_3)
								local var_427_5 = Mathf.Lerp(iter_427_1.color.g, arg_424_1.hightColor1.g, var_427_3)
								local var_427_6 = Mathf.Lerp(iter_427_1.color.b, arg_424_1.hightColor1.b, var_427_3)

								iter_427_1.color = Color.New(var_427_4, var_427_5, var_427_6)
							else
								local var_427_7 = Mathf.Lerp(iter_427_1.color.r, 1, var_427_3)

								iter_427_1.color = Color.New(var_427_7, var_427_7, var_427_7)
							end
						end
					end
				end
			end

			if arg_424_1.time_ >= var_427_1 + var_427_2 and arg_424_1.time_ < var_427_1 + var_427_2 + arg_427_0 and not isNil(var_427_0) and arg_424_1.var_.actorSpriteComps1034 then
				for iter_427_2, iter_427_3 in pairs(arg_424_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_427_3 then
						if arg_424_1.isInRecall_ then
							iter_427_3.color = arg_424_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_427_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_424_1.var_.actorSpriteComps1034 = nil
			end

			local var_427_8 = 0
			local var_427_9 = 0.15

			if var_427_8 < arg_424_1.time_ and arg_424_1.time_ <= var_427_8 + arg_427_0 then
				arg_424_1.talkMaxDuration = 0
				arg_424_1.dialogCg_.alpha = 1

				arg_424_1.dialog_:SetActive(true)
				SetActive(arg_424_1.leftNameGo_, true)

				local var_427_10 = arg_424_1:FormatText(StoryNameCfg[1109].name)

				arg_424_1.leftNameTxt_.text = var_427_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_424_1.leftNameTxt_.transform)

				arg_424_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_424_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_424_1:RecordName(arg_424_1.leftNameTxt_.text)
				SetActive(arg_424_1.iconTrs_.gameObject, false)
				arg_424_1.callingController_:SetSelectedState("normal")

				local var_427_11 = arg_424_1:GetWordFromCfg(417012101)
				local var_427_12 = arg_424_1:FormatText(var_427_11.content)

				arg_424_1.text_.text = var_427_12

				LuaForUtil.ClearLinePrefixSymbol(arg_424_1.text_)

				local var_427_13 = 6
				local var_427_14 = utf8.len(var_427_12)
				local var_427_15 = var_427_13 <= 0 and var_427_9 or var_427_9 * (var_427_14 / var_427_13)

				if var_427_15 > 0 and var_427_9 < var_427_15 then
					arg_424_1.talkMaxDuration = var_427_15

					if var_427_15 + var_427_8 > arg_424_1.duration_ then
						arg_424_1.duration_ = var_427_15 + var_427_8
					end
				end

				arg_424_1.text_.text = var_427_12
				arg_424_1.typewritter.percent = 0

				arg_424_1.typewritter:SetDirty()
				arg_424_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012101", "story_v_out_417012.awb") ~= 0 then
					local var_427_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012101", "story_v_out_417012.awb") / 1000

					if var_427_16 + var_427_8 > arg_424_1.duration_ then
						arg_424_1.duration_ = var_427_16 + var_427_8
					end

					if var_427_11.prefab_name ~= "" and arg_424_1.actors_[var_427_11.prefab_name] ~= nil then
						local var_427_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_424_1.actors_[var_427_11.prefab_name].transform, "story_v_out_417012", "417012101", "story_v_out_417012.awb")

						arg_424_1:RecordAudio("417012101", var_427_17)
						arg_424_1:RecordAudio("417012101", var_427_17)
					else
						arg_424_1:AudioAction("play", "voice", "story_v_out_417012", "417012101", "story_v_out_417012.awb")
					end

					arg_424_1:RecordHistoryTalkVoice("story_v_out_417012", "417012101", "story_v_out_417012.awb")
				end

				arg_424_1:RecordContent(arg_424_1.text_.text)
			end

			local var_427_18 = math.max(var_427_9, arg_424_1.talkMaxDuration)

			if var_427_8 <= arg_424_1.time_ and arg_424_1.time_ < var_427_8 + var_427_18 then
				arg_424_1.typewritter.percent = (arg_424_1.time_ - var_427_8) / var_427_18

				arg_424_1.typewritter:SetDirty()
			end

			if arg_424_1.time_ >= var_427_8 + var_427_18 and arg_424_1.time_ < var_427_8 + var_427_18 + arg_427_0 then
				arg_424_1.typewritter.percent = 1

				arg_424_1.typewritter:SetDirty()
				arg_424_1:ShowNextGo(true)
			end
		end
	end,
	Play417012102 = function(arg_428_0, arg_428_1)
		arg_428_1.time_ = 0
		arg_428_1.frameCnt_ = 0
		arg_428_1.state_ = "playing"
		arg_428_1.curTalkId_ = 417012102
		arg_428_1.duration_ = 4.23

		local var_428_0 = {
			zh = 3.7,
			ja = 4.233
		}
		local var_428_1 = manager.audio:GetLocalizationFlag()

		if var_428_0[var_428_1] ~= nil then
			arg_428_1.duration_ = var_428_0[var_428_1]
		end

		SetActive(arg_428_1.tipsGo_, false)

		function arg_428_1.onSingleLineFinish_()
			arg_428_1.onSingleLineUpdate_ = nil
			arg_428_1.onSingleLineFinish_ = nil
			arg_428_1.state_ = "waiting"
		end

		function arg_428_1.playNext_(arg_430_0)
			if arg_430_0 == 1 then
				arg_428_0:Play417012103(arg_428_1)
			end
		end

		function arg_428_1.onSingleLineUpdate_(arg_431_0)
			local var_431_0 = arg_428_1.actors_["1034"]
			local var_431_1 = 0

			if var_431_1 < arg_428_1.time_ and arg_428_1.time_ <= var_431_1 + arg_431_0 and not isNil(var_431_0) and arg_428_1.var_.actorSpriteComps1034 == nil then
				arg_428_1.var_.actorSpriteComps1034 = var_431_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_431_2 = 0.2

			if var_431_1 <= arg_428_1.time_ and arg_428_1.time_ < var_431_1 + var_431_2 and not isNil(var_431_0) then
				local var_431_3 = (arg_428_1.time_ - var_431_1) / var_431_2

				if arg_428_1.var_.actorSpriteComps1034 then
					for iter_431_0, iter_431_1 in pairs(arg_428_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_431_1 then
							if arg_428_1.isInRecall_ then
								local var_431_4 = Mathf.Lerp(iter_431_1.color.r, arg_428_1.hightColor2.r, var_431_3)
								local var_431_5 = Mathf.Lerp(iter_431_1.color.g, arg_428_1.hightColor2.g, var_431_3)
								local var_431_6 = Mathf.Lerp(iter_431_1.color.b, arg_428_1.hightColor2.b, var_431_3)

								iter_431_1.color = Color.New(var_431_4, var_431_5, var_431_6)
							else
								local var_431_7 = Mathf.Lerp(iter_431_1.color.r, 0.5, var_431_3)

								iter_431_1.color = Color.New(var_431_7, var_431_7, var_431_7)
							end
						end
					end
				end
			end

			if arg_428_1.time_ >= var_431_1 + var_431_2 and arg_428_1.time_ < var_431_1 + var_431_2 + arg_431_0 and not isNil(var_431_0) and arg_428_1.var_.actorSpriteComps1034 then
				for iter_431_2, iter_431_3 in pairs(arg_428_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_431_3 then
						if arg_428_1.isInRecall_ then
							iter_431_3.color = arg_428_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_431_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_428_1.var_.actorSpriteComps1034 = nil
			end

			local var_431_8 = 0
			local var_431_9 = 0.225

			if var_431_8 < arg_428_1.time_ and arg_428_1.time_ <= var_431_8 + arg_431_0 then
				arg_428_1.talkMaxDuration = 0
				arg_428_1.dialogCg_.alpha = 1

				arg_428_1.dialog_:SetActive(true)
				SetActive(arg_428_1.leftNameGo_, true)

				local var_431_10 = arg_428_1:FormatText(StoryNameCfg[1112].name)

				arg_428_1.leftNameTxt_.text = var_431_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_428_1.leftNameTxt_.transform)

				arg_428_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_428_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_428_1:RecordName(arg_428_1.leftNameTxt_.text)
				SetActive(arg_428_1.iconTrs_.gameObject, true)
				arg_428_1.iconController_:SetSelectedState("hero")

				arg_428_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_428_1.callingController_:SetSelectedState("normal")

				arg_428_1.keyicon_.color = Color.New(1, 1, 1)
				arg_428_1.icon_.color = Color.New(1, 1, 1)

				local var_431_11 = arg_428_1:GetWordFromCfg(417012102)
				local var_431_12 = arg_428_1:FormatText(var_431_11.content)

				arg_428_1.text_.text = var_431_12

				LuaForUtil.ClearLinePrefixSymbol(arg_428_1.text_)

				local var_431_13 = 9
				local var_431_14 = utf8.len(var_431_12)
				local var_431_15 = var_431_13 <= 0 and var_431_9 or var_431_9 * (var_431_14 / var_431_13)

				if var_431_15 > 0 and var_431_9 < var_431_15 then
					arg_428_1.talkMaxDuration = var_431_15

					if var_431_15 + var_431_8 > arg_428_1.duration_ then
						arg_428_1.duration_ = var_431_15 + var_431_8
					end
				end

				arg_428_1.text_.text = var_431_12
				arg_428_1.typewritter.percent = 0

				arg_428_1.typewritter:SetDirty()
				arg_428_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012102", "story_v_out_417012.awb") ~= 0 then
					local var_431_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012102", "story_v_out_417012.awb") / 1000

					if var_431_16 + var_431_8 > arg_428_1.duration_ then
						arg_428_1.duration_ = var_431_16 + var_431_8
					end

					if var_431_11.prefab_name ~= "" and arg_428_1.actors_[var_431_11.prefab_name] ~= nil then
						local var_431_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_428_1.actors_[var_431_11.prefab_name].transform, "story_v_out_417012", "417012102", "story_v_out_417012.awb")

						arg_428_1:RecordAudio("417012102", var_431_17)
						arg_428_1:RecordAudio("417012102", var_431_17)
					else
						arg_428_1:AudioAction("play", "voice", "story_v_out_417012", "417012102", "story_v_out_417012.awb")
					end

					arg_428_1:RecordHistoryTalkVoice("story_v_out_417012", "417012102", "story_v_out_417012.awb")
				end

				arg_428_1:RecordContent(arg_428_1.text_.text)
			end

			local var_431_18 = math.max(var_431_9, arg_428_1.talkMaxDuration)

			if var_431_8 <= arg_428_1.time_ and arg_428_1.time_ < var_431_8 + var_431_18 then
				arg_428_1.typewritter.percent = (arg_428_1.time_ - var_431_8) / var_431_18

				arg_428_1.typewritter:SetDirty()
			end

			if arg_428_1.time_ >= var_431_8 + var_431_18 and arg_428_1.time_ < var_431_8 + var_431_18 + arg_431_0 then
				arg_428_1.typewritter.percent = 1

				arg_428_1.typewritter:SetDirty()
				arg_428_1:ShowNextGo(true)
			end
		end
	end,
	Play417012103 = function(arg_432_0, arg_432_1)
		arg_432_1.time_ = 0
		arg_432_1.frameCnt_ = 0
		arg_432_1.state_ = "playing"
		arg_432_1.curTalkId_ = 417012103
		arg_432_1.duration_ = 8.3

		local var_432_0 = {
			zh = 3.033,
			ja = 8.3
		}
		local var_432_1 = manager.audio:GetLocalizationFlag()

		if var_432_0[var_432_1] ~= nil then
			arg_432_1.duration_ = var_432_0[var_432_1]
		end

		SetActive(arg_432_1.tipsGo_, false)

		function arg_432_1.onSingleLineFinish_()
			arg_432_1.onSingleLineUpdate_ = nil
			arg_432_1.onSingleLineFinish_ = nil
			arg_432_1.state_ = "waiting"
		end

		function arg_432_1.playNext_(arg_434_0)
			if arg_434_0 == 1 then
				arg_432_0:Play417012104(arg_432_1)
			end
		end

		function arg_432_1.onSingleLineUpdate_(arg_435_0)
			local var_435_0 = arg_432_1.actors_["1034"]
			local var_435_1 = 0

			if var_435_1 < arg_432_1.time_ and arg_432_1.time_ <= var_435_1 + arg_435_0 and not isNil(var_435_0) and arg_432_1.var_.actorSpriteComps1034 == nil then
				arg_432_1.var_.actorSpriteComps1034 = var_435_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_435_2 = 0.2

			if var_435_1 <= arg_432_1.time_ and arg_432_1.time_ < var_435_1 + var_435_2 and not isNil(var_435_0) then
				local var_435_3 = (arg_432_1.time_ - var_435_1) / var_435_2

				if arg_432_1.var_.actorSpriteComps1034 then
					for iter_435_0, iter_435_1 in pairs(arg_432_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_435_1 then
							if arg_432_1.isInRecall_ then
								local var_435_4 = Mathf.Lerp(iter_435_1.color.r, arg_432_1.hightColor1.r, var_435_3)
								local var_435_5 = Mathf.Lerp(iter_435_1.color.g, arg_432_1.hightColor1.g, var_435_3)
								local var_435_6 = Mathf.Lerp(iter_435_1.color.b, arg_432_1.hightColor1.b, var_435_3)

								iter_435_1.color = Color.New(var_435_4, var_435_5, var_435_6)
							else
								local var_435_7 = Mathf.Lerp(iter_435_1.color.r, 1, var_435_3)

								iter_435_1.color = Color.New(var_435_7, var_435_7, var_435_7)
							end
						end
					end
				end
			end

			if arg_432_1.time_ >= var_435_1 + var_435_2 and arg_432_1.time_ < var_435_1 + var_435_2 + arg_435_0 and not isNil(var_435_0) and arg_432_1.var_.actorSpriteComps1034 then
				for iter_435_2, iter_435_3 in pairs(arg_432_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_435_3 then
						if arg_432_1.isInRecall_ then
							iter_435_3.color = arg_432_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_435_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_432_1.var_.actorSpriteComps1034 = nil
			end

			local var_435_8 = arg_432_1.actors_["1034"].transform
			local var_435_9 = 0

			if var_435_9 < arg_432_1.time_ and arg_432_1.time_ <= var_435_9 + arg_435_0 then
				arg_432_1.var_.moveOldPos1034 = var_435_8.localPosition
				var_435_8.localScale = Vector3.New(1, 1, 1)

				arg_432_1:CheckSpriteTmpPos("1034", 3)

				local var_435_10 = var_435_8.childCount

				for iter_435_4 = 0, var_435_10 - 1 do
					local var_435_11 = var_435_8:GetChild(iter_435_4)

					if var_435_11.name == "split_4" or not string.find(var_435_11.name, "split") then
						var_435_11.gameObject:SetActive(true)
					else
						var_435_11.gameObject:SetActive(false)
					end
				end
			end

			local var_435_12 = 0.001

			if var_435_9 <= arg_432_1.time_ and arg_432_1.time_ < var_435_9 + var_435_12 then
				local var_435_13 = (arg_432_1.time_ - var_435_9) / var_435_12
				local var_435_14 = Vector3.New(0, -331.9, -324)

				var_435_8.localPosition = Vector3.Lerp(arg_432_1.var_.moveOldPos1034, var_435_14, var_435_13)
			end

			if arg_432_1.time_ >= var_435_9 + var_435_12 and arg_432_1.time_ < var_435_9 + var_435_12 + arg_435_0 then
				var_435_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_435_15 = 0
			local var_435_16 = 0.35

			if var_435_15 < arg_432_1.time_ and arg_432_1.time_ <= var_435_15 + arg_435_0 then
				arg_432_1.talkMaxDuration = 0
				arg_432_1.dialogCg_.alpha = 1

				arg_432_1.dialog_:SetActive(true)
				SetActive(arg_432_1.leftNameGo_, true)

				local var_435_17 = arg_432_1:FormatText(StoryNameCfg[1109].name)

				arg_432_1.leftNameTxt_.text = var_435_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_432_1.leftNameTxt_.transform)

				arg_432_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_432_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_432_1:RecordName(arg_432_1.leftNameTxt_.text)
				SetActive(arg_432_1.iconTrs_.gameObject, false)
				arg_432_1.callingController_:SetSelectedState("normal")

				local var_435_18 = arg_432_1:GetWordFromCfg(417012103)
				local var_435_19 = arg_432_1:FormatText(var_435_18.content)

				arg_432_1.text_.text = var_435_19

				LuaForUtil.ClearLinePrefixSymbol(arg_432_1.text_)

				local var_435_20 = 14
				local var_435_21 = utf8.len(var_435_19)
				local var_435_22 = var_435_20 <= 0 and var_435_16 or var_435_16 * (var_435_21 / var_435_20)

				if var_435_22 > 0 and var_435_16 < var_435_22 then
					arg_432_1.talkMaxDuration = var_435_22

					if var_435_22 + var_435_15 > arg_432_1.duration_ then
						arg_432_1.duration_ = var_435_22 + var_435_15
					end
				end

				arg_432_1.text_.text = var_435_19
				arg_432_1.typewritter.percent = 0

				arg_432_1.typewritter:SetDirty()
				arg_432_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012103", "story_v_out_417012.awb") ~= 0 then
					local var_435_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012103", "story_v_out_417012.awb") / 1000

					if var_435_23 + var_435_15 > arg_432_1.duration_ then
						arg_432_1.duration_ = var_435_23 + var_435_15
					end

					if var_435_18.prefab_name ~= "" and arg_432_1.actors_[var_435_18.prefab_name] ~= nil then
						local var_435_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_432_1.actors_[var_435_18.prefab_name].transform, "story_v_out_417012", "417012103", "story_v_out_417012.awb")

						arg_432_1:RecordAudio("417012103", var_435_24)
						arg_432_1:RecordAudio("417012103", var_435_24)
					else
						arg_432_1:AudioAction("play", "voice", "story_v_out_417012", "417012103", "story_v_out_417012.awb")
					end

					arg_432_1:RecordHistoryTalkVoice("story_v_out_417012", "417012103", "story_v_out_417012.awb")
				end

				arg_432_1:RecordContent(arg_432_1.text_.text)
			end

			local var_435_25 = math.max(var_435_16, arg_432_1.talkMaxDuration)

			if var_435_15 <= arg_432_1.time_ and arg_432_1.time_ < var_435_15 + var_435_25 then
				arg_432_1.typewritter.percent = (arg_432_1.time_ - var_435_15) / var_435_25

				arg_432_1.typewritter:SetDirty()
			end

			if arg_432_1.time_ >= var_435_15 + var_435_25 and arg_432_1.time_ < var_435_15 + var_435_25 + arg_435_0 then
				arg_432_1.typewritter.percent = 1

				arg_432_1.typewritter:SetDirty()
				arg_432_1:ShowNextGo(true)
			end
		end
	end,
	Play417012104 = function(arg_436_0, arg_436_1)
		arg_436_1.time_ = 0
		arg_436_1.frameCnt_ = 0
		arg_436_1.state_ = "playing"
		arg_436_1.curTalkId_ = 417012104
		arg_436_1.duration_ = 5

		SetActive(arg_436_1.tipsGo_, false)

		function arg_436_1.onSingleLineFinish_()
			arg_436_1.onSingleLineUpdate_ = nil
			arg_436_1.onSingleLineFinish_ = nil
			arg_436_1.state_ = "waiting"
		end

		function arg_436_1.playNext_(arg_438_0)
			if arg_438_0 == 1 then
				arg_436_0:Play417012105(arg_436_1)
			end
		end

		function arg_436_1.onSingleLineUpdate_(arg_439_0)
			local var_439_0 = arg_436_1.actors_["1034"]
			local var_439_1 = 0

			if var_439_1 < arg_436_1.time_ and arg_436_1.time_ <= var_439_1 + arg_439_0 and not isNil(var_439_0) and arg_436_1.var_.actorSpriteComps1034 == nil then
				arg_436_1.var_.actorSpriteComps1034 = var_439_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_439_2 = 0.2

			if var_439_1 <= arg_436_1.time_ and arg_436_1.time_ < var_439_1 + var_439_2 and not isNil(var_439_0) then
				local var_439_3 = (arg_436_1.time_ - var_439_1) / var_439_2

				if arg_436_1.var_.actorSpriteComps1034 then
					for iter_439_0, iter_439_1 in pairs(arg_436_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_439_1 then
							if arg_436_1.isInRecall_ then
								local var_439_4 = Mathf.Lerp(iter_439_1.color.r, arg_436_1.hightColor2.r, var_439_3)
								local var_439_5 = Mathf.Lerp(iter_439_1.color.g, arg_436_1.hightColor2.g, var_439_3)
								local var_439_6 = Mathf.Lerp(iter_439_1.color.b, arg_436_1.hightColor2.b, var_439_3)

								iter_439_1.color = Color.New(var_439_4, var_439_5, var_439_6)
							else
								local var_439_7 = Mathf.Lerp(iter_439_1.color.r, 0.5, var_439_3)

								iter_439_1.color = Color.New(var_439_7, var_439_7, var_439_7)
							end
						end
					end
				end
			end

			if arg_436_1.time_ >= var_439_1 + var_439_2 and arg_436_1.time_ < var_439_1 + var_439_2 + arg_439_0 and not isNil(var_439_0) and arg_436_1.var_.actorSpriteComps1034 then
				for iter_439_2, iter_439_3 in pairs(arg_436_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_439_3 then
						if arg_436_1.isInRecall_ then
							iter_439_3.color = arg_436_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_439_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_436_1.var_.actorSpriteComps1034 = nil
			end

			local var_439_8 = arg_436_1.actors_["1034"].transform
			local var_439_9 = 0

			if var_439_9 < arg_436_1.time_ and arg_436_1.time_ <= var_439_9 + arg_439_0 then
				arg_436_1.var_.moveOldPos1034 = var_439_8.localPosition
				var_439_8.localScale = Vector3.New(1, 1, 1)

				arg_436_1:CheckSpriteTmpPos("1034", 7)

				local var_439_10 = var_439_8.childCount

				for iter_439_4 = 0, var_439_10 - 1 do
					local var_439_11 = var_439_8:GetChild(iter_439_4)

					if var_439_11.name == "" or not string.find(var_439_11.name, "split") then
						var_439_11.gameObject:SetActive(true)
					else
						var_439_11.gameObject:SetActive(false)
					end
				end
			end

			local var_439_12 = 0.001

			if var_439_9 <= arg_436_1.time_ and arg_436_1.time_ < var_439_9 + var_439_12 then
				local var_439_13 = (arg_436_1.time_ - var_439_9) / var_439_12
				local var_439_14 = Vector3.New(0, -2000, 0)

				var_439_8.localPosition = Vector3.Lerp(arg_436_1.var_.moveOldPos1034, var_439_14, var_439_13)
			end

			if arg_436_1.time_ >= var_439_9 + var_439_12 and arg_436_1.time_ < var_439_9 + var_439_12 + arg_439_0 then
				var_439_8.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_439_15 = 0.866666666666667
			local var_439_16 = 1

			if var_439_15 < arg_436_1.time_ and arg_436_1.time_ <= var_439_15 + arg_439_0 then
				local var_439_17 = "play"
				local var_439_18 = "effect"

				arg_436_1:AudioAction(var_439_17, var_439_18, "se_story", "se_story_communication", "")
			end

			local var_439_19 = 2.38666666666667
			local var_439_20 = 1

			if var_439_19 < arg_436_1.time_ and arg_436_1.time_ <= var_439_19 + arg_439_0 then
				local var_439_21 = "stop"
				local var_439_22 = "effect"

				arg_436_1:AudioAction(var_439_21, var_439_22, "se_story", "se_story_communication", "")
			end

			local var_439_23 = 0.034

			if var_439_23 < arg_436_1.time_ and arg_436_1.time_ <= var_439_23 + arg_439_0 then
				arg_436_1.allBtn_.enabled = false
			end

			local var_439_24 = 1.69933333333333

			if arg_436_1.time_ >= var_439_23 + var_439_24 and arg_436_1.time_ < var_439_23 + var_439_24 + arg_439_0 then
				arg_436_1.allBtn_.enabled = true
			end

			local var_439_25 = 0
			local var_439_26 = 1.25

			if var_439_25 < arg_436_1.time_ and arg_436_1.time_ <= var_439_25 + arg_439_0 then
				arg_436_1.talkMaxDuration = 0
				arg_436_1.dialogCg_.alpha = 1

				arg_436_1.dialog_:SetActive(true)
				SetActive(arg_436_1.leftNameGo_, false)

				arg_436_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_436_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_436_1:RecordName(arg_436_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_436_1.iconTrs_.gameObject, false)
				arg_436_1.callingController_:SetSelectedState("normal")

				local var_439_27 = arg_436_1:GetWordFromCfg(417012104)
				local var_439_28 = arg_436_1:FormatText(var_439_27.content)

				arg_436_1.text_.text = var_439_28

				LuaForUtil.ClearLinePrefixSymbol(arg_436_1.text_)

				local var_439_29 = 50
				local var_439_30 = utf8.len(var_439_28)
				local var_439_31 = var_439_29 <= 0 and var_439_26 or var_439_26 * (var_439_30 / var_439_29)

				if var_439_31 > 0 and var_439_26 < var_439_31 then
					arg_436_1.talkMaxDuration = var_439_31

					if var_439_31 + var_439_25 > arg_436_1.duration_ then
						arg_436_1.duration_ = var_439_31 + var_439_25
					end
				end

				arg_436_1.text_.text = var_439_28
				arg_436_1.typewritter.percent = 0

				arg_436_1.typewritter:SetDirty()
				arg_436_1:ShowNextGo(false)
				arg_436_1:RecordContent(arg_436_1.text_.text)
			end

			local var_439_32 = math.max(var_439_26, arg_436_1.talkMaxDuration)

			if var_439_25 <= arg_436_1.time_ and arg_436_1.time_ < var_439_25 + var_439_32 then
				arg_436_1.typewritter.percent = (arg_436_1.time_ - var_439_25) / var_439_32

				arg_436_1.typewritter:SetDirty()
			end

			if arg_436_1.time_ >= var_439_25 + var_439_32 and arg_436_1.time_ < var_439_25 + var_439_32 + arg_439_0 then
				arg_436_1.typewritter.percent = 1

				arg_436_1.typewritter:SetDirty()
				arg_436_1:ShowNextGo(true)
			end
		end
	end,
	Play417012105 = function(arg_440_0, arg_440_1)
		arg_440_1.time_ = 0
		arg_440_1.frameCnt_ = 0
		arg_440_1.state_ = "playing"
		arg_440_1.curTalkId_ = 417012105
		arg_440_1.duration_ = 5

		SetActive(arg_440_1.tipsGo_, false)

		function arg_440_1.onSingleLineFinish_()
			arg_440_1.onSingleLineUpdate_ = nil
			arg_440_1.onSingleLineFinish_ = nil
			arg_440_1.state_ = "waiting"
		end

		function arg_440_1.playNext_(arg_442_0)
			if arg_442_0 == 1 then
				arg_440_0:Play417012106(arg_440_1)
			end
		end

		function arg_440_1.onSingleLineUpdate_(arg_443_0)
			local var_443_0 = 0
			local var_443_1 = 0.65

			if var_443_0 < arg_440_1.time_ and arg_440_1.time_ <= var_443_0 + arg_443_0 then
				arg_440_1.talkMaxDuration = 0
				arg_440_1.dialogCg_.alpha = 1

				arg_440_1.dialog_:SetActive(true)
				SetActive(arg_440_1.leftNameGo_, false)

				arg_440_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_440_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_440_1:RecordName(arg_440_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_440_1.iconTrs_.gameObject, false)
				arg_440_1.callingController_:SetSelectedState("normal")

				local var_443_2 = arg_440_1:GetWordFromCfg(417012105)
				local var_443_3 = arg_440_1:FormatText(var_443_2.content)

				arg_440_1.text_.text = var_443_3

				LuaForUtil.ClearLinePrefixSymbol(arg_440_1.text_)

				local var_443_4 = 26
				local var_443_5 = utf8.len(var_443_3)
				local var_443_6 = var_443_4 <= 0 and var_443_1 or var_443_1 * (var_443_5 / var_443_4)

				if var_443_6 > 0 and var_443_1 < var_443_6 then
					arg_440_1.talkMaxDuration = var_443_6

					if var_443_6 + var_443_0 > arg_440_1.duration_ then
						arg_440_1.duration_ = var_443_6 + var_443_0
					end
				end

				arg_440_1.text_.text = var_443_3
				arg_440_1.typewritter.percent = 0

				arg_440_1.typewritter:SetDirty()
				arg_440_1:ShowNextGo(false)
				arg_440_1:RecordContent(arg_440_1.text_.text)
			end

			local var_443_7 = math.max(var_443_1, arg_440_1.talkMaxDuration)

			if var_443_0 <= arg_440_1.time_ and arg_440_1.time_ < var_443_0 + var_443_7 then
				arg_440_1.typewritter.percent = (arg_440_1.time_ - var_443_0) / var_443_7

				arg_440_1.typewritter:SetDirty()
			end

			if arg_440_1.time_ >= var_443_0 + var_443_7 and arg_440_1.time_ < var_443_0 + var_443_7 + arg_443_0 then
				arg_440_1.typewritter.percent = 1

				arg_440_1.typewritter:SetDirty()
				arg_440_1:ShowNextGo(true)
			end
		end
	end,
	Play417012106 = function(arg_444_0, arg_444_1)
		arg_444_1.time_ = 0
		arg_444_1.frameCnt_ = 0
		arg_444_1.state_ = "playing"
		arg_444_1.curTalkId_ = 417012106
		arg_444_1.duration_ = 3.4

		local var_444_0 = {
			zh = 1.233,
			ja = 3.4
		}
		local var_444_1 = manager.audio:GetLocalizationFlag()

		if var_444_0[var_444_1] ~= nil then
			arg_444_1.duration_ = var_444_0[var_444_1]
		end

		SetActive(arg_444_1.tipsGo_, false)

		function arg_444_1.onSingleLineFinish_()
			arg_444_1.onSingleLineUpdate_ = nil
			arg_444_1.onSingleLineFinish_ = nil
			arg_444_1.state_ = "waiting"
		end

		function arg_444_1.playNext_(arg_446_0)
			if arg_446_0 == 1 then
				arg_444_0:Play417012107(arg_444_1)
			end
		end

		function arg_444_1.onSingleLineUpdate_(arg_447_0)
			local var_447_0 = arg_444_1.actors_["1034"]
			local var_447_1 = 0

			if var_447_1 < arg_444_1.time_ and arg_444_1.time_ <= var_447_1 + arg_447_0 and not isNil(var_447_0) and arg_444_1.var_.actorSpriteComps1034 == nil then
				arg_444_1.var_.actorSpriteComps1034 = var_447_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_447_2 = 0.2

			if var_447_1 <= arg_444_1.time_ and arg_444_1.time_ < var_447_1 + var_447_2 and not isNil(var_447_0) then
				local var_447_3 = (arg_444_1.time_ - var_447_1) / var_447_2

				if arg_444_1.var_.actorSpriteComps1034 then
					for iter_447_0, iter_447_1 in pairs(arg_444_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_447_1 then
							if arg_444_1.isInRecall_ then
								local var_447_4 = Mathf.Lerp(iter_447_1.color.r, arg_444_1.hightColor1.r, var_447_3)
								local var_447_5 = Mathf.Lerp(iter_447_1.color.g, arg_444_1.hightColor1.g, var_447_3)
								local var_447_6 = Mathf.Lerp(iter_447_1.color.b, arg_444_1.hightColor1.b, var_447_3)

								iter_447_1.color = Color.New(var_447_4, var_447_5, var_447_6)
							else
								local var_447_7 = Mathf.Lerp(iter_447_1.color.r, 1, var_447_3)

								iter_447_1.color = Color.New(var_447_7, var_447_7, var_447_7)
							end
						end
					end
				end
			end

			if arg_444_1.time_ >= var_447_1 + var_447_2 and arg_444_1.time_ < var_447_1 + var_447_2 + arg_447_0 and not isNil(var_447_0) and arg_444_1.var_.actorSpriteComps1034 then
				for iter_447_2, iter_447_3 in pairs(arg_444_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_447_3 then
						if arg_444_1.isInRecall_ then
							iter_447_3.color = arg_444_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_447_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_444_1.var_.actorSpriteComps1034 = nil
			end

			local var_447_8 = arg_444_1.actors_["1034"].transform
			local var_447_9 = 0

			if var_447_9 < arg_444_1.time_ and arg_444_1.time_ <= var_447_9 + arg_447_0 then
				arg_444_1.var_.moveOldPos1034 = var_447_8.localPosition
				var_447_8.localScale = Vector3.New(1, 1, 1)

				arg_444_1:CheckSpriteTmpPos("1034", 3)

				local var_447_10 = var_447_8.childCount

				for iter_447_4 = 0, var_447_10 - 1 do
					local var_447_11 = var_447_8:GetChild(iter_447_4)

					if var_447_11.name == "split_6" or not string.find(var_447_11.name, "split") then
						var_447_11.gameObject:SetActive(true)
					else
						var_447_11.gameObject:SetActive(false)
					end
				end
			end

			local var_447_12 = 0.001

			if var_447_9 <= arg_444_1.time_ and arg_444_1.time_ < var_447_9 + var_447_12 then
				local var_447_13 = (arg_444_1.time_ - var_447_9) / var_447_12
				local var_447_14 = Vector3.New(0, -331.9, -324)

				var_447_8.localPosition = Vector3.Lerp(arg_444_1.var_.moveOldPos1034, var_447_14, var_447_13)
			end

			if arg_444_1.time_ >= var_447_9 + var_447_12 and arg_444_1.time_ < var_447_9 + var_447_12 + arg_447_0 then
				var_447_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_447_15 = 0
			local var_447_16 = 0.125

			if var_447_15 < arg_444_1.time_ and arg_444_1.time_ <= var_447_15 + arg_447_0 then
				arg_444_1.talkMaxDuration = 0
				arg_444_1.dialogCg_.alpha = 1

				arg_444_1.dialog_:SetActive(true)
				SetActive(arg_444_1.leftNameGo_, true)

				local var_447_17 = arg_444_1:FormatText(StoryNameCfg[1109].name)

				arg_444_1.leftNameTxt_.text = var_447_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_444_1.leftNameTxt_.transform)

				arg_444_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_444_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_444_1:RecordName(arg_444_1.leftNameTxt_.text)
				SetActive(arg_444_1.iconTrs_.gameObject, false)
				arg_444_1.callingController_:SetSelectedState("normal")

				local var_447_18 = arg_444_1:GetWordFromCfg(417012106)
				local var_447_19 = arg_444_1:FormatText(var_447_18.content)

				arg_444_1.text_.text = var_447_19

				LuaForUtil.ClearLinePrefixSymbol(arg_444_1.text_)

				local var_447_20 = 5
				local var_447_21 = utf8.len(var_447_19)
				local var_447_22 = var_447_20 <= 0 and var_447_16 or var_447_16 * (var_447_21 / var_447_20)

				if var_447_22 > 0 and var_447_16 < var_447_22 then
					arg_444_1.talkMaxDuration = var_447_22

					if var_447_22 + var_447_15 > arg_444_1.duration_ then
						arg_444_1.duration_ = var_447_22 + var_447_15
					end
				end

				arg_444_1.text_.text = var_447_19
				arg_444_1.typewritter.percent = 0

				arg_444_1.typewritter:SetDirty()
				arg_444_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012106", "story_v_out_417012.awb") ~= 0 then
					local var_447_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012106", "story_v_out_417012.awb") / 1000

					if var_447_23 + var_447_15 > arg_444_1.duration_ then
						arg_444_1.duration_ = var_447_23 + var_447_15
					end

					if var_447_18.prefab_name ~= "" and arg_444_1.actors_[var_447_18.prefab_name] ~= nil then
						local var_447_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_444_1.actors_[var_447_18.prefab_name].transform, "story_v_out_417012", "417012106", "story_v_out_417012.awb")

						arg_444_1:RecordAudio("417012106", var_447_24)
						arg_444_1:RecordAudio("417012106", var_447_24)
					else
						arg_444_1:AudioAction("play", "voice", "story_v_out_417012", "417012106", "story_v_out_417012.awb")
					end

					arg_444_1:RecordHistoryTalkVoice("story_v_out_417012", "417012106", "story_v_out_417012.awb")
				end

				arg_444_1:RecordContent(arg_444_1.text_.text)
			end

			local var_447_25 = math.max(var_447_16, arg_444_1.talkMaxDuration)

			if var_447_15 <= arg_444_1.time_ and arg_444_1.time_ < var_447_15 + var_447_25 then
				arg_444_1.typewritter.percent = (arg_444_1.time_ - var_447_15) / var_447_25

				arg_444_1.typewritter:SetDirty()
			end

			if arg_444_1.time_ >= var_447_15 + var_447_25 and arg_444_1.time_ < var_447_15 + var_447_25 + arg_447_0 then
				arg_444_1.typewritter.percent = 1

				arg_444_1.typewritter:SetDirty()
				arg_444_1:ShowNextGo(true)
			end
		end
	end,
	Play417012107 = function(arg_448_0, arg_448_1)
		arg_448_1.time_ = 0
		arg_448_1.frameCnt_ = 0
		arg_448_1.state_ = "playing"
		arg_448_1.curTalkId_ = 417012107
		arg_448_1.duration_ = 5.03

		local var_448_0 = {
			zh = 4.533,
			ja = 5.033
		}
		local var_448_1 = manager.audio:GetLocalizationFlag()

		if var_448_0[var_448_1] ~= nil then
			arg_448_1.duration_ = var_448_0[var_448_1]
		end

		SetActive(arg_448_1.tipsGo_, false)

		function arg_448_1.onSingleLineFinish_()
			arg_448_1.onSingleLineUpdate_ = nil
			arg_448_1.onSingleLineFinish_ = nil
			arg_448_1.state_ = "waiting"
		end

		function arg_448_1.playNext_(arg_450_0)
			if arg_450_0 == 1 then
				arg_448_0:Play417012108(arg_448_1)
			end
		end

		function arg_448_1.onSingleLineUpdate_(arg_451_0)
			local var_451_0 = arg_448_1.actors_["1034"]
			local var_451_1 = 0

			if var_451_1 < arg_448_1.time_ and arg_448_1.time_ <= var_451_1 + arg_451_0 and not isNil(var_451_0) and arg_448_1.var_.actorSpriteComps1034 == nil then
				arg_448_1.var_.actorSpriteComps1034 = var_451_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_451_2 = 0.2

			if var_451_1 <= arg_448_1.time_ and arg_448_1.time_ < var_451_1 + var_451_2 and not isNil(var_451_0) then
				local var_451_3 = (arg_448_1.time_ - var_451_1) / var_451_2

				if arg_448_1.var_.actorSpriteComps1034 then
					for iter_451_0, iter_451_1 in pairs(arg_448_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_451_1 then
							if arg_448_1.isInRecall_ then
								local var_451_4 = Mathf.Lerp(iter_451_1.color.r, arg_448_1.hightColor2.r, var_451_3)
								local var_451_5 = Mathf.Lerp(iter_451_1.color.g, arg_448_1.hightColor2.g, var_451_3)
								local var_451_6 = Mathf.Lerp(iter_451_1.color.b, arg_448_1.hightColor2.b, var_451_3)

								iter_451_1.color = Color.New(var_451_4, var_451_5, var_451_6)
							else
								local var_451_7 = Mathf.Lerp(iter_451_1.color.r, 0.5, var_451_3)

								iter_451_1.color = Color.New(var_451_7, var_451_7, var_451_7)
							end
						end
					end
				end
			end

			if arg_448_1.time_ >= var_451_1 + var_451_2 and arg_448_1.time_ < var_451_1 + var_451_2 + arg_451_0 and not isNil(var_451_0) and arg_448_1.var_.actorSpriteComps1034 then
				for iter_451_2, iter_451_3 in pairs(arg_448_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_451_3 then
						if arg_448_1.isInRecall_ then
							iter_451_3.color = arg_448_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_451_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_448_1.var_.actorSpriteComps1034 = nil
			end

			local var_451_8 = 0
			local var_451_9 = 0.475

			if var_451_8 < arg_448_1.time_ and arg_448_1.time_ <= var_451_8 + arg_451_0 then
				arg_448_1.talkMaxDuration = 0
				arg_448_1.dialogCg_.alpha = 1

				arg_448_1.dialog_:SetActive(true)
				SetActive(arg_448_1.leftNameGo_, true)

				local var_451_10 = arg_448_1:FormatText(StoryNameCfg[1112].name)

				arg_448_1.leftNameTxt_.text = var_451_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_448_1.leftNameTxt_.transform)

				arg_448_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_448_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_448_1:RecordName(arg_448_1.leftNameTxt_.text)
				SetActive(arg_448_1.iconTrs_.gameObject, true)
				arg_448_1.iconController_:SetSelectedState("hero")

				arg_448_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_448_1.callingController_:SetSelectedState("normal")

				arg_448_1.keyicon_.color = Color.New(1, 1, 1)
				arg_448_1.icon_.color = Color.New(1, 1, 1)

				local var_451_11 = arg_448_1:GetWordFromCfg(417012107)
				local var_451_12 = arg_448_1:FormatText(var_451_11.content)

				arg_448_1.text_.text = var_451_12

				LuaForUtil.ClearLinePrefixSymbol(arg_448_1.text_)

				local var_451_13 = 19
				local var_451_14 = utf8.len(var_451_12)
				local var_451_15 = var_451_13 <= 0 and var_451_9 or var_451_9 * (var_451_14 / var_451_13)

				if var_451_15 > 0 and var_451_9 < var_451_15 then
					arg_448_1.talkMaxDuration = var_451_15

					if var_451_15 + var_451_8 > arg_448_1.duration_ then
						arg_448_1.duration_ = var_451_15 + var_451_8
					end
				end

				arg_448_1.text_.text = var_451_12
				arg_448_1.typewritter.percent = 0

				arg_448_1.typewritter:SetDirty()
				arg_448_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012107", "story_v_out_417012.awb") ~= 0 then
					local var_451_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012107", "story_v_out_417012.awb") / 1000

					if var_451_16 + var_451_8 > arg_448_1.duration_ then
						arg_448_1.duration_ = var_451_16 + var_451_8
					end

					if var_451_11.prefab_name ~= "" and arg_448_1.actors_[var_451_11.prefab_name] ~= nil then
						local var_451_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_448_1.actors_[var_451_11.prefab_name].transform, "story_v_out_417012", "417012107", "story_v_out_417012.awb")

						arg_448_1:RecordAudio("417012107", var_451_17)
						arg_448_1:RecordAudio("417012107", var_451_17)
					else
						arg_448_1:AudioAction("play", "voice", "story_v_out_417012", "417012107", "story_v_out_417012.awb")
					end

					arg_448_1:RecordHistoryTalkVoice("story_v_out_417012", "417012107", "story_v_out_417012.awb")
				end

				arg_448_1:RecordContent(arg_448_1.text_.text)
			end

			local var_451_18 = math.max(var_451_9, arg_448_1.talkMaxDuration)

			if var_451_8 <= arg_448_1.time_ and arg_448_1.time_ < var_451_8 + var_451_18 then
				arg_448_1.typewritter.percent = (arg_448_1.time_ - var_451_8) / var_451_18

				arg_448_1.typewritter:SetDirty()
			end

			if arg_448_1.time_ >= var_451_8 + var_451_18 and arg_448_1.time_ < var_451_8 + var_451_18 + arg_451_0 then
				arg_448_1.typewritter.percent = 1

				arg_448_1.typewritter:SetDirty()
				arg_448_1:ShowNextGo(true)
			end
		end
	end,
	Play417012108 = function(arg_452_0, arg_452_1)
		arg_452_1.time_ = 0
		arg_452_1.frameCnt_ = 0
		arg_452_1.state_ = "playing"
		arg_452_1.curTalkId_ = 417012108
		arg_452_1.duration_ = 11.73

		local var_452_0 = {
			zh = 7.133,
			ja = 11.733
		}
		local var_452_1 = manager.audio:GetLocalizationFlag()

		if var_452_0[var_452_1] ~= nil then
			arg_452_1.duration_ = var_452_0[var_452_1]
		end

		SetActive(arg_452_1.tipsGo_, false)

		function arg_452_1.onSingleLineFinish_()
			arg_452_1.onSingleLineUpdate_ = nil
			arg_452_1.onSingleLineFinish_ = nil
			arg_452_1.state_ = "waiting"
		end

		function arg_452_1.playNext_(arg_454_0)
			if arg_454_0 == 1 then
				arg_452_0:Play417012109(arg_452_1)
			end
		end

		function arg_452_1.onSingleLineUpdate_(arg_455_0)
			local var_455_0 = arg_452_1.actors_["1034"]
			local var_455_1 = 0

			if var_455_1 < arg_452_1.time_ and arg_452_1.time_ <= var_455_1 + arg_455_0 and not isNil(var_455_0) and arg_452_1.var_.actorSpriteComps1034 == nil then
				arg_452_1.var_.actorSpriteComps1034 = var_455_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_455_2 = 0.2

			if var_455_1 <= arg_452_1.time_ and arg_452_1.time_ < var_455_1 + var_455_2 and not isNil(var_455_0) then
				local var_455_3 = (arg_452_1.time_ - var_455_1) / var_455_2

				if arg_452_1.var_.actorSpriteComps1034 then
					for iter_455_0, iter_455_1 in pairs(arg_452_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_455_1 then
							if arg_452_1.isInRecall_ then
								local var_455_4 = Mathf.Lerp(iter_455_1.color.r, arg_452_1.hightColor1.r, var_455_3)
								local var_455_5 = Mathf.Lerp(iter_455_1.color.g, arg_452_1.hightColor1.g, var_455_3)
								local var_455_6 = Mathf.Lerp(iter_455_1.color.b, arg_452_1.hightColor1.b, var_455_3)

								iter_455_1.color = Color.New(var_455_4, var_455_5, var_455_6)
							else
								local var_455_7 = Mathf.Lerp(iter_455_1.color.r, 1, var_455_3)

								iter_455_1.color = Color.New(var_455_7, var_455_7, var_455_7)
							end
						end
					end
				end
			end

			if arg_452_1.time_ >= var_455_1 + var_455_2 and arg_452_1.time_ < var_455_1 + var_455_2 + arg_455_0 and not isNil(var_455_0) and arg_452_1.var_.actorSpriteComps1034 then
				for iter_455_2, iter_455_3 in pairs(arg_452_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_455_3 then
						if arg_452_1.isInRecall_ then
							iter_455_3.color = arg_452_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_455_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_452_1.var_.actorSpriteComps1034 = nil
			end

			local var_455_8 = 0
			local var_455_9 = 1

			if var_455_8 < arg_452_1.time_ and arg_452_1.time_ <= var_455_8 + arg_455_0 then
				arg_452_1.talkMaxDuration = 0
				arg_452_1.dialogCg_.alpha = 1

				arg_452_1.dialog_:SetActive(true)
				SetActive(arg_452_1.leftNameGo_, true)

				local var_455_10 = arg_452_1:FormatText(StoryNameCfg[1109].name)

				arg_452_1.leftNameTxt_.text = var_455_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_452_1.leftNameTxt_.transform)

				arg_452_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_452_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_452_1:RecordName(arg_452_1.leftNameTxt_.text)
				SetActive(arg_452_1.iconTrs_.gameObject, false)
				arg_452_1.callingController_:SetSelectedState("normal")

				local var_455_11 = arg_452_1:GetWordFromCfg(417012108)
				local var_455_12 = arg_452_1:FormatText(var_455_11.content)

				arg_452_1.text_.text = var_455_12

				LuaForUtil.ClearLinePrefixSymbol(arg_452_1.text_)

				local var_455_13 = 40
				local var_455_14 = utf8.len(var_455_12)
				local var_455_15 = var_455_13 <= 0 and var_455_9 or var_455_9 * (var_455_14 / var_455_13)

				if var_455_15 > 0 and var_455_9 < var_455_15 then
					arg_452_1.talkMaxDuration = var_455_15

					if var_455_15 + var_455_8 > arg_452_1.duration_ then
						arg_452_1.duration_ = var_455_15 + var_455_8
					end
				end

				arg_452_1.text_.text = var_455_12
				arg_452_1.typewritter.percent = 0

				arg_452_1.typewritter:SetDirty()
				arg_452_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012108", "story_v_out_417012.awb") ~= 0 then
					local var_455_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012108", "story_v_out_417012.awb") / 1000

					if var_455_16 + var_455_8 > arg_452_1.duration_ then
						arg_452_1.duration_ = var_455_16 + var_455_8
					end

					if var_455_11.prefab_name ~= "" and arg_452_1.actors_[var_455_11.prefab_name] ~= nil then
						local var_455_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_452_1.actors_[var_455_11.prefab_name].transform, "story_v_out_417012", "417012108", "story_v_out_417012.awb")

						arg_452_1:RecordAudio("417012108", var_455_17)
						arg_452_1:RecordAudio("417012108", var_455_17)
					else
						arg_452_1:AudioAction("play", "voice", "story_v_out_417012", "417012108", "story_v_out_417012.awb")
					end

					arg_452_1:RecordHistoryTalkVoice("story_v_out_417012", "417012108", "story_v_out_417012.awb")
				end

				arg_452_1:RecordContent(arg_452_1.text_.text)
			end

			local var_455_18 = math.max(var_455_9, arg_452_1.talkMaxDuration)

			if var_455_8 <= arg_452_1.time_ and arg_452_1.time_ < var_455_8 + var_455_18 then
				arg_452_1.typewritter.percent = (arg_452_1.time_ - var_455_8) / var_455_18

				arg_452_1.typewritter:SetDirty()
			end

			if arg_452_1.time_ >= var_455_8 + var_455_18 and arg_452_1.time_ < var_455_8 + var_455_18 + arg_455_0 then
				arg_452_1.typewritter.percent = 1

				arg_452_1.typewritter:SetDirty()
				arg_452_1:ShowNextGo(true)
			end
		end
	end,
	Play417012109 = function(arg_456_0, arg_456_1)
		arg_456_1.time_ = 0
		arg_456_1.frameCnt_ = 0
		arg_456_1.state_ = "playing"
		arg_456_1.curTalkId_ = 417012109
		arg_456_1.duration_ = 14.43

		local var_456_0 = {
			zh = 8.3,
			ja = 14.433
		}
		local var_456_1 = manager.audio:GetLocalizationFlag()

		if var_456_0[var_456_1] ~= nil then
			arg_456_1.duration_ = var_456_0[var_456_1]
		end

		SetActive(arg_456_1.tipsGo_, false)

		function arg_456_1.onSingleLineFinish_()
			arg_456_1.onSingleLineUpdate_ = nil
			arg_456_1.onSingleLineFinish_ = nil
			arg_456_1.state_ = "waiting"
		end

		function arg_456_1.playNext_(arg_458_0)
			if arg_458_0 == 1 then
				arg_456_0:Play417012110(arg_456_1)
			end
		end

		function arg_456_1.onSingleLineUpdate_(arg_459_0)
			local var_459_0 = arg_456_1.actors_["1034"].transform
			local var_459_1 = 0

			if var_459_1 < arg_456_1.time_ and arg_456_1.time_ <= var_459_1 + arg_459_0 then
				arg_456_1.var_.moveOldPos1034 = var_459_0.localPosition
				var_459_0.localScale = Vector3.New(1, 1, 1)

				arg_456_1:CheckSpriteTmpPos("1034", 3)

				local var_459_2 = var_459_0.childCount

				for iter_459_0 = 0, var_459_2 - 1 do
					local var_459_3 = var_459_0:GetChild(iter_459_0)

					if var_459_3.name == "" or not string.find(var_459_3.name, "split") then
						var_459_3.gameObject:SetActive(true)
					else
						var_459_3.gameObject:SetActive(false)
					end
				end
			end

			local var_459_4 = 0.001

			if var_459_1 <= arg_456_1.time_ and arg_456_1.time_ < var_459_1 + var_459_4 then
				local var_459_5 = (arg_456_1.time_ - var_459_1) / var_459_4
				local var_459_6 = Vector3.New(0, -331.9, -324)

				var_459_0.localPosition = Vector3.Lerp(arg_456_1.var_.moveOldPos1034, var_459_6, var_459_5)
			end

			if arg_456_1.time_ >= var_459_1 + var_459_4 and arg_456_1.time_ < var_459_1 + var_459_4 + arg_459_0 then
				var_459_0.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_459_7 = 0
			local var_459_8 = 1.025

			if var_459_7 < arg_456_1.time_ and arg_456_1.time_ <= var_459_7 + arg_459_0 then
				arg_456_1.talkMaxDuration = 0
				arg_456_1.dialogCg_.alpha = 1

				arg_456_1.dialog_:SetActive(true)
				SetActive(arg_456_1.leftNameGo_, true)

				local var_459_9 = arg_456_1:FormatText(StoryNameCfg[1109].name)

				arg_456_1.leftNameTxt_.text = var_459_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_456_1.leftNameTxt_.transform)

				arg_456_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_456_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_456_1:RecordName(arg_456_1.leftNameTxt_.text)
				SetActive(arg_456_1.iconTrs_.gameObject, false)
				arg_456_1.callingController_:SetSelectedState("normal")

				local var_459_10 = arg_456_1:GetWordFromCfg(417012109)
				local var_459_11 = arg_456_1:FormatText(var_459_10.content)

				arg_456_1.text_.text = var_459_11

				LuaForUtil.ClearLinePrefixSymbol(arg_456_1.text_)

				local var_459_12 = 41
				local var_459_13 = utf8.len(var_459_11)
				local var_459_14 = var_459_12 <= 0 and var_459_8 or var_459_8 * (var_459_13 / var_459_12)

				if var_459_14 > 0 and var_459_8 < var_459_14 then
					arg_456_1.talkMaxDuration = var_459_14

					if var_459_14 + var_459_7 > arg_456_1.duration_ then
						arg_456_1.duration_ = var_459_14 + var_459_7
					end
				end

				arg_456_1.text_.text = var_459_11
				arg_456_1.typewritter.percent = 0

				arg_456_1.typewritter:SetDirty()
				arg_456_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012109", "story_v_out_417012.awb") ~= 0 then
					local var_459_15 = manager.audio:GetVoiceLength("story_v_out_417012", "417012109", "story_v_out_417012.awb") / 1000

					if var_459_15 + var_459_7 > arg_456_1.duration_ then
						arg_456_1.duration_ = var_459_15 + var_459_7
					end

					if var_459_10.prefab_name ~= "" and arg_456_1.actors_[var_459_10.prefab_name] ~= nil then
						local var_459_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_456_1.actors_[var_459_10.prefab_name].transform, "story_v_out_417012", "417012109", "story_v_out_417012.awb")

						arg_456_1:RecordAudio("417012109", var_459_16)
						arg_456_1:RecordAudio("417012109", var_459_16)
					else
						arg_456_1:AudioAction("play", "voice", "story_v_out_417012", "417012109", "story_v_out_417012.awb")
					end

					arg_456_1:RecordHistoryTalkVoice("story_v_out_417012", "417012109", "story_v_out_417012.awb")
				end

				arg_456_1:RecordContent(arg_456_1.text_.text)
			end

			local var_459_17 = math.max(var_459_8, arg_456_1.talkMaxDuration)

			if var_459_7 <= arg_456_1.time_ and arg_456_1.time_ < var_459_7 + var_459_17 then
				arg_456_1.typewritter.percent = (arg_456_1.time_ - var_459_7) / var_459_17

				arg_456_1.typewritter:SetDirty()
			end

			if arg_456_1.time_ >= var_459_7 + var_459_17 and arg_456_1.time_ < var_459_7 + var_459_17 + arg_459_0 then
				arg_456_1.typewritter.percent = 1

				arg_456_1.typewritter:SetDirty()
				arg_456_1:ShowNextGo(true)
			end
		end
	end,
	Play417012110 = function(arg_460_0, arg_460_1)
		arg_460_1.time_ = 0
		arg_460_1.frameCnt_ = 0
		arg_460_1.state_ = "playing"
		arg_460_1.curTalkId_ = 417012110
		arg_460_1.duration_ = 11.6

		local var_460_0 = {
			zh = 9.4,
			ja = 11.6
		}
		local var_460_1 = manager.audio:GetLocalizationFlag()

		if var_460_0[var_460_1] ~= nil then
			arg_460_1.duration_ = var_460_0[var_460_1]
		end

		SetActive(arg_460_1.tipsGo_, false)

		function arg_460_1.onSingleLineFinish_()
			arg_460_1.onSingleLineUpdate_ = nil
			arg_460_1.onSingleLineFinish_ = nil
			arg_460_1.state_ = "waiting"
		end

		function arg_460_1.playNext_(arg_462_0)
			if arg_462_0 == 1 then
				arg_460_0:Play417012111(arg_460_1)
			end
		end

		function arg_460_1.onSingleLineUpdate_(arg_463_0)
			local var_463_0 = 0
			local var_463_1 = 1.05

			if var_463_0 < arg_460_1.time_ and arg_460_1.time_ <= var_463_0 + arg_463_0 then
				arg_460_1.talkMaxDuration = 0
				arg_460_1.dialogCg_.alpha = 1

				arg_460_1.dialog_:SetActive(true)
				SetActive(arg_460_1.leftNameGo_, true)

				local var_463_2 = arg_460_1:FormatText(StoryNameCfg[1109].name)

				arg_460_1.leftNameTxt_.text = var_463_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_460_1.leftNameTxt_.transform)

				arg_460_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_460_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_460_1:RecordName(arg_460_1.leftNameTxt_.text)
				SetActive(arg_460_1.iconTrs_.gameObject, false)
				arg_460_1.callingController_:SetSelectedState("normal")

				local var_463_3 = arg_460_1:GetWordFromCfg(417012110)
				local var_463_4 = arg_460_1:FormatText(var_463_3.content)

				arg_460_1.text_.text = var_463_4

				LuaForUtil.ClearLinePrefixSymbol(arg_460_1.text_)

				local var_463_5 = 41
				local var_463_6 = utf8.len(var_463_4)
				local var_463_7 = var_463_5 <= 0 and var_463_1 or var_463_1 * (var_463_6 / var_463_5)

				if var_463_7 > 0 and var_463_1 < var_463_7 then
					arg_460_1.talkMaxDuration = var_463_7

					if var_463_7 + var_463_0 > arg_460_1.duration_ then
						arg_460_1.duration_ = var_463_7 + var_463_0
					end
				end

				arg_460_1.text_.text = var_463_4
				arg_460_1.typewritter.percent = 0

				arg_460_1.typewritter:SetDirty()
				arg_460_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012110", "story_v_out_417012.awb") ~= 0 then
					local var_463_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012110", "story_v_out_417012.awb") / 1000

					if var_463_8 + var_463_0 > arg_460_1.duration_ then
						arg_460_1.duration_ = var_463_8 + var_463_0
					end

					if var_463_3.prefab_name ~= "" and arg_460_1.actors_[var_463_3.prefab_name] ~= nil then
						local var_463_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_460_1.actors_[var_463_3.prefab_name].transform, "story_v_out_417012", "417012110", "story_v_out_417012.awb")

						arg_460_1:RecordAudio("417012110", var_463_9)
						arg_460_1:RecordAudio("417012110", var_463_9)
					else
						arg_460_1:AudioAction("play", "voice", "story_v_out_417012", "417012110", "story_v_out_417012.awb")
					end

					arg_460_1:RecordHistoryTalkVoice("story_v_out_417012", "417012110", "story_v_out_417012.awb")
				end

				arg_460_1:RecordContent(arg_460_1.text_.text)
			end

			local var_463_10 = math.max(var_463_1, arg_460_1.talkMaxDuration)

			if var_463_0 <= arg_460_1.time_ and arg_460_1.time_ < var_463_0 + var_463_10 then
				arg_460_1.typewritter.percent = (arg_460_1.time_ - var_463_0) / var_463_10

				arg_460_1.typewritter:SetDirty()
			end

			if arg_460_1.time_ >= var_463_0 + var_463_10 and arg_460_1.time_ < var_463_0 + var_463_10 + arg_463_0 then
				arg_460_1.typewritter.percent = 1

				arg_460_1.typewritter:SetDirty()
				arg_460_1:ShowNextGo(true)
			end
		end
	end,
	Play417012111 = function(arg_464_0, arg_464_1)
		arg_464_1.time_ = 0
		arg_464_1.frameCnt_ = 0
		arg_464_1.state_ = "playing"
		arg_464_1.curTalkId_ = 417012111
		arg_464_1.duration_ = 5.67

		local var_464_0 = {
			zh = 4.466,
			ja = 5.666
		}
		local var_464_1 = manager.audio:GetLocalizationFlag()

		if var_464_0[var_464_1] ~= nil then
			arg_464_1.duration_ = var_464_0[var_464_1]
		end

		SetActive(arg_464_1.tipsGo_, false)

		function arg_464_1.onSingleLineFinish_()
			arg_464_1.onSingleLineUpdate_ = nil
			arg_464_1.onSingleLineFinish_ = nil
			arg_464_1.state_ = "waiting"
		end

		function arg_464_1.playNext_(arg_466_0)
			if arg_466_0 == 1 then
				arg_464_0:Play417012112(arg_464_1)
			end
		end

		function arg_464_1.onSingleLineUpdate_(arg_467_0)
			local var_467_0 = arg_464_1.actors_["1034"]
			local var_467_1 = 0

			if var_467_1 < arg_464_1.time_ and arg_464_1.time_ <= var_467_1 + arg_467_0 and not isNil(var_467_0) and arg_464_1.var_.actorSpriteComps1034 == nil then
				arg_464_1.var_.actorSpriteComps1034 = var_467_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_467_2 = 0.2

			if var_467_1 <= arg_464_1.time_ and arg_464_1.time_ < var_467_1 + var_467_2 and not isNil(var_467_0) then
				local var_467_3 = (arg_464_1.time_ - var_467_1) / var_467_2

				if arg_464_1.var_.actorSpriteComps1034 then
					for iter_467_0, iter_467_1 in pairs(arg_464_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_467_1 then
							if arg_464_1.isInRecall_ then
								local var_467_4 = Mathf.Lerp(iter_467_1.color.r, arg_464_1.hightColor2.r, var_467_3)
								local var_467_5 = Mathf.Lerp(iter_467_1.color.g, arg_464_1.hightColor2.g, var_467_3)
								local var_467_6 = Mathf.Lerp(iter_467_1.color.b, arg_464_1.hightColor2.b, var_467_3)

								iter_467_1.color = Color.New(var_467_4, var_467_5, var_467_6)
							else
								local var_467_7 = Mathf.Lerp(iter_467_1.color.r, 0.5, var_467_3)

								iter_467_1.color = Color.New(var_467_7, var_467_7, var_467_7)
							end
						end
					end
				end
			end

			if arg_464_1.time_ >= var_467_1 + var_467_2 and arg_464_1.time_ < var_467_1 + var_467_2 + arg_467_0 and not isNil(var_467_0) and arg_464_1.var_.actorSpriteComps1034 then
				for iter_467_2, iter_467_3 in pairs(arg_464_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_467_3 then
						if arg_464_1.isInRecall_ then
							iter_467_3.color = arg_464_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_467_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_464_1.var_.actorSpriteComps1034 = nil
			end

			local var_467_8 = 0
			local var_467_9 = 0.475

			if var_467_8 < arg_464_1.time_ and arg_464_1.time_ <= var_467_8 + arg_467_0 then
				arg_464_1.talkMaxDuration = 0
				arg_464_1.dialogCg_.alpha = 1

				arg_464_1.dialog_:SetActive(true)
				SetActive(arg_464_1.leftNameGo_, true)

				local var_467_10 = arg_464_1:FormatText(StoryNameCfg[1112].name)

				arg_464_1.leftNameTxt_.text = var_467_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_464_1.leftNameTxt_.transform)

				arg_464_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_464_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_464_1:RecordName(arg_464_1.leftNameTxt_.text)
				SetActive(arg_464_1.iconTrs_.gameObject, true)
				arg_464_1.iconController_:SetSelectedState("hero")

				arg_464_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_464_1.callingController_:SetSelectedState("normal")

				arg_464_1.keyicon_.color = Color.New(1, 1, 1)
				arg_464_1.icon_.color = Color.New(1, 1, 1)

				local var_467_11 = arg_464_1:GetWordFromCfg(417012111)
				local var_467_12 = arg_464_1:FormatText(var_467_11.content)

				arg_464_1.text_.text = var_467_12

				LuaForUtil.ClearLinePrefixSymbol(arg_464_1.text_)

				local var_467_13 = 19
				local var_467_14 = utf8.len(var_467_12)
				local var_467_15 = var_467_13 <= 0 and var_467_9 or var_467_9 * (var_467_14 / var_467_13)

				if var_467_15 > 0 and var_467_9 < var_467_15 then
					arg_464_1.talkMaxDuration = var_467_15

					if var_467_15 + var_467_8 > arg_464_1.duration_ then
						arg_464_1.duration_ = var_467_15 + var_467_8
					end
				end

				arg_464_1.text_.text = var_467_12
				arg_464_1.typewritter.percent = 0

				arg_464_1.typewritter:SetDirty()
				arg_464_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012111", "story_v_out_417012.awb") ~= 0 then
					local var_467_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012111", "story_v_out_417012.awb") / 1000

					if var_467_16 + var_467_8 > arg_464_1.duration_ then
						arg_464_1.duration_ = var_467_16 + var_467_8
					end

					if var_467_11.prefab_name ~= "" and arg_464_1.actors_[var_467_11.prefab_name] ~= nil then
						local var_467_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_464_1.actors_[var_467_11.prefab_name].transform, "story_v_out_417012", "417012111", "story_v_out_417012.awb")

						arg_464_1:RecordAudio("417012111", var_467_17)
						arg_464_1:RecordAudio("417012111", var_467_17)
					else
						arg_464_1:AudioAction("play", "voice", "story_v_out_417012", "417012111", "story_v_out_417012.awb")
					end

					arg_464_1:RecordHistoryTalkVoice("story_v_out_417012", "417012111", "story_v_out_417012.awb")
				end

				arg_464_1:RecordContent(arg_464_1.text_.text)
			end

			local var_467_18 = math.max(var_467_9, arg_464_1.talkMaxDuration)

			if var_467_8 <= arg_464_1.time_ and arg_464_1.time_ < var_467_8 + var_467_18 then
				arg_464_1.typewritter.percent = (arg_464_1.time_ - var_467_8) / var_467_18

				arg_464_1.typewritter:SetDirty()
			end

			if arg_464_1.time_ >= var_467_8 + var_467_18 and arg_464_1.time_ < var_467_8 + var_467_18 + arg_467_0 then
				arg_464_1.typewritter.percent = 1

				arg_464_1.typewritter:SetDirty()
				arg_464_1:ShowNextGo(true)
			end
		end
	end,
	Play417012112 = function(arg_468_0, arg_468_1)
		arg_468_1.time_ = 0
		arg_468_1.frameCnt_ = 0
		arg_468_1.state_ = "playing"
		arg_468_1.curTalkId_ = 417012112
		arg_468_1.duration_ = 8.87

		local var_468_0 = {
			zh = 5.066,
			ja = 8.866
		}
		local var_468_1 = manager.audio:GetLocalizationFlag()

		if var_468_0[var_468_1] ~= nil then
			arg_468_1.duration_ = var_468_0[var_468_1]
		end

		SetActive(arg_468_1.tipsGo_, false)

		function arg_468_1.onSingleLineFinish_()
			arg_468_1.onSingleLineUpdate_ = nil
			arg_468_1.onSingleLineFinish_ = nil
			arg_468_1.state_ = "waiting"
		end

		function arg_468_1.playNext_(arg_470_0)
			if arg_470_0 == 1 then
				arg_468_0:Play417012113(arg_468_1)
			end
		end

		function arg_468_1.onSingleLineUpdate_(arg_471_0)
			local var_471_0 = arg_468_1.actors_["1034"]
			local var_471_1 = 0

			if var_471_1 < arg_468_1.time_ and arg_468_1.time_ <= var_471_1 + arg_471_0 and not isNil(var_471_0) and arg_468_1.var_.actorSpriteComps1034 == nil then
				arg_468_1.var_.actorSpriteComps1034 = var_471_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_471_2 = 0.2

			if var_471_1 <= arg_468_1.time_ and arg_468_1.time_ < var_471_1 + var_471_2 and not isNil(var_471_0) then
				local var_471_3 = (arg_468_1.time_ - var_471_1) / var_471_2

				if arg_468_1.var_.actorSpriteComps1034 then
					for iter_471_0, iter_471_1 in pairs(arg_468_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_471_1 then
							if arg_468_1.isInRecall_ then
								local var_471_4 = Mathf.Lerp(iter_471_1.color.r, arg_468_1.hightColor1.r, var_471_3)
								local var_471_5 = Mathf.Lerp(iter_471_1.color.g, arg_468_1.hightColor1.g, var_471_3)
								local var_471_6 = Mathf.Lerp(iter_471_1.color.b, arg_468_1.hightColor1.b, var_471_3)

								iter_471_1.color = Color.New(var_471_4, var_471_5, var_471_6)
							else
								local var_471_7 = Mathf.Lerp(iter_471_1.color.r, 1, var_471_3)

								iter_471_1.color = Color.New(var_471_7, var_471_7, var_471_7)
							end
						end
					end
				end
			end

			if arg_468_1.time_ >= var_471_1 + var_471_2 and arg_468_1.time_ < var_471_1 + var_471_2 + arg_471_0 and not isNil(var_471_0) and arg_468_1.var_.actorSpriteComps1034 then
				for iter_471_2, iter_471_3 in pairs(arg_468_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_471_3 then
						if arg_468_1.isInRecall_ then
							iter_471_3.color = arg_468_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_471_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_468_1.var_.actorSpriteComps1034 = nil
			end

			local var_471_8 = arg_468_1.actors_["1034"].transform
			local var_471_9 = 0

			if var_471_9 < arg_468_1.time_ and arg_468_1.time_ <= var_471_9 + arg_471_0 then
				arg_468_1.var_.moveOldPos1034 = var_471_8.localPosition
				var_471_8.localScale = Vector3.New(1, 1, 1)

				arg_468_1:CheckSpriteTmpPos("1034", 3)

				local var_471_10 = var_471_8.childCount

				for iter_471_4 = 0, var_471_10 - 1 do
					local var_471_11 = var_471_8:GetChild(iter_471_4)

					if var_471_11.name == "split_7" or not string.find(var_471_11.name, "split") then
						var_471_11.gameObject:SetActive(true)
					else
						var_471_11.gameObject:SetActive(false)
					end
				end
			end

			local var_471_12 = 0.001

			if var_471_9 <= arg_468_1.time_ and arg_468_1.time_ < var_471_9 + var_471_12 then
				local var_471_13 = (arg_468_1.time_ - var_471_9) / var_471_12
				local var_471_14 = Vector3.New(0, -331.9, -324)

				var_471_8.localPosition = Vector3.Lerp(arg_468_1.var_.moveOldPos1034, var_471_14, var_471_13)
			end

			if arg_468_1.time_ >= var_471_9 + var_471_12 and arg_468_1.time_ < var_471_9 + var_471_12 + arg_471_0 then
				var_471_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_471_15 = 0
			local var_471_16 = 0.575

			if var_471_15 < arg_468_1.time_ and arg_468_1.time_ <= var_471_15 + arg_471_0 then
				arg_468_1.talkMaxDuration = 0
				arg_468_1.dialogCg_.alpha = 1

				arg_468_1.dialog_:SetActive(true)
				SetActive(arg_468_1.leftNameGo_, true)

				local var_471_17 = arg_468_1:FormatText(StoryNameCfg[1109].name)

				arg_468_1.leftNameTxt_.text = var_471_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_468_1.leftNameTxt_.transform)

				arg_468_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_468_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_468_1:RecordName(arg_468_1.leftNameTxt_.text)
				SetActive(arg_468_1.iconTrs_.gameObject, false)
				arg_468_1.callingController_:SetSelectedState("normal")

				local var_471_18 = arg_468_1:GetWordFromCfg(417012112)
				local var_471_19 = arg_468_1:FormatText(var_471_18.content)

				arg_468_1.text_.text = var_471_19

				LuaForUtil.ClearLinePrefixSymbol(arg_468_1.text_)

				local var_471_20 = 23
				local var_471_21 = utf8.len(var_471_19)
				local var_471_22 = var_471_20 <= 0 and var_471_16 or var_471_16 * (var_471_21 / var_471_20)

				if var_471_22 > 0 and var_471_16 < var_471_22 then
					arg_468_1.talkMaxDuration = var_471_22

					if var_471_22 + var_471_15 > arg_468_1.duration_ then
						arg_468_1.duration_ = var_471_22 + var_471_15
					end
				end

				arg_468_1.text_.text = var_471_19
				arg_468_1.typewritter.percent = 0

				arg_468_1.typewritter:SetDirty()
				arg_468_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012112", "story_v_out_417012.awb") ~= 0 then
					local var_471_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012112", "story_v_out_417012.awb") / 1000

					if var_471_23 + var_471_15 > arg_468_1.duration_ then
						arg_468_1.duration_ = var_471_23 + var_471_15
					end

					if var_471_18.prefab_name ~= "" and arg_468_1.actors_[var_471_18.prefab_name] ~= nil then
						local var_471_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_468_1.actors_[var_471_18.prefab_name].transform, "story_v_out_417012", "417012112", "story_v_out_417012.awb")

						arg_468_1:RecordAudio("417012112", var_471_24)
						arg_468_1:RecordAudio("417012112", var_471_24)
					else
						arg_468_1:AudioAction("play", "voice", "story_v_out_417012", "417012112", "story_v_out_417012.awb")
					end

					arg_468_1:RecordHistoryTalkVoice("story_v_out_417012", "417012112", "story_v_out_417012.awb")
				end

				arg_468_1:RecordContent(arg_468_1.text_.text)
			end

			local var_471_25 = math.max(var_471_16, arg_468_1.talkMaxDuration)

			if var_471_15 <= arg_468_1.time_ and arg_468_1.time_ < var_471_15 + var_471_25 then
				arg_468_1.typewritter.percent = (arg_468_1.time_ - var_471_15) / var_471_25

				arg_468_1.typewritter:SetDirty()
			end

			if arg_468_1.time_ >= var_471_15 + var_471_25 and arg_468_1.time_ < var_471_15 + var_471_25 + arg_471_0 then
				arg_468_1.typewritter.percent = 1

				arg_468_1.typewritter:SetDirty()
				arg_468_1:ShowNextGo(true)
			end
		end
	end,
	Play417012113 = function(arg_472_0, arg_472_1)
		arg_472_1.time_ = 0
		arg_472_1.frameCnt_ = 0
		arg_472_1.state_ = "playing"
		arg_472_1.curTalkId_ = 417012113
		arg_472_1.duration_ = 5

		SetActive(arg_472_1.tipsGo_, false)

		function arg_472_1.onSingleLineFinish_()
			arg_472_1.onSingleLineUpdate_ = nil
			arg_472_1.onSingleLineFinish_ = nil
			arg_472_1.state_ = "waiting"
		end

		function arg_472_1.playNext_(arg_474_0)
			if arg_474_0 == 1 then
				arg_472_0:Play417012114(arg_472_1)
			end
		end

		function arg_472_1.onSingleLineUpdate_(arg_475_0)
			local var_475_0 = arg_472_1.actors_["1034"]
			local var_475_1 = 0

			if var_475_1 < arg_472_1.time_ and arg_472_1.time_ <= var_475_1 + arg_475_0 and not isNil(var_475_0) and arg_472_1.var_.actorSpriteComps1034 == nil then
				arg_472_1.var_.actorSpriteComps1034 = var_475_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_475_2 = 0.2

			if var_475_1 <= arg_472_1.time_ and arg_472_1.time_ < var_475_1 + var_475_2 and not isNil(var_475_0) then
				local var_475_3 = (arg_472_1.time_ - var_475_1) / var_475_2

				if arg_472_1.var_.actorSpriteComps1034 then
					for iter_475_0, iter_475_1 in pairs(arg_472_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_475_1 then
							if arg_472_1.isInRecall_ then
								local var_475_4 = Mathf.Lerp(iter_475_1.color.r, arg_472_1.hightColor2.r, var_475_3)
								local var_475_5 = Mathf.Lerp(iter_475_1.color.g, arg_472_1.hightColor2.g, var_475_3)
								local var_475_6 = Mathf.Lerp(iter_475_1.color.b, arg_472_1.hightColor2.b, var_475_3)

								iter_475_1.color = Color.New(var_475_4, var_475_5, var_475_6)
							else
								local var_475_7 = Mathf.Lerp(iter_475_1.color.r, 0.5, var_475_3)

								iter_475_1.color = Color.New(var_475_7, var_475_7, var_475_7)
							end
						end
					end
				end
			end

			if arg_472_1.time_ >= var_475_1 + var_475_2 and arg_472_1.time_ < var_475_1 + var_475_2 + arg_475_0 and not isNil(var_475_0) and arg_472_1.var_.actorSpriteComps1034 then
				for iter_475_2, iter_475_3 in pairs(arg_472_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_475_3 then
						if arg_472_1.isInRecall_ then
							iter_475_3.color = arg_472_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_475_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_472_1.var_.actorSpriteComps1034 = nil
			end

			local var_475_8 = arg_472_1.actors_["1034"].transform
			local var_475_9 = 0

			if var_475_9 < arg_472_1.time_ and arg_472_1.time_ <= var_475_9 + arg_475_0 then
				arg_472_1.var_.moveOldPos1034 = var_475_8.localPosition
				var_475_8.localScale = Vector3.New(1, 1, 1)

				arg_472_1:CheckSpriteTmpPos("1034", 7)

				local var_475_10 = var_475_8.childCount

				for iter_475_4 = 0, var_475_10 - 1 do
					local var_475_11 = var_475_8:GetChild(iter_475_4)

					if var_475_11.name == "" or not string.find(var_475_11.name, "split") then
						var_475_11.gameObject:SetActive(true)
					else
						var_475_11.gameObject:SetActive(false)
					end
				end
			end

			local var_475_12 = 0.001

			if var_475_9 <= arg_472_1.time_ and arg_472_1.time_ < var_475_9 + var_475_12 then
				local var_475_13 = (arg_472_1.time_ - var_475_9) / var_475_12
				local var_475_14 = Vector3.New(0, -2000, 0)

				var_475_8.localPosition = Vector3.Lerp(arg_472_1.var_.moveOldPos1034, var_475_14, var_475_13)
			end

			if arg_472_1.time_ >= var_475_9 + var_475_12 and arg_472_1.time_ < var_475_9 + var_475_12 + arg_475_0 then
				var_475_8.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_475_15 = 0
			local var_475_16 = 1

			if var_475_15 < arg_472_1.time_ and arg_472_1.time_ <= var_475_15 + arg_475_0 then
				local var_475_17 = "play"
				local var_475_18 = "effect"

				arg_472_1:AudioAction(var_475_17, var_475_18, "se_story_1310", "se_story_1310_keyboard", "")
			end

			local var_475_19 = 0
			local var_475_20 = 0.75

			if var_475_19 < arg_472_1.time_ and arg_472_1.time_ <= var_475_19 + arg_475_0 then
				arg_472_1.talkMaxDuration = 0
				arg_472_1.dialogCg_.alpha = 1

				arg_472_1.dialog_:SetActive(true)
				SetActive(arg_472_1.leftNameGo_, false)

				arg_472_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_472_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_472_1:RecordName(arg_472_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_472_1.iconTrs_.gameObject, false)
				arg_472_1.callingController_:SetSelectedState("normal")

				local var_475_21 = arg_472_1:GetWordFromCfg(417012113)
				local var_475_22 = arg_472_1:FormatText(var_475_21.content)

				arg_472_1.text_.text = var_475_22

				LuaForUtil.ClearLinePrefixSymbol(arg_472_1.text_)

				local var_475_23 = 30
				local var_475_24 = utf8.len(var_475_22)
				local var_475_25 = var_475_23 <= 0 and var_475_20 or var_475_20 * (var_475_24 / var_475_23)

				if var_475_25 > 0 and var_475_20 < var_475_25 then
					arg_472_1.talkMaxDuration = var_475_25

					if var_475_25 + var_475_19 > arg_472_1.duration_ then
						arg_472_1.duration_ = var_475_25 + var_475_19
					end
				end

				arg_472_1.text_.text = var_475_22
				arg_472_1.typewritter.percent = 0

				arg_472_1.typewritter:SetDirty()
				arg_472_1:ShowNextGo(false)
				arg_472_1:RecordContent(arg_472_1.text_.text)
			end

			local var_475_26 = math.max(var_475_20, arg_472_1.talkMaxDuration)

			if var_475_19 <= arg_472_1.time_ and arg_472_1.time_ < var_475_19 + var_475_26 then
				arg_472_1.typewritter.percent = (arg_472_1.time_ - var_475_19) / var_475_26

				arg_472_1.typewritter:SetDirty()
			end

			if arg_472_1.time_ >= var_475_19 + var_475_26 and arg_472_1.time_ < var_475_19 + var_475_26 + arg_475_0 then
				arg_472_1.typewritter.percent = 1

				arg_472_1.typewritter:SetDirty()
				arg_472_1:ShowNextGo(true)
			end
		end
	end,
	Play417012114 = function(arg_476_0, arg_476_1)
		arg_476_1.time_ = 0
		arg_476_1.frameCnt_ = 0
		arg_476_1.state_ = "playing"
		arg_476_1.curTalkId_ = 417012114
		arg_476_1.duration_ = 5

		SetActive(arg_476_1.tipsGo_, false)

		function arg_476_1.onSingleLineFinish_()
			arg_476_1.onSingleLineUpdate_ = nil
			arg_476_1.onSingleLineFinish_ = nil
			arg_476_1.state_ = "waiting"
		end

		function arg_476_1.playNext_(arg_478_0)
			if arg_478_0 == 1 then
				arg_476_0:Play417012115(arg_476_1)
			end
		end

		function arg_476_1.onSingleLineUpdate_(arg_479_0)
			local var_479_0 = 0.0500000000000001
			local var_479_1 = 1

			if var_479_0 < arg_476_1.time_ and arg_476_1.time_ <= var_479_0 + arg_479_0 then
				local var_479_2 = "play"
				local var_479_3 = "effect"

				arg_476_1:AudioAction(var_479_2, var_479_3, "se_story_1310", "se_story_1310_tip", "")
			end

			local var_479_4 = 0
			local var_479_5 = 1.45

			if var_479_4 < arg_476_1.time_ and arg_476_1.time_ <= var_479_4 + arg_479_0 then
				arg_476_1.talkMaxDuration = 0
				arg_476_1.dialogCg_.alpha = 1

				arg_476_1.dialog_:SetActive(true)
				SetActive(arg_476_1.leftNameGo_, false)

				arg_476_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_476_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_476_1:RecordName(arg_476_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_476_1.iconTrs_.gameObject, false)
				arg_476_1.callingController_:SetSelectedState("normal")

				local var_479_6 = arg_476_1:GetWordFromCfg(417012114)
				local var_479_7 = arg_476_1:FormatText(var_479_6.content)

				arg_476_1.text_.text = var_479_7

				LuaForUtil.ClearLinePrefixSymbol(arg_476_1.text_)

				local var_479_8 = 59
				local var_479_9 = utf8.len(var_479_7)
				local var_479_10 = var_479_8 <= 0 and var_479_5 or var_479_5 * (var_479_9 / var_479_8)

				if var_479_10 > 0 and var_479_5 < var_479_10 then
					arg_476_1.talkMaxDuration = var_479_10

					if var_479_10 + var_479_4 > arg_476_1.duration_ then
						arg_476_1.duration_ = var_479_10 + var_479_4
					end
				end

				arg_476_1.text_.text = var_479_7
				arg_476_1.typewritter.percent = 0

				arg_476_1.typewritter:SetDirty()
				arg_476_1:ShowNextGo(false)
				arg_476_1:RecordContent(arg_476_1.text_.text)
			end

			local var_479_11 = math.max(var_479_5, arg_476_1.talkMaxDuration)

			if var_479_4 <= arg_476_1.time_ and arg_476_1.time_ < var_479_4 + var_479_11 then
				arg_476_1.typewritter.percent = (arg_476_1.time_ - var_479_4) / var_479_11

				arg_476_1.typewritter:SetDirty()
			end

			if arg_476_1.time_ >= var_479_4 + var_479_11 and arg_476_1.time_ < var_479_4 + var_479_11 + arg_479_0 then
				arg_476_1.typewritter.percent = 1

				arg_476_1.typewritter:SetDirty()
				arg_476_1:ShowNextGo(true)
			end
		end
	end,
	Play417012115 = function(arg_480_0, arg_480_1)
		arg_480_1.time_ = 0
		arg_480_1.frameCnt_ = 0
		arg_480_1.state_ = "playing"
		arg_480_1.curTalkId_ = 417012115
		arg_480_1.duration_ = 3.87

		local var_480_0 = {
			zh = 2.133,
			ja = 3.866
		}
		local var_480_1 = manager.audio:GetLocalizationFlag()

		if var_480_0[var_480_1] ~= nil then
			arg_480_1.duration_ = var_480_0[var_480_1]
		end

		SetActive(arg_480_1.tipsGo_, false)

		function arg_480_1.onSingleLineFinish_()
			arg_480_1.onSingleLineUpdate_ = nil
			arg_480_1.onSingleLineFinish_ = nil
			arg_480_1.state_ = "waiting"
		end

		function arg_480_1.playNext_(arg_482_0)
			if arg_482_0 == 1 then
				arg_480_0:Play417012116(arg_480_1)
			end
		end

		function arg_480_1.onSingleLineUpdate_(arg_483_0)
			local var_483_0 = 0
			local var_483_1 = 0.225

			if var_483_0 < arg_480_1.time_ and arg_480_1.time_ <= var_483_0 + arg_483_0 then
				arg_480_1.talkMaxDuration = 0
				arg_480_1.dialogCg_.alpha = 1

				arg_480_1.dialog_:SetActive(true)
				SetActive(arg_480_1.leftNameGo_, true)

				local var_483_2 = arg_480_1:FormatText(StoryNameCfg[1112].name)

				arg_480_1.leftNameTxt_.text = var_483_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_480_1.leftNameTxt_.transform)

				arg_480_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_480_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_480_1:RecordName(arg_480_1.leftNameTxt_.text)
				SetActive(arg_480_1.iconTrs_.gameObject, true)
				arg_480_1.iconController_:SetSelectedState("hero")

				arg_480_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_480_1.callingController_:SetSelectedState("normal")

				arg_480_1.keyicon_.color = Color.New(1, 1, 1)
				arg_480_1.icon_.color = Color.New(1, 1, 1)

				local var_483_3 = arg_480_1:GetWordFromCfg(417012115)
				local var_483_4 = arg_480_1:FormatText(var_483_3.content)

				arg_480_1.text_.text = var_483_4

				LuaForUtil.ClearLinePrefixSymbol(arg_480_1.text_)

				local var_483_5 = 9
				local var_483_6 = utf8.len(var_483_4)
				local var_483_7 = var_483_5 <= 0 and var_483_1 or var_483_1 * (var_483_6 / var_483_5)

				if var_483_7 > 0 and var_483_1 < var_483_7 then
					arg_480_1.talkMaxDuration = var_483_7

					if var_483_7 + var_483_0 > arg_480_1.duration_ then
						arg_480_1.duration_ = var_483_7 + var_483_0
					end
				end

				arg_480_1.text_.text = var_483_4
				arg_480_1.typewritter.percent = 0

				arg_480_1.typewritter:SetDirty()
				arg_480_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012115", "story_v_out_417012.awb") ~= 0 then
					local var_483_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012115", "story_v_out_417012.awb") / 1000

					if var_483_8 + var_483_0 > arg_480_1.duration_ then
						arg_480_1.duration_ = var_483_8 + var_483_0
					end

					if var_483_3.prefab_name ~= "" and arg_480_1.actors_[var_483_3.prefab_name] ~= nil then
						local var_483_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_480_1.actors_[var_483_3.prefab_name].transform, "story_v_out_417012", "417012115", "story_v_out_417012.awb")

						arg_480_1:RecordAudio("417012115", var_483_9)
						arg_480_1:RecordAudio("417012115", var_483_9)
					else
						arg_480_1:AudioAction("play", "voice", "story_v_out_417012", "417012115", "story_v_out_417012.awb")
					end

					arg_480_1:RecordHistoryTalkVoice("story_v_out_417012", "417012115", "story_v_out_417012.awb")
				end

				arg_480_1:RecordContent(arg_480_1.text_.text)
			end

			local var_483_10 = math.max(var_483_1, arg_480_1.talkMaxDuration)

			if var_483_0 <= arg_480_1.time_ and arg_480_1.time_ < var_483_0 + var_483_10 then
				arg_480_1.typewritter.percent = (arg_480_1.time_ - var_483_0) / var_483_10

				arg_480_1.typewritter:SetDirty()
			end

			if arg_480_1.time_ >= var_483_0 + var_483_10 and arg_480_1.time_ < var_483_0 + var_483_10 + arg_483_0 then
				arg_480_1.typewritter.percent = 1

				arg_480_1.typewritter:SetDirty()
				arg_480_1:ShowNextGo(true)
			end
		end
	end,
	Play417012116 = function(arg_484_0, arg_484_1)
		arg_484_1.time_ = 0
		arg_484_1.frameCnt_ = 0
		arg_484_1.state_ = "playing"
		arg_484_1.curTalkId_ = 417012116
		arg_484_1.duration_ = 7.43

		local var_484_0 = {
			zh = 5.266,
			ja = 7.433
		}
		local var_484_1 = manager.audio:GetLocalizationFlag()

		if var_484_0[var_484_1] ~= nil then
			arg_484_1.duration_ = var_484_0[var_484_1]
		end

		SetActive(arg_484_1.tipsGo_, false)

		function arg_484_1.onSingleLineFinish_()
			arg_484_1.onSingleLineUpdate_ = nil
			arg_484_1.onSingleLineFinish_ = nil
			arg_484_1.state_ = "waiting"
		end

		function arg_484_1.playNext_(arg_486_0)
			if arg_486_0 == 1 then
				arg_484_0:Play417012117(arg_484_1)
			end
		end

		function arg_484_1.onSingleLineUpdate_(arg_487_0)
			local var_487_0 = arg_484_1.actors_["1034"]
			local var_487_1 = 0

			if var_487_1 < arg_484_1.time_ and arg_484_1.time_ <= var_487_1 + arg_487_0 and not isNil(var_487_0) and arg_484_1.var_.actorSpriteComps1034 == nil then
				arg_484_1.var_.actorSpriteComps1034 = var_487_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_487_2 = 0.2

			if var_487_1 <= arg_484_1.time_ and arg_484_1.time_ < var_487_1 + var_487_2 and not isNil(var_487_0) then
				local var_487_3 = (arg_484_1.time_ - var_487_1) / var_487_2

				if arg_484_1.var_.actorSpriteComps1034 then
					for iter_487_0, iter_487_1 in pairs(arg_484_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_487_1 then
							if arg_484_1.isInRecall_ then
								local var_487_4 = Mathf.Lerp(iter_487_1.color.r, arg_484_1.hightColor1.r, var_487_3)
								local var_487_5 = Mathf.Lerp(iter_487_1.color.g, arg_484_1.hightColor1.g, var_487_3)
								local var_487_6 = Mathf.Lerp(iter_487_1.color.b, arg_484_1.hightColor1.b, var_487_3)

								iter_487_1.color = Color.New(var_487_4, var_487_5, var_487_6)
							else
								local var_487_7 = Mathf.Lerp(iter_487_1.color.r, 1, var_487_3)

								iter_487_1.color = Color.New(var_487_7, var_487_7, var_487_7)
							end
						end
					end
				end
			end

			if arg_484_1.time_ >= var_487_1 + var_487_2 and arg_484_1.time_ < var_487_1 + var_487_2 + arg_487_0 and not isNil(var_487_0) and arg_484_1.var_.actorSpriteComps1034 then
				for iter_487_2, iter_487_3 in pairs(arg_484_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_487_3 then
						if arg_484_1.isInRecall_ then
							iter_487_3.color = arg_484_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_487_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_484_1.var_.actorSpriteComps1034 = nil
			end

			local var_487_8 = arg_484_1.actors_["1034"].transform
			local var_487_9 = 0

			if var_487_9 < arg_484_1.time_ and arg_484_1.time_ <= var_487_9 + arg_487_0 then
				arg_484_1.var_.moveOldPos1034 = var_487_8.localPosition
				var_487_8.localScale = Vector3.New(1, 1, 1)

				arg_484_1:CheckSpriteTmpPos("1034", 3)

				local var_487_10 = var_487_8.childCount

				for iter_487_4 = 0, var_487_10 - 1 do
					local var_487_11 = var_487_8:GetChild(iter_487_4)

					if var_487_11.name == "split_4" or not string.find(var_487_11.name, "split") then
						var_487_11.gameObject:SetActive(true)
					else
						var_487_11.gameObject:SetActive(false)
					end
				end
			end

			local var_487_12 = 0.001

			if var_487_9 <= arg_484_1.time_ and arg_484_1.time_ < var_487_9 + var_487_12 then
				local var_487_13 = (arg_484_1.time_ - var_487_9) / var_487_12
				local var_487_14 = Vector3.New(0, -331.9, -324)

				var_487_8.localPosition = Vector3.Lerp(arg_484_1.var_.moveOldPos1034, var_487_14, var_487_13)
			end

			if arg_484_1.time_ >= var_487_9 + var_487_12 and arg_484_1.time_ < var_487_9 + var_487_12 + arg_487_0 then
				var_487_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_487_15 = 0
			local var_487_16 = 0.65

			if var_487_15 < arg_484_1.time_ and arg_484_1.time_ <= var_487_15 + arg_487_0 then
				arg_484_1.talkMaxDuration = 0
				arg_484_1.dialogCg_.alpha = 1

				arg_484_1.dialog_:SetActive(true)
				SetActive(arg_484_1.leftNameGo_, true)

				local var_487_17 = arg_484_1:FormatText(StoryNameCfg[1109].name)

				arg_484_1.leftNameTxt_.text = var_487_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_484_1.leftNameTxt_.transform)

				arg_484_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_484_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_484_1:RecordName(arg_484_1.leftNameTxt_.text)
				SetActive(arg_484_1.iconTrs_.gameObject, false)
				arg_484_1.callingController_:SetSelectedState("normal")

				local var_487_18 = arg_484_1:GetWordFromCfg(417012116)
				local var_487_19 = arg_484_1:FormatText(var_487_18.content)

				arg_484_1.text_.text = var_487_19

				LuaForUtil.ClearLinePrefixSymbol(arg_484_1.text_)

				local var_487_20 = 26
				local var_487_21 = utf8.len(var_487_19)
				local var_487_22 = var_487_20 <= 0 and var_487_16 or var_487_16 * (var_487_21 / var_487_20)

				if var_487_22 > 0 and var_487_16 < var_487_22 then
					arg_484_1.talkMaxDuration = var_487_22

					if var_487_22 + var_487_15 > arg_484_1.duration_ then
						arg_484_1.duration_ = var_487_22 + var_487_15
					end
				end

				arg_484_1.text_.text = var_487_19
				arg_484_1.typewritter.percent = 0

				arg_484_1.typewritter:SetDirty()
				arg_484_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012116", "story_v_out_417012.awb") ~= 0 then
					local var_487_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012116", "story_v_out_417012.awb") / 1000

					if var_487_23 + var_487_15 > arg_484_1.duration_ then
						arg_484_1.duration_ = var_487_23 + var_487_15
					end

					if var_487_18.prefab_name ~= "" and arg_484_1.actors_[var_487_18.prefab_name] ~= nil then
						local var_487_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_484_1.actors_[var_487_18.prefab_name].transform, "story_v_out_417012", "417012116", "story_v_out_417012.awb")

						arg_484_1:RecordAudio("417012116", var_487_24)
						arg_484_1:RecordAudio("417012116", var_487_24)
					else
						arg_484_1:AudioAction("play", "voice", "story_v_out_417012", "417012116", "story_v_out_417012.awb")
					end

					arg_484_1:RecordHistoryTalkVoice("story_v_out_417012", "417012116", "story_v_out_417012.awb")
				end

				arg_484_1:RecordContent(arg_484_1.text_.text)
			end

			local var_487_25 = math.max(var_487_16, arg_484_1.talkMaxDuration)

			if var_487_15 <= arg_484_1.time_ and arg_484_1.time_ < var_487_15 + var_487_25 then
				arg_484_1.typewritter.percent = (arg_484_1.time_ - var_487_15) / var_487_25

				arg_484_1.typewritter:SetDirty()
			end

			if arg_484_1.time_ >= var_487_15 + var_487_25 and arg_484_1.time_ < var_487_15 + var_487_25 + arg_487_0 then
				arg_484_1.typewritter.percent = 1

				arg_484_1.typewritter:SetDirty()
				arg_484_1:ShowNextGo(true)
			end
		end
	end,
	Play417012117 = function(arg_488_0, arg_488_1)
		arg_488_1.time_ = 0
		arg_488_1.frameCnt_ = 0
		arg_488_1.state_ = "playing"
		arg_488_1.curTalkId_ = 417012117
		arg_488_1.duration_ = 6.77

		local var_488_0 = {
			zh = 4.1,
			ja = 6.766
		}
		local var_488_1 = manager.audio:GetLocalizationFlag()

		if var_488_0[var_488_1] ~= nil then
			arg_488_1.duration_ = var_488_0[var_488_1]
		end

		SetActive(arg_488_1.tipsGo_, false)

		function arg_488_1.onSingleLineFinish_()
			arg_488_1.onSingleLineUpdate_ = nil
			arg_488_1.onSingleLineFinish_ = nil
			arg_488_1.state_ = "waiting"
		end

		function arg_488_1.playNext_(arg_490_0)
			if arg_490_0 == 1 then
				arg_488_0:Play417012118(arg_488_1)
			end
		end

		function arg_488_1.onSingleLineUpdate_(arg_491_0)
			local var_491_0 = 0
			local var_491_1 = 0.525

			if var_491_0 < arg_488_1.time_ and arg_488_1.time_ <= var_491_0 + arg_491_0 then
				arg_488_1.talkMaxDuration = 0
				arg_488_1.dialogCg_.alpha = 1

				arg_488_1.dialog_:SetActive(true)
				SetActive(arg_488_1.leftNameGo_, true)

				local var_491_2 = arg_488_1:FormatText(StoryNameCfg[1109].name)

				arg_488_1.leftNameTxt_.text = var_491_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_488_1.leftNameTxt_.transform)

				arg_488_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_488_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_488_1:RecordName(arg_488_1.leftNameTxt_.text)
				SetActive(arg_488_1.iconTrs_.gameObject, false)
				arg_488_1.callingController_:SetSelectedState("normal")

				local var_491_3 = arg_488_1:GetWordFromCfg(417012117)
				local var_491_4 = arg_488_1:FormatText(var_491_3.content)

				arg_488_1.text_.text = var_491_4

				LuaForUtil.ClearLinePrefixSymbol(arg_488_1.text_)

				local var_491_5 = 21
				local var_491_6 = utf8.len(var_491_4)
				local var_491_7 = var_491_5 <= 0 and var_491_1 or var_491_1 * (var_491_6 / var_491_5)

				if var_491_7 > 0 and var_491_1 < var_491_7 then
					arg_488_1.talkMaxDuration = var_491_7

					if var_491_7 + var_491_0 > arg_488_1.duration_ then
						arg_488_1.duration_ = var_491_7 + var_491_0
					end
				end

				arg_488_1.text_.text = var_491_4
				arg_488_1.typewritter.percent = 0

				arg_488_1.typewritter:SetDirty()
				arg_488_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012117", "story_v_out_417012.awb") ~= 0 then
					local var_491_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012117", "story_v_out_417012.awb") / 1000

					if var_491_8 + var_491_0 > arg_488_1.duration_ then
						arg_488_1.duration_ = var_491_8 + var_491_0
					end

					if var_491_3.prefab_name ~= "" and arg_488_1.actors_[var_491_3.prefab_name] ~= nil then
						local var_491_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_488_1.actors_[var_491_3.prefab_name].transform, "story_v_out_417012", "417012117", "story_v_out_417012.awb")

						arg_488_1:RecordAudio("417012117", var_491_9)
						arg_488_1:RecordAudio("417012117", var_491_9)
					else
						arg_488_1:AudioAction("play", "voice", "story_v_out_417012", "417012117", "story_v_out_417012.awb")
					end

					arg_488_1:RecordHistoryTalkVoice("story_v_out_417012", "417012117", "story_v_out_417012.awb")
				end

				arg_488_1:RecordContent(arg_488_1.text_.text)
			end

			local var_491_10 = math.max(var_491_1, arg_488_1.talkMaxDuration)

			if var_491_0 <= arg_488_1.time_ and arg_488_1.time_ < var_491_0 + var_491_10 then
				arg_488_1.typewritter.percent = (arg_488_1.time_ - var_491_0) / var_491_10

				arg_488_1.typewritter:SetDirty()
			end

			if arg_488_1.time_ >= var_491_0 + var_491_10 and arg_488_1.time_ < var_491_0 + var_491_10 + arg_491_0 then
				arg_488_1.typewritter.percent = 1

				arg_488_1.typewritter:SetDirty()
				arg_488_1:ShowNextGo(true)
			end
		end
	end,
	Play417012118 = function(arg_492_0, arg_492_1)
		arg_492_1.time_ = 0
		arg_492_1.frameCnt_ = 0
		arg_492_1.state_ = "playing"
		arg_492_1.curTalkId_ = 417012118
		arg_492_1.duration_ = 7.73

		local var_492_0 = {
			zh = 6,
			ja = 7.733
		}
		local var_492_1 = manager.audio:GetLocalizationFlag()

		if var_492_0[var_492_1] ~= nil then
			arg_492_1.duration_ = var_492_0[var_492_1]
		end

		SetActive(arg_492_1.tipsGo_, false)

		function arg_492_1.onSingleLineFinish_()
			arg_492_1.onSingleLineUpdate_ = nil
			arg_492_1.onSingleLineFinish_ = nil
			arg_492_1.state_ = "waiting"
		end

		function arg_492_1.playNext_(arg_494_0)
			if arg_494_0 == 1 then
				arg_492_0:Play417012119(arg_492_1)
			end
		end

		function arg_492_1.onSingleLineUpdate_(arg_495_0)
			local var_495_0 = arg_492_1.actors_["1034"]
			local var_495_1 = 0

			if var_495_1 < arg_492_1.time_ and arg_492_1.time_ <= var_495_1 + arg_495_0 and not isNil(var_495_0) and arg_492_1.var_.actorSpriteComps1034 == nil then
				arg_492_1.var_.actorSpriteComps1034 = var_495_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_495_2 = 0.2

			if var_495_1 <= arg_492_1.time_ and arg_492_1.time_ < var_495_1 + var_495_2 and not isNil(var_495_0) then
				local var_495_3 = (arg_492_1.time_ - var_495_1) / var_495_2

				if arg_492_1.var_.actorSpriteComps1034 then
					for iter_495_0, iter_495_1 in pairs(arg_492_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_495_1 then
							if arg_492_1.isInRecall_ then
								local var_495_4 = Mathf.Lerp(iter_495_1.color.r, arg_492_1.hightColor2.r, var_495_3)
								local var_495_5 = Mathf.Lerp(iter_495_1.color.g, arg_492_1.hightColor2.g, var_495_3)
								local var_495_6 = Mathf.Lerp(iter_495_1.color.b, arg_492_1.hightColor2.b, var_495_3)

								iter_495_1.color = Color.New(var_495_4, var_495_5, var_495_6)
							else
								local var_495_7 = Mathf.Lerp(iter_495_1.color.r, 0.5, var_495_3)

								iter_495_1.color = Color.New(var_495_7, var_495_7, var_495_7)
							end
						end
					end
				end
			end

			if arg_492_1.time_ >= var_495_1 + var_495_2 and arg_492_1.time_ < var_495_1 + var_495_2 + arg_495_0 and not isNil(var_495_0) and arg_492_1.var_.actorSpriteComps1034 then
				for iter_495_2, iter_495_3 in pairs(arg_492_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_495_3 then
						if arg_492_1.isInRecall_ then
							iter_495_3.color = arg_492_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_495_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_492_1.var_.actorSpriteComps1034 = nil
			end

			local var_495_8 = 0
			local var_495_9 = 0.85

			if var_495_8 < arg_492_1.time_ and arg_492_1.time_ <= var_495_8 + arg_495_0 then
				arg_492_1.talkMaxDuration = 0
				arg_492_1.dialogCg_.alpha = 1

				arg_492_1.dialog_:SetActive(true)
				SetActive(arg_492_1.leftNameGo_, true)

				local var_495_10 = arg_492_1:FormatText(StoryNameCfg[1112].name)

				arg_492_1.leftNameTxt_.text = var_495_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_492_1.leftNameTxt_.transform)

				arg_492_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_492_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_492_1:RecordName(arg_492_1.leftNameTxt_.text)
				SetActive(arg_492_1.iconTrs_.gameObject, true)
				arg_492_1.iconController_:SetSelectedState("hero")

				arg_492_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_officeladya")

				arg_492_1.callingController_:SetSelectedState("normal")

				arg_492_1.keyicon_.color = Color.New(1, 1, 1)
				arg_492_1.icon_.color = Color.New(1, 1, 1)

				local var_495_11 = arg_492_1:GetWordFromCfg(417012118)
				local var_495_12 = arg_492_1:FormatText(var_495_11.content)

				arg_492_1.text_.text = var_495_12

				LuaForUtil.ClearLinePrefixSymbol(arg_492_1.text_)

				local var_495_13 = 34
				local var_495_14 = utf8.len(var_495_12)
				local var_495_15 = var_495_13 <= 0 and var_495_9 or var_495_9 * (var_495_14 / var_495_13)

				if var_495_15 > 0 and var_495_9 < var_495_15 then
					arg_492_1.talkMaxDuration = var_495_15

					if var_495_15 + var_495_8 > arg_492_1.duration_ then
						arg_492_1.duration_ = var_495_15 + var_495_8
					end
				end

				arg_492_1.text_.text = var_495_12
				arg_492_1.typewritter.percent = 0

				arg_492_1.typewritter:SetDirty()
				arg_492_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012118", "story_v_out_417012.awb") ~= 0 then
					local var_495_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012118", "story_v_out_417012.awb") / 1000

					if var_495_16 + var_495_8 > arg_492_1.duration_ then
						arg_492_1.duration_ = var_495_16 + var_495_8
					end

					if var_495_11.prefab_name ~= "" and arg_492_1.actors_[var_495_11.prefab_name] ~= nil then
						local var_495_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_492_1.actors_[var_495_11.prefab_name].transform, "story_v_out_417012", "417012118", "story_v_out_417012.awb")

						arg_492_1:RecordAudio("417012118", var_495_17)
						arg_492_1:RecordAudio("417012118", var_495_17)
					else
						arg_492_1:AudioAction("play", "voice", "story_v_out_417012", "417012118", "story_v_out_417012.awb")
					end

					arg_492_1:RecordHistoryTalkVoice("story_v_out_417012", "417012118", "story_v_out_417012.awb")
				end

				arg_492_1:RecordContent(arg_492_1.text_.text)
			end

			local var_495_18 = math.max(var_495_9, arg_492_1.talkMaxDuration)

			if var_495_8 <= arg_492_1.time_ and arg_492_1.time_ < var_495_8 + var_495_18 then
				arg_492_1.typewritter.percent = (arg_492_1.time_ - var_495_8) / var_495_18

				arg_492_1.typewritter:SetDirty()
			end

			if arg_492_1.time_ >= var_495_8 + var_495_18 and arg_492_1.time_ < var_495_8 + var_495_18 + arg_495_0 then
				arg_492_1.typewritter.percent = 1

				arg_492_1.typewritter:SetDirty()
				arg_492_1:ShowNextGo(true)
			end
		end
	end,
	Play417012119 = function(arg_496_0, arg_496_1)
		arg_496_1.time_ = 0
		arg_496_1.frameCnt_ = 0
		arg_496_1.state_ = "playing"
		arg_496_1.curTalkId_ = 417012119
		arg_496_1.duration_ = 5

		SetActive(arg_496_1.tipsGo_, false)

		function arg_496_1.onSingleLineFinish_()
			arg_496_1.onSingleLineUpdate_ = nil
			arg_496_1.onSingleLineFinish_ = nil
			arg_496_1.state_ = "waiting"
		end

		function arg_496_1.playNext_(arg_498_0)
			if arg_498_0 == 1 then
				arg_496_0:Play417012120(arg_496_1)
			end
		end

		function arg_496_1.onSingleLineUpdate_(arg_499_0)
			local var_499_0 = arg_496_1.actors_["1034"].transform
			local var_499_1 = 0

			if var_499_1 < arg_496_1.time_ and arg_496_1.time_ <= var_499_1 + arg_499_0 then
				arg_496_1.var_.moveOldPos1034 = var_499_0.localPosition
				var_499_0.localScale = Vector3.New(1, 1, 1)

				arg_496_1:CheckSpriteTmpPos("1034", 7)

				local var_499_2 = var_499_0.childCount

				for iter_499_0 = 0, var_499_2 - 1 do
					local var_499_3 = var_499_0:GetChild(iter_499_0)

					if var_499_3.name == "" or not string.find(var_499_3.name, "split") then
						var_499_3.gameObject:SetActive(true)
					else
						var_499_3.gameObject:SetActive(false)
					end
				end
			end

			local var_499_4 = 0.001

			if var_499_1 <= arg_496_1.time_ and arg_496_1.time_ < var_499_1 + var_499_4 then
				local var_499_5 = (arg_496_1.time_ - var_499_1) / var_499_4
				local var_499_6 = Vector3.New(0, -2000, 0)

				var_499_0.localPosition = Vector3.Lerp(arg_496_1.var_.moveOldPos1034, var_499_6, var_499_5)
			end

			if arg_496_1.time_ >= var_499_1 + var_499_4 and arg_496_1.time_ < var_499_1 + var_499_4 + arg_499_0 then
				var_499_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_499_7 = 0.633333333333333
			local var_499_8 = 1

			if var_499_7 < arg_496_1.time_ and arg_496_1.time_ <= var_499_7 + arg_499_0 then
				local var_499_9 = "play"
				local var_499_10 = "effect"

				arg_496_1:AudioAction(var_499_9, var_499_10, "se_story_1310", "se_story_1310_uiout", "")
			end

			local var_499_11 = 0
			local var_499_12 = 1.125

			if var_499_11 < arg_496_1.time_ and arg_496_1.time_ <= var_499_11 + arg_499_0 then
				arg_496_1.talkMaxDuration = 0
				arg_496_1.dialogCg_.alpha = 1

				arg_496_1.dialog_:SetActive(true)
				SetActive(arg_496_1.leftNameGo_, false)

				arg_496_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_496_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_496_1:RecordName(arg_496_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_496_1.iconTrs_.gameObject, false)
				arg_496_1.callingController_:SetSelectedState("normal")

				local var_499_13 = arg_496_1:GetWordFromCfg(417012119)
				local var_499_14 = arg_496_1:FormatText(var_499_13.content)

				arg_496_1.text_.text = var_499_14

				LuaForUtil.ClearLinePrefixSymbol(arg_496_1.text_)

				local var_499_15 = 45
				local var_499_16 = utf8.len(var_499_14)
				local var_499_17 = var_499_15 <= 0 and var_499_12 or var_499_12 * (var_499_16 / var_499_15)

				if var_499_17 > 0 and var_499_12 < var_499_17 then
					arg_496_1.talkMaxDuration = var_499_17

					if var_499_17 + var_499_11 > arg_496_1.duration_ then
						arg_496_1.duration_ = var_499_17 + var_499_11
					end
				end

				arg_496_1.text_.text = var_499_14
				arg_496_1.typewritter.percent = 0

				arg_496_1.typewritter:SetDirty()
				arg_496_1:ShowNextGo(false)
				arg_496_1:RecordContent(arg_496_1.text_.text)
			end

			local var_499_18 = math.max(var_499_12, arg_496_1.talkMaxDuration)

			if var_499_11 <= arg_496_1.time_ and arg_496_1.time_ < var_499_11 + var_499_18 then
				arg_496_1.typewritter.percent = (arg_496_1.time_ - var_499_11) / var_499_18

				arg_496_1.typewritter:SetDirty()
			end

			if arg_496_1.time_ >= var_499_11 + var_499_18 and arg_496_1.time_ < var_499_11 + var_499_18 + arg_499_0 then
				arg_496_1.typewritter.percent = 1

				arg_496_1.typewritter:SetDirty()
				arg_496_1:ShowNextGo(true)
			end
		end
	end,
	Play417012120 = function(arg_500_0, arg_500_1)
		arg_500_1.time_ = 0
		arg_500_1.frameCnt_ = 0
		arg_500_1.state_ = "playing"
		arg_500_1.curTalkId_ = 417012120
		arg_500_1.duration_ = 4.8

		local var_500_0 = {
			zh = 1.9,
			ja = 4.8
		}
		local var_500_1 = manager.audio:GetLocalizationFlag()

		if var_500_0[var_500_1] ~= nil then
			arg_500_1.duration_ = var_500_0[var_500_1]
		end

		SetActive(arg_500_1.tipsGo_, false)

		function arg_500_1.onSingleLineFinish_()
			arg_500_1.onSingleLineUpdate_ = nil
			arg_500_1.onSingleLineFinish_ = nil
			arg_500_1.state_ = "waiting"
		end

		function arg_500_1.playNext_(arg_502_0)
			if arg_502_0 == 1 then
				arg_500_0:Play417012121(arg_500_1)
			end
		end

		function arg_500_1.onSingleLineUpdate_(arg_503_0)
			local var_503_0 = 0
			local var_503_1 = 0.25

			if var_503_0 < arg_500_1.time_ and arg_500_1.time_ <= var_503_0 + arg_503_0 then
				arg_500_1.talkMaxDuration = 0
				arg_500_1.dialogCg_.alpha = 1

				arg_500_1.dialog_:SetActive(true)
				SetActive(arg_500_1.leftNameGo_, true)

				local var_503_2 = arg_500_1:FormatText(StoryNameCfg[36].name)

				arg_500_1.leftNameTxt_.text = var_503_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_500_1.leftNameTxt_.transform)

				arg_500_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_500_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_500_1:RecordName(arg_500_1.leftNameTxt_.text)
				SetActive(arg_500_1.iconTrs_.gameObject, true)
				arg_500_1.iconController_:SetSelectedState("hero")

				arg_500_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10115_split_6")

				arg_500_1.callingController_:SetSelectedState("normal")

				arg_500_1.keyicon_.color = Color.New(1, 1, 1)
				arg_500_1.icon_.color = Color.New(1, 1, 1)

				local var_503_3 = arg_500_1:GetWordFromCfg(417012120)
				local var_503_4 = arg_500_1:FormatText(var_503_3.content)

				arg_500_1.text_.text = var_503_4

				LuaForUtil.ClearLinePrefixSymbol(arg_500_1.text_)

				local var_503_5 = 10
				local var_503_6 = utf8.len(var_503_4)
				local var_503_7 = var_503_5 <= 0 and var_503_1 or var_503_1 * (var_503_6 / var_503_5)

				if var_503_7 > 0 and var_503_1 < var_503_7 then
					arg_500_1.talkMaxDuration = var_503_7

					if var_503_7 + var_503_0 > arg_500_1.duration_ then
						arg_500_1.duration_ = var_503_7 + var_503_0
					end
				end

				arg_500_1.text_.text = var_503_4
				arg_500_1.typewritter.percent = 0

				arg_500_1.typewritter:SetDirty()
				arg_500_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012120", "story_v_out_417012.awb") ~= 0 then
					local var_503_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012120", "story_v_out_417012.awb") / 1000

					if var_503_8 + var_503_0 > arg_500_1.duration_ then
						arg_500_1.duration_ = var_503_8 + var_503_0
					end

					if var_503_3.prefab_name ~= "" and arg_500_1.actors_[var_503_3.prefab_name] ~= nil then
						local var_503_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_500_1.actors_[var_503_3.prefab_name].transform, "story_v_out_417012", "417012120", "story_v_out_417012.awb")

						arg_500_1:RecordAudio("417012120", var_503_9)
						arg_500_1:RecordAudio("417012120", var_503_9)
					else
						arg_500_1:AudioAction("play", "voice", "story_v_out_417012", "417012120", "story_v_out_417012.awb")
					end

					arg_500_1:RecordHistoryTalkVoice("story_v_out_417012", "417012120", "story_v_out_417012.awb")
				end

				arg_500_1:RecordContent(arg_500_1.text_.text)
			end

			local var_503_10 = math.max(var_503_1, arg_500_1.talkMaxDuration)

			if var_503_0 <= arg_500_1.time_ and arg_500_1.time_ < var_503_0 + var_503_10 then
				arg_500_1.typewritter.percent = (arg_500_1.time_ - var_503_0) / var_503_10

				arg_500_1.typewritter:SetDirty()
			end

			if arg_500_1.time_ >= var_503_0 + var_503_10 and arg_500_1.time_ < var_503_0 + var_503_10 + arg_503_0 then
				arg_500_1.typewritter.percent = 1

				arg_500_1.typewritter:SetDirty()
				arg_500_1:ShowNextGo(true)
			end
		end
	end,
	Play417012121 = function(arg_504_0, arg_504_1)
		arg_504_1.time_ = 0
		arg_504_1.frameCnt_ = 0
		arg_504_1.state_ = "playing"
		arg_504_1.curTalkId_ = 417012121
		arg_504_1.duration_ = 5

		SetActive(arg_504_1.tipsGo_, false)

		function arg_504_1.onSingleLineFinish_()
			arg_504_1.onSingleLineUpdate_ = nil
			arg_504_1.onSingleLineFinish_ = nil
			arg_504_1.state_ = "waiting"
		end

		function arg_504_1.playNext_(arg_506_0)
			if arg_506_0 == 1 then
				arg_504_0:Play417012122(arg_504_1)
			end
		end

		function arg_504_1.onSingleLineUpdate_(arg_507_0)
			local var_507_0 = 0
			local var_507_1 = 1.95

			if var_507_0 < arg_504_1.time_ and arg_504_1.time_ <= var_507_0 + arg_507_0 then
				arg_504_1.talkMaxDuration = 0
				arg_504_1.dialogCg_.alpha = 1

				arg_504_1.dialog_:SetActive(true)
				SetActive(arg_504_1.leftNameGo_, false)

				arg_504_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_504_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_504_1:RecordName(arg_504_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_504_1.iconTrs_.gameObject, false)
				arg_504_1.callingController_:SetSelectedState("normal")

				local var_507_2 = arg_504_1:GetWordFromCfg(417012121)
				local var_507_3 = arg_504_1:FormatText(var_507_2.content)

				arg_504_1.text_.text = var_507_3

				LuaForUtil.ClearLinePrefixSymbol(arg_504_1.text_)

				local var_507_4 = 78
				local var_507_5 = utf8.len(var_507_3)
				local var_507_6 = var_507_4 <= 0 and var_507_1 or var_507_1 * (var_507_5 / var_507_4)

				if var_507_6 > 0 and var_507_1 < var_507_6 then
					arg_504_1.talkMaxDuration = var_507_6

					if var_507_6 + var_507_0 > arg_504_1.duration_ then
						arg_504_1.duration_ = var_507_6 + var_507_0
					end
				end

				arg_504_1.text_.text = var_507_3
				arg_504_1.typewritter.percent = 0

				arg_504_1.typewritter:SetDirty()
				arg_504_1:ShowNextGo(false)
				arg_504_1:RecordContent(arg_504_1.text_.text)
			end

			local var_507_7 = math.max(var_507_1, arg_504_1.talkMaxDuration)

			if var_507_0 <= arg_504_1.time_ and arg_504_1.time_ < var_507_0 + var_507_7 then
				arg_504_1.typewritter.percent = (arg_504_1.time_ - var_507_0) / var_507_7

				arg_504_1.typewritter:SetDirty()
			end

			if arg_504_1.time_ >= var_507_0 + var_507_7 and arg_504_1.time_ < var_507_0 + var_507_7 + arg_507_0 then
				arg_504_1.typewritter.percent = 1

				arg_504_1.typewritter:SetDirty()
				arg_504_1:ShowNextGo(true)
			end
		end
	end,
	Play417012122 = function(arg_508_0, arg_508_1)
		arg_508_1.time_ = 0
		arg_508_1.frameCnt_ = 0
		arg_508_1.state_ = "playing"
		arg_508_1.curTalkId_ = 417012122
		arg_508_1.duration_ = 5

		SetActive(arg_508_1.tipsGo_, false)

		function arg_508_1.onSingleLineFinish_()
			arg_508_1.onSingleLineUpdate_ = nil
			arg_508_1.onSingleLineFinish_ = nil
			arg_508_1.state_ = "waiting"
		end

		function arg_508_1.playNext_(arg_510_0)
			if arg_510_0 == 1 then
				arg_508_0:Play417012123(arg_508_1)
			end
		end

		function arg_508_1.onSingleLineUpdate_(arg_511_0)
			local var_511_0 = 0
			local var_511_1 = 0.75

			if var_511_0 < arg_508_1.time_ and arg_508_1.time_ <= var_511_0 + arg_511_0 then
				arg_508_1.talkMaxDuration = 0
				arg_508_1.dialogCg_.alpha = 1

				arg_508_1.dialog_:SetActive(true)
				SetActive(arg_508_1.leftNameGo_, false)

				arg_508_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_508_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_508_1:RecordName(arg_508_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_508_1.iconTrs_.gameObject, false)
				arg_508_1.callingController_:SetSelectedState("normal")

				local var_511_2 = arg_508_1:GetWordFromCfg(417012122)
				local var_511_3 = arg_508_1:FormatText(var_511_2.content)

				arg_508_1.text_.text = var_511_3

				LuaForUtil.ClearLinePrefixSymbol(arg_508_1.text_)

				local var_511_4 = 30
				local var_511_5 = utf8.len(var_511_3)
				local var_511_6 = var_511_4 <= 0 and var_511_1 or var_511_1 * (var_511_5 / var_511_4)

				if var_511_6 > 0 and var_511_1 < var_511_6 then
					arg_508_1.talkMaxDuration = var_511_6

					if var_511_6 + var_511_0 > arg_508_1.duration_ then
						arg_508_1.duration_ = var_511_6 + var_511_0
					end
				end

				arg_508_1.text_.text = var_511_3
				arg_508_1.typewritter.percent = 0

				arg_508_1.typewritter:SetDirty()
				arg_508_1:ShowNextGo(false)
				arg_508_1:RecordContent(arg_508_1.text_.text)
			end

			local var_511_7 = math.max(var_511_1, arg_508_1.talkMaxDuration)

			if var_511_0 <= arg_508_1.time_ and arg_508_1.time_ < var_511_0 + var_511_7 then
				arg_508_1.typewritter.percent = (arg_508_1.time_ - var_511_0) / var_511_7

				arg_508_1.typewritter:SetDirty()
			end

			if arg_508_1.time_ >= var_511_0 + var_511_7 and arg_508_1.time_ < var_511_0 + var_511_7 + arg_511_0 then
				arg_508_1.typewritter.percent = 1

				arg_508_1.typewritter:SetDirty()
				arg_508_1:ShowNextGo(true)
			end
		end
	end,
	Play417012123 = function(arg_512_0, arg_512_1)
		arg_512_1.time_ = 0
		arg_512_1.frameCnt_ = 0
		arg_512_1.state_ = "playing"
		arg_512_1.curTalkId_ = 417012123
		arg_512_1.duration_ = 3.57

		local var_512_0 = {
			zh = 1.5,
			ja = 3.566
		}
		local var_512_1 = manager.audio:GetLocalizationFlag()

		if var_512_0[var_512_1] ~= nil then
			arg_512_1.duration_ = var_512_0[var_512_1]
		end

		SetActive(arg_512_1.tipsGo_, false)

		function arg_512_1.onSingleLineFinish_()
			arg_512_1.onSingleLineUpdate_ = nil
			arg_512_1.onSingleLineFinish_ = nil
			arg_512_1.state_ = "waiting"
		end

		function arg_512_1.playNext_(arg_514_0)
			if arg_514_0 == 1 then
				arg_512_0:Play417012124(arg_512_1)
			end
		end

		function arg_512_1.onSingleLineUpdate_(arg_515_0)
			local var_515_0 = arg_512_1.actors_["1034"]
			local var_515_1 = 0

			if var_515_1 < arg_512_1.time_ and arg_512_1.time_ <= var_515_1 + arg_515_0 and not isNil(var_515_0) and arg_512_1.var_.actorSpriteComps1034 == nil then
				arg_512_1.var_.actorSpriteComps1034 = var_515_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_515_2 = 0.2

			if var_515_1 <= arg_512_1.time_ and arg_512_1.time_ < var_515_1 + var_515_2 and not isNil(var_515_0) then
				local var_515_3 = (arg_512_1.time_ - var_515_1) / var_515_2

				if arg_512_1.var_.actorSpriteComps1034 then
					for iter_515_0, iter_515_1 in pairs(arg_512_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_515_1 then
							if arg_512_1.isInRecall_ then
								local var_515_4 = Mathf.Lerp(iter_515_1.color.r, arg_512_1.hightColor1.r, var_515_3)
								local var_515_5 = Mathf.Lerp(iter_515_1.color.g, arg_512_1.hightColor1.g, var_515_3)
								local var_515_6 = Mathf.Lerp(iter_515_1.color.b, arg_512_1.hightColor1.b, var_515_3)

								iter_515_1.color = Color.New(var_515_4, var_515_5, var_515_6)
							else
								local var_515_7 = Mathf.Lerp(iter_515_1.color.r, 1, var_515_3)

								iter_515_1.color = Color.New(var_515_7, var_515_7, var_515_7)
							end
						end
					end
				end
			end

			if arg_512_1.time_ >= var_515_1 + var_515_2 and arg_512_1.time_ < var_515_1 + var_515_2 + arg_515_0 and not isNil(var_515_0) and arg_512_1.var_.actorSpriteComps1034 then
				for iter_515_2, iter_515_3 in pairs(arg_512_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_515_3 then
						if arg_512_1.isInRecall_ then
							iter_515_3.color = arg_512_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_515_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_512_1.var_.actorSpriteComps1034 = nil
			end

			local var_515_8 = arg_512_1.actors_["1034"].transform
			local var_515_9 = 0

			if var_515_9 < arg_512_1.time_ and arg_512_1.time_ <= var_515_9 + arg_515_0 then
				arg_512_1.var_.moveOldPos1034 = var_515_8.localPosition
				var_515_8.localScale = Vector3.New(1, 1, 1)

				arg_512_1:CheckSpriteTmpPos("1034", 3)

				local var_515_10 = var_515_8.childCount

				for iter_515_4 = 0, var_515_10 - 1 do
					local var_515_11 = var_515_8:GetChild(iter_515_4)

					if var_515_11.name == "" or not string.find(var_515_11.name, "split") then
						var_515_11.gameObject:SetActive(true)
					else
						var_515_11.gameObject:SetActive(false)
					end
				end
			end

			local var_515_12 = 0.001

			if var_515_9 <= arg_512_1.time_ and arg_512_1.time_ < var_515_9 + var_515_12 then
				local var_515_13 = (arg_512_1.time_ - var_515_9) / var_515_12
				local var_515_14 = Vector3.New(0, -331.9, -324)

				var_515_8.localPosition = Vector3.Lerp(arg_512_1.var_.moveOldPos1034, var_515_14, var_515_13)
			end

			if arg_512_1.time_ >= var_515_9 + var_515_12 and arg_512_1.time_ < var_515_9 + var_515_12 + arg_515_0 then
				var_515_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_515_15 = 0
			local var_515_16 = 0.1

			if var_515_15 < arg_512_1.time_ and arg_512_1.time_ <= var_515_15 + arg_515_0 then
				arg_512_1.talkMaxDuration = 0
				arg_512_1.dialogCg_.alpha = 1

				arg_512_1.dialog_:SetActive(true)
				SetActive(arg_512_1.leftNameGo_, true)

				local var_515_17 = arg_512_1:FormatText(StoryNameCfg[1109].name)

				arg_512_1.leftNameTxt_.text = var_515_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_512_1.leftNameTxt_.transform)

				arg_512_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_512_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_512_1:RecordName(arg_512_1.leftNameTxt_.text)
				SetActive(arg_512_1.iconTrs_.gameObject, false)
				arg_512_1.callingController_:SetSelectedState("normal")

				local var_515_18 = arg_512_1:GetWordFromCfg(417012123)
				local var_515_19 = arg_512_1:FormatText(var_515_18.content)

				arg_512_1.text_.text = var_515_19

				LuaForUtil.ClearLinePrefixSymbol(arg_512_1.text_)

				local var_515_20 = 4
				local var_515_21 = utf8.len(var_515_19)
				local var_515_22 = var_515_20 <= 0 and var_515_16 or var_515_16 * (var_515_21 / var_515_20)

				if var_515_22 > 0 and var_515_16 < var_515_22 then
					arg_512_1.talkMaxDuration = var_515_22

					if var_515_22 + var_515_15 > arg_512_1.duration_ then
						arg_512_1.duration_ = var_515_22 + var_515_15
					end
				end

				arg_512_1.text_.text = var_515_19
				arg_512_1.typewritter.percent = 0

				arg_512_1.typewritter:SetDirty()
				arg_512_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012123", "story_v_out_417012.awb") ~= 0 then
					local var_515_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012123", "story_v_out_417012.awb") / 1000

					if var_515_23 + var_515_15 > arg_512_1.duration_ then
						arg_512_1.duration_ = var_515_23 + var_515_15
					end

					if var_515_18.prefab_name ~= "" and arg_512_1.actors_[var_515_18.prefab_name] ~= nil then
						local var_515_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_512_1.actors_[var_515_18.prefab_name].transform, "story_v_out_417012", "417012123", "story_v_out_417012.awb")

						arg_512_1:RecordAudio("417012123", var_515_24)
						arg_512_1:RecordAudio("417012123", var_515_24)
					else
						arg_512_1:AudioAction("play", "voice", "story_v_out_417012", "417012123", "story_v_out_417012.awb")
					end

					arg_512_1:RecordHistoryTalkVoice("story_v_out_417012", "417012123", "story_v_out_417012.awb")
				end

				arg_512_1:RecordContent(arg_512_1.text_.text)
			end

			local var_515_25 = math.max(var_515_16, arg_512_1.talkMaxDuration)

			if var_515_15 <= arg_512_1.time_ and arg_512_1.time_ < var_515_15 + var_515_25 then
				arg_512_1.typewritter.percent = (arg_512_1.time_ - var_515_15) / var_515_25

				arg_512_1.typewritter:SetDirty()
			end

			if arg_512_1.time_ >= var_515_15 + var_515_25 and arg_512_1.time_ < var_515_15 + var_515_25 + arg_515_0 then
				arg_512_1.typewritter.percent = 1

				arg_512_1.typewritter:SetDirty()
				arg_512_1:ShowNextGo(true)
			end
		end
	end,
	Play417012124 = function(arg_516_0, arg_516_1)
		arg_516_1.time_ = 0
		arg_516_1.frameCnt_ = 0
		arg_516_1.state_ = "playing"
		arg_516_1.curTalkId_ = 417012124
		arg_516_1.duration_ = 3.97

		local var_516_0 = {
			zh = 3.966,
			ja = 2.7
		}
		local var_516_1 = manager.audio:GetLocalizationFlag()

		if var_516_0[var_516_1] ~= nil then
			arg_516_1.duration_ = var_516_0[var_516_1]
		end

		SetActive(arg_516_1.tipsGo_, false)

		function arg_516_1.onSingleLineFinish_()
			arg_516_1.onSingleLineUpdate_ = nil
			arg_516_1.onSingleLineFinish_ = nil
			arg_516_1.state_ = "waiting"
		end

		function arg_516_1.playNext_(arg_518_0)
			if arg_518_0 == 1 then
				arg_516_0:Play417012125(arg_516_1)
			end
		end

		function arg_516_1.onSingleLineUpdate_(arg_519_0)
			local var_519_0 = "10115"

			if arg_516_1.actors_[var_519_0] == nil then
				local var_519_1 = Asset.Load("Widget/System/Story/StoryExpression/" .. "10115")

				if not isNil(var_519_1) then
					local var_519_2 = Object.Instantiate(var_519_1, arg_516_1.canvasGo_.transform)

					var_519_2.transform:SetSiblingIndex(1)

					var_519_2.name = var_519_0
					var_519_2.transform.localPosition = Vector3.New(0, 100000, 0)
					arg_516_1.actors_[var_519_0] = var_519_2

					local var_519_3 = var_519_2:GetComponentsInChildren(typeof(Image), true):ToTable()

					if arg_516_1.isInRecall_ then
						for iter_519_0, iter_519_1 in ipairs(var_519_3) do
							iter_519_1.color = arg_516_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						end
					end
				end
			end

			local var_519_4 = arg_516_1.actors_["10115"]
			local var_519_5 = 0

			if var_519_5 < arg_516_1.time_ and arg_516_1.time_ <= var_519_5 + arg_519_0 and not isNil(var_519_4) and arg_516_1.var_.actorSpriteComps10115 == nil then
				arg_516_1.var_.actorSpriteComps10115 = var_519_4:GetComponentsInChildren(typeof(Image), true)
			end

			local var_519_6 = 0.2

			if var_519_5 <= arg_516_1.time_ and arg_516_1.time_ < var_519_5 + var_519_6 and not isNil(var_519_4) then
				local var_519_7 = (arg_516_1.time_ - var_519_5) / var_519_6

				if arg_516_1.var_.actorSpriteComps10115 then
					for iter_519_2, iter_519_3 in pairs(arg_516_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_519_3 then
							if arg_516_1.isInRecall_ then
								local var_519_8 = Mathf.Lerp(iter_519_3.color.r, arg_516_1.hightColor1.r, var_519_7)
								local var_519_9 = Mathf.Lerp(iter_519_3.color.g, arg_516_1.hightColor1.g, var_519_7)
								local var_519_10 = Mathf.Lerp(iter_519_3.color.b, arg_516_1.hightColor1.b, var_519_7)

								iter_519_3.color = Color.New(var_519_8, var_519_9, var_519_10)
							else
								local var_519_11 = Mathf.Lerp(iter_519_3.color.r, 1, var_519_7)

								iter_519_3.color = Color.New(var_519_11, var_519_11, var_519_11)
							end
						end
					end
				end
			end

			if arg_516_1.time_ >= var_519_5 + var_519_6 and arg_516_1.time_ < var_519_5 + var_519_6 + arg_519_0 and not isNil(var_519_4) and arg_516_1.var_.actorSpriteComps10115 then
				for iter_519_4, iter_519_5 in pairs(arg_516_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_519_5 then
						if arg_516_1.isInRecall_ then
							iter_519_5.color = arg_516_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_519_5.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_516_1.var_.actorSpriteComps10115 = nil
			end

			local var_519_12 = arg_516_1.actors_["1034"]
			local var_519_13 = 0

			if var_519_13 < arg_516_1.time_ and arg_516_1.time_ <= var_519_13 + arg_519_0 and not isNil(var_519_12) and arg_516_1.var_.actorSpriteComps1034 == nil then
				arg_516_1.var_.actorSpriteComps1034 = var_519_12:GetComponentsInChildren(typeof(Image), true)
			end

			local var_519_14 = 0.2

			if var_519_13 <= arg_516_1.time_ and arg_516_1.time_ < var_519_13 + var_519_14 and not isNil(var_519_12) then
				local var_519_15 = (arg_516_1.time_ - var_519_13) / var_519_14

				if arg_516_1.var_.actorSpriteComps1034 then
					for iter_519_6, iter_519_7 in pairs(arg_516_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_519_7 then
							if arg_516_1.isInRecall_ then
								local var_519_16 = Mathf.Lerp(iter_519_7.color.r, arg_516_1.hightColor2.r, var_519_15)
								local var_519_17 = Mathf.Lerp(iter_519_7.color.g, arg_516_1.hightColor2.g, var_519_15)
								local var_519_18 = Mathf.Lerp(iter_519_7.color.b, arg_516_1.hightColor2.b, var_519_15)

								iter_519_7.color = Color.New(var_519_16, var_519_17, var_519_18)
							else
								local var_519_19 = Mathf.Lerp(iter_519_7.color.r, 0.5, var_519_15)

								iter_519_7.color = Color.New(var_519_19, var_519_19, var_519_19)
							end
						end
					end
				end
			end

			if arg_516_1.time_ >= var_519_13 + var_519_14 and arg_516_1.time_ < var_519_13 + var_519_14 + arg_519_0 and not isNil(var_519_12) and arg_516_1.var_.actorSpriteComps1034 then
				for iter_519_8, iter_519_9 in pairs(arg_516_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_519_9 then
						if arg_516_1.isInRecall_ then
							iter_519_9.color = arg_516_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_519_9.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_516_1.var_.actorSpriteComps1034 = nil
			end

			local var_519_20 = arg_516_1.actors_["1034"].transform
			local var_519_21 = 0

			if var_519_21 < arg_516_1.time_ and arg_516_1.time_ <= var_519_21 + arg_519_0 then
				arg_516_1.var_.moveOldPos1034 = var_519_20.localPosition
				var_519_20.localScale = Vector3.New(1, 1, 1)

				arg_516_1:CheckSpriteTmpPos("1034", 7)

				local var_519_22 = var_519_20.childCount

				for iter_519_10 = 0, var_519_22 - 1 do
					local var_519_23 = var_519_20:GetChild(iter_519_10)

					if var_519_23.name == "split_2" or not string.find(var_519_23.name, "split") then
						var_519_23.gameObject:SetActive(true)
					else
						var_519_23.gameObject:SetActive(false)
					end
				end
			end

			local var_519_24 = 0.001

			if var_519_21 <= arg_516_1.time_ and arg_516_1.time_ < var_519_21 + var_519_24 then
				local var_519_25 = (arg_516_1.time_ - var_519_21) / var_519_24
				local var_519_26 = Vector3.New(0, -2000, 0)

				var_519_20.localPosition = Vector3.Lerp(arg_516_1.var_.moveOldPos1034, var_519_26, var_519_25)
			end

			if arg_516_1.time_ >= var_519_21 + var_519_24 and arg_516_1.time_ < var_519_21 + var_519_24 + arg_519_0 then
				var_519_20.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_519_27 = arg_516_1.actors_["10115"].transform
			local var_519_28 = 0

			if var_519_28 < arg_516_1.time_ and arg_516_1.time_ <= var_519_28 + arg_519_0 then
				arg_516_1.var_.moveOldPos10115 = var_519_27.localPosition
				var_519_27.localScale = Vector3.New(1, 1, 1)

				arg_516_1:CheckSpriteTmpPos("10115", 3)

				local var_519_29 = var_519_27.childCount

				for iter_519_11 = 0, var_519_29 - 1 do
					local var_519_30 = var_519_27:GetChild(iter_519_11)

					if var_519_30.name == "split_6" or not string.find(var_519_30.name, "split") then
						var_519_30.gameObject:SetActive(true)
					else
						var_519_30.gameObject:SetActive(false)
					end
				end
			end

			local var_519_31 = 0.001

			if var_519_28 <= arg_516_1.time_ and arg_516_1.time_ < var_519_28 + var_519_31 then
				local var_519_32 = (arg_516_1.time_ - var_519_28) / var_519_31
				local var_519_33 = Vector3.New(0, -387.3, -246.2)

				var_519_27.localPosition = Vector3.Lerp(arg_516_1.var_.moveOldPos10115, var_519_33, var_519_32)
			end

			if arg_516_1.time_ >= var_519_28 + var_519_31 and arg_516_1.time_ < var_519_28 + var_519_31 + arg_519_0 then
				var_519_27.localPosition = Vector3.New(0, -387.3, -246.2)
			end

			local var_519_34 = 0
			local var_519_35 = 0.45

			if var_519_34 < arg_516_1.time_ and arg_516_1.time_ <= var_519_34 + arg_519_0 then
				arg_516_1.talkMaxDuration = 0
				arg_516_1.dialogCg_.alpha = 1

				arg_516_1.dialog_:SetActive(true)
				SetActive(arg_516_1.leftNameGo_, true)

				local var_519_36 = arg_516_1:FormatText(StoryNameCfg[1113].name)

				arg_516_1.leftNameTxt_.text = var_519_36

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_516_1.leftNameTxt_.transform)

				arg_516_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_516_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_516_1:RecordName(arg_516_1.leftNameTxt_.text)
				SetActive(arg_516_1.iconTrs_.gameObject, false)
				arg_516_1.callingController_:SetSelectedState("normal")

				local var_519_37 = arg_516_1:GetWordFromCfg(417012124)
				local var_519_38 = arg_516_1:FormatText(var_519_37.content)

				arg_516_1.text_.text = var_519_38

				LuaForUtil.ClearLinePrefixSymbol(arg_516_1.text_)

				local var_519_39 = 18
				local var_519_40 = utf8.len(var_519_38)
				local var_519_41 = var_519_39 <= 0 and var_519_35 or var_519_35 * (var_519_40 / var_519_39)

				if var_519_41 > 0 and var_519_35 < var_519_41 then
					arg_516_1.talkMaxDuration = var_519_41

					if var_519_41 + var_519_34 > arg_516_1.duration_ then
						arg_516_1.duration_ = var_519_41 + var_519_34
					end
				end

				arg_516_1.text_.text = var_519_38
				arg_516_1.typewritter.percent = 0

				arg_516_1.typewritter:SetDirty()
				arg_516_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012124", "story_v_out_417012.awb") ~= 0 then
					local var_519_42 = manager.audio:GetVoiceLength("story_v_out_417012", "417012124", "story_v_out_417012.awb") / 1000

					if var_519_42 + var_519_34 > arg_516_1.duration_ then
						arg_516_1.duration_ = var_519_42 + var_519_34
					end

					if var_519_37.prefab_name ~= "" and arg_516_1.actors_[var_519_37.prefab_name] ~= nil then
						local var_519_43 = LuaForUtil.PlayVoiceWithCriLipsync(arg_516_1.actors_[var_519_37.prefab_name].transform, "story_v_out_417012", "417012124", "story_v_out_417012.awb")

						arg_516_1:RecordAudio("417012124", var_519_43)
						arg_516_1:RecordAudio("417012124", var_519_43)
					else
						arg_516_1:AudioAction("play", "voice", "story_v_out_417012", "417012124", "story_v_out_417012.awb")
					end

					arg_516_1:RecordHistoryTalkVoice("story_v_out_417012", "417012124", "story_v_out_417012.awb")
				end

				arg_516_1:RecordContent(arg_516_1.text_.text)
			end

			local var_519_44 = math.max(var_519_35, arg_516_1.talkMaxDuration)

			if var_519_34 <= arg_516_1.time_ and arg_516_1.time_ < var_519_34 + var_519_44 then
				arg_516_1.typewritter.percent = (arg_516_1.time_ - var_519_34) / var_519_44

				arg_516_1.typewritter:SetDirty()
			end

			if arg_516_1.time_ >= var_519_34 + var_519_44 and arg_516_1.time_ < var_519_34 + var_519_44 + arg_519_0 then
				arg_516_1.typewritter.percent = 1

				arg_516_1.typewritter:SetDirty()
				arg_516_1:ShowNextGo(true)
			end
		end
	end,
	Play417012125 = function(arg_520_0, arg_520_1)
		arg_520_1.time_ = 0
		arg_520_1.frameCnt_ = 0
		arg_520_1.state_ = "playing"
		arg_520_1.curTalkId_ = 417012125
		arg_520_1.duration_ = 4.9

		local var_520_0 = {
			zh = 1.8,
			ja = 4.9
		}
		local var_520_1 = manager.audio:GetLocalizationFlag()

		if var_520_0[var_520_1] ~= nil then
			arg_520_1.duration_ = var_520_0[var_520_1]
		end

		SetActive(arg_520_1.tipsGo_, false)

		function arg_520_1.onSingleLineFinish_()
			arg_520_1.onSingleLineUpdate_ = nil
			arg_520_1.onSingleLineFinish_ = nil
			arg_520_1.state_ = "waiting"
		end

		function arg_520_1.playNext_(arg_522_0)
			if arg_522_0 == 1 then
				arg_520_0:Play417012126(arg_520_1)
			end
		end

		function arg_520_1.onSingleLineUpdate_(arg_523_0)
			local var_523_0 = arg_520_1.actors_["1034"]
			local var_523_1 = 0

			if var_523_1 < arg_520_1.time_ and arg_520_1.time_ <= var_523_1 + arg_523_0 and not isNil(var_523_0) and arg_520_1.var_.actorSpriteComps1034 == nil then
				arg_520_1.var_.actorSpriteComps1034 = var_523_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_523_2 = 0.2

			if var_523_1 <= arg_520_1.time_ and arg_520_1.time_ < var_523_1 + var_523_2 and not isNil(var_523_0) then
				local var_523_3 = (arg_520_1.time_ - var_523_1) / var_523_2

				if arg_520_1.var_.actorSpriteComps1034 then
					for iter_523_0, iter_523_1 in pairs(arg_520_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_523_1 then
							if arg_520_1.isInRecall_ then
								local var_523_4 = Mathf.Lerp(iter_523_1.color.r, arg_520_1.hightColor1.r, var_523_3)
								local var_523_5 = Mathf.Lerp(iter_523_1.color.g, arg_520_1.hightColor1.g, var_523_3)
								local var_523_6 = Mathf.Lerp(iter_523_1.color.b, arg_520_1.hightColor1.b, var_523_3)

								iter_523_1.color = Color.New(var_523_4, var_523_5, var_523_6)
							else
								local var_523_7 = Mathf.Lerp(iter_523_1.color.r, 1, var_523_3)

								iter_523_1.color = Color.New(var_523_7, var_523_7, var_523_7)
							end
						end
					end
				end
			end

			if arg_520_1.time_ >= var_523_1 + var_523_2 and arg_520_1.time_ < var_523_1 + var_523_2 + arg_523_0 and not isNil(var_523_0) and arg_520_1.var_.actorSpriteComps1034 then
				for iter_523_2, iter_523_3 in pairs(arg_520_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_523_3 then
						if arg_520_1.isInRecall_ then
							iter_523_3.color = arg_520_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_523_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_520_1.var_.actorSpriteComps1034 = nil
			end

			local var_523_8 = arg_520_1.actors_["10115"]
			local var_523_9 = 0

			if var_523_9 < arg_520_1.time_ and arg_520_1.time_ <= var_523_9 + arg_523_0 and not isNil(var_523_8) and arg_520_1.var_.actorSpriteComps10115 == nil then
				arg_520_1.var_.actorSpriteComps10115 = var_523_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_523_10 = 0.2

			if var_523_9 <= arg_520_1.time_ and arg_520_1.time_ < var_523_9 + var_523_10 and not isNil(var_523_8) then
				local var_523_11 = (arg_520_1.time_ - var_523_9) / var_523_10

				if arg_520_1.var_.actorSpriteComps10115 then
					for iter_523_4, iter_523_5 in pairs(arg_520_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_523_5 then
							if arg_520_1.isInRecall_ then
								local var_523_12 = Mathf.Lerp(iter_523_5.color.r, arg_520_1.hightColor2.r, var_523_11)
								local var_523_13 = Mathf.Lerp(iter_523_5.color.g, arg_520_1.hightColor2.g, var_523_11)
								local var_523_14 = Mathf.Lerp(iter_523_5.color.b, arg_520_1.hightColor2.b, var_523_11)

								iter_523_5.color = Color.New(var_523_12, var_523_13, var_523_14)
							else
								local var_523_15 = Mathf.Lerp(iter_523_5.color.r, 0.5, var_523_11)

								iter_523_5.color = Color.New(var_523_15, var_523_15, var_523_15)
							end
						end
					end
				end
			end

			if arg_520_1.time_ >= var_523_9 + var_523_10 and arg_520_1.time_ < var_523_9 + var_523_10 + arg_523_0 and not isNil(var_523_8) and arg_520_1.var_.actorSpriteComps10115 then
				for iter_523_6, iter_523_7 in pairs(arg_520_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_523_7 then
						if arg_520_1.isInRecall_ then
							iter_523_7.color = arg_520_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_523_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_520_1.var_.actorSpriteComps10115 = nil
			end

			local var_523_16 = arg_520_1.actors_["1034"].transform
			local var_523_17 = 0

			if var_523_17 < arg_520_1.time_ and arg_520_1.time_ <= var_523_17 + arg_523_0 then
				arg_520_1.var_.moveOldPos1034 = var_523_16.localPosition
				var_523_16.localScale = Vector3.New(1, 1, 1)

				arg_520_1:CheckSpriteTmpPos("1034", 2)

				local var_523_18 = var_523_16.childCount

				for iter_523_8 = 0, var_523_18 - 1 do
					local var_523_19 = var_523_16:GetChild(iter_523_8)

					if var_523_19.name == "" or not string.find(var_523_19.name, "split") then
						var_523_19.gameObject:SetActive(true)
					else
						var_523_19.gameObject:SetActive(false)
					end
				end
			end

			local var_523_20 = 0.001

			if var_523_17 <= arg_520_1.time_ and arg_520_1.time_ < var_523_17 + var_523_20 then
				local var_523_21 = (arg_520_1.time_ - var_523_17) / var_523_20
				local var_523_22 = Vector3.New(-390, -331.9, -324)

				var_523_16.localPosition = Vector3.Lerp(arg_520_1.var_.moveOldPos1034, var_523_22, var_523_21)
			end

			if arg_520_1.time_ >= var_523_17 + var_523_20 and arg_520_1.time_ < var_523_17 + var_523_20 + arg_523_0 then
				var_523_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_523_23 = arg_520_1.actors_["10115"].transform
			local var_523_24 = 0

			if var_523_24 < arg_520_1.time_ and arg_520_1.time_ <= var_523_24 + arg_523_0 then
				arg_520_1.var_.moveOldPos10115 = var_523_23.localPosition
				var_523_23.localScale = Vector3.New(1, 1, 1)

				arg_520_1:CheckSpriteTmpPos("10115", 4)

				local var_523_25 = var_523_23.childCount

				for iter_523_9 = 0, var_523_25 - 1 do
					local var_523_26 = var_523_23:GetChild(iter_523_9)

					if var_523_26.name == "" or not string.find(var_523_26.name, "split") then
						var_523_26.gameObject:SetActive(true)
					else
						var_523_26.gameObject:SetActive(false)
					end
				end
			end

			local var_523_27 = 0.001

			if var_523_24 <= arg_520_1.time_ and arg_520_1.time_ < var_523_24 + var_523_27 then
				local var_523_28 = (arg_520_1.time_ - var_523_24) / var_523_27
				local var_523_29 = Vector3.New(390, -387.3, -246.2)

				var_523_23.localPosition = Vector3.Lerp(arg_520_1.var_.moveOldPos10115, var_523_29, var_523_28)
			end

			if arg_520_1.time_ >= var_523_24 + var_523_27 and arg_520_1.time_ < var_523_24 + var_523_27 + arg_523_0 then
				var_523_23.localPosition = Vector3.New(390, -387.3, -246.2)
			end

			local var_523_30 = 0
			local var_523_31 = 0.25

			if var_523_30 < arg_520_1.time_ and arg_520_1.time_ <= var_523_30 + arg_523_0 then
				arg_520_1.talkMaxDuration = 0
				arg_520_1.dialogCg_.alpha = 1

				arg_520_1.dialog_:SetActive(true)
				SetActive(arg_520_1.leftNameGo_, true)

				local var_523_32 = arg_520_1:FormatText(StoryNameCfg[1109].name)

				arg_520_1.leftNameTxt_.text = var_523_32

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_520_1.leftNameTxt_.transform)

				arg_520_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_520_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_520_1:RecordName(arg_520_1.leftNameTxt_.text)
				SetActive(arg_520_1.iconTrs_.gameObject, false)
				arg_520_1.callingController_:SetSelectedState("normal")

				local var_523_33 = arg_520_1:GetWordFromCfg(417012125)
				local var_523_34 = arg_520_1:FormatText(var_523_33.content)

				arg_520_1.text_.text = var_523_34

				LuaForUtil.ClearLinePrefixSymbol(arg_520_1.text_)

				local var_523_35 = 10
				local var_523_36 = utf8.len(var_523_34)
				local var_523_37 = var_523_35 <= 0 and var_523_31 or var_523_31 * (var_523_36 / var_523_35)

				if var_523_37 > 0 and var_523_31 < var_523_37 then
					arg_520_1.talkMaxDuration = var_523_37

					if var_523_37 + var_523_30 > arg_520_1.duration_ then
						arg_520_1.duration_ = var_523_37 + var_523_30
					end
				end

				arg_520_1.text_.text = var_523_34
				arg_520_1.typewritter.percent = 0

				arg_520_1.typewritter:SetDirty()
				arg_520_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012125", "story_v_out_417012.awb") ~= 0 then
					local var_523_38 = manager.audio:GetVoiceLength("story_v_out_417012", "417012125", "story_v_out_417012.awb") / 1000

					if var_523_38 + var_523_30 > arg_520_1.duration_ then
						arg_520_1.duration_ = var_523_38 + var_523_30
					end

					if var_523_33.prefab_name ~= "" and arg_520_1.actors_[var_523_33.prefab_name] ~= nil then
						local var_523_39 = LuaForUtil.PlayVoiceWithCriLipsync(arg_520_1.actors_[var_523_33.prefab_name].transform, "story_v_out_417012", "417012125", "story_v_out_417012.awb")

						arg_520_1:RecordAudio("417012125", var_523_39)
						arg_520_1:RecordAudio("417012125", var_523_39)
					else
						arg_520_1:AudioAction("play", "voice", "story_v_out_417012", "417012125", "story_v_out_417012.awb")
					end

					arg_520_1:RecordHistoryTalkVoice("story_v_out_417012", "417012125", "story_v_out_417012.awb")
				end

				arg_520_1:RecordContent(arg_520_1.text_.text)
			end

			local var_523_40 = math.max(var_523_31, arg_520_1.talkMaxDuration)

			if var_523_30 <= arg_520_1.time_ and arg_520_1.time_ < var_523_30 + var_523_40 then
				arg_520_1.typewritter.percent = (arg_520_1.time_ - var_523_30) / var_523_40

				arg_520_1.typewritter:SetDirty()
			end

			if arg_520_1.time_ >= var_523_30 + var_523_40 and arg_520_1.time_ < var_523_30 + var_523_40 + arg_523_0 then
				arg_520_1.typewritter.percent = 1

				arg_520_1.typewritter:SetDirty()
				arg_520_1:ShowNextGo(true)
			end
		end
	end,
	Play417012126 = function(arg_524_0, arg_524_1)
		arg_524_1.time_ = 0
		arg_524_1.frameCnt_ = 0
		arg_524_1.state_ = "playing"
		arg_524_1.curTalkId_ = 417012126
		arg_524_1.duration_ = 8.1

		local var_524_0 = {
			zh = 5.033,
			ja = 8.1
		}
		local var_524_1 = manager.audio:GetLocalizationFlag()

		if var_524_0[var_524_1] ~= nil then
			arg_524_1.duration_ = var_524_0[var_524_1]
		end

		SetActive(arg_524_1.tipsGo_, false)

		function arg_524_1.onSingleLineFinish_()
			arg_524_1.onSingleLineUpdate_ = nil
			arg_524_1.onSingleLineFinish_ = nil
			arg_524_1.state_ = "waiting"
		end

		function arg_524_1.playNext_(arg_526_0)
			if arg_526_0 == 1 then
				arg_524_0:Play417012127(arg_524_1)
			end
		end

		function arg_524_1.onSingleLineUpdate_(arg_527_0)
			local var_527_0 = arg_524_1.actors_["10115"]
			local var_527_1 = 0

			if var_527_1 < arg_524_1.time_ and arg_524_1.time_ <= var_527_1 + arg_527_0 and not isNil(var_527_0) and arg_524_1.var_.actorSpriteComps10115 == nil then
				arg_524_1.var_.actorSpriteComps10115 = var_527_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_527_2 = 0.2

			if var_527_1 <= arg_524_1.time_ and arg_524_1.time_ < var_527_1 + var_527_2 and not isNil(var_527_0) then
				local var_527_3 = (arg_524_1.time_ - var_527_1) / var_527_2

				if arg_524_1.var_.actorSpriteComps10115 then
					for iter_527_0, iter_527_1 in pairs(arg_524_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_527_1 then
							if arg_524_1.isInRecall_ then
								local var_527_4 = Mathf.Lerp(iter_527_1.color.r, arg_524_1.hightColor1.r, var_527_3)
								local var_527_5 = Mathf.Lerp(iter_527_1.color.g, arg_524_1.hightColor1.g, var_527_3)
								local var_527_6 = Mathf.Lerp(iter_527_1.color.b, arg_524_1.hightColor1.b, var_527_3)

								iter_527_1.color = Color.New(var_527_4, var_527_5, var_527_6)
							else
								local var_527_7 = Mathf.Lerp(iter_527_1.color.r, 1, var_527_3)

								iter_527_1.color = Color.New(var_527_7, var_527_7, var_527_7)
							end
						end
					end
				end
			end

			if arg_524_1.time_ >= var_527_1 + var_527_2 and arg_524_1.time_ < var_527_1 + var_527_2 + arg_527_0 and not isNil(var_527_0) and arg_524_1.var_.actorSpriteComps10115 then
				for iter_527_2, iter_527_3 in pairs(arg_524_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_527_3 then
						if arg_524_1.isInRecall_ then
							iter_527_3.color = arg_524_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_527_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_524_1.var_.actorSpriteComps10115 = nil
			end

			local var_527_8 = arg_524_1.actors_["1034"]
			local var_527_9 = 0

			if var_527_9 < arg_524_1.time_ and arg_524_1.time_ <= var_527_9 + arg_527_0 and not isNil(var_527_8) and arg_524_1.var_.actorSpriteComps1034 == nil then
				arg_524_1.var_.actorSpriteComps1034 = var_527_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_527_10 = 0.2

			if var_527_9 <= arg_524_1.time_ and arg_524_1.time_ < var_527_9 + var_527_10 and not isNil(var_527_8) then
				local var_527_11 = (arg_524_1.time_ - var_527_9) / var_527_10

				if arg_524_1.var_.actorSpriteComps1034 then
					for iter_527_4, iter_527_5 in pairs(arg_524_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_527_5 then
							if arg_524_1.isInRecall_ then
								local var_527_12 = Mathf.Lerp(iter_527_5.color.r, arg_524_1.hightColor2.r, var_527_11)
								local var_527_13 = Mathf.Lerp(iter_527_5.color.g, arg_524_1.hightColor2.g, var_527_11)
								local var_527_14 = Mathf.Lerp(iter_527_5.color.b, arg_524_1.hightColor2.b, var_527_11)

								iter_527_5.color = Color.New(var_527_12, var_527_13, var_527_14)
							else
								local var_527_15 = Mathf.Lerp(iter_527_5.color.r, 0.5, var_527_11)

								iter_527_5.color = Color.New(var_527_15, var_527_15, var_527_15)
							end
						end
					end
				end
			end

			if arg_524_1.time_ >= var_527_9 + var_527_10 and arg_524_1.time_ < var_527_9 + var_527_10 + arg_527_0 and not isNil(var_527_8) and arg_524_1.var_.actorSpriteComps1034 then
				for iter_527_6, iter_527_7 in pairs(arg_524_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_527_7 then
						if arg_524_1.isInRecall_ then
							iter_527_7.color = arg_524_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_527_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_524_1.var_.actorSpriteComps1034 = nil
			end

			local var_527_16 = 0
			local var_527_17 = 0.65

			if var_527_16 < arg_524_1.time_ and arg_524_1.time_ <= var_527_16 + arg_527_0 then
				arg_524_1.talkMaxDuration = 0
				arg_524_1.dialogCg_.alpha = 1

				arg_524_1.dialog_:SetActive(true)
				SetActive(arg_524_1.leftNameGo_, true)

				local var_527_18 = arg_524_1:FormatText(StoryNameCfg[1113].name)

				arg_524_1.leftNameTxt_.text = var_527_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_524_1.leftNameTxt_.transform)

				arg_524_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_524_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_524_1:RecordName(arg_524_1.leftNameTxt_.text)
				SetActive(arg_524_1.iconTrs_.gameObject, false)
				arg_524_1.callingController_:SetSelectedState("normal")

				local var_527_19 = arg_524_1:GetWordFromCfg(417012126)
				local var_527_20 = arg_524_1:FormatText(var_527_19.content)

				arg_524_1.text_.text = var_527_20

				LuaForUtil.ClearLinePrefixSymbol(arg_524_1.text_)

				local var_527_21 = 26
				local var_527_22 = utf8.len(var_527_20)
				local var_527_23 = var_527_21 <= 0 and var_527_17 or var_527_17 * (var_527_22 / var_527_21)

				if var_527_23 > 0 and var_527_17 < var_527_23 then
					arg_524_1.talkMaxDuration = var_527_23

					if var_527_23 + var_527_16 > arg_524_1.duration_ then
						arg_524_1.duration_ = var_527_23 + var_527_16
					end
				end

				arg_524_1.text_.text = var_527_20
				arg_524_1.typewritter.percent = 0

				arg_524_1.typewritter:SetDirty()
				arg_524_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012126", "story_v_out_417012.awb") ~= 0 then
					local var_527_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012126", "story_v_out_417012.awb") / 1000

					if var_527_24 + var_527_16 > arg_524_1.duration_ then
						arg_524_1.duration_ = var_527_24 + var_527_16
					end

					if var_527_19.prefab_name ~= "" and arg_524_1.actors_[var_527_19.prefab_name] ~= nil then
						local var_527_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_524_1.actors_[var_527_19.prefab_name].transform, "story_v_out_417012", "417012126", "story_v_out_417012.awb")

						arg_524_1:RecordAudio("417012126", var_527_25)
						arg_524_1:RecordAudio("417012126", var_527_25)
					else
						arg_524_1:AudioAction("play", "voice", "story_v_out_417012", "417012126", "story_v_out_417012.awb")
					end

					arg_524_1:RecordHistoryTalkVoice("story_v_out_417012", "417012126", "story_v_out_417012.awb")
				end

				arg_524_1:RecordContent(arg_524_1.text_.text)
			end

			local var_527_26 = math.max(var_527_17, arg_524_1.talkMaxDuration)

			if var_527_16 <= arg_524_1.time_ and arg_524_1.time_ < var_527_16 + var_527_26 then
				arg_524_1.typewritter.percent = (arg_524_1.time_ - var_527_16) / var_527_26

				arg_524_1.typewritter:SetDirty()
			end

			if arg_524_1.time_ >= var_527_16 + var_527_26 and arg_524_1.time_ < var_527_16 + var_527_26 + arg_527_0 then
				arg_524_1.typewritter.percent = 1

				arg_524_1.typewritter:SetDirty()
				arg_524_1:ShowNextGo(true)
			end
		end
	end,
	Play417012127 = function(arg_528_0, arg_528_1)
		arg_528_1.time_ = 0
		arg_528_1.frameCnt_ = 0
		arg_528_1.state_ = "playing"
		arg_528_1.curTalkId_ = 417012127
		arg_528_1.duration_ = 7.3

		local var_528_0 = {
			zh = 2.533,
			ja = 7.3
		}
		local var_528_1 = manager.audio:GetLocalizationFlag()

		if var_528_0[var_528_1] ~= nil then
			arg_528_1.duration_ = var_528_0[var_528_1]
		end

		SetActive(arg_528_1.tipsGo_, false)

		function arg_528_1.onSingleLineFinish_()
			arg_528_1.onSingleLineUpdate_ = nil
			arg_528_1.onSingleLineFinish_ = nil
			arg_528_1.state_ = "waiting"
		end

		function arg_528_1.playNext_(arg_530_0)
			if arg_530_0 == 1 then
				arg_528_0:Play417012128(arg_528_1)
			end
		end

		function arg_528_1.onSingleLineUpdate_(arg_531_0)
			local var_531_0 = 0
			local var_531_1 = 0.3

			if var_531_0 < arg_528_1.time_ and arg_528_1.time_ <= var_531_0 + arg_531_0 then
				arg_528_1.talkMaxDuration = 0
				arg_528_1.dialogCg_.alpha = 1

				arg_528_1.dialog_:SetActive(true)
				SetActive(arg_528_1.leftNameGo_, true)

				local var_531_2 = arg_528_1:FormatText(StoryNameCfg[1113].name)

				arg_528_1.leftNameTxt_.text = var_531_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_528_1.leftNameTxt_.transform)

				arg_528_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_528_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_528_1:RecordName(arg_528_1.leftNameTxt_.text)
				SetActive(arg_528_1.iconTrs_.gameObject, false)
				arg_528_1.callingController_:SetSelectedState("normal")

				local var_531_3 = arg_528_1:GetWordFromCfg(417012127)
				local var_531_4 = arg_528_1:FormatText(var_531_3.content)

				arg_528_1.text_.text = var_531_4

				LuaForUtil.ClearLinePrefixSymbol(arg_528_1.text_)

				local var_531_5 = 12
				local var_531_6 = utf8.len(var_531_4)
				local var_531_7 = var_531_5 <= 0 and var_531_1 or var_531_1 * (var_531_6 / var_531_5)

				if var_531_7 > 0 and var_531_1 < var_531_7 then
					arg_528_1.talkMaxDuration = var_531_7

					if var_531_7 + var_531_0 > arg_528_1.duration_ then
						arg_528_1.duration_ = var_531_7 + var_531_0
					end
				end

				arg_528_1.text_.text = var_531_4
				arg_528_1.typewritter.percent = 0

				arg_528_1.typewritter:SetDirty()
				arg_528_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012127", "story_v_out_417012.awb") ~= 0 then
					local var_531_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012127", "story_v_out_417012.awb") / 1000

					if var_531_8 + var_531_0 > arg_528_1.duration_ then
						arg_528_1.duration_ = var_531_8 + var_531_0
					end

					if var_531_3.prefab_name ~= "" and arg_528_1.actors_[var_531_3.prefab_name] ~= nil then
						local var_531_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_528_1.actors_[var_531_3.prefab_name].transform, "story_v_out_417012", "417012127", "story_v_out_417012.awb")

						arg_528_1:RecordAudio("417012127", var_531_9)
						arg_528_1:RecordAudio("417012127", var_531_9)
					else
						arg_528_1:AudioAction("play", "voice", "story_v_out_417012", "417012127", "story_v_out_417012.awb")
					end

					arg_528_1:RecordHistoryTalkVoice("story_v_out_417012", "417012127", "story_v_out_417012.awb")
				end

				arg_528_1:RecordContent(arg_528_1.text_.text)
			end

			local var_531_10 = math.max(var_531_1, arg_528_1.talkMaxDuration)

			if var_531_0 <= arg_528_1.time_ and arg_528_1.time_ < var_531_0 + var_531_10 then
				arg_528_1.typewritter.percent = (arg_528_1.time_ - var_531_0) / var_531_10

				arg_528_1.typewritter:SetDirty()
			end

			if arg_528_1.time_ >= var_531_0 + var_531_10 and arg_528_1.time_ < var_531_0 + var_531_10 + arg_531_0 then
				arg_528_1.typewritter.percent = 1

				arg_528_1.typewritter:SetDirty()
				arg_528_1:ShowNextGo(true)
			end
		end
	end,
	Play417012128 = function(arg_532_0, arg_532_1)
		arg_532_1.time_ = 0
		arg_532_1.frameCnt_ = 0
		arg_532_1.state_ = "playing"
		arg_532_1.curTalkId_ = 417012128
		arg_532_1.duration_ = 8.67

		local var_532_0 = {
			zh = 6.166,
			ja = 8.666
		}
		local var_532_1 = manager.audio:GetLocalizationFlag()

		if var_532_0[var_532_1] ~= nil then
			arg_532_1.duration_ = var_532_0[var_532_1]
		end

		SetActive(arg_532_1.tipsGo_, false)

		function arg_532_1.onSingleLineFinish_()
			arg_532_1.onSingleLineUpdate_ = nil
			arg_532_1.onSingleLineFinish_ = nil
			arg_532_1.state_ = "waiting"
		end

		function arg_532_1.playNext_(arg_534_0)
			if arg_534_0 == 1 then
				arg_532_0:Play417012129(arg_532_1)
			end
		end

		function arg_532_1.onSingleLineUpdate_(arg_535_0)
			local var_535_0 = arg_532_1.actors_["1034"]
			local var_535_1 = 0

			if var_535_1 < arg_532_1.time_ and arg_532_1.time_ <= var_535_1 + arg_535_0 and not isNil(var_535_0) and arg_532_1.var_.actorSpriteComps1034 == nil then
				arg_532_1.var_.actorSpriteComps1034 = var_535_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_535_2 = 0.2

			if var_535_1 <= arg_532_1.time_ and arg_532_1.time_ < var_535_1 + var_535_2 and not isNil(var_535_0) then
				local var_535_3 = (arg_532_1.time_ - var_535_1) / var_535_2

				if arg_532_1.var_.actorSpriteComps1034 then
					for iter_535_0, iter_535_1 in pairs(arg_532_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_535_1 then
							if arg_532_1.isInRecall_ then
								local var_535_4 = Mathf.Lerp(iter_535_1.color.r, arg_532_1.hightColor1.r, var_535_3)
								local var_535_5 = Mathf.Lerp(iter_535_1.color.g, arg_532_1.hightColor1.g, var_535_3)
								local var_535_6 = Mathf.Lerp(iter_535_1.color.b, arg_532_1.hightColor1.b, var_535_3)

								iter_535_1.color = Color.New(var_535_4, var_535_5, var_535_6)
							else
								local var_535_7 = Mathf.Lerp(iter_535_1.color.r, 1, var_535_3)

								iter_535_1.color = Color.New(var_535_7, var_535_7, var_535_7)
							end
						end
					end
				end
			end

			if arg_532_1.time_ >= var_535_1 + var_535_2 and arg_532_1.time_ < var_535_1 + var_535_2 + arg_535_0 and not isNil(var_535_0) and arg_532_1.var_.actorSpriteComps1034 then
				for iter_535_2, iter_535_3 in pairs(arg_532_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_535_3 then
						if arg_532_1.isInRecall_ then
							iter_535_3.color = arg_532_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_535_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_532_1.var_.actorSpriteComps1034 = nil
			end

			local var_535_8 = arg_532_1.actors_["10115"]
			local var_535_9 = 0

			if var_535_9 < arg_532_1.time_ and arg_532_1.time_ <= var_535_9 + arg_535_0 and not isNil(var_535_8) and arg_532_1.var_.actorSpriteComps10115 == nil then
				arg_532_1.var_.actorSpriteComps10115 = var_535_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_535_10 = 0.2

			if var_535_9 <= arg_532_1.time_ and arg_532_1.time_ < var_535_9 + var_535_10 and not isNil(var_535_8) then
				local var_535_11 = (arg_532_1.time_ - var_535_9) / var_535_10

				if arg_532_1.var_.actorSpriteComps10115 then
					for iter_535_4, iter_535_5 in pairs(arg_532_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_535_5 then
							if arg_532_1.isInRecall_ then
								local var_535_12 = Mathf.Lerp(iter_535_5.color.r, arg_532_1.hightColor2.r, var_535_11)
								local var_535_13 = Mathf.Lerp(iter_535_5.color.g, arg_532_1.hightColor2.g, var_535_11)
								local var_535_14 = Mathf.Lerp(iter_535_5.color.b, arg_532_1.hightColor2.b, var_535_11)

								iter_535_5.color = Color.New(var_535_12, var_535_13, var_535_14)
							else
								local var_535_15 = Mathf.Lerp(iter_535_5.color.r, 0.5, var_535_11)

								iter_535_5.color = Color.New(var_535_15, var_535_15, var_535_15)
							end
						end
					end
				end
			end

			if arg_532_1.time_ >= var_535_9 + var_535_10 and arg_532_1.time_ < var_535_9 + var_535_10 + arg_535_0 and not isNil(var_535_8) and arg_532_1.var_.actorSpriteComps10115 then
				for iter_535_6, iter_535_7 in pairs(arg_532_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_535_7 then
						if arg_532_1.isInRecall_ then
							iter_535_7.color = arg_532_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_535_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_532_1.var_.actorSpriteComps10115 = nil
			end

			local var_535_16 = arg_532_1.actors_["1034"].transform
			local var_535_17 = 0

			if var_535_17 < arg_532_1.time_ and arg_532_1.time_ <= var_535_17 + arg_535_0 then
				arg_532_1.var_.moveOldPos1034 = var_535_16.localPosition
				var_535_16.localScale = Vector3.New(1, 1, 1)

				arg_532_1:CheckSpriteTmpPos("1034", 2)

				local var_535_18 = var_535_16.childCount

				for iter_535_8 = 0, var_535_18 - 1 do
					local var_535_19 = var_535_16:GetChild(iter_535_8)

					if var_535_19.name == "split_4" or not string.find(var_535_19.name, "split") then
						var_535_19.gameObject:SetActive(true)
					else
						var_535_19.gameObject:SetActive(false)
					end
				end
			end

			local var_535_20 = 0.001

			if var_535_17 <= arg_532_1.time_ and arg_532_1.time_ < var_535_17 + var_535_20 then
				local var_535_21 = (arg_532_1.time_ - var_535_17) / var_535_20
				local var_535_22 = Vector3.New(-390, -331.9, -324)

				var_535_16.localPosition = Vector3.Lerp(arg_532_1.var_.moveOldPos1034, var_535_22, var_535_21)
			end

			if arg_532_1.time_ >= var_535_17 + var_535_20 and arg_532_1.time_ < var_535_17 + var_535_20 + arg_535_0 then
				var_535_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_535_23 = 0
			local var_535_24 = 0.6

			if var_535_23 < arg_532_1.time_ and arg_532_1.time_ <= var_535_23 + arg_535_0 then
				arg_532_1.talkMaxDuration = 0
				arg_532_1.dialogCg_.alpha = 1

				arg_532_1.dialog_:SetActive(true)
				SetActive(arg_532_1.leftNameGo_, true)

				local var_535_25 = arg_532_1:FormatText(StoryNameCfg[1109].name)

				arg_532_1.leftNameTxt_.text = var_535_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_532_1.leftNameTxt_.transform)

				arg_532_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_532_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_532_1:RecordName(arg_532_1.leftNameTxt_.text)
				SetActive(arg_532_1.iconTrs_.gameObject, false)
				arg_532_1.callingController_:SetSelectedState("normal")

				local var_535_26 = arg_532_1:GetWordFromCfg(417012128)
				local var_535_27 = arg_532_1:FormatText(var_535_26.content)

				arg_532_1.text_.text = var_535_27

				LuaForUtil.ClearLinePrefixSymbol(arg_532_1.text_)

				local var_535_28 = 24
				local var_535_29 = utf8.len(var_535_27)
				local var_535_30 = var_535_28 <= 0 and var_535_24 or var_535_24 * (var_535_29 / var_535_28)

				if var_535_30 > 0 and var_535_24 < var_535_30 then
					arg_532_1.talkMaxDuration = var_535_30

					if var_535_30 + var_535_23 > arg_532_1.duration_ then
						arg_532_1.duration_ = var_535_30 + var_535_23
					end
				end

				arg_532_1.text_.text = var_535_27
				arg_532_1.typewritter.percent = 0

				arg_532_1.typewritter:SetDirty()
				arg_532_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012128", "story_v_out_417012.awb") ~= 0 then
					local var_535_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012128", "story_v_out_417012.awb") / 1000

					if var_535_31 + var_535_23 > arg_532_1.duration_ then
						arg_532_1.duration_ = var_535_31 + var_535_23
					end

					if var_535_26.prefab_name ~= "" and arg_532_1.actors_[var_535_26.prefab_name] ~= nil then
						local var_535_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_532_1.actors_[var_535_26.prefab_name].transform, "story_v_out_417012", "417012128", "story_v_out_417012.awb")

						arg_532_1:RecordAudio("417012128", var_535_32)
						arg_532_1:RecordAudio("417012128", var_535_32)
					else
						arg_532_1:AudioAction("play", "voice", "story_v_out_417012", "417012128", "story_v_out_417012.awb")
					end

					arg_532_1:RecordHistoryTalkVoice("story_v_out_417012", "417012128", "story_v_out_417012.awb")
				end

				arg_532_1:RecordContent(arg_532_1.text_.text)
			end

			local var_535_33 = math.max(var_535_24, arg_532_1.talkMaxDuration)

			if var_535_23 <= arg_532_1.time_ and arg_532_1.time_ < var_535_23 + var_535_33 then
				arg_532_1.typewritter.percent = (arg_532_1.time_ - var_535_23) / var_535_33

				arg_532_1.typewritter:SetDirty()
			end

			if arg_532_1.time_ >= var_535_23 + var_535_33 and arg_532_1.time_ < var_535_23 + var_535_33 + arg_535_0 then
				arg_532_1.typewritter.percent = 1

				arg_532_1.typewritter:SetDirty()
				arg_532_1:ShowNextGo(true)
			end
		end
	end,
	Play417012129 = function(arg_536_0, arg_536_1)
		arg_536_1.time_ = 0
		arg_536_1.frameCnt_ = 0
		arg_536_1.state_ = "playing"
		arg_536_1.curTalkId_ = 417012129
		arg_536_1.duration_ = 6.5

		local var_536_0 = {
			zh = 3.3,
			ja = 6.5
		}
		local var_536_1 = manager.audio:GetLocalizationFlag()

		if var_536_0[var_536_1] ~= nil then
			arg_536_1.duration_ = var_536_0[var_536_1]
		end

		SetActive(arg_536_1.tipsGo_, false)

		function arg_536_1.onSingleLineFinish_()
			arg_536_1.onSingleLineUpdate_ = nil
			arg_536_1.onSingleLineFinish_ = nil
			arg_536_1.state_ = "waiting"
		end

		function arg_536_1.playNext_(arg_538_0)
			if arg_538_0 == 1 then
				arg_536_0:Play417012130(arg_536_1)
			end
		end

		function arg_536_1.onSingleLineUpdate_(arg_539_0)
			local var_539_0 = arg_536_1.actors_["10115"]
			local var_539_1 = 0

			if var_539_1 < arg_536_1.time_ and arg_536_1.time_ <= var_539_1 + arg_539_0 and not isNil(var_539_0) and arg_536_1.var_.actorSpriteComps10115 == nil then
				arg_536_1.var_.actorSpriteComps10115 = var_539_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_539_2 = 0.2

			if var_539_1 <= arg_536_1.time_ and arg_536_1.time_ < var_539_1 + var_539_2 and not isNil(var_539_0) then
				local var_539_3 = (arg_536_1.time_ - var_539_1) / var_539_2

				if arg_536_1.var_.actorSpriteComps10115 then
					for iter_539_0, iter_539_1 in pairs(arg_536_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_539_1 then
							if arg_536_1.isInRecall_ then
								local var_539_4 = Mathf.Lerp(iter_539_1.color.r, arg_536_1.hightColor1.r, var_539_3)
								local var_539_5 = Mathf.Lerp(iter_539_1.color.g, arg_536_1.hightColor1.g, var_539_3)
								local var_539_6 = Mathf.Lerp(iter_539_1.color.b, arg_536_1.hightColor1.b, var_539_3)

								iter_539_1.color = Color.New(var_539_4, var_539_5, var_539_6)
							else
								local var_539_7 = Mathf.Lerp(iter_539_1.color.r, 1, var_539_3)

								iter_539_1.color = Color.New(var_539_7, var_539_7, var_539_7)
							end
						end
					end
				end
			end

			if arg_536_1.time_ >= var_539_1 + var_539_2 and arg_536_1.time_ < var_539_1 + var_539_2 + arg_539_0 and not isNil(var_539_0) and arg_536_1.var_.actorSpriteComps10115 then
				for iter_539_2, iter_539_3 in pairs(arg_536_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_539_3 then
						if arg_536_1.isInRecall_ then
							iter_539_3.color = arg_536_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_539_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_536_1.var_.actorSpriteComps10115 = nil
			end

			local var_539_8 = arg_536_1.actors_["1034"]
			local var_539_9 = 0

			if var_539_9 < arg_536_1.time_ and arg_536_1.time_ <= var_539_9 + arg_539_0 and not isNil(var_539_8) and arg_536_1.var_.actorSpriteComps1034 == nil then
				arg_536_1.var_.actorSpriteComps1034 = var_539_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_539_10 = 0.2

			if var_539_9 <= arg_536_1.time_ and arg_536_1.time_ < var_539_9 + var_539_10 and not isNil(var_539_8) then
				local var_539_11 = (arg_536_1.time_ - var_539_9) / var_539_10

				if arg_536_1.var_.actorSpriteComps1034 then
					for iter_539_4, iter_539_5 in pairs(arg_536_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_539_5 then
							if arg_536_1.isInRecall_ then
								local var_539_12 = Mathf.Lerp(iter_539_5.color.r, arg_536_1.hightColor2.r, var_539_11)
								local var_539_13 = Mathf.Lerp(iter_539_5.color.g, arg_536_1.hightColor2.g, var_539_11)
								local var_539_14 = Mathf.Lerp(iter_539_5.color.b, arg_536_1.hightColor2.b, var_539_11)

								iter_539_5.color = Color.New(var_539_12, var_539_13, var_539_14)
							else
								local var_539_15 = Mathf.Lerp(iter_539_5.color.r, 0.5, var_539_11)

								iter_539_5.color = Color.New(var_539_15, var_539_15, var_539_15)
							end
						end
					end
				end
			end

			if arg_536_1.time_ >= var_539_9 + var_539_10 and arg_536_1.time_ < var_539_9 + var_539_10 + arg_539_0 and not isNil(var_539_8) and arg_536_1.var_.actorSpriteComps1034 then
				for iter_539_6, iter_539_7 in pairs(arg_536_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_539_7 then
						if arg_536_1.isInRecall_ then
							iter_539_7.color = arg_536_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_539_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_536_1.var_.actorSpriteComps1034 = nil
			end

			local var_539_16 = arg_536_1.actors_["10115"].transform
			local var_539_17 = 0

			if var_539_17 < arg_536_1.time_ and arg_536_1.time_ <= var_539_17 + arg_539_0 then
				arg_536_1.var_.moveOldPos10115 = var_539_16.localPosition
				var_539_16.localScale = Vector3.New(1, 1, 1)

				arg_536_1:CheckSpriteTmpPos("10115", 4)

				local var_539_18 = var_539_16.childCount

				for iter_539_8 = 0, var_539_18 - 1 do
					local var_539_19 = var_539_16:GetChild(iter_539_8)

					if var_539_19.name == "" or not string.find(var_539_19.name, "split") then
						var_539_19.gameObject:SetActive(true)
					else
						var_539_19.gameObject:SetActive(false)
					end
				end
			end

			local var_539_20 = 0.001

			if var_539_17 <= arg_536_1.time_ and arg_536_1.time_ < var_539_17 + var_539_20 then
				local var_539_21 = (arg_536_1.time_ - var_539_17) / var_539_20
				local var_539_22 = Vector3.New(390, -387.3, -246.2)

				var_539_16.localPosition = Vector3.Lerp(arg_536_1.var_.moveOldPos10115, var_539_22, var_539_21)
			end

			if arg_536_1.time_ >= var_539_17 + var_539_20 and arg_536_1.time_ < var_539_17 + var_539_20 + arg_539_0 then
				var_539_16.localPosition = Vector3.New(390, -387.3, -246.2)
			end

			local var_539_23 = 0
			local var_539_24 = 0.45

			if var_539_23 < arg_536_1.time_ and arg_536_1.time_ <= var_539_23 + arg_539_0 then
				arg_536_1.talkMaxDuration = 0
				arg_536_1.dialogCg_.alpha = 1

				arg_536_1.dialog_:SetActive(true)
				SetActive(arg_536_1.leftNameGo_, true)

				local var_539_25 = arg_536_1:FormatText(StoryNameCfg[1113].name)

				arg_536_1.leftNameTxt_.text = var_539_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_536_1.leftNameTxt_.transform)

				arg_536_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_536_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_536_1:RecordName(arg_536_1.leftNameTxt_.text)
				SetActive(arg_536_1.iconTrs_.gameObject, false)
				arg_536_1.callingController_:SetSelectedState("normal")

				local var_539_26 = arg_536_1:GetWordFromCfg(417012129)
				local var_539_27 = arg_536_1:FormatText(var_539_26.content)

				arg_536_1.text_.text = var_539_27

				LuaForUtil.ClearLinePrefixSymbol(arg_536_1.text_)

				local var_539_28 = 18
				local var_539_29 = utf8.len(var_539_27)
				local var_539_30 = var_539_28 <= 0 and var_539_24 or var_539_24 * (var_539_29 / var_539_28)

				if var_539_30 > 0 and var_539_24 < var_539_30 then
					arg_536_1.talkMaxDuration = var_539_30

					if var_539_30 + var_539_23 > arg_536_1.duration_ then
						arg_536_1.duration_ = var_539_30 + var_539_23
					end
				end

				arg_536_1.text_.text = var_539_27
				arg_536_1.typewritter.percent = 0

				arg_536_1.typewritter:SetDirty()
				arg_536_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012129", "story_v_out_417012.awb") ~= 0 then
					local var_539_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012129", "story_v_out_417012.awb") / 1000

					if var_539_31 + var_539_23 > arg_536_1.duration_ then
						arg_536_1.duration_ = var_539_31 + var_539_23
					end

					if var_539_26.prefab_name ~= "" and arg_536_1.actors_[var_539_26.prefab_name] ~= nil then
						local var_539_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_536_1.actors_[var_539_26.prefab_name].transform, "story_v_out_417012", "417012129", "story_v_out_417012.awb")

						arg_536_1:RecordAudio("417012129", var_539_32)
						arg_536_1:RecordAudio("417012129", var_539_32)
					else
						arg_536_1:AudioAction("play", "voice", "story_v_out_417012", "417012129", "story_v_out_417012.awb")
					end

					arg_536_1:RecordHistoryTalkVoice("story_v_out_417012", "417012129", "story_v_out_417012.awb")
				end

				arg_536_1:RecordContent(arg_536_1.text_.text)
			end

			local var_539_33 = math.max(var_539_24, arg_536_1.talkMaxDuration)

			if var_539_23 <= arg_536_1.time_ and arg_536_1.time_ < var_539_23 + var_539_33 then
				arg_536_1.typewritter.percent = (arg_536_1.time_ - var_539_23) / var_539_33

				arg_536_1.typewritter:SetDirty()
			end

			if arg_536_1.time_ >= var_539_23 + var_539_33 and arg_536_1.time_ < var_539_23 + var_539_33 + arg_539_0 then
				arg_536_1.typewritter.percent = 1

				arg_536_1.typewritter:SetDirty()
				arg_536_1:ShowNextGo(true)
			end
		end
	end,
	Play417012130 = function(arg_540_0, arg_540_1)
		arg_540_1.time_ = 0
		arg_540_1.frameCnt_ = 0
		arg_540_1.state_ = "playing"
		arg_540_1.curTalkId_ = 417012130
		arg_540_1.duration_ = 15.67

		local var_540_0 = {
			zh = 9.1,
			ja = 15.666
		}
		local var_540_1 = manager.audio:GetLocalizationFlag()

		if var_540_0[var_540_1] ~= nil then
			arg_540_1.duration_ = var_540_0[var_540_1]
		end

		SetActive(arg_540_1.tipsGo_, false)

		function arg_540_1.onSingleLineFinish_()
			arg_540_1.onSingleLineUpdate_ = nil
			arg_540_1.onSingleLineFinish_ = nil
			arg_540_1.state_ = "waiting"
		end

		function arg_540_1.playNext_(arg_542_0)
			if arg_542_0 == 1 then
				arg_540_0:Play417012131(arg_540_1)
			end
		end

		function arg_540_1.onSingleLineUpdate_(arg_543_0)
			local var_543_0 = 0
			local var_543_1 = 1.025

			if var_543_0 < arg_540_1.time_ and arg_540_1.time_ <= var_543_0 + arg_543_0 then
				arg_540_1.talkMaxDuration = 0
				arg_540_1.dialogCg_.alpha = 1

				arg_540_1.dialog_:SetActive(true)
				SetActive(arg_540_1.leftNameGo_, true)

				local var_543_2 = arg_540_1:FormatText(StoryNameCfg[1113].name)

				arg_540_1.leftNameTxt_.text = var_543_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_540_1.leftNameTxt_.transform)

				arg_540_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_540_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_540_1:RecordName(arg_540_1.leftNameTxt_.text)
				SetActive(arg_540_1.iconTrs_.gameObject, false)
				arg_540_1.callingController_:SetSelectedState("normal")

				local var_543_3 = arg_540_1:GetWordFromCfg(417012130)
				local var_543_4 = arg_540_1:FormatText(var_543_3.content)

				arg_540_1.text_.text = var_543_4

				LuaForUtil.ClearLinePrefixSymbol(arg_540_1.text_)

				local var_543_5 = 41
				local var_543_6 = utf8.len(var_543_4)
				local var_543_7 = var_543_5 <= 0 and var_543_1 or var_543_1 * (var_543_6 / var_543_5)

				if var_543_7 > 0 and var_543_1 < var_543_7 then
					arg_540_1.talkMaxDuration = var_543_7

					if var_543_7 + var_543_0 > arg_540_1.duration_ then
						arg_540_1.duration_ = var_543_7 + var_543_0
					end
				end

				arg_540_1.text_.text = var_543_4
				arg_540_1.typewritter.percent = 0

				arg_540_1.typewritter:SetDirty()
				arg_540_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012130", "story_v_out_417012.awb") ~= 0 then
					local var_543_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012130", "story_v_out_417012.awb") / 1000

					if var_543_8 + var_543_0 > arg_540_1.duration_ then
						arg_540_1.duration_ = var_543_8 + var_543_0
					end

					if var_543_3.prefab_name ~= "" and arg_540_1.actors_[var_543_3.prefab_name] ~= nil then
						local var_543_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_540_1.actors_[var_543_3.prefab_name].transform, "story_v_out_417012", "417012130", "story_v_out_417012.awb")

						arg_540_1:RecordAudio("417012130", var_543_9)
						arg_540_1:RecordAudio("417012130", var_543_9)
					else
						arg_540_1:AudioAction("play", "voice", "story_v_out_417012", "417012130", "story_v_out_417012.awb")
					end

					arg_540_1:RecordHistoryTalkVoice("story_v_out_417012", "417012130", "story_v_out_417012.awb")
				end

				arg_540_1:RecordContent(arg_540_1.text_.text)
			end

			local var_543_10 = math.max(var_543_1, arg_540_1.talkMaxDuration)

			if var_543_0 <= arg_540_1.time_ and arg_540_1.time_ < var_543_0 + var_543_10 then
				arg_540_1.typewritter.percent = (arg_540_1.time_ - var_543_0) / var_543_10

				arg_540_1.typewritter:SetDirty()
			end

			if arg_540_1.time_ >= var_543_0 + var_543_10 and arg_540_1.time_ < var_543_0 + var_543_10 + arg_543_0 then
				arg_540_1.typewritter.percent = 1

				arg_540_1.typewritter:SetDirty()
				arg_540_1:ShowNextGo(true)
			end
		end
	end,
	Play417012131 = function(arg_544_0, arg_544_1)
		arg_544_1.time_ = 0
		arg_544_1.frameCnt_ = 0
		arg_544_1.state_ = "playing"
		arg_544_1.curTalkId_ = 417012131
		arg_544_1.duration_ = 8.2

		local var_544_0 = {
			zh = 4.466,
			ja = 8.2
		}
		local var_544_1 = manager.audio:GetLocalizationFlag()

		if var_544_0[var_544_1] ~= nil then
			arg_544_1.duration_ = var_544_0[var_544_1]
		end

		SetActive(arg_544_1.tipsGo_, false)

		function arg_544_1.onSingleLineFinish_()
			arg_544_1.onSingleLineUpdate_ = nil
			arg_544_1.onSingleLineFinish_ = nil
			arg_544_1.state_ = "waiting"
		end

		function arg_544_1.playNext_(arg_546_0)
			if arg_546_0 == 1 then
				arg_544_0:Play417012132(arg_544_1)
			end
		end

		function arg_544_1.onSingleLineUpdate_(arg_547_0)
			local var_547_0 = arg_544_1.actors_["1034"]
			local var_547_1 = 0

			if var_547_1 < arg_544_1.time_ and arg_544_1.time_ <= var_547_1 + arg_547_0 and not isNil(var_547_0) and arg_544_1.var_.actorSpriteComps1034 == nil then
				arg_544_1.var_.actorSpriteComps1034 = var_547_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_547_2 = 0.2

			if var_547_1 <= arg_544_1.time_ and arg_544_1.time_ < var_547_1 + var_547_2 and not isNil(var_547_0) then
				local var_547_3 = (arg_544_1.time_ - var_547_1) / var_547_2

				if arg_544_1.var_.actorSpriteComps1034 then
					for iter_547_0, iter_547_1 in pairs(arg_544_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_547_1 then
							if arg_544_1.isInRecall_ then
								local var_547_4 = Mathf.Lerp(iter_547_1.color.r, arg_544_1.hightColor1.r, var_547_3)
								local var_547_5 = Mathf.Lerp(iter_547_1.color.g, arg_544_1.hightColor1.g, var_547_3)
								local var_547_6 = Mathf.Lerp(iter_547_1.color.b, arg_544_1.hightColor1.b, var_547_3)

								iter_547_1.color = Color.New(var_547_4, var_547_5, var_547_6)
							else
								local var_547_7 = Mathf.Lerp(iter_547_1.color.r, 1, var_547_3)

								iter_547_1.color = Color.New(var_547_7, var_547_7, var_547_7)
							end
						end
					end
				end
			end

			if arg_544_1.time_ >= var_547_1 + var_547_2 and arg_544_1.time_ < var_547_1 + var_547_2 + arg_547_0 and not isNil(var_547_0) and arg_544_1.var_.actorSpriteComps1034 then
				for iter_547_2, iter_547_3 in pairs(arg_544_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_547_3 then
						if arg_544_1.isInRecall_ then
							iter_547_3.color = arg_544_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_547_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_544_1.var_.actorSpriteComps1034 = nil
			end

			local var_547_8 = arg_544_1.actors_["10115"]
			local var_547_9 = 0

			if var_547_9 < arg_544_1.time_ and arg_544_1.time_ <= var_547_9 + arg_547_0 and not isNil(var_547_8) and arg_544_1.var_.actorSpriteComps10115 == nil then
				arg_544_1.var_.actorSpriteComps10115 = var_547_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_547_10 = 0.2

			if var_547_9 <= arg_544_1.time_ and arg_544_1.time_ < var_547_9 + var_547_10 and not isNil(var_547_8) then
				local var_547_11 = (arg_544_1.time_ - var_547_9) / var_547_10

				if arg_544_1.var_.actorSpriteComps10115 then
					for iter_547_4, iter_547_5 in pairs(arg_544_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_547_5 then
							if arg_544_1.isInRecall_ then
								local var_547_12 = Mathf.Lerp(iter_547_5.color.r, arg_544_1.hightColor2.r, var_547_11)
								local var_547_13 = Mathf.Lerp(iter_547_5.color.g, arg_544_1.hightColor2.g, var_547_11)
								local var_547_14 = Mathf.Lerp(iter_547_5.color.b, arg_544_1.hightColor2.b, var_547_11)

								iter_547_5.color = Color.New(var_547_12, var_547_13, var_547_14)
							else
								local var_547_15 = Mathf.Lerp(iter_547_5.color.r, 0.5, var_547_11)

								iter_547_5.color = Color.New(var_547_15, var_547_15, var_547_15)
							end
						end
					end
				end
			end

			if arg_544_1.time_ >= var_547_9 + var_547_10 and arg_544_1.time_ < var_547_9 + var_547_10 + arg_547_0 and not isNil(var_547_8) and arg_544_1.var_.actorSpriteComps10115 then
				for iter_547_6, iter_547_7 in pairs(arg_544_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_547_7 then
						if arg_544_1.isInRecall_ then
							iter_547_7.color = arg_544_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_547_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_544_1.var_.actorSpriteComps10115 = nil
			end

			local var_547_16 = arg_544_1.actors_["1034"].transform
			local var_547_17 = 0

			if var_547_17 < arg_544_1.time_ and arg_544_1.time_ <= var_547_17 + arg_547_0 then
				arg_544_1.var_.moveOldPos1034 = var_547_16.localPosition
				var_547_16.localScale = Vector3.New(1, 1, 1)

				arg_544_1:CheckSpriteTmpPos("1034", 2)

				local var_547_18 = var_547_16.childCount

				for iter_547_8 = 0, var_547_18 - 1 do
					local var_547_19 = var_547_16:GetChild(iter_547_8)

					if var_547_19.name == "split_1" or not string.find(var_547_19.name, "split") then
						var_547_19.gameObject:SetActive(true)
					else
						var_547_19.gameObject:SetActive(false)
					end
				end
			end

			local var_547_20 = 0.001

			if var_547_17 <= arg_544_1.time_ and arg_544_1.time_ < var_547_17 + var_547_20 then
				local var_547_21 = (arg_544_1.time_ - var_547_17) / var_547_20
				local var_547_22 = Vector3.New(-390, -331.9, -324)

				var_547_16.localPosition = Vector3.Lerp(arg_544_1.var_.moveOldPos1034, var_547_22, var_547_21)
			end

			if arg_544_1.time_ >= var_547_17 + var_547_20 and arg_544_1.time_ < var_547_17 + var_547_20 + arg_547_0 then
				var_547_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_547_23 = 0
			local var_547_24 = 0.575

			if var_547_23 < arg_544_1.time_ and arg_544_1.time_ <= var_547_23 + arg_547_0 then
				arg_544_1.talkMaxDuration = 0
				arg_544_1.dialogCg_.alpha = 1

				arg_544_1.dialog_:SetActive(true)
				SetActive(arg_544_1.leftNameGo_, true)

				local var_547_25 = arg_544_1:FormatText(StoryNameCfg[1109].name)

				arg_544_1.leftNameTxt_.text = var_547_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_544_1.leftNameTxt_.transform)

				arg_544_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_544_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_544_1:RecordName(arg_544_1.leftNameTxt_.text)
				SetActive(arg_544_1.iconTrs_.gameObject, false)
				arg_544_1.callingController_:SetSelectedState("normal")

				local var_547_26 = arg_544_1:GetWordFromCfg(417012131)
				local var_547_27 = arg_544_1:FormatText(var_547_26.content)

				arg_544_1.text_.text = var_547_27

				LuaForUtil.ClearLinePrefixSymbol(arg_544_1.text_)

				local var_547_28 = 23
				local var_547_29 = utf8.len(var_547_27)
				local var_547_30 = var_547_28 <= 0 and var_547_24 or var_547_24 * (var_547_29 / var_547_28)

				if var_547_30 > 0 and var_547_24 < var_547_30 then
					arg_544_1.talkMaxDuration = var_547_30

					if var_547_30 + var_547_23 > arg_544_1.duration_ then
						arg_544_1.duration_ = var_547_30 + var_547_23
					end
				end

				arg_544_1.text_.text = var_547_27
				arg_544_1.typewritter.percent = 0

				arg_544_1.typewritter:SetDirty()
				arg_544_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012131", "story_v_out_417012.awb") ~= 0 then
					local var_547_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012131", "story_v_out_417012.awb") / 1000

					if var_547_31 + var_547_23 > arg_544_1.duration_ then
						arg_544_1.duration_ = var_547_31 + var_547_23
					end

					if var_547_26.prefab_name ~= "" and arg_544_1.actors_[var_547_26.prefab_name] ~= nil then
						local var_547_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_544_1.actors_[var_547_26.prefab_name].transform, "story_v_out_417012", "417012131", "story_v_out_417012.awb")

						arg_544_1:RecordAudio("417012131", var_547_32)
						arg_544_1:RecordAudio("417012131", var_547_32)
					else
						arg_544_1:AudioAction("play", "voice", "story_v_out_417012", "417012131", "story_v_out_417012.awb")
					end

					arg_544_1:RecordHistoryTalkVoice("story_v_out_417012", "417012131", "story_v_out_417012.awb")
				end

				arg_544_1:RecordContent(arg_544_1.text_.text)
			end

			local var_547_33 = math.max(var_547_24, arg_544_1.talkMaxDuration)

			if var_547_23 <= arg_544_1.time_ and arg_544_1.time_ < var_547_23 + var_547_33 then
				arg_544_1.typewritter.percent = (arg_544_1.time_ - var_547_23) / var_547_33

				arg_544_1.typewritter:SetDirty()
			end

			if arg_544_1.time_ >= var_547_23 + var_547_33 and arg_544_1.time_ < var_547_23 + var_547_33 + arg_547_0 then
				arg_544_1.typewritter.percent = 1

				arg_544_1.typewritter:SetDirty()
				arg_544_1:ShowNextGo(true)
			end
		end
	end,
	Play417012132 = function(arg_548_0, arg_548_1)
		arg_548_1.time_ = 0
		arg_548_1.frameCnt_ = 0
		arg_548_1.state_ = "playing"
		arg_548_1.curTalkId_ = 417012132
		arg_548_1.duration_ = 5.1

		local var_548_0 = {
			zh = 3.966,
			ja = 5.1
		}
		local var_548_1 = manager.audio:GetLocalizationFlag()

		if var_548_0[var_548_1] ~= nil then
			arg_548_1.duration_ = var_548_0[var_548_1]
		end

		SetActive(arg_548_1.tipsGo_, false)

		function arg_548_1.onSingleLineFinish_()
			arg_548_1.onSingleLineUpdate_ = nil
			arg_548_1.onSingleLineFinish_ = nil
			arg_548_1.state_ = "waiting"
		end

		function arg_548_1.playNext_(arg_550_0)
			if arg_550_0 == 1 then
				arg_548_0:Play417012133(arg_548_1)
			end
		end

		function arg_548_1.onSingleLineUpdate_(arg_551_0)
			local var_551_0 = arg_548_1.actors_["10115"]
			local var_551_1 = 0

			if var_551_1 < arg_548_1.time_ and arg_548_1.time_ <= var_551_1 + arg_551_0 and not isNil(var_551_0) and arg_548_1.var_.actorSpriteComps10115 == nil then
				arg_548_1.var_.actorSpriteComps10115 = var_551_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_551_2 = 0.2

			if var_551_1 <= arg_548_1.time_ and arg_548_1.time_ < var_551_1 + var_551_2 and not isNil(var_551_0) then
				local var_551_3 = (arg_548_1.time_ - var_551_1) / var_551_2

				if arg_548_1.var_.actorSpriteComps10115 then
					for iter_551_0, iter_551_1 in pairs(arg_548_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_551_1 then
							if arg_548_1.isInRecall_ then
								local var_551_4 = Mathf.Lerp(iter_551_1.color.r, arg_548_1.hightColor1.r, var_551_3)
								local var_551_5 = Mathf.Lerp(iter_551_1.color.g, arg_548_1.hightColor1.g, var_551_3)
								local var_551_6 = Mathf.Lerp(iter_551_1.color.b, arg_548_1.hightColor1.b, var_551_3)

								iter_551_1.color = Color.New(var_551_4, var_551_5, var_551_6)
							else
								local var_551_7 = Mathf.Lerp(iter_551_1.color.r, 1, var_551_3)

								iter_551_1.color = Color.New(var_551_7, var_551_7, var_551_7)
							end
						end
					end
				end
			end

			if arg_548_1.time_ >= var_551_1 + var_551_2 and arg_548_1.time_ < var_551_1 + var_551_2 + arg_551_0 and not isNil(var_551_0) and arg_548_1.var_.actorSpriteComps10115 then
				for iter_551_2, iter_551_3 in pairs(arg_548_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_551_3 then
						if arg_548_1.isInRecall_ then
							iter_551_3.color = arg_548_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_551_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_548_1.var_.actorSpriteComps10115 = nil
			end

			local var_551_8 = arg_548_1.actors_["1034"]
			local var_551_9 = 0

			if var_551_9 < arg_548_1.time_ and arg_548_1.time_ <= var_551_9 + arg_551_0 and not isNil(var_551_8) and arg_548_1.var_.actorSpriteComps1034 == nil then
				arg_548_1.var_.actorSpriteComps1034 = var_551_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_551_10 = 0.2

			if var_551_9 <= arg_548_1.time_ and arg_548_1.time_ < var_551_9 + var_551_10 and not isNil(var_551_8) then
				local var_551_11 = (arg_548_1.time_ - var_551_9) / var_551_10

				if arg_548_1.var_.actorSpriteComps1034 then
					for iter_551_4, iter_551_5 in pairs(arg_548_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_551_5 then
							if arg_548_1.isInRecall_ then
								local var_551_12 = Mathf.Lerp(iter_551_5.color.r, arg_548_1.hightColor2.r, var_551_11)
								local var_551_13 = Mathf.Lerp(iter_551_5.color.g, arg_548_1.hightColor2.g, var_551_11)
								local var_551_14 = Mathf.Lerp(iter_551_5.color.b, arg_548_1.hightColor2.b, var_551_11)

								iter_551_5.color = Color.New(var_551_12, var_551_13, var_551_14)
							else
								local var_551_15 = Mathf.Lerp(iter_551_5.color.r, 0.5, var_551_11)

								iter_551_5.color = Color.New(var_551_15, var_551_15, var_551_15)
							end
						end
					end
				end
			end

			if arg_548_1.time_ >= var_551_9 + var_551_10 and arg_548_1.time_ < var_551_9 + var_551_10 + arg_551_0 and not isNil(var_551_8) and arg_548_1.var_.actorSpriteComps1034 then
				for iter_551_6, iter_551_7 in pairs(arg_548_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_551_7 then
						if arg_548_1.isInRecall_ then
							iter_551_7.color = arg_548_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_551_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_548_1.var_.actorSpriteComps1034 = nil
			end

			local var_551_16 = 0
			local var_551_17 = 0.375

			if var_551_16 < arg_548_1.time_ and arg_548_1.time_ <= var_551_16 + arg_551_0 then
				arg_548_1.talkMaxDuration = 0
				arg_548_1.dialogCg_.alpha = 1

				arg_548_1.dialog_:SetActive(true)
				SetActive(arg_548_1.leftNameGo_, true)

				local var_551_18 = arg_548_1:FormatText(StoryNameCfg[1113].name)

				arg_548_1.leftNameTxt_.text = var_551_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_548_1.leftNameTxt_.transform)

				arg_548_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_548_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_548_1:RecordName(arg_548_1.leftNameTxt_.text)
				SetActive(arg_548_1.iconTrs_.gameObject, false)
				arg_548_1.callingController_:SetSelectedState("normal")

				local var_551_19 = arg_548_1:GetWordFromCfg(417012132)
				local var_551_20 = arg_548_1:FormatText(var_551_19.content)

				arg_548_1.text_.text = var_551_20

				LuaForUtil.ClearLinePrefixSymbol(arg_548_1.text_)

				local var_551_21 = 15
				local var_551_22 = utf8.len(var_551_20)
				local var_551_23 = var_551_21 <= 0 and var_551_17 or var_551_17 * (var_551_22 / var_551_21)

				if var_551_23 > 0 and var_551_17 < var_551_23 then
					arg_548_1.talkMaxDuration = var_551_23

					if var_551_23 + var_551_16 > arg_548_1.duration_ then
						arg_548_1.duration_ = var_551_23 + var_551_16
					end
				end

				arg_548_1.text_.text = var_551_20
				arg_548_1.typewritter.percent = 0

				arg_548_1.typewritter:SetDirty()
				arg_548_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012132", "story_v_out_417012.awb") ~= 0 then
					local var_551_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012132", "story_v_out_417012.awb") / 1000

					if var_551_24 + var_551_16 > arg_548_1.duration_ then
						arg_548_1.duration_ = var_551_24 + var_551_16
					end

					if var_551_19.prefab_name ~= "" and arg_548_1.actors_[var_551_19.prefab_name] ~= nil then
						local var_551_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_548_1.actors_[var_551_19.prefab_name].transform, "story_v_out_417012", "417012132", "story_v_out_417012.awb")

						arg_548_1:RecordAudio("417012132", var_551_25)
						arg_548_1:RecordAudio("417012132", var_551_25)
					else
						arg_548_1:AudioAction("play", "voice", "story_v_out_417012", "417012132", "story_v_out_417012.awb")
					end

					arg_548_1:RecordHistoryTalkVoice("story_v_out_417012", "417012132", "story_v_out_417012.awb")
				end

				arg_548_1:RecordContent(arg_548_1.text_.text)
			end

			local var_551_26 = math.max(var_551_17, arg_548_1.talkMaxDuration)

			if var_551_16 <= arg_548_1.time_ and arg_548_1.time_ < var_551_16 + var_551_26 then
				arg_548_1.typewritter.percent = (arg_548_1.time_ - var_551_16) / var_551_26

				arg_548_1.typewritter:SetDirty()
			end

			if arg_548_1.time_ >= var_551_16 + var_551_26 and arg_548_1.time_ < var_551_16 + var_551_26 + arg_551_0 then
				arg_548_1.typewritter.percent = 1

				arg_548_1.typewritter:SetDirty()
				arg_548_1:ShowNextGo(true)
			end
		end
	end,
	Play417012133 = function(arg_552_0, arg_552_1)
		arg_552_1.time_ = 0
		arg_552_1.frameCnt_ = 0
		arg_552_1.state_ = "playing"
		arg_552_1.curTalkId_ = 417012133
		arg_552_1.duration_ = 3.97

		local var_552_0 = {
			zh = 3.966,
			ja = 3.8
		}
		local var_552_1 = manager.audio:GetLocalizationFlag()

		if var_552_0[var_552_1] ~= nil then
			arg_552_1.duration_ = var_552_0[var_552_1]
		end

		SetActive(arg_552_1.tipsGo_, false)

		function arg_552_1.onSingleLineFinish_()
			arg_552_1.onSingleLineUpdate_ = nil
			arg_552_1.onSingleLineFinish_ = nil
			arg_552_1.state_ = "waiting"
		end

		function arg_552_1.playNext_(arg_554_0)
			if arg_554_0 == 1 then
				arg_552_0:Play417012134(arg_552_1)
			end
		end

		function arg_552_1.onSingleLineUpdate_(arg_555_0)
			local var_555_0 = arg_552_1.actors_["1034"]
			local var_555_1 = 0

			if var_555_1 < arg_552_1.time_ and arg_552_1.time_ <= var_555_1 + arg_555_0 and not isNil(var_555_0) and arg_552_1.var_.actorSpriteComps1034 == nil then
				arg_552_1.var_.actorSpriteComps1034 = var_555_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_555_2 = 0.2

			if var_555_1 <= arg_552_1.time_ and arg_552_1.time_ < var_555_1 + var_555_2 and not isNil(var_555_0) then
				local var_555_3 = (arg_552_1.time_ - var_555_1) / var_555_2

				if arg_552_1.var_.actorSpriteComps1034 then
					for iter_555_0, iter_555_1 in pairs(arg_552_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_555_1 then
							if arg_552_1.isInRecall_ then
								local var_555_4 = Mathf.Lerp(iter_555_1.color.r, arg_552_1.hightColor1.r, var_555_3)
								local var_555_5 = Mathf.Lerp(iter_555_1.color.g, arg_552_1.hightColor1.g, var_555_3)
								local var_555_6 = Mathf.Lerp(iter_555_1.color.b, arg_552_1.hightColor1.b, var_555_3)

								iter_555_1.color = Color.New(var_555_4, var_555_5, var_555_6)
							else
								local var_555_7 = Mathf.Lerp(iter_555_1.color.r, 1, var_555_3)

								iter_555_1.color = Color.New(var_555_7, var_555_7, var_555_7)
							end
						end
					end
				end
			end

			if arg_552_1.time_ >= var_555_1 + var_555_2 and arg_552_1.time_ < var_555_1 + var_555_2 + arg_555_0 and not isNil(var_555_0) and arg_552_1.var_.actorSpriteComps1034 then
				for iter_555_2, iter_555_3 in pairs(arg_552_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_555_3 then
						if arg_552_1.isInRecall_ then
							iter_555_3.color = arg_552_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_555_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_552_1.var_.actorSpriteComps1034 = nil
			end

			local var_555_8 = arg_552_1.actors_["10115"]
			local var_555_9 = 0

			if var_555_9 < arg_552_1.time_ and arg_552_1.time_ <= var_555_9 + arg_555_0 and not isNil(var_555_8) and arg_552_1.var_.actorSpriteComps10115 == nil then
				arg_552_1.var_.actorSpriteComps10115 = var_555_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_555_10 = 0.2

			if var_555_9 <= arg_552_1.time_ and arg_552_1.time_ < var_555_9 + var_555_10 and not isNil(var_555_8) then
				local var_555_11 = (arg_552_1.time_ - var_555_9) / var_555_10

				if arg_552_1.var_.actorSpriteComps10115 then
					for iter_555_4, iter_555_5 in pairs(arg_552_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_555_5 then
							if arg_552_1.isInRecall_ then
								local var_555_12 = Mathf.Lerp(iter_555_5.color.r, arg_552_1.hightColor2.r, var_555_11)
								local var_555_13 = Mathf.Lerp(iter_555_5.color.g, arg_552_1.hightColor2.g, var_555_11)
								local var_555_14 = Mathf.Lerp(iter_555_5.color.b, arg_552_1.hightColor2.b, var_555_11)

								iter_555_5.color = Color.New(var_555_12, var_555_13, var_555_14)
							else
								local var_555_15 = Mathf.Lerp(iter_555_5.color.r, 0.5, var_555_11)

								iter_555_5.color = Color.New(var_555_15, var_555_15, var_555_15)
							end
						end
					end
				end
			end

			if arg_552_1.time_ >= var_555_9 + var_555_10 and arg_552_1.time_ < var_555_9 + var_555_10 + arg_555_0 and not isNil(var_555_8) and arg_552_1.var_.actorSpriteComps10115 then
				for iter_555_6, iter_555_7 in pairs(arg_552_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_555_7 then
						if arg_552_1.isInRecall_ then
							iter_555_7.color = arg_552_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_555_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_552_1.var_.actorSpriteComps10115 = nil
			end

			local var_555_16 = arg_552_1.actors_["1034"].transform
			local var_555_17 = 0

			if var_555_17 < arg_552_1.time_ and arg_552_1.time_ <= var_555_17 + arg_555_0 then
				arg_552_1.var_.moveOldPos1034 = var_555_16.localPosition
				var_555_16.localScale = Vector3.New(1, 1, 1)

				arg_552_1:CheckSpriteTmpPos("1034", 2)

				local var_555_18 = var_555_16.childCount

				for iter_555_8 = 0, var_555_18 - 1 do
					local var_555_19 = var_555_16:GetChild(iter_555_8)

					if var_555_19.name == "split_6" or not string.find(var_555_19.name, "split") then
						var_555_19.gameObject:SetActive(true)
					else
						var_555_19.gameObject:SetActive(false)
					end
				end
			end

			local var_555_20 = 0.001

			if var_555_17 <= arg_552_1.time_ and arg_552_1.time_ < var_555_17 + var_555_20 then
				local var_555_21 = (arg_552_1.time_ - var_555_17) / var_555_20
				local var_555_22 = Vector3.New(-390, -331.9, -324)

				var_555_16.localPosition = Vector3.Lerp(arg_552_1.var_.moveOldPos1034, var_555_22, var_555_21)
			end

			if arg_552_1.time_ >= var_555_17 + var_555_20 and arg_552_1.time_ < var_555_17 + var_555_20 + arg_555_0 then
				var_555_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_555_23 = 0
			local var_555_24 = 0.4

			if var_555_23 < arg_552_1.time_ and arg_552_1.time_ <= var_555_23 + arg_555_0 then
				arg_552_1.talkMaxDuration = 0
				arg_552_1.dialogCg_.alpha = 1

				arg_552_1.dialog_:SetActive(true)
				SetActive(arg_552_1.leftNameGo_, true)

				local var_555_25 = arg_552_1:FormatText(StoryNameCfg[1109].name)

				arg_552_1.leftNameTxt_.text = var_555_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_552_1.leftNameTxt_.transform)

				arg_552_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_552_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_552_1:RecordName(arg_552_1.leftNameTxt_.text)
				SetActive(arg_552_1.iconTrs_.gameObject, false)
				arg_552_1.callingController_:SetSelectedState("normal")

				local var_555_26 = arg_552_1:GetWordFromCfg(417012133)
				local var_555_27 = arg_552_1:FormatText(var_555_26.content)

				arg_552_1.text_.text = var_555_27

				LuaForUtil.ClearLinePrefixSymbol(arg_552_1.text_)

				local var_555_28 = 16
				local var_555_29 = utf8.len(var_555_27)
				local var_555_30 = var_555_28 <= 0 and var_555_24 or var_555_24 * (var_555_29 / var_555_28)

				if var_555_30 > 0 and var_555_24 < var_555_30 then
					arg_552_1.talkMaxDuration = var_555_30

					if var_555_30 + var_555_23 > arg_552_1.duration_ then
						arg_552_1.duration_ = var_555_30 + var_555_23
					end
				end

				arg_552_1.text_.text = var_555_27
				arg_552_1.typewritter.percent = 0

				arg_552_1.typewritter:SetDirty()
				arg_552_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012133", "story_v_out_417012.awb") ~= 0 then
					local var_555_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012133", "story_v_out_417012.awb") / 1000

					if var_555_31 + var_555_23 > arg_552_1.duration_ then
						arg_552_1.duration_ = var_555_31 + var_555_23
					end

					if var_555_26.prefab_name ~= "" and arg_552_1.actors_[var_555_26.prefab_name] ~= nil then
						local var_555_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_552_1.actors_[var_555_26.prefab_name].transform, "story_v_out_417012", "417012133", "story_v_out_417012.awb")

						arg_552_1:RecordAudio("417012133", var_555_32)
						arg_552_1:RecordAudio("417012133", var_555_32)
					else
						arg_552_1:AudioAction("play", "voice", "story_v_out_417012", "417012133", "story_v_out_417012.awb")
					end

					arg_552_1:RecordHistoryTalkVoice("story_v_out_417012", "417012133", "story_v_out_417012.awb")
				end

				arg_552_1:RecordContent(arg_552_1.text_.text)
			end

			local var_555_33 = math.max(var_555_24, arg_552_1.talkMaxDuration)

			if var_555_23 <= arg_552_1.time_ and arg_552_1.time_ < var_555_23 + var_555_33 then
				arg_552_1.typewritter.percent = (arg_552_1.time_ - var_555_23) / var_555_33

				arg_552_1.typewritter:SetDirty()
			end

			if arg_552_1.time_ >= var_555_23 + var_555_33 and arg_552_1.time_ < var_555_23 + var_555_33 + arg_555_0 then
				arg_552_1.typewritter.percent = 1

				arg_552_1.typewritter:SetDirty()
				arg_552_1:ShowNextGo(true)
			end
		end
	end,
	Play417012134 = function(arg_556_0, arg_556_1)
		arg_556_1.time_ = 0
		arg_556_1.frameCnt_ = 0
		arg_556_1.state_ = "playing"
		arg_556_1.curTalkId_ = 417012134
		arg_556_1.duration_ = 5.73

		local var_556_0 = {
			zh = 5.466,
			ja = 5.733
		}
		local var_556_1 = manager.audio:GetLocalizationFlag()

		if var_556_0[var_556_1] ~= nil then
			arg_556_1.duration_ = var_556_0[var_556_1]
		end

		SetActive(arg_556_1.tipsGo_, false)

		function arg_556_1.onSingleLineFinish_()
			arg_556_1.onSingleLineUpdate_ = nil
			arg_556_1.onSingleLineFinish_ = nil
			arg_556_1.state_ = "waiting"
		end

		function arg_556_1.playNext_(arg_558_0)
			if arg_558_0 == 1 then
				arg_556_0:Play417012135(arg_556_1)
			end
		end

		function arg_556_1.onSingleLineUpdate_(arg_559_0)
			local var_559_0 = arg_556_1.actors_["10115"]
			local var_559_1 = 0

			if var_559_1 < arg_556_1.time_ and arg_556_1.time_ <= var_559_1 + arg_559_0 and not isNil(var_559_0) and arg_556_1.var_.actorSpriteComps10115 == nil then
				arg_556_1.var_.actorSpriteComps10115 = var_559_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_559_2 = 0.2

			if var_559_1 <= arg_556_1.time_ and arg_556_1.time_ < var_559_1 + var_559_2 and not isNil(var_559_0) then
				local var_559_3 = (arg_556_1.time_ - var_559_1) / var_559_2

				if arg_556_1.var_.actorSpriteComps10115 then
					for iter_559_0, iter_559_1 in pairs(arg_556_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_559_1 then
							if arg_556_1.isInRecall_ then
								local var_559_4 = Mathf.Lerp(iter_559_1.color.r, arg_556_1.hightColor1.r, var_559_3)
								local var_559_5 = Mathf.Lerp(iter_559_1.color.g, arg_556_1.hightColor1.g, var_559_3)
								local var_559_6 = Mathf.Lerp(iter_559_1.color.b, arg_556_1.hightColor1.b, var_559_3)

								iter_559_1.color = Color.New(var_559_4, var_559_5, var_559_6)
							else
								local var_559_7 = Mathf.Lerp(iter_559_1.color.r, 1, var_559_3)

								iter_559_1.color = Color.New(var_559_7, var_559_7, var_559_7)
							end
						end
					end
				end
			end

			if arg_556_1.time_ >= var_559_1 + var_559_2 and arg_556_1.time_ < var_559_1 + var_559_2 + arg_559_0 and not isNil(var_559_0) and arg_556_1.var_.actorSpriteComps10115 then
				for iter_559_2, iter_559_3 in pairs(arg_556_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_559_3 then
						if arg_556_1.isInRecall_ then
							iter_559_3.color = arg_556_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_559_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_556_1.var_.actorSpriteComps10115 = nil
			end

			local var_559_8 = arg_556_1.actors_["1034"]
			local var_559_9 = 0

			if var_559_9 < arg_556_1.time_ and arg_556_1.time_ <= var_559_9 + arg_559_0 and not isNil(var_559_8) and arg_556_1.var_.actorSpriteComps1034 == nil then
				arg_556_1.var_.actorSpriteComps1034 = var_559_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_559_10 = 0.2

			if var_559_9 <= arg_556_1.time_ and arg_556_1.time_ < var_559_9 + var_559_10 and not isNil(var_559_8) then
				local var_559_11 = (arg_556_1.time_ - var_559_9) / var_559_10

				if arg_556_1.var_.actorSpriteComps1034 then
					for iter_559_4, iter_559_5 in pairs(arg_556_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_559_5 then
							if arg_556_1.isInRecall_ then
								local var_559_12 = Mathf.Lerp(iter_559_5.color.r, arg_556_1.hightColor2.r, var_559_11)
								local var_559_13 = Mathf.Lerp(iter_559_5.color.g, arg_556_1.hightColor2.g, var_559_11)
								local var_559_14 = Mathf.Lerp(iter_559_5.color.b, arg_556_1.hightColor2.b, var_559_11)

								iter_559_5.color = Color.New(var_559_12, var_559_13, var_559_14)
							else
								local var_559_15 = Mathf.Lerp(iter_559_5.color.r, 0.5, var_559_11)

								iter_559_5.color = Color.New(var_559_15, var_559_15, var_559_15)
							end
						end
					end
				end
			end

			if arg_556_1.time_ >= var_559_9 + var_559_10 and arg_556_1.time_ < var_559_9 + var_559_10 + arg_559_0 and not isNil(var_559_8) and arg_556_1.var_.actorSpriteComps1034 then
				for iter_559_6, iter_559_7 in pairs(arg_556_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_559_7 then
						if arg_556_1.isInRecall_ then
							iter_559_7.color = arg_556_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_559_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_556_1.var_.actorSpriteComps1034 = nil
			end

			local var_559_16 = arg_556_1.actors_["10115"].transform
			local var_559_17 = 0

			if var_559_17 < arg_556_1.time_ and arg_556_1.time_ <= var_559_17 + arg_559_0 then
				arg_556_1.var_.moveOldPos10115 = var_559_16.localPosition
				var_559_16.localScale = Vector3.New(1, 1, 1)

				arg_556_1:CheckSpriteTmpPos("10115", 4)

				local var_559_18 = var_559_16.childCount

				for iter_559_8 = 0, var_559_18 - 1 do
					local var_559_19 = var_559_16:GetChild(iter_559_8)

					if var_559_19.name == "split_6" or not string.find(var_559_19.name, "split") then
						var_559_19.gameObject:SetActive(true)
					else
						var_559_19.gameObject:SetActive(false)
					end
				end
			end

			local var_559_20 = 0.001

			if var_559_17 <= arg_556_1.time_ and arg_556_1.time_ < var_559_17 + var_559_20 then
				local var_559_21 = (arg_556_1.time_ - var_559_17) / var_559_20
				local var_559_22 = Vector3.New(390, -387.3, -246.2)

				var_559_16.localPosition = Vector3.Lerp(arg_556_1.var_.moveOldPos10115, var_559_22, var_559_21)
			end

			if arg_556_1.time_ >= var_559_17 + var_559_20 and arg_556_1.time_ < var_559_17 + var_559_20 + arg_559_0 then
				var_559_16.localPosition = Vector3.New(390, -387.3, -246.2)
			end

			local var_559_23 = 0

			if var_559_23 < arg_556_1.time_ and arg_556_1.time_ <= var_559_23 + arg_559_0 then
				arg_556_1.allBtn_.enabled = false
			end

			local var_559_24 = 0.866666666666667

			if arg_556_1.time_ >= var_559_23 + var_559_24 and arg_556_1.time_ < var_559_23 + var_559_24 + arg_559_0 then
				arg_556_1.allBtn_.enabled = true
			end

			local var_559_25 = 0
			local var_559_26 = 0.575

			if var_559_25 < arg_556_1.time_ and arg_556_1.time_ <= var_559_25 + arg_559_0 then
				arg_556_1.talkMaxDuration = 0
				arg_556_1.dialogCg_.alpha = 1

				arg_556_1.dialog_:SetActive(true)
				SetActive(arg_556_1.leftNameGo_, true)

				local var_559_27 = arg_556_1:FormatText(StoryNameCfg[1113].name)

				arg_556_1.leftNameTxt_.text = var_559_27

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_556_1.leftNameTxt_.transform)

				arg_556_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_556_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_556_1:RecordName(arg_556_1.leftNameTxt_.text)
				SetActive(arg_556_1.iconTrs_.gameObject, false)
				arg_556_1.callingController_:SetSelectedState("normal")

				local var_559_28 = arg_556_1:GetWordFromCfg(417012134)
				local var_559_29 = arg_556_1:FormatText(var_559_28.content)

				arg_556_1.text_.text = var_559_29

				LuaForUtil.ClearLinePrefixSymbol(arg_556_1.text_)

				local var_559_30 = 23
				local var_559_31 = utf8.len(var_559_29)
				local var_559_32 = var_559_30 <= 0 and var_559_26 or var_559_26 * (var_559_31 / var_559_30)

				if var_559_32 > 0 and var_559_26 < var_559_32 then
					arg_556_1.talkMaxDuration = var_559_32

					if var_559_32 + var_559_25 > arg_556_1.duration_ then
						arg_556_1.duration_ = var_559_32 + var_559_25
					end
				end

				arg_556_1.text_.text = var_559_29
				arg_556_1.typewritter.percent = 0

				arg_556_1.typewritter:SetDirty()
				arg_556_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012134", "story_v_out_417012.awb") ~= 0 then
					local var_559_33 = manager.audio:GetVoiceLength("story_v_out_417012", "417012134", "story_v_out_417012.awb") / 1000

					if var_559_33 + var_559_25 > arg_556_1.duration_ then
						arg_556_1.duration_ = var_559_33 + var_559_25
					end

					if var_559_28.prefab_name ~= "" and arg_556_1.actors_[var_559_28.prefab_name] ~= nil then
						local var_559_34 = LuaForUtil.PlayVoiceWithCriLipsync(arg_556_1.actors_[var_559_28.prefab_name].transform, "story_v_out_417012", "417012134", "story_v_out_417012.awb")

						arg_556_1:RecordAudio("417012134", var_559_34)
						arg_556_1:RecordAudio("417012134", var_559_34)
					else
						arg_556_1:AudioAction("play", "voice", "story_v_out_417012", "417012134", "story_v_out_417012.awb")
					end

					arg_556_1:RecordHistoryTalkVoice("story_v_out_417012", "417012134", "story_v_out_417012.awb")
				end

				arg_556_1:RecordContent(arg_556_1.text_.text)
			end

			local var_559_35 = math.max(var_559_26, arg_556_1.talkMaxDuration)

			if var_559_25 <= arg_556_1.time_ and arg_556_1.time_ < var_559_25 + var_559_35 then
				arg_556_1.typewritter.percent = (arg_556_1.time_ - var_559_25) / var_559_35

				arg_556_1.typewritter:SetDirty()
			end

			if arg_556_1.time_ >= var_559_25 + var_559_35 and arg_556_1.time_ < var_559_25 + var_559_35 + arg_559_0 then
				arg_556_1.typewritter.percent = 1

				arg_556_1.typewritter:SetDirty()
				arg_556_1:ShowNextGo(true)
			end
		end
	end,
	Play417012135 = function(arg_560_0, arg_560_1)
		arg_560_1.time_ = 0
		arg_560_1.frameCnt_ = 0
		arg_560_1.state_ = "playing"
		arg_560_1.curTalkId_ = 417012135
		arg_560_1.duration_ = 5.4

		SetActive(arg_560_1.tipsGo_, false)

		function arg_560_1.onSingleLineFinish_()
			arg_560_1.onSingleLineUpdate_ = nil
			arg_560_1.onSingleLineFinish_ = nil
			arg_560_1.state_ = "waiting"
		end

		function arg_560_1.playNext_(arg_562_0)
			if arg_562_0 == 1 then
				arg_560_0:Play417012136(arg_560_1)
			end
		end

		function arg_560_1.onSingleLineUpdate_(arg_563_0)
			local var_563_0 = arg_560_1.actors_["10115"].transform
			local var_563_1 = 1.96666666666667

			if var_563_1 < arg_560_1.time_ and arg_560_1.time_ <= var_563_1 + arg_563_0 then
				arg_560_1.var_.moveOldPos10115 = var_563_0.localPosition
				var_563_0.localScale = Vector3.New(1, 1, 1)

				arg_560_1:CheckSpriteTmpPos("10115", 7)

				local var_563_2 = var_563_0.childCount

				for iter_563_0 = 0, var_563_2 - 1 do
					local var_563_3 = var_563_0:GetChild(iter_563_0)

					if var_563_3.name == "" or not string.find(var_563_3.name, "split") then
						var_563_3.gameObject:SetActive(true)
					else
						var_563_3.gameObject:SetActive(false)
					end
				end
			end

			local var_563_4 = 0.001

			if var_563_1 <= arg_560_1.time_ and arg_560_1.time_ < var_563_1 + var_563_4 then
				local var_563_5 = (arg_560_1.time_ - var_563_1) / var_563_4
				local var_563_6 = Vector3.New(0, -2000, 0)

				var_563_0.localPosition = Vector3.Lerp(arg_560_1.var_.moveOldPos10115, var_563_6, var_563_5)
			end

			if arg_560_1.time_ >= var_563_1 + var_563_4 and arg_560_1.time_ < var_563_1 + var_563_4 + arg_563_0 then
				var_563_0.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_563_7 = arg_560_1.actors_["1034"].transform
			local var_563_8 = 1.96666666666667

			if var_563_8 < arg_560_1.time_ and arg_560_1.time_ <= var_563_8 + arg_563_0 then
				arg_560_1.var_.moveOldPos1034 = var_563_7.localPosition
				var_563_7.localScale = Vector3.New(1, 1, 1)

				arg_560_1:CheckSpriteTmpPos("1034", 7)

				local var_563_9 = var_563_7.childCount

				for iter_563_1 = 0, var_563_9 - 1 do
					local var_563_10 = var_563_7:GetChild(iter_563_1)

					if var_563_10.name == "" or not string.find(var_563_10.name, "split") then
						var_563_10.gameObject:SetActive(true)
					else
						var_563_10.gameObject:SetActive(false)
					end
				end
			end

			local var_563_11 = 0.001

			if var_563_8 <= arg_560_1.time_ and arg_560_1.time_ < var_563_8 + var_563_11 then
				local var_563_12 = (arg_560_1.time_ - var_563_8) / var_563_11
				local var_563_13 = Vector3.New(0, -2000, 0)

				var_563_7.localPosition = Vector3.Lerp(arg_560_1.var_.moveOldPos1034, var_563_13, var_563_12)
			end

			if arg_560_1.time_ >= var_563_8 + var_563_11 and arg_560_1.time_ < var_563_8 + var_563_11 + arg_563_0 then
				var_563_7.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_563_14 = 1.96666666666667

			if var_563_14 < arg_560_1.time_ and arg_560_1.time_ <= var_563_14 + arg_563_0 then
				local var_563_15 = manager.ui.mainCamera.transform.localPosition
				local var_563_16 = Vector3.New(0, 0, 10) + Vector3.New(var_563_15.x, var_563_15.y, 0)
				local var_563_17 = arg_560_1.bgs_.STblack

				var_563_17.transform.localPosition = var_563_16
				var_563_17.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_563_18 = var_563_17:GetComponent("SpriteRenderer")

				if var_563_18 and var_563_18.sprite then
					local var_563_19 = (var_563_17.transform.localPosition - var_563_15).z
					local var_563_20 = manager.ui.mainCameraCom_
					local var_563_21 = 2 * var_563_19 * Mathf.Tan(var_563_20.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_563_22 = var_563_21 * var_563_20.aspect
					local var_563_23 = var_563_18.sprite.bounds.size.x
					local var_563_24 = var_563_18.sprite.bounds.size.y
					local var_563_25 = var_563_22 / var_563_23
					local var_563_26 = var_563_21 / var_563_24
					local var_563_27 = var_563_26 < var_563_25 and var_563_25 or var_563_26

					var_563_17.transform.localScale = Vector3.New(var_563_27, var_563_27, 0)
				end

				for iter_563_2, iter_563_3 in pairs(arg_560_1.bgs_) do
					if iter_563_2 ~= "STblack" then
						iter_563_3.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_563_28 = 0

			if var_563_28 < arg_560_1.time_ and arg_560_1.time_ <= var_563_28 + arg_563_0 then
				arg_560_1.mask_.enabled = true
				arg_560_1.mask_.raycastTarget = true

				arg_560_1:SetGaussion(false)
			end

			local var_563_29 = 1.96666666666667

			if var_563_28 <= arg_560_1.time_ and arg_560_1.time_ < var_563_28 + var_563_29 then
				local var_563_30 = (arg_560_1.time_ - var_563_28) / var_563_29
				local var_563_31 = Color.New(0, 0, 0)

				var_563_31.a = Mathf.Lerp(0, 1, var_563_30)
				arg_560_1.mask_.color = var_563_31
			end

			if arg_560_1.time_ >= var_563_28 + var_563_29 and arg_560_1.time_ < var_563_28 + var_563_29 + arg_563_0 then
				local var_563_32 = Color.New(0, 0, 0)

				var_563_32.a = 1
				arg_560_1.mask_.color = var_563_32
			end

			local var_563_33 = 1.96666666666667

			if var_563_33 < arg_560_1.time_ and arg_560_1.time_ <= var_563_33 + arg_563_0 then
				arg_560_1.mask_.enabled = true
				arg_560_1.mask_.raycastTarget = true

				arg_560_1:SetGaussion(false)
			end

			local var_563_34 = 1.05

			if var_563_33 <= arg_560_1.time_ and arg_560_1.time_ < var_563_33 + var_563_34 then
				local var_563_35 = (arg_560_1.time_ - var_563_33) / var_563_34
				local var_563_36 = Color.New(0, 0, 0)

				var_563_36.a = Mathf.Lerp(1, 0, var_563_35)
				arg_560_1.mask_.color = var_563_36
			end

			if arg_560_1.time_ >= var_563_33 + var_563_34 and arg_560_1.time_ < var_563_33 + var_563_34 + arg_563_0 then
				local var_563_37 = Color.New(0, 0, 0)
				local var_563_38 = 0

				arg_560_1.mask_.enabled = false
				var_563_37.a = var_563_38
				arg_560_1.mask_.color = var_563_37
			end

			local var_563_39 = 1.96666666666667

			if var_563_39 < arg_560_1.time_ and arg_560_1.time_ <= var_563_39 + arg_563_0 then
				arg_560_1.fswbg_:SetActive(true)
				arg_560_1.dialog_:SetActive(false)

				arg_560_1.fswtw_.percent = 0

				local var_563_40 = arg_560_1:GetWordFromCfg(417012135)
				local var_563_41 = arg_560_1:FormatText(var_563_40.content)

				arg_560_1.fswt_.text = var_563_41

				LuaForUtil.ClearLinePrefixSymbol(arg_560_1.fswt_)

				arg_560_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_560_1.fswtw_:SetDirty()

				arg_560_1.typewritterCharCountI18N = 0

				SetActive(arg_560_1.fswtw_.transform.parent.parent:Find("bg/line").gameObject, false)
				arg_560_1:ShowNextGo(false)
			end

			local var_563_42 = 2.6

			if var_563_42 < arg_560_1.time_ and arg_560_1.time_ <= var_563_42 + arg_563_0 then
				arg_560_1.var_.oldValueTypewriter = arg_560_1.fswtw_.percent

				arg_560_1:ShowNextGo(false)
			end

			local var_563_43 = 42
			local var_563_44 = 2.8
			local var_563_45 = arg_560_1:GetWordFromCfg(417012135)
			local var_563_46 = arg_560_1:FormatText(var_563_45.content)
			local var_563_47, var_563_48 = arg_560_1:GetPercentByPara(var_563_46, 1)

			if var_563_42 < arg_560_1.time_ and arg_560_1.time_ <= var_563_42 + arg_563_0 then
				arg_560_1.talkMaxDuration = 0

				local var_563_49 = var_563_43 <= 0 and var_563_44 or var_563_44 * ((var_563_48 - arg_560_1.typewritterCharCountI18N) / var_563_43)

				if var_563_49 > 0 and var_563_44 < var_563_49 then
					arg_560_1.talkMaxDuration = var_563_49

					if var_563_49 + var_563_42 > arg_560_1.duration_ then
						arg_560_1.duration_ = var_563_49 + var_563_42
					end
				end
			end

			local var_563_50 = 2.8
			local var_563_51 = math.max(var_563_50, arg_560_1.talkMaxDuration)

			if var_563_42 <= arg_560_1.time_ and arg_560_1.time_ < var_563_42 + var_563_51 then
				local var_563_52 = (arg_560_1.time_ - var_563_42) / var_563_51

				arg_560_1.fswtw_.percent = Mathf.Lerp(arg_560_1.var_.oldValueTypewriter, var_563_47, var_563_52)
				arg_560_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_560_1.fswtw_:SetDirty()
			end

			if arg_560_1.time_ >= var_563_42 + var_563_51 and arg_560_1.time_ < var_563_42 + var_563_51 + arg_563_0 then
				arg_560_1.fswtw_.percent = var_563_47

				arg_560_1.fswtw_:SetDirty()
				arg_560_1:ShowNextGo(true)

				arg_560_1.typewritterCharCountI18N = var_563_48
			end

			local var_563_53 = 1.96666666666667

			if var_563_53 < arg_560_1.time_ and arg_560_1.time_ <= var_563_53 + arg_563_0 then
				local var_563_54 = arg_560_1.fswbg_.transform:Find("textbox/adapt/content") or arg_560_1.fswbg_.transform:Find("textbox/content")
				local var_563_55 = var_563_54:GetComponent("Text")
				local var_563_56 = var_563_54:GetComponent("RectTransform")

				var_563_55.alignment = UnityEngine.TextAnchor.LowerCenter
				var_563_56.offsetMin = Vector2.New(0, 0)
				var_563_56.offsetMax = Vector2.New(0, 0)
			end

			local var_563_57 = 1.96666666666667

			if var_563_57 < arg_560_1.time_ and arg_560_1.time_ <= var_563_57 + arg_563_0 then
				arg_560_1.cswbg_:SetActive(true)

				local var_563_58 = arg_560_1.cswt_:GetComponent("RectTransform")

				arg_560_1.cswt_.alignment = UnityEngine.TextAnchor.UpperCenter
				var_563_58.offsetMin = Vector2.New(400, 105)
				var_563_58.offsetMax = Vector2.New(-400, -200)

				local var_563_59 = arg_560_1:GetWordFromCfg(419093)
				local var_563_60 = arg_560_1:FormatText(var_563_59.content)

				arg_560_1.cswt_.text = var_563_60

				LuaForUtil.ClearLinePrefixSymbol(arg_560_1.cswt_)

				arg_560_1.cswt_.fontSize = 120
				arg_560_1.cswt_:GetComponent("Text").color = Color(1, 1, 1)
				arg_560_1.cswt_.font = Asset.Load("Fonts/SourceHanSerifCN-Bold-3.0")
			end

			local var_563_61 = 2.6
			local var_563_62 = 1
			local var_563_63 = manager.audio:GetVoiceLength("story_v_out_417012", "417012135", "") / 1000

			if var_563_63 > 0 and var_563_62 < var_563_63 and var_563_63 + var_563_61 > arg_560_1.duration_ then
				local var_563_64 = var_563_63

				arg_560_1.duration_ = var_563_63 + var_563_61
			end

			if var_563_61 < arg_560_1.time_ and arg_560_1.time_ <= var_563_61 + arg_563_0 then
				local var_563_65 = "play"
				local var_563_66 = "voice"

				arg_560_1:AudioAction(var_563_65, var_563_66, "story_v_out_417012", "417012135", "")
			end
		end
	end,
	Play417012136 = function(arg_564_0, arg_564_1)
		arg_564_1.time_ = 0
		arg_564_1.frameCnt_ = 0
		arg_564_1.state_ = "playing"
		arg_564_1.curTalkId_ = 417012136
		arg_564_1.duration_ = 8.57

		SetActive(arg_564_1.tipsGo_, false)

		function arg_564_1.onSingleLineFinish_()
			arg_564_1.onSingleLineUpdate_ = nil
			arg_564_1.onSingleLineFinish_ = nil
			arg_564_1.state_ = "waiting"
		end

		function arg_564_1.playNext_(arg_566_0)
			if arg_566_0 == 1 then
				arg_564_0:Play417012137(arg_564_1)
			end
		end

		function arg_564_1.onSingleLineUpdate_(arg_567_0)
			local var_567_0 = 0

			if var_567_0 < arg_564_1.time_ and arg_564_1.time_ <= var_567_0 + arg_567_0 then
				arg_564_1.fswbg_:SetActive(true)
				arg_564_1.dialog_:SetActive(false)

				arg_564_1.fswtw_.percent = 0

				local var_567_1 = arg_564_1:GetWordFromCfg(417012136)
				local var_567_2 = arg_564_1:FormatText(var_567_1.content)

				arg_564_1.fswt_.text = var_567_2

				LuaForUtil.ClearLinePrefixSymbol(arg_564_1.fswt_)

				arg_564_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_564_1.fswtw_:SetDirty()

				arg_564_1.typewritterCharCountI18N = 0

				SetActive(arg_564_1.fswtw_.transform.parent.parent:Find("bg/line").gameObject, false)
				arg_564_1:ShowNextGo(false)
			end

			local var_567_3 = 0.533333333333333

			if var_567_3 < arg_564_1.time_ and arg_564_1.time_ <= var_567_3 + arg_567_0 then
				arg_564_1.var_.oldValueTypewriter = arg_564_1.fswtw_.percent

				arg_564_1:ShowNextGo(false)
			end

			local var_567_4 = 36
			local var_567_5 = 2.4
			local var_567_6 = arg_564_1:GetWordFromCfg(417012136)
			local var_567_7 = arg_564_1:FormatText(var_567_6.content)
			local var_567_8, var_567_9 = arg_564_1:GetPercentByPara(var_567_7, 1)

			if var_567_3 < arg_564_1.time_ and arg_564_1.time_ <= var_567_3 + arg_567_0 then
				arg_564_1.talkMaxDuration = 0

				local var_567_10 = var_567_4 <= 0 and var_567_5 or var_567_5 * ((var_567_9 - arg_564_1.typewritterCharCountI18N) / var_567_4)

				if var_567_10 > 0 and var_567_5 < var_567_10 then
					arg_564_1.talkMaxDuration = var_567_10

					if var_567_10 + var_567_3 > arg_564_1.duration_ then
						arg_564_1.duration_ = var_567_10 + var_567_3
					end
				end
			end

			local var_567_11 = 2.4
			local var_567_12 = math.max(var_567_11, arg_564_1.talkMaxDuration)

			if var_567_3 <= arg_564_1.time_ and arg_564_1.time_ < var_567_3 + var_567_12 then
				local var_567_13 = (arg_564_1.time_ - var_567_3) / var_567_12

				arg_564_1.fswtw_.percent = Mathf.Lerp(arg_564_1.var_.oldValueTypewriter, var_567_8, var_567_13)
				arg_564_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_564_1.fswtw_:SetDirty()
			end

			if arg_564_1.time_ >= var_567_3 + var_567_12 and arg_564_1.time_ < var_567_3 + var_567_12 + arg_567_0 then
				arg_564_1.fswtw_.percent = var_567_8

				arg_564_1.fswtw_:SetDirty()
				arg_564_1:ShowNextGo(true)

				arg_564_1.typewritterCharCountI18N = var_567_9
			end

			local var_567_14 = 0.533333333333333
			local var_567_15 = 8.033
			local var_567_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012136", "") / 1000

			if var_567_16 > 0 and var_567_15 < var_567_16 and var_567_16 + var_567_14 > arg_564_1.duration_ then
				local var_567_17 = var_567_16

				arg_564_1.duration_ = var_567_16 + var_567_14
			end

			if var_567_14 < arg_564_1.time_ and arg_564_1.time_ <= var_567_14 + arg_567_0 then
				local var_567_18 = "play"
				local var_567_19 = "voice"

				arg_564_1:AudioAction(var_567_18, var_567_19, "story_v_out_417012", "417012136", "")
			end

			local var_567_20 = 0

			if var_567_20 < arg_564_1.time_ and arg_564_1.time_ <= var_567_20 + arg_567_0 then
				arg_564_1.allBtn_.enabled = false
			end

			local var_567_21 = 0.533333333333333

			if arg_564_1.time_ >= var_567_20 + var_567_21 and arg_564_1.time_ < var_567_20 + var_567_21 + arg_567_0 then
				arg_564_1.allBtn_.enabled = true
			end
		end
	end,
	Play417012137 = function(arg_568_0, arg_568_1)
		arg_568_1.time_ = 0
		arg_568_1.frameCnt_ = 0
		arg_568_1.state_ = "playing"
		arg_568_1.curTalkId_ = 417012137
		arg_568_1.duration_ = 9.37

		SetActive(arg_568_1.tipsGo_, false)

		function arg_568_1.onSingleLineFinish_()
			arg_568_1.onSingleLineUpdate_ = nil
			arg_568_1.onSingleLineFinish_ = nil
			arg_568_1.state_ = "waiting"
		end

		function arg_568_1.playNext_(arg_570_0)
			if arg_570_0 == 1 then
				arg_568_0:Play417012138(arg_568_1)
			end
		end

		function arg_568_1.onSingleLineUpdate_(arg_571_0)
			local var_571_0 = 0

			if var_571_0 < arg_568_1.time_ and arg_568_1.time_ <= var_571_0 + arg_571_0 then
				arg_568_1.fswbg_:SetActive(true)
				arg_568_1.dialog_:SetActive(false)

				arg_568_1.fswtw_.percent = 0

				local var_571_1 = arg_568_1:GetWordFromCfg(417012137)
				local var_571_2 = arg_568_1:FormatText(var_571_1.content)

				arg_568_1.fswt_.text = var_571_2

				LuaForUtil.ClearLinePrefixSymbol(arg_568_1.fswt_)

				arg_568_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_568_1.fswtw_:SetDirty()

				arg_568_1.typewritterCharCountI18N = 0

				SetActive(arg_568_1.fswtw_.transform.parent.parent:Find("bg/line").gameObject, false)
				arg_568_1:ShowNextGo(false)
			end

			local var_571_3 = 0.366666666666667

			if var_571_3 < arg_568_1.time_ and arg_568_1.time_ <= var_571_3 + arg_571_0 then
				arg_568_1.var_.oldValueTypewriter = arg_568_1.fswtw_.percent

				arg_568_1:ShowNextGo(false)
			end

			local var_571_4 = 2
			local var_571_5 = 0.133333333333333
			local var_571_6 = arg_568_1:GetWordFromCfg(417012137)
			local var_571_7 = arg_568_1:FormatText(var_571_6.content)
			local var_571_8, var_571_9 = arg_568_1:GetPercentByPara(var_571_7, 1)

			if var_571_3 < arg_568_1.time_ and arg_568_1.time_ <= var_571_3 + arg_571_0 then
				arg_568_1.talkMaxDuration = 0

				local var_571_10 = var_571_4 <= 0 and var_571_5 or var_571_5 * ((var_571_9 - arg_568_1.typewritterCharCountI18N) / var_571_4)

				if var_571_10 > 0 and var_571_5 < var_571_10 then
					arg_568_1.talkMaxDuration = var_571_10

					if var_571_10 + var_571_3 > arg_568_1.duration_ then
						arg_568_1.duration_ = var_571_10 + var_571_3
					end
				end
			end

			local var_571_11 = 0.133333333333333
			local var_571_12 = math.max(var_571_11, arg_568_1.talkMaxDuration)

			if var_571_3 <= arg_568_1.time_ and arg_568_1.time_ < var_571_3 + var_571_12 then
				local var_571_13 = (arg_568_1.time_ - var_571_3) / var_571_12

				arg_568_1.fswtw_.percent = Mathf.Lerp(arg_568_1.var_.oldValueTypewriter, var_571_8, var_571_13)
				arg_568_1.fswt_:GetComponent("Text").color = Color(1, 1, 1)

				arg_568_1.fswtw_:SetDirty()
			end

			if arg_568_1.time_ >= var_571_3 + var_571_12 and arg_568_1.time_ < var_571_3 + var_571_12 + arg_571_0 then
				arg_568_1.fswtw_.percent = var_571_8

				arg_568_1.fswtw_:SetDirty()
				arg_568_1:ShowNextGo(true)

				arg_568_1.typewritterCharCountI18N = var_571_9
			end

			local var_571_14 = 0

			if var_571_14 < arg_568_1.time_ and arg_568_1.time_ <= var_571_14 + arg_571_0 then
				local var_571_15 = arg_568_1.fswbg_.transform:Find("textbox/adapt/content") or arg_568_1.fswbg_.transform:Find("textbox/content")
				local var_571_16 = var_571_15:GetComponent("Text")
				local var_571_17 = var_571_15:GetComponent("RectTransform")

				var_571_16.alignment = UnityEngine.TextAnchor.LowerCenter
				var_571_17.offsetMin = Vector2.New(0, 0)
				var_571_17.offsetMax = Vector2.New(0, 0)
			end

			local var_571_18 = 0

			if var_571_18 < arg_568_1.time_ and arg_568_1.time_ <= var_571_18 + arg_571_0 then
				arg_568_1.allBtn_.enabled = false
			end

			local var_571_19 = 0.5

			if arg_568_1.time_ >= var_571_18 + var_571_19 and arg_568_1.time_ < var_571_18 + var_571_19 + arg_571_0 then
				arg_568_1.allBtn_.enabled = true
			end

			local var_571_20 = 0.366666666666667
			local var_571_21 = 9
			local var_571_22 = manager.audio:GetVoiceLength("story_v_out_417012", "417012137", "") / 1000

			if var_571_22 > 0 and var_571_21 < var_571_22 and var_571_22 + var_571_20 > arg_568_1.duration_ then
				local var_571_23 = var_571_22

				arg_568_1.duration_ = var_571_22 + var_571_20
			end

			if var_571_20 < arg_568_1.time_ and arg_568_1.time_ <= var_571_20 + arg_571_0 then
				local var_571_24 = "play"
				local var_571_25 = "voice"

				arg_568_1:AudioAction(var_571_24, var_571_25, "story_v_out_417012", "417012137", "")
			end
		end
	end,
	Play417012138 = function(arg_572_0, arg_572_1)
		arg_572_1.time_ = 0
		arg_572_1.frameCnt_ = 0
		arg_572_1.state_ = "playing"
		arg_572_1.curTalkId_ = 417012138
		arg_572_1.duration_ = 8.1

		SetActive(arg_572_1.tipsGo_, false)

		function arg_572_1.onSingleLineFinish_()
			arg_572_1.onSingleLineUpdate_ = nil
			arg_572_1.onSingleLineFinish_ = nil
			arg_572_1.state_ = "waiting"
		end

		function arg_572_1.playNext_(arg_574_0)
			if arg_574_0 == 1 then
				arg_572_0:Play417012139(arg_572_1)
			end
		end

		function arg_572_1.onSingleLineUpdate_(arg_575_0)
			local var_575_0 = 1.46666666666667

			if var_575_0 < arg_572_1.time_ and arg_572_1.time_ <= var_575_0 + arg_575_0 then
				local var_575_1 = manager.ui.mainCamera.transform.localPosition
				local var_575_2 = Vector3.New(0, 0, 10) + Vector3.New(var_575_1.x, var_575_1.y, 0)
				local var_575_3 = arg_572_1.bgs_.ST2106

				var_575_3.transform.localPosition = var_575_2
				var_575_3.transform.localEulerAngles = Vector3(0, 0, 0)

				local var_575_4 = var_575_3:GetComponent("SpriteRenderer")

				if var_575_4 and var_575_4.sprite then
					local var_575_5 = (var_575_3.transform.localPosition - var_575_1).z
					local var_575_6 = manager.ui.mainCameraCom_
					local var_575_7 = 2 * var_575_5 * Mathf.Tan(var_575_6.fieldOfView * 0.5 * Mathf.Deg2Rad)
					local var_575_8 = var_575_7 * var_575_6.aspect
					local var_575_9 = var_575_4.sprite.bounds.size.x
					local var_575_10 = var_575_4.sprite.bounds.size.y
					local var_575_11 = var_575_8 / var_575_9
					local var_575_12 = var_575_7 / var_575_10
					local var_575_13 = var_575_12 < var_575_11 and var_575_11 or var_575_12

					var_575_3.transform.localScale = Vector3.New(var_575_13, var_575_13, 0)
				end

				for iter_575_0, iter_575_1 in pairs(arg_572_1.bgs_) do
					if iter_575_0 ~= "ST2106" then
						iter_575_1.transform.localPosition = Vector3.New(0, 100, 0)
					end
				end
			end

			local var_575_14 = 0

			if var_575_14 < arg_572_1.time_ and arg_572_1.time_ <= var_575_14 + arg_575_0 then
				arg_572_1.mask_.enabled = true
				arg_572_1.mask_.raycastTarget = true

				arg_572_1:SetGaussion(false)
			end

			local var_575_15 = 1.46666666666667

			if var_575_14 <= arg_572_1.time_ and arg_572_1.time_ < var_575_14 + var_575_15 then
				local var_575_16 = (arg_572_1.time_ - var_575_14) / var_575_15
				local var_575_17 = Color.New(0, 0, 0)

				var_575_17.a = Mathf.Lerp(0, 1, var_575_16)
				arg_572_1.mask_.color = var_575_17
			end

			if arg_572_1.time_ >= var_575_14 + var_575_15 and arg_572_1.time_ < var_575_14 + var_575_15 + arg_575_0 then
				local var_575_18 = Color.New(0, 0, 0)

				var_575_18.a = 1
				arg_572_1.mask_.color = var_575_18
			end

			local var_575_19 = 1.46666666666667

			if var_575_19 < arg_572_1.time_ and arg_572_1.time_ <= var_575_19 + arg_575_0 then
				arg_572_1.mask_.enabled = true
				arg_572_1.mask_.raycastTarget = true

				arg_572_1:SetGaussion(false)
			end

			local var_575_20 = 2

			if var_575_19 <= arg_572_1.time_ and arg_572_1.time_ < var_575_19 + var_575_20 then
				local var_575_21 = (arg_572_1.time_ - var_575_19) / var_575_20
				local var_575_22 = Color.New(0, 0, 0)

				var_575_22.a = Mathf.Lerp(1, 0, var_575_21)
				arg_572_1.mask_.color = var_575_22
			end

			if arg_572_1.time_ >= var_575_19 + var_575_20 and arg_572_1.time_ < var_575_19 + var_575_20 + arg_575_0 then
				local var_575_23 = Color.New(0, 0, 0)
				local var_575_24 = 0

				arg_572_1.mask_.enabled = false
				var_575_23.a = var_575_24
				arg_572_1.mask_.color = var_575_23
			end

			local var_575_25 = 1.45

			if var_575_25 < arg_572_1.time_ and arg_572_1.time_ <= var_575_25 + arg_575_0 then
				arg_572_1.fswbg_:SetActive(false)
				arg_572_1.dialog_:SetActive(false)
				arg_572_1:ShowNextGo(false)
			end

			local var_575_26 = 1.46666666666667

			if var_575_26 < arg_572_1.time_ and arg_572_1.time_ <= var_575_26 + arg_575_0 then
				arg_572_1.fswbg_:SetActive(false)
				arg_572_1.dialog_:SetActive(false)
				arg_572_1:ShowNextGo(false)
			end

			local var_575_27 = 1.45

			if var_575_27 < arg_572_1.time_ and arg_572_1.time_ <= var_575_27 + arg_575_0 then
				arg_572_1.cswbg_:SetActive(false)
			end

			if arg_572_1.frameCnt_ <= 1 then
				arg_572_1.dialog_:SetActive(false)
			end

			local var_575_28 = 3.1
			local var_575_29 = 1.1

			if var_575_28 < arg_572_1.time_ and arg_572_1.time_ <= var_575_28 + arg_575_0 then
				arg_572_1.talkMaxDuration = 0

				arg_572_1.dialog_:SetActive(true)

				local var_575_30 = LeanTween.value(arg_572_1.dialog_, 0, 1, 0.3)

				var_575_30:setOnUpdate(LuaHelper.FloatAction(function(arg_576_0)
					arg_572_1.dialogCg_.alpha = arg_576_0
				end))
				var_575_30:setOnComplete(System.Action(function()
					LeanTween.cancel(arg_572_1.dialog_)
					var_575_30:setOnUpdate(nil):setOnComplete(nil)
				end))

				arg_572_1.duration_ = arg_572_1.duration_ + 0.3

				SetActive(arg_572_1.leftNameGo_, false)

				arg_572_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_572_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_572_1:RecordName(arg_572_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_572_1.iconTrs_.gameObject, false)
				arg_572_1.callingController_:SetSelectedState("normal")

				local var_575_31 = arg_572_1:GetWordFromCfg(417012138)
				local var_575_32 = arg_572_1:FormatText(var_575_31.content)

				arg_572_1.text_.text = var_575_32

				LuaForUtil.ClearLinePrefixSymbol(arg_572_1.text_)

				local var_575_33 = 44
				local var_575_34 = utf8.len(var_575_32)
				local var_575_35 = var_575_33 <= 0 and var_575_29 or var_575_29 * (var_575_34 / var_575_33)

				if var_575_35 > 0 and var_575_29 < var_575_35 then
					arg_572_1.talkMaxDuration = var_575_35
					var_575_28 = var_575_28 + 0.3

					if var_575_35 + var_575_28 > arg_572_1.duration_ then
						arg_572_1.duration_ = var_575_35 + var_575_28
					end
				end

				arg_572_1.text_.text = var_575_32
				arg_572_1.typewritter.percent = 0

				arg_572_1.typewritter:SetDirty()
				arg_572_1:ShowNextGo(false)
				arg_572_1:RecordContent(arg_572_1.text_.text)
			end

			local var_575_36 = var_575_28 + 0.3
			local var_575_37 = math.max(var_575_29, arg_572_1.talkMaxDuration)

			if var_575_36 <= arg_572_1.time_ and arg_572_1.time_ < var_575_36 + var_575_37 then
				arg_572_1.typewritter.percent = (arg_572_1.time_ - var_575_36) / var_575_37

				arg_572_1.typewritter:SetDirty()
			end

			if arg_572_1.time_ >= var_575_36 + var_575_37 and arg_572_1.time_ < var_575_36 + var_575_37 + arg_575_0 then
				arg_572_1.typewritter.percent = 1

				arg_572_1.typewritter:SetDirty()
				arg_572_1:ShowNextGo(true)
			end
		end
	end,
	Play417012139 = function(arg_578_0, arg_578_1)
		arg_578_1.time_ = 0
		arg_578_1.frameCnt_ = 0
		arg_578_1.state_ = "playing"
		arg_578_1.curTalkId_ = 417012139
		arg_578_1.duration_ = 10.3

		local var_578_0 = {
			zh = 7.9,
			ja = 10.3
		}
		local var_578_1 = manager.audio:GetLocalizationFlag()

		if var_578_0[var_578_1] ~= nil then
			arg_578_1.duration_ = var_578_0[var_578_1]
		end

		SetActive(arg_578_1.tipsGo_, false)

		function arg_578_1.onSingleLineFinish_()
			arg_578_1.onSingleLineUpdate_ = nil
			arg_578_1.onSingleLineFinish_ = nil
			arg_578_1.state_ = "waiting"
		end

		function arg_578_1.playNext_(arg_580_0)
			if arg_580_0 == 1 then
				arg_578_0:Play417012140(arg_578_1)
			end
		end

		function arg_578_1.onSingleLineUpdate_(arg_581_0)
			local var_581_0 = arg_578_1.actors_["10115"]
			local var_581_1 = 0

			if var_581_1 < arg_578_1.time_ and arg_578_1.time_ <= var_581_1 + arg_581_0 and not isNil(var_581_0) and arg_578_1.var_.actorSpriteComps10115 == nil then
				arg_578_1.var_.actorSpriteComps10115 = var_581_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_581_2 = 0.2

			if var_581_1 <= arg_578_1.time_ and arg_578_1.time_ < var_581_1 + var_581_2 and not isNil(var_581_0) then
				local var_581_3 = (arg_578_1.time_ - var_581_1) / var_581_2

				if arg_578_1.var_.actorSpriteComps10115 then
					for iter_581_0, iter_581_1 in pairs(arg_578_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_581_1 then
							if arg_578_1.isInRecall_ then
								local var_581_4 = Mathf.Lerp(iter_581_1.color.r, arg_578_1.hightColor1.r, var_581_3)
								local var_581_5 = Mathf.Lerp(iter_581_1.color.g, arg_578_1.hightColor1.g, var_581_3)
								local var_581_6 = Mathf.Lerp(iter_581_1.color.b, arg_578_1.hightColor1.b, var_581_3)

								iter_581_1.color = Color.New(var_581_4, var_581_5, var_581_6)
							else
								local var_581_7 = Mathf.Lerp(iter_581_1.color.r, 1, var_581_3)

								iter_581_1.color = Color.New(var_581_7, var_581_7, var_581_7)
							end
						end
					end
				end
			end

			if arg_578_1.time_ >= var_581_1 + var_581_2 and arg_578_1.time_ < var_581_1 + var_581_2 + arg_581_0 and not isNil(var_581_0) and arg_578_1.var_.actorSpriteComps10115 then
				for iter_581_2, iter_581_3 in pairs(arg_578_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_581_3 then
						if arg_578_1.isInRecall_ then
							iter_581_3.color = arg_578_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_581_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_578_1.var_.actorSpriteComps10115 = nil
			end

			local var_581_8 = arg_578_1.actors_["10115"].transform
			local var_581_9 = 0

			if var_581_9 < arg_578_1.time_ and arg_578_1.time_ <= var_581_9 + arg_581_0 then
				arg_578_1.var_.moveOldPos10115 = var_581_8.localPosition
				var_581_8.localScale = Vector3.New(1, 1, 1)

				arg_578_1:CheckSpriteTmpPos("10115", 3)

				local var_581_10 = var_581_8.childCount

				for iter_581_4 = 0, var_581_10 - 1 do
					local var_581_11 = var_581_8:GetChild(iter_581_4)

					if var_581_11.name == "split_4" or not string.find(var_581_11.name, "split") then
						var_581_11.gameObject:SetActive(true)
					else
						var_581_11.gameObject:SetActive(false)
					end
				end
			end

			local var_581_12 = 0.001

			if var_581_9 <= arg_578_1.time_ and arg_578_1.time_ < var_581_9 + var_581_12 then
				local var_581_13 = (arg_578_1.time_ - var_581_9) / var_581_12
				local var_581_14 = Vector3.New(0, -387.3, -246.2)

				var_581_8.localPosition = Vector3.Lerp(arg_578_1.var_.moveOldPos10115, var_581_14, var_581_13)
			end

			if arg_578_1.time_ >= var_581_9 + var_581_12 and arg_578_1.time_ < var_581_9 + var_581_12 + arg_581_0 then
				var_581_8.localPosition = Vector3.New(0, -387.3, -246.2)
			end

			local var_581_15 = 0
			local var_581_16 = 0.825

			if var_581_15 < arg_578_1.time_ and arg_578_1.time_ <= var_581_15 + arg_581_0 then
				arg_578_1.talkMaxDuration = 0
				arg_578_1.dialogCg_.alpha = 1

				arg_578_1.dialog_:SetActive(true)
				SetActive(arg_578_1.leftNameGo_, true)

				local var_581_17 = arg_578_1:FormatText(StoryNameCfg[1113].name)

				arg_578_1.leftNameTxt_.text = var_581_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_578_1.leftNameTxt_.transform)

				arg_578_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_578_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_578_1:RecordName(arg_578_1.leftNameTxt_.text)
				SetActive(arg_578_1.iconTrs_.gameObject, false)
				arg_578_1.callingController_:SetSelectedState("normal")

				local var_581_18 = arg_578_1:GetWordFromCfg(417012139)
				local var_581_19 = arg_578_1:FormatText(var_581_18.content)

				arg_578_1.text_.text = var_581_19

				LuaForUtil.ClearLinePrefixSymbol(arg_578_1.text_)

				local var_581_20 = 33
				local var_581_21 = utf8.len(var_581_19)
				local var_581_22 = var_581_20 <= 0 and var_581_16 or var_581_16 * (var_581_21 / var_581_20)

				if var_581_22 > 0 and var_581_16 < var_581_22 then
					arg_578_1.talkMaxDuration = var_581_22

					if var_581_22 + var_581_15 > arg_578_1.duration_ then
						arg_578_1.duration_ = var_581_22 + var_581_15
					end
				end

				arg_578_1.text_.text = var_581_19
				arg_578_1.typewritter.percent = 0

				arg_578_1.typewritter:SetDirty()
				arg_578_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012139", "story_v_out_417012.awb") ~= 0 then
					local var_581_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012139", "story_v_out_417012.awb") / 1000

					if var_581_23 + var_581_15 > arg_578_1.duration_ then
						arg_578_1.duration_ = var_581_23 + var_581_15
					end

					if var_581_18.prefab_name ~= "" and arg_578_1.actors_[var_581_18.prefab_name] ~= nil then
						local var_581_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_578_1.actors_[var_581_18.prefab_name].transform, "story_v_out_417012", "417012139", "story_v_out_417012.awb")

						arg_578_1:RecordAudio("417012139", var_581_24)
						arg_578_1:RecordAudio("417012139", var_581_24)
					else
						arg_578_1:AudioAction("play", "voice", "story_v_out_417012", "417012139", "story_v_out_417012.awb")
					end

					arg_578_1:RecordHistoryTalkVoice("story_v_out_417012", "417012139", "story_v_out_417012.awb")
				end

				arg_578_1:RecordContent(arg_578_1.text_.text)
			end

			local var_581_25 = math.max(var_581_16, arg_578_1.talkMaxDuration)

			if var_581_15 <= arg_578_1.time_ and arg_578_1.time_ < var_581_15 + var_581_25 then
				arg_578_1.typewritter.percent = (arg_578_1.time_ - var_581_15) / var_581_25

				arg_578_1.typewritter:SetDirty()
			end

			if arg_578_1.time_ >= var_581_15 + var_581_25 and arg_578_1.time_ < var_581_15 + var_581_25 + arg_581_0 then
				arg_578_1.typewritter.percent = 1

				arg_578_1.typewritter:SetDirty()
				arg_578_1:ShowNextGo(true)
			end
		end
	end,
	Play417012140 = function(arg_582_0, arg_582_1)
		arg_582_1.time_ = 0
		arg_582_1.frameCnt_ = 0
		arg_582_1.state_ = "playing"
		arg_582_1.curTalkId_ = 417012140
		arg_582_1.duration_ = 10.2

		local var_582_0 = {
			zh = 9.3,
			ja = 10.2
		}
		local var_582_1 = manager.audio:GetLocalizationFlag()

		if var_582_0[var_582_1] ~= nil then
			arg_582_1.duration_ = var_582_0[var_582_1]
		end

		SetActive(arg_582_1.tipsGo_, false)

		function arg_582_1.onSingleLineFinish_()
			arg_582_1.onSingleLineUpdate_ = nil
			arg_582_1.onSingleLineFinish_ = nil
			arg_582_1.state_ = "waiting"
		end

		function arg_582_1.playNext_(arg_584_0)
			if arg_584_0 == 1 then
				arg_582_0:Play417012141(arg_582_1)
			end
		end

		function arg_582_1.onSingleLineUpdate_(arg_585_0)
			local var_585_0 = 0
			local var_585_1 = 1.1

			if var_585_0 < arg_582_1.time_ and arg_582_1.time_ <= var_585_0 + arg_585_0 then
				arg_582_1.talkMaxDuration = 0
				arg_582_1.dialogCg_.alpha = 1

				arg_582_1.dialog_:SetActive(true)
				SetActive(arg_582_1.leftNameGo_, true)

				local var_585_2 = arg_582_1:FormatText(StoryNameCfg[1113].name)

				arg_582_1.leftNameTxt_.text = var_585_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_582_1.leftNameTxt_.transform)

				arg_582_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_582_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_582_1:RecordName(arg_582_1.leftNameTxt_.text)
				SetActive(arg_582_1.iconTrs_.gameObject, false)
				arg_582_1.callingController_:SetSelectedState("normal")

				local var_585_3 = arg_582_1:GetWordFromCfg(417012140)
				local var_585_4 = arg_582_1:FormatText(var_585_3.content)

				arg_582_1.text_.text = var_585_4

				LuaForUtil.ClearLinePrefixSymbol(arg_582_1.text_)

				local var_585_5 = 44
				local var_585_6 = utf8.len(var_585_4)
				local var_585_7 = var_585_5 <= 0 and var_585_1 or var_585_1 * (var_585_6 / var_585_5)

				if var_585_7 > 0 and var_585_1 < var_585_7 then
					arg_582_1.talkMaxDuration = var_585_7

					if var_585_7 + var_585_0 > arg_582_1.duration_ then
						arg_582_1.duration_ = var_585_7 + var_585_0
					end
				end

				arg_582_1.text_.text = var_585_4
				arg_582_1.typewritter.percent = 0

				arg_582_1.typewritter:SetDirty()
				arg_582_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012140", "story_v_out_417012.awb") ~= 0 then
					local var_585_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012140", "story_v_out_417012.awb") / 1000

					if var_585_8 + var_585_0 > arg_582_1.duration_ then
						arg_582_1.duration_ = var_585_8 + var_585_0
					end

					if var_585_3.prefab_name ~= "" and arg_582_1.actors_[var_585_3.prefab_name] ~= nil then
						local var_585_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_582_1.actors_[var_585_3.prefab_name].transform, "story_v_out_417012", "417012140", "story_v_out_417012.awb")

						arg_582_1:RecordAudio("417012140", var_585_9)
						arg_582_1:RecordAudio("417012140", var_585_9)
					else
						arg_582_1:AudioAction("play", "voice", "story_v_out_417012", "417012140", "story_v_out_417012.awb")
					end

					arg_582_1:RecordHistoryTalkVoice("story_v_out_417012", "417012140", "story_v_out_417012.awb")
				end

				arg_582_1:RecordContent(arg_582_1.text_.text)
			end

			local var_585_10 = math.max(var_585_1, arg_582_1.talkMaxDuration)

			if var_585_0 <= arg_582_1.time_ and arg_582_1.time_ < var_585_0 + var_585_10 then
				arg_582_1.typewritter.percent = (arg_582_1.time_ - var_585_0) / var_585_10

				arg_582_1.typewritter:SetDirty()
			end

			if arg_582_1.time_ >= var_585_0 + var_585_10 and arg_582_1.time_ < var_585_0 + var_585_10 + arg_585_0 then
				arg_582_1.typewritter.percent = 1

				arg_582_1.typewritter:SetDirty()
				arg_582_1:ShowNextGo(true)
			end
		end
	end,
	Play417012141 = function(arg_586_0, arg_586_1)
		arg_586_1.time_ = 0
		arg_586_1.frameCnt_ = 0
		arg_586_1.state_ = "playing"
		arg_586_1.curTalkId_ = 417012141
		arg_586_1.duration_ = 11.4

		local var_586_0 = {
			zh = 7.433,
			ja = 11.4
		}
		local var_586_1 = manager.audio:GetLocalizationFlag()

		if var_586_0[var_586_1] ~= nil then
			arg_586_1.duration_ = var_586_0[var_586_1]
		end

		SetActive(arg_586_1.tipsGo_, false)

		function arg_586_1.onSingleLineFinish_()
			arg_586_1.onSingleLineUpdate_ = nil
			arg_586_1.onSingleLineFinish_ = nil
			arg_586_1.state_ = "waiting"
		end

		function arg_586_1.playNext_(arg_588_0)
			if arg_588_0 == 1 then
				arg_586_0:Play417012142(arg_586_1)
			end
		end

		function arg_586_1.onSingleLineUpdate_(arg_589_0)
			local var_589_0 = 0
			local var_589_1 = 0.975

			if var_589_0 < arg_586_1.time_ and arg_586_1.time_ <= var_589_0 + arg_589_0 then
				arg_586_1.talkMaxDuration = 0
				arg_586_1.dialogCg_.alpha = 1

				arg_586_1.dialog_:SetActive(true)
				SetActive(arg_586_1.leftNameGo_, true)

				local var_589_2 = arg_586_1:FormatText(StoryNameCfg[1113].name)

				arg_586_1.leftNameTxt_.text = var_589_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_586_1.leftNameTxt_.transform)

				arg_586_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_586_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_586_1:RecordName(arg_586_1.leftNameTxt_.text)
				SetActive(arg_586_1.iconTrs_.gameObject, false)
				arg_586_1.callingController_:SetSelectedState("normal")

				local var_589_3 = arg_586_1:GetWordFromCfg(417012141)
				local var_589_4 = arg_586_1:FormatText(var_589_3.content)

				arg_586_1.text_.text = var_589_4

				LuaForUtil.ClearLinePrefixSymbol(arg_586_1.text_)

				local var_589_5 = 39
				local var_589_6 = utf8.len(var_589_4)
				local var_589_7 = var_589_5 <= 0 and var_589_1 or var_589_1 * (var_589_6 / var_589_5)

				if var_589_7 > 0 and var_589_1 < var_589_7 then
					arg_586_1.talkMaxDuration = var_589_7

					if var_589_7 + var_589_0 > arg_586_1.duration_ then
						arg_586_1.duration_ = var_589_7 + var_589_0
					end
				end

				arg_586_1.text_.text = var_589_4
				arg_586_1.typewritter.percent = 0

				arg_586_1.typewritter:SetDirty()
				arg_586_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012141", "story_v_out_417012.awb") ~= 0 then
					local var_589_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012141", "story_v_out_417012.awb") / 1000

					if var_589_8 + var_589_0 > arg_586_1.duration_ then
						arg_586_1.duration_ = var_589_8 + var_589_0
					end

					if var_589_3.prefab_name ~= "" and arg_586_1.actors_[var_589_3.prefab_name] ~= nil then
						local var_589_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_586_1.actors_[var_589_3.prefab_name].transform, "story_v_out_417012", "417012141", "story_v_out_417012.awb")

						arg_586_1:RecordAudio("417012141", var_589_9)
						arg_586_1:RecordAudio("417012141", var_589_9)
					else
						arg_586_1:AudioAction("play", "voice", "story_v_out_417012", "417012141", "story_v_out_417012.awb")
					end

					arg_586_1:RecordHistoryTalkVoice("story_v_out_417012", "417012141", "story_v_out_417012.awb")
				end

				arg_586_1:RecordContent(arg_586_1.text_.text)
			end

			local var_589_10 = math.max(var_589_1, arg_586_1.talkMaxDuration)

			if var_589_0 <= arg_586_1.time_ and arg_586_1.time_ < var_589_0 + var_589_10 then
				arg_586_1.typewritter.percent = (arg_586_1.time_ - var_589_0) / var_589_10

				arg_586_1.typewritter:SetDirty()
			end

			if arg_586_1.time_ >= var_589_0 + var_589_10 and arg_586_1.time_ < var_589_0 + var_589_10 + arg_589_0 then
				arg_586_1.typewritter.percent = 1

				arg_586_1.typewritter:SetDirty()
				arg_586_1:ShowNextGo(true)
			end
		end
	end,
	Play417012142 = function(arg_590_0, arg_590_1)
		arg_590_1.time_ = 0
		arg_590_1.frameCnt_ = 0
		arg_590_1.state_ = "playing"
		arg_590_1.curTalkId_ = 417012142
		arg_590_1.duration_ = 6.3

		local var_590_0 = {
			zh = 6.1,
			ja = 6.3
		}
		local var_590_1 = manager.audio:GetLocalizationFlag()

		if var_590_0[var_590_1] ~= nil then
			arg_590_1.duration_ = var_590_0[var_590_1]
		end

		SetActive(arg_590_1.tipsGo_, false)

		function arg_590_1.onSingleLineFinish_()
			arg_590_1.onSingleLineUpdate_ = nil
			arg_590_1.onSingleLineFinish_ = nil
			arg_590_1.state_ = "waiting"
		end

		function arg_590_1.playNext_(arg_592_0)
			if arg_592_0 == 1 then
				arg_590_0:Play417012143(arg_590_1)
			end
		end

		function arg_590_1.onSingleLineUpdate_(arg_593_0)
			local var_593_0 = arg_590_1.actors_["10115"].transform
			local var_593_1 = 0

			if var_593_1 < arg_590_1.time_ and arg_590_1.time_ <= var_593_1 + arg_593_0 then
				arg_590_1.var_.moveOldPos10115 = var_593_0.localPosition
				var_593_0.localScale = Vector3.New(1, 1, 1)

				arg_590_1:CheckSpriteTmpPos("10115", 3)

				local var_593_2 = var_593_0.childCount

				for iter_593_0 = 0, var_593_2 - 1 do
					local var_593_3 = var_593_0:GetChild(iter_593_0)

					if var_593_3.name == "split_6" or not string.find(var_593_3.name, "split") then
						var_593_3.gameObject:SetActive(true)
					else
						var_593_3.gameObject:SetActive(false)
					end
				end
			end

			local var_593_4 = 0.001

			if var_593_1 <= arg_590_1.time_ and arg_590_1.time_ < var_593_1 + var_593_4 then
				local var_593_5 = (arg_590_1.time_ - var_593_1) / var_593_4
				local var_593_6 = Vector3.New(0, -387.3, -246.2)

				var_593_0.localPosition = Vector3.Lerp(arg_590_1.var_.moveOldPos10115, var_593_6, var_593_5)
			end

			if arg_590_1.time_ >= var_593_1 + var_593_4 and arg_590_1.time_ < var_593_1 + var_593_4 + arg_593_0 then
				var_593_0.localPosition = Vector3.New(0, -387.3, -246.2)
			end

			local var_593_7 = 3.7
			local var_593_8 = 1

			if var_593_7 < arg_590_1.time_ and arg_590_1.time_ <= var_593_7 + arg_593_0 then
				local var_593_9 = "play"
				local var_593_10 = "effect"

				arg_590_1:AudioAction(var_593_9, var_593_10, "se_story_1310", "se_story_1310_vibrate_loop", "")
			end

			local var_593_11 = 0
			local var_593_12 = 0.625

			if var_593_11 < arg_590_1.time_ and arg_590_1.time_ <= var_593_11 + arg_593_0 then
				arg_590_1.talkMaxDuration = 0
				arg_590_1.dialogCg_.alpha = 1

				arg_590_1.dialog_:SetActive(true)
				SetActive(arg_590_1.leftNameGo_, true)

				local var_593_13 = arg_590_1:FormatText(StoryNameCfg[1113].name)

				arg_590_1.leftNameTxt_.text = var_593_13

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_590_1.leftNameTxt_.transform)

				arg_590_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_590_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_590_1:RecordName(arg_590_1.leftNameTxt_.text)
				SetActive(arg_590_1.iconTrs_.gameObject, false)
				arg_590_1.callingController_:SetSelectedState("normal")

				local var_593_14 = arg_590_1:GetWordFromCfg(417012142)
				local var_593_15 = arg_590_1:FormatText(var_593_14.content)

				arg_590_1.text_.text = var_593_15

				LuaForUtil.ClearLinePrefixSymbol(arg_590_1.text_)

				local var_593_16 = 25
				local var_593_17 = utf8.len(var_593_15)
				local var_593_18 = var_593_16 <= 0 and var_593_12 or var_593_12 * (var_593_17 / var_593_16)

				if var_593_18 > 0 and var_593_12 < var_593_18 then
					arg_590_1.talkMaxDuration = var_593_18

					if var_593_18 + var_593_11 > arg_590_1.duration_ then
						arg_590_1.duration_ = var_593_18 + var_593_11
					end
				end

				arg_590_1.text_.text = var_593_15
				arg_590_1.typewritter.percent = 0

				arg_590_1.typewritter:SetDirty()
				arg_590_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012142", "story_v_out_417012.awb") ~= 0 then
					local var_593_19 = manager.audio:GetVoiceLength("story_v_out_417012", "417012142", "story_v_out_417012.awb") / 1000

					if var_593_19 + var_593_11 > arg_590_1.duration_ then
						arg_590_1.duration_ = var_593_19 + var_593_11
					end

					if var_593_14.prefab_name ~= "" and arg_590_1.actors_[var_593_14.prefab_name] ~= nil then
						local var_593_20 = LuaForUtil.PlayVoiceWithCriLipsync(arg_590_1.actors_[var_593_14.prefab_name].transform, "story_v_out_417012", "417012142", "story_v_out_417012.awb")

						arg_590_1:RecordAudio("417012142", var_593_20)
						arg_590_1:RecordAudio("417012142", var_593_20)
					else
						arg_590_1:AudioAction("play", "voice", "story_v_out_417012", "417012142", "story_v_out_417012.awb")
					end

					arg_590_1:RecordHistoryTalkVoice("story_v_out_417012", "417012142", "story_v_out_417012.awb")
				end

				arg_590_1:RecordContent(arg_590_1.text_.text)
			end

			local var_593_21 = math.max(var_593_12, arg_590_1.talkMaxDuration)

			if var_593_11 <= arg_590_1.time_ and arg_590_1.time_ < var_593_11 + var_593_21 then
				arg_590_1.typewritter.percent = (arg_590_1.time_ - var_593_11) / var_593_21

				arg_590_1.typewritter:SetDirty()
			end

			if arg_590_1.time_ >= var_593_11 + var_593_21 and arg_590_1.time_ < var_593_11 + var_593_21 + arg_593_0 then
				arg_590_1.typewritter.percent = 1

				arg_590_1.typewritter:SetDirty()
				arg_590_1:ShowNextGo(true)
			end
		end
	end,
	Play417012143 = function(arg_594_0, arg_594_1)
		arg_594_1.time_ = 0
		arg_594_1.frameCnt_ = 0
		arg_594_1.state_ = "playing"
		arg_594_1.curTalkId_ = 417012143
		arg_594_1.duration_ = 5

		SetActive(arg_594_1.tipsGo_, false)

		function arg_594_1.onSingleLineFinish_()
			arg_594_1.onSingleLineUpdate_ = nil
			arg_594_1.onSingleLineFinish_ = nil
			arg_594_1.state_ = "waiting"
		end

		function arg_594_1.playNext_(arg_596_0)
			if arg_596_0 == 1 then
				arg_594_0:Play417012144(arg_594_1)
			end
		end

		function arg_594_1.onSingleLineUpdate_(arg_597_0)
			local var_597_0 = arg_594_1.actors_["10115"]
			local var_597_1 = 0

			if var_597_1 < arg_594_1.time_ and arg_594_1.time_ <= var_597_1 + arg_597_0 and not isNil(var_597_0) and arg_594_1.var_.actorSpriteComps10115 == nil then
				arg_594_1.var_.actorSpriteComps10115 = var_597_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_597_2 = 0.2

			if var_597_1 <= arg_594_1.time_ and arg_594_1.time_ < var_597_1 + var_597_2 and not isNil(var_597_0) then
				local var_597_3 = (arg_594_1.time_ - var_597_1) / var_597_2

				if arg_594_1.var_.actorSpriteComps10115 then
					for iter_597_0, iter_597_1 in pairs(arg_594_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_597_1 then
							if arg_594_1.isInRecall_ then
								local var_597_4 = Mathf.Lerp(iter_597_1.color.r, arg_594_1.hightColor2.r, var_597_3)
								local var_597_5 = Mathf.Lerp(iter_597_1.color.g, arg_594_1.hightColor2.g, var_597_3)
								local var_597_6 = Mathf.Lerp(iter_597_1.color.b, arg_594_1.hightColor2.b, var_597_3)

								iter_597_1.color = Color.New(var_597_4, var_597_5, var_597_6)
							else
								local var_597_7 = Mathf.Lerp(iter_597_1.color.r, 0.5, var_597_3)

								iter_597_1.color = Color.New(var_597_7, var_597_7, var_597_7)
							end
						end
					end
				end
			end

			if arg_594_1.time_ >= var_597_1 + var_597_2 and arg_594_1.time_ < var_597_1 + var_597_2 + arg_597_0 and not isNil(var_597_0) and arg_594_1.var_.actorSpriteComps10115 then
				for iter_597_2, iter_597_3 in pairs(arg_594_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_597_3 then
						if arg_594_1.isInRecall_ then
							iter_597_3.color = arg_594_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_597_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_594_1.var_.actorSpriteComps10115 = nil
			end

			local var_597_8 = arg_594_1.actors_["10115"].transform
			local var_597_9 = 0

			if var_597_9 < arg_594_1.time_ and arg_594_1.time_ <= var_597_9 + arg_597_0 then
				arg_594_1.var_.moveOldPos10115 = var_597_8.localPosition
				var_597_8.localScale = Vector3.New(1, 1, 1)

				arg_594_1:CheckSpriteTmpPos("10115", 7)

				local var_597_10 = var_597_8.childCount

				for iter_597_4 = 0, var_597_10 - 1 do
					local var_597_11 = var_597_8:GetChild(iter_597_4)

					if var_597_11.name == "" or not string.find(var_597_11.name, "split") then
						var_597_11.gameObject:SetActive(true)
					else
						var_597_11.gameObject:SetActive(false)
					end
				end
			end

			local var_597_12 = 0.001

			if var_597_9 <= arg_594_1.time_ and arg_594_1.time_ < var_597_9 + var_597_12 then
				local var_597_13 = (arg_594_1.time_ - var_597_9) / var_597_12
				local var_597_14 = Vector3.New(0, -2000, 0)

				var_597_8.localPosition = Vector3.Lerp(arg_594_1.var_.moveOldPos10115, var_597_14, var_597_13)
			end

			if arg_594_1.time_ >= var_597_9 + var_597_12 and arg_594_1.time_ < var_597_9 + var_597_12 + arg_597_0 then
				var_597_8.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_597_15 = 0
			local var_597_16 = 1.125

			if var_597_15 < arg_594_1.time_ and arg_594_1.time_ <= var_597_15 + arg_597_0 then
				arg_594_1.talkMaxDuration = 0
				arg_594_1.dialogCg_.alpha = 1

				arg_594_1.dialog_:SetActive(true)
				SetActive(arg_594_1.leftNameGo_, false)

				arg_594_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_594_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_594_1:RecordName(arg_594_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_594_1.iconTrs_.gameObject, false)
				arg_594_1.callingController_:SetSelectedState("normal")

				local var_597_17 = arg_594_1:GetWordFromCfg(417012143)
				local var_597_18 = arg_594_1:FormatText(var_597_17.content)

				arg_594_1.text_.text = var_597_18

				LuaForUtil.ClearLinePrefixSymbol(arg_594_1.text_)

				local var_597_19 = 45
				local var_597_20 = utf8.len(var_597_18)
				local var_597_21 = var_597_19 <= 0 and var_597_16 or var_597_16 * (var_597_20 / var_597_19)

				if var_597_21 > 0 and var_597_16 < var_597_21 then
					arg_594_1.talkMaxDuration = var_597_21

					if var_597_21 + var_597_15 > arg_594_1.duration_ then
						arg_594_1.duration_ = var_597_21 + var_597_15
					end
				end

				arg_594_1.text_.text = var_597_18
				arg_594_1.typewritter.percent = 0

				arg_594_1.typewritter:SetDirty()
				arg_594_1:ShowNextGo(false)
				arg_594_1:RecordContent(arg_594_1.text_.text)
			end

			local var_597_22 = math.max(var_597_16, arg_594_1.talkMaxDuration)

			if var_597_15 <= arg_594_1.time_ and arg_594_1.time_ < var_597_15 + var_597_22 then
				arg_594_1.typewritter.percent = (arg_594_1.time_ - var_597_15) / var_597_22

				arg_594_1.typewritter:SetDirty()
			end

			if arg_594_1.time_ >= var_597_15 + var_597_22 and arg_594_1.time_ < var_597_15 + var_597_22 + arg_597_0 then
				arg_594_1.typewritter.percent = 1

				arg_594_1.typewritter:SetDirty()
				arg_594_1:ShowNextGo(true)
			end
		end
	end,
	Play417012144 = function(arg_598_0, arg_598_1)
		arg_598_1.time_ = 0
		arg_598_1.frameCnt_ = 0
		arg_598_1.state_ = "playing"
		arg_598_1.curTalkId_ = 417012144
		arg_598_1.duration_ = 3.57

		local var_598_0 = {
			zh = 2.633,
			ja = 3.566
		}
		local var_598_1 = manager.audio:GetLocalizationFlag()

		if var_598_0[var_598_1] ~= nil then
			arg_598_1.duration_ = var_598_0[var_598_1]
		end

		SetActive(arg_598_1.tipsGo_, false)

		function arg_598_1.onSingleLineFinish_()
			arg_598_1.onSingleLineUpdate_ = nil
			arg_598_1.onSingleLineFinish_ = nil
			arg_598_1.state_ = "waiting"
		end

		function arg_598_1.playNext_(arg_600_0)
			if arg_600_0 == 1 then
				arg_598_0:Play417012145(arg_598_1)
			end
		end

		function arg_598_1.onSingleLineUpdate_(arg_601_0)
			local var_601_0 = arg_598_1.actors_["1034"]
			local var_601_1 = 0

			if var_601_1 < arg_598_1.time_ and arg_598_1.time_ <= var_601_1 + arg_601_0 and not isNil(var_601_0) and arg_598_1.var_.actorSpriteComps1034 == nil then
				arg_598_1.var_.actorSpriteComps1034 = var_601_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_601_2 = 0.2

			if var_601_1 <= arg_598_1.time_ and arg_598_1.time_ < var_601_1 + var_601_2 and not isNil(var_601_0) then
				local var_601_3 = (arg_598_1.time_ - var_601_1) / var_601_2

				if arg_598_1.var_.actorSpriteComps1034 then
					for iter_601_0, iter_601_1 in pairs(arg_598_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_601_1 then
							if arg_598_1.isInRecall_ then
								local var_601_4 = Mathf.Lerp(iter_601_1.color.r, arg_598_1.hightColor1.r, var_601_3)
								local var_601_5 = Mathf.Lerp(iter_601_1.color.g, arg_598_1.hightColor1.g, var_601_3)
								local var_601_6 = Mathf.Lerp(iter_601_1.color.b, arg_598_1.hightColor1.b, var_601_3)

								iter_601_1.color = Color.New(var_601_4, var_601_5, var_601_6)
							else
								local var_601_7 = Mathf.Lerp(iter_601_1.color.r, 1, var_601_3)

								iter_601_1.color = Color.New(var_601_7, var_601_7, var_601_7)
							end
						end
					end
				end
			end

			if arg_598_1.time_ >= var_601_1 + var_601_2 and arg_598_1.time_ < var_601_1 + var_601_2 + arg_601_0 and not isNil(var_601_0) and arg_598_1.var_.actorSpriteComps1034 then
				for iter_601_2, iter_601_3 in pairs(arg_598_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_601_3 then
						if arg_598_1.isInRecall_ then
							iter_601_3.color = arg_598_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_601_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_598_1.var_.actorSpriteComps1034 = nil
			end

			local var_601_8 = arg_598_1.actors_["1034"].transform
			local var_601_9 = 0

			if var_601_9 < arg_598_1.time_ and arg_598_1.time_ <= var_601_9 + arg_601_0 then
				arg_598_1.var_.moveOldPos1034 = var_601_8.localPosition
				var_601_8.localScale = Vector3.New(1, 1, 1)

				arg_598_1:CheckSpriteTmpPos("1034", 3)

				local var_601_10 = var_601_8.childCount

				for iter_601_4 = 0, var_601_10 - 1 do
					local var_601_11 = var_601_8:GetChild(iter_601_4)

					if var_601_11.name == "" or not string.find(var_601_11.name, "split") then
						var_601_11.gameObject:SetActive(true)
					else
						var_601_11.gameObject:SetActive(false)
					end
				end
			end

			local var_601_12 = 0.001

			if var_601_9 <= arg_598_1.time_ and arg_598_1.time_ < var_601_9 + var_601_12 then
				local var_601_13 = (arg_598_1.time_ - var_601_9) / var_601_12
				local var_601_14 = Vector3.New(0, -331.9, -324)

				var_601_8.localPosition = Vector3.Lerp(arg_598_1.var_.moveOldPos1034, var_601_14, var_601_13)
			end

			if arg_598_1.time_ >= var_601_9 + var_601_12 and arg_598_1.time_ < var_601_9 + var_601_12 + arg_601_0 then
				var_601_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_601_15 = 0
			local var_601_16 = 0.3

			if var_601_15 < arg_598_1.time_ and arg_598_1.time_ <= var_601_15 + arg_601_0 then
				arg_598_1.talkMaxDuration = 0
				arg_598_1.dialogCg_.alpha = 1

				arg_598_1.dialog_:SetActive(true)
				SetActive(arg_598_1.leftNameGo_, true)

				local var_601_17 = arg_598_1:FormatText(StoryNameCfg[1109].name)

				arg_598_1.leftNameTxt_.text = var_601_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_598_1.leftNameTxt_.transform)

				arg_598_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_598_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_598_1:RecordName(arg_598_1.leftNameTxt_.text)
				SetActive(arg_598_1.iconTrs_.gameObject, false)
				arg_598_1.callingController_:SetSelectedState("normal")

				local var_601_18 = arg_598_1:GetWordFromCfg(417012144)
				local var_601_19 = arg_598_1:FormatText(var_601_18.content)

				arg_598_1.text_.text = var_601_19

				LuaForUtil.ClearLinePrefixSymbol(arg_598_1.text_)

				local var_601_20 = 12
				local var_601_21 = utf8.len(var_601_19)
				local var_601_22 = var_601_20 <= 0 and var_601_16 or var_601_16 * (var_601_21 / var_601_20)

				if var_601_22 > 0 and var_601_16 < var_601_22 then
					arg_598_1.talkMaxDuration = var_601_22

					if var_601_22 + var_601_15 > arg_598_1.duration_ then
						arg_598_1.duration_ = var_601_22 + var_601_15
					end
				end

				arg_598_1.text_.text = var_601_19
				arg_598_1.typewritter.percent = 0

				arg_598_1.typewritter:SetDirty()
				arg_598_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012144", "story_v_out_417012.awb") ~= 0 then
					local var_601_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012144", "story_v_out_417012.awb") / 1000

					if var_601_23 + var_601_15 > arg_598_1.duration_ then
						arg_598_1.duration_ = var_601_23 + var_601_15
					end

					if var_601_18.prefab_name ~= "" and arg_598_1.actors_[var_601_18.prefab_name] ~= nil then
						local var_601_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_598_1.actors_[var_601_18.prefab_name].transform, "story_v_out_417012", "417012144", "story_v_out_417012.awb")

						arg_598_1:RecordAudio("417012144", var_601_24)
						arg_598_1:RecordAudio("417012144", var_601_24)
					else
						arg_598_1:AudioAction("play", "voice", "story_v_out_417012", "417012144", "story_v_out_417012.awb")
					end

					arg_598_1:RecordHistoryTalkVoice("story_v_out_417012", "417012144", "story_v_out_417012.awb")
				end

				arg_598_1:RecordContent(arg_598_1.text_.text)
			end

			local var_601_25 = math.max(var_601_16, arg_598_1.talkMaxDuration)

			if var_601_15 <= arg_598_1.time_ and arg_598_1.time_ < var_601_15 + var_601_25 then
				arg_598_1.typewritter.percent = (arg_598_1.time_ - var_601_15) / var_601_25

				arg_598_1.typewritter:SetDirty()
			end

			if arg_598_1.time_ >= var_601_15 + var_601_25 and arg_598_1.time_ < var_601_15 + var_601_25 + arg_601_0 then
				arg_598_1.typewritter.percent = 1

				arg_598_1.typewritter:SetDirty()
				arg_598_1:ShowNextGo(true)
			end
		end
	end,
	Play417012145 = function(arg_602_0, arg_602_1)
		arg_602_1.time_ = 0
		arg_602_1.frameCnt_ = 0
		arg_602_1.state_ = "playing"
		arg_602_1.curTalkId_ = 417012145
		arg_602_1.duration_ = 2.13

		local var_602_0 = {
			zh = 1.233,
			ja = 2.133
		}
		local var_602_1 = manager.audio:GetLocalizationFlag()

		if var_602_0[var_602_1] ~= nil then
			arg_602_1.duration_ = var_602_0[var_602_1]
		end

		SetActive(arg_602_1.tipsGo_, false)

		function arg_602_1.onSingleLineFinish_()
			arg_602_1.onSingleLineUpdate_ = nil
			arg_602_1.onSingleLineFinish_ = nil
			arg_602_1.state_ = "waiting"
		end

		function arg_602_1.playNext_(arg_604_0)
			if arg_604_0 == 1 then
				arg_602_0:Play417012146(arg_602_1)
			end
		end

		function arg_602_1.onSingleLineUpdate_(arg_605_0)
			local var_605_0 = arg_602_1.actors_["10115"]
			local var_605_1 = 0

			if var_605_1 < arg_602_1.time_ and arg_602_1.time_ <= var_605_1 + arg_605_0 and not isNil(var_605_0) and arg_602_1.var_.actorSpriteComps10115 == nil then
				arg_602_1.var_.actorSpriteComps10115 = var_605_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_605_2 = 0.2

			if var_605_1 <= arg_602_1.time_ and arg_602_1.time_ < var_605_1 + var_605_2 and not isNil(var_605_0) then
				local var_605_3 = (arg_602_1.time_ - var_605_1) / var_605_2

				if arg_602_1.var_.actorSpriteComps10115 then
					for iter_605_0, iter_605_1 in pairs(arg_602_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_605_1 then
							if arg_602_1.isInRecall_ then
								local var_605_4 = Mathf.Lerp(iter_605_1.color.r, arg_602_1.hightColor1.r, var_605_3)
								local var_605_5 = Mathf.Lerp(iter_605_1.color.g, arg_602_1.hightColor1.g, var_605_3)
								local var_605_6 = Mathf.Lerp(iter_605_1.color.b, arg_602_1.hightColor1.b, var_605_3)

								iter_605_1.color = Color.New(var_605_4, var_605_5, var_605_6)
							else
								local var_605_7 = Mathf.Lerp(iter_605_1.color.r, 1, var_605_3)

								iter_605_1.color = Color.New(var_605_7, var_605_7, var_605_7)
							end
						end
					end
				end
			end

			if arg_602_1.time_ >= var_605_1 + var_605_2 and arg_602_1.time_ < var_605_1 + var_605_2 + arg_605_0 and not isNil(var_605_0) and arg_602_1.var_.actorSpriteComps10115 then
				for iter_605_2, iter_605_3 in pairs(arg_602_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_605_3 then
						if arg_602_1.isInRecall_ then
							iter_605_3.color = arg_602_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_605_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_602_1.var_.actorSpriteComps10115 = nil
			end

			local var_605_8 = arg_602_1.actors_["1034"]
			local var_605_9 = 0

			if var_605_9 < arg_602_1.time_ and arg_602_1.time_ <= var_605_9 + arg_605_0 and not isNil(var_605_8) and arg_602_1.var_.actorSpriteComps1034 == nil then
				arg_602_1.var_.actorSpriteComps1034 = var_605_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_605_10 = 0.2

			if var_605_9 <= arg_602_1.time_ and arg_602_1.time_ < var_605_9 + var_605_10 and not isNil(var_605_8) then
				local var_605_11 = (arg_602_1.time_ - var_605_9) / var_605_10

				if arg_602_1.var_.actorSpriteComps1034 then
					for iter_605_4, iter_605_5 in pairs(arg_602_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_605_5 then
							if arg_602_1.isInRecall_ then
								local var_605_12 = Mathf.Lerp(iter_605_5.color.r, arg_602_1.hightColor2.r, var_605_11)
								local var_605_13 = Mathf.Lerp(iter_605_5.color.g, arg_602_1.hightColor2.g, var_605_11)
								local var_605_14 = Mathf.Lerp(iter_605_5.color.b, arg_602_1.hightColor2.b, var_605_11)

								iter_605_5.color = Color.New(var_605_12, var_605_13, var_605_14)
							else
								local var_605_15 = Mathf.Lerp(iter_605_5.color.r, 0.5, var_605_11)

								iter_605_5.color = Color.New(var_605_15, var_605_15, var_605_15)
							end
						end
					end
				end
			end

			if arg_602_1.time_ >= var_605_9 + var_605_10 and arg_602_1.time_ < var_605_9 + var_605_10 + arg_605_0 and not isNil(var_605_8) and arg_602_1.var_.actorSpriteComps1034 then
				for iter_605_6, iter_605_7 in pairs(arg_602_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_605_7 then
						if arg_602_1.isInRecall_ then
							iter_605_7.color = arg_602_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_605_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_602_1.var_.actorSpriteComps1034 = nil
			end

			local var_605_16 = 0
			local var_605_17 = 0.125

			if var_605_16 < arg_602_1.time_ and arg_602_1.time_ <= var_605_16 + arg_605_0 then
				arg_602_1.talkMaxDuration = 0
				arg_602_1.dialogCg_.alpha = 1

				arg_602_1.dialog_:SetActive(true)
				SetActive(arg_602_1.leftNameGo_, true)

				local var_605_18 = arg_602_1:FormatText(StoryNameCfg[1113].name)

				arg_602_1.leftNameTxt_.text = var_605_18

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_602_1.leftNameTxt_.transform)

				arg_602_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_602_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_602_1:RecordName(arg_602_1.leftNameTxt_.text)
				SetActive(arg_602_1.iconTrs_.gameObject, true)
				arg_602_1.iconController_:SetSelectedState("hero")

				arg_602_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10115_split_1")

				arg_602_1.callingController_:SetSelectedState("normal")

				arg_602_1.keyicon_.color = Color.New(1, 1, 1)
				arg_602_1.icon_.color = Color.New(1, 1, 1)

				local var_605_19 = arg_602_1:GetWordFromCfg(417012145)
				local var_605_20 = arg_602_1:FormatText(var_605_19.content)

				arg_602_1.text_.text = var_605_20

				LuaForUtil.ClearLinePrefixSymbol(arg_602_1.text_)

				local var_605_21 = 5
				local var_605_22 = utf8.len(var_605_20)
				local var_605_23 = var_605_21 <= 0 and var_605_17 or var_605_17 * (var_605_22 / var_605_21)

				if var_605_23 > 0 and var_605_17 < var_605_23 then
					arg_602_1.talkMaxDuration = var_605_23

					if var_605_23 + var_605_16 > arg_602_1.duration_ then
						arg_602_1.duration_ = var_605_23 + var_605_16
					end
				end

				arg_602_1.text_.text = var_605_20
				arg_602_1.typewritter.percent = 0

				arg_602_1.typewritter:SetDirty()
				arg_602_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012145", "story_v_out_417012.awb") ~= 0 then
					local var_605_24 = manager.audio:GetVoiceLength("story_v_out_417012", "417012145", "story_v_out_417012.awb") / 1000

					if var_605_24 + var_605_16 > arg_602_1.duration_ then
						arg_602_1.duration_ = var_605_24 + var_605_16
					end

					if var_605_19.prefab_name ~= "" and arg_602_1.actors_[var_605_19.prefab_name] ~= nil then
						local var_605_25 = LuaForUtil.PlayVoiceWithCriLipsync(arg_602_1.actors_[var_605_19.prefab_name].transform, "story_v_out_417012", "417012145", "story_v_out_417012.awb")

						arg_602_1:RecordAudio("417012145", var_605_25)
						arg_602_1:RecordAudio("417012145", var_605_25)
					else
						arg_602_1:AudioAction("play", "voice", "story_v_out_417012", "417012145", "story_v_out_417012.awb")
					end

					arg_602_1:RecordHistoryTalkVoice("story_v_out_417012", "417012145", "story_v_out_417012.awb")
				end

				arg_602_1:RecordContent(arg_602_1.text_.text)
			end

			local var_605_26 = math.max(var_605_17, arg_602_1.talkMaxDuration)

			if var_605_16 <= arg_602_1.time_ and arg_602_1.time_ < var_605_16 + var_605_26 then
				arg_602_1.typewritter.percent = (arg_602_1.time_ - var_605_16) / var_605_26

				arg_602_1.typewritter:SetDirty()
			end

			if arg_602_1.time_ >= var_605_16 + var_605_26 and arg_602_1.time_ < var_605_16 + var_605_26 + arg_605_0 then
				arg_602_1.typewritter.percent = 1

				arg_602_1.typewritter:SetDirty()
				arg_602_1:ShowNextGo(true)
			end
		end
	end,
	Play417012146 = function(arg_606_0, arg_606_1)
		arg_606_1.time_ = 0
		arg_606_1.frameCnt_ = 0
		arg_606_1.state_ = "playing"
		arg_606_1.curTalkId_ = 417012146
		arg_606_1.duration_ = 5

		SetActive(arg_606_1.tipsGo_, false)

		function arg_606_1.onSingleLineFinish_()
			arg_606_1.onSingleLineUpdate_ = nil
			arg_606_1.onSingleLineFinish_ = nil
			arg_606_1.state_ = "waiting"
		end

		function arg_606_1.playNext_(arg_608_0)
			if arg_608_0 == 1 then
				arg_606_0:Play417012147(arg_606_1)
			end
		end

		function arg_606_1.onSingleLineUpdate_(arg_609_0)
			local var_609_0 = arg_606_1.actors_["10115"]
			local var_609_1 = 0

			if var_609_1 < arg_606_1.time_ and arg_606_1.time_ <= var_609_1 + arg_609_0 and not isNil(var_609_0) and arg_606_1.var_.actorSpriteComps10115 == nil then
				arg_606_1.var_.actorSpriteComps10115 = var_609_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_609_2 = 0.2

			if var_609_1 <= arg_606_1.time_ and arg_606_1.time_ < var_609_1 + var_609_2 and not isNil(var_609_0) then
				local var_609_3 = (arg_606_1.time_ - var_609_1) / var_609_2

				if arg_606_1.var_.actorSpriteComps10115 then
					for iter_609_0, iter_609_1 in pairs(arg_606_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_609_1 then
							if arg_606_1.isInRecall_ then
								local var_609_4 = Mathf.Lerp(iter_609_1.color.r, arg_606_1.hightColor2.r, var_609_3)
								local var_609_5 = Mathf.Lerp(iter_609_1.color.g, arg_606_1.hightColor2.g, var_609_3)
								local var_609_6 = Mathf.Lerp(iter_609_1.color.b, arg_606_1.hightColor2.b, var_609_3)

								iter_609_1.color = Color.New(var_609_4, var_609_5, var_609_6)
							else
								local var_609_7 = Mathf.Lerp(iter_609_1.color.r, 0.5, var_609_3)

								iter_609_1.color = Color.New(var_609_7, var_609_7, var_609_7)
							end
						end
					end
				end
			end

			if arg_606_1.time_ >= var_609_1 + var_609_2 and arg_606_1.time_ < var_609_1 + var_609_2 + arg_609_0 and not isNil(var_609_0) and arg_606_1.var_.actorSpriteComps10115 then
				for iter_609_2, iter_609_3 in pairs(arg_606_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_609_3 then
						if arg_606_1.isInRecall_ then
							iter_609_3.color = arg_606_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_609_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_606_1.var_.actorSpriteComps10115 = nil
			end

			local var_609_8 = 1.6
			local var_609_9 = 1

			if var_609_8 < arg_606_1.time_ and arg_606_1.time_ <= var_609_8 + arg_609_0 then
				local var_609_10 = "stop"
				local var_609_11 = "effect"

				arg_606_1:AudioAction(var_609_10, var_609_11, "se_story_1310", "se_story_1310_vibrate_loop", "")
			end

			local var_609_12 = 0
			local var_609_13 = 1.725

			if var_609_12 < arg_606_1.time_ and arg_606_1.time_ <= var_609_12 + arg_609_0 then
				arg_606_1.talkMaxDuration = 0
				arg_606_1.dialogCg_.alpha = 1

				arg_606_1.dialog_:SetActive(true)
				SetActive(arg_606_1.leftNameGo_, false)

				arg_606_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_606_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_606_1:RecordName(arg_606_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_606_1.iconTrs_.gameObject, false)
				arg_606_1.callingController_:SetSelectedState("normal")

				local var_609_14 = arg_606_1:GetWordFromCfg(417012146)
				local var_609_15 = arg_606_1:FormatText(var_609_14.content)

				arg_606_1.text_.text = var_609_15

				LuaForUtil.ClearLinePrefixSymbol(arg_606_1.text_)

				local var_609_16 = 69
				local var_609_17 = utf8.len(var_609_15)
				local var_609_18 = var_609_16 <= 0 and var_609_13 or var_609_13 * (var_609_17 / var_609_16)

				if var_609_18 > 0 and var_609_13 < var_609_18 then
					arg_606_1.talkMaxDuration = var_609_18

					if var_609_18 + var_609_12 > arg_606_1.duration_ then
						arg_606_1.duration_ = var_609_18 + var_609_12
					end
				end

				arg_606_1.text_.text = var_609_15
				arg_606_1.typewritter.percent = 0

				arg_606_1.typewritter:SetDirty()
				arg_606_1:ShowNextGo(false)
				arg_606_1:RecordContent(arg_606_1.text_.text)
			end

			local var_609_19 = math.max(var_609_13, arg_606_1.talkMaxDuration)

			if var_609_12 <= arg_606_1.time_ and arg_606_1.time_ < var_609_12 + var_609_19 then
				arg_606_1.typewritter.percent = (arg_606_1.time_ - var_609_12) / var_609_19

				arg_606_1.typewritter:SetDirty()
			end

			if arg_606_1.time_ >= var_609_12 + var_609_19 and arg_606_1.time_ < var_609_12 + var_609_19 + arg_609_0 then
				arg_606_1.typewritter.percent = 1

				arg_606_1.typewritter:SetDirty()
				arg_606_1:ShowNextGo(true)
			end
		end
	end,
	Play417012147 = function(arg_610_0, arg_610_1)
		arg_610_1.time_ = 0
		arg_610_1.frameCnt_ = 0
		arg_610_1.state_ = "playing"
		arg_610_1.curTalkId_ = 417012147
		arg_610_1.duration_ = 3.73

		local var_610_0 = {
			zh = 1.1,
			ja = 3.733
		}
		local var_610_1 = manager.audio:GetLocalizationFlag()

		if var_610_0[var_610_1] ~= nil then
			arg_610_1.duration_ = var_610_0[var_610_1]
		end

		SetActive(arg_610_1.tipsGo_, false)

		function arg_610_1.onSingleLineFinish_()
			arg_610_1.onSingleLineUpdate_ = nil
			arg_610_1.onSingleLineFinish_ = nil
			arg_610_1.state_ = "waiting"
		end

		function arg_610_1.playNext_(arg_612_0)
			if arg_612_0 == 1 then
				arg_610_0:Play417012148(arg_610_1)
			end
		end

		function arg_610_1.onSingleLineUpdate_(arg_613_0)
			local var_613_0 = arg_610_1.actors_["1034"]
			local var_613_1 = 0

			if var_613_1 < arg_610_1.time_ and arg_610_1.time_ <= var_613_1 + arg_613_0 and not isNil(var_613_0) and arg_610_1.var_.actorSpriteComps1034 == nil then
				arg_610_1.var_.actorSpriteComps1034 = var_613_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_613_2 = 0.2

			if var_613_1 <= arg_610_1.time_ and arg_610_1.time_ < var_613_1 + var_613_2 and not isNil(var_613_0) then
				local var_613_3 = (arg_610_1.time_ - var_613_1) / var_613_2

				if arg_610_1.var_.actorSpriteComps1034 then
					for iter_613_0, iter_613_1 in pairs(arg_610_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_613_1 then
							if arg_610_1.isInRecall_ then
								local var_613_4 = Mathf.Lerp(iter_613_1.color.r, arg_610_1.hightColor1.r, var_613_3)
								local var_613_5 = Mathf.Lerp(iter_613_1.color.g, arg_610_1.hightColor1.g, var_613_3)
								local var_613_6 = Mathf.Lerp(iter_613_1.color.b, arg_610_1.hightColor1.b, var_613_3)

								iter_613_1.color = Color.New(var_613_4, var_613_5, var_613_6)
							else
								local var_613_7 = Mathf.Lerp(iter_613_1.color.r, 1, var_613_3)

								iter_613_1.color = Color.New(var_613_7, var_613_7, var_613_7)
							end
						end
					end
				end
			end

			if arg_610_1.time_ >= var_613_1 + var_613_2 and arg_610_1.time_ < var_613_1 + var_613_2 + arg_613_0 and not isNil(var_613_0) and arg_610_1.var_.actorSpriteComps1034 then
				for iter_613_2, iter_613_3 in pairs(arg_610_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_613_3 then
						if arg_610_1.isInRecall_ then
							iter_613_3.color = arg_610_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_613_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_610_1.var_.actorSpriteComps1034 = nil
			end

			local var_613_8 = arg_610_1.actors_["1034"].transform
			local var_613_9 = 0

			if var_613_9 < arg_610_1.time_ and arg_610_1.time_ <= var_613_9 + arg_613_0 then
				arg_610_1.var_.moveOldPos1034 = var_613_8.localPosition
				var_613_8.localScale = Vector3.New(1, 1, 1)

				arg_610_1:CheckSpriteTmpPos("1034", 3)

				local var_613_10 = var_613_8.childCount

				for iter_613_4 = 0, var_613_10 - 1 do
					local var_613_11 = var_613_8:GetChild(iter_613_4)

					if var_613_11.name == "split_4" or not string.find(var_613_11.name, "split") then
						var_613_11.gameObject:SetActive(true)
					else
						var_613_11.gameObject:SetActive(false)
					end
				end
			end

			local var_613_12 = 0.001

			if var_613_9 <= arg_610_1.time_ and arg_610_1.time_ < var_613_9 + var_613_12 then
				local var_613_13 = (arg_610_1.time_ - var_613_9) / var_613_12
				local var_613_14 = Vector3.New(0, -331.9, -324)

				var_613_8.localPosition = Vector3.Lerp(arg_610_1.var_.moveOldPos1034, var_613_14, var_613_13)
			end

			if arg_610_1.time_ >= var_613_9 + var_613_12 and arg_610_1.time_ < var_613_9 + var_613_12 + arg_613_0 then
				var_613_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_613_15 = 0
			local var_613_16 = 0.125

			if var_613_15 < arg_610_1.time_ and arg_610_1.time_ <= var_613_15 + arg_613_0 then
				arg_610_1.talkMaxDuration = 0
				arg_610_1.dialogCg_.alpha = 1

				arg_610_1.dialog_:SetActive(true)
				SetActive(arg_610_1.leftNameGo_, true)

				local var_613_17 = arg_610_1:FormatText(StoryNameCfg[1109].name)

				arg_610_1.leftNameTxt_.text = var_613_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_610_1.leftNameTxt_.transform)

				arg_610_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_610_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_610_1:RecordName(arg_610_1.leftNameTxt_.text)
				SetActive(arg_610_1.iconTrs_.gameObject, false)
				arg_610_1.callingController_:SetSelectedState("normal")

				local var_613_18 = arg_610_1:GetWordFromCfg(417012147)
				local var_613_19 = arg_610_1:FormatText(var_613_18.content)

				arg_610_1.text_.text = var_613_19

				LuaForUtil.ClearLinePrefixSymbol(arg_610_1.text_)

				local var_613_20 = 5
				local var_613_21 = utf8.len(var_613_19)
				local var_613_22 = var_613_20 <= 0 and var_613_16 or var_613_16 * (var_613_21 / var_613_20)

				if var_613_22 > 0 and var_613_16 < var_613_22 then
					arg_610_1.talkMaxDuration = var_613_22

					if var_613_22 + var_613_15 > arg_610_1.duration_ then
						arg_610_1.duration_ = var_613_22 + var_613_15
					end
				end

				arg_610_1.text_.text = var_613_19
				arg_610_1.typewritter.percent = 0

				arg_610_1.typewritter:SetDirty()
				arg_610_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012147", "story_v_out_417012.awb") ~= 0 then
					local var_613_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012147", "story_v_out_417012.awb") / 1000

					if var_613_23 + var_613_15 > arg_610_1.duration_ then
						arg_610_1.duration_ = var_613_23 + var_613_15
					end

					if var_613_18.prefab_name ~= "" and arg_610_1.actors_[var_613_18.prefab_name] ~= nil then
						local var_613_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_610_1.actors_[var_613_18.prefab_name].transform, "story_v_out_417012", "417012147", "story_v_out_417012.awb")

						arg_610_1:RecordAudio("417012147", var_613_24)
						arg_610_1:RecordAudio("417012147", var_613_24)
					else
						arg_610_1:AudioAction("play", "voice", "story_v_out_417012", "417012147", "story_v_out_417012.awb")
					end

					arg_610_1:RecordHistoryTalkVoice("story_v_out_417012", "417012147", "story_v_out_417012.awb")
				end

				arg_610_1:RecordContent(arg_610_1.text_.text)
			end

			local var_613_25 = math.max(var_613_16, arg_610_1.talkMaxDuration)

			if var_613_15 <= arg_610_1.time_ and arg_610_1.time_ < var_613_15 + var_613_25 then
				arg_610_1.typewritter.percent = (arg_610_1.time_ - var_613_15) / var_613_25

				arg_610_1.typewritter:SetDirty()
			end

			if arg_610_1.time_ >= var_613_15 + var_613_25 and arg_610_1.time_ < var_613_15 + var_613_25 + arg_613_0 then
				arg_610_1.typewritter.percent = 1

				arg_610_1.typewritter:SetDirty()
				arg_610_1:ShowNextGo(true)
			end
		end
	end,
	Play417012148 = function(arg_614_0, arg_614_1)
		arg_614_1.time_ = 0
		arg_614_1.frameCnt_ = 0
		arg_614_1.state_ = "playing"
		arg_614_1.curTalkId_ = 417012148
		arg_614_1.duration_ = 11

		local var_614_0 = {
			zh = 5.433,
			ja = 11
		}
		local var_614_1 = manager.audio:GetLocalizationFlag()

		if var_614_0[var_614_1] ~= nil then
			arg_614_1.duration_ = var_614_0[var_614_1]
		end

		SetActive(arg_614_1.tipsGo_, false)

		function arg_614_1.onSingleLineFinish_()
			arg_614_1.onSingleLineUpdate_ = nil
			arg_614_1.onSingleLineFinish_ = nil
			arg_614_1.state_ = "waiting"
		end

		function arg_614_1.playNext_(arg_616_0)
			if arg_616_0 == 1 then
				arg_614_0:Play417012149(arg_614_1)
			end
		end

		function arg_614_1.onSingleLineUpdate_(arg_617_0)
			local var_617_0 = arg_614_1.actors_["1034"]
			local var_617_1 = 0

			if var_617_1 < arg_614_1.time_ and arg_614_1.time_ <= var_617_1 + arg_617_0 and not isNil(var_617_0) and arg_614_1.var_.actorSpriteComps1034 == nil then
				arg_614_1.var_.actorSpriteComps1034 = var_617_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_617_2 = 0.2

			if var_617_1 <= arg_614_1.time_ and arg_614_1.time_ < var_617_1 + var_617_2 and not isNil(var_617_0) then
				local var_617_3 = (arg_614_1.time_ - var_617_1) / var_617_2

				if arg_614_1.var_.actorSpriteComps1034 then
					for iter_617_0, iter_617_1 in pairs(arg_614_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_617_1 then
							if arg_614_1.isInRecall_ then
								local var_617_4 = Mathf.Lerp(iter_617_1.color.r, arg_614_1.hightColor2.r, var_617_3)
								local var_617_5 = Mathf.Lerp(iter_617_1.color.g, arg_614_1.hightColor2.g, var_617_3)
								local var_617_6 = Mathf.Lerp(iter_617_1.color.b, arg_614_1.hightColor2.b, var_617_3)

								iter_617_1.color = Color.New(var_617_4, var_617_5, var_617_6)
							else
								local var_617_7 = Mathf.Lerp(iter_617_1.color.r, 0.5, var_617_3)

								iter_617_1.color = Color.New(var_617_7, var_617_7, var_617_7)
							end
						end
					end
				end
			end

			if arg_614_1.time_ >= var_617_1 + var_617_2 and arg_614_1.time_ < var_617_1 + var_617_2 + arg_617_0 and not isNil(var_617_0) and arg_614_1.var_.actorSpriteComps1034 then
				for iter_617_2, iter_617_3 in pairs(arg_614_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_617_3 then
						if arg_614_1.isInRecall_ then
							iter_617_3.color = arg_614_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_617_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_614_1.var_.actorSpriteComps1034 = nil
			end

			local var_617_8 = 0
			local var_617_9 = 0.675

			if var_617_8 < arg_614_1.time_ and arg_614_1.time_ <= var_617_8 + arg_617_0 then
				arg_614_1.talkMaxDuration = 0
				arg_614_1.dialogCg_.alpha = 1

				arg_614_1.dialog_:SetActive(true)
				SetActive(arg_614_1.leftNameGo_, true)

				local var_617_10 = arg_614_1:FormatText(StoryNameCfg[1114].name)

				arg_614_1.leftNameTxt_.text = var_617_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_614_1.leftNameTxt_.transform)

				arg_614_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_614_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_614_1:RecordName(arg_614_1.leftNameTxt_.text)
				SetActive(arg_614_1.iconTrs_.gameObject, true)
				arg_614_1.iconController_:SetSelectedState("hero")

				arg_614_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_soundonly")

				arg_614_1.callingController_:SetSelectedState("calling")

				arg_614_1.keyicon_.color = Color.New(1, 1, 1)
				arg_614_1.icon_.color = Color.New(1, 1, 1)

				local var_617_11 = arg_614_1:GetWordFromCfg(417012148)
				local var_617_12 = arg_614_1:FormatText(var_617_11.content)

				arg_614_1.text_.text = var_617_12

				LuaForUtil.ClearLinePrefixSymbol(arg_614_1.text_)

				local var_617_13 = 27
				local var_617_14 = utf8.len(var_617_12)
				local var_617_15 = var_617_13 <= 0 and var_617_9 or var_617_9 * (var_617_14 / var_617_13)

				if var_617_15 > 0 and var_617_9 < var_617_15 then
					arg_614_1.talkMaxDuration = var_617_15

					if var_617_15 + var_617_8 > arg_614_1.duration_ then
						arg_614_1.duration_ = var_617_15 + var_617_8
					end
				end

				arg_614_1.text_.text = var_617_12
				arg_614_1.typewritter.percent = 0

				arg_614_1.typewritter:SetDirty()
				arg_614_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012148", "story_v_out_417012.awb") ~= 0 then
					local var_617_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012148", "story_v_out_417012.awb") / 1000

					if var_617_16 + var_617_8 > arg_614_1.duration_ then
						arg_614_1.duration_ = var_617_16 + var_617_8
					end

					if var_617_11.prefab_name ~= "" and arg_614_1.actors_[var_617_11.prefab_name] ~= nil then
						local var_617_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_614_1.actors_[var_617_11.prefab_name].transform, "story_v_out_417012", "417012148", "story_v_out_417012.awb")

						arg_614_1:RecordAudio("417012148", var_617_17)
						arg_614_1:RecordAudio("417012148", var_617_17)
					else
						arg_614_1:AudioAction("play", "voice", "story_v_out_417012", "417012148", "story_v_out_417012.awb")
					end

					arg_614_1:RecordHistoryTalkVoice("story_v_out_417012", "417012148", "story_v_out_417012.awb")
				end

				arg_614_1:RecordContent(arg_614_1.text_.text)
			end

			local var_617_18 = math.max(var_617_9, arg_614_1.talkMaxDuration)

			if var_617_8 <= arg_614_1.time_ and arg_614_1.time_ < var_617_8 + var_617_18 then
				arg_614_1.typewritter.percent = (arg_614_1.time_ - var_617_8) / var_617_18

				arg_614_1.typewritter:SetDirty()
			end

			if arg_614_1.time_ >= var_617_8 + var_617_18 and arg_614_1.time_ < var_617_8 + var_617_18 + arg_617_0 then
				arg_614_1.typewritter.percent = 1

				arg_614_1.typewritter:SetDirty()
				arg_614_1:ShowNextGo(true)
			end
		end
	end,
	Play417012149 = function(arg_618_0, arg_618_1)
		arg_618_1.time_ = 0
		arg_618_1.frameCnt_ = 0
		arg_618_1.state_ = "playing"
		arg_618_1.curTalkId_ = 417012149
		arg_618_1.duration_ = 2.1

		local var_618_0 = {
			zh = 1.6,
			ja = 2.1
		}
		local var_618_1 = manager.audio:GetLocalizationFlag()

		if var_618_0[var_618_1] ~= nil then
			arg_618_1.duration_ = var_618_0[var_618_1]
		end

		SetActive(arg_618_1.tipsGo_, false)

		function arg_618_1.onSingleLineFinish_()
			arg_618_1.onSingleLineUpdate_ = nil
			arg_618_1.onSingleLineFinish_ = nil
			arg_618_1.state_ = "waiting"
		end

		function arg_618_1.playNext_(arg_620_0)
			if arg_620_0 == 1 then
				arg_618_0:Play417012150(arg_618_1)
			end
		end

		function arg_618_1.onSingleLineUpdate_(arg_621_0)
			local var_621_0 = arg_618_1.actors_["1034"]
			local var_621_1 = 0

			if var_621_1 < arg_618_1.time_ and arg_618_1.time_ <= var_621_1 + arg_621_0 and not isNil(var_621_0) and arg_618_1.var_.actorSpriteComps1034 == nil then
				arg_618_1.var_.actorSpriteComps1034 = var_621_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_621_2 = 0.2

			if var_621_1 <= arg_618_1.time_ and arg_618_1.time_ < var_621_1 + var_621_2 and not isNil(var_621_0) then
				local var_621_3 = (arg_618_1.time_ - var_621_1) / var_621_2

				if arg_618_1.var_.actorSpriteComps1034 then
					for iter_621_0, iter_621_1 in pairs(arg_618_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_621_1 then
							if arg_618_1.isInRecall_ then
								local var_621_4 = Mathf.Lerp(iter_621_1.color.r, arg_618_1.hightColor1.r, var_621_3)
								local var_621_5 = Mathf.Lerp(iter_621_1.color.g, arg_618_1.hightColor1.g, var_621_3)
								local var_621_6 = Mathf.Lerp(iter_621_1.color.b, arg_618_1.hightColor1.b, var_621_3)

								iter_621_1.color = Color.New(var_621_4, var_621_5, var_621_6)
							else
								local var_621_7 = Mathf.Lerp(iter_621_1.color.r, 1, var_621_3)

								iter_621_1.color = Color.New(var_621_7, var_621_7, var_621_7)
							end
						end
					end
				end
			end

			if arg_618_1.time_ >= var_621_1 + var_621_2 and arg_618_1.time_ < var_621_1 + var_621_2 + arg_621_0 and not isNil(var_621_0) and arg_618_1.var_.actorSpriteComps1034 then
				for iter_621_2, iter_621_3 in pairs(arg_618_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_621_3 then
						if arg_618_1.isInRecall_ then
							iter_621_3.color = arg_618_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_621_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_618_1.var_.actorSpriteComps1034 = nil
			end

			local var_621_8 = arg_618_1.actors_["1034"].transform
			local var_621_9 = 0

			if var_621_9 < arg_618_1.time_ and arg_618_1.time_ <= var_621_9 + arg_621_0 then
				arg_618_1.var_.moveOldPos1034 = var_621_8.localPosition
				var_621_8.localScale = Vector3.New(1, 1, 1)

				arg_618_1:CheckSpriteTmpPos("1034", 3)

				local var_621_10 = var_621_8.childCount

				for iter_621_4 = 0, var_621_10 - 1 do
					local var_621_11 = var_621_8:GetChild(iter_621_4)

					if var_621_11.name == "split_4" or not string.find(var_621_11.name, "split") then
						var_621_11.gameObject:SetActive(true)
					else
						var_621_11.gameObject:SetActive(false)
					end
				end
			end

			local var_621_12 = 0.001

			if var_621_9 <= arg_618_1.time_ and arg_618_1.time_ < var_621_9 + var_621_12 then
				local var_621_13 = (arg_618_1.time_ - var_621_9) / var_621_12
				local var_621_14 = Vector3.New(0, -331.9, -324)

				var_621_8.localPosition = Vector3.Lerp(arg_618_1.var_.moveOldPos1034, var_621_14, var_621_13)
			end

			if arg_618_1.time_ >= var_621_9 + var_621_12 and arg_618_1.time_ < var_621_9 + var_621_12 + arg_621_0 then
				var_621_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_621_15 = 0
			local var_621_16 = 0.125

			if var_621_15 < arg_618_1.time_ and arg_618_1.time_ <= var_621_15 + arg_621_0 then
				arg_618_1.talkMaxDuration = 0
				arg_618_1.dialogCg_.alpha = 1

				arg_618_1.dialog_:SetActive(true)
				SetActive(arg_618_1.leftNameGo_, true)

				local var_621_17 = arg_618_1:FormatText(StoryNameCfg[1109].name)

				arg_618_1.leftNameTxt_.text = var_621_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_618_1.leftNameTxt_.transform)

				arg_618_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_618_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_618_1:RecordName(arg_618_1.leftNameTxt_.text)
				SetActive(arg_618_1.iconTrs_.gameObject, false)
				arg_618_1.callingController_:SetSelectedState("normal")

				local var_621_18 = arg_618_1:GetWordFromCfg(417012149)
				local var_621_19 = arg_618_1:FormatText(var_621_18.content)

				arg_618_1.text_.text = var_621_19

				LuaForUtil.ClearLinePrefixSymbol(arg_618_1.text_)

				local var_621_20 = 5
				local var_621_21 = utf8.len(var_621_19)
				local var_621_22 = var_621_20 <= 0 and var_621_16 or var_621_16 * (var_621_21 / var_621_20)

				if var_621_22 > 0 and var_621_16 < var_621_22 then
					arg_618_1.talkMaxDuration = var_621_22

					if var_621_22 + var_621_15 > arg_618_1.duration_ then
						arg_618_1.duration_ = var_621_22 + var_621_15
					end
				end

				arg_618_1.text_.text = var_621_19
				arg_618_1.typewritter.percent = 0

				arg_618_1.typewritter:SetDirty()
				arg_618_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012149", "story_v_out_417012.awb") ~= 0 then
					local var_621_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012149", "story_v_out_417012.awb") / 1000

					if var_621_23 + var_621_15 > arg_618_1.duration_ then
						arg_618_1.duration_ = var_621_23 + var_621_15
					end

					if var_621_18.prefab_name ~= "" and arg_618_1.actors_[var_621_18.prefab_name] ~= nil then
						local var_621_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_618_1.actors_[var_621_18.prefab_name].transform, "story_v_out_417012", "417012149", "story_v_out_417012.awb")

						arg_618_1:RecordAudio("417012149", var_621_24)
						arg_618_1:RecordAudio("417012149", var_621_24)
					else
						arg_618_1:AudioAction("play", "voice", "story_v_out_417012", "417012149", "story_v_out_417012.awb")
					end

					arg_618_1:RecordHistoryTalkVoice("story_v_out_417012", "417012149", "story_v_out_417012.awb")
				end

				arg_618_1:RecordContent(arg_618_1.text_.text)
			end

			local var_621_25 = math.max(var_621_16, arg_618_1.talkMaxDuration)

			if var_621_15 <= arg_618_1.time_ and arg_618_1.time_ < var_621_15 + var_621_25 then
				arg_618_1.typewritter.percent = (arg_618_1.time_ - var_621_15) / var_621_25

				arg_618_1.typewritter:SetDirty()
			end

			if arg_618_1.time_ >= var_621_15 + var_621_25 and arg_618_1.time_ < var_621_15 + var_621_25 + arg_621_0 then
				arg_618_1.typewritter.percent = 1

				arg_618_1.typewritter:SetDirty()
				arg_618_1:ShowNextGo(true)
			end
		end
	end,
	Play417012150 = function(arg_622_0, arg_622_1)
		arg_622_1.time_ = 0
		arg_622_1.frameCnt_ = 0
		arg_622_1.state_ = "playing"
		arg_622_1.curTalkId_ = 417012150
		arg_622_1.duration_ = 5

		SetActive(arg_622_1.tipsGo_, false)

		function arg_622_1.onSingleLineFinish_()
			arg_622_1.onSingleLineUpdate_ = nil
			arg_622_1.onSingleLineFinish_ = nil
			arg_622_1.state_ = "waiting"
		end

		function arg_622_1.playNext_(arg_624_0)
			if arg_624_0 == 1 then
				arg_622_0:Play417012151(arg_622_1)
			end
		end

		function arg_622_1.onSingleLineUpdate_(arg_625_0)
			local var_625_0 = arg_622_1.actors_["1034"]
			local var_625_1 = 0

			if var_625_1 < arg_622_1.time_ and arg_622_1.time_ <= var_625_1 + arg_625_0 and not isNil(var_625_0) and arg_622_1.var_.actorSpriteComps1034 == nil then
				arg_622_1.var_.actorSpriteComps1034 = var_625_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_625_2 = 0.2

			if var_625_1 <= arg_622_1.time_ and arg_622_1.time_ < var_625_1 + var_625_2 and not isNil(var_625_0) then
				local var_625_3 = (arg_622_1.time_ - var_625_1) / var_625_2

				if arg_622_1.var_.actorSpriteComps1034 then
					for iter_625_0, iter_625_1 in pairs(arg_622_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_625_1 then
							if arg_622_1.isInRecall_ then
								local var_625_4 = Mathf.Lerp(iter_625_1.color.r, arg_622_1.hightColor2.r, var_625_3)
								local var_625_5 = Mathf.Lerp(iter_625_1.color.g, arg_622_1.hightColor2.g, var_625_3)
								local var_625_6 = Mathf.Lerp(iter_625_1.color.b, arg_622_1.hightColor2.b, var_625_3)

								iter_625_1.color = Color.New(var_625_4, var_625_5, var_625_6)
							else
								local var_625_7 = Mathf.Lerp(iter_625_1.color.r, 0.5, var_625_3)

								iter_625_1.color = Color.New(var_625_7, var_625_7, var_625_7)
							end
						end
					end
				end
			end

			if arg_622_1.time_ >= var_625_1 + var_625_2 and arg_622_1.time_ < var_625_1 + var_625_2 + arg_625_0 and not isNil(var_625_0) and arg_622_1.var_.actorSpriteComps1034 then
				for iter_625_2, iter_625_3 in pairs(arg_622_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_625_3 then
						if arg_622_1.isInRecall_ then
							iter_625_3.color = arg_622_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_625_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_622_1.var_.actorSpriteComps1034 = nil
			end

			local var_625_8 = arg_622_1.actors_["1034"].transform
			local var_625_9 = 0

			if var_625_9 < arg_622_1.time_ and arg_622_1.time_ <= var_625_9 + arg_625_0 then
				arg_622_1.var_.moveOldPos1034 = var_625_8.localPosition
				var_625_8.localScale = Vector3.New(1, 1, 1)

				arg_622_1:CheckSpriteTmpPos("1034", 7)

				local var_625_10 = var_625_8.childCount

				for iter_625_4 = 0, var_625_10 - 1 do
					local var_625_11 = var_625_8:GetChild(iter_625_4)

					if var_625_11.name == "" or not string.find(var_625_11.name, "split") then
						var_625_11.gameObject:SetActive(true)
					else
						var_625_11.gameObject:SetActive(false)
					end
				end
			end

			local var_625_12 = 0.001

			if var_625_9 <= arg_622_1.time_ and arg_622_1.time_ < var_625_9 + var_625_12 then
				local var_625_13 = (arg_622_1.time_ - var_625_9) / var_625_12
				local var_625_14 = Vector3.New(0, -2000, 0)

				var_625_8.localPosition = Vector3.Lerp(arg_622_1.var_.moveOldPos1034, var_625_14, var_625_13)
			end

			if arg_622_1.time_ >= var_625_9 + var_625_12 and arg_622_1.time_ < var_625_9 + var_625_12 + arg_625_0 then
				var_625_8.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_625_15 = 0
			local var_625_16 = 1.075

			if var_625_15 < arg_622_1.time_ and arg_622_1.time_ <= var_625_15 + arg_625_0 then
				arg_622_1.talkMaxDuration = 0
				arg_622_1.dialogCg_.alpha = 1

				arg_622_1.dialog_:SetActive(true)
				SetActive(arg_622_1.leftNameGo_, false)

				arg_622_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_622_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_622_1:RecordName(arg_622_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_622_1.iconTrs_.gameObject, false)
				arg_622_1.callingController_:SetSelectedState("normal")

				local var_625_17 = arg_622_1:GetWordFromCfg(417012150)
				local var_625_18 = arg_622_1:FormatText(var_625_17.content)

				arg_622_1.text_.text = var_625_18

				LuaForUtil.ClearLinePrefixSymbol(arg_622_1.text_)

				local var_625_19 = 43
				local var_625_20 = utf8.len(var_625_18)
				local var_625_21 = var_625_19 <= 0 and var_625_16 or var_625_16 * (var_625_20 / var_625_19)

				if var_625_21 > 0 and var_625_16 < var_625_21 then
					arg_622_1.talkMaxDuration = var_625_21

					if var_625_21 + var_625_15 > arg_622_1.duration_ then
						arg_622_1.duration_ = var_625_21 + var_625_15
					end
				end

				arg_622_1.text_.text = var_625_18
				arg_622_1.typewritter.percent = 0

				arg_622_1.typewritter:SetDirty()
				arg_622_1:ShowNextGo(false)
				arg_622_1:RecordContent(arg_622_1.text_.text)
			end

			local var_625_22 = math.max(var_625_16, arg_622_1.talkMaxDuration)

			if var_625_15 <= arg_622_1.time_ and arg_622_1.time_ < var_625_15 + var_625_22 then
				arg_622_1.typewritter.percent = (arg_622_1.time_ - var_625_15) / var_625_22

				arg_622_1.typewritter:SetDirty()
			end

			if arg_622_1.time_ >= var_625_15 + var_625_22 and arg_622_1.time_ < var_625_15 + var_625_22 + arg_625_0 then
				arg_622_1.typewritter.percent = 1

				arg_622_1.typewritter:SetDirty()
				arg_622_1:ShowNextGo(true)
			end
		end
	end,
	Play417012151 = function(arg_626_0, arg_626_1)
		arg_626_1.time_ = 0
		arg_626_1.frameCnt_ = 0
		arg_626_1.state_ = "playing"
		arg_626_1.curTalkId_ = 417012151
		arg_626_1.duration_ = 3.17

		local var_626_0 = {
			zh = 1.533,
			ja = 3.166
		}
		local var_626_1 = manager.audio:GetLocalizationFlag()

		if var_626_0[var_626_1] ~= nil then
			arg_626_1.duration_ = var_626_0[var_626_1]
		end

		SetActive(arg_626_1.tipsGo_, false)

		function arg_626_1.onSingleLineFinish_()
			arg_626_1.onSingleLineUpdate_ = nil
			arg_626_1.onSingleLineFinish_ = nil
			arg_626_1.state_ = "waiting"
		end

		function arg_626_1.playNext_(arg_628_0)
			if arg_628_0 == 1 then
				arg_626_0:Play417012152(arg_626_1)
			end
		end

		function arg_626_1.onSingleLineUpdate_(arg_629_0)
			local var_629_0 = arg_626_1.actors_["10115"]
			local var_629_1 = 0

			if var_629_1 < arg_626_1.time_ and arg_626_1.time_ <= var_629_1 + arg_629_0 and not isNil(var_629_0) and arg_626_1.var_.actorSpriteComps10115 == nil then
				arg_626_1.var_.actorSpriteComps10115 = var_629_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_629_2 = 0.2

			if var_629_1 <= arg_626_1.time_ and arg_626_1.time_ < var_629_1 + var_629_2 and not isNil(var_629_0) then
				local var_629_3 = (arg_626_1.time_ - var_629_1) / var_629_2

				if arg_626_1.var_.actorSpriteComps10115 then
					for iter_629_0, iter_629_1 in pairs(arg_626_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_629_1 then
							if arg_626_1.isInRecall_ then
								local var_629_4 = Mathf.Lerp(iter_629_1.color.r, arg_626_1.hightColor1.r, var_629_3)
								local var_629_5 = Mathf.Lerp(iter_629_1.color.g, arg_626_1.hightColor1.g, var_629_3)
								local var_629_6 = Mathf.Lerp(iter_629_1.color.b, arg_626_1.hightColor1.b, var_629_3)

								iter_629_1.color = Color.New(var_629_4, var_629_5, var_629_6)
							else
								local var_629_7 = Mathf.Lerp(iter_629_1.color.r, 1, var_629_3)

								iter_629_1.color = Color.New(var_629_7, var_629_7, var_629_7)
							end
						end
					end
				end
			end

			if arg_626_1.time_ >= var_629_1 + var_629_2 and arg_626_1.time_ < var_629_1 + var_629_2 + arg_629_0 and not isNil(var_629_0) and arg_626_1.var_.actorSpriteComps10115 then
				for iter_629_2, iter_629_3 in pairs(arg_626_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_629_3 then
						if arg_626_1.isInRecall_ then
							iter_629_3.color = arg_626_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_629_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_626_1.var_.actorSpriteComps10115 = nil
			end

			local var_629_8 = arg_626_1.actors_["10115"].transform
			local var_629_9 = 0

			if var_629_9 < arg_626_1.time_ and arg_626_1.time_ <= var_629_9 + arg_629_0 then
				arg_626_1.var_.moveOldPos10115 = var_629_8.localPosition
				var_629_8.localScale = Vector3.New(1, 1, 1)

				arg_626_1:CheckSpriteTmpPos("10115", 4)

				local var_629_10 = var_629_8.childCount

				for iter_629_4 = 0, var_629_10 - 1 do
					local var_629_11 = var_629_8:GetChild(iter_629_4)

					if var_629_11.name == "split_5" or not string.find(var_629_11.name, "split") then
						var_629_11.gameObject:SetActive(true)
					else
						var_629_11.gameObject:SetActive(false)
					end
				end
			end

			local var_629_12 = 0.001

			if var_629_9 <= arg_626_1.time_ and arg_626_1.time_ < var_629_9 + var_629_12 then
				local var_629_13 = (arg_626_1.time_ - var_629_9) / var_629_12
				local var_629_14 = Vector3.New(390, -387.3, -246.2)

				var_629_8.localPosition = Vector3.Lerp(arg_626_1.var_.moveOldPos10115, var_629_14, var_629_13)
			end

			if arg_626_1.time_ >= var_629_9 + var_629_12 and arg_626_1.time_ < var_629_9 + var_629_12 + arg_629_0 then
				var_629_8.localPosition = Vector3.New(390, -387.3, -246.2)
			end

			local var_629_15 = 0
			local var_629_16 = 0.125

			if var_629_15 < arg_626_1.time_ and arg_626_1.time_ <= var_629_15 + arg_629_0 then
				arg_626_1.talkMaxDuration = 0
				arg_626_1.dialogCg_.alpha = 1

				arg_626_1.dialog_:SetActive(true)
				SetActive(arg_626_1.leftNameGo_, true)

				local var_629_17 = arg_626_1:FormatText(StoryNameCfg[1113].name)

				arg_626_1.leftNameTxt_.text = var_629_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_626_1.leftNameTxt_.transform)

				arg_626_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_626_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_626_1:RecordName(arg_626_1.leftNameTxt_.text)
				SetActive(arg_626_1.iconTrs_.gameObject, false)
				arg_626_1.callingController_:SetSelectedState("normal")

				local var_629_18 = arg_626_1:GetWordFromCfg(417012151)
				local var_629_19 = arg_626_1:FormatText(var_629_18.content)

				arg_626_1.text_.text = var_629_19

				LuaForUtil.ClearLinePrefixSymbol(arg_626_1.text_)

				local var_629_20 = 5
				local var_629_21 = utf8.len(var_629_19)
				local var_629_22 = var_629_20 <= 0 and var_629_16 or var_629_16 * (var_629_21 / var_629_20)

				if var_629_22 > 0 and var_629_16 < var_629_22 then
					arg_626_1.talkMaxDuration = var_629_22

					if var_629_22 + var_629_15 > arg_626_1.duration_ then
						arg_626_1.duration_ = var_629_22 + var_629_15
					end
				end

				arg_626_1.text_.text = var_629_19
				arg_626_1.typewritter.percent = 0

				arg_626_1.typewritter:SetDirty()
				arg_626_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012151", "story_v_out_417012.awb") ~= 0 then
					local var_629_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012151", "story_v_out_417012.awb") / 1000

					if var_629_23 + var_629_15 > arg_626_1.duration_ then
						arg_626_1.duration_ = var_629_23 + var_629_15
					end

					if var_629_18.prefab_name ~= "" and arg_626_1.actors_[var_629_18.prefab_name] ~= nil then
						local var_629_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_626_1.actors_[var_629_18.prefab_name].transform, "story_v_out_417012", "417012151", "story_v_out_417012.awb")

						arg_626_1:RecordAudio("417012151", var_629_24)
						arg_626_1:RecordAudio("417012151", var_629_24)
					else
						arg_626_1:AudioAction("play", "voice", "story_v_out_417012", "417012151", "story_v_out_417012.awb")
					end

					arg_626_1:RecordHistoryTalkVoice("story_v_out_417012", "417012151", "story_v_out_417012.awb")
				end

				arg_626_1:RecordContent(arg_626_1.text_.text)
			end

			local var_629_25 = math.max(var_629_16, arg_626_1.talkMaxDuration)

			if var_629_15 <= arg_626_1.time_ and arg_626_1.time_ < var_629_15 + var_629_25 then
				arg_626_1.typewritter.percent = (arg_626_1.time_ - var_629_15) / var_629_25

				arg_626_1.typewritter:SetDirty()
			end

			if arg_626_1.time_ >= var_629_15 + var_629_25 and arg_626_1.time_ < var_629_15 + var_629_25 + arg_629_0 then
				arg_626_1.typewritter.percent = 1

				arg_626_1.typewritter:SetDirty()
				arg_626_1:ShowNextGo(true)
			end
		end
	end,
	Play417012152 = function(arg_630_0, arg_630_1)
		arg_630_1.time_ = 0
		arg_630_1.frameCnt_ = 0
		arg_630_1.state_ = "playing"
		arg_630_1.curTalkId_ = 417012152
		arg_630_1.duration_ = 11.8

		local var_630_0 = {
			zh = 7.866,
			ja = 11.8
		}
		local var_630_1 = manager.audio:GetLocalizationFlag()

		if var_630_0[var_630_1] ~= nil then
			arg_630_1.duration_ = var_630_0[var_630_1]
		end

		SetActive(arg_630_1.tipsGo_, false)

		function arg_630_1.onSingleLineFinish_()
			arg_630_1.onSingleLineUpdate_ = nil
			arg_630_1.onSingleLineFinish_ = nil
			arg_630_1.state_ = "waiting"
		end

		function arg_630_1.playNext_(arg_632_0)
			if arg_632_0 == 1 then
				arg_630_0:Play417012153(arg_630_1)
			end
		end

		function arg_630_1.onSingleLineUpdate_(arg_633_0)
			local var_633_0 = arg_630_1.actors_["1034"]
			local var_633_1 = 0

			if var_633_1 < arg_630_1.time_ and arg_630_1.time_ <= var_633_1 + arg_633_0 and not isNil(var_633_0) and arg_630_1.var_.actorSpriteComps1034 == nil then
				arg_630_1.var_.actorSpriteComps1034 = var_633_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_633_2 = 0.2

			if var_633_1 <= arg_630_1.time_ and arg_630_1.time_ < var_633_1 + var_633_2 and not isNil(var_633_0) then
				local var_633_3 = (arg_630_1.time_ - var_633_1) / var_633_2

				if arg_630_1.var_.actorSpriteComps1034 then
					for iter_633_0, iter_633_1 in pairs(arg_630_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_633_1 then
							if arg_630_1.isInRecall_ then
								local var_633_4 = Mathf.Lerp(iter_633_1.color.r, arg_630_1.hightColor1.r, var_633_3)
								local var_633_5 = Mathf.Lerp(iter_633_1.color.g, arg_630_1.hightColor1.g, var_633_3)
								local var_633_6 = Mathf.Lerp(iter_633_1.color.b, arg_630_1.hightColor1.b, var_633_3)

								iter_633_1.color = Color.New(var_633_4, var_633_5, var_633_6)
							else
								local var_633_7 = Mathf.Lerp(iter_633_1.color.r, 1, var_633_3)

								iter_633_1.color = Color.New(var_633_7, var_633_7, var_633_7)
							end
						end
					end
				end
			end

			if arg_630_1.time_ >= var_633_1 + var_633_2 and arg_630_1.time_ < var_633_1 + var_633_2 + arg_633_0 and not isNil(var_633_0) and arg_630_1.var_.actorSpriteComps1034 then
				for iter_633_2, iter_633_3 in pairs(arg_630_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_633_3 then
						if arg_630_1.isInRecall_ then
							iter_633_3.color = arg_630_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_633_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_630_1.var_.actorSpriteComps1034 = nil
			end

			local var_633_8 = arg_630_1.actors_["10115"]
			local var_633_9 = 0

			if var_633_9 < arg_630_1.time_ and arg_630_1.time_ <= var_633_9 + arg_633_0 and not isNil(var_633_8) and arg_630_1.var_.actorSpriteComps10115 == nil then
				arg_630_1.var_.actorSpriteComps10115 = var_633_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_633_10 = 0.2

			if var_633_9 <= arg_630_1.time_ and arg_630_1.time_ < var_633_9 + var_633_10 and not isNil(var_633_8) then
				local var_633_11 = (arg_630_1.time_ - var_633_9) / var_633_10

				if arg_630_1.var_.actorSpriteComps10115 then
					for iter_633_4, iter_633_5 in pairs(arg_630_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_633_5 then
							if arg_630_1.isInRecall_ then
								local var_633_12 = Mathf.Lerp(iter_633_5.color.r, arg_630_1.hightColor2.r, var_633_11)
								local var_633_13 = Mathf.Lerp(iter_633_5.color.g, arg_630_1.hightColor2.g, var_633_11)
								local var_633_14 = Mathf.Lerp(iter_633_5.color.b, arg_630_1.hightColor2.b, var_633_11)

								iter_633_5.color = Color.New(var_633_12, var_633_13, var_633_14)
							else
								local var_633_15 = Mathf.Lerp(iter_633_5.color.r, 0.5, var_633_11)

								iter_633_5.color = Color.New(var_633_15, var_633_15, var_633_15)
							end
						end
					end
				end
			end

			if arg_630_1.time_ >= var_633_9 + var_633_10 and arg_630_1.time_ < var_633_9 + var_633_10 + arg_633_0 and not isNil(var_633_8) and arg_630_1.var_.actorSpriteComps10115 then
				for iter_633_6, iter_633_7 in pairs(arg_630_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_633_7 then
						if arg_630_1.isInRecall_ then
							iter_633_7.color = arg_630_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_633_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_630_1.var_.actorSpriteComps10115 = nil
			end

			local var_633_16 = arg_630_1.actors_["1034"].transform
			local var_633_17 = 0

			if var_633_17 < arg_630_1.time_ and arg_630_1.time_ <= var_633_17 + arg_633_0 then
				arg_630_1.var_.moveOldPos1034 = var_633_16.localPosition
				var_633_16.localScale = Vector3.New(1, 1, 1)

				arg_630_1:CheckSpriteTmpPos("1034", 2)

				local var_633_18 = var_633_16.childCount

				for iter_633_8 = 0, var_633_18 - 1 do
					local var_633_19 = var_633_16:GetChild(iter_633_8)

					if var_633_19.name == "split_4" or not string.find(var_633_19.name, "split") then
						var_633_19.gameObject:SetActive(true)
					else
						var_633_19.gameObject:SetActive(false)
					end
				end
			end

			local var_633_20 = 0.001

			if var_633_17 <= arg_630_1.time_ and arg_630_1.time_ < var_633_17 + var_633_20 then
				local var_633_21 = (arg_630_1.time_ - var_633_17) / var_633_20
				local var_633_22 = Vector3.New(-390, -331.9, -324)

				var_633_16.localPosition = Vector3.Lerp(arg_630_1.var_.moveOldPos1034, var_633_22, var_633_21)
			end

			if arg_630_1.time_ >= var_633_17 + var_633_20 and arg_630_1.time_ < var_633_17 + var_633_20 + arg_633_0 then
				var_633_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_633_23 = 0
			local var_633_24 = 0.975

			if var_633_23 < arg_630_1.time_ and arg_630_1.time_ <= var_633_23 + arg_633_0 then
				arg_630_1.talkMaxDuration = 0
				arg_630_1.dialogCg_.alpha = 1

				arg_630_1.dialog_:SetActive(true)
				SetActive(arg_630_1.leftNameGo_, true)

				local var_633_25 = arg_630_1:FormatText(StoryNameCfg[1109].name)

				arg_630_1.leftNameTxt_.text = var_633_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_630_1.leftNameTxt_.transform)

				arg_630_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_630_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_630_1:RecordName(arg_630_1.leftNameTxt_.text)
				SetActive(arg_630_1.iconTrs_.gameObject, false)
				arg_630_1.callingController_:SetSelectedState("normal")

				local var_633_26 = arg_630_1:GetWordFromCfg(417012152)
				local var_633_27 = arg_630_1:FormatText(var_633_26.content)

				arg_630_1.text_.text = var_633_27

				LuaForUtil.ClearLinePrefixSymbol(arg_630_1.text_)

				local var_633_28 = 39
				local var_633_29 = utf8.len(var_633_27)
				local var_633_30 = var_633_28 <= 0 and var_633_24 or var_633_24 * (var_633_29 / var_633_28)

				if var_633_30 > 0 and var_633_24 < var_633_30 then
					arg_630_1.talkMaxDuration = var_633_30

					if var_633_30 + var_633_23 > arg_630_1.duration_ then
						arg_630_1.duration_ = var_633_30 + var_633_23
					end
				end

				arg_630_1.text_.text = var_633_27
				arg_630_1.typewritter.percent = 0

				arg_630_1.typewritter:SetDirty()
				arg_630_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012152", "story_v_out_417012.awb") ~= 0 then
					local var_633_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012152", "story_v_out_417012.awb") / 1000

					if var_633_31 + var_633_23 > arg_630_1.duration_ then
						arg_630_1.duration_ = var_633_31 + var_633_23
					end

					if var_633_26.prefab_name ~= "" and arg_630_1.actors_[var_633_26.prefab_name] ~= nil then
						local var_633_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_630_1.actors_[var_633_26.prefab_name].transform, "story_v_out_417012", "417012152", "story_v_out_417012.awb")

						arg_630_1:RecordAudio("417012152", var_633_32)
						arg_630_1:RecordAudio("417012152", var_633_32)
					else
						arg_630_1:AudioAction("play", "voice", "story_v_out_417012", "417012152", "story_v_out_417012.awb")
					end

					arg_630_1:RecordHistoryTalkVoice("story_v_out_417012", "417012152", "story_v_out_417012.awb")
				end

				arg_630_1:RecordContent(arg_630_1.text_.text)
			end

			local var_633_33 = math.max(var_633_24, arg_630_1.talkMaxDuration)

			if var_633_23 <= arg_630_1.time_ and arg_630_1.time_ < var_633_23 + var_633_33 then
				arg_630_1.typewritter.percent = (arg_630_1.time_ - var_633_23) / var_633_33

				arg_630_1.typewritter:SetDirty()
			end

			if arg_630_1.time_ >= var_633_23 + var_633_33 and arg_630_1.time_ < var_633_23 + var_633_33 + arg_633_0 then
				arg_630_1.typewritter.percent = 1

				arg_630_1.typewritter:SetDirty()
				arg_630_1:ShowNextGo(true)
			end
		end
	end,
	Play417012153 = function(arg_634_0, arg_634_1)
		arg_634_1.time_ = 0
		arg_634_1.frameCnt_ = 0
		arg_634_1.state_ = "playing"
		arg_634_1.curTalkId_ = 417012153
		arg_634_1.duration_ = 12.03

		local var_634_0 = {
			zh = 6.033,
			ja = 12.033
		}
		local var_634_1 = manager.audio:GetLocalizationFlag()

		if var_634_0[var_634_1] ~= nil then
			arg_634_1.duration_ = var_634_0[var_634_1]
		end

		SetActive(arg_634_1.tipsGo_, false)

		function arg_634_1.onSingleLineFinish_()
			arg_634_1.onSingleLineUpdate_ = nil
			arg_634_1.onSingleLineFinish_ = nil
			arg_634_1.state_ = "waiting"
		end

		function arg_634_1.playNext_(arg_636_0)
			if arg_636_0 == 1 then
				arg_634_0:Play417012154(arg_634_1)
			end
		end

		function arg_634_1.onSingleLineUpdate_(arg_637_0)
			local var_637_0 = arg_634_1.actors_["10115"]
			local var_637_1 = 0

			if var_637_1 < arg_634_1.time_ and arg_634_1.time_ <= var_637_1 + arg_637_0 and not isNil(var_637_0) and arg_634_1.var_.actorSpriteComps10115 == nil then
				arg_634_1.var_.actorSpriteComps10115 = var_637_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_637_2 = 0.2

			if var_637_1 <= arg_634_1.time_ and arg_634_1.time_ < var_637_1 + var_637_2 and not isNil(var_637_0) then
				local var_637_3 = (arg_634_1.time_ - var_637_1) / var_637_2

				if arg_634_1.var_.actorSpriteComps10115 then
					for iter_637_0, iter_637_1 in pairs(arg_634_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_637_1 then
							if arg_634_1.isInRecall_ then
								local var_637_4 = Mathf.Lerp(iter_637_1.color.r, arg_634_1.hightColor1.r, var_637_3)
								local var_637_5 = Mathf.Lerp(iter_637_1.color.g, arg_634_1.hightColor1.g, var_637_3)
								local var_637_6 = Mathf.Lerp(iter_637_1.color.b, arg_634_1.hightColor1.b, var_637_3)

								iter_637_1.color = Color.New(var_637_4, var_637_5, var_637_6)
							else
								local var_637_7 = Mathf.Lerp(iter_637_1.color.r, 1, var_637_3)

								iter_637_1.color = Color.New(var_637_7, var_637_7, var_637_7)
							end
						end
					end
				end
			end

			if arg_634_1.time_ >= var_637_1 + var_637_2 and arg_634_1.time_ < var_637_1 + var_637_2 + arg_637_0 and not isNil(var_637_0) and arg_634_1.var_.actorSpriteComps10115 then
				for iter_637_2, iter_637_3 in pairs(arg_634_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_637_3 then
						if arg_634_1.isInRecall_ then
							iter_637_3.color = arg_634_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_637_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_634_1.var_.actorSpriteComps10115 = nil
			end

			local var_637_8 = arg_634_1.actors_["1034"]
			local var_637_9 = 0

			if var_637_9 < arg_634_1.time_ and arg_634_1.time_ <= var_637_9 + arg_637_0 and not isNil(var_637_8) and arg_634_1.var_.actorSpriteComps1034 == nil then
				arg_634_1.var_.actorSpriteComps1034 = var_637_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_637_10 = 0.2

			if var_637_9 <= arg_634_1.time_ and arg_634_1.time_ < var_637_9 + var_637_10 and not isNil(var_637_8) then
				local var_637_11 = (arg_634_1.time_ - var_637_9) / var_637_10

				if arg_634_1.var_.actorSpriteComps1034 then
					for iter_637_4, iter_637_5 in pairs(arg_634_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_637_5 then
							if arg_634_1.isInRecall_ then
								local var_637_12 = Mathf.Lerp(iter_637_5.color.r, arg_634_1.hightColor2.r, var_637_11)
								local var_637_13 = Mathf.Lerp(iter_637_5.color.g, arg_634_1.hightColor2.g, var_637_11)
								local var_637_14 = Mathf.Lerp(iter_637_5.color.b, arg_634_1.hightColor2.b, var_637_11)

								iter_637_5.color = Color.New(var_637_12, var_637_13, var_637_14)
							else
								local var_637_15 = Mathf.Lerp(iter_637_5.color.r, 0.5, var_637_11)

								iter_637_5.color = Color.New(var_637_15, var_637_15, var_637_15)
							end
						end
					end
				end
			end

			if arg_634_1.time_ >= var_637_9 + var_637_10 and arg_634_1.time_ < var_637_9 + var_637_10 + arg_637_0 and not isNil(var_637_8) and arg_634_1.var_.actorSpriteComps1034 then
				for iter_637_6, iter_637_7 in pairs(arg_634_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_637_7 then
						if arg_634_1.isInRecall_ then
							iter_637_7.color = arg_634_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_637_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_634_1.var_.actorSpriteComps1034 = nil
			end

			local var_637_16 = arg_634_1.actors_["10115"].transform
			local var_637_17 = 0

			if var_637_17 < arg_634_1.time_ and arg_634_1.time_ <= var_637_17 + arg_637_0 then
				arg_634_1.var_.moveOldPos10115 = var_637_16.localPosition
				var_637_16.localScale = Vector3.New(1, 1, 1)

				arg_634_1:CheckSpriteTmpPos("10115", 4)

				local var_637_18 = var_637_16.childCount

				for iter_637_8 = 0, var_637_18 - 1 do
					local var_637_19 = var_637_16:GetChild(iter_637_8)

					if var_637_19.name == "split_4" or not string.find(var_637_19.name, "split") then
						var_637_19.gameObject:SetActive(true)
					else
						var_637_19.gameObject:SetActive(false)
					end
				end
			end

			local var_637_20 = 0.001

			if var_637_17 <= arg_634_1.time_ and arg_634_1.time_ < var_637_17 + var_637_20 then
				local var_637_21 = (arg_634_1.time_ - var_637_17) / var_637_20
				local var_637_22 = Vector3.New(390, -387.3, -246.2)

				var_637_16.localPosition = Vector3.Lerp(arg_634_1.var_.moveOldPos10115, var_637_22, var_637_21)
			end

			if arg_634_1.time_ >= var_637_17 + var_637_20 and arg_634_1.time_ < var_637_17 + var_637_20 + arg_637_0 then
				var_637_16.localPosition = Vector3.New(390, -387.3, -246.2)
			end

			local var_637_23 = 0
			local var_637_24 = 0.65

			if var_637_23 < arg_634_1.time_ and arg_634_1.time_ <= var_637_23 + arg_637_0 then
				arg_634_1.talkMaxDuration = 0
				arg_634_1.dialogCg_.alpha = 1

				arg_634_1.dialog_:SetActive(true)
				SetActive(arg_634_1.leftNameGo_, true)

				local var_637_25 = arg_634_1:FormatText(StoryNameCfg[1113].name)

				arg_634_1.leftNameTxt_.text = var_637_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_634_1.leftNameTxt_.transform)

				arg_634_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_634_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_634_1:RecordName(arg_634_1.leftNameTxt_.text)
				SetActive(arg_634_1.iconTrs_.gameObject, false)
				arg_634_1.callingController_:SetSelectedState("normal")

				local var_637_26 = arg_634_1:GetWordFromCfg(417012153)
				local var_637_27 = arg_634_1:FormatText(var_637_26.content)

				arg_634_1.text_.text = var_637_27

				LuaForUtil.ClearLinePrefixSymbol(arg_634_1.text_)

				local var_637_28 = 26
				local var_637_29 = utf8.len(var_637_27)
				local var_637_30 = var_637_28 <= 0 and var_637_24 or var_637_24 * (var_637_29 / var_637_28)

				if var_637_30 > 0 and var_637_24 < var_637_30 then
					arg_634_1.talkMaxDuration = var_637_30

					if var_637_30 + var_637_23 > arg_634_1.duration_ then
						arg_634_1.duration_ = var_637_30 + var_637_23
					end
				end

				arg_634_1.text_.text = var_637_27
				arg_634_1.typewritter.percent = 0

				arg_634_1.typewritter:SetDirty()
				arg_634_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012153", "story_v_out_417012.awb") ~= 0 then
					local var_637_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012153", "story_v_out_417012.awb") / 1000

					if var_637_31 + var_637_23 > arg_634_1.duration_ then
						arg_634_1.duration_ = var_637_31 + var_637_23
					end

					if var_637_26.prefab_name ~= "" and arg_634_1.actors_[var_637_26.prefab_name] ~= nil then
						local var_637_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_634_1.actors_[var_637_26.prefab_name].transform, "story_v_out_417012", "417012153", "story_v_out_417012.awb")

						arg_634_1:RecordAudio("417012153", var_637_32)
						arg_634_1:RecordAudio("417012153", var_637_32)
					else
						arg_634_1:AudioAction("play", "voice", "story_v_out_417012", "417012153", "story_v_out_417012.awb")
					end

					arg_634_1:RecordHistoryTalkVoice("story_v_out_417012", "417012153", "story_v_out_417012.awb")
				end

				arg_634_1:RecordContent(arg_634_1.text_.text)
			end

			local var_637_33 = math.max(var_637_24, arg_634_1.talkMaxDuration)

			if var_637_23 <= arg_634_1.time_ and arg_634_1.time_ < var_637_23 + var_637_33 then
				arg_634_1.typewritter.percent = (arg_634_1.time_ - var_637_23) / var_637_33

				arg_634_1.typewritter:SetDirty()
			end

			if arg_634_1.time_ >= var_637_23 + var_637_33 and arg_634_1.time_ < var_637_23 + var_637_33 + arg_637_0 then
				arg_634_1.typewritter.percent = 1

				arg_634_1.typewritter:SetDirty()
				arg_634_1:ShowNextGo(true)
			end
		end
	end,
	Play417012154 = function(arg_638_0, arg_638_1)
		arg_638_1.time_ = 0
		arg_638_1.frameCnt_ = 0
		arg_638_1.state_ = "playing"
		arg_638_1.curTalkId_ = 417012154
		arg_638_1.duration_ = 13.13

		local var_638_0 = {
			zh = 8.033,
			ja = 13.133
		}
		local var_638_1 = manager.audio:GetLocalizationFlag()

		if var_638_0[var_638_1] ~= nil then
			arg_638_1.duration_ = var_638_0[var_638_1]
		end

		SetActive(arg_638_1.tipsGo_, false)

		function arg_638_1.onSingleLineFinish_()
			arg_638_1.onSingleLineUpdate_ = nil
			arg_638_1.onSingleLineFinish_ = nil
			arg_638_1.state_ = "waiting"
		end

		function arg_638_1.playNext_(arg_640_0)
			if arg_640_0 == 1 then
				arg_638_0:Play417012155(arg_638_1)
			end
		end

		function arg_638_1.onSingleLineUpdate_(arg_641_0)
			local var_641_0 = 0
			local var_641_1 = 1.175

			if var_641_0 < arg_638_1.time_ and arg_638_1.time_ <= var_641_0 + arg_641_0 then
				arg_638_1.talkMaxDuration = 0
				arg_638_1.dialogCg_.alpha = 1

				arg_638_1.dialog_:SetActive(true)
				SetActive(arg_638_1.leftNameGo_, true)

				local var_641_2 = arg_638_1:FormatText(StoryNameCfg[1113].name)

				arg_638_1.leftNameTxt_.text = var_641_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_638_1.leftNameTxt_.transform)

				arg_638_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_638_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_638_1:RecordName(arg_638_1.leftNameTxt_.text)
				SetActive(arg_638_1.iconTrs_.gameObject, false)
				arg_638_1.callingController_:SetSelectedState("normal")

				local var_641_3 = arg_638_1:GetWordFromCfg(417012154)
				local var_641_4 = arg_638_1:FormatText(var_641_3.content)

				arg_638_1.text_.text = var_641_4

				LuaForUtil.ClearLinePrefixSymbol(arg_638_1.text_)

				local var_641_5 = 47
				local var_641_6 = utf8.len(var_641_4)
				local var_641_7 = var_641_5 <= 0 and var_641_1 or var_641_1 * (var_641_6 / var_641_5)

				if var_641_7 > 0 and var_641_1 < var_641_7 then
					arg_638_1.talkMaxDuration = var_641_7

					if var_641_7 + var_641_0 > arg_638_1.duration_ then
						arg_638_1.duration_ = var_641_7 + var_641_0
					end
				end

				arg_638_1.text_.text = var_641_4
				arg_638_1.typewritter.percent = 0

				arg_638_1.typewritter:SetDirty()
				arg_638_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012154", "story_v_out_417012.awb") ~= 0 then
					local var_641_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012154", "story_v_out_417012.awb") / 1000

					if var_641_8 + var_641_0 > arg_638_1.duration_ then
						arg_638_1.duration_ = var_641_8 + var_641_0
					end

					if var_641_3.prefab_name ~= "" and arg_638_1.actors_[var_641_3.prefab_name] ~= nil then
						local var_641_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_638_1.actors_[var_641_3.prefab_name].transform, "story_v_out_417012", "417012154", "story_v_out_417012.awb")

						arg_638_1:RecordAudio("417012154", var_641_9)
						arg_638_1:RecordAudio("417012154", var_641_9)
					else
						arg_638_1:AudioAction("play", "voice", "story_v_out_417012", "417012154", "story_v_out_417012.awb")
					end

					arg_638_1:RecordHistoryTalkVoice("story_v_out_417012", "417012154", "story_v_out_417012.awb")
				end

				arg_638_1:RecordContent(arg_638_1.text_.text)
			end

			local var_641_10 = math.max(var_641_1, arg_638_1.talkMaxDuration)

			if var_641_0 <= arg_638_1.time_ and arg_638_1.time_ < var_641_0 + var_641_10 then
				arg_638_1.typewritter.percent = (arg_638_1.time_ - var_641_0) / var_641_10

				arg_638_1.typewritter:SetDirty()
			end

			if arg_638_1.time_ >= var_641_0 + var_641_10 and arg_638_1.time_ < var_641_0 + var_641_10 + arg_641_0 then
				arg_638_1.typewritter.percent = 1

				arg_638_1.typewritter:SetDirty()
				arg_638_1:ShowNextGo(true)
			end
		end
	end,
	Play417012155 = function(arg_642_0, arg_642_1)
		arg_642_1.time_ = 0
		arg_642_1.frameCnt_ = 0
		arg_642_1.state_ = "playing"
		arg_642_1.curTalkId_ = 417012155
		arg_642_1.duration_ = 4.23

		local var_642_0 = {
			zh = 2.933,
			ja = 4.233
		}
		local var_642_1 = manager.audio:GetLocalizationFlag()

		if var_642_0[var_642_1] ~= nil then
			arg_642_1.duration_ = var_642_0[var_642_1]
		end

		SetActive(arg_642_1.tipsGo_, false)

		function arg_642_1.onSingleLineFinish_()
			arg_642_1.onSingleLineUpdate_ = nil
			arg_642_1.onSingleLineFinish_ = nil
			arg_642_1.state_ = "waiting"
		end

		function arg_642_1.playNext_(arg_644_0)
			if arg_644_0 == 1 then
				arg_642_0:Play417012156(arg_642_1)
			end
		end

		function arg_642_1.onSingleLineUpdate_(arg_645_0)
			local var_645_0 = arg_642_1.actors_["1034"]
			local var_645_1 = 0

			if var_645_1 < arg_642_1.time_ and arg_642_1.time_ <= var_645_1 + arg_645_0 and not isNil(var_645_0) and arg_642_1.var_.actorSpriteComps1034 == nil then
				arg_642_1.var_.actorSpriteComps1034 = var_645_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_645_2 = 0.2

			if var_645_1 <= arg_642_1.time_ and arg_642_1.time_ < var_645_1 + var_645_2 and not isNil(var_645_0) then
				local var_645_3 = (arg_642_1.time_ - var_645_1) / var_645_2

				if arg_642_1.var_.actorSpriteComps1034 then
					for iter_645_0, iter_645_1 in pairs(arg_642_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_645_1 then
							if arg_642_1.isInRecall_ then
								local var_645_4 = Mathf.Lerp(iter_645_1.color.r, arg_642_1.hightColor1.r, var_645_3)
								local var_645_5 = Mathf.Lerp(iter_645_1.color.g, arg_642_1.hightColor1.g, var_645_3)
								local var_645_6 = Mathf.Lerp(iter_645_1.color.b, arg_642_1.hightColor1.b, var_645_3)

								iter_645_1.color = Color.New(var_645_4, var_645_5, var_645_6)
							else
								local var_645_7 = Mathf.Lerp(iter_645_1.color.r, 1, var_645_3)

								iter_645_1.color = Color.New(var_645_7, var_645_7, var_645_7)
							end
						end
					end
				end
			end

			if arg_642_1.time_ >= var_645_1 + var_645_2 and arg_642_1.time_ < var_645_1 + var_645_2 + arg_645_0 and not isNil(var_645_0) and arg_642_1.var_.actorSpriteComps1034 then
				for iter_645_2, iter_645_3 in pairs(arg_642_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_645_3 then
						if arg_642_1.isInRecall_ then
							iter_645_3.color = arg_642_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_645_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_642_1.var_.actorSpriteComps1034 = nil
			end

			local var_645_8 = arg_642_1.actors_["10115"]
			local var_645_9 = 0

			if var_645_9 < arg_642_1.time_ and arg_642_1.time_ <= var_645_9 + arg_645_0 and not isNil(var_645_8) and arg_642_1.var_.actorSpriteComps10115 == nil then
				arg_642_1.var_.actorSpriteComps10115 = var_645_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_645_10 = 0.2

			if var_645_9 <= arg_642_1.time_ and arg_642_1.time_ < var_645_9 + var_645_10 and not isNil(var_645_8) then
				local var_645_11 = (arg_642_1.time_ - var_645_9) / var_645_10

				if arg_642_1.var_.actorSpriteComps10115 then
					for iter_645_4, iter_645_5 in pairs(arg_642_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_645_5 then
							if arg_642_1.isInRecall_ then
								local var_645_12 = Mathf.Lerp(iter_645_5.color.r, arg_642_1.hightColor2.r, var_645_11)
								local var_645_13 = Mathf.Lerp(iter_645_5.color.g, arg_642_1.hightColor2.g, var_645_11)
								local var_645_14 = Mathf.Lerp(iter_645_5.color.b, arg_642_1.hightColor2.b, var_645_11)

								iter_645_5.color = Color.New(var_645_12, var_645_13, var_645_14)
							else
								local var_645_15 = Mathf.Lerp(iter_645_5.color.r, 0.5, var_645_11)

								iter_645_5.color = Color.New(var_645_15, var_645_15, var_645_15)
							end
						end
					end
				end
			end

			if arg_642_1.time_ >= var_645_9 + var_645_10 and arg_642_1.time_ < var_645_9 + var_645_10 + arg_645_0 and not isNil(var_645_8) and arg_642_1.var_.actorSpriteComps10115 then
				for iter_645_6, iter_645_7 in pairs(arg_642_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_645_7 then
						if arg_642_1.isInRecall_ then
							iter_645_7.color = arg_642_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_645_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_642_1.var_.actorSpriteComps10115 = nil
			end

			local var_645_16 = arg_642_1.actors_["1034"].transform
			local var_645_17 = 0

			if var_645_17 < arg_642_1.time_ and arg_642_1.time_ <= var_645_17 + arg_645_0 then
				arg_642_1.var_.moveOldPos1034 = var_645_16.localPosition
				var_645_16.localScale = Vector3.New(1, 1, 1)

				arg_642_1:CheckSpriteTmpPos("1034", 2)

				local var_645_18 = var_645_16.childCount

				for iter_645_8 = 0, var_645_18 - 1 do
					local var_645_19 = var_645_16:GetChild(iter_645_8)

					if var_645_19.name == "split_5" or not string.find(var_645_19.name, "split") then
						var_645_19.gameObject:SetActive(true)
					else
						var_645_19.gameObject:SetActive(false)
					end
				end
			end

			local var_645_20 = 0.001

			if var_645_17 <= arg_642_1.time_ and arg_642_1.time_ < var_645_17 + var_645_20 then
				local var_645_21 = (arg_642_1.time_ - var_645_17) / var_645_20
				local var_645_22 = Vector3.New(-390, -331.9, -324)

				var_645_16.localPosition = Vector3.Lerp(arg_642_1.var_.moveOldPos1034, var_645_22, var_645_21)
			end

			if arg_642_1.time_ >= var_645_17 + var_645_20 and arg_642_1.time_ < var_645_17 + var_645_20 + arg_645_0 then
				var_645_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_645_23 = 0
			local var_645_24 = 0.275

			if var_645_23 < arg_642_1.time_ and arg_642_1.time_ <= var_645_23 + arg_645_0 then
				arg_642_1.talkMaxDuration = 0
				arg_642_1.dialogCg_.alpha = 1

				arg_642_1.dialog_:SetActive(true)
				SetActive(arg_642_1.leftNameGo_, true)

				local var_645_25 = arg_642_1:FormatText(StoryNameCfg[1109].name)

				arg_642_1.leftNameTxt_.text = var_645_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_642_1.leftNameTxt_.transform)

				arg_642_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_642_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_642_1:RecordName(arg_642_1.leftNameTxt_.text)
				SetActive(arg_642_1.iconTrs_.gameObject, false)
				arg_642_1.callingController_:SetSelectedState("normal")

				local var_645_26 = arg_642_1:GetWordFromCfg(417012155)
				local var_645_27 = arg_642_1:FormatText(var_645_26.content)

				arg_642_1.text_.text = var_645_27

				LuaForUtil.ClearLinePrefixSymbol(arg_642_1.text_)

				local var_645_28 = 11
				local var_645_29 = utf8.len(var_645_27)
				local var_645_30 = var_645_28 <= 0 and var_645_24 or var_645_24 * (var_645_29 / var_645_28)

				if var_645_30 > 0 and var_645_24 < var_645_30 then
					arg_642_1.talkMaxDuration = var_645_30

					if var_645_30 + var_645_23 > arg_642_1.duration_ then
						arg_642_1.duration_ = var_645_30 + var_645_23
					end
				end

				arg_642_1.text_.text = var_645_27
				arg_642_1.typewritter.percent = 0

				arg_642_1.typewritter:SetDirty()
				arg_642_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012155", "story_v_out_417012.awb") ~= 0 then
					local var_645_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012155", "story_v_out_417012.awb") / 1000

					if var_645_31 + var_645_23 > arg_642_1.duration_ then
						arg_642_1.duration_ = var_645_31 + var_645_23
					end

					if var_645_26.prefab_name ~= "" and arg_642_1.actors_[var_645_26.prefab_name] ~= nil then
						local var_645_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_642_1.actors_[var_645_26.prefab_name].transform, "story_v_out_417012", "417012155", "story_v_out_417012.awb")

						arg_642_1:RecordAudio("417012155", var_645_32)
						arg_642_1:RecordAudio("417012155", var_645_32)
					else
						arg_642_1:AudioAction("play", "voice", "story_v_out_417012", "417012155", "story_v_out_417012.awb")
					end

					arg_642_1:RecordHistoryTalkVoice("story_v_out_417012", "417012155", "story_v_out_417012.awb")
				end

				arg_642_1:RecordContent(arg_642_1.text_.text)
			end

			local var_645_33 = math.max(var_645_24, arg_642_1.talkMaxDuration)

			if var_645_23 <= arg_642_1.time_ and arg_642_1.time_ < var_645_23 + var_645_33 then
				arg_642_1.typewritter.percent = (arg_642_1.time_ - var_645_23) / var_645_33

				arg_642_1.typewritter:SetDirty()
			end

			if arg_642_1.time_ >= var_645_23 + var_645_33 and arg_642_1.time_ < var_645_23 + var_645_33 + arg_645_0 then
				arg_642_1.typewritter.percent = 1

				arg_642_1.typewritter:SetDirty()
				arg_642_1:ShowNextGo(true)
			end
		end
	end,
	Play417012156 = function(arg_646_0, arg_646_1)
		arg_646_1.time_ = 0
		arg_646_1.frameCnt_ = 0
		arg_646_1.state_ = "playing"
		arg_646_1.curTalkId_ = 417012156
		arg_646_1.duration_ = 4.17

		local var_646_0 = {
			zh = 3.466,
			ja = 4.166
		}
		local var_646_1 = manager.audio:GetLocalizationFlag()

		if var_646_0[var_646_1] ~= nil then
			arg_646_1.duration_ = var_646_0[var_646_1]
		end

		SetActive(arg_646_1.tipsGo_, false)

		function arg_646_1.onSingleLineFinish_()
			arg_646_1.onSingleLineUpdate_ = nil
			arg_646_1.onSingleLineFinish_ = nil
			arg_646_1.state_ = "waiting"
		end

		function arg_646_1.playNext_(arg_648_0)
			if arg_648_0 == 1 then
				arg_646_0:Play417012157(arg_646_1)
			end
		end

		function arg_646_1.onSingleLineUpdate_(arg_649_0)
			local var_649_0 = arg_646_1.actors_["10115"]
			local var_649_1 = 0

			if var_649_1 < arg_646_1.time_ and arg_646_1.time_ <= var_649_1 + arg_649_0 and not isNil(var_649_0) and arg_646_1.var_.actorSpriteComps10115 == nil then
				arg_646_1.var_.actorSpriteComps10115 = var_649_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_649_2 = 0.2

			if var_649_1 <= arg_646_1.time_ and arg_646_1.time_ < var_649_1 + var_649_2 and not isNil(var_649_0) then
				local var_649_3 = (arg_646_1.time_ - var_649_1) / var_649_2

				if arg_646_1.var_.actorSpriteComps10115 then
					for iter_649_0, iter_649_1 in pairs(arg_646_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_649_1 then
							if arg_646_1.isInRecall_ then
								local var_649_4 = Mathf.Lerp(iter_649_1.color.r, arg_646_1.hightColor1.r, var_649_3)
								local var_649_5 = Mathf.Lerp(iter_649_1.color.g, arg_646_1.hightColor1.g, var_649_3)
								local var_649_6 = Mathf.Lerp(iter_649_1.color.b, arg_646_1.hightColor1.b, var_649_3)

								iter_649_1.color = Color.New(var_649_4, var_649_5, var_649_6)
							else
								local var_649_7 = Mathf.Lerp(iter_649_1.color.r, 1, var_649_3)

								iter_649_1.color = Color.New(var_649_7, var_649_7, var_649_7)
							end
						end
					end
				end
			end

			if arg_646_1.time_ >= var_649_1 + var_649_2 and arg_646_1.time_ < var_649_1 + var_649_2 + arg_649_0 and not isNil(var_649_0) and arg_646_1.var_.actorSpriteComps10115 then
				for iter_649_2, iter_649_3 in pairs(arg_646_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_649_3 then
						if arg_646_1.isInRecall_ then
							iter_649_3.color = arg_646_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_649_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_646_1.var_.actorSpriteComps10115 = nil
			end

			local var_649_8 = arg_646_1.actors_["1034"]
			local var_649_9 = 0

			if var_649_9 < arg_646_1.time_ and arg_646_1.time_ <= var_649_9 + arg_649_0 and not isNil(var_649_8) and arg_646_1.var_.actorSpriteComps1034 == nil then
				arg_646_1.var_.actorSpriteComps1034 = var_649_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_649_10 = 0.2

			if var_649_9 <= arg_646_1.time_ and arg_646_1.time_ < var_649_9 + var_649_10 and not isNil(var_649_8) then
				local var_649_11 = (arg_646_1.time_ - var_649_9) / var_649_10

				if arg_646_1.var_.actorSpriteComps1034 then
					for iter_649_4, iter_649_5 in pairs(arg_646_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_649_5 then
							if arg_646_1.isInRecall_ then
								local var_649_12 = Mathf.Lerp(iter_649_5.color.r, arg_646_1.hightColor2.r, var_649_11)
								local var_649_13 = Mathf.Lerp(iter_649_5.color.g, arg_646_1.hightColor2.g, var_649_11)
								local var_649_14 = Mathf.Lerp(iter_649_5.color.b, arg_646_1.hightColor2.b, var_649_11)

								iter_649_5.color = Color.New(var_649_12, var_649_13, var_649_14)
							else
								local var_649_15 = Mathf.Lerp(iter_649_5.color.r, 0.5, var_649_11)

								iter_649_5.color = Color.New(var_649_15, var_649_15, var_649_15)
							end
						end
					end
				end
			end

			if arg_646_1.time_ >= var_649_9 + var_649_10 and arg_646_1.time_ < var_649_9 + var_649_10 + arg_649_0 and not isNil(var_649_8) and arg_646_1.var_.actorSpriteComps1034 then
				for iter_649_6, iter_649_7 in pairs(arg_646_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_649_7 then
						if arg_646_1.isInRecall_ then
							iter_649_7.color = arg_646_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_649_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_646_1.var_.actorSpriteComps1034 = nil
			end

			local var_649_16 = arg_646_1.actors_["10115"].transform
			local var_649_17 = 0

			if var_649_17 < arg_646_1.time_ and arg_646_1.time_ <= var_649_17 + arg_649_0 then
				arg_646_1.var_.moveOldPos10115 = var_649_16.localPosition
				var_649_16.localScale = Vector3.New(1, 1, 1)

				arg_646_1:CheckSpriteTmpPos("10115", 4)

				local var_649_18 = var_649_16.childCount

				for iter_649_8 = 0, var_649_18 - 1 do
					local var_649_19 = var_649_16:GetChild(iter_649_8)

					if var_649_19.name == "split_6" or not string.find(var_649_19.name, "split") then
						var_649_19.gameObject:SetActive(true)
					else
						var_649_19.gameObject:SetActive(false)
					end
				end
			end

			local var_649_20 = 0.001

			if var_649_17 <= arg_646_1.time_ and arg_646_1.time_ < var_649_17 + var_649_20 then
				local var_649_21 = (arg_646_1.time_ - var_649_17) / var_649_20
				local var_649_22 = Vector3.New(390, -387.3, -246.2)

				var_649_16.localPosition = Vector3.Lerp(arg_646_1.var_.moveOldPos10115, var_649_22, var_649_21)
			end

			if arg_646_1.time_ >= var_649_17 + var_649_20 and arg_646_1.time_ < var_649_17 + var_649_20 + arg_649_0 then
				var_649_16.localPosition = Vector3.New(390, -387.3, -246.2)
			end

			local var_649_23 = 0
			local var_649_24 = 0.4

			if var_649_23 < arg_646_1.time_ and arg_646_1.time_ <= var_649_23 + arg_649_0 then
				arg_646_1.talkMaxDuration = 0
				arg_646_1.dialogCg_.alpha = 1

				arg_646_1.dialog_:SetActive(true)
				SetActive(arg_646_1.leftNameGo_, true)

				local var_649_25 = arg_646_1:FormatText(StoryNameCfg[1113].name)

				arg_646_1.leftNameTxt_.text = var_649_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_646_1.leftNameTxt_.transform)

				arg_646_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_646_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_646_1:RecordName(arg_646_1.leftNameTxt_.text)
				SetActive(arg_646_1.iconTrs_.gameObject, false)
				arg_646_1.callingController_:SetSelectedState("normal")

				local var_649_26 = arg_646_1:GetWordFromCfg(417012156)
				local var_649_27 = arg_646_1:FormatText(var_649_26.content)

				arg_646_1.text_.text = var_649_27

				LuaForUtil.ClearLinePrefixSymbol(arg_646_1.text_)

				local var_649_28 = 16
				local var_649_29 = utf8.len(var_649_27)
				local var_649_30 = var_649_28 <= 0 and var_649_24 or var_649_24 * (var_649_29 / var_649_28)

				if var_649_30 > 0 and var_649_24 < var_649_30 then
					arg_646_1.talkMaxDuration = var_649_30

					if var_649_30 + var_649_23 > arg_646_1.duration_ then
						arg_646_1.duration_ = var_649_30 + var_649_23
					end
				end

				arg_646_1.text_.text = var_649_27
				arg_646_1.typewritter.percent = 0

				arg_646_1.typewritter:SetDirty()
				arg_646_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012156", "story_v_out_417012.awb") ~= 0 then
					local var_649_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012156", "story_v_out_417012.awb") / 1000

					if var_649_31 + var_649_23 > arg_646_1.duration_ then
						arg_646_1.duration_ = var_649_31 + var_649_23
					end

					if var_649_26.prefab_name ~= "" and arg_646_1.actors_[var_649_26.prefab_name] ~= nil then
						local var_649_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_646_1.actors_[var_649_26.prefab_name].transform, "story_v_out_417012", "417012156", "story_v_out_417012.awb")

						arg_646_1:RecordAudio("417012156", var_649_32)
						arg_646_1:RecordAudio("417012156", var_649_32)
					else
						arg_646_1:AudioAction("play", "voice", "story_v_out_417012", "417012156", "story_v_out_417012.awb")
					end

					arg_646_1:RecordHistoryTalkVoice("story_v_out_417012", "417012156", "story_v_out_417012.awb")
				end

				arg_646_1:RecordContent(arg_646_1.text_.text)
			end

			local var_649_33 = math.max(var_649_24, arg_646_1.talkMaxDuration)

			if var_649_23 <= arg_646_1.time_ and arg_646_1.time_ < var_649_23 + var_649_33 then
				arg_646_1.typewritter.percent = (arg_646_1.time_ - var_649_23) / var_649_33

				arg_646_1.typewritter:SetDirty()
			end

			if arg_646_1.time_ >= var_649_23 + var_649_33 and arg_646_1.time_ < var_649_23 + var_649_33 + arg_649_0 then
				arg_646_1.typewritter.percent = 1

				arg_646_1.typewritter:SetDirty()
				arg_646_1:ShowNextGo(true)
			end
		end
	end,
	Play417012157 = function(arg_650_0, arg_650_1)
		arg_650_1.time_ = 0
		arg_650_1.frameCnt_ = 0
		arg_650_1.state_ = "playing"
		arg_650_1.curTalkId_ = 417012157
		arg_650_1.duration_ = 10.93

		local var_650_0 = {
			zh = 8.7,
			ja = 10.933
		}
		local var_650_1 = manager.audio:GetLocalizationFlag()

		if var_650_0[var_650_1] ~= nil then
			arg_650_1.duration_ = var_650_0[var_650_1]
		end

		SetActive(arg_650_1.tipsGo_, false)

		function arg_650_1.onSingleLineFinish_()
			arg_650_1.onSingleLineUpdate_ = nil
			arg_650_1.onSingleLineFinish_ = nil
			arg_650_1.state_ = "waiting"
		end

		function arg_650_1.playNext_(arg_652_0)
			if arg_652_0 == 1 then
				arg_650_0:Play417012158(arg_650_1)
			end
		end

		function arg_650_1.onSingleLineUpdate_(arg_653_0)
			local var_653_0 = arg_650_1.actors_["10115"].transform
			local var_653_1 = 0

			if var_653_1 < arg_650_1.time_ and arg_650_1.time_ <= var_653_1 + arg_653_0 then
				arg_650_1.var_.moveOldPos10115 = var_653_0.localPosition
				var_653_0.localScale = Vector3.New(1, 1, 1)

				arg_650_1:CheckSpriteTmpPos("10115", 4)

				local var_653_2 = var_653_0.childCount

				for iter_653_0 = 0, var_653_2 - 1 do
					local var_653_3 = var_653_0:GetChild(iter_653_0)

					if var_653_3.name == "" or not string.find(var_653_3.name, "split") then
						var_653_3.gameObject:SetActive(true)
					else
						var_653_3.gameObject:SetActive(false)
					end
				end
			end

			local var_653_4 = 0.001

			if var_653_1 <= arg_650_1.time_ and arg_650_1.time_ < var_653_1 + var_653_4 then
				local var_653_5 = (arg_650_1.time_ - var_653_1) / var_653_4
				local var_653_6 = Vector3.New(390, -387.3, -246.2)

				var_653_0.localPosition = Vector3.Lerp(arg_650_1.var_.moveOldPos10115, var_653_6, var_653_5)
			end

			if arg_650_1.time_ >= var_653_1 + var_653_4 and arg_650_1.time_ < var_653_1 + var_653_4 + arg_653_0 then
				var_653_0.localPosition = Vector3.New(390, -387.3, -246.2)
			end

			local var_653_7 = arg_650_1.actors_["1034"].transform
			local var_653_8 = 0

			if var_653_8 < arg_650_1.time_ and arg_650_1.time_ <= var_653_8 + arg_653_0 then
				arg_650_1.var_.moveOldPos1034 = var_653_7.localPosition
				var_653_7.localScale = Vector3.New(1, 1, 1)

				arg_650_1:CheckSpriteTmpPos("1034", 2)

				local var_653_9 = var_653_7.childCount

				for iter_653_1 = 0, var_653_9 - 1 do
					local var_653_10 = var_653_7:GetChild(iter_653_1)

					if var_653_10.name == "split_4" or not string.find(var_653_10.name, "split") then
						var_653_10.gameObject:SetActive(true)
					else
						var_653_10.gameObject:SetActive(false)
					end
				end
			end

			local var_653_11 = 0.001

			if var_653_8 <= arg_650_1.time_ and arg_650_1.time_ < var_653_8 + var_653_11 then
				local var_653_12 = (arg_650_1.time_ - var_653_8) / var_653_11
				local var_653_13 = Vector3.New(-390, -331.9, -324)

				var_653_7.localPosition = Vector3.Lerp(arg_650_1.var_.moveOldPos1034, var_653_13, var_653_12)
			end

			if arg_650_1.time_ >= var_653_8 + var_653_11 and arg_650_1.time_ < var_653_8 + var_653_11 + arg_653_0 then
				var_653_7.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_653_14 = 0
			local var_653_15 = 1.075

			if var_653_14 < arg_650_1.time_ and arg_650_1.time_ <= var_653_14 + arg_653_0 then
				arg_650_1.talkMaxDuration = 0
				arg_650_1.dialogCg_.alpha = 1

				arg_650_1.dialog_:SetActive(true)
				SetActive(arg_650_1.leftNameGo_, true)

				local var_653_16 = arg_650_1:FormatText(StoryNameCfg[1113].name)

				arg_650_1.leftNameTxt_.text = var_653_16

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_650_1.leftNameTxt_.transform)

				arg_650_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_650_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_650_1:RecordName(arg_650_1.leftNameTxt_.text)
				SetActive(arg_650_1.iconTrs_.gameObject, false)
				arg_650_1.callingController_:SetSelectedState("normal")

				local var_653_17 = arg_650_1:GetWordFromCfg(417012157)
				local var_653_18 = arg_650_1:FormatText(var_653_17.content)

				arg_650_1.text_.text = var_653_18

				LuaForUtil.ClearLinePrefixSymbol(arg_650_1.text_)

				local var_653_19 = 43
				local var_653_20 = utf8.len(var_653_18)
				local var_653_21 = var_653_19 <= 0 and var_653_15 or var_653_15 * (var_653_20 / var_653_19)

				if var_653_21 > 0 and var_653_15 < var_653_21 then
					arg_650_1.talkMaxDuration = var_653_21

					if var_653_21 + var_653_14 > arg_650_1.duration_ then
						arg_650_1.duration_ = var_653_21 + var_653_14
					end
				end

				arg_650_1.text_.text = var_653_18
				arg_650_1.typewritter.percent = 0

				arg_650_1.typewritter:SetDirty()
				arg_650_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012157", "story_v_out_417012.awb") ~= 0 then
					local var_653_22 = manager.audio:GetVoiceLength("story_v_out_417012", "417012157", "story_v_out_417012.awb") / 1000

					if var_653_22 + var_653_14 > arg_650_1.duration_ then
						arg_650_1.duration_ = var_653_22 + var_653_14
					end

					if var_653_17.prefab_name ~= "" and arg_650_1.actors_[var_653_17.prefab_name] ~= nil then
						local var_653_23 = LuaForUtil.PlayVoiceWithCriLipsync(arg_650_1.actors_[var_653_17.prefab_name].transform, "story_v_out_417012", "417012157", "story_v_out_417012.awb")

						arg_650_1:RecordAudio("417012157", var_653_23)
						arg_650_1:RecordAudio("417012157", var_653_23)
					else
						arg_650_1:AudioAction("play", "voice", "story_v_out_417012", "417012157", "story_v_out_417012.awb")
					end

					arg_650_1:RecordHistoryTalkVoice("story_v_out_417012", "417012157", "story_v_out_417012.awb")
				end

				arg_650_1:RecordContent(arg_650_1.text_.text)
			end

			local var_653_24 = math.max(var_653_15, arg_650_1.talkMaxDuration)

			if var_653_14 <= arg_650_1.time_ and arg_650_1.time_ < var_653_14 + var_653_24 then
				arg_650_1.typewritter.percent = (arg_650_1.time_ - var_653_14) / var_653_24

				arg_650_1.typewritter:SetDirty()
			end

			if arg_650_1.time_ >= var_653_14 + var_653_24 and arg_650_1.time_ < var_653_14 + var_653_24 + arg_653_0 then
				arg_650_1.typewritter.percent = 1

				arg_650_1.typewritter:SetDirty()
				arg_650_1:ShowNextGo(true)
			end
		end
	end,
	Play417012158 = function(arg_654_0, arg_654_1)
		arg_654_1.time_ = 0
		arg_654_1.frameCnt_ = 0
		arg_654_1.state_ = "playing"
		arg_654_1.curTalkId_ = 417012158
		arg_654_1.duration_ = 5.63

		local var_654_0 = {
			zh = 2.5,
			ja = 5.633
		}
		local var_654_1 = manager.audio:GetLocalizationFlag()

		if var_654_0[var_654_1] ~= nil then
			arg_654_1.duration_ = var_654_0[var_654_1]
		end

		SetActive(arg_654_1.tipsGo_, false)

		function arg_654_1.onSingleLineFinish_()
			arg_654_1.onSingleLineUpdate_ = nil
			arg_654_1.onSingleLineFinish_ = nil
			arg_654_1.state_ = "waiting"
		end

		function arg_654_1.playNext_(arg_656_0)
			if arg_656_0 == 1 then
				arg_654_0:Play417012159(arg_654_1)
			end
		end

		function arg_654_1.onSingleLineUpdate_(arg_657_0)
			local var_657_0 = arg_654_1.actors_["10115"].transform
			local var_657_1 = 0

			if var_657_1 < arg_654_1.time_ and arg_654_1.time_ <= var_657_1 + arg_657_0 then
				arg_654_1.var_.moveOldPos10115 = var_657_0.localPosition
				var_657_0.localScale = Vector3.New(1, 1, 1)

				arg_654_1:CheckSpriteTmpPos("10115", 4)

				local var_657_2 = var_657_0.childCount

				for iter_657_0 = 0, var_657_2 - 1 do
					local var_657_3 = var_657_0:GetChild(iter_657_0)

					if var_657_3.name == "split_6" or not string.find(var_657_3.name, "split") then
						var_657_3.gameObject:SetActive(true)
					else
						var_657_3.gameObject:SetActive(false)
					end
				end
			end

			local var_657_4 = 0.001

			if var_657_1 <= arg_654_1.time_ and arg_654_1.time_ < var_657_1 + var_657_4 then
				local var_657_5 = (arg_654_1.time_ - var_657_1) / var_657_4
				local var_657_6 = Vector3.New(390, -387.3, -246.2)

				var_657_0.localPosition = Vector3.Lerp(arg_654_1.var_.moveOldPos10115, var_657_6, var_657_5)
			end

			if arg_654_1.time_ >= var_657_1 + var_657_4 and arg_654_1.time_ < var_657_1 + var_657_4 + arg_657_0 then
				var_657_0.localPosition = Vector3.New(390, -387.3, -246.2)
			end

			local var_657_7 = 0
			local var_657_8 = 0.35

			if var_657_7 < arg_654_1.time_ and arg_654_1.time_ <= var_657_7 + arg_657_0 then
				arg_654_1.talkMaxDuration = 0
				arg_654_1.dialogCg_.alpha = 1

				arg_654_1.dialog_:SetActive(true)
				SetActive(arg_654_1.leftNameGo_, true)

				local var_657_9 = arg_654_1:FormatText(StoryNameCfg[1113].name)

				arg_654_1.leftNameTxt_.text = var_657_9

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_654_1.leftNameTxt_.transform)

				arg_654_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_654_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_654_1:RecordName(arg_654_1.leftNameTxt_.text)
				SetActive(arg_654_1.iconTrs_.gameObject, false)
				arg_654_1.callingController_:SetSelectedState("normal")

				local var_657_10 = arg_654_1:GetWordFromCfg(417012158)
				local var_657_11 = arg_654_1:FormatText(var_657_10.content)

				arg_654_1.text_.text = var_657_11

				LuaForUtil.ClearLinePrefixSymbol(arg_654_1.text_)

				local var_657_12 = 14
				local var_657_13 = utf8.len(var_657_11)
				local var_657_14 = var_657_12 <= 0 and var_657_8 or var_657_8 * (var_657_13 / var_657_12)

				if var_657_14 > 0 and var_657_8 < var_657_14 then
					arg_654_1.talkMaxDuration = var_657_14

					if var_657_14 + var_657_7 > arg_654_1.duration_ then
						arg_654_1.duration_ = var_657_14 + var_657_7
					end
				end

				arg_654_1.text_.text = var_657_11
				arg_654_1.typewritter.percent = 0

				arg_654_1.typewritter:SetDirty()
				arg_654_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012158", "story_v_out_417012.awb") ~= 0 then
					local var_657_15 = manager.audio:GetVoiceLength("story_v_out_417012", "417012158", "story_v_out_417012.awb") / 1000

					if var_657_15 + var_657_7 > arg_654_1.duration_ then
						arg_654_1.duration_ = var_657_15 + var_657_7
					end

					if var_657_10.prefab_name ~= "" and arg_654_1.actors_[var_657_10.prefab_name] ~= nil then
						local var_657_16 = LuaForUtil.PlayVoiceWithCriLipsync(arg_654_1.actors_[var_657_10.prefab_name].transform, "story_v_out_417012", "417012158", "story_v_out_417012.awb")

						arg_654_1:RecordAudio("417012158", var_657_16)
						arg_654_1:RecordAudio("417012158", var_657_16)
					else
						arg_654_1:AudioAction("play", "voice", "story_v_out_417012", "417012158", "story_v_out_417012.awb")
					end

					arg_654_1:RecordHistoryTalkVoice("story_v_out_417012", "417012158", "story_v_out_417012.awb")
				end

				arg_654_1:RecordContent(arg_654_1.text_.text)
			end

			local var_657_17 = math.max(var_657_8, arg_654_1.talkMaxDuration)

			if var_657_7 <= arg_654_1.time_ and arg_654_1.time_ < var_657_7 + var_657_17 then
				arg_654_1.typewritter.percent = (arg_654_1.time_ - var_657_7) / var_657_17

				arg_654_1.typewritter:SetDirty()
			end

			if arg_654_1.time_ >= var_657_7 + var_657_17 and arg_654_1.time_ < var_657_7 + var_657_17 + arg_657_0 then
				arg_654_1.typewritter.percent = 1

				arg_654_1.typewritter:SetDirty()
				arg_654_1:ShowNextGo(true)
			end
		end
	end,
	Play417012159 = function(arg_658_0, arg_658_1)
		arg_658_1.time_ = 0
		arg_658_1.frameCnt_ = 0
		arg_658_1.state_ = "playing"
		arg_658_1.curTalkId_ = 417012159
		arg_658_1.duration_ = 5

		SetActive(arg_658_1.tipsGo_, false)

		function arg_658_1.onSingleLineFinish_()
			arg_658_1.onSingleLineUpdate_ = nil
			arg_658_1.onSingleLineFinish_ = nil
			arg_658_1.state_ = "waiting"
		end

		function arg_658_1.playNext_(arg_660_0)
			if arg_660_0 == 1 then
				arg_658_0:Play417012160(arg_658_1)
			end
		end

		function arg_658_1.onSingleLineUpdate_(arg_661_0)
			local var_661_0 = arg_658_1.actors_["10115"]
			local var_661_1 = 0

			if var_661_1 < arg_658_1.time_ and arg_658_1.time_ <= var_661_1 + arg_661_0 and not isNil(var_661_0) and arg_658_1.var_.actorSpriteComps10115 == nil then
				arg_658_1.var_.actorSpriteComps10115 = var_661_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_661_2 = 0.2

			if var_661_1 <= arg_658_1.time_ and arg_658_1.time_ < var_661_1 + var_661_2 and not isNil(var_661_0) then
				local var_661_3 = (arg_658_1.time_ - var_661_1) / var_661_2

				if arg_658_1.var_.actorSpriteComps10115 then
					for iter_661_0, iter_661_1 in pairs(arg_658_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_661_1 then
							if arg_658_1.isInRecall_ then
								local var_661_4 = Mathf.Lerp(iter_661_1.color.r, arg_658_1.hightColor2.r, var_661_3)
								local var_661_5 = Mathf.Lerp(iter_661_1.color.g, arg_658_1.hightColor2.g, var_661_3)
								local var_661_6 = Mathf.Lerp(iter_661_1.color.b, arg_658_1.hightColor2.b, var_661_3)

								iter_661_1.color = Color.New(var_661_4, var_661_5, var_661_6)
							else
								local var_661_7 = Mathf.Lerp(iter_661_1.color.r, 0.5, var_661_3)

								iter_661_1.color = Color.New(var_661_7, var_661_7, var_661_7)
							end
						end
					end
				end
			end

			if arg_658_1.time_ >= var_661_1 + var_661_2 and arg_658_1.time_ < var_661_1 + var_661_2 + arg_661_0 and not isNil(var_661_0) and arg_658_1.var_.actorSpriteComps10115 then
				for iter_661_2, iter_661_3 in pairs(arg_658_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_661_3 then
						if arg_658_1.isInRecall_ then
							iter_661_3.color = arg_658_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_661_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_658_1.var_.actorSpriteComps10115 = nil
			end

			local var_661_8 = 0
			local var_661_9 = 1.5

			if var_661_8 < arg_658_1.time_ and arg_658_1.time_ <= var_661_8 + arg_661_0 then
				arg_658_1.talkMaxDuration = 0
				arg_658_1.dialogCg_.alpha = 1

				arg_658_1.dialog_:SetActive(true)
				SetActive(arg_658_1.leftNameGo_, false)

				arg_658_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_658_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_658_1:RecordName(arg_658_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_658_1.iconTrs_.gameObject, false)
				arg_658_1.callingController_:SetSelectedState("normal")

				local var_661_10 = arg_658_1:GetWordFromCfg(417012159)
				local var_661_11 = arg_658_1:FormatText(var_661_10.content)

				arg_658_1.text_.text = var_661_11

				LuaForUtil.ClearLinePrefixSymbol(arg_658_1.text_)

				local var_661_12 = 60
				local var_661_13 = utf8.len(var_661_11)
				local var_661_14 = var_661_12 <= 0 and var_661_9 or var_661_9 * (var_661_13 / var_661_12)

				if var_661_14 > 0 and var_661_9 < var_661_14 then
					arg_658_1.talkMaxDuration = var_661_14

					if var_661_14 + var_661_8 > arg_658_1.duration_ then
						arg_658_1.duration_ = var_661_14 + var_661_8
					end
				end

				arg_658_1.text_.text = var_661_11
				arg_658_1.typewritter.percent = 0

				arg_658_1.typewritter:SetDirty()
				arg_658_1:ShowNextGo(false)
				arg_658_1:RecordContent(arg_658_1.text_.text)
			end

			local var_661_15 = math.max(var_661_9, arg_658_1.talkMaxDuration)

			if var_661_8 <= arg_658_1.time_ and arg_658_1.time_ < var_661_8 + var_661_15 then
				arg_658_1.typewritter.percent = (arg_658_1.time_ - var_661_8) / var_661_15

				arg_658_1.typewritter:SetDirty()
			end

			if arg_658_1.time_ >= var_661_8 + var_661_15 and arg_658_1.time_ < var_661_8 + var_661_15 + arg_661_0 then
				arg_658_1.typewritter.percent = 1

				arg_658_1.typewritter:SetDirty()
				arg_658_1:ShowNextGo(true)
			end
		end
	end,
	Play417012160 = function(arg_662_0, arg_662_1)
		arg_662_1.time_ = 0
		arg_662_1.frameCnt_ = 0
		arg_662_1.state_ = "playing"
		arg_662_1.curTalkId_ = 417012160
		arg_662_1.duration_ = 8.53

		local var_662_0 = {
			zh = 6.6,
			ja = 8.533
		}
		local var_662_1 = manager.audio:GetLocalizationFlag()

		if var_662_0[var_662_1] ~= nil then
			arg_662_1.duration_ = var_662_0[var_662_1]
		end

		SetActive(arg_662_1.tipsGo_, false)

		function arg_662_1.onSingleLineFinish_()
			arg_662_1.onSingleLineUpdate_ = nil
			arg_662_1.onSingleLineFinish_ = nil
			arg_662_1.state_ = "waiting"
		end

		function arg_662_1.playNext_(arg_664_0)
			if arg_664_0 == 1 then
				arg_662_0:Play417012161(arg_662_1)
			end
		end

		function arg_662_1.onSingleLineUpdate_(arg_665_0)
			local var_665_0 = arg_662_1.actors_["10115"]
			local var_665_1 = 0

			if var_665_1 < arg_662_1.time_ and arg_662_1.time_ <= var_665_1 + arg_665_0 and not isNil(var_665_0) and arg_662_1.var_.actorSpriteComps10115 == nil then
				arg_662_1.var_.actorSpriteComps10115 = var_665_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_665_2 = 0.2

			if var_665_1 <= arg_662_1.time_ and arg_662_1.time_ < var_665_1 + var_665_2 and not isNil(var_665_0) then
				local var_665_3 = (arg_662_1.time_ - var_665_1) / var_665_2

				if arg_662_1.var_.actorSpriteComps10115 then
					for iter_665_0, iter_665_1 in pairs(arg_662_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_665_1 then
							if arg_662_1.isInRecall_ then
								local var_665_4 = Mathf.Lerp(iter_665_1.color.r, arg_662_1.hightColor1.r, var_665_3)
								local var_665_5 = Mathf.Lerp(iter_665_1.color.g, arg_662_1.hightColor1.g, var_665_3)
								local var_665_6 = Mathf.Lerp(iter_665_1.color.b, arg_662_1.hightColor1.b, var_665_3)

								iter_665_1.color = Color.New(var_665_4, var_665_5, var_665_6)
							else
								local var_665_7 = Mathf.Lerp(iter_665_1.color.r, 1, var_665_3)

								iter_665_1.color = Color.New(var_665_7, var_665_7, var_665_7)
							end
						end
					end
				end
			end

			if arg_662_1.time_ >= var_665_1 + var_665_2 and arg_662_1.time_ < var_665_1 + var_665_2 + arg_665_0 and not isNil(var_665_0) and arg_662_1.var_.actorSpriteComps10115 then
				for iter_665_2, iter_665_3 in pairs(arg_662_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_665_3 then
						if arg_662_1.isInRecall_ then
							iter_665_3.color = arg_662_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_665_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_662_1.var_.actorSpriteComps10115 = nil
			end

			local var_665_8 = 0
			local var_665_9 = 0.85

			if var_665_8 < arg_662_1.time_ and arg_662_1.time_ <= var_665_8 + arg_665_0 then
				arg_662_1.talkMaxDuration = 0
				arg_662_1.dialogCg_.alpha = 1

				arg_662_1.dialog_:SetActive(true)
				SetActive(arg_662_1.leftNameGo_, true)

				local var_665_10 = arg_662_1:FormatText(StoryNameCfg[1113].name)

				arg_662_1.leftNameTxt_.text = var_665_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_662_1.leftNameTxt_.transform)

				arg_662_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_662_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_662_1:RecordName(arg_662_1.leftNameTxt_.text)
				SetActive(arg_662_1.iconTrs_.gameObject, false)
				arg_662_1.callingController_:SetSelectedState("normal")

				local var_665_11 = arg_662_1:GetWordFromCfg(417012160)
				local var_665_12 = arg_662_1:FormatText(var_665_11.content)

				arg_662_1.text_.text = var_665_12

				LuaForUtil.ClearLinePrefixSymbol(arg_662_1.text_)

				local var_665_13 = 34
				local var_665_14 = utf8.len(var_665_12)
				local var_665_15 = var_665_13 <= 0 and var_665_9 or var_665_9 * (var_665_14 / var_665_13)

				if var_665_15 > 0 and var_665_9 < var_665_15 then
					arg_662_1.talkMaxDuration = var_665_15

					if var_665_15 + var_665_8 > arg_662_1.duration_ then
						arg_662_1.duration_ = var_665_15 + var_665_8
					end
				end

				arg_662_1.text_.text = var_665_12
				arg_662_1.typewritter.percent = 0

				arg_662_1.typewritter:SetDirty()
				arg_662_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012160", "story_v_out_417012.awb") ~= 0 then
					local var_665_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012160", "story_v_out_417012.awb") / 1000

					if var_665_16 + var_665_8 > arg_662_1.duration_ then
						arg_662_1.duration_ = var_665_16 + var_665_8
					end

					if var_665_11.prefab_name ~= "" and arg_662_1.actors_[var_665_11.prefab_name] ~= nil then
						local var_665_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_662_1.actors_[var_665_11.prefab_name].transform, "story_v_out_417012", "417012160", "story_v_out_417012.awb")

						arg_662_1:RecordAudio("417012160", var_665_17)
						arg_662_1:RecordAudio("417012160", var_665_17)
					else
						arg_662_1:AudioAction("play", "voice", "story_v_out_417012", "417012160", "story_v_out_417012.awb")
					end

					arg_662_1:RecordHistoryTalkVoice("story_v_out_417012", "417012160", "story_v_out_417012.awb")
				end

				arg_662_1:RecordContent(arg_662_1.text_.text)
			end

			local var_665_18 = math.max(var_665_9, arg_662_1.talkMaxDuration)

			if var_665_8 <= arg_662_1.time_ and arg_662_1.time_ < var_665_8 + var_665_18 then
				arg_662_1.typewritter.percent = (arg_662_1.time_ - var_665_8) / var_665_18

				arg_662_1.typewritter:SetDirty()
			end

			if arg_662_1.time_ >= var_665_8 + var_665_18 and arg_662_1.time_ < var_665_8 + var_665_18 + arg_665_0 then
				arg_662_1.typewritter.percent = 1

				arg_662_1.typewritter:SetDirty()
				arg_662_1:ShowNextGo(true)
			end
		end
	end,
	Play417012161 = function(arg_666_0, arg_666_1)
		arg_666_1.time_ = 0
		arg_666_1.frameCnt_ = 0
		arg_666_1.state_ = "playing"
		arg_666_1.curTalkId_ = 417012161
		arg_666_1.duration_ = 2.8

		local var_666_0 = {
			zh = 1.4,
			ja = 2.8
		}
		local var_666_1 = manager.audio:GetLocalizationFlag()

		if var_666_0[var_666_1] ~= nil then
			arg_666_1.duration_ = var_666_0[var_666_1]
		end

		SetActive(arg_666_1.tipsGo_, false)

		function arg_666_1.onSingleLineFinish_()
			arg_666_1.onSingleLineUpdate_ = nil
			arg_666_1.onSingleLineFinish_ = nil
			arg_666_1.state_ = "waiting"
		end

		function arg_666_1.playNext_(arg_668_0)
			if arg_668_0 == 1 then
				arg_666_0:Play417012162(arg_666_1)
			end
		end

		function arg_666_1.onSingleLineUpdate_(arg_669_0)
			local var_669_0 = arg_666_1.actors_["1034"]
			local var_669_1 = 0

			if var_669_1 < arg_666_1.time_ and arg_666_1.time_ <= var_669_1 + arg_669_0 and not isNil(var_669_0) and arg_666_1.var_.actorSpriteComps1034 == nil then
				arg_666_1.var_.actorSpriteComps1034 = var_669_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_669_2 = 0.2

			if var_669_1 <= arg_666_1.time_ and arg_666_1.time_ < var_669_1 + var_669_2 and not isNil(var_669_0) then
				local var_669_3 = (arg_666_1.time_ - var_669_1) / var_669_2

				if arg_666_1.var_.actorSpriteComps1034 then
					for iter_669_0, iter_669_1 in pairs(arg_666_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_669_1 then
							if arg_666_1.isInRecall_ then
								local var_669_4 = Mathf.Lerp(iter_669_1.color.r, arg_666_1.hightColor1.r, var_669_3)
								local var_669_5 = Mathf.Lerp(iter_669_1.color.g, arg_666_1.hightColor1.g, var_669_3)
								local var_669_6 = Mathf.Lerp(iter_669_1.color.b, arg_666_1.hightColor1.b, var_669_3)

								iter_669_1.color = Color.New(var_669_4, var_669_5, var_669_6)
							else
								local var_669_7 = Mathf.Lerp(iter_669_1.color.r, 1, var_669_3)

								iter_669_1.color = Color.New(var_669_7, var_669_7, var_669_7)
							end
						end
					end
				end
			end

			if arg_666_1.time_ >= var_669_1 + var_669_2 and arg_666_1.time_ < var_669_1 + var_669_2 + arg_669_0 and not isNil(var_669_0) and arg_666_1.var_.actorSpriteComps1034 then
				for iter_669_2, iter_669_3 in pairs(arg_666_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_669_3 then
						if arg_666_1.isInRecall_ then
							iter_669_3.color = arg_666_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_669_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_666_1.var_.actorSpriteComps1034 = nil
			end

			local var_669_8 = arg_666_1.actors_["10115"]
			local var_669_9 = 0

			if var_669_9 < arg_666_1.time_ and arg_666_1.time_ <= var_669_9 + arg_669_0 and not isNil(var_669_8) and arg_666_1.var_.actorSpriteComps10115 == nil then
				arg_666_1.var_.actorSpriteComps10115 = var_669_8:GetComponentsInChildren(typeof(Image), true)
			end

			local var_669_10 = 0.2

			if var_669_9 <= arg_666_1.time_ and arg_666_1.time_ < var_669_9 + var_669_10 and not isNil(var_669_8) then
				local var_669_11 = (arg_666_1.time_ - var_669_9) / var_669_10

				if arg_666_1.var_.actorSpriteComps10115 then
					for iter_669_4, iter_669_5 in pairs(arg_666_1.var_.actorSpriteComps10115:ToTable()) do
						if iter_669_5 then
							if arg_666_1.isInRecall_ then
								local var_669_12 = Mathf.Lerp(iter_669_5.color.r, arg_666_1.hightColor2.r, var_669_11)
								local var_669_13 = Mathf.Lerp(iter_669_5.color.g, arg_666_1.hightColor2.g, var_669_11)
								local var_669_14 = Mathf.Lerp(iter_669_5.color.b, arg_666_1.hightColor2.b, var_669_11)

								iter_669_5.color = Color.New(var_669_12, var_669_13, var_669_14)
							else
								local var_669_15 = Mathf.Lerp(iter_669_5.color.r, 0.5, var_669_11)

								iter_669_5.color = Color.New(var_669_15, var_669_15, var_669_15)
							end
						end
					end
				end
			end

			if arg_666_1.time_ >= var_669_9 + var_669_10 and arg_666_1.time_ < var_669_9 + var_669_10 + arg_669_0 and not isNil(var_669_8) and arg_666_1.var_.actorSpriteComps10115 then
				for iter_669_6, iter_669_7 in pairs(arg_666_1.var_.actorSpriteComps10115:ToTable()) do
					if iter_669_7 then
						if arg_666_1.isInRecall_ then
							iter_669_7.color = arg_666_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_669_7.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_666_1.var_.actorSpriteComps10115 = nil
			end

			local var_669_16 = arg_666_1.actors_["1034"].transform
			local var_669_17 = 0

			if var_669_17 < arg_666_1.time_ and arg_666_1.time_ <= var_669_17 + arg_669_0 then
				arg_666_1.var_.moveOldPos1034 = var_669_16.localPosition
				var_669_16.localScale = Vector3.New(1, 1, 1)

				arg_666_1:CheckSpriteTmpPos("1034", 2)

				local var_669_18 = var_669_16.childCount

				for iter_669_8 = 0, var_669_18 - 1 do
					local var_669_19 = var_669_16:GetChild(iter_669_8)

					if var_669_19.name == "split_4" or not string.find(var_669_19.name, "split") then
						var_669_19.gameObject:SetActive(true)
					else
						var_669_19.gameObject:SetActive(false)
					end
				end
			end

			local var_669_20 = 0.001

			if var_669_17 <= arg_666_1.time_ and arg_666_1.time_ < var_669_17 + var_669_20 then
				local var_669_21 = (arg_666_1.time_ - var_669_17) / var_669_20
				local var_669_22 = Vector3.New(-390, -331.9, -324)

				var_669_16.localPosition = Vector3.Lerp(arg_666_1.var_.moveOldPos1034, var_669_22, var_669_21)
			end

			if arg_666_1.time_ >= var_669_17 + var_669_20 and arg_666_1.time_ < var_669_17 + var_669_20 + arg_669_0 then
				var_669_16.localPosition = Vector3.New(-390, -331.9, -324)
			end

			local var_669_23 = 0
			local var_669_24 = 0.125

			if var_669_23 < arg_666_1.time_ and arg_666_1.time_ <= var_669_23 + arg_669_0 then
				arg_666_1.talkMaxDuration = 0
				arg_666_1.dialogCg_.alpha = 1

				arg_666_1.dialog_:SetActive(true)
				SetActive(arg_666_1.leftNameGo_, true)

				local var_669_25 = arg_666_1:FormatText(StoryNameCfg[1109].name)

				arg_666_1.leftNameTxt_.text = var_669_25

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_666_1.leftNameTxt_.transform)

				arg_666_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_666_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_666_1:RecordName(arg_666_1.leftNameTxt_.text)
				SetActive(arg_666_1.iconTrs_.gameObject, false)
				arg_666_1.callingController_:SetSelectedState("normal")

				local var_669_26 = arg_666_1:GetWordFromCfg(417012161)
				local var_669_27 = arg_666_1:FormatText(var_669_26.content)

				arg_666_1.text_.text = var_669_27

				LuaForUtil.ClearLinePrefixSymbol(arg_666_1.text_)

				local var_669_28 = 5
				local var_669_29 = utf8.len(var_669_27)
				local var_669_30 = var_669_28 <= 0 and var_669_24 or var_669_24 * (var_669_29 / var_669_28)

				if var_669_30 > 0 and var_669_24 < var_669_30 then
					arg_666_1.talkMaxDuration = var_669_30

					if var_669_30 + var_669_23 > arg_666_1.duration_ then
						arg_666_1.duration_ = var_669_30 + var_669_23
					end
				end

				arg_666_1.text_.text = var_669_27
				arg_666_1.typewritter.percent = 0

				arg_666_1.typewritter:SetDirty()
				arg_666_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012161", "story_v_out_417012.awb") ~= 0 then
					local var_669_31 = manager.audio:GetVoiceLength("story_v_out_417012", "417012161", "story_v_out_417012.awb") / 1000

					if var_669_31 + var_669_23 > arg_666_1.duration_ then
						arg_666_1.duration_ = var_669_31 + var_669_23
					end

					if var_669_26.prefab_name ~= "" and arg_666_1.actors_[var_669_26.prefab_name] ~= nil then
						local var_669_32 = LuaForUtil.PlayVoiceWithCriLipsync(arg_666_1.actors_[var_669_26.prefab_name].transform, "story_v_out_417012", "417012161", "story_v_out_417012.awb")

						arg_666_1:RecordAudio("417012161", var_669_32)
						arg_666_1:RecordAudio("417012161", var_669_32)
					else
						arg_666_1:AudioAction("play", "voice", "story_v_out_417012", "417012161", "story_v_out_417012.awb")
					end

					arg_666_1:RecordHistoryTalkVoice("story_v_out_417012", "417012161", "story_v_out_417012.awb")
				end

				arg_666_1:RecordContent(arg_666_1.text_.text)
			end

			local var_669_33 = math.max(var_669_24, arg_666_1.talkMaxDuration)

			if var_669_23 <= arg_666_1.time_ and arg_666_1.time_ < var_669_23 + var_669_33 then
				arg_666_1.typewritter.percent = (arg_666_1.time_ - var_669_23) / var_669_33

				arg_666_1.typewritter:SetDirty()
			end

			if arg_666_1.time_ >= var_669_23 + var_669_33 and arg_666_1.time_ < var_669_23 + var_669_33 + arg_669_0 then
				arg_666_1.typewritter.percent = 1

				arg_666_1.typewritter:SetDirty()
				arg_666_1:ShowNextGo(true)
			end
		end
	end,
	Play417012162 = function(arg_670_0, arg_670_1)
		arg_670_1.time_ = 0
		arg_670_1.frameCnt_ = 0
		arg_670_1.state_ = "playing"
		arg_670_1.curTalkId_ = 417012162
		arg_670_1.duration_ = 5

		SetActive(arg_670_1.tipsGo_, false)

		function arg_670_1.onSingleLineFinish_()
			arg_670_1.onSingleLineUpdate_ = nil
			arg_670_1.onSingleLineFinish_ = nil
			arg_670_1.state_ = "waiting"
		end

		function arg_670_1.playNext_(arg_672_0)
			if arg_672_0 == 1 then
				arg_670_0:Play417012163(arg_670_1)
			end
		end

		function arg_670_1.onSingleLineUpdate_(arg_673_0)
			local var_673_0 = arg_670_1.actors_["1034"]
			local var_673_1 = 0

			if var_673_1 < arg_670_1.time_ and arg_670_1.time_ <= var_673_1 + arg_673_0 and not isNil(var_673_0) and arg_670_1.var_.actorSpriteComps1034 == nil then
				arg_670_1.var_.actorSpriteComps1034 = var_673_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_673_2 = 0.2

			if var_673_1 <= arg_670_1.time_ and arg_670_1.time_ < var_673_1 + var_673_2 and not isNil(var_673_0) then
				local var_673_3 = (arg_670_1.time_ - var_673_1) / var_673_2

				if arg_670_1.var_.actorSpriteComps1034 then
					for iter_673_0, iter_673_1 in pairs(arg_670_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_673_1 then
							if arg_670_1.isInRecall_ then
								local var_673_4 = Mathf.Lerp(iter_673_1.color.r, arg_670_1.hightColor2.r, var_673_3)
								local var_673_5 = Mathf.Lerp(iter_673_1.color.g, arg_670_1.hightColor2.g, var_673_3)
								local var_673_6 = Mathf.Lerp(iter_673_1.color.b, arg_670_1.hightColor2.b, var_673_3)

								iter_673_1.color = Color.New(var_673_4, var_673_5, var_673_6)
							else
								local var_673_7 = Mathf.Lerp(iter_673_1.color.r, 0.5, var_673_3)

								iter_673_1.color = Color.New(var_673_7, var_673_7, var_673_7)
							end
						end
					end
				end
			end

			if arg_670_1.time_ >= var_673_1 + var_673_2 and arg_670_1.time_ < var_673_1 + var_673_2 + arg_673_0 and not isNil(var_673_0) and arg_670_1.var_.actorSpriteComps1034 then
				for iter_673_2, iter_673_3 in pairs(arg_670_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_673_3 then
						if arg_670_1.isInRecall_ then
							iter_673_3.color = arg_670_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_673_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_670_1.var_.actorSpriteComps1034 = nil
			end

			local var_673_8 = arg_670_1.actors_["10115"].transform
			local var_673_9 = 0

			if var_673_9 < arg_670_1.time_ and arg_670_1.time_ <= var_673_9 + arg_673_0 then
				arg_670_1.var_.moveOldPos10115 = var_673_8.localPosition
				var_673_8.localScale = Vector3.New(1, 1, 1)

				arg_670_1:CheckSpriteTmpPos("10115", 7)

				local var_673_10 = var_673_8.childCount

				for iter_673_4 = 0, var_673_10 - 1 do
					local var_673_11 = var_673_8:GetChild(iter_673_4)

					if var_673_11.name == "" or not string.find(var_673_11.name, "split") then
						var_673_11.gameObject:SetActive(true)
					else
						var_673_11.gameObject:SetActive(false)
					end
				end
			end

			local var_673_12 = 0.001

			if var_673_9 <= arg_670_1.time_ and arg_670_1.time_ < var_673_9 + var_673_12 then
				local var_673_13 = (arg_670_1.time_ - var_673_9) / var_673_12
				local var_673_14 = Vector3.New(0, -2000, 0)

				var_673_8.localPosition = Vector3.Lerp(arg_670_1.var_.moveOldPos10115, var_673_14, var_673_13)
			end

			if arg_670_1.time_ >= var_673_9 + var_673_12 and arg_670_1.time_ < var_673_9 + var_673_12 + arg_673_0 then
				var_673_8.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_673_15 = arg_670_1.actors_["1034"].transform
			local var_673_16 = 0

			if var_673_16 < arg_670_1.time_ and arg_670_1.time_ <= var_673_16 + arg_673_0 then
				arg_670_1.var_.moveOldPos1034 = var_673_15.localPosition
				var_673_15.localScale = Vector3.New(1, 1, 1)

				arg_670_1:CheckSpriteTmpPos("1034", 7)

				local var_673_17 = var_673_15.childCount

				for iter_673_5 = 0, var_673_17 - 1 do
					local var_673_18 = var_673_15:GetChild(iter_673_5)

					if var_673_18.name == "" or not string.find(var_673_18.name, "split") then
						var_673_18.gameObject:SetActive(true)
					else
						var_673_18.gameObject:SetActive(false)
					end
				end
			end

			local var_673_19 = 0.001

			if var_673_16 <= arg_670_1.time_ and arg_670_1.time_ < var_673_16 + var_673_19 then
				local var_673_20 = (arg_670_1.time_ - var_673_16) / var_673_19
				local var_673_21 = Vector3.New(0, -2000, 0)

				var_673_15.localPosition = Vector3.Lerp(arg_670_1.var_.moveOldPos1034, var_673_21, var_673_20)
			end

			if arg_670_1.time_ >= var_673_16 + var_673_19 and arg_670_1.time_ < var_673_16 + var_673_19 + arg_673_0 then
				var_673_15.localPosition = Vector3.New(0, -2000, 0)
			end

			local var_673_22 = 0
			local var_673_23 = 1.125

			if var_673_22 < arg_670_1.time_ and arg_670_1.time_ <= var_673_22 + arg_673_0 then
				arg_670_1.talkMaxDuration = 0
				arg_670_1.dialogCg_.alpha = 1

				arg_670_1.dialog_:SetActive(true)
				SetActive(arg_670_1.leftNameGo_, false)

				arg_670_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_670_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_670_1:RecordName(arg_670_1:FormatText(GetTips("TIP_NARRATOR")))
				SetActive(arg_670_1.iconTrs_.gameObject, false)
				arg_670_1.callingController_:SetSelectedState("normal")

				local var_673_24 = arg_670_1:GetWordFromCfg(417012162)
				local var_673_25 = arg_670_1:FormatText(var_673_24.content)

				arg_670_1.text_.text = var_673_25

				LuaForUtil.ClearLinePrefixSymbol(arg_670_1.text_)

				local var_673_26 = 45
				local var_673_27 = utf8.len(var_673_25)
				local var_673_28 = var_673_26 <= 0 and var_673_23 or var_673_23 * (var_673_27 / var_673_26)

				if var_673_28 > 0 and var_673_23 < var_673_28 then
					arg_670_1.talkMaxDuration = var_673_28

					if var_673_28 + var_673_22 > arg_670_1.duration_ then
						arg_670_1.duration_ = var_673_28 + var_673_22
					end
				end

				arg_670_1.text_.text = var_673_25
				arg_670_1.typewritter.percent = 0

				arg_670_1.typewritter:SetDirty()
				arg_670_1:ShowNextGo(false)
				arg_670_1:RecordContent(arg_670_1.text_.text)
			end

			local var_673_29 = math.max(var_673_23, arg_670_1.talkMaxDuration)

			if var_673_22 <= arg_670_1.time_ and arg_670_1.time_ < var_673_22 + var_673_29 then
				arg_670_1.typewritter.percent = (arg_670_1.time_ - var_673_22) / var_673_29

				arg_670_1.typewritter:SetDirty()
			end

			if arg_670_1.time_ >= var_673_22 + var_673_29 and arg_670_1.time_ < var_673_22 + var_673_29 + arg_673_0 then
				arg_670_1.typewritter.percent = 1

				arg_670_1.typewritter:SetDirty()
				arg_670_1:ShowNextGo(true)
			end
		end
	end,
	Play417012163 = function(arg_674_0, arg_674_1)
		arg_674_1.time_ = 0
		arg_674_1.frameCnt_ = 0
		arg_674_1.state_ = "playing"
		arg_674_1.curTalkId_ = 417012163
		arg_674_1.duration_ = 3.33

		local var_674_0 = {
			zh = 2.666,
			ja = 3.333
		}
		local var_674_1 = manager.audio:GetLocalizationFlag()

		if var_674_0[var_674_1] ~= nil then
			arg_674_1.duration_ = var_674_0[var_674_1]
		end

		SetActive(arg_674_1.tipsGo_, false)

		function arg_674_1.onSingleLineFinish_()
			arg_674_1.onSingleLineUpdate_ = nil
			arg_674_1.onSingleLineFinish_ = nil
			arg_674_1.state_ = "waiting"
		end

		function arg_674_1.playNext_(arg_676_0)
			if arg_676_0 == 1 then
				arg_674_0:Play417012164(arg_674_1)
			end
		end

		function arg_674_1.onSingleLineUpdate_(arg_677_0)
			local var_677_0 = 0
			local var_677_1 = 0.225

			if var_677_0 < arg_674_1.time_ and arg_674_1.time_ <= var_677_0 + arg_677_0 then
				arg_674_1.talkMaxDuration = 0
				arg_674_1.dialogCg_.alpha = 1

				arg_674_1.dialog_:SetActive(true)
				SetActive(arg_674_1.leftNameGo_, true)

				local var_677_2 = arg_674_1:FormatText(StoryNameCfg[1113].name)

				arg_674_1.leftNameTxt_.text = var_677_2

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_674_1.leftNameTxt_.transform)

				arg_674_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_674_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_674_1:RecordName(arg_674_1.leftNameTxt_.text)
				SetActive(arg_674_1.iconTrs_.gameObject, true)
				arg_674_1.iconController_:SetSelectedState("hero")

				arg_674_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10115_split_1")

				arg_674_1.callingController_:SetSelectedState("normal")

				arg_674_1.keyicon_.color = Color.New(1, 1, 1)
				arg_674_1.icon_.color = Color.New(1, 1, 1)

				local var_677_3 = arg_674_1:GetWordFromCfg(417012163)
				local var_677_4 = arg_674_1:FormatText(var_677_3.content)

				arg_674_1.text_.text = var_677_4

				LuaForUtil.ClearLinePrefixSymbol(arg_674_1.text_)

				local var_677_5 = 9
				local var_677_6 = utf8.len(var_677_4)
				local var_677_7 = var_677_5 <= 0 and var_677_1 or var_677_1 * (var_677_6 / var_677_5)

				if var_677_7 > 0 and var_677_1 < var_677_7 then
					arg_674_1.talkMaxDuration = var_677_7

					if var_677_7 + var_677_0 > arg_674_1.duration_ then
						arg_674_1.duration_ = var_677_7 + var_677_0
					end
				end

				arg_674_1.text_.text = var_677_4
				arg_674_1.typewritter.percent = 0

				arg_674_1.typewritter:SetDirty()
				arg_674_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012163", "story_v_out_417012.awb") ~= 0 then
					local var_677_8 = manager.audio:GetVoiceLength("story_v_out_417012", "417012163", "story_v_out_417012.awb") / 1000

					if var_677_8 + var_677_0 > arg_674_1.duration_ then
						arg_674_1.duration_ = var_677_8 + var_677_0
					end

					if var_677_3.prefab_name ~= "" and arg_674_1.actors_[var_677_3.prefab_name] ~= nil then
						local var_677_9 = LuaForUtil.PlayVoiceWithCriLipsync(arg_674_1.actors_[var_677_3.prefab_name].transform, "story_v_out_417012", "417012163", "story_v_out_417012.awb")

						arg_674_1:RecordAudio("417012163", var_677_9)
						arg_674_1:RecordAudio("417012163", var_677_9)
					else
						arg_674_1:AudioAction("play", "voice", "story_v_out_417012", "417012163", "story_v_out_417012.awb")
					end

					arg_674_1:RecordHistoryTalkVoice("story_v_out_417012", "417012163", "story_v_out_417012.awb")
				end

				arg_674_1:RecordContent(arg_674_1.text_.text)
			end

			local var_677_10 = math.max(var_677_1, arg_674_1.talkMaxDuration)

			if var_677_0 <= arg_674_1.time_ and arg_674_1.time_ < var_677_0 + var_677_10 then
				arg_674_1.typewritter.percent = (arg_674_1.time_ - var_677_0) / var_677_10

				arg_674_1.typewritter:SetDirty()
			end

			if arg_674_1.time_ >= var_677_0 + var_677_10 and arg_674_1.time_ < var_677_0 + var_677_10 + arg_677_0 then
				arg_674_1.typewritter.percent = 1

				arg_674_1.typewritter:SetDirty()
				arg_674_1:ShowNextGo(true)
			end
		end
	end,
	Play417012164 = function(arg_678_0, arg_678_1)
		arg_678_1.time_ = 0
		arg_678_1.frameCnt_ = 0
		arg_678_1.state_ = "playing"
		arg_678_1.curTalkId_ = 417012164
		arg_678_1.duration_ = 7.57

		local var_678_0 = {
			zh = 7.566,
			ja = 6.1
		}
		local var_678_1 = manager.audio:GetLocalizationFlag()

		if var_678_0[var_678_1] ~= nil then
			arg_678_1.duration_ = var_678_0[var_678_1]
		end

		SetActive(arg_678_1.tipsGo_, false)

		function arg_678_1.onSingleLineFinish_()
			arg_678_1.onSingleLineUpdate_ = nil
			arg_678_1.onSingleLineFinish_ = nil
			arg_678_1.state_ = "waiting"
		end

		function arg_678_1.playNext_(arg_680_0)
			if arg_680_0 == 1 then
				arg_678_0:Play417012165(arg_678_1)
			end
		end

		function arg_678_1.onSingleLineUpdate_(arg_681_0)
			local var_681_0 = arg_678_1.actors_["1034"]
			local var_681_1 = 0

			if var_681_1 < arg_678_1.time_ and arg_678_1.time_ <= var_681_1 + arg_681_0 and not isNil(var_681_0) and arg_678_1.var_.actorSpriteComps1034 == nil then
				arg_678_1.var_.actorSpriteComps1034 = var_681_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_681_2 = 0.2

			if var_681_1 <= arg_678_1.time_ and arg_678_1.time_ < var_681_1 + var_681_2 and not isNil(var_681_0) then
				local var_681_3 = (arg_678_1.time_ - var_681_1) / var_681_2

				if arg_678_1.var_.actorSpriteComps1034 then
					for iter_681_0, iter_681_1 in pairs(arg_678_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_681_1 then
							if arg_678_1.isInRecall_ then
								local var_681_4 = Mathf.Lerp(iter_681_1.color.r, arg_678_1.hightColor1.r, var_681_3)
								local var_681_5 = Mathf.Lerp(iter_681_1.color.g, arg_678_1.hightColor1.g, var_681_3)
								local var_681_6 = Mathf.Lerp(iter_681_1.color.b, arg_678_1.hightColor1.b, var_681_3)

								iter_681_1.color = Color.New(var_681_4, var_681_5, var_681_6)
							else
								local var_681_7 = Mathf.Lerp(iter_681_1.color.r, 1, var_681_3)

								iter_681_1.color = Color.New(var_681_7, var_681_7, var_681_7)
							end
						end
					end
				end
			end

			if arg_678_1.time_ >= var_681_1 + var_681_2 and arg_678_1.time_ < var_681_1 + var_681_2 + arg_681_0 and not isNil(var_681_0) and arg_678_1.var_.actorSpriteComps1034 then
				for iter_681_2, iter_681_3 in pairs(arg_678_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_681_3 then
						if arg_678_1.isInRecall_ then
							iter_681_3.color = arg_678_1.hightColor1 or Color.New(0.82, 0.77, 0.62)
						else
							iter_681_3.color = Color.New(1, 1, 1)
						end
					end
				end

				arg_678_1.var_.actorSpriteComps1034 = nil
			end

			local var_681_8 = arg_678_1.actors_["1034"].transform
			local var_681_9 = 0

			if var_681_9 < arg_678_1.time_ and arg_678_1.time_ <= var_681_9 + arg_681_0 then
				arg_678_1.var_.moveOldPos1034 = var_681_8.localPosition
				var_681_8.localScale = Vector3.New(1, 1, 1)

				arg_678_1:CheckSpriteTmpPos("1034", 3)

				local var_681_10 = var_681_8.childCount

				for iter_681_4 = 0, var_681_10 - 1 do
					local var_681_11 = var_681_8:GetChild(iter_681_4)

					if var_681_11.name == "" or not string.find(var_681_11.name, "split") then
						var_681_11.gameObject:SetActive(true)
					else
						var_681_11.gameObject:SetActive(false)
					end
				end
			end

			local var_681_12 = 0.001

			if var_681_9 <= arg_678_1.time_ and arg_678_1.time_ < var_681_9 + var_681_12 then
				local var_681_13 = (arg_678_1.time_ - var_681_9) / var_681_12
				local var_681_14 = Vector3.New(0, -331.9, -324)

				var_681_8.localPosition = Vector3.Lerp(arg_678_1.var_.moveOldPos1034, var_681_14, var_681_13)
			end

			if arg_678_1.time_ >= var_681_9 + var_681_12 and arg_678_1.time_ < var_681_9 + var_681_12 + arg_681_0 then
				var_681_8.localPosition = Vector3.New(0, -331.9, -324)
			end

			local var_681_15 = 0
			local var_681_16 = 0.575

			if var_681_15 < arg_678_1.time_ and arg_678_1.time_ <= var_681_15 + arg_681_0 then
				arg_678_1.talkMaxDuration = 0
				arg_678_1.dialogCg_.alpha = 1

				arg_678_1.dialog_:SetActive(true)
				SetActive(arg_678_1.leftNameGo_, true)

				local var_681_17 = arg_678_1:FormatText(StoryNameCfg[1109].name)

				arg_678_1.leftNameTxt_.text = var_681_17

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_678_1.leftNameTxt_.transform)

				arg_678_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_678_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_678_1:RecordName(arg_678_1.leftNameTxt_.text)
				SetActive(arg_678_1.iconTrs_.gameObject, false)
				arg_678_1.callingController_:SetSelectedState("normal")

				local var_681_18 = arg_678_1:GetWordFromCfg(417012164)
				local var_681_19 = arg_678_1:FormatText(var_681_18.content)

				arg_678_1.text_.text = var_681_19

				LuaForUtil.ClearLinePrefixSymbol(arg_678_1.text_)

				local var_681_20 = 23
				local var_681_21 = utf8.len(var_681_19)
				local var_681_22 = var_681_20 <= 0 and var_681_16 or var_681_16 * (var_681_21 / var_681_20)

				if var_681_22 > 0 and var_681_16 < var_681_22 then
					arg_678_1.talkMaxDuration = var_681_22

					if var_681_22 + var_681_15 > arg_678_1.duration_ then
						arg_678_1.duration_ = var_681_22 + var_681_15
					end
				end

				arg_678_1.text_.text = var_681_19
				arg_678_1.typewritter.percent = 0

				arg_678_1.typewritter:SetDirty()
				arg_678_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012164", "story_v_out_417012.awb") ~= 0 then
					local var_681_23 = manager.audio:GetVoiceLength("story_v_out_417012", "417012164", "story_v_out_417012.awb") / 1000

					if var_681_23 + var_681_15 > arg_678_1.duration_ then
						arg_678_1.duration_ = var_681_23 + var_681_15
					end

					if var_681_18.prefab_name ~= "" and arg_678_1.actors_[var_681_18.prefab_name] ~= nil then
						local var_681_24 = LuaForUtil.PlayVoiceWithCriLipsync(arg_678_1.actors_[var_681_18.prefab_name].transform, "story_v_out_417012", "417012164", "story_v_out_417012.awb")

						arg_678_1:RecordAudio("417012164", var_681_24)
						arg_678_1:RecordAudio("417012164", var_681_24)
					else
						arg_678_1:AudioAction("play", "voice", "story_v_out_417012", "417012164", "story_v_out_417012.awb")
					end

					arg_678_1:RecordHistoryTalkVoice("story_v_out_417012", "417012164", "story_v_out_417012.awb")
				end

				arg_678_1:RecordContent(arg_678_1.text_.text)
			end

			local var_681_25 = math.max(var_681_16, arg_678_1.talkMaxDuration)

			if var_681_15 <= arg_678_1.time_ and arg_678_1.time_ < var_681_15 + var_681_25 then
				arg_678_1.typewritter.percent = (arg_678_1.time_ - var_681_15) / var_681_25

				arg_678_1.typewritter:SetDirty()
			end

			if arg_678_1.time_ >= var_681_15 + var_681_25 and arg_678_1.time_ < var_681_15 + var_681_25 + arg_681_0 then
				arg_678_1.typewritter.percent = 1

				arg_678_1.typewritter:SetDirty()
				arg_678_1:ShowNextGo(true)
			end
		end
	end,
	Play417012165 = function(arg_682_0, arg_682_1)
		arg_682_1.time_ = 0
		arg_682_1.frameCnt_ = 0
		arg_682_1.state_ = "playing"
		arg_682_1.curTalkId_ = 417012165
		arg_682_1.duration_ = 8.4

		local var_682_0 = {
			zh = 6.366,
			ja = 8.4
		}
		local var_682_1 = manager.audio:GetLocalizationFlag()

		if var_682_0[var_682_1] ~= nil then
			arg_682_1.duration_ = var_682_0[var_682_1]
		end

		SetActive(arg_682_1.tipsGo_, false)

		function arg_682_1.onSingleLineFinish_()
			arg_682_1.onSingleLineUpdate_ = nil
			arg_682_1.onSingleLineFinish_ = nil
			arg_682_1.state_ = "waiting"
			arg_682_1.auto_ = false
		end

		function arg_682_1.playNext_(arg_684_0)
			arg_682_1.onStoryFinished_()
		end

		function arg_682_1.onSingleLineUpdate_(arg_685_0)
			local var_685_0 = arg_682_1.actors_["1034"]
			local var_685_1 = 0

			if var_685_1 < arg_682_1.time_ and arg_682_1.time_ <= var_685_1 + arg_685_0 and not isNil(var_685_0) and arg_682_1.var_.actorSpriteComps1034 == nil then
				arg_682_1.var_.actorSpriteComps1034 = var_685_0:GetComponentsInChildren(typeof(Image), true)
			end

			local var_685_2 = 0.2

			if var_685_1 <= arg_682_1.time_ and arg_682_1.time_ < var_685_1 + var_685_2 and not isNil(var_685_0) then
				local var_685_3 = (arg_682_1.time_ - var_685_1) / var_685_2

				if arg_682_1.var_.actorSpriteComps1034 then
					for iter_685_0, iter_685_1 in pairs(arg_682_1.var_.actorSpriteComps1034:ToTable()) do
						if iter_685_1 then
							if arg_682_1.isInRecall_ then
								local var_685_4 = Mathf.Lerp(iter_685_1.color.r, arg_682_1.hightColor2.r, var_685_3)
								local var_685_5 = Mathf.Lerp(iter_685_1.color.g, arg_682_1.hightColor2.g, var_685_3)
								local var_685_6 = Mathf.Lerp(iter_685_1.color.b, arg_682_1.hightColor2.b, var_685_3)

								iter_685_1.color = Color.New(var_685_4, var_685_5, var_685_6)
							else
								local var_685_7 = Mathf.Lerp(iter_685_1.color.r, 0.5, var_685_3)

								iter_685_1.color = Color.New(var_685_7, var_685_7, var_685_7)
							end
						end
					end
				end
			end

			if arg_682_1.time_ >= var_685_1 + var_685_2 and arg_682_1.time_ < var_685_1 + var_685_2 + arg_685_0 and not isNil(var_685_0) and arg_682_1.var_.actorSpriteComps1034 then
				for iter_685_2, iter_685_3 in pairs(arg_682_1.var_.actorSpriteComps1034:ToTable()) do
					if iter_685_3 then
						if arg_682_1.isInRecall_ then
							iter_685_3.color = arg_682_1.hightColor2 or Color.New(0.46, 0.43, 0.35)
						else
							iter_685_3.color = Color.New(0.5, 0.5, 0.5)
						end
					end
				end

				arg_682_1.var_.actorSpriteComps1034 = nil
			end

			local var_685_8 = 0
			local var_685_9 = 0.725

			if var_685_8 < arg_682_1.time_ and arg_682_1.time_ <= var_685_8 + arg_685_0 then
				arg_682_1.talkMaxDuration = 0
				arg_682_1.dialogCg_.alpha = 1

				arg_682_1.dialog_:SetActive(true)
				SetActive(arg_682_1.leftNameGo_, true)

				local var_685_10 = arg_682_1:FormatText(StoryNameCfg[1113].name)

				arg_682_1.leftNameTxt_.text = var_685_10

				UnityEngine.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(arg_682_1.leftNameTxt_.transform)

				arg_682_1.contentImage_.sprite = getSpriteWithoutAtlas("TextureConfig/Common/board_dialogue_narrator")
				arg_682_1.contentRectCom_.sizeDelta = Vector2(1644, 265)

				arg_682_1:RecordName(arg_682_1.leftNameTxt_.text)
				SetActive(arg_682_1.iconTrs_.gameObject, true)
				arg_682_1.iconController_:SetSelectedState("hero")

				arg_682_1.icon_.sprite = getSpriteWithoutAtlas("TextureConfig/Story/Character/" .. "story_10115_split_2")

				arg_682_1.callingController_:SetSelectedState("normal")

				arg_682_1.keyicon_.color = Color.New(1, 1, 1)
				arg_682_1.icon_.color = Color.New(1, 1, 1)

				local var_685_11 = arg_682_1:GetWordFromCfg(417012165)
				local var_685_12 = arg_682_1:FormatText(var_685_11.content)

				arg_682_1.text_.text = var_685_12

				LuaForUtil.ClearLinePrefixSymbol(arg_682_1.text_)

				local var_685_13 = 29
				local var_685_14 = utf8.len(var_685_12)
				local var_685_15 = var_685_13 <= 0 and var_685_9 or var_685_9 * (var_685_14 / var_685_13)

				if var_685_15 > 0 and var_685_9 < var_685_15 then
					arg_682_1.talkMaxDuration = var_685_15

					if var_685_15 + var_685_8 > arg_682_1.duration_ then
						arg_682_1.duration_ = var_685_15 + var_685_8
					end
				end

				arg_682_1.text_.text = var_685_12
				arg_682_1.typewritter.percent = 0

				arg_682_1.typewritter:SetDirty()
				arg_682_1:ShowNextGo(false)

				if manager.audio:GetVoiceLength("story_v_out_417012", "417012165", "story_v_out_417012.awb") ~= 0 then
					local var_685_16 = manager.audio:GetVoiceLength("story_v_out_417012", "417012165", "story_v_out_417012.awb") / 1000

					if var_685_16 + var_685_8 > arg_682_1.duration_ then
						arg_682_1.duration_ = var_685_16 + var_685_8
					end

					if var_685_11.prefab_name ~= "" and arg_682_1.actors_[var_685_11.prefab_name] ~= nil then
						local var_685_17 = LuaForUtil.PlayVoiceWithCriLipsync(arg_682_1.actors_[var_685_11.prefab_name].transform, "story_v_out_417012", "417012165", "story_v_out_417012.awb")

						arg_682_1:RecordAudio("417012165", var_685_17)
						arg_682_1:RecordAudio("417012165", var_685_17)
					else
						arg_682_1:AudioAction("play", "voice", "story_v_out_417012", "417012165", "story_v_out_417012.awb")
					end

					arg_682_1:RecordHistoryTalkVoice("story_v_out_417012", "417012165", "story_v_out_417012.awb")
				end

				arg_682_1:RecordContent(arg_682_1.text_.text)
			end

			local var_685_18 = math.max(var_685_9, arg_682_1.talkMaxDuration)

			if var_685_8 <= arg_682_1.time_ and arg_682_1.time_ < var_685_8 + var_685_18 then
				arg_682_1.typewritter.percent = (arg_682_1.time_ - var_685_8) / var_685_18

				arg_682_1.typewritter:SetDirty()
			end

			if arg_682_1.time_ >= var_685_8 + var_685_18 and arg_682_1.time_ < var_685_8 + var_685_18 + arg_685_0 then
				arg_682_1.typewritter.percent = 1

				arg_682_1.typewritter:SetDirty()
				arg_682_1:ShowNextGo(true)
			end
		end
	end,
	assets = {
		"Assets/UIResources/UI_AB/TextureConfig/Background/D06a",
		"Assets/UIResources/UI_AB/TextureConfig/Background/STblack",
		"Assets/UIResources/UI_AB/TextureConfig/Background/ST77b",
		"Assets/UIResources/UI_AB/TextureConfig/Background/I16f",
		"Assets/UIResources/UI_AB/TextureConfig/Background/ST2106"
	},
	voices = {
		"story_v_out_417012.awb"
	}
}
